["import sys\n\n\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialise variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events \n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = int(event[2])\n            total_sale += avg_sale * int(event[1]) * (1 - tax_rate)\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        else:\n            avg_cost = total_cost / num_shares\n            total_sale += avg_cost * (num_shares - num_sold) * (1 - tax_rate)\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = raw_input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            cost = cost * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - cost * 0.3))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()\n            for j in range(int(temp[1]) - 1):\n                shares[j] = int(temp[2]) - shares[j]\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j / int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares) / int(temp[1]))):\n                temp2.append(sum(shares[j * int(temp[1]):(j + 1) * int(temp[1])]))\n            if len(shares) % int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares) / int(temp[1])) * int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares) / len(shares))\n\nmain()\n", "\nimport sys\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = int(event[2])\n            total_sale += avg_sale * int(event[1])\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            total_sale -= total_sale * int(tax_rate)\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            cost = cost * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - cost * 0.3))  # print the answer\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for i in range(len(lines)):\n        # Split the line\n        line = lines[i].strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":\n            commands.append([\"buy\", int(line[1]), int(line[2])])\n        elif line[0] == \"sell\":\n            commands.append([\"sell\", int(line[1]), int(line[2])])\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\":\n            commands.append([\"merge\", int(line[1])])\n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(total_price)\n\nmain()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"input.txt\",\"r\")\n    # get the number of lines\n    lines = f.readlines()\n    # initialize the total number of shares and average cost per share\n    total_shares = 0\n    average_cost = 0\n    # initialize the stock price and final sale\n    final_sale = 0\n    stock_price = 0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost*(total_shares-int(line_list[1]))+int(line_list[1])*int(line_list[2]))/total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares = total_shares//int(line_list[1])\n            # update the average cost per share\n            average_cost = average_cost*int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = int(line_list[1])\n            # calculate the final sale\n            final_sale = total_shares*(stock_price - average_cost*0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\nmain()\n", "\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares //= int(event[1])\n            total //= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.3\n            total += numShares * int(event[1])\n    print(\"{:.8f}\".format(total))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    costs = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            costs += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            costs -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            costs /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            costs = costs * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - stock * costs * 0.3)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock //= int(event[1])\n            cost = cost * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - stock * cost * 0.3))  # print the answer\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\", \"r\")\n    # get the lines\n    lines = f.readlines()\n    # initialize the total number of shares\n    total_shares = 0\n    # initialize the average cost per share\n    average_cost = 0\n    # initialize the stock price\n    stock_price = 0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost*(total_shares-int(line_list[1]))+int(line_list[1])*int(line_list[2])) / total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares = total_shares // int(line_list[1])\n            # update the average cost per share\n            average_cost = average_cost * int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = int(line_list[1])\n    # calculate the final sale\n    final_sale = total_shares * (stock_price - average_cost * 0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\n\nmain()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\", \"r\")\n    # get the number of lines\n    lines = f.readlines()\n    # initialize the total number of shares\n    total_shares = 0\n    # initialize the average cost per share\n    average_cost = 0\n    # initialize the stock price to 0\n    stock_price = 0.0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost * (total_shares - int(line_list[1])) + int(line_list[1]) * int(line_list[2])) / total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares //= int(line_list[1])\n            # update the average cost per share\n            average_cost *= int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = float(line_list[1])\n    # calculate the final sale\n    final_sale = total_shares * (stock_price - average_cost * 0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share = (cost_per_share * num_shares_to_merge) / int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share)))\n            print(final_sum)\n\nif __name__ == '__main__':\n    main()\n", "\n    import sys\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialise variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    tax_rate = 0.3\n\n    # Process events \n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            total_sale += (int(event[1]) * int(event[2]))\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            total_sale += int(event[1]) * (num_shares - num_sold)\n            total_sale -= total_sale * tax_rate\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        elif event[0] == \"merge\":\n            numShares /= int(event[1])\n            total /= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        elif event[0] == \"die\":\n            total -= total * 0.3\n            total += numShares * int(event[1])\n    print(format(total, \".8f\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned - int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\": #merge is the same as a reverse split\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"die\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3))\n\nmain()\n", "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        # Split the line\n        line = line.strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":  # buy 10 100\n            commands.append([\"buy\", int(line[1]), int(line[2])])  # [\"buy\", 10, 100]\n        elif line[0] == \"sell\":  # sell 10 100\n            commands.append([\"sell\", int(line[1]), int(line[2])])  # [\"sell\", 10, 100]\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\":\n            commands.append([\"merge\", int(line[1])])\n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(total_price)\n\nmain()\n", "import sys\n\n\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n            print(num_shares)\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1])  # average sale price of the shares\n            total_sale += avg_sale * int(event[1])  # total sale price of the shares\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            if num_shares > 0:\n                avg_cost = total_cost / num_shares\n                avg_sale = int(event[1])\n                total_sale += avg_sale * (num_shares - num_sold)\n                total_sale -= total_sale * tax_rate\n                break\n\n    print(total_sale)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\nevents = []\nfor line in sys.stdin:\n    args = line.split()\n    events.append(args)\n\nshares_owned = 0\nshare_cost = 0.0\nfor event in events:\n    if event[0] == \"buy\":\n        shares_owned += int(event[1])\n        share_cost = (share_cost * (shares_owned - int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n    elif event[0] == \"sell\":\n        shares_owned -= int(event[1])\n    elif event[0] == \"split\":\n        shares_owned *= int(event[1])\n        share_cost /= int(event[1])\n    elif event[0] == \"merge\": #merge is the same as a reverse split\n        shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n        share_cost *= int(event[1])\n    elif event[0] == \"die\":\n        share_cost = float(event[1])\n        break\n\nprint(shares_owned * share_cost * (1 - 0.3))\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\", \"r\")\n    # get the number of lines\n    lines = f.readlines()\n    # initialize the total number of shares\n    total_shares = 0\n    # initialize the average cost per share\n    average_cost = 0\n    # initialize the stock price to 0\n    stock_price = 0.0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost*(total_shares-int(line_list[1]))+int(line_list[1])*int(line_list[2])) / total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares //= int(line_list[1])\n            # update the average cost per share\n            average_cost *= int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = float(line_list[1])\n    # calculate the final sale\n    final_sale = total_shares*(stock_price - average_cost*0.3) - total_shares*average_cost\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\nmain()\n", "\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            cost = cost * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - stock * cost * 0.3))  # print the answer\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):  # iterate through the number of commands\n        temp = input().split()  # split the command\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))  # buy a share at a price\n        elif temp[0] == \"sell\":\n            shares.sort()  # sort the shares\n            for j in range(int(temp[1])):  # sell the amount of shares in the command\n                shares[j] = int(temp[2]) - shares[j]  # subtract the share price from the sale price\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j / int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares) / int(temp[1]))):\n                temp2.append(sum(shares[j * int(temp[1]):(j + 1) * int(temp[1])]))\n            if len(shares) % int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares) / int(temp[1])) * int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares) / len(shares))\n\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        # Split the line\n        line = line.strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":\n            commands.append([\"buy\", int(line[1]), int(line[2])])\n        elif line[0] == \"sell\":\n            commands.append([\"sell\", int(line[1]), int(line[2])])\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\":\n            commands.append([\"merge\", int(line[1])])\n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(total_price)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned - int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\":\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"dive\":\n            share_cost = float(event[1])\n            break\n\n    print(round(shares_owned * share_cost * (1 - 0.3), 2))\n\nmain()\n", "import sys\n\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1]) # average sale price of the shares\n            total_sale += avg_sale * int(event[1]) # total sale price of the shares\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            total_sale -= total_sale * tax_rate\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share *= (cost_per_share * num_shares_to_merge) / int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share / num_shares)))\n            print(final_sum)\n            break\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned + int(event[1])) + int(event[1]) * float(event[2])) / (shares_owned + int(event[1]))\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\":\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"die\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3))\n\nmain()\n", "\n\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares //= int(event[1])\n            total //= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.7\n            total += numShares * int(event[1])\n    print format(total, \".8f\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares /= int(event[1])\n            total /= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.7\n            total += numShares * int(event[1])\n    print(format(total, \".8f\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = raw_input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            cost = cost * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{0:.8f}\".format(stock * int(event[1]) - cost * 0.3))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    cost = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            cost += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            cost -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            cost /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            cost *= int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - cost * 0.3))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares //= int(event[1])\n            total //= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.7\n            total += numShares * int(event[1])\n    print(\"%.8f\" % total)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        line = line.strip().split()\n\n        if line[0] == \"buy\":\n            commands.append([\"buy\", int(line[1]), int(line[2])])\n        elif line[0] == \"sell\":\n            commands.append([\"sell\", int(line[1]), int(line[2])])\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\": \n            commands.append([\"merge\", int(line[1])]) \n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command \" + line[0])\n            return\n\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(total_price - total_cost)\n\nmain()\n", "\n\ndef main():\n    shares = []\n    for _ in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()\n            for j in range(int(temp[1])):\n                shares[j] = int(temp[2]) - shares[j]\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j // int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares) // int(temp[1]))):\n                temp2.append(sum(shares[j * int(temp[1]):(j + 1) * int(temp[1])]))\n            if len(shares) % int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares) // int(temp[1])) * int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares) // len(shares))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nmain()\n", "\nimport sys\n\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialise variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events \n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1])\n            total_sale += avg_sale * int(event[1])\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            total_sale -= total_sale * tax_rate\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares /= int(event[1])\n            total /= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.3 # 30% tax\n            total += numShares * int(event[1])\n    print(format(total, \".8f\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()  # sort the shares\n            for j in range(int(temp[1])):  # sell the amount of shares in the command\n                shares[j] = int(temp[2]) - shares[j]  # subtract the share price from the sale price\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j/int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares)/int(temp[1]))):\n                temp2.append(sum(shares[j*int(temp[1]):(j+1)*int(temp[1])]))\n            if len(shares)%int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares)/int(temp[1]))*int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares)/len(shares))\n\nmain()\n", "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        # Split the line\n        line = line.strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":  # buy 10 100\n            commands.append([\"buy\", int(line[1]), int(line[2])])  # [\"buy\", 10, 100]\n        elif line[0] == \"sell\":  # sell 10 100\n            commands.append([\"sell\", int(line[1]), int(line[2])])  # [\"sell\", 10, 100]\n        elif line[0] == \"split\":  # split 2\n            commands.append([\"split\", int(line[1])])  # [\"split\", 2]\n        elif line[0] == \"merge\":  # merge 2\n            commands.append([\"merge\", int(line[1])])  # [\"merge\", 2]\n        elif line[0] == \"die\":  # die 100\n            commands.append([\"die\", int(line[1])])  # [\"die\", 100]\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(total_price)\n\nmain()\n", "\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares /= int(event[1])\n            total /= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.3\n            total += numShares * int(event[1])\n    print(format(total, \".8f\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\",\"r\") # open the file\n    # get the lines\n    lines = f.readlines() # read all the lines\n    # initialize the total number of shares\n    total_shares = 0 # initialize the total number of shares\n    # initialize the average cost per share\n    average_cost = 0 # initialize the average cost per share\n    # initialize the stock price\n    stock_price = 0 # initialize the stock price\n    # iterate through the lines\n    for line in lines: # iterate through the lines\n        # split the line into a list\n        line_list = line.split() # split the line into a list\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\": # if the line starts with \"buy\"\n            # update the total number of shares\n            total_shares += int(line_list[1]) # update the total number of shares\n            # update the average cost per share\n            average_cost = (average_cost*(total_shares-int(line_list[1]))+int(line_list[1])*int(line_list[2]))/total_shares # update the average cost per share\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\": # if the line starts with \"sell\"\n            # update the total number of shares\n            total_shares -= int(line_list[1]) # update the total number of shares\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\": # if the line starts with \"split\"\n            # update the total number of shares\n            total_shares *= int(line_list[1]) # update the total number of shares\n            # update the average cost per share\n            average_cost /= int(line_list[1]) # update the average cost per share\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\": # if the line starts with \"merge\"\n            # update the total number of shares\n            total_shares = total_shares//int(line_list[1]) # update the total number of shares\n            # update the average cost per share\n            average_cost = average_cost*int(line_list[1]) # update the average cost per share\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\": # if the line starts with \"die\"\n            # update the stock price\n            stock_price = int(line_list[1]) # update the stock price\n    # calculate the final sale\n    final_sale = total_shares*(stock_price - average_cost*0.3) # calculate the final sale\n    # print the final sale\n    print(\"%.8f\" % final_sale) # print the final sale\n\nmain() # call the main function\n", "\n\nimport sys\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share *= (cost_per_share * num_shares_to_merge) // int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share // num_shares)))\n            print(final_sum)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    costs = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            costs += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            costs -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            costs /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            costs = costs * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - costs * 0.3))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()\n            for j in range(int(temp[1])):\n                shares[j] = int(temp[2]) - shares[j]\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j/int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares)/int(temp[1]))):\n                temp2.append(sum(shares[j*int(temp[1]):(j+1)*int(temp[1])]))\n            if len(shares)%int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares)/int(temp[1]))*int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares)/len(shares))\n\nmain()\n", "\n\ndef main():\n    events = []\n    while True:\n        event = input().split()\n        if event[0] == \"die\":\n            events.append(event)\n            break\n        else:\n            events.append(event)\n\n    stock = 0\n    costs = 0\n    for event in events:\n        if event[0] == \"buy\":\n            stock += int(event[1])\n            costs += int(event[1]) * int(event[2])\n        elif event[0] == \"sell\":\n            stock -= int(event[1])\n            costs -= int(event[1]) * int(event[2])\n        elif event[0] == \"split\":\n            stock *= int(event[1])\n            costs /= int(event[1])\n        elif event[0] == \"merge\":\n            stock = stock // int(event[1])\n            costs = costs * int(event[1])\n        elif event[0] == \"die\":\n            print(\"{:.8f}\".format(stock * int(event[1]) - stock * costs * 0.3), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\", \"r\")\n    # get the number of lines\n    lines = f.readlines()\n    # initialize the total number of shares and average cost per share\n    total_shares = 0\n    average_cost = 0\n    # initialize the stock price and final sale\n    final_sale = 0\n    stock_price = 0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost*(total_shares-int(line_list[1]))+int(line_list[1])*int(line_list[2])) / total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares = total_shares // int(line_list[1])\n            # update the average cost per share\n            average_cost = average_cost * int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = int(line_list[1])\n            # calculate the final sale\n            final_sale = total_shares * (stock_price - average_cost * 0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\nmain()\n", "\nimport sys\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events.\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share = (cost_per_share * num_shares_to_merge) / int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share / num_shares)))\n            print(final_sum)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1]) # average sale price of the shares\n            total_sale += avg_sale * int(event[1]) # total sale price of the shares\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            total_sale -= total_sale * tax_rate\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1])\n            total_sale += avg_sale * int(event[1]) - avg_sale * int(event[1]) * tax_rate\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // int(event[1])\n            total_cost = total_cost // int(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events.\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share = (cost_per_share * num_shares_to_merge) / int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share / num_shares)))\n            print(final_sum)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()\n            for j in range(int(temp[1])):\n                shares[j] = int(temp[2]) - shares[j]\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j/int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares)/int(temp[1]))):\n                temp2.append(sum(shares[j*int(temp[1]):(j+1)*int(temp[1])]))\n            if len(shares)%int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares)/int(temp[1]))*int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(int(sum(shares)/len(shares)))\n\nmain()\n", "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        # Split the line\n        line = line.strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":\n            commands.append([\"buy\", int(line[1]), int(line[2])])\n        elif line[0] == \"sell\":\n            commands.append([\"sell\", int(line[1]), int(line[2])])\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\":\n            commands.append([\"merge\", int(line[1])])\n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3 # 30% tax\n            break\n\n    print(round(total_price))\n\nmain()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\",\"r\")\n    # get the lines\n    lines = f.readlines()\n    # initialize the total number of shares\n    total_shares = 0\n    # initialize the average cost per share and the total cost\n    average_cost, total_cost = 0, 0\n    # initialize the stock price\n    stock_price = 0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share and the total cost\n            total_cost += int(line_list[1])*int(line_list[2])\n            average_cost = total_cost/total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares = total_shares//int(line_list[1])\n            # update the average cost per share\n            average_cost = average_cost*int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = int(line_list[1])\n    # calculate the final sale\n    final_sale = total_shares*(stock_price - average_cost*0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n\n    # Parse the lines\n    commands = []\n    for line in lines:\n        # Split the line\n        line = line.strip().split()\n\n        # Parse the command\n        if line[0] == \"buy\":\n            commands.append([\"buy\", int(line[1]), int(line[2])])\n        elif line[0] == \"sell\":\n            commands.append([\"sell\", int(line[1]), int(line[2])])\n        elif line[0] == \"split\":\n            commands.append([\"split\", int(line[1])])\n        elif line[0] == \"merge\": \n            commands.append([\"merge\", int(line[1])]) \n        elif line[0] == \"die\":\n            commands.append([\"die\", int(line[1])])\n        else:\n            print(\"Error: Invalid command\")\n            return\n\n    # Process the commands\n    shares = 0\n    total_cost = 0\n    total_price = 0\n    for command in commands:\n        if command[0] == \"buy\":\n            shares += command[1]\n            total_cost += command[1] * command[2]\n        elif command[0] == \"sell\":\n            shares -= command[1]\n            total_price += command[1] * command[2]\n        elif command[0] == \"split\":\n            shares *= command[1]\n            total_cost *= command[1]\n        elif command[0] == \"merge\":\n            if shares % command[1] != 0:\n                total_price += (shares % command[1]) * (total_cost / shares)\n                shares -= (shares % command[1])\n            shares //= command[1]\n            total_cost //= command[1]\n        elif command[0] == \"die\":\n            total_price += shares * command[1]\n            total_price -= total_price * 0.3\n            break\n\n    print(\"${0:.2f}\".format(total_price))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    # Reading in the input\n    lines = sys.stdin.readlines()\n    lines = [line.strip() for line in lines]\n    # Initializing variables\n    num_shares = 0\n    cost_per_share = 0\n    # Iterating through the events.\n    for line in lines:\n        event = line.split()\n        # Buy event\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            cost_per_share += int(event[1]) * int(event[2])\n        # Sell event\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            cost_per_share -= int(event[1]) * int(event[2])\n        # Split event\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            cost_per_share /= int(event[1])\n        # Merge event\n        elif event[0] == 'merge':\n            # Calculate how many shares will be merged\n            num_shares_to_merge = num_shares - (num_shares % int(event[1]))\n            num_shares -= num_shares_to_merge\n            cost_per_share = (cost_per_share * num_shares_to_merge) // int(event[1])\n            num_shares += 1\n        # Die event\n        elif event[0] == 'die':\n            # Calculate the final sum after taxes\n            final_sum = num_shares * (int(event[1]) - (0.3 * (int(event[1]) - cost_per_share // num_shares)))\n            print(final_sum)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    events = []\n    for line in stdin:\n        events.append(line.strip().split())\n    total = 0\n    numShares = 0\n    for event in events:\n        if event[0] == \"buy\":\n            numShares += int(event[1])\n            total += int(event[1]) * int(event[2])\n        if event[0] == \"sell\":\n            numShares -= int(event[1])\n            total -= int(event[1]) * int(event[2])\n        if event[0] == \"split\":\n            numShares *= int(event[1])\n            total *= int(event[1])\n        if event[0] == \"merge\":\n            numShares //= int(event[1])\n            total //= int(event[1])\n            if numShares % int(event[1]):\n                numShares -= numShares % int(event[1])\n                total -= total % int(event[1])\n        if event[0] == \"die\":\n            total -= total * 0.3 # 30% tax\n            total += numShares * int(event[1])\n    print(format(total, \".8f\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 1.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned + int(event[1])) + int(event[1]) * float(event[2])) / (shares_owned + int(event[1]))\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\":\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"die\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3))\n\nmain()\n", "\nimport sys\n\nevents = []\nfor line in sys.stdin:\n    args = line.split()\n    events.append(args)\n\nshares_owned = 0\nshare_cost = 0.0\nfor event in events:\n    if event[0] == \"buy\":\n        shares_owned += int(event[1])\n        share_cost = (share_cost * (shares_owned + int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n    elif event[0] == \"sell\":\n        shares_owned -= int(event[1])\n    elif event[0] == \"split\":\n        shares_owned *= int(event[1])\n        share_cost /= int(event[1])\n    elif event[0] == \"merge\":\n        shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n        share_cost *= int(event[1])\n    elif event[0] == \"die\":\n        share_cost = float(event[1])\n        break\n\nprint(shares_owned * share_cost * (1 - 0.3))\n", "\nimport sys\ndef main():\n    # Read input\n    events = []\n    for line in sys.stdin:\n        events.append(line.strip().split())\n\n    # Initialize variables\n    num_shares = 0\n    total_cost = 0\n    total_sale = 0\n    num_sold = 0\n    avg_cost = 0\n    avg_sale = 0\n    tax_rate = 0.3\n\n    # Process events\n    for event in events:\n        if event[0] == 'buy':\n            num_shares += int(event[1])\n            total_cost += int(event[1]) * int(event[2])\n        elif event[0] == 'sell':\n            num_shares -= int(event[1])\n            avg_sale = (int(event[1]) * int(event[2])) / int(event[1])\n            total_sale += avg_sale * int(event[1])\n            num_sold += int(event[1])\n        elif event[0] == 'split':\n            num_shares *= int(event[1])\n            total_cost = total_cost * int(event[1])\n        elif event[0] == 'merge':\n            num_shares = num_shares // float(event[1])\n            total_cost = total_cost // float(event[1])\n        elif event[0] == 'die':\n            avg_cost = total_cost / num_shares\n            avg_sale = int(event[1])\n            total_sale += avg_sale * (num_shares - num_sold)\n            total_sale -= total_sale * tax_rate\n            break\n\n    print(total_sale)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    shares = []\n    for i in range(int(input())):  # iterate through the number of commands\n        temp = input().split()  # split the command\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))  # buy a share at a price\n        elif temp[0] == \"sell\":\n            shares.sort()  # sort the shares\n            for j in range(int(temp[1])):  # sell the amount of shares in the command\n                shares[j] = int(temp[2]) - shares[j]  # subtract the share price from the sale price\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j/int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\":\n            temp2 = []\n            for j in range(int(len(shares)/int(temp[1]))):\n                temp2.append(sum(shares[j*int(temp[1]):(j+1)*int(temp[1])]))\n            if len(shares)%int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares)/int(temp[1]))*int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - j for j in shares]\n    print(sum(shares)/len(shares))\n\nmain()\n", "\n\ndef main():\n    # read the input file\n    f = open(\"grumpy_old_cat.txt\", \"r\")\n    # get the number of lines\n    lines = f.readlines()\n    # initialize the total number of shares\n    total_shares = 0\n    # initialize the average cost per share\n    average_cost = 0\n    # initialize the stock price to 0\n    stock_price = 0.0\n    # iterate through the lines\n    for line in lines:\n        # split the line into a list\n        line_list = line.split()\n        # if the line starts with \"buy\"\n        if line_list[0] == \"buy\":\n            # update the total number of shares\n            total_shares += int(line_list[1])\n            # update the average cost per share\n            average_cost = (average_cost * (total_shares - int(line_list[1])) + int(line_list[1]) * int(line_list[2])) / total_shares\n        # if the line starts with \"sell\"\n        elif line_list[0] == \"sell\":\n            # update the total number of shares\n            total_shares -= int(line_list[1])\n        # if the line starts with \"split\"\n        elif line_list[0] == \"split\":\n            # update the total number of shares\n            total_shares *= int(line_list[1])\n            # update the average cost per share\n            average_cost /= int(line_list[1])\n        # if the line starts with \"merge\"\n        elif line_list[0] == \"merge\":\n            # update the total number of shares\n            total_shares //= int(line_list[1])\n            # update the average cost per share\n            average_cost *= int(line_list[1])\n        # if the line starts with \"die\"\n        elif line_list[0] == \"die\":\n            # update the stock price\n            stock_price = float(line_list[1])\n    # calculate the final sale\n    final_sale = total_shares * (stock_price - average_cost * 0.3)\n    # print the final sale\n    print(\"%.8f\" % final_sale)\n\nmain()\n", "\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned - int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\":\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"dive\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3, 2))\n\nmain()\n", "\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned - int(event[1])) + int(event[1]) * float(event[2])) / shares_owned\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\":\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"dive\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3))\n\nmain()\n", "\n\ndef main():\n    shares = []\n    for _ in range(int(input())):\n        temp = input().split()\n        if temp[0] == \"buy\":\n            shares.append(int(temp[1]) * int(temp[2]))\n        elif temp[0] == \"sell\":\n            shares.sort()\n            for j in range(int(temp[1])):\n                shares[j] = int(temp[2]) - shares[j]\n        elif temp[0] == \"split\":\n            temp2 = []\n            for j in shares:\n                temp2.append(j/int(temp[1]))\n            shares = temp2\n        elif temp[0] == \"merge\" and int(temp[1]) != 0:\n            temp2 = []\n            for j in range(int(len(shares)//int(temp[1]))):\n                temp2.append(sum(shares[j*int(temp[1]):(j+1)*int(temp[1])]))\n            if len(shares) % int(temp[1]) != 0:\n                temp2.append(sum(shares[int(len(shares)//int(temp[1]))*int(temp[1]):]))\n            shares = temp2\n        else:\n            shares = [int(temp[1]) - i for i in shares]\n    print(sum(shares)/len(shares))\n\nmain()\n", "\nimport sys\n\ndef main():\n    events = []\n    for line in sys.stdin:\n        args = line.split()\n        events.append(args)\n\n    shares_owned = 0\n    share_cost = 0.0\n    for event in events:\n        if event[0] == \"buy\":\n            shares_owned += int(event[1])\n            share_cost = (share_cost * (shares_owned - int(event[1])) + float(event[1]) * float(event[2])) / shares_owned\n        elif event[0] == \"sell\":\n            shares_owned -= int(event[1])\n        elif event[0] == \"split\":\n            shares_owned *= int(event[1])\n            share_cost /= int(event[1])\n        elif event[0] == \"merge\": #merge is the same as a reverse split\n            shares_owned = (shares_owned // int(event[1])) + (shares_owned % int(event[1]))\n            share_cost *= int(event[1])\n        elif event[0] == \"die\":\n            share_cost = float(event[1])\n            break\n\n    print(shares_owned * share_cost * (1 - 0.3))\n\nmain()\n"]