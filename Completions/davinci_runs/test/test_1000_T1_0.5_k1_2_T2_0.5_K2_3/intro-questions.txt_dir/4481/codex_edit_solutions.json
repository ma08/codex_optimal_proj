["import sys\n\nimport collections\n\nn = int(sys.stdin.readline())\ns = [sys.stdin.readline() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()), reverse=True)))\n", "import collections\n\nn = int(input('Enter n: '))\ns = [input('Enter element: ') for _ in range(n)]\n\nc = collections.Counter(s).most_common()\nprint(c)\n\nfor i in c:\n    if i[1] == c[0][1]:\n        print(i[0])\n", "import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\n\nprint(\"\\n\".join(k for k, v in c.items() if v == max(c.values())))\n", "import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()), reverse=True)))\n", "\nfrom collections import Counter\n\nnum_of_votes = int(input(\"Enter number of votes: \"))\nvotes = [input(\"Enter vote: \") for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count]))) # print the most voted candidate\n", "\"\"\"\nThis program is for counting the votes for a particular candidate\n\"\"\"\n\nfrom collections import Counter\n\nNUM_OF_VOTES = int(input())\nVOTES = [input() for _ in range(NUM_OF_VOTES)]\nc = Counter(votes)\n\nMAX_COUNT = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == MAX_COUNT])))\n", "\nfrom collections import Counter\n\nnum_of_votes = int(input(\"Enter number of votes: \"))\nvotes = [input(\"Enter vote: \") for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "n = int(input())  # \u5165\u529b\na = list(map(int, input().split()))  # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\na.sort()\nprint(a)\n", "\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()), reverse=True)))\n", "\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()), reverse=True)))\n", "from collections import Counter\n\nnum_of_votes = int(input(\"Enter number of votes: \"))\nvotes = [input(\"Enter vote: \") for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "#!/usr/bin/env python3\n\nimport sys\n\nif len(sys.argv) > 1:\n    filename = sys.argv[1]\nelse:\n    filename = sys.argv[0].split(\".\")[0] + \".txt\"\ninput_file = open(filename, 'r')\n\nfor line in input_file:\n    # do something with the line\n    print(line.strip())\n\ninput_file.close()\n", "\n# this is a test\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "\n#this is a test file\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n", "\n\n#from collections import Counter\n\n#num_of_votes = int(input())\n#votes = [input() for _ in range(num_of_votes)]\n#c = Counter(votes)\n\n#max_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c.get(v) == max_count])))\n", "\nfrom collections import Counter\n\nnum_of_votes = int(input(\"Enter number of votes: \"))\nvotes = [input(\"Enter vote: \") for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))  # print the most voted candidate\n"]