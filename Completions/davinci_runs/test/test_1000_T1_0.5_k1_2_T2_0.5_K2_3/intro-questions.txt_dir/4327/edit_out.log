2022-04-12 19:27:53.723422 num operations 2
2022-04-12 19:27:53.723431 size on input set 1
2022-04-12 19:27:55.754849 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649791673,
  "object": "edit"
}
2022-04-12 19:27:55.755065 fix spelling mistakes 3 ["\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 19:27:55.755091 size on output set 3
2022-04-12 19:27:55.755098 size on input set 3
2022-04-12 19:27:58.259952 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(max(a * b, c * d))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649791675,
  "object": "edit"
}
2022-04-12 19:27:58.260121 fix syntax errors 3 ["\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(max(a * b, c * d))\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 19:27:59.644095 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649791678,
  "object": "edit"
}
2022-04-12 19:27:59.644264 fix syntax errors 3 ["\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, p = map(int, input().split())\n    print((p + a * 3) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 19:28:01.761403 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    s = input()\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649791679,
  "object": "edit"
}
2022-04-12 19:28:01.761601 fix syntax errors 3 ["def main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 19:28:01.761628 size on output set 6
2022-04-12 19:28:01.761642 num operations 2
2022-04-12 19:28:01.761648 size on input set 1
2022-04-12 19:28:04.055497 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for one pie and P//2 because we need 2 pastry for one pie\n\n# Print the result\nprint(apple_pies)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"
    }
  ],
  "created": 1649791681,
  "object": "edit"
}
2022-04-12 19:28:04.055678 fix spelling mistakes 3 ['\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n', '\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for one pie and P//2 because we need 2 pastry for one pie\n\n# Print the result\nprint(apple_pies)\n', '\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n']
2022-04-12 19:28:04.055700 size on output set 3
2022-04-12 19:28:04.055706 size on input set 3
2022-04-12 19:28:06.948429 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"
    },
    {
      "index": 1,
      "text": "\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2;\n\n# Print the result\nprint(apple_pies)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Receive input from STDIN\na, p = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = a*3 + p//2\n\n# Print the result\nprint(apple_pies)\n"
    }
  ],
  "created": 1649791684,
  "object": "edit"
}
2022-04-12 19:28:06.948622 fix syntax errors 3 ['\n#\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n', '\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2;\n\n# Print the result\nprint(apple_pies)\n', '\n\n# Receive input from STDIN\na, p = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = a*3 + p//2\n\n# Print the result\nprint(apple_pies)\n']
2022-04-12 19:28:12.832925 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\n# Receive input and convert to int\nA, P = map(int, input().split()) # A = Apples, P = Pastry\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for 1 pie and P//2 because we need 2 pastry for 1 pie\n\n# Print the result (int)\nprint(int(apple_pies))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Receive input from the user\nwords = input().split()\n\n# Create a variable to store the number of words\nnumber_of_words = len(words)\n\n# Print the number of words\nprint(number_of_words)\n"
    },
    {
      "index": 2,
      "text": "\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for one pie and P//2 because we need 2 pastry for one pie\n\n# Print the result\nprint(apple_pies)\n"
    }
  ],
  "created": 1649791686,
  "object": "edit"
}
2022-04-12 19:28:12.833191 fix syntax errors 3 ['\n\nimport math\n\n# Receive input and convert to int\nA, P = map(int, input().split()) # A = Apples, P = Pastry\n\n# Calculate the maximum number of apple pies we can make with what we have\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for 1 pie and P//2 because we need 2 pastry for 1 pie\n\n# Print the result (int)\nprint(int(apple_pies))\n', '\n\n# Receive input from the user\nwords = input().split()\n\n# Create a variable to store the number of words\nnumber_of_words = len(words)\n\n# Print the number of words\nprint(number_of_words)\n', '\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2 # A*3 because we need 3 apples for one pie and P//2 because we need 2 pastry for one pie\n\n# Print the result\nprint(apple_pies)\n']
2022-04-12 19:28:51.557386 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# # Receive input\n# A, P = map(int, input().split())\n\n# # Calculate the maximum number of apple pies we can make with what we have now.\n# apple_pies = A*3 + P//2\n\n# # Print the result\n# print(apple_pies)\n\n\n# import math\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if math.gcd(A[i], A[j]) == 1:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# #\n"
    },
    {
      "index": 1,
      "text": "\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"
    }
  ],
  "created": 1649791692,
  "object": "edit"
}
2022-04-12 19:28:51.557573 fix syntax errors 3 ['\n\n# # Receive input\n# A, P = map(int, input().split())\n\n# # Calculate the maximum number of apple pies we can make with what we have now.\n# apple_pies = A*3 + P//2\n\n# # Print the result\n# print(apple_pies)\n\n\n# import math\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if math.gcd(A[i], A[j]) == 1:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# # Calculate the number of pairs\n# pairs = 0\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if (A[i]*A[j]) % (A[i]+A[j]) == 0:\n#             pairs += 1\n\n# # Print the result\n# print(pairs)\n\n\n# # Receive input\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# #\n', '\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n', '#!/usr/bin/python\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now.\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n']
2022-04-12 19:28:51.557696 size on output set 9
