["\n\nname = input(\"Enter your name: \")\ncompacted = name[0] # initialize the first character\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i] # concatenate the string\n\nprint(\"Your compacted name is: \", compacted)\n", "\nname = input()\nnew_name = ''\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\n\nstr = input()\nfor i in range(1,len(str)):\n    if str[i] == str[i-1]:\n        str = str[:i] + str[i+1:]\n        i -= 1\n\nprint(str)\n", "\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]:\n            compact += name[i]\n    print(compact)\n\nmain()\n", "\n\nname = input('Enter your name: ')\n\ncompacted = ''\ncompacted += name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n", "\n\nname = input(\"Enter a name: \")\n\ncompacted_name = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted_name += name[i]\n\nprint(compactedName)\n", "\n\nname = input('Enter your name: ')\n\ncompacted = name[0].upper()\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n", "\n\nname = input('Enter the name: ')\n\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1]:\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", "\nname = input()\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n\n\n\n#name = input()\n#compact = \"\"\n\n#for i in range(len(name)):\n#    if name[i] != name[i - 1]:\n#        compact += name[i]\n\n#print(compact)\n", "\n\nword = input()\nfor i in range(len(word)-1):\n    if word[i] == word[i+1]:\n        word = word[:i]+word[i+2:]\n        i-=1\n\nprint(word)\n", "\n\nname = input('Enter your name: ')\n\ncompacted = [name[0]]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted.append(name[i])\n\nprint(''.join(compacted))\n", "\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]:\n            compact += name[i]\n    print(compact)\n\n\nmain()\n", "\n\ndef check_if_unique(string):\n    for i in range(len(string)):\n        for j in range(i + 1, len(string)):\n            if string[i] == string[j]:\n                return False\n    return True\n\n\ndef check_if_anagram(string1, string2):\n    if len(string1) != len(string2):\n        return False\n    else:\n        if set(string1) == set(string2):\n            return True\n        return False\n\n\ndef remove_duplicates(string):\n    new_string = \"\"\n    for i in range(len(string)):\n        if i == 0:\n            new_string += string[0]\n        elif string[i] != string[i - 1]:\n            new_string += string[i]\n    return new_string\n\n\ndef replace_spaces(string):\n    new_string = \"\"\n    for i in range(len(string)):\n        if string[i] == \" \":\n            new_string += \"%20\"\n        else:\n            new_string += string[i]\n    return new_string\n\n\ndef string_compression(string):\n    new_string = \"\"\n    count = 0\n    for i in range(len(string)):\n        if i == 0:\n            count += 1\n            new_string += string[0]\n        elif string[i] != string[i - 1]:\n            new_string += str(count)\n            count = 1\n            new_string += string[i]\n        else:\n            count += 1\n    new_string += str(count)\n    return new_string\n\n\ndef rotate_matrix(matrix):\n    n = len(matrix)\n    for layer in range(n // 2):\n        first = layer\n        last = n - 1 - layer\n        for i in range(first, last):\n            offset = i - first\n            top = matrix[first][i]\n            matrix[first][i] = matrix[last - offset][first]\n            matrix[last - offset][first] = matrix[last][last - offset]\n            matrix[last][last - offset] = matrix[i][last]\n            matrix[i][last] = top\n    return matrix\n\n\ndef zero_matrix(matrix):\n    row = []\n    column = []\n    for i in range(len(matrix)):\n        for j in range(len(matrix[i])):\n            if matrix[i][j] == 0:\n                row.append(i)\n                column.append(j)\n    for i in range(len(matrix)):\n        for j in range(len(matrix[i])):\n            if i in row or j in column:\n                matrix[i][j] = 0\n    return matrix\n\n\ndef string_rotation(string1, string2):\n    if len(string1) == len(string2):\n        for i in range(len(string1)):\n            if string1[i:] + string1[:i] == string2:\n                return True\n    return False\n", "#!/usr/bin/env python3\n\nname = input(\"Enter a string: \")\n\ni = 1\n\nwhile i < len(name):\n    if name[i] == name[i - 1]:\n        name = name[:i] + name[i + 1:]\n        i -= 1\n    else:\n        i += 1\n\nprint(name)\n", "\n# this is my name\nname = raw_input()\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "\nword = input()\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i - 1] != word[i]:\n        print(word[i], end='')\n", "\n\nname = input().strip()\nnew_name = ''\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[i]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\n\nname = input(\"Enter the string: \")\nname = name.split(\" \")\nfor i in range(len(name)):\n    name[i] = name[i].capitalize()\nprint(*name)\n\n\n\n", "word = input()\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n", "\n\nname = input()  # input a string\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n\n        print(name[i], end=\"\")\n", "\n\nname = input()\n\ni = 1\n\nwhile i < len(name):\n    if name[i] == name[i + 1]:\n        name = name[:i] + name[i + 1:]\n        i -= 1\n    else:\n        i += 1\n\nprint(name)\n", "\nword = input(\"Enter: \")\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n", "\n\nname = input()\n\ncompactedName = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i - 1]:\n        compactedName += name[i]\n\nprint(compactedName)\n", "\n# this is my name,\nname = input()\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "\n\ntext = input('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0435\u043a\u0441\u0442: ')\nfor i in range(1, len(text)):\n    if text[i] == text[i - 1]:\n        text = text[:i] + text[i + 1:]\n\nprint(f'\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {text}')\n", "\n\nname = input('enter a word: ')\n\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1]:\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", "\n\nname = input(\"Enter your name: \") #input name\n\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\nname = input(\"Enter your name: \")\n\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact) \n", "\n\n\nword = input()\nfor i in range(1,len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n", "\n\nname = input(\"Enter a string: \")\n\ni = 1\n\nwhile i < len(name):\n    if name[i] == name[i - 1]:\n        name = name[:i] + name[i + 1:]\n        i = i - 1\n    else:\n        i = i + 1\n\nprint(name)\n", "\n\nname = input(\"Enter a string: \").lower()\n\ni = 1\n\nwhile i < len(name):\n    if name[i] == name[i - 1]:\n        name = name[:i] + name[i + 1:]\n        i -= 1\n    else:\n        i += 1\n\nprint(name)\n", "\n\nname = input(\"Enter the string: \")\nname = name.split(\" \") # split the string\nfor i in range(len(name)):\n    name[i] = name[i].capitalize() # capitalize the first letter\n    print(name[i], end = \" \") # print the output\n\n\n\n", "# this is my name,\nname = input()\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "import sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact_name = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact_name[-1]:\n            compact_name += name[i]\n    print(compact_name)\n\nmain()\n", "\n\nname = input(\"Enter your name: \")\n\ncompacted = \"\"\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(\"Your compacted name is: \", compacted)\n", "\n\nname = input(\"Enter the string: \")\nname = name.split(\" \")\nfor i in range(len(name)):\n    print(name[i].capitalize(), end = \" \")\n\n\n\n", "\n\nname = input()\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print()\n        print(name[i], end=\"\")\n", "\nimport sys\n\ndef main():\n    filename = sys.stdin.readline().strip()\n    compact = filename[0]\n    for i in range(1, len(filename)):\n        if filename[i] != compact[-1]:\n            compact += filename[i]\n    print(compact)\n\nmain()\n", "\nname = input().strip()\nnew_name = name[0]\n\nfor i in range(1, len(name)):\n    if name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\n\nname = input()  # input a string \n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "\n\nname = input()  # input name\n\ncompact = \"\"\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\nfrom itertools import groupby\n\nname = input('Enter your name: ')\n\ncompact = ''.join([k for k, g in groupby(name)])\n\nprint(f'{name} compacted is: {compact}')\n", "import os\n\ndef write_to_file(text, file_name):\n    if os.path.exists(file_name):\n        with open(file_name, 'w') as f:\n            f.write(text)\n    else:\n        with open(file_name, 'w') as f:\n            f.write(text)\n\n\ndef read_from_file(file_name):\n    if os.path.exists(file_name):\n        with open(file_name, 'r') as f:\n            return f.read()\n    else:\n        return None\n\n\n\n\n\ntext = input()\nfor i in range(1,len(text)):\n    if text[i] == text[i-1]:\n        text = text[:i] + text[i+1:]\n        i -= 1\n\nprint(text)\n", "\n\nname = input()  # input name\n\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "import sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]:\n            compact += name[i]\n    print(compact)\n\n\nmain()\n", "#!/usr/bin/python3\n\nname = input().strip()\nnew_name = name[0]\n\nfor i in range(1, len(name)):\n    if name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact_name = name[0] \n    for i in range(1, len(name)):\n        if name[i] != compact_name[-1]:\n            compact_name += name[i]\n    print(compact_name)\n\nmain()\n", "\n\nname = input().strip()[::-1]\n\ni = 1\n\nwhile i < len(name) - 1:\n    if name[i] == name[i - 1]:\n        name = name[:i] + name[i + 1:] + name[i]\n        i -= 1\n    else:\n        i += 1\n\nprint(name)\n", "\n\nimport sys\n\ndef main():\n    filename = sys.stdin.readline().strip()\n    compact = filename[0] + '.'\n    for i in range(1, len(filename)):\n        if filename[i] != compact[-1] and filename[i] != '.':\n            compact += filename[i]\n    print(compact)\n\nmain()\n", "import sys\n\ndef main():\n    filename = sys.stdin.readline().strip()\n    compact = filename[0] # first character\n    for i in range(1, len(filename)): # skip first character\n        if filename[i] != compact[-1]:\n            compact += filename[i]\n    print(compact)\n\nmain()\n", "word = input()\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        print(word[i], end='')\n", "\n\ndef check_if_unique(string):\n    for i in range(len(string)):\n        for j in range(i + 1, len(string)):\n            if string[i] == string[j]:\n                return False\n    return True\n\n\ndef check_if_anagram(string1, string2):\n    if len(string1) != len(string2):\n        return False\n    else:\n        if set(string1) == set(string2):\n            return True\n        return False\n\n\ndef remove_duplicates(string):\n    new_string = \"\"\n    for i in range(len(string)):\n        if i == 0:\n            new_string += string[0]\n        elif string[i] != string[i - 1]:\n            new_string += string[i]\n    return new_string\n\n\ndef replace_spaces(string):\n    new_string = \"\"\n    for i in range(len(string)):\n        if string[i] == \" \":\n            new_string += \"%20\"\n        else:\n            new_string += string[i]\n    return new_string\n\n\ndef string_compression(string):\n    new_string = \"\"\n    count = 0\n    for i in range(len(string)):\n        if i == 0:\n            count += 1\n            new_string += string[0]\n        elif string[i] != string[i - 1]:\n            new_string += str(count)\n            count = 1\n            new_string += string[i]\n        else:\n            count += 1\n    new_string += str(count)\n    return new_string\n\n\ndef rotate_matrix(matrix):\n    n = len(matrix)\n    for layer in range(n // 2):\n        first = layer\n        last = n - 1 - layer\n        for i in range(first, last):\n            offset = i - first\n            top = matrix[first][i]\n            matrix[first][i] = matrix[last - offset][first]\n            matrix[last - offset][first] = matrix[last][last - offset]\n            matrix[last][last - offset] = matrix[i][last]\n            matrix[i][last] = top\n    return matrix\n\n\ndef zero_matrix(matrix):\n    row = []\n    column = []\n    for i in range(len(matrix)):\n        for j in range(len(matrix[i])):\n            if matrix[i][j] == 0:\n                row.append(i)\n                column.append(j)\n    for i in range(len(matrix)):\n        for j in range(len(matrix[i])):\n            if i in row or j in column:\n                matrix[i][j] = 0\n    return matrix\n\n\ndef string_rotation(string1, string2):\n    if len(string1) == len(string2):\n        for i in range(len(string1)):\n            if string1[i:] + string1[:i] == string2:\n                return True\n    return False\n\n\n", "\nprint(\"hello world\")\n", "\n\nname = input()\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "\n\nname = input(\"Enter your name: \")\n\ncompacted = name[0].upper()\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i].upper()\n\nprint(\"Your compacted name is: \", compacted)\n", "\nname = input()\ncompact = \"\"\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\nname = input()\nnew_name = ''\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i - 1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\ntext = input()\nfor i in range(1,len(text)):\n    if text[i] == text[i-1]:\n        text = text[:i] + text[i+1:]\n        i -= 1\n\nprint(text)\n", "\n\ndef compact(name):\n    compact = \"\"\n\n    for i in range(len(name)):\n        if name[i] != name[i - 1]:\n            compact += name[i]\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\n\nname = input()\n\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1]:\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", "\nname = input(\"Enter a name: \")\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\n\nname = input(\"What's your name? \")\n\ncompactedName = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compactedName += name[i]\n\nprint(compactedName)\n", "\n\nname = input().strip()\nnew_name = name[0]\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        new_name += name[i]\n\nprint(new_name)\n"]