["# This is a comment.\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(n//2)\n", "\n\ndef solve(n):\n    return n // 2 + 1;\n\n\nif __name__ == \"__main__\":\n    t = int(input());\n    for _ in range(t):\n        n = int(input());\n        print(solve(n));\n", "\nt = int(input()) # number of test cases\n\nfor i in range(t):\n    n = int(input())\n    print(n//2)\n", "def solve(n):\n    return n // 2\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(n))\n", "# This is a comment\n\nt = int(raw_input())\n\nfor i in range(t):\n    n = int(raw_input())\n    print(n//2)\n", "'''\n    This is a sample file to test the git\n'''\n\n\ndef solve(n):\n    return n / 2\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(n))\n", "\nt = int(input()) # number of test cases\n\nfor i in range(t):\n    n = int(input())\n    print(n // 2)\n", "\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(n//2)\n", "'''\n    This is a sample file to test the git.\n'''\n\n\ndef solve(n):\n    return n // 2\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(n))\n", "\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(n // 2 + 1)\n", "\n\ndef solve(n, a, b):\n    return n // 2 if n % 2 == 0 else n // 2 + 1\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, a, b = [int(x) for x in input().split()]\n        print(solve(n, a, b))\n", "\ndef solve(n):\n    return n // 2 + 1\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(n))\n", "# This is a comment\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(n//2 if n%2==0 else (n//2)+1)\n", "\"\"\"\n    This is a sample file to test the git\n\"\"\"\n\n\ndef solve(n):\n    return n // 2\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(n))\n", "#\n\nt = int(input()) # number of test cases\n\nfor i in range(t):\n    n = int(input())\n    print(n//2)\n", "\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(n // 2) \n"]