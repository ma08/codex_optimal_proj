2022-04-09 20:24:48.847954 """
In Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.
For convenience, we will call them Island 1, Island 2, ..., Island N.
There are M kinds of regular boat services between these islands.
Each service connects two islands. The i-th service connects Island a_i and Island b_i.
Cat Snuke is on Island 1 now, and wants to go to Island N.
However, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.
Help him.

-----Constraints-----
 - 3 ≤ N ≤ 200 000
 - 1 ≤ M ≤ 200 000
 - 1 ≤ a_i < b_i ≤ N
 - (a_i, b_i) \neq (1, N)
 - If i \neq j, (a_i, b_i) \neq (a_j, b_j).

-----Input-----
Input is given from Standard Input in the following format:
N M
a_1 b_1
a_2 b_2
:
a_M b_M

-----Output-----
If it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE.

-----Sample Input-----
3 2
1 2
2 3

-----Sample Output-----
POSSIBLE

"""
2022-04-09 20:24:48.847974 --------------------------
2022-04-09 20:25:04.376308 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\n# \u5404\u5cf6\u306b\u7e4b\u304c\u308b\u5cf6\u3092\u8f9e\u66f8\u306b\u683c\u7d0d\u3059\u308b\nisland_dict = {}\nfor i in range(1, n+1):\n    island_dict[i] = []\n\n# \u5cf6\u306b\u7e4b\u304c\u308b\u5cf6\u3092\u8f9e\u66f8\u306b\u683c\u7d0d\u3059\u308b\nfor _ in range(m):\n    a, b = map(int, input().split())\n    island_dict[a].append(b)\n    island_dict[b].append(a)\n\n# \u5cf61\u304b\u3089\u7e4b\u304c\u308b\u5cf6\u3092\u63a2\u3059\nisland_1_list = island_dict[1]\n\n# \u5cf61\u304b\u3089\u7e4b\u304c\u308b\u5cf6\u304b\u3089\u3001\u5cf6N\u306b\u7e4b\u304c\u308b\u5cf6\u304c\u3042\u308c\u3070POSSIBLE\u3001\u306a\u3051\u308c\u3070IMPOSSIBLE\u3092\u51fa\u529b\u3059\u308b\nfor i in island_1_list:\n    if n in island_dict[i]:\n        print('POSSIBLE')\n        break\nelse:\n    print('IMPOSSIBLE')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\nisland = [[] for i in range(N+1)]\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    island[a].append(b)\n    island[b].append(a)\n\nfor i in island[1]:\n    if N in island[i]:\n        print(\"POSSIBLE\")\n        exit()\n\nprint(\"IMPOSSIBLE\")"
    }
  ],
  "created": 1649550289,
  "id": "cmpl-4vFflfdz0n7SSiJXpuCmlJp8pAz5Q",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:25:04.376457 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\n# \u5404\u5cf6\u306b\u7e4b\u304c\u308b\u5cf6\u3092\u8f9e\u66f8\u306b\u683c\u7d0d\u3059\u308b\nisland_dict = {}\nfor i in range(1, n+1):\n    island_dict[i] = []\n\n# \u5cf6\u306b\u7e4b\u304c\u308b\u5cf6\u3092\u8f9e\u66f8\u306b\u683c\u7d0d\u3059\u308b\nfor _ in range(m):\n    a, b = map(int, input().split())\n    island_dict[a].append(b)\n    island_dict[b].append(a)\n\n# \u5cf61\u304b\u3089\u7e4b\u304c\u308b\u5cf6\u3092\u63a2\u3059\nisland_1_list = island_dict[1]\n\n# \u5cf61\u304b\u3089\u7e4b\u304c\u308b\u5cf6\u304b\u3089\u3001\u5cf6N\u306b\u7e4b\u304c\u308b\u5cf6\u304c\u3042\u308c\u3070POSSIBLE\u3001\u306a\u3051\u308c\u3070IMPOSSIBLE\u3092\u51fa\u529b\u3059\u308b\nfor i in island_1_list:\n    if n in island_dict[i]:\n        print('POSSIBLE')\n        break\nelse:\n    print('IMPOSSIBLE')"
}
2022-04-09 20:25:04.376484 REASON stop
2022-04-09 20:25:04.377823 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\nisland = [[] for i in range(N+1)]\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    island[a].append(b)\n    island[b].append(a)\n\nfor i in island[1]:\n    if N in island[i]:\n        print(\"POSSIBLE\")\n        exit()\n\nprint(\"IMPOSSIBLE\")"
}
2022-04-09 20:25:04.377891 REASON stop
