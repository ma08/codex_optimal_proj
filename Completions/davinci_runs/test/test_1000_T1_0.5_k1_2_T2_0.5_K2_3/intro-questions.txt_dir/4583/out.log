2022-04-09 20:57:20.703691 """
Sitting in a station waiting room, Joisino is gazing at her train ticket.
The ticket is numbered with four digits A, B, C and D in this order, each between 0 and 9 (inclusive).
In the formula A op1 B op2 C op3 D = 7, replace each of the symbols op1, op2 and op3 with + or - so that the formula holds.
The given input guarantees that there is a solution. If there are multiple solutions, any of them will be accepted.

-----Constraints-----
 - 0≤A,B,C,D≤9
 - All input values are integers.
 - It is guaranteed that there is a solution.

-----Input-----
Input is given from Standard Input in the following format:
ABCD

-----Output-----
Print the formula you made, including the part =7.
Use the signs + and -.
Do not print a space between a digit and a sign.

-----Sample Input-----
1222

-----Sample Output-----
1+2+2+2=7

This is the only valid solution.
"""
2022-04-09 20:57:20.703711 --------------------------
2022-04-09 20:57:30.189977 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    input_val = list(input_val.strip())\n    a = int(input_val[0])\n    b = int(input_val[1])\n    c = int(input_val[2])\n    d = int(input_val[3])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649552241,
  "id": "cmpl-4vGBFkKskr86Pn9y613GEL5abv8Kf",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:57:30.190170 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    input_val = list(input_val.strip())\n    a = int(input_val[0])\n    b = int(input_val[1])\n    c = int(input_val[2])\n    d = int(input_val[3])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 20:57:30.190215 REASON stop
2022-04-09 20:57:30.191606 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 20:57:30.191710 REASON stop
