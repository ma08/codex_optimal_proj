2022-04-09 22:57:44.174640 """
Rock-paper-scissors is a popular two-player game. In the game, each of the players uses their hand to show one of three symbols: rock, paper or scissors. If both players show the same symbol, the game is a tie. Otherwise, scissors beat paper, paper beats rock and rock beats scissors.

Sven has been studying the psychological intricacies of the game for years and has become a real master at the game, his friends not standing a chance against him in one-on-one games.

With the world championships around the corner, Sven is practicing his skills playing simultaneous games with $N$ of his friends. One such game consists of $R$ rounds. In each round, Sven and each of his friends show one of the three symbols.

When calculating the score, in each round, Sven’s symbol is independently compared to each of his friends’ symbols. Sven scores two points for every win and one point for every tie. Sven does not get points for losing.

Write a program that calculates Sven’s total score, and also his largest possible score had he known in advance all the symbols his friends would show.

-----Input-----
The first line contains the integer $R$ ($1 \le R \le 50$), the number of rounds played.

The second line contains a string of $R$ letters ‘S’, ‘P’ or ‘R’. The string represents symbols that Sven showed in each round. ‘S’ is for scissors, ‘P’ for paper, ‘R’ for rock.

The third line contains the integer $N$ ($1 \le N \le 50$), the number of friends.

Each of the following $N$ lines contains a string of $R$ letters ‘S’, ‘P’ or ‘R’. These are the symbols shown by each of the $N$ friends in each of the $R$ rounds.

-----Output-----
Output Sven’s actual score on the first line.

Output his largest possible score on the second line, assuming his friends didn’t change their symbols.

-----Examples-----
Sample Input 1:
5
SSPPR
1
SSPPR
Sample Output 1:
5
10

Sample Input 2:
5
SSPPR
2
PPRRS
RRSSP
Sample Output 2:
10
15
"""
2022-04-09 22:57:44.174673 --------------------------
2022-04-09 22:58:24.724335 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends:\n                score += 2\n            elif 'S' in friends:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                sven_ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                sven_wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                sven_wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    #if len(sven) != len(friends[0]):\n    #    print('Error: Sven and friends have different numbers of rounds')\n    #    return -1\n    #else:\n    #    rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649559464,
  "id": "cmpl-4vI3kghciAB189Tc3DOV3tpgFnTd2",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 22:58:24.724820 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:58:24.724869 REASON stop
2022-04-09 22:58:24.762982 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.763020 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends:\n                score += 2\n            elif 'S' in friends:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()"
}
2022-04-09 22:58:24.763107 REASON stop
2022-04-09 22:58:24.763451 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.763465 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                sven_ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                sven_wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                sven_wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()"
}
2022-04-09 22:58:24.763518 REASON stop
2022-04-09 22:58:24.763758 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.763770 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:58:24.763811 REASON stop
2022-04-09 22:58:24.764252 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.764316 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:58:24.764399 REASON stop
2022-04-09 22:58:24.764903 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.764935 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    #if len(sven) != len(friends[0]):\n    #    print('Error: Sven and friends have different numbers of rounds')\n    #    return -1\n    #else:\n    #    rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:58:24.765046 REASON stop
2022-04-09 22:58:24.765265 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.765272 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:58:24.765301 REASON stop
2022-04-09 22:58:24.765561 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
2022-04-09 22:58:24.765569 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:58:24.765628 REASON stop
2022-04-09 22:58:24.765869 test/intro-questions.txt_dir/4837/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4837/solutions.json'
