["def calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "\n#this is a comment\nimport math\n\ndef calculate(num):\n    if num == 1:\n        return 0\n\n    if num % 2 == 0:\n        return 1 + calculate(num/2)\n    if num % 3 == 0:\n        return 1 + calculate(2*num/3)\n    if num % 5 == 0:\n        return 1 + calculate(4*num/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "# coding: utf-8\n# TODO\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0 and solve(n / 2) >= 0:\n        return 1 + solve(n // 2)\n    if n % 3 == 0 and solve(2 * n / 3) >= 0:\n        return 1 + solve(2 * n // 3)\n    if n % 5 == 0 and solve(4 * n / 5) >= 0:\n        return 1 + solve(4 * n // 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n % 3 == 0 and n % 5 == 0:\n        return 1 + calculate(n/2) + calculate(2*n/3) + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n#this is a comment\nimport math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n != 2:\n        return 1 + calculate(n/2)\n    if n % 3 == 0 and n != 3:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0 and n != 5:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    elif n % 2 == 0:\n        return 1 + solve(n / 2)\n    elif n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    elif n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef calculate(n):\n    if n <= 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    elif n % 2 == 0:\n        return 1 + calculate(n/2)\n    elif n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    elif n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "def solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n        if n % 2 == 0:\n            return 1 + calculate(n/2)\n        if n % 3 == 0:\n            return 1 + calculate(2*n/3)\n        if n % 5 == 0:\n            return 1 + calculate(4*n/5)\n        return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n", "\n# TODO\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(int(n)))\n\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef calculate(n):\n    if n == 1: return 0\n\n    if n % 2 == 0: return 1 + calculate(n/2)\n    if n % 3 == 0: return 1 + calculate(2*n/3)\n    if n % 5 == 0: return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"]