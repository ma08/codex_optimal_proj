2022-04-12 21:04:06.985906 num operations 2
2022-04-12 21:04:06.985915 size on input set 1
2022-04-12 21:04:08.668721 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 1,
      "text": "\n#this is a comment\nimport math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 2,
      "text": "import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    }
  ],
  "created": 1649797447,
  "object": "edit"
}
2022-04-12 21:04:08.668939 fix spelling mistakes 3 ['\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', '\n#this is a comment\nimport math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', 'import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n']
2022-04-12 21:04:08.668970 size on output set 3
2022-04-12 21:04:08.668977 size on input set 3
2022-04-12 21:04:13.383524 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef calculate(n):\n    if n == 1: return 0\n\n    if n % 2 == 0: return 1 + calculate(n/2)\n    if n % 3 == 0: return 1 + calculate(2*n/3)\n    if n % 5 == 0: return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 1,
      "text": "\n#this is a comment\nimport math\n\ndef calculate(num):\n    if num == 1:\n        return 0\n\n    if num % 2 == 0:\n        return 1 + calculate(num/2)\n    if num % 3 == 0:\n        return 1 + calculate(2*num/3)\n    if num % 5 == 0:\n        return 1 + calculate(4*num/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 2,
      "text": "\n#this is a comment\nimport math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n != 2:\n        return 1 + calculate(n/2)\n    if n % 3 == 0 and n != 3:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0 and n != 5:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    }
  ],
  "created": 1649797448,
  "object": "edit"
}
2022-04-12 21:04:13.383694 fix syntax errors 3 ['import math\n\ndef calculate(n):\n    if n == 1: return 0\n\n    if n % 2 == 0: return 1 + calculate(n/2)\n    if n % 3 == 0: return 1 + calculate(2*n/3)\n    if n % 5 == 0: return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', '\n#this is a comment\nimport math\n\ndef calculate(num):\n    if num == 1:\n        return 0\n\n    if num % 2 == 0:\n        return 1 + calculate(num/2)\n    if num % 3 == 0:\n        return 1 + calculate(2*num/3)\n    if num % 5 == 0:\n        return 1 + calculate(4*num/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', '\n#this is a comment\nimport math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n != 2:\n        return 1 + calculate(n/2)\n    if n % 3 == 0 and n != 3:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0 and n != 5:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n']
2022-04-12 21:04:17.543339 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 1,
      "text": "import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n        if n % 2 == 0:\n            return 1 + calculate(n/2)\n        if n % 3 == 0:\n            return 1 + calculate(2*n/3)\n        if n % 5 == 0:\n            return 1 + calculate(4*n/5)\n        return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 2,
      "text": "import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n % 3 == 0 and n % 5 == 0:\n        return 1 + calculate(n/2) + calculate(2*n/3) + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    }
  ],
  "created": 1649797453,
  "object": "edit"
}
2022-04-12 21:04:17.543517 fix syntax errors 3 ['def calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n/2)\n    if n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    if n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', 'import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n        if n % 2 == 0:\n            return 1 + calculate(n/2)\n        if n % 3 == 0:\n            return 1 + calculate(2*n/3)\n        if n % 5 == 0:\n            return 1 + calculate(4*n/5)\n        return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', 'import math\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0 and n % 3 == 0 and n % 5 == 0:\n        return 1 + calculate(n/2) + calculate(2*n/3) + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n']
2022-04-12 21:04:21.376408 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef calculate(n):\n    if n <= 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    elif n % 2 == 0:\n        return 1 + calculate(n/2)\n    elif n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    elif n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n"
    }
  ],
  "created": 1649797457,
  "object": "edit"
}
2022-04-12 21:04:21.376670 fix syntax errors 3 ['\n\ndef calculate(n):\n    if n <= 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', '\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    elif n % 2 == 0:\n        return 1 + calculate(n/2)\n    elif n % 3 == 0:\n        return 1 + calculate(2*n/3)\n    elif n % 5 == 0:\n        return 1 + calculate(4*n/5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n', '\n\ndef calculate(n):\n    if n == 1:\n        return 0\n\n    if n % 2 == 0:\n        return 1 + calculate(n // 2)\n    if n % 3 == 0:\n        return 1 + calculate(2 * n // 3)\n    if n % 5 == 0:\n        return 1 + calculate(4 * n // 5)\n    return -1\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    print(calculate(n))\n']
2022-04-12 21:04:21.376698 size on output set 9
2022-04-12 21:04:21.376711 num operations 2
2022-04-12 21:04:21.376716 size on input set 1
2022-04-12 21:04:27.125659 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# TODO\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649797461,
  "object": "edit"
}
2022-04-12 21:04:27.125835 fix spelling mistakes 3 ["\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n# TODO\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:04:27.125874 size on output set 3
2022-04-12 21:04:27.125881 size on input set 3
2022-04-12 21:04:34.285926 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# TODO\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n# TODO\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649797467,
  "object": "edit"
}
2022-04-12 21:04:34.286195 fix syntax errors 3 ["\n# TODO\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n# TODO\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\n# def solve(n):\n#     if n == 1:\n#         return 0\n#     if n % 2 == 0:\n#         return 1 + solve(n / 2)\n#     if n % 3 == 0:\n#         return 1 + solve(2 * n / 3)\n#     if n % 5 == 0:\n#         return 1 + solve(4 * n / 5)\n#     return -1\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "def solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:04:39.382718 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649797474,
  "object": "edit"
}
2022-04-12 21:04:39.382923 fix syntax errors 3 ["\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:04:44.016664 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0 and solve(n / 2) >= 0:\n        return 1 + solve(n // 2)\n    if n % 3 == 0 and solve(2 * n / 3) >= 0:\n        return 1 + solve(2 * n // 3)\n    if n % 5 == 0 and solve(4 * n / 5) >= 0:\n        return 1 + solve(4 * n // 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(int(n)))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    elif n % 2 == 0:\n        return 1 + solve(n / 2)\n    elif n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    elif n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649797479,
  "object": "edit"
}
2022-04-12 21:04:44.016850 fix syntax errors 3 ["\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0 and solve(n / 2) >= 0:\n        return 1 + solve(n // 2)\n    if n % 3 == 0 and solve(2 * n / 3) >= 0:\n        return 1 + solve(2 * n // 3)\n    if n % 5 == 0 and solve(4 * n / 5) >= 0:\n        return 1 + solve(4 * n // 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n\ndef solve(n):\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1 + solve(n / 2)\n    if n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    if n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(int(n)))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n):\n    if n == 1:\n        return 0\n    elif n % 2 == 0:\n        return 1 + solve(n / 2)\n    elif n % 3 == 0:\n        return 1 + solve(2 * n / 3)\n    elif n % 5 == 0:\n        return 1 + solve(4 * n / 5)\n    return -1\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(solve(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 21:04:44.016883 size on output set 7
