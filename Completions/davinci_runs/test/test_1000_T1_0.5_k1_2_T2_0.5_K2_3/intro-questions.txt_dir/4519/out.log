2022-04-09 20:38:49.881542 """
You are given a binary string of length $n$ (i. e. a string consisting of $n$ characters '0' and '1').

In one move you can swap two adjacent characters of the string. What is the lexicographically minimum possible string you can obtain from the given one if you can perform no more than $k$ moves? It is possible that you do not perform any moves at all.

Note that you can swap the same pair of adjacent characters with indices $i$ and $i+1$ arbitrary (possibly, zero) number of times. Each such swap is considered a separate move.

You have to answer $q$ independent test cases.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 10^4$) — the number of test cases.

The first line of the test case contains two integers $n$ and $k$ ($1 \le n \le 10^6, 1 \le k \le n^2$) — the length of the string and the number of moves you can perform.

The second line of the test case contains one string consisting of $n$ characters '0' and '1'.

It is guaranteed that the sum of $n$ over all test cases does not exceed $10^6$ ($\sum n \le 10^6$).


-----Output-----

For each test case, print the answer on it: the lexicographically minimum possible string of length $n$ you can obtain from the given one if you can perform no more than $k$ moves.


-----Example-----
Input
3
8 5
11011010
7 9
1111100
7 11
1111100

Output
01011110
0101111
0011111



-----Note-----

In the first example, you can change the string as follows: $1\underline{10}11010 \rightarrow \underline{10}111010 \rightarrow 0111\underline{10}10 \rightarrow 011\underline{10}110 \rightarrow 01\underline{10}1110 \rightarrow 01011110$. 

In the third example, there are enough operations to make the string sorted.
"""
2022-04-09 20:38:49.881572 --------------------------
2022-04-09 20:39:05.791463 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nq = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(input())\n    for j in range(n-1):\n        if s[j] == '1' and s[j+1] == '0' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))"
    }
  ],
  "created": 1649551130,
  "id": "cmpl-4vFtKl7TJSlZ6zwLNx6WRpt7tKK1q",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:39:05.791855 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))"
}
2022-04-09 20:39:05.791897 REASON stop
2022-04-09 20:39:05.804008 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nq = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(input())\n    for j in range(n-1):\n        if s[j] == '1' and s[j+1] == '0' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))"
}
2022-04-09 20:39:05.804115 REASON stop
