["\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins (i)\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins (j)\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins (k)\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n", "\n# get input from the user\na = int(input())\nb = int(input())\nc = int(input())\nx = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(a + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(b + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(c + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == x:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n# get input from the user\na = int(input())\nb = int(input())\nc = int(input())\nx = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(a + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(b + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(c + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == x:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n\n# get input from the user\na = int(input())\nb = int(input())\nc = int(input())\nx = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(a + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(b + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(c + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == x:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n", "\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n", "\n# coding: utf-8\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\uff0cdp[i][j] = dp[i-500][j] + dp[i-100][j] + dp[i-50][j-1]\n    dp[i][0] = 1\n    dp[0][i] = 0\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(C+1):\n    dp[0][i] = 1\n\nprint(dp[X][C])\n", "\n\n# get inputs\nS = input()\nT = input()\n\n# convert the strings to lists\nS = list(S)\nT = list(T)\n\n# loop over all indices of the lists\nfor i in range(len(S)):\n    # check if the characters at the current indices are the same\n    if S[i] == T[i]:\n        # convert the characters to '*'\n        S[i] = '*'\n        T[i] = '*'\n\n# convert the lists to strings and print the strings\nprint(''.join(S))\nprint(''.join(T))\n", "\"\"\"\n\u52a8\u6001\u89c4\u5212\ndp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n", "\n\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n", "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\u91cf\n\"\"\"\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n", "\n\n# get input from the user\na = int(input())  # number of 500 yen coins\nb = int(input())  # number of 100 yen coins\nc = int(input())  # number of 50 yen coins\nx = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(a + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(b + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(c + 1):\n            # check if the total amount is X\n            if 500 * i + 100 * j + 50 * k == x:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n", "\n\na,b,c,x = map(int, input().split())\n\nnum_ways = 0\n\nfor i in range(a + 1):\n    for j in range(b + 1):\n        for k in range(c + 1):\n            if (500 * i + 100 * j + 50 * k) == x:\n                num_ways += 1\n\nprint(num_ways)\n", "\n\na, b, c, x = map(int, input().split())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(a + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(b + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(c + 1):\n            # check if the total amount is X\n            if 500 * i + 100 * j + 50 * k == x:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n", "\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i * 500 + j * 100 + k * 50 <= X:\n                if i * 500 + j * 100 + k * 50 == X:\n                    dp[i * 500 + j * 100 + k * 50][k] += 1\n                if i - 1 >= 0:\n                    dp[i * 500 + j * 100 + k * 50][k] += dp[(i - 1) * 500 + j * 100 + k * 50][k]\n                if j - 1 >= 0:\n                    dp[i * 500 + j * 100 + k * 50][k] += dp[i * 500 + (j - 1) * 100 + k * 50][k]\n                if k - 1 >= 0:\n                    dp[i * 500 + j * 100 + k * 50][k] += dp[i * 500 + j * 100 + (k - 1) * 50][k - 1]\n\nprint(dp[X][C])\n", "\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n", "\n\n# get the number of people\nn = int(input())\n\n# get the number of teams\nm = int(input())\n\n# initialize the number of ways to make teams\nnum_ways = 1\n\n# loop over the number of people\nfor i in range(n):\n    # set the number of ways to make teams\n    num_ways *= m\n\n# print the answer\nprint(num_ways)\n", "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                else:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+k*50][k]\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n", "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\u91cf\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"]