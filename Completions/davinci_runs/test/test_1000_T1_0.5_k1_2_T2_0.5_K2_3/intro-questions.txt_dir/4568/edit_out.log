2022-04-12 22:12:31.413273 num operations 2
2022-04-12 22:12:31.413290 size on input set 1
2022-04-12 22:12:34.868711 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) #\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\n\nprint(solve(input()))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) + 1\n\nprint(solve(input()))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n"
    }
  ],
  "created": 1649801551,
  "object": "edit"
}
2022-04-12 22:12:34.868910 fix spelling mistakes 3 ['\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) #применяем операцию пересечения множеств\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) + 1\n\nprint(solve(input()))\n', '\n\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n']
2022-04-12 22:12:34.868934 size on output set 3
2022-04-12 22:12:34.868941 size on input set 3
2022-04-12 22:12:37.655313 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 2,
      "text": "\nfrom collections import Counter\n\ndef solve(s):\n    return len(Counter(s[:len(s)//2]) & Counter(s[len(s)//2:])) + 1\n\nprint(solve(input()))\n"
    }
  ],
  "created": 1649801554,
  "object": "edit"
}
2022-04-12 22:12:37.655478 fix syntax errors 3 ['\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n', '\nfrom collections import Counter\n\ndef solve(s):\n    return len(Counter(s[:len(s)//2]) & Counter(s[len(s)//2:])) + 1\n\nprint(solve(input()))\n']
2022-04-12 22:12:40.327866 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input())) \n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s) // 2]) & set(s[len(s) // 2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s)%2 == 0 else 0\n\nprint(solve(input()))\n"
    }
  ],
  "created": 1649801557,
  "object": "edit"
}
2022-04-12 22:12:40.328047 fix syntax errors 3 ['\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input())) \n', '\n\ndef solve(s):\n    return len(set(s[:len(s) // 2]) & set(s[len(s) // 2:]))\n\nprint(solve(input()))\n', '\n\ndef solve(s): \n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s)%2 == 0 else 0\n\nprint(solve(input()))\n']
2022-04-12 22:12:45.364600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) #\u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0449\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n\nprint(solve(input()))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) # \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\n\nprint(solve(input()))\n"
    }
  ],
  "created": 1649801560,
  "object": "edit"
}
2022-04-12 22:12:45.364768 fix syntax errors 3 ['\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) #применяем операцию пересечения множеств, которая возвращает множество содержащее только общие элементы\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) # применяем операцию пересечения множеств\n\nprint(solve(input()))\n']
2022-04-12 22:12:45.364795 size on output set 7
2022-04-12 22:12:45.364806 num operations 2
2022-04-12 22:12:45.364811 size on input set 1
2022-04-12 22:12:49.988349 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nS = input()\n\n<<<<<<< HEAD\ndef main():\n=======\n    s_list = [s for s in S]\n>>>>>>> 1f4e4d9d5b0c5a6f2a6d0e6e0a6b5e6c5d5f5a5d\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649801565,
  "object": "edit"
}
2022-04-12 22:12:49.988520 fix spelling mistakes 3 ["\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\n<<<<<<< HEAD\ndef main():\n=======\n    s_list = [s for s in S]\n>>>>>>> 1f4e4d9d5b0c5a6f2a6d0e6e0a6b5e6c5d5f5a5d\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:12:49.988547 size on output set 2
2022-04-12 22:12:49.988553 size on input set 2
2022-04-12 22:12:53.357025 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nS = input()\n\nans = 0\nfor i in range(1, N):\n    ans = max(ans, len(set(S[:i]) & set(S[i:])))\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649801570,
  "object": "edit"
}
2022-04-12 22:12:53.357287 fix syntax errors 3 ["\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", '\nN = int(input())\nS = input()\n\nans = 0\nfor i in range(1, N):\n    ans = max(ans, len(set(S[:i]) & set(S[i:])))\nprint(ans)\n', "\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:12:56.069686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649801573,
  "object": "edit"
}
2022-04-12 22:12:56.069881 fix syntax errors 3 ["\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 22:12:56.069912 size on output set 3
