2022-04-12 18:04:46.799266 num operations 2
2022-04-12 18:04:46.799275 size on input set 1
2022-04-12 18:05:03.589160 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n"
    },
    {
      "index": 2,
      "text": "\n# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043e\u0442\u0441\u0447\u0451\u0442\n#\n# \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 n \u0434\u043e 0 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0433\u0434\u0435 n \u2014 \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.\n#\n# \u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n#\n# \u041e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c n, n>0.\n#\n# \u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n#\n# \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 n \u0434\u043e 0 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n#\n# \u041f\u0440\u0438\u043c\u0435\u0440\u044b\n#\n# \u0422\u0435\u0441\u0442 1\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 5\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 5\n# 4\n# 3\n# 2\n# 1\n# 0\n#\n#\n# \u0422\u0435\u0441\u0442 2\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 2\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 2\n# 1\n# 0\n#\n#\n# \u0422\u0435\u0441\u0442 3\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 6\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 6\n# 5\n# 4\n# 3\n# 2\n# 1\n# 0\n#\n#\n# \u0422\u0435\u0441\u0442 4\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 1\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 1\n# 0\n#\n#\n# \u0422\u0435\u0441\u0442 5\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 0\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 0\n#\n#\n# \u0422\u0435\u0441\u0442 6\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# -1\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# -1\n# 0\n"
    }
  ],
  "created": 1649786686,
  "object": "edit"
}
2022-04-12 18:05:03.589433 fix spelling mistakes 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n', '\n# Задача на программирование: обратный отсчёт\n#\n# Требуется написать программу, которая выводит на экран все числа от n до 0 включительно, где n — вводится вручную во время выполнения программы.\n#\n# Формат входных данных\n#\n# Одна строка с целым числом n, n>0.\n#\n# Формат выходных данных\n#\n# Вывести все числа от n до 0 включительно.\n#\n# Примеры\n#\n# Тест 1\n# Входные данные:\n# 5\n#\n# Вывод программы:\n# 5\n# 4\n# 3\n# 2\n# 1\n# 0\n#\n#\n# Тест 2\n# Входные данные:\n# 2\n#\n# Вывод программы:\n# 2\n# 1\n# 0\n#\n#\n# Тест 3\n# Входные данные:\n# 6\n#\n# Вывод программы:\n# 6\n# 5\n# 4\n# 3\n# 2\n# 1\n# 0\n#\n#\n# Тест 4\n# Входные данные:\n# 1\n#\n# Вывод программы:\n# 1\n# 0\n#\n#\n# Тест 5\n# Входные данные:\n# 0\n#\n# Вывод программы:\n# 0\n#\n#\n# Тест 6\n# Входные данные:\n# -1\n#\n# Вывод программы:\n# -1\n# 0\n']
2022-04-12 18:05:03.589480 size on output set 3
2022-04-12 18:05:03.589486 size on input set 3
2022-04-12 18:05:22.428328 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nfor i in range(n, -1, -1):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "\ns = int(input())\nif s > 0:\n    while s >= 0:\n        print(s)\n        s -= 1\nelse:\n    print(s)\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nfor i in range(n, -1, -1):\n    print(i)\n"
    }
  ],
  "created": 1649786703,
  "object": "edit"
}
2022-04-12 18:05:22.428492 fix syntax errors 3 ['\nn = int(input())\n\nfor i in range(n, -1, -1):\n    print(i)\n', '\ns = int(input())\nif s > 0:\n    while s >= 0:\n        print(s)\n        s -= 1\nelse:\n    print(s)\n    print(0)\n', '\nn = int(input())\n\nfor i in range(n, -1, -1):\n    print(i)\n']
2022-04-12 18:05:27.379225 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nmax_consecutive = 0\nconsecutive = 0\n\nfor i in a:\n    if i == 0:\n        max_consecutive = max(max_consecutive, consecutive)\n        consecutive = 0\n    else:\n        consecutive += 1\n\nmax_consecutive = max(max_consecutive, consecutive)\nprint(max_consecutive)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\n\n\n\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef func(n, a):\n    max_rest = 0\n    rest = 0\n\n    for i in a:\n        if i == 0:\n            max_rest = max(max_rest, rest)\n            rest = 0\n        else:\n            rest += 1\n\n    max_rest = max(max_rest, rest)\n    return max_rest\n"
    }
  ],
  "created": 1649786722,
  "object": "edit"
}
2022-04-12 18:05:27.379400 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\nmax_consecutive = 0\nconsecutive = 0\n\nfor i in a:\n    if i == 0:\n        max_consecutive = max(max_consecutive, consecutive)\n        consecutive = 0\n    else:\n        consecutive += 1\n\nmax_consecutive = max(max_consecutive, consecutive)\nprint(max_consecutive)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\n\n\n\nprint(max_rest)\n', '\n\ndef func(n, a):\n    max_rest = 0\n    rest = 0\n\n    for i in a:\n        if i == 0:\n            max_rest = max(max_rest, rest)\n            rest = 0\n        else:\n            rest += 1\n\n    max_rest = max(max_rest, rest)\n    return max_rest\n']
2022-04-12 18:05:29.206091 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n \nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n"
    }
  ],
  "created": 1649786727,
  "object": "edit"
}
2022-04-12 18:05:29.206284 fix syntax errors 3 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n \nmax_streak = 0\nstreak = 0\n\nfor i in a:\n    if i == 0:\n        max_streak = max(max_streak, streak)\n        streak = 0\n    else:\n        streak += 1\n\nmax_streak = max(max_streak, streak)\nprint(max_streak)\n']
2022-04-12 18:05:29.206310 size on output set 8
2022-04-12 18:05:29.206320 num operations 2
2022-04-12 18:05:29.206325 size on input set 1
2022-04-12 18:05:30.888107 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1649786729,
  "object": "edit"
}
2022-04-12 18:05:30.888303 fix spelling mistakes 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-12 18:05:30.888330 size on output set 1
2022-04-12 18:05:30.888336 size on input set 1
2022-04-12 18:05:42.407475 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n \n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**6)\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n \n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1649786730,
  "object": "edit"
}
2022-04-12 18:05:42.407658 fix syntax errors 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n \n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nimport sys\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**6)\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n \n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-12 18:05:42.407690 size on output set 2
