2022-04-12 20:16:17.418125 num operations 2
2022-04-12 20:16:17.418134 size on input set 1
2022-04-12 20:16:55.208008 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD') \n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794577,
  "object": "edit"
}
2022-04-12 20:16:55.208288 fix spelling mistakes 3 ["\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD') \n", "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print('TBD')\n", "\n\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:16:55.208318 size on output set 3
2022-04-12 20:16:55.208324 size on input set 3
2022-04-12 20:17:38.429318 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1649794615,
  "object": "edit"
}
2022-04-12 20:17:38.429560 NO RESULT
2022-04-12 20:17:38.429569 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-12 20:17:38.429598 NO RESULT
2022-04-12 20:17:38.429605 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-12 20:17:38.429694 NO RESULT
2022-04-12 20:17:38.429698 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-12 20:17:38.429727 fix syntax errors 0 []
2022-04-12 20:17:40.270960 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "from datetime import datetime\n\n# input date\ns = input(\"input date: \")\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794658,
  "object": "edit"
}
2022-04-12 20:17:40.271219 fix syntax errors 3 ["\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\n\nfrom datetime import datetime\n\n# input date\ns = input()\n\n# convert date\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process date\nif date <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n", 'from datetime import datetime\n\n# input date\ns = input("input date: ")\n\n# convert date\ndate = datetime.strptime(s, \'%Y/%m/%d\')\n\n# process date\nif date <= datetime(2019, 4, 30):\n    print(\'Heisei\')\nelse:\n    print(\'TBD\')\n']
2022-04-12 20:17:42.098711 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794660,
  "object": "edit"
}
2022-04-12 20:17:42.098878 fix syntax errors 3 ["\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\n\nfrom datetime import datetime\n\n# input\ns = input()\n\n# convert\ndate = datetime.strptime(s, '%Y/%m/%d')\n\n# process\nif date <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:17:42.098901 size on output set 5
2022-04-12 20:17:42.098910 num operations 2
2022-04-12 20:17:42.098914 size on input set 1
2022-04-12 20:17:44.655839 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "from datetime import datetime\n\n\n# datetime(year, month, day)\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794662,
  "object": "edit"
}
2022-04-12 20:17:44.656033 fix spelling mistakes 3 ["from datetime import datetime\n\n\n# datetime(year, month, day)\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\n\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:17:44.656057 size on output set 3
2022-04-12 20:17:44.656065 size on input set 3
2022-04-12 20:17:50.145698 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from datetime import datetime\n\n\n# datetime(year, month, day)\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "import datetime\n\n\ns = input()\n\nif datetime.datetime.strptime(s, '%Y/%m/%d') <= datetime.datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\nwith open(sys.argv[1]) as f:\n    for line in f:\n        l = line.strip()\n        print(l)\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794664,
  "object": "edit"
}
2022-04-12 20:17:50.145862 fix syntax errors 3 ["from datetime import datetime\n\n\n# datetime(year, month, day)\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n", "import datetime\n\n\ns = input()\n\nif datetime.datetime.strptime(s, '%Y/%m/%d') <= datetime.datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "import sys\n\n\nwith open(sys.argv[1]) as f:\n    for line in f:\n        l = line.strip()\n        print(l)\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:17:52.731854 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import datetime\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794670,
  "object": "edit"
}
2022-04-12 20:17:52.732020 fix syntax errors 3 ["from datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\n\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\nfrom datetime import datetime\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:17:55.999478 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30): #datetime.datetime.strptime(s, '%Y/%m/%d') <= datetime.datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30): # datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30)\n    print('Heisei')\nelse:\n    print('TBD')\n"
    }
  ],
  "created": 1649794672,
  "object": "edit"
}
2022-04-12 20:17:55.999645 fix syntax errors 3 ["\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30): #datetime.datetime.strptime(s, '%Y/%m/%d') <= datetime.datetime(2019, 4, 30):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 5, 1):\n    print('Heisei')\nelse:\n    print('TBD')\n", "\nfrom datetime import datetime\n\ns = input()\n\nif datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30): # datetime.strptime(s, '%Y/%m/%d') <= datetime(2019, 4, 30)\n    print('Heisei')\nelse:\n    print('TBD')\n"]
2022-04-12 20:17:55.999669 size on output set 9
