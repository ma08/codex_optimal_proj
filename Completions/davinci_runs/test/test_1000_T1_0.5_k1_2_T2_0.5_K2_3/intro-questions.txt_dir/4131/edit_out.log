2022-04-12 17:29:02.850695 num operations 2
2022-04-12 17:29:02.850712 size on input set 1
2022-04-12 17:29:08.995058 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649784545,
  "object": "edit"
}
2022-04-12 17:29:08.995277 fix spelling mistakes 3 ['\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-12 17:29:08.995315 size on output set 3
2022-04-12 17:29:08.995321 size on input set 3
2022-04-12 17:29:18.700738 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j, p in enumerate(prefectures[i], 1):\n        print(str(i).zfill(6) + str(j).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\nwith open(sys.argv[1], \"r\") as f:\n    N, M = map(int, f.readline().split())\n    cities = []\n    for i in range(M):\n        cities.append(list(map(int, f.readline().split())))\n\n    cities.sort(key=lambda x: x[1])\n\n    prefectures = [[] for _ in range(N)]\n\n    for city in cities:\n        prefectures[city[0]].append(city[1])\n\n    for i in range(N):\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 2,
      "text": "import os\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n\nos.system(\"pause\")\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649784549,
  "object": "edit"
}
2022-04-12 17:29:18.700957 fix syntax errors 3 ['\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j, p in enumerate(prefectures[i], 1):\n        print(str(i).zfill(6) + str(j).zfill(6))\n', 'import sys\n\n\nwith open(sys.argv[1], "r") as f:\n    N, M = map(int, f.readline().split())\n    cities = []\n    for i in range(M):\n        cities.append(list(map(int, f.readline().split())))\n\n    cities.sort(key=lambda x: x[1])\n\n    prefectures = [[] for _ in range(N)]\n\n    for city in cities:\n        prefectures[city[0]].append(city[1])\n\n    for i in range(N):\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n', 'import os\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n\nos.system("pause")\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-12 17:29:23.710486 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\na, b = map(int, input().split())\nprint(a * b)\n"
    },
    {
      "index": 2,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649784558,
  "object": "edit"
}
2022-04-12 17:29:23.710682 fix syntax errors 3 ['\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\na, b = map(int, input().split())\nprint(a * b)\n', '\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-12 17:29:28.520441 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    if len(prefectures[i]) != 0:\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649784563,
  "object": "edit"
}
2022-04-12 17:29:28.520701 NO RESULT
2022-04-12 17:29:28.520712 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-12 17:29:28.520764 fix syntax errors 2 ['\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    if len(prefectures[i]) != 0:\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-12 17:29:28.520786 size on output set 7
2022-04-12 17:29:28.520795 num operations 2
2022-04-12 17:29:28.520800 size on input set 1
2022-04-12 17:29:35.471777 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())  # N:\u90fd\u9053\u5e9c\u770c\u6570, M:\u5e02\u753a\u6751\u6570\n    prefecture_cities = defaultdict(list)  # key:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, value:\u5e02\u753a\u6751\u6570\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, Y:\u5e02\u753a\u6751\u756a\u53f7\n        prefecture_cities[P].append(Y)  # P\u3067\u30bd\u30fc\u30c8\u3057\u3066Y\u3092\u8ffd\u52a0\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649784568,
  "object": "edit"
}
2022-04-12 17:29:35.471958 fix spelling mistakes 3 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())  # N:都道府県数, M:市町村数\n    prefecture_cities = defaultdict(list)  # key:都道府県番号, value:市町村数リスト\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:都道府県番号, Y:市町村番号\n        prefecture_cities[P].append(Y)  # PでソートしてYを追加\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 17:29:35.472002 size on output set 3
2022-04-12 17:29:35.472009 size on input set 3
2022-04-12 17:29:37.708365 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649784575,
  "object": "edit"
}
2022-04-12 17:29:37.708547 fix syntax errors 3 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 17:29:39.892093 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649784577,
  "object": "edit"
}
2022-04-12 17:29:39.892340 fix syntax errors 3 ["\nfrom collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 17:29:46.081027 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\n\n\ndef main():\n    N, M = map(int, input().split())  # N:\u90fd\u9053\u5e9c\u770c\u6570, M:\u5e02\u753a\u6751\u6570\n    prefecture_cities = defaultdict(list)  # key:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, value:\u5e02\u753a\u6751\u6570\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, Y:\u5e02\u753a\u6751\u756a\u53f7\n        prefecture_cities[P].append(Y)  # P\u3067\u30bd\u30fc\u30c8\u3057\u3066Y\u3092\u8ffd\u52a0\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())  # N:\u90fd\u9053\u5e9c\u770c\u6570, M:\u5e02\u753a\u6751\u6570\n    prefecture_cities = defaultdict(list)  # key:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, value:\u5e02\u753a\u6751\u6570\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, Y:\u5e02\u753a\u6751\u756a\u53f7\n        prefecture_cities[P].append(Y)  # P\u3067\u30bd\u30fc\u30c8\u3055\u308c\u305fY\u3092\u8ffd\u52a0\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649784579,
  "object": "edit"
}
2022-04-12 17:29:46.081237 fix syntax errors 3 ["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\n\ndef main():\n    N, M = map(int, input().split())  # N:都道府県数, M:市町村数\n    prefecture_cities = defaultdict(list)  # key:都道府県番号, value:市町村数リスト\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:都道府県番号, Y:市町村番号\n        prefecture_cities[P].append(Y)  # PでソートしてYを追加\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())  # N:都道府県数, M:市町村数\n    prefecture_cities = defaultdict(list)  # key:都道府県番号, value:市町村数リスト\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:都道府県番号, Y:市町村番号\n        prefecture_cities[P].append(Y)  # PでソートされたYを追加\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 17:29:46.081274 size on output set 9
