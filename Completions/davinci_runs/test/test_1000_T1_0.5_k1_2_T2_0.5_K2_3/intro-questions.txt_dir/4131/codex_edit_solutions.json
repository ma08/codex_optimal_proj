["from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())  # N:\u90fd\u9053\u5e9c\u770c\u6570, M:\u5e02\u753a\u6751\u6570\n    prefecture_cities = defaultdict(list)  # key:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, value:\u5e02\u753a\u6751\u6570\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, Y:\u5e02\u753a\u6751\u756a\u53f7\n        prefecture_cities[P].append(Y)  # P\u3067\u30bd\u30fc\u30c8\u3055\u308c\u305fY\u3092\u8ffd\u52a0\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\nwith open(sys.argv[1], \"r\") as f:\n    N, M = map(int, f.readline().split())\n    cities = []\n    for i in range(M):\n        cities.append(list(map(int, f.readline().split())))\n\n    cities.sort(key=lambda x: x[1])\n\n    prefectures = [[] for _ in range(N)]\n\n    for city in cities:\n        prefectures[city[0]].append(city[1])\n\n    for i in range(N):\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\na, b = map(int, input().split())\nprint(a * b)\n", "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j, p in enumerate(prefectures[i], 1):\n        print(str(i).zfill(6) + str(j).zfill(6))\n", "import os\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n\nos.system(\"pause\")\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n", "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    if len(prefectures[i]) != 0:\n        for j in range(len(prefectures[i])):\n            print(str(i).zfill(6) + str(j+1).zfill(6))\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of list\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\n\ndef main():\n    N, M = map(int, input().split())  # N:\u90fd\u9053\u5e9c\u770c\u6570, M:\u5e02\u753a\u6751\u6570\n    prefecture_cities = defaultdict(list)  # key:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, value:\u5e02\u753a\u6751\u6570\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())  # P:\u90fd\u9053\u5e9c\u770c\u756a\u53f7, Y:\u5e02\u753a\u6751\u756a\u53f7\n        prefecture_cities[P].append(Y)  # P\u3067\u30bd\u30fc\u30c8\u3057\u3066Y\u3092\u8ffd\u52a0\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n", "\nfrom collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, city in prefecture_city.items():\n        city.sort()\n        for i, city in enumerate(city, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]