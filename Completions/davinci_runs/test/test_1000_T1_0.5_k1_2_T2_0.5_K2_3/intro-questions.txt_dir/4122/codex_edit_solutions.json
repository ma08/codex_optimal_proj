["\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) < 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) > 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value <= 0:\n        print(n)\n        return\n\n        return\n\n    if min_value + next_max_value >= 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) >= 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# Problem\n# https://atcoder.jp/contests/abc078/tasks/abc078_a\n\n\n# Solution\nprint(['A', 'B', 'C', 'D', 'F'][int(input()) // 10])\n", "\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) <= 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < 0:\n        print(n)\n        return\n\n    if min_value + next_max_value > 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "# Problem\n\n'''\nYou are given a positive integer H and a non-empty array of positive integers d.\n\nYour goal is to find the minimum number of minutes needed to bring H down to 0.\n\nEach minute, you can reduce H by any non-negative integer amount (including 0)\nby using any of the integers in the array d.\n\nFor example, if H=20 and d=[3,5], it takes 2 minutes to bring H down to 0.\n\nThe first minute, you can reduce it by 3.\n\nThe second minute, you can reduce it by 5.\n\nWrite a function:\n\ndef solution(H, d)\n\nthat, given a positive integer H and a non-empty array of positive integers d,\nreturns the minimum number of minutes needed to bring H down to 0.\n\nIf it's impossible to bring H down to 0, the function should return -1.\n\nFor example, given H=20 and d=[3,5], the function should return 2,\nas explained above.\n\nGiven H=20 and d=[1,10,2], the function should return 3.\n\nThe first minute, you can reduce H by 1.\n\nThe second minute, you can reduce it by 10.\n\nThe third minute, you can reduce it by 2.\n\nGiven H=10 and d=[1,2,3,4,5,6,7,8,9,10], the function should return 5.\n\nThe first minute, you can reduce H by 1.\n\nThe second minute, you can reduce it by 2.\n\nThe third minute, you can reduce it by 3.\n\nThe fourth minute, you can reduce it by 4.\n\nThe fifth minute, you can reduce it by 5.\n\nGiven H=1 and d=[1,1,1,1,1,1,1,1,1,1], the function should return -1.\n\nIt's impossible to reduce H in any number of minutes.\n\nGiven H=1 and d=[1], the function should return 1.\n\nGiven H=1 and d=[2], the function should return -1.\n\nGiven H=4 and d=[3,4], the function should return 2.\n\nThe first minute, you can reduce H by 3.\n\nThe second minute, you can reduce it by 4.\n\nGiven H=4 and d=[3,5], the function should return 3.\n\nThe first minute, you can reduce H by 3.\n\nThe second minute, you can reduce it by 3.\n\nThe third minute, you can reduce it by 3.\n\nGiven H=4 and d=[3,3,3], the function should return -1.\n\nGiven H=10 and d=[3,4,5], the function should return 3.\n\nThe first minute, you can reduce H by 3.\n\nThe second minute, you can reduce it by 4.\n\nThe third minute, you can reduce it by 3.\n\nGiven H=10 and d=[3,3,3], the function should return -1.\n\nGiven H=100 and d=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\n# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n", "# coding: utf-8\n# Solution\n\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n", "# Solution\n\nH, n = map(int, input().split())\nd = list(map(int, input().split()))\n\nhp = H\nminute = 0\n\nfor i in range(n):\n    hp += d[i]\n    minute += 1\n    if hp <= 0:\n        print(minute)\n        break\nelse:\n    print(-1)\n", "\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) >= 0:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value <= 0:\n        print(n)\n        return\n\n        return\n\n    if min_value + next_max_value >= 0:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) < 0:\n        print(-1)\n        return\n\n    # # find the max\n    # max_index, max_value = 0, arr[0]\n    # for i in range(1, n):\n    #     if arr[i] > max_value:\n    #         max_index = i\n    #         max_value = arr[i]\n\n    # # find the min\n    # min_index, min_value = 0, arr[0]\n    # for i in range(1, n):\n    #     if arr[i] < min_value:\n    #         min_index = i\n    #         min_value = arr[i]\n\n    # # find the next max\n    # next_max_index, next_max_value = 0, arr[0]\n    # for i in range(1, n):\n    #     if arr[i] > next_max_value and i != max_index:\n    #         next_max_index = i\n    #         next_max_value = arr[i]\n\n    # # find the next min\n    # next_min_index, next_min_value = 0, arr[0]\n    # for i in range(1, n):\n    #     if arr[i] < next_min_value and i != min_index:\n    #         next_min_index = i\n    #         next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    # if max_value + next_min_value < 0:\n    #     print(n)\n    #     return\n\n    # if min_value + next_max_value > 0:\n    #     print(n)\n    #     return\n\n    # if max_index > min_index:\n    #     print(n + min_index + 1)\n    #     return\n\n    # if min_index > max_index:\n    #     print(n + max_index + 1)\n    #     return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) == 0:\n        print(-1)\n        return\n\n    if arr[0] > 0:\n        print(n - 1)\n        return\n\n    if arr[0] < 0:\n        print(n - 1)\n        return\n\n    if arr[0] == 0:\n        print(n)\n        return\n\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    h, n = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    if sum(arr) > h:\n        print(-1)\n        return\n\n    # find the max\n    max_index, max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n\n    # find the min\n    min_index, min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    # find the next max\n    next_max_index, next_max_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] > next_max_value and i != max_index:\n            next_max_index = i\n            next_max_value = arr[i]\n\n    # find the next min\n    next_min_index, next_min_value = 0, arr[0]\n    for i in range(1, n):\n        if arr[i] < next_min_value and i != min_index:\n            next_min_index = i\n            next_min_value = arr[i]\n\n    # print(max_index, max_value)\n    # print(min_index, min_value)\n    # print(next_max_index, next_max_value)\n    # print(next_min_index, next_min_value)\n\n    if max_value + next_min_value < h:\n        print(n)\n        return\n\n    if min_value + next_max_value > h:\n        print(n)\n        return\n\n    if max_index > min_index:\n        print(n + min_index + 1)\n        return\n\n    if min_index > max_index:\n        print(n + max_index + 1)\n        return\n\n    print(-1)\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    arr.sort()\n\n    if n % 2 == 0:\n        print(arr[n//2] - arr[n//2 - 1] + 1)\n    else:\n        print(0)\n\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"]