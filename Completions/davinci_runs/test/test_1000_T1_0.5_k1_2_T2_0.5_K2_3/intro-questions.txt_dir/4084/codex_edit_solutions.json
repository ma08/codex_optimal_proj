["\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n", "\nprint(\"yes\")\n", "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n%(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 1:\n    print(0)\nelse:\n    print(min(n-a,b-a))\n", "\nn = int(input())\nfor i in range(n):\n    s = input()\n    if s == \"P=NP\":\n        print(\"skipped\")\n    else:\n        a, b = map(int, s.split(\"+\"))\n        print(a + b)\n", "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b)-1)\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\nn, a, b = map(int, input().split())\n\nif a > b:\n    n = n % (a + b)\n\n    if n <= a:\n        print(n)\n    else:\n        print(a)\nelse:\n    print(n % (a + b))\n", "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nprint(min(n,a))\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n/(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\nn,a,b = map(int,input().split())\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n", "print(\"Hello World\")\n", "print(input().replace(\"2017\",\"2018\"))\n", "\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\nn, a, b = map(int, input().split())\nn = n % (a + b)\nif n <= a:\n    print(n)\nelse:\n    print(a)\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern\n# we can simply count the number of blue balls we have\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern\n    print(a)\n", "\n\nn,a,b = map(int,input().split())\nprint(min(n,a))\n"]