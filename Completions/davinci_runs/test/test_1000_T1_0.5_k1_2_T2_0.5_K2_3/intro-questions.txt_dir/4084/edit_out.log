2022-04-12 16:53:36.233865 num operations 2
2022-04-12 16:53:36.233882 size on input set 1
2022-04-12 16:53:38.588364 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 1:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 2,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n"
    }
  ],
  "created": 1649782416,
  "object": "edit"
}
2022-04-12 16:53:38.588578 fix spelling mistakes 3 ['\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n', '\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 1:\n    print(0)\nelse:\n    print(min(n,a))\n', '\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n']
2022-04-12 16:53:38.588599 size on output set 3
2022-04-12 16:53:38.588606 size on input set 3
2022-04-12 16:53:41.827812 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print(input().replace(\"2017\",\"2018\"))\n"
    },
    {
      "index": 1,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nprint(min(n,a))\n"
    },
    {
      "index": 2,
      "text": "print(\"Hello World\")\n"
    }
  ],
  "created": 1649782418,
  "object": "edit"
}
2022-04-12 16:53:41.827992 fix syntax errors 3 ['print(input().replace("2017","2018"))\n', '\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nprint(min(n,a))\n', 'print("Hello World")\n']
2022-04-12 16:53:44.574308 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 1:\n    print(0)\nelse:\n    print(min(n-a,b-a))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,a,b = map(int,input().split())\nprint(min(n,a))\n"
    },
    {
      "index": 2,
      "text": "\n"
    }
  ],
  "created": 1649782421,
  "object": "edit"
}
2022-04-12 16:53:44.574510 fix syntax errors 3 ['\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 1:\n    print(0)\nelse:\n    print(min(n-a,b-a))\n', '\n\nn,a,b = map(int,input().split())\nprint(min(n,a))\n', '\n']
2022-04-12 16:53:46.427787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b)-1)\n"
    },
    {
      "index": 2,
      "text": "\nn,a,b = map(int,input().split())\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n"
    }
  ],
  "created": 1649782424,
  "object": "edit"
}
2022-04-12 16:53:46.427972 fix syntax errors 3 ['\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n', '\n\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b)-1)\n', '\nn,a,b = map(int,input().split())\n\nif b == 0:\n    print(0)\nelse:\n    print(min(n,b))\n']
2022-04-12 16:53:46.428014 size on output set 9
2022-04-12 16:53:46.428028 num operations 2
2022-04-12 16:53:46.428033 size on input set 1
2022-04-12 16:53:48.554228 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n/(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    }
  ],
  "created": 1649782426,
  "object": "edit"
}
2022-04-12 16:53:48.554409 fix spelling mistakes 3 ["\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n/(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"]
2022-04-12 16:53:48.554442 size on output set 3
2022-04-12 16:53:48.554448 size on input set 3
2022-04-12 16:53:53.638395 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\nn, a, b = map(int, input().split())\n\nif a > b:\n    n = n % (a + b)\n\n    if n <= a:\n        print(n)\n    else:\n        print(a)\nelse:\n    print(n % (a + b))\n"
    },
    {
      "index": 2,
      "text": "\nn, a, b = map(int, input().split())\nn = n % (a + b)\nif n <= a:\n    print(n)\nelse:\n    print(a)\n"
    }
  ],
  "created": 1649782428,
  "object": "edit"
}
2022-04-12 16:53:53.638566 fix syntax errors 3 ["\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", '\nn, a, b = map(int, input().split())\n\nif a > b:\n    n = n % (a + b)\n\n    if n <= a:\n        print(n)\n    else:\n        print(a)\nelse:\n    print(n % (a + b))\n', '\nn, a, b = map(int, input().split())\nn = n % (a + b)\nif n <= a:\n    print(n)\nelse:\n    print(a)\n']
2022-04-12 16:53:58.721792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(\"yes\")\n"
    },
    {
      "index": 1,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n/(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nfor i in range(n):\n    s = input()\n    if s == \"P=NP\":\n        print(\"skipped\")\n    else:\n        a, b = map(int, s.split(\"+\"))\n        print(a + b)\n"
    }
  ],
  "created": 1649782433,
  "object": "edit"
}
2022-04-12 16:53:58.721973 fix syntax errors 3 ['\nprint("yes")\n', "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n/(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", '\nn = int(input())\nfor i in range(n):\n    s = input()\n    if s == "P=NP":\n        print("skipped")\n    else:\n        a, b = map(int, s.split("+"))\n        print(a + b)\n']
2022-04-12 16:54:02.904179 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern\n# we can simply count the number of blue balls we have\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern\n    print(a)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n%(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    }
  ],
  "created": 1649782438,
  "object": "edit"
}
2022-04-12 16:54:02.904374 fix syntax errors 3 ["\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern\n# we can simply count the number of blue balls we have\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern\n    print(a)\n", "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n%(a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"]
2022-04-12 16:54:02.904419 size on output set 9
