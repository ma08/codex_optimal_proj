["n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(sum(a[:n-1]))\n", "n, k = [int(i) for i in input().split()]\nprices = [int(i) for i in input().split()]\n\nprices.sort()\n\nprint(sum(prices[:k]))\n", "import sys\nn, k = [int(i) for i in sys.stdin.readline().split()]\nprices = [int(i) for i in sys.stdin.readline().split()]\nprices.sort()\nprint(sum(prices[:k])) \n", "import sys\nn, k = [int(i) for i in sys.stdin.readline().split()]\nprices = [int(i) for i in sys.stdin.readline().split()]\nprices.sort()\nprint(sum(prices[:k]))\n", "\nimport sys\n\nn, k = [int(i) for i in sys.stdin.readline().split()]\nprices = [int(i) for i in sys.stdin.readline().split()]\nprices.sort()\n\nprint(sum(prices[:k]))\n", "import sys\nimport heapq\n\nn, k = map(int, sys.stdin.readline().split())\np = list(map(int, sys.stdin.readline().split()))\npq = []\n\nn, k = map(int, sys.stdin.readline().split()) #n\uac1c\uc758 \uc218\uac00 \uc8fc\uc5b4\uc9c0\uace0, k\uac1c\uc758 \uc218\ub97c \ubf51\ub294 \uac83\uc774\ub2e4.\np = list(map(int, sys.stdin.readline().split()))\n\nprint(sum(sorted(p)[:k]))\n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())  # n\uac1c\uc758 \uc218\uac00 \uc8fc\uc5b4\uc9c0\uace0, k\uac1c\uc758 \uc218\ub97c \ubf51\ub294 \uac83\uc774\ub2e4.\np = list(map(int, sys.stdin.readline().split()))\n\nprint(sum(sorted(p)[:k]))\n", "n, k = [int(i) for i in input().split()]\nprices = [int(i) for i in input().split()]\nprices.sort()\n\nprint(sum(prices[:k]), end=\"\")\n", "import sys\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str,result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str,result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n# def dfs(x, cnt):\n#     if cnt == m:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(x, n+1):\n#         result[cnt] = i\n#         dfs(i, cnt+1)\n\n# n, m = map(int, sys.stdin.readline().split())\n# result = [0] * m\n# dfs(1, 0)\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n\n\n\n\n# def dfs(x):\n#     if x == n:\n#         print(' '.join(map(str, result)))\n#         return\n\n#     for i in range(1, n+1):\n#         if not visited[i]:\n#             visited[i] = True\n#             result[x] = i\n#             dfs(x+1)\n#             visited[i] = False\n\n# n = int(sys.stdin.readline())\n# visited = [False] * (n+1)\n# result = [0] * n\n# dfs(0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, k = [int(i) for i in sys.stdin.readline().split()]\nprices = [int(i) for i in sys.stdin.readline().split()]\nprices.sort()\nprint(sum(prices[:k]))\n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\np = list(map(int, sys.stdin.readline().split()))\nprint(sum(sorted(p)[:k]))\n", "\nimport sys\n\nn, k = [int(i) for i in sys.stdin.readline().split()]\nprices = [int(i) for i in sys.stdin.readline().split()]\nprices.sort()\n\nprint(sum(prices[:k])) \n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\np = list(map(int, sys.stdin.readline().split()))\n\nprint(sum(sorted(p)[:k]))\n"]