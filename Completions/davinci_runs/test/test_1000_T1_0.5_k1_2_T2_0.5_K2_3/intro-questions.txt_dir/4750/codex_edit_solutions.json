["\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())  # map(function, iterable)\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, r2)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())  # taking input\n        if l1 == r1:  # if l1 and r1 is same then print l1 and l2\n            print(l1, l2) \n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == r2:\n        a = l1\n        b = r2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == l2:\n        a = l1\n        b = l2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == r2:\n        a = l1\n        b = r2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == l2:\n        a = l1\n        b = l2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b: print(a, c)\n    elif c == d: print(a, c)\n    elif a == c: print(a, b)\n    elif b == d: print(a, b)\n    elif a == d: print(a, c)\n    elif b == c: print(a, b)\n    else: print(a, c)\n", "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, r2)\n    else:\n        print(l1, l2)\n", "\n# Solution\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r2\n2. If ranges are overlapping, then a = l1, b = r1\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in range(1, 1+n):\n        if i not in d:\n            print(i)\n            break\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution 2\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r2:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "import sys\n\n\ndef solve(meal_cost, tip_percent, tax_percent):\n    tip = meal_cost * tip_percent / 100\n    tax = meal_cost * tax_percent / 100\n    totalCost = round(meal_cost + tip + tax)\n    print(totalCost)\n\nif __name__ == '__main__':\n    meal_cost = float(input())\n\n    tip_percent = int(input())\n\n    tax_percent = int(input())\n\n    solve(meal_cost, tip_percent, tax_percent)\n", "\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split()) # map(function, iterable)\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "n = int(input())\n\nfor i in range(n):\n    nums = list(map(int, input().split()))\n    nums.sort()\n    print(nums[0], nums[2])\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n        b = l2\n    elif r1 == r2:\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n    elif r1 == l2:\n        a = l1\n\n    print(a, b)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())  # taking input\n        if l1 == r1:  # if l1 and r1 is same then print l1 and l2\n            print(l1, l2) \n        else:\n            print(l1, l2+1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n", "q = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n", "\n\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n\n2. If ranges are overlapping, then a = l1, b = l2\n\n3. If ranges are identical, then a = l1, b = l2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    print(l1, l2, end=' ')\n", "\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, r2)\n", "\n# test\n# SOLUTION\n\nqueries = int(input())\nfor _ in range(queries):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n# SOLUTION\n\nqueries = int(input())\nfor _ in range(queries):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n# Solution 1\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n", "\n\n# Solution 1:\n# for i in range(int(input())):\n#     l1, r1, l2, r2 = map(int, input().split())\n#     print(l1, l2)\n", "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r2\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r1\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "def main():\n    n, k = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == k:\n        print(a[n-1])\n    else:\n        print(a[k-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# solution\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n\ndef two_segment():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 != r1:\n            l2 += 1\n        print(l1, l2)\n\ntwo_segment()\n", "\ndef main():\n    q = int(input()) # number of test cases\n    for _ in range(q): # iterate through each test case\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2) # print the answer\n        else:\n            print(l1, l2+1) # print the answer\n\nif __name__ == \"__main__\":\n    main()\n", "q = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split()) # map(function, iterable)\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "# Problem\n# https://www.codechef.com/problems/FLOW007\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, r2)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, r2)\n", "\n\n", "\n\ndef two_segment():\n    q = int(input())\n    for i in range(q):\n        a, b, c, d = map(int, input().split())\n        if a == b:\n            print(a, c)\n        elif c == d:\n            print(a, c)\n        else:\n            print(a, c + 1)\n\ntwo_segment()\n", "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or a = l2, b = r1)\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = r1\n    else:\n        a = l2\n        b = r2\n\n    print(a, b)\n", "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\n\n# q = int(input())\n# for i in range(q):\n#     l1, r1, l2, r2 = [int(x) for x in input().split()]\n#     print(l1, l2)\n\na = [1, 2, 3, 4, 5]\nb = [3, 4, 5, 6, 7]\nprint([x for x in a if x in b])\n", "n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b or c == d or a == c or b == d or a == d or b == c:\n        print(a, b)\n        continue\n    print(a, c)\n", "\n\ndef two_segment():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2 + 1)\n        elif l2 == r2:\n            print(l1, l2 + 1)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segment()\n", "\n\nfrom operator import itemgetter\n\ndef mergeSort(arr, n):\n    if n == 1:\n        return arr\n    mid = n//2\n    left = mergeSort(arr[:mid], mid)\n    right = mergeSort(arr[mid:], n - mid)\n    return merge(left, right)\n\ndef merge(left, right):\n    result = []\n    i, j = 0, 0\n    while i < len(left) and j < len(right):\n        if left[i][0] < right[j][0]:\n            result.append(left[i])\n            i += 1\n        else:\n            result.append(right[j])\n            j += 1\n    result += left[i:]\n    result += right[j:]\n    return result\n\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr = mergeSort(arr, n)\n    for i in range(n):\n        print(arr[i][0], arr[i][1])\n\nmain()\n", "\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a != b and a != c and a != d:\n        print(a, c)\n    elif b != a and b != c and b != d:\n        print(a, c)\n    elif c != a and c != b and c != d:\n        print(a, b)\n    elif d != a and d != b and d != c:\n        print(a, b)\n    else:\n        print(a, c)\n", "\n\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    print(l1, l2, end='')\n", "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if r1 != l2:\n        print(l1, l2)\n    else:\n        print(l1, l2-1)\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "q = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1 or l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2 or r1 == r2 or l1 == r2 or r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\n\nn = int(input())\nl = list(map(int, input().split()))\n\n# print(l)\n\nfor i in range(len(l)):\n    if l[i] % 2 == 0:\n        print(l[i], end=' ')\nprint()\n\nfor i in range(len(l)):\n    if l[i] % 2 != 0:\n        print(l[i], end=' ')\n", "n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    print(a, c)\n", "\n# -*- coding: utf-8 -*-\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r2\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if r1 < l2:\n        a = r1\n        b = l2\n    else:\n        a = r2\n        b = l1\n\n    print(a, b)\n", "\n\ndef twoSegments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        print(l1, l2 + 1)\n\ntwoSegments()\n", "\n# Solution\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or a = l2, b = r1)\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = r1\n    else:\n        a = l2\n        b = r2\n\n    print(a, b)\n", "q = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n\n    if a == b and c == d:\n        print(a, c)\n    elif a == c and b == d:\n        print(a, b)\n    elif a == d and b == c:\n        print(a, c)\n    elif a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    else:\n        print(a, c)\n"]