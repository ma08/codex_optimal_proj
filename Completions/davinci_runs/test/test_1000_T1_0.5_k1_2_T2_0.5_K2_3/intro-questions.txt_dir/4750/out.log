2022-04-09 21:55:15.250485 """
You are given two segments $[l_1; r_1]$ and $[l_2; r_2]$ on the $x$-axis. It is guaranteed that $l_1 < r_1$ and $l_2 < r_2$. Segments may intersect, overlap or even coincide with each other. [Image] The example of two segments on the $x$-axis. 

Your problem is to find two integers $a$ and $b$ such that $l_1 \le a \le r_1$, $l_2 \le b \le r_2$ and $a \ne b$. In other words, you have to choose two distinct integer points in such a way that the first point belongs to the segment $[l_1; r_1]$ and the second one belongs to the segment $[l_2; r_2]$.

It is guaranteed that the answer exists. If there are multiple answers, you can print any of them.

You have to answer $q$ independent queries.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 500$) — the number of queries.

Each of the next $q$ lines contains four integers $l_{1_i}, r_{1_i}, l_{2_i}$ and $r_{2_i}$ ($1 \le l_{1_i}, r_{1_i}, l_{2_i}, r_{2_i} \le 10^9, l_{1_i} < r_{1_i}, l_{2_i} < r_{2_i}$) — the ends of the segments in the $i$-th query.


-----Output-----

Print $2q$ integers. For the $i$-th query print two integers $a_i$ and $b_i$ — such numbers that $l_{1_i} \le a_i \le r_{1_i}$, $l_{2_i} \le b_i \le r_{2_i}$ and $a_i \ne b_i$. Queries are numbered in order of the input.

It is guaranteed that the answer exists. If there are multiple answers, you can print any.


-----Example-----
Input
5
1 2 1 2
2 6 3 4
2 4 1 3
1 2 1 3
1 4 5 8

Output
2 1
3 4
3 2
1 2
3 7
"""
2022-04-09 21:55:15.250513 --------------------------
2022-04-09 21:55:41.521108 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n\n2. If ranges are overlapping, then a = l1, b = r2\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)"
    }
  ],
  "created": 1649555715,
  "id": "cmpl-4vH5HsclPDPY1dVwEaWHC08gMkyc4",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:55:41.521411 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()"
}
2022-04-09 21:55:41.521448 REASON stop
2022-04-09 21:55:41.522553 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)"
}
2022-04-09 21:55:41.522617 REASON stop
2022-04-09 21:55:41.523258 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n\n2. If ranges are overlapping, then a = l1, b = r2\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)"
}
2022-04-09 21:55:41.523361 REASON stop
2022-04-09 21:55:41.524040 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)"
}
2022-04-09 21:55:41.524133 REASON stop
2022-04-09 21:55:41.524542 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)"
}
2022-04-09 21:55:41.524605 REASON stop
2022-04-09 21:55:41.524983 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)"
}
2022-04-09 21:55:41.525059 REASON stop
2022-04-09 21:55:41.525818 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 21:55:41.525921 REASON stop
2022-04-09 21:55:41.526582 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)"
}
2022-04-09 21:55:41.526676 REASON stop
