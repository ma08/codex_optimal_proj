["\ndef factorial(n):\n    if n == 0:\n        return 1\n    elif n > 0:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "\n\ndef factorial(n):\n    if n == 0:\n        return 1   \n    return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_case = int(input().strip())\n    for i in range(num_case):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n#digit array\ndigits = [1]\n#last number\nlast = 1 \n\n#number of test cases\nT = int(sys.stdin.readline())\n\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # Last digits of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    \"\"\"\n    Computes the last digit of n! (n factorial)\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "def factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\nfor _ in range(int(input())):  # number of test cases\n    print(factorial(int(input())) % 10)  # get the last digit of the factorial\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(m):\n    if m < 2:\n        return m\n    return m * factorial(m-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # Last digits of factorials\n\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())) % 10)\n\nmain()\n", "\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case,\n    and prints the last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):d\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n): \n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\n# Last digits of factorials\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]\n\n# Find the last digit of n!\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef factorial(n):  # function to calculate factorial\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)  # recursion\n\n\ndef main():\n    T = int(input())  # number of test cases\n    for i in range(T):\n        N = int(input())  # input number\n        print(str(factorial(N))[-1])  # print last digit of factorial\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef last_digit(n):\n    if n < 10:\n        return n\n\n    n_string = str(n)\n    length = len(n_string)\n    last_digit = n_string[length-1]\n    second_last_digit = n_string[length-2]\n    first_part = n_string[0:length-2]\n\n    return int(first_part) ** int(second_last_digit) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = input().strip()\n        print(last_digit(int(n)))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#digit array\ndigits = [1]\n#last digit\nlast = 1\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast = last * (j+1)\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\n\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())): \n        print(factorial(int(sys.stdin.readline()))) \n\nmain()\n", "\n\ndef factorial(n):  # calculate factorial\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])  # print last digit of factorial\n\nif __name__ == \"__main__\":\n    main()\n", "def factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    var = int(input())\n    print(var)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())): print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "\n\ndef factorial(n): \n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input(\"\"))\n    for i in range(test_cases):\n        n = int(input(\"\"))\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef factorial(n):  # function to calculate factorial\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)  # recursion\n\n\ndef main():\n    T = int(input())  # number of test cases\n    for i in range(T):\n        N = int(input())  # input number\n        print(str(factorial(N))[-1])  # print last digit of factorial\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    elif n > 0:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10 )\n", "def main():\n    file = open(\"input.txt\", \"r\")\n    test_cases = int(file.readline())\n    for i in range(test_cases):\n        n = int(file.readline())\n        print(n)\n    file.close()\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Read the number of test cases, then read each test case, and print the last\n    digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10 \n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        return n * factorial(n-1) \n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10)\n", "\n\n\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 \n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more factorials\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n", "from collections import deque\n\n\ndef main():\n    test_cases = int(input())\n    for _ in range(test_cases):\n        num_of_operations = int(input())\n        queue = deque()\n        for _ in range(num_of_operations):\n            operation = input().split()\n            if operation[0] == '1':\n                queue.append(operation[1])\n            elif operation[0] == '2':\n                queue.popleft()\n            else:\n                print(queue[0])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    elif n > 0:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10) \n", "\n\ndef fact(n):\n    return 1 if n == 1 else n * fact(n-1)\n\ndef last_digit(n):\n    return fact(n) % 10 if n > 0 else 1\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial(n): #calculate factorial\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input()) #number of test cases\n    for i in range(T):\n        N = int(input()) #number of which factorial is to be calculated\n        print(str(factorial(N))[-1]) #print last digit of factorial\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\n\ndef factorial(n):\n    if n == 0:\n        return 1;\n    return n * factorial(n-1)\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1 % 10\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline()) % 10))\n\nmain()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#digit array\ndigits = [1]\n#last digit\nlast = 1\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= (j+1)\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\nfor _ in range(int(input())):  # number of test cases \n    print(factorial(int(input())) % 10)  # get the last digit of the factorial \n", "\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        return n * factorial(n-1) \n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10)\n", "\n\ndef fact(a):\n    if a == 1:\n        return 1\n    else:\n        return a * fact(a-1)\n\ndef last_digit(n):\n    return fact(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "#!/usr/bin/env python\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline()) \n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n", "def add(a, b):\n    return a + b\n\ndef main():\n    print(add(1,2))\n\nif __name__ == '__main__':\n    main()\n", "\ndef factorial(n): # function to calculate factorial\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1) # recursion\n\ndef main():\n    T = int(input()) # number of test cases\n    for i in range(T):\n        N = int(input()) # input number\n        print(str(factorial(N))[-1]) # print last digit of factorial\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(raw_input())\n    for _ in range(num_test_cases):\n        n = int(raw_input())\n        print(factorial(n))\n\ndef factorial(n): \n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#digit array\ndigits = [1]\n#last number\nlast = 1 \n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\n\ndef main():\n    '''\n    Read the number of test cases, then read each test case, and print the last\n    digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input('enter the number of test cases: '))\n    for i in range(num_test_cases):\n        n = int(input('enter '+str(i)+'th test case: '))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        return n * factorial(n-1) \n\nprint(factorial(int(input())) % 10) \n", "\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_case = int(input().strip())\n    for i in range(num_case):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef last_digit(n):\n\n    return factorial(n) % 10\n\ndef main():\n    num_case = int(input().strip())\n    for i in range(num_case):\n        n = int(input().strip())\n        print(last_digit(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main(n):\n    return n\n\n\nif __name__ == \"__main__\":\n    print(main(1))\n", "\n\ndef main():\n    '''\n    Read the number of test cases, then read each test case, and print the last\n    digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input(\"\"))\n    for i in range(num_test_cases):\n        n = int(input(\"\"))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 \n#last factorial digits\ndigits = [1]\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more factorials\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\t\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1 \n    return n * factorial(n-1)\n\ndef last_digit(k):\n    return factorial(k) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        k = int(input())\n        print(last_digit(k))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#digit array\ndigits = [1]\n#last number\nlast = 1 \n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\t\n\t#print out the last digit\n\tprint(digits[N-1])\n", "\ndef factorial(n):\n    if n < 0:\n        return 0\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n"]