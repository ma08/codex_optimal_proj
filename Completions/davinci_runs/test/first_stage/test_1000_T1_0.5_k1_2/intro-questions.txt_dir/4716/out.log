2022-04-09 21:35:12.287487 """
Snuke has N sticks.
The length of the i-th stick is l_i.
Snuke is making a snake toy by joining K of the sticks together.
The length of the toy is represented by the sum of the individual sticks that compose it.
Find the maximum possible length of the toy.

-----Constraints-----
 - 1 \leq K \leq N \leq 50
 - 1 \leq l_i \leq 50
 - l_i is an integer.

-----Input-----
Input is given from Standard Input in the following format:
N K
l_1 l_2 l_3 ... l_{N}

-----Output-----
Print the answer.

-----Sample Input-----
5 3
1 2 3 4 5

-----Sample Output-----
12

You can make a toy of length 12 by joining the sticks of lengths 3, 4 and 5, which is the maximum possible length.
"""
2022-04-09 21:35:12.287526 --------------------------
2022-04-09 21:35:25.340372 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    N, K = map(int, input().split())\n    L = list(map(int, input().split()))\n\n    L.sort(reverse=True)\n    print(sum(L[:K]))\n    \"\"\"\n    N, K = map(int, input().split())\n    L = sorted(map(int, input().split()), reverse=True)\n    print(sum(L[:K]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[:k]))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649554512,
  "id": "cmpl-4vGlssvDOrEoL66Oi3CcslJsjPT3P",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:35:25.340590 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    N, K = map(int, input().split())\n    L = list(map(int, input().split()))\n\n    L.sort(reverse=True)\n    print(sum(L[:K]))\n    \"\"\"\n    N, K = map(int, input().split())\n    L = sorted(map(int, input().split()), reverse=True)\n    print(sum(L[:K]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:35:25.340652 REASON stop
2022-04-09 21:35:25.342071 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[:k]))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:35:25.342164 REASON stop
