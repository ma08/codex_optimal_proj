["\n\n# SOLUTION\n\n# Accept the number of vertices\nn = int(input())\n\n# Initialize the number of diagonals\nd = 2 * n - 5\n\n# Initialize the number of intersections\ni = n - 3\n\n# Initialize the count of diagonals that intersect\nd_i = 0\n\n# For each diagonal\nfor _ in range(d):\n    # Add the number of intersections for this diagonal\n    d_i += i\n    # Decrement the number of intersections\n    i -= 1\n\n# Print the number of intersections\nprint(d_i)", "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nans = (n - 3) * (n - 4) // 2\n\nprint(ans)", "\n\ndef main():\n    \"\"\"\n    The number of intersections is given by the formula:\n    n*(n-3)/2\n    \"\"\"\n    n = int(input())\n    print(n*(n-3)//2)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nprint((n-3)*(n-4)//2)", "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint((n-3)*(n-2)*(n-1)/6)", "\n\nn = int(input())\n\nif n < 3 or n > 100:\n    raise ValueError(\"Input is out of range.\")\n\nprint((n-3)*(n-2)*(n-1)//6)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 3:\n        print(0)\n    elif n == 4:\n        print(1)\n    else:\n        print((n-3)*(n-2)*(n-4)/2)\n\nmain()", "\n\nimport sys\n\ndef solve(n):\n    return n*(n-3)//2\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()"]