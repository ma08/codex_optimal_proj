2022-04-09 21:30:50.406832 """
There are N observatories in AtCoder Hill, called Obs. 1, Obs. 2, ..., Obs. N. The elevation of Obs. i is H_i.
There are also M roads, each connecting two different observatories. Road j connects Obs. A_j and Obs. B_j.
Obs. i is said to be good when its elevation is higher than those of all observatories that can be reached from Obs. i using just one road.
Note that Obs. i is also good when no observatory can be reached from Obs. i using just one road.
How many good observatories are there?

-----Constraints-----
 - 2 \leq N \leq 10^5
 - 1 \leq M \leq 10^5
 - 1 \leq H_i \leq 10^9
 - 1 \leq A_i,B_i \leq N
 - A_i \neq B_i
 - Multiple roads may connect the same pair of observatories.
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N M
H_1 H_2 ... H_N
A_1 B_1
A_2 B_2
:
A_M B_M

-----Output-----
Print the number of good observatories.

-----Sample Input-----
4 3
1 2 3 4
1 3
2 3
2 4

-----Sample Output-----
2

 - From Obs. 1, you can reach Obs. 3 using just one road. The elevation of Obs. 1 is not higher than that of Obs. 3, so Obs. 1 is not good.
 - From Obs. 2, you can reach Obs. 3 and 4 using just one road. The elevation of Obs. 2 is not higher than that of Obs. 3, so Obs. 2 is not good.
 - From Obs. 3, you can reach Obs. 1 and 2 using just one road. The elevation of Obs. 3 is higher than those of Obs. 1 and 2, so Obs. 3 is good.
 - From Obs. 4, you can reach Obs. 2 using just one road. The elevation of Obs. 4 is higher than that of Obs. 2, so Obs. 4 is good.
Thus, the good observatories are Obs. 3 and 4, so there are two good observatories.
"""
2022-04-09 21:30:50.406887 --------------------------
2022-04-09 21:31:22.581549 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split() for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649554250,
  "id": "cmpl-4vGhegLFbqPomZiqAL0rcdrzqJ5nh",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:31:22.581806 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split() for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)"
}
2022-04-09 21:31:22.581861 REASON stop
2022-04-09 21:31:22.583499 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:31:22.583609 REASON stop
