["S = list(input())\nS.sort()\nif S == ['a', 'b', 'c']:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s = input()\nif 'a' in s and 'b' in s and 'c' in s:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nprint('Yes' if len(set(S)) == 3 else 'No')", "print('Yes' if sorted(input()) == list('abc') else 'No')", "# a,b,c\u304b\u3089\u306a\u308b\u4e09\u6587\u5b57\u306es\u3092\u5165\u529b\ns = input()\n# \u4e26\u3079\u66ff\u3048\u305f\u3089abc\u306b\u306a\u308b\u306a\u3089Yes\nif \"a\" in s and \"b\" in s and \"c\" in s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = str(input())\nabc = [S[0], S[1], S[2]]\nif \"a\" in abc and \"b\" in abc and \"c\" in abc:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "word = input()\n\nif word.count('a') == 1 and word.count('b') == 1:\n    print('Yes')\nelse:\n    print('No')", "s = input('')\nif ''.join(sorted(s)) == 'abc':\n    print('Yes')\nelse:\n    print('No')\n", "S = list(input())\nif len(set(S)) == 3:\n    print('Yes')\nelse:\n    print('No')", "a = input()\nprint(\"Yes\" if len(set(a)) == len(a) else \"No\" )", "S = input()\nprint(\"Yes\" if S.count(\"a\") == 1 and S.count(\"b\") == 1 and S.count(\"c\") == 1 else \"No\")", "s = sorted(input())\n\nif \"\".join(s) == \"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")", "'''\n\u554f\u984c\uff1a\n    a,b,c \u304b\u3089\u306a\u308b\u9577\u3055 3 \u306e\u6587\u5b57\u5217 S \u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\n    S \u3092 abc \u3092\u4e26\u3073\u66ff\u3048\u3066\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n'''\n'''\n\u5236\u7d04\uff1a\n    |S|=3\n    S \u306f a,b,c \u304b\u3089\u306a\u308b\n'''\n\ndef abc093a(input: str) -> str:\n    str_list = [\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"]\n\n    if input not in str_list:\n        return \"No\"\n    else:\n        return \"Yes\"\n\ns = str(input())\nprint((abc093a(s)))\n", "# A - abc of ABC\n# https://atcoder.jp/contests/abc093/tasks/abc093_a\n\ns = input()\n\nif ''.join(sorted(s)) == 'abc':\n    print('Yes')\nelse:\n    print('No')\n", "a,b,c=input()\n\nif a!=b and b!=c and c!=a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "# A - abc of ABC\n\n# \u6a19\u6e96\u5165\u529bS\nS = input()\nabc_list = [\"a\", \"b\", \"c\"]\n\nfor i in S:\n    if i in abc_list:\n        abc_list.remove(i)\n\nif len(abc_list) == 0:\n    print('Yes')\nelse:\n    print('No')\n    \n\n", "# \u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u3066abc\u306b\u306a\u3063\u305f\u3089Yes\n\nS = list(input())\n\nS_ascending_order = ''.join(sorted(S))\n# print(S_ascending_order)\n\nif 'abc' == S_ascending_order:\n    print('Yes')\nelse:\n    print('No')\n", "s=input()\nif 'a'in s and'b'in s and'c'in s:print('Yes')\nelse:print('No')", "s = input()\nif s.count('a')==1 and s.count('b')==1 and s.count('c')==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "li = list(input())\n\nif li[0] != li[1] and li[1] != li[2] and li[0] != li[2]:\n    print('Yes')\nelse:\n    print('No')\n", "list01 = list(input())\nlist02 = list(set(list01))\nif len(list02) == 3:\n    print('Yes')\nelse:\n    print('No')", "print([\"No\",\"Yes\"][\"\".join(sorted(input()))==\"abc\"])", "s = input()\nif \"\".join(sorted(list(s))) == \"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = input()\n\nif \"a\" in S and \"b\" in S and \"c\" in S:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = ''.join(sorted(input()))\nprint('Yes' if S == 'abc' else 'No')", "s=input()\nprint(\"Yes\" if len(set(s))==3  else \"No\")", "a = input()\nif a[0] == a[1] or a[0] == a[2] or a[1] == a[2]:\n  print('No')\nelse:\n  print('Yes')", "S = input()\nif \"a\" in S and \"b\" in S and \"c\" in S:\n    print( \"Yes\" )\nelse:\n    print( \"No\" )", "s = input()\ns = ''.join(sorted(s))\nif s == 'abc':\n    print('Yes')\nelse:\n    print('No')", "#ABC093\ns = input()\nprint(\"Yes\" if len(set(s))==3 else \"No\")", "a = list(input())\na.sort()\n#sort\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u9806\u756a\u306b\u4e26\u3079\u308b\u3002\n# \u305f\u3068\u3048bca\u3067\u3082cba\u3067\u3082abc\u306e\u9806\u306b\u3057\u3066\u304f\u308c\u308b\nif a[0] == 'a' and a[1] == 'b' and a[2] == 'c':\n    print(\"Yes\")\nelse:\n    print(\"No\")", "if ''.join(sorted(input()))==\"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "s = list(input())\ns.sort()\n\nif s[0] + s[1] + s[2] == \"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = input()\nS1 =len(set(S))\n\nif ('a' and 'b' and 'c' in S) and (S1 == 3):\n    print('Yes')\nelse:\n    print('No')\n", "S = input()\nA = sorted(S)\nhantei = \"\".join(A)\n#print(hantei)\n                 \nif hantei == \"abc\" :\n    result = \"Yes\"\nelse:\n    result =\"No\"\nprint(result)", "S = input()\na_list = list(S)\na_ct = 0\nb_ct = 0\nc_ct = 0\n\nfor i in range(0,3):\n    if a_list[i] == 'a':\n        a_ct = a_ct + 1\n\nfor i in range(0,3):\n    if a_list[i] == 'b':\n        b_ct = b_ct + 1\n\nfor i in range(0,3):\n    if a_list[i] == 'c':\n        c_ct = c_ct + 1\n\nif a_ct == 1 and b_ct == 1 and c_ct == 1:\n    print('Yes')\nelse:\n    print('No')", "s = input()\n\nif (\"a\" in s) and (\"b\" in s ) and (\"c\" in s):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "print(\"Yes\" if len(set(input())) == 3 else \"No\")", "s = input()\nif s[0] != s[1] and s[1] != s[2] and s[2] != s[0]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "S = input()\nif \"a\" in S and \"b\" in S and \"c\" in S:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import numpy as np\n\nS=input()\n\ns = [st for st in S]\nif len(np.unique(s)) == 3:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "S = input()\n\nif 'a' in S and 'b' in S and 'c' in S:\n    print('Yes')\nelse:\n    print('No')", "S = input()\n\nif S[0] == S[1] or S[1] == S[2] or S[2] == S[0]:\n    print('No')\nelse:\n    print('Yes')", "s = set(input())\n\nif len(s) == 3:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = sorted(input())\n\nif S[0] == \"a\" and S[1] == \"b\" and S[2] == \"c\":\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s=input()\nif s[0]!=s[1] and s[0]!=s[2] and s[1]!=s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s = input()\nif s.count('a') and s.count('b') and s.count('c'):\n    print('Yes')\nelse:\n    print('No')\n", "S = len(set(input()))\nprint(\"Yes\") if S==3 else print(\"No\")", "s=input()\nif s.count('a')==1 and s.count('b')==1 and s.count('c')==1:\n  print('Yes')\nelse:\n  print('No')", "print(\"Yes\" if sorted(input()) == [\"a\",\"b\",\"c\"] else \"No\")", "s = list(input())\n\ns.sort()\n\nprint(\"Yes\" if s[0] + s[1] + s[2] == \"abc\" else \"No\")", "S = input()\n\nif S[0] != S[1] and S[1] != S[2] and S[2] != S[0]:\n    print('Yes')\n\nelse:\n    print('No')", "\nS = str(input())\n\nif S[0] != S[1] and S[1] != S[2] and S[2] != S[0]:\n    print('Yes')\n\nelse:\n    print('No')\n\n", "s = list(input())\ns.sort()\n#print(s)\nif s == [\"a\",\"b\",\"c\"]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "s=input()\n\nif s.count(\"a\")==1 and s.count(\"b\")==1:\n    print(\"Yes\")\n    \nelse:\n    print(\"No\")", "s = input()\ns = sorted(s)\ns = \"\".join(s)\nif s == \"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "# \u6587\u5b57\u5217\u3092\u53d6\u5f97\u6b7b\u4e26\u3073\u66ff\u3048\nS = str(input())\n\n# \u6587\u5b57\u5217\u306e\u691c\u67fb\u7d50\u679c\u3092\u51fa\u529b\nget_list = sorted(S)\nabc_list = [\"a\",\"b\",\"c\"]\nif get_list == abc_list:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = input()\n\nif 'a' in S and 'b' in S and 'c' in S:\n    print('Yes')\nelse:\n    print('No')", "s = input()\n\nif s.count('a') == 1 and s.count('b') == 1 and s.count('c'):\n  print('Yes')\n  \nelse:\n  print('No')", "S = str(input())\nif 'a' in S and 'b' in S and 'c' in S:\n    print('Yes')\nelse:\n    print('No')", "import sys\nsys.setrecursionlimit(10**9)\n\ndef mi(): return map(int,input().split())\ndef ii(): return int(input())\ndef isp(): return input().split()\ndef deb(text): print(\"-------\\n{}\\n-------\".format(text))\n\nINF=10**20\nclass Counter:\n    def __init__(self):\n        self.dict = {}\n\n    def add(self,x):\n        if x in self.dict: self.dict[x] += 1\n        else: self.dict[x] = 1\n\n    def decrement(self,x):\n        self.dict[x] -= 1\n        if self.dict[x] <= 0:\n            del self.dict[x]\n\n    def get_dict(self):\n        return self.dict\n\ndef main():\n    S=input()\n    counter = Counter()\n    for s in S:\n        counter.add(s)\n\n    d = counter.get_dict()\n    for s in ['a','b','c']:\n        if not s in d  or d[s] != 1:\n            print(\"No\")\n            return\n        \n    print(\"Yes\")\n\n\n\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S = input()\n\nprint(\"Yes\" if len(set(S)) == 3 else \"No\")", "s = input()\nprint(\"Yes\" if len(set(s)) == 3 else \"No\")", "a = list(input())\na.sort()\n\nif a[0] == 'a' and a[1] == 'b' and a[2] == 'c':\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s = input()\n\nif ('a' in s) and ('b' in s) and ('c' in s):\n   print('Yes')\nelse:\n   print('No')", "s = input()\nif \"a\" in s and \"b\" in s and \"c\" in s:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "S = input()\nif S.count(\"a\") == 1  and S.count(\"b\") == 1 and S.count(\"c\") == 1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "s = input()\nif 'a' in s and 'b' in s and 'c' in s:\n    print('Yes')\nelse:\n    print('No')", "s = list(input())\ns.sort()\nif s == ['a', 'b', 'c']:\n    print('Yes')\nelse:\n    print('No')", "abc=input()\nif abc.count('a')==1 and abc.count('b')==1 and abc.count('c')==1:\n  print('Yes')\nelse:\n  print('No')", "s = input()\n\nif s[0] != s[1] and s[0] != s[2] and s[1] != s[2]:\n    print('Yes')\nelse:\n    print('No')", "a=input()\nif a.count(\"a\")==1and a.count(\"b\")==1and a.count(\"c\")==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = str(input())\n\nlist_S = list(S)\n\nif 'a' in list_S and 'b' in list_S and 'c' in list_S:\n    print('Yes')\nelse:\n    print('No')", "S = input()\n\nif \"a\" in S and \"b\"in S and \"c\" in S:\n    print('Yes')\nelse:\n    print('No')", "moji = list(map(str,input().strip()))\nprint((\"No\",\"Yes\")[len(set(moji))==3])", "string = input()\nif string[0] != string[1] and string[1] != string[2] and string[2] != string[0]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = str(input())\n\n# S \u3092 abc \u3092\u4e26\u3073\u66ff\u3048\u3066\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3089 Yes \u3092\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089 No \u3092\u51fa\u529b\u305b\u3088\u3002\n\nabc = [S[0], S[1], S[2]]\nif \"a\" in abc and \"b\" in abc and \"c\" in abc:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = input()\nif 'a' in S and 'b' in S and 'c' in S:\n    print('Yes')\nelse:\n    print('No')", "S = str(input())\nabc = S[0],S[1],S[2]\nif \"a\" in abc and \"b\" in abc and \"c\" in abc:\n    print('Yes')\nelse:\n    print('No')", "s=input()\ns=sorted(s)\n\nif s[0]=='a' and s[1]=='b' and s[2]=='c':\n    print('Yes')\nelse:\n    print('No')", "s = input()\nif 'a' in s and 'b' in s and 'c' in s:\n    print('Yes')\nelse:\n    print('No')\n", "S = input()\nABC = (list(S))\nABC.sort()\n# print(ABC)\n\nif ABC == [\"a\",\"b\",\"c\"]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s=input()\nif len(set(s))==3:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "print(\"Yes\" if \"\".join(sorted(input()))==\"abc\" else \"No\")", "S = list(input())\nif 'a' in S and 'b' in S and 'c' in S:\n    print('Yes')\nelse:\n    print('No')\n", "def main():\n    s = set(input())\n\n    if len(s) == 3:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nmain()", "#\n# abc093 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"bac\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"bab\"\"\"\n        output = \"\"\"No\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"abc\"\"\"\n        output = \"\"\"Yes\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_4(self):\n        input = \"\"\"aaa\"\"\"\n        output = \"\"\"No\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    S = input()\n    if \"a\" in S and \"b\" in S and \"c\" in S:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "S = str(input())\n\nlist_S = list(S)\n\nif 'a' in list_S and 'b' in list_S and 'c' in list_S:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nS = sorted(S)\n\nif S[0] == 'a' and S[1] == 'b' and S[2] == 'c':\n    print('Yes')\nelse:\n    print('No')", "S = str(input())\n\nif S[0] == S[1] or S[1] == S[2] or S[0] == S[2]:\n    print('No')\nelse:\n    print('Yes')", "n = input()\nif len(set(n))==3:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "S = list(input())\nS.sort()\n\nif S == ['a', 'b', 'c']:\n    print('Yes')\nelse:\n    print('No')\n", "S = str(input())\n\nif S[0] != S[1] and S[0] != S[2] and S[1] != S[2]:\n    result = 'Yes'\nelse:\n    result = 'No'\n\nprint(result)", "s = list(input())\n\ns.sort()\nif ''.join(s) == 'abc':\n  print('Yes')\nelse:\n  print('No')", "s=str(input())\n\nif ord(s[0])+ord(s[1])+ord(s[2])==ord('a')+ord('b')+ord('c'):\n    ans=\"Yes\"\nelse:\n    ans=\"No\"\nprint(ans)", "def atc_093a(input_value):\n    try:\n        input_value.index(\"a\")\n        input_value.index(\"b\")\n        input_value.index(\"c\")\n        return \"Yes\"\n    except ValueError:\n        return \"No\"\n\ninput_value = input()\nprint(atc_093a(input_value))", "S = input()\nif set(S) == {'a', 'b', 'c'}:\n    print('Yes')\nelse:\n    print('No')", "S=str(input())\nS_list=sorted(S)\nif S_list[0]+S_list[1]+S_list[2]==\"abc\":\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "# 093a\n\ndef atc_093a(input_value):\n    try:\n        input_value.index(\"a\")\n        input_value.index(\"b\")\n        input_value.index(\"c\")\n        return \"Yes\"\n    except ValueError:\n        return \"No\"\n\ninput_value = input()\nprint((atc_093a(input_value)))\n", "S = str(input())\n\nif S[0] != S[1] and S[0] != S[2] and S[1] != S[2]:\n    result = 'Yes'\nelse:\n    result = 'No'\n\nprint(result)\n"]