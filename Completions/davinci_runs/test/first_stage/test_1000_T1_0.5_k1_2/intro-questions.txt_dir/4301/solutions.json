["import copy\nn = int(input())\na = []\nfor i in range(n):\n  s = int(input())\n  a.append(s)\nb = copy.copy(a)\na.sort(reverse=True)\nc = b.index(a[0])\nfor j in b:\n  if j == b[c]:\n    print(a[1])\n  else:\n    print(a[0])", "N = int(input())\nl = [int(input()) for _ in range(N)]\nlargest = max(l)\nlargest_index = l.index(max(l))\nsecond_largest = sorted(l)[-2]\nsecond_largest_index = l.index(second_largest)\n\nfor idx, n in enumerate(l):\n  if idx == largest_index:\n    print(second_largest)\n  else:\n    print(largest)\n", "arr = []\nfor _ in range(int(input())):\n  arr.append(int(input()))\narr2 = arr.copy()\narr2.sort()\nz = arr2[-1]\nzz = arr2[-2]\nfor k in arr:\n  if k != z:\n    print(z)\n  else:\n    print(zz)\n    \n", "n = int(input())\na_l = [ int(input()) for _ in range(n)]\n\nl = []\nr = []\nl_max = 0\nr_max = 0\nfor i in range(n):\n    l_max = max(l_max, a_l[i])\n    r_max = max(r_max, a_l[-i-1])\n    l.append(l_max)\n    r.append(r_max)\nfor i in range(n):\n    if i == 0:\n        t_l = 0\n    else:\n        t_l = l[i-1]\n    if i == n-1:\n        t_r = 0\n    else:\n        t_r = r[-i-2]\n    print(max([t_l,t_r]))", "n = int(input())\na = [int(input()) for _ in range(n)]\n\nb = sorted(a)\nfor i in a:\n    print(b[-1] if i != b[-1] else b[-2])", "n = int(input())\na = list(int(input()) for _ in range(n))\nb = sorted(a, reverse=True)\nfor i in range(n):\n    if a[i] != b[0]:\n      print(b[0])\n    else: print(b[1])", "N = int(input())\nA = [int(input()) for i in range(N)]\n\nsorted_a = sorted(A, reverse= True)\nmax_val, next_max_val = sorted_a[:2]\nfor a in A:\n  if a == max_val:\n    print(next_max_val)\n  else:\n    print(max_val)", "import copy\n\nN = int(input())\nA = []\nfor i in range(N) :\n    A.append(int(input()))\n\namax = max(A)\namaxindex = A.index(amax)\n#print(A,amax,amaxindex)\nB = copy.deepcopy(A)\ndel B[amaxindex]\nbmax = max(B)\n#print(B,bmax)\n\n#print(amax,bmax)\nfor i in range(N) :\n    if i == amaxindex :\n        print(bmax)\n    else :\n        print(amax)", "n = int(input())\na = [int(input()) for i in range(n)]\nx = sorted(a)[-1]\ny = sorted(a)[-2]\nfor i in range(n):\n    if a[i] != x:\n        print(x)\n    else:\n        print(y)", "N = int(input())\nls = []\nfor i in range(N):\n    ls.append(int(input()))\nfirst_val = sorted(ls, reverse=True)[0]\nsecond_val = sorted(ls, reverse=True)[1]\nfor i in ls:\n    if i == first_val:\n        print(second_val)\n    else:\n        print(first_val)", "N = int(input())\nA = [0]*N\nfor i in range(N):\n    A[i] = int(input())\n\nmx = max(A)\nmxidx = A.index(mx)\n\nfor i in range(N):\n    if i == mxidx:\n        B = A[0:i] + A[i+1:N]\n        print(max(B))\n    else:\n        print(mx)", "N=int(input())\nnums=[]\nfor i in range(N):\n    A=int(input())\n    nums.append(A)\n    \nnums2=sorted(nums,reverse=True)\n\nfor i in nums:\n    if i==nums2[0]:\n        print(nums2[1])\n    else:\n        print(nums2[0])", "import copy\nn = int(input())\nan = [int(input()) for i in range(n) ]\nbn = copy.copy(an)\ntop = max(an)\nan.remove(top)\ntop2 = max(an)\n\n\nfor x in bn:\n  if x == top:\n    print(top2)\n  else:\n    print(top)\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    N = i_input()\n    A = [i_input() for i in range(N)]\n\n    L = list(set(A))\n    L.sort()\n    m1 = L[-1]\n    cnt = A.count(m1)\n\n    if len(L) == 1:\n        m2 = m1\n    else:\n        m2 = L[-2]\n\n    for i in A:\n        if i == m1 and cnt == 1:\n            print(m2)\n        else:\n            print(m1)\n  \n \n \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = [int(input()) for _ in range(n)]\nb = sorted(a)\nfor i in a:\n    print(b[-1] if i != b[-1] else b[-2])", "import heapq\n\nn = int(input())\nA = [int(input()) for _ in range(n)]\nm1, m2 = heapq.nlargest(2, A)\nprint(*[m2 if a == m1 else m1 for a in A], sep='\\n')", "N = int(input())\nA = [0]*N\nfor i in range(N):\n    A[i] = int(input())\nsortedA = sorted(A)\nif sortedA[N-1] == sortedA[N-2]:\n    for _ in range(N):\n        print(sortedA[N-1])\nelse:\n    for i in range(N):\n        if A[i] != sortedA[N-1]:\n            print(sortedA[N-1])\n        else:\n            print(sortedA[N-2])", "n = int(input())\nlst = []\n\nfor i in range(n):\n    x = int(input())\n    lst.append(x)\n\na = max(lst)\nb = []\nfor i in range(n):\n    if (lst[i] == a):\n        b.append(i)\n\nif (len(b) > 1):\n    for i in range(n):\n        print(a)\n\nelse:\n    lst[b[0]] = 0\n    c = max(lst)\n    for i in range(n):\n        if (i == b[0]):\n            print(c)\n        else:\n            print(a)\n", "n=int(input())\na=[int(input()) for i in range(n)]\nb=a[:]\np=max(a)\nb.remove(p)\nq=max(b)\n\nfor i in a:\n    if i!=p:\n        print(p)\n    else:\n        print(q)", "N = int(input())\nA = [int(input()) for _ in range(N)]\nB = sorted(A)\nfor i in A:\n  if i == B[-1]:\n    print(B[-2])\n  else:\n    print(B[-1])", "N = int(input())\nb = []\nmax_num = 0\nfor i in range(N):\n  a = int(input())\n  b.append(a)\n  max_num = max(a,max_num)\nmax_num2 = 0  \nnum = b.count(max_num)\nif num >1:\n  for i in range(N):\n    print(max_num)\nelif num ==1:\n  for i in b:\n    if i == max_num:\n      pass\n    else:\n      max_num2 = max(max_num2,i)\n  for i in b:\n    if max_num == i:\n      print(max_num2)\n    else:\n      print(max_num)\n    \n  \n", "import copy\nn = int(input())\nA = []\nfor i in range(n):\n    A.append(int(input()))\nB = copy.copy(A)\nB.sort()\nA_max = B[-1]\nA_max2 = B[-2]\n\nfor i in range(n):\n    if A[i] < A_max:\n        print(A_max)\n    elif A[i] == A_max:\n        print(A_max2)\n", "n=int(input())\na=[]\nfor _ in range(n):\n    a.append(int(input()))\n\nb=a.copy()\n\nimport heapq\n#\u3053\u308c\u3092\u52a0\u3048\u308b\uff01\uff01\uff01\uff01\ndef _heappush_max(heap, item):\n    heap.append(item)\n    heapq._siftdown_max(heap, 0, len(heap)-1)\ndef _heappop_max(heap):\n    \"\"\"Maxheap version of a heappop.\"\"\"\n    lastelt = heap.pop()    # raises appropriate IndexError if heap is empty\n    if heap:\n        returnitem = heap[0]\n        heap[0] = lastelt\n        heapq._siftup_max(heap, 0)\n        return returnitem\n    return lastelt\n\nb = sorted(b,reverse=True)\n\nb1 = _heappop_max(b)\nb2 = _heappop_max(b)\n\nfor i in range(n):\n    if a[i]==b1:\n        print(b2)\n    else:\n        print(b1)\n", "n=int(input())\na=[int(input()) for i in range(n)]\nsa=sorted(a)\n\nfor i in a:\n  if sa[-1]==i:\n    print(sa[-2])\n  else:\n    print(sa[-1])", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-09-10 18:27:16 +0900\n# LastModified: 2020-09-10 18:35:34 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\nfrom collections import Counter\n\n\ndef main():\n    n = int(input())\n    A = []\n    for _ in range(n):\n        A.append(int(input()))\n    A_cnt = Counter(A)\n    flag = 0\n    A_max = max(A)\n    A_next_max = sorted(A, reverse=True)[1]\n    if A_cnt[A_max] > 1:\n        flag = 1\n\n    for a in A:\n        if a == A_max and flag == 1:\n            print(A_max)\n        elif a == A_max and flag == 0:\n            print(A_next_max)\n        else:\n            print(A_max)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(int(input()) for _ in range(n))\nb = sorted(a, reverse=True)\nfor i in range(n):\n    if a[i] != b[0]:\n      print(b[0])\n    else: print(b[1])", "n = int(input())\nlist_a = []\nfor i in range(n):\n    list_a.append(int(input()))\n\nfrom collections import Counter\n\ncounter = dict(Counter(list_a))\nsorted_counter = sorted(counter, reverse=True)\n\nfor item in list_a:\n    counter[item] -= 1\n    for submax in sorted_counter:\n        if counter[submax] == 0:\n            continue\n        print(submax)\n        break\n    counter[item] += 1", "n = int(input())\nmax_a = 0\nnext_a = 0\nmax_loc = 0\nfor i in range(n):\n    ai = int(input())\n    if ai > max_a:\n        max_a =ai\n        max_loc = i\n    elif ai > next_a:\n        next_a = ai\nif next_a == 0:\n    for i in range(n):\n        print(max_a)\nelse:\n    for i in range(max_loc):\n        print(max_a)\n    print(next_a)\n    for i in range(n-max_loc-1):\n        print(max_a)", "n=int(input())\na=[int(input()) for i in range(n)]\nb=sorted(a,reverse=True)\nfirst,second=b[0],b[1]\n\nfor i in range(n):\n  print(second if a[i]==first else first)", "n = int(input())\na = [0]\nfor i in range(n):\n  a.append(int(input()))\na.append(0)\n\nl = [0] * (n+2)\nl[0] = 0\nfor i in range(1,n+1):\n  l[i] = max(l[i-1], a[i])\n\nr = [0] * (n+2)\nr[n] = 0\nfor i in range(n,0,-1):\n  r[i] = max(r[i+1], a[i])\n\nfor i in range(1,n+1):\n  print(max(l[i-1],r[i+1]))", "n = int(input())\nL = list(int(input()) for _ in range(n))\nSL = sorted(L)\nfirst_max = SL[-1]\nsecond_max = SL[-2]\nfor l in L:\n  if (l == first_max):\n    print(second_max)\n  else:\n    print(first_max)", "import sys\n\ninput = sys.stdin.readline\nN = int(input())\n\nA = []\nfor _ in range(N):\n    A.append(int(input()))\n\nfor i, a in enumerate(sorted(A, reverse=True)):\n    if i == 0:\n        first = a\n    elif i == 1:\n        second = a\n    else:\n        break\n# print(first, second)\n\nfor a in A:\n    if a == first:\n        print(second)\n    else:\n        print(first)", "N,*D=map(int,open(0).read().split())\nS=sorted(D,reverse=True)\nif S[1]==S[0]:\n  [print(S[0]) for i in range(N)]\nelse:\n  import numpy as np\n  max_i=np.arange(N)[np.array(D)==S[0]]\n  for i in range(N):\n    if i==max_i:\n      print(S[1])\n    else:\n      print(S[0])", "n = int(input())\nL = list(int(input()) for _ in range(n))\nSL = sorted(L)\nfirst_max = SL[-1]\nsecond_max = SL[-2]\nfor l in L:\n  if (l != first_max):\n    print(first_max)\n  else:\n    print(second_max)", "n = int(input())\na = []\nfor i in range(n):\n\ta.append(int(input()))\na_max = max(a)\na_second = sorted(a)[-2]\nfor i in range(n):\n\tprint(a_max if a[i] != a_max else a_second)", "n=int(input())\na=[int(input()) for i in range(0,n)]\nb=sorted(a)\nfor i in range(0,n):\n    if b[-1]!=a[i]:\n        print((b[-1]))\n    else:\n        print((b[-2]))\n", "import collections\n\nn = int(input())\na = [int(input()) for i in range(n)]\nm = sorted(list(set(a)))\nc =collections.Counter(a)\n\nt = [max(a)]*n\n\nif c[max(a)] == 1:\n    t[a.index(max(a))] = m[-2]\n\n[print(i) for i in t]\n", "N = int(input())\nA = [int(input()) for i in range(N)]\nI1 = A.index(max(A))\nM1 = A.pop(I1)\nM2 = max(A)\nfor j in range (N):\n  if j == I1:\n    print(M2)\n  else:\n    print(M1)", "N = int(input())\nA = [int(input()) for i in range(N)]\n\nsorted_a = sorted(A, reverse= True)\nmax_val = sorted_a[0]\nnext_max_val = sorted_a[1]\nfor a in A:\n  if a == max_val:\n    print(next_max_val)\n  else:\n    print(max_val)", "n = int(input())\na = [int(input()) for _ in range(n)]\ns = sorted(a)\nfor i in range(n):\n    if a[i] != s[-1]:\n        print(s[-1])\n    else:\n        print(s[-2])", "N = int(input())\nA = [int(input()) for _ in range(N)]\nsort_A = sorted(A)\nmax_val = max(A)\nsecond_val = sort_A[-2]\n\nfor i in range(N):\n    if A[i] == max_val:\n        print(second_val)\n    else:\n        print(max_val)", "n = int(input())\narr = [int(input()) for _ in range(n)]\nar = sorted(arr)\nmx = ar[-1]\nsc = ar[-2]\n\nfor ele in arr:\n    if ele == mx:\n        print(sc)\n    else:\n        print(mx)\n", "from collections import Counter\nN=int(input())\nAlist=[]\nmaxi=0\nn2=0\nfor _ in range(N):\n    A=int(input())\n    Alist.append(A)\n    if A>maxi:\n        n2=maxi\n        maxi=A\n    elif A>n2:\n        n2=A\ncount=Counter(Alist)\nfor A in Alist:\n    if A!=maxi:\n        print(maxi)\n    elif A==maxi and count[A]>1:\n        print(maxi)\n    else:\n        print(n2)", "n = int(input())\na = [int(input()) for _ in range(n)]\n\nmaxa = max(a)\nmaxnum = a.count(maxa)\n\nif maxnum > 1:\n    for i in range(n):\n        print(maxa)\nelse:\n    maxidx = a.index(maxa)\n    for i in range(n):\n        if i != maxidx:\n            print(maxa)\n        else:\n            a[maxidx] = 0\n            print(max(a))", "N=int(input())\nA=[int(input()) for _ in range(N)]\n\nAsorted=sorted(A)\nAmax1=Asorted[-1]\nAmax2=Asorted[-2]\n\nfor a in A:\n\tif a!=Amax1:\n\t\tprint(Amax1)\n\telse:\n\t\tprint(Amax2)\n", "# ABC 134 C\nN = int(input())\nA = []\nfor i in range(N):\n    a = int(input())\n    A.append(a)\nB = sorted(A)\n\nif B[-1] != B[-2]:\n    t = A.index(B[-1])\n    for i in range(N):\n        if i == t:\n            print(B[-2])\n        else:\n            print(B[-1])\nelse:\n    for i in range(N):\n        print(B[-1])", "import bisect\n\nN = int(input())\nA = [int(input()) for _ in range(N)]\nsort_A = sorted(A)\nmax_val = max(A)\nsecond_val = sort_A[bisect.bisect_right(sort_A, max_val) - 2]\n\nfor i in range(N):\n    if A[i] == max_val:\n        print(second_val)\n    else:\n        print(max_val)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = [I() for i in range(N)]\n    L2=sorted(L)\n    max_n = L2[N-1]\n    max_n2 = L2[N-2]\n    if max_n==max_n2:\n        for i in range(N):\n            print(max_n)\n    else:\n        for i in L:\n            if i != max_n:\n                print(max_n)\n            else:\n                print(max_n2)\n            \n\n        \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "from copy import copy\nn, *a = list(map(int, open(0).read().split()))\n\nb = copy(a)\nc = copy(a)\n\nfor i in range(1, n):\n    b[i] = max(b[i], b[i - 1])\nfor i in range(n - 2, -1, -1):\n    c[i] = max(c[i], c[i + 1])\nb.append(-1)\nc.append(-1)\n\nfor i in range(n):\n    print((max(b[i - 1], c[i + 1])))\n", "N = int(input())\nA_ls = []\nfor i in range(N):\n    A_ls.append(int(input()))\nsorted_A_ls = sorted(A_ls, reverse=True)\nfirst_val = sorted_A_ls[0]\nsecond_val = sorted_A_ls[1]\n\nfor val in A_ls:\n    if val == first_val:\n        print(second_val)\n    else:\n        print(first_val)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport heapq\n\ndef main():\n    numbers=[]\n    n = int(input())\n    [numbers.append(int(input().rstrip())) for _ in range(n)]\n\n    max_n=0\n    second_n=0\n\n    for i in numbers:\n        if i > max_n:\n            max_n=i\n        elif i > second_n:\n            second_n=i\n    \n    for i in numbers:\n        if i==max_n:\n            print(second_n)\n        else:\n            print(max_n)\n    \n\ndef __starting_point():\n    main()\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep 10 00:13:41 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nA = [int(input()) for i in range(N)]\nB = A.copy()\nB.sort()\n\nfor i in range(N):\n    if A[i] == B[-1]:\n        print(B[-2])\n    else:\n        print(B[-1])", "n = int(input())\na = []\nfor i in range(n):\n    A = int(input())\n    a.append(A)\na_1 = list(set(a))[-1]\nif a.count(a_1) >= 2:\n    for i in range(n):\n        print(a_1)\nelse:\n    a_2 = list(set(a))[-2]\n    for i in range(n):\n        if a[i] == a_1:\n            print(a_2)\n        else:\n            print(a_1)", "n = int(input())\nL = list(int(input()) for _ in range(n))\nSL = sorted(L)\nfirst_max = SL[-1]\nsecond_max = SL[-2]\nfor l in L:\n  if (l != first_max):\n    print(first_max)\n  elif (l == first_max):\n    print(second_max)", "n =  int(input())\nA = []\nfor i in range(n):\n    A.append(int(input()))\nma = max(A)\nma2 = sorted(A)[-2]\nfor a in A:\n    if a == ma:\n        print(ma2)\n    else:\n        print(ma)", "n = int(input())\na = list(int(input()) for i in range(n))\naa = sorted(a)\namax = aa[n-1]\nasecond = aa[n-2]\n\nfor i in a:\n    if i != amax:\n        print(amax)\n    else:\n        print(asecond)", "n = int(input())\nA = [int(input()) for _ in range(n)]\nsort_A = sorted(A, reverse=True)\n\nfor a in A:\n    if a == sort_A[0]:\n        print(sort_A[1])\n    else:\n        print(sort_A[0])", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\nA = []\n#\u30ea\u30b9\u30c8A\u306bappend()\u3092\u4f7f\u3063\u3066\u683c\u7d0d\u3057\u3066\u3044\u304f\nfor _ in range(n):\n    A.append(int(input()))\n\n\nsort_A = sorted(A, reverse=True)\nmax_1 = sort_A[0]\nmax_2 = sort_A[1]\n\nif max_1 == max_2:\n    for _ in range(n):\n        print(max_1)\nelse:\n    for i in range(n):\n        if A[i] == max_1:\n            print(max_2)\n        else:\n            print(max_1)", "n = int(input())\na = [int(input()) for _ in range(n)]\nm1, m2 = -1, -1\nfor i in range(n):\n  if m1 < a[i]:\n    m2 = m1\n    m1 = a[i]\n  elif m2 < a[i]:\n    m2 = a[i]\nfor i in range(n):\n  if a[i] == m1:\n    print(m2)\n  else:\n    print(m1)\n", "n=int(input())\na=[]\nfor _ in range(n):\n    a.append(int(input()))\nb=a.copy()\nb.sort()\na_=max(a)\nfor i in range(n):\n    if a[i]==a_:\n        print(b[-2])\n    else:\n        print(a_)    ", "def main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    sortA = sorted(A)\n    #print(A,sortA)\n    ans = sortA[N-1]\n    ans2 = sortA[N-2]\n    if ans == ans2:\n        flag = 1\n    else:\n        flag = 0\n\n    for i in range(N):\n        if flag == 1:\n            print(ans)\n        else:\n            if A[i] == ans:\n                print(ans2)\n            else:\n                print(ans)\n\nmain()\n", "N = int(input())\nA = [int(input()) for _ in range(N)]\n\nm,s = 0,0\nfor a in A:\n    if a > m:\n        m = a\n    elif a > s:\n        s = a\n\nfor a in A:\n    if a == m:\n        print(s)\n    else:\n        print(m)\n", "n = int(input())\nnumbers = []\nfor i in range(n):\n  a = int(input())\n  numbers.append(a)\nb = max(numbers)\nmax_index = numbers.index(max(numbers))\nnumbers.remove(b)\nfor i in range(n):\n  if i == max_index:\n    print(max(numbers))\n  else:\n    print(b)", "n=int(input())\n\na=[]\nfor i in range(n):\n    a.append(int(input()))\n\na_max=max(a)\na_max_cnt=a.count(a_max)\n\nfor i in range(n):\n    if (a[i]!=a_max or a_max_cnt>1):\n        print(a_max)\n    else:\n        print((max(a[:i]+a[i+1:])))\n", "n = int(input())\na = []\nfor _ in range(n):\n  a.append(int(input()))\na_max = max(a)\nflg = False\nif a.count(a_max) > 1:\n  flg = True\na_s = sorted(a, reverse=True)\nfor ai in a:\n  if ai != a_max:\n    print(a_max)\n  elif flg:\n    print(a_max)\n  else:\n    print(a_s[1])", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#mod = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n=INT()\n    A=[]\n    for i in range(n):\n        A.append(INT())\n    \n    B=sorted(A,reverse=True)\n    m1=A.count(B[0])\n    m2=A.count(B[1])\n    if m1>=2:\n        flg=True\n    else:\n        index=A.index(B[0])\n        flg=False\n\n    #print(A,B,index)\n\n    if flg:\n        for i in range(n):\n            print(B[0])\n    else:\n        for i in range(n):\n            if i!=index:\n                print(B[0])\n            else:\n                print(B[1])\n\n\ndef __starting_point():\n    do()\n__starting_point()", "N=int(input())\nA=[int(input()) for _ in range(N)]\nB=sorted(A,reverse=True)\nfor i in range(N):\n    if A[i]==B[0]:\n        print(B[1])\n    else:\n        print(B[0])", "n=int(input())\nA=[int(input()) for _ in range(n)]\nsort_A=sorted(A,reverse=True)\n\nfor a in A:\n  if a==sort_A[0]:\n    print(sort_A[1])\n  else:\n    print(sort_A[0])", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nN = int(input())\nA = [int(input()) for c in range(N)]\nB = sorted(copy.deepcopy(A),reverse=True)\n\nfor i in range(N):\n    if A[i] == B[0]:\n        print(B[1])\n    else:\n        print(B[0])", "n = int(input())\na = [int(input()) for i in range(n)]\nif len(set(a)) == 1:\n    for i in range(n):\n        print(a[0])\n    return\nx = sorted(a)[-1]\ny = sorted(a)[-2]\nfor i in range(n):\n    if a[i] != x:\n        print(x)\n    else:\n        print(y)", "N = int(input())\nlsA = [int(input()) for i in range(N)]\nmaxA = max(lsA)\nAkazu = lsA.count(maxA)\nfor i in range(N):\n    if lsA[i] == maxA and Akazu == 1:\n        print(max(lsA[:i]+lsA[i+1:]))\n    else:\n        print(maxA)", "N = int(input())\nA = [int(input()) for _ in range(N)]\n\nli = A.copy()\nli.sort()\n\nf = li[-1]\ns = li[-2]\n\nfor i in range(N):\n    if f == A[i]:\n        print(s)\n    else:\n        print(f)\n", "# -*- coding:utf-8 -*-\nimport copy\nN = int(input())\nA_list=[]\n\nfor _ in range(N):\n    A_list.append(int(input()))\n\nsort_list = copy.deepcopy(A_list)\nsort_list.sort()\n\na_max = sort_list[-1]\na_max_second = sort_list[-2]\n\nif a_max == a_max_second:\n    for _ in range(N):\n        print(a_max)\nelse:\n    for i in range(N):\n        if A_list[i] == a_max:\n            print(a_max_second)\n        else:\n            print(a_max)\n\n", "n = int(input())\na = [int(input()) for i in range(n)]\nq = sorted(a)\n\nfor i in range(n):\n  if a[i] != q[-1]:\n    print((q[-1]))\n  else:\n    print((q[-2]))\n", "N = int(input())\nA = [int(input()) for _ in range(N)]\n\nM = max(A)\nM_index = A.index(M)\nsub_M = 0\nfor i in range(N):\n  if i != M_index: sub_M = max(sub_M, A[i])\n\nfor i in range(N):\n  if i == M_index: print(sub_M)\n  else: print(M)", "N=int(input())\na=[int(input()) for i in range(N)]\nsw=True\nb=sorted(a,reverse=True)\n\nif b[0]>b[1]:\n    max2=b[1]\n    max1=b[0]\n    sw=False\n\nif sw==True:\n    max1=b[0]\n    for k in range(N):\n        print(max1)\nelse:\n    for k in range(N):\n        if a[k]==max1:\n            print(max2)\n        else:\n            print(max1)\n", "N=int(input())\nA=[int(input()) for _ in range(N)]\nM1=max(A[0],A[1])\nM2=min(A[0],A[1])\nfor i in range(2,N):\n    if A[i]>=M1:\n        M2=M1\n        M1=A[i]\n    else:\n        M2=max(M2,A[i])\nfor i in range(N):\n    if A[i]==M1:\n        print(M2)\n    else:\n        print(M1)\n", "N = int(input())\nA = [int(input()) for _ in range(N)]\n \nM = max(A)\nM_index = A.index(M)\nsub_M = 0\nfor i in range(N):\n  if i != M_index: sub_M = max(sub_M, A[i])\n\nfor i in range(N):\n  if i == M_index: print(sub_M)\n  else: print(M)", "#ABC134 C (\u518d\u8003\u5bdf)\n\nN = int(input())\nA = []\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    \nAA = sorted(A,reverse = True)\nfor i in range(N):\n    if A[i] != AA[0]:\n        print(AA[0])\n    else:\n        print(AA[1])", "N = int(input())\nA = [int(input()) for i in range(N)]\n\nfirstVal = max(A)\nfirstInd = A.index(firstVal)\nsecondVal = max(A[0:firstInd] + A[firstInd+1:])\n\nfor i in range(firstInd):\n    print(firstVal)\n\nprint(secondVal)\n\nfor i in range(N-firstInd-1):\n    print(firstVal)\n", "# C\u554f\u984c\nN = int(input())\nA = [int(input()) for i in range(N)]\n\nsorted_A = sorted(A, reverse=True)\nmax_value, next_value = sorted_A[0], sorted_A[1]\n\nfor i in A:\n    if i == max_value:\n        print(next_value)\n    else:\n        print(max_value)\n", "n = int(input())\nalist = [int(input()) for _ in range(n)]\n\nimport copy\nalist_copy = copy.copy(alist)\n\nalist_copy.sort()\nmax_value = alist_copy[-1]\nnext_value = alist_copy[-2]\nfor a in alist:\n    if a == max_value:\n        print(next_value)\n    else:\n        print(max_value)", "N = int(input())\nA = [int(input()) for _ in range(N)]\nsort_A = sorted(A, reverse=True)\nans = []\n\nfor i in range(N):\n    if sort_A[0] == A[i]:\n        ans.append(sort_A[1])\n    else:\n        ans.append(sort_A[0])\n\nfor a in ans:\n    print(a)\n", "N = int(input())\nL = []\nM = []\nfor i in range(N):\n  a = int(input())\n  L.append(a)\n  M.append(a)\nL.sort()\nfor j in range(N):\n  if M[j] == L[len(L) - 1]:\n    print(L[len(L) - 2])\n  else:\n    print(L[len(L) - 1])", "N = int(input())\nS = [int(input()) for _ in range(N)]\nA = sorted(S)\n\nfor i in range(N):\n  if S[i] == A[-1]:\n    if len(A) > 1:\n      print((A[-2]))\n    else:\n      print((A[-1]))\n  else:\n    print((A[-1]))\n\n", "# coding: utf-8\n\ndef main():\n    N = int(input())\n    fir, fir_i, sec, sec_i = 0, 0, 0, 0\n\n    for i in range(N):\n        tmp = int(input())\n        if tmp > fir:\n            sec = fir\n            sec_i = fir_i\n            fir = tmp\n            fir_i = i\n        elif tmp > sec:\n            sec = tmp\n            sec_i = i\n\n    for i in range(N):\n        if i != fir_i:\n            print(fir)\n        else:\n            print(sec)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = []\nfor _ in range(N):\n  A.append(int(input()))\nAA = sorted(A)\nmost = AA[N-1]\nsecond = AA[N-2]\n\nfor i in range(N):\n  if A[i] == most:\n    print(second)\n  else:\n    print(most)", "N = int(input())\nA = [int(input()) for i in range(N)]\n\nmax_v, next_max_v = sorted(A, reverse=True)[:2]\nfor a in A:\n    print(max_v if a != max_v else next_max_v)", "N = int(input())\nA = [int(input()) for i in range(N)]\nm = max(A)\nmindex = A.index(m)\nfor i in range(N):\n    if(i != mindex):\n        print(m)\n    else:\n        pop = A.pop(i)\n        print(max(A))\n        A.insert(i,pop)", "n = int(input())\nxlist = [int(input()) for i in range(n)]\nylist = sorted(xlist)\nmax1 = ylist[-1]\nmax2 = ylist[-2]\nfor i in range(n):\n  if xlist[i] != max1:\n    print(max1)\n  else:\n    print(max2)", "n = int(input())\n\na = [0] * n\n\nfm, fi = 0, 0\nsm, si = 0, 0  \nfor i in range(n):\n    a[i] = int(input())\n    if a[i] > fm:\n        sm, si = fm, fi\n        fm, fi = a[i], i\n    elif a[i] > sm:\n        sm, si = a[i], i\n        \nfor i in range(n):\n    if i != fi:\n        print(fm)\n    else:\n        print(sm)        ", "import copy\n\nN = int(input())\n\nary = []\nfor _ in range(N):\n    ary.append(int(input()))\n\nary_copy = copy.copy(ary)\nary_copy.sort()\n\nmax_1 = ary_copy[-1]\nmax_2 = ary_copy[-2]\n\nfor i in ary:\n    if i == max_1:\n        print(max_2)\n    elif i != max_1:\n        print(max_1)", "N = int(input())\nA = [int(input()) for _ in range(N)]\n\nM = max(A)\ni = A.index(M)\nM2 = max(A[:i] + A[i+1:])\n\nfor a in A:\n    print(M if a != M else M2)", "import sys\nimport numpy as np\nn = int(input())\na = [int(input()) for _ in range(n)]\nmx = str(max(a))\nmx_id = a.index(int(mx))\na.remove(int(mx))\nmx_sub = str(max(a))\nans = '\\n'.join(mx if i != mx_id else mx_sub for i in range(n))\n\nprint(ans)", "n = int(input())\na = [int(input()) for i in range(n)]\nb=sorted(a)\nc,d=b[-1],b[-2]\nfor i in a:\n    print(c if i!=c else d)"]