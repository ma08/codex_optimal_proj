["N = int (input ())\nx = 1\nwhile x**2 <= N:\n  x += 1\nx -= 1\nprint (x**2)", "#\n# abc077 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\nimport math\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"10\"\"\"\n        output = \"\"\"9\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"81\"\"\"\n        output = \"\"\"81\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"271828182\"\"\"\n        output = \"\"\"271821169\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n    print((math.floor(math.sqrt(N))**2))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "n = int(input())\n\ni=1\nwhile i*i <= n:\n    ans = i*i\n    i+=1\nprint(ans)", "n = int(input())\nprint(int(n**(1/2))**2)", "N = int(input())\ni = 1\nif N == 1:\n    print(i)\nelse:\n    while i <= N:\n        if((i * i) > N):\n            print((i-1) * (i-1))\n            break\n        i += 1", "from math import sqrt\n\nn = int(input())\n\nfor i in range(int(sqrt(n) + 1)):\n    if i ** 2 <= n:\n        ans = i ** 2\nprint(ans)", "from math import sqrt\nn = int(input())\nprint(int(sqrt(n))**2)", "#!/usr/bin/env python3\nN = int(input())\n\nans = 0\nfor i in range(1, 10**5):\n    n = i ** 2\n    if n <= N:\n        ans = n\n    else:\n        break\nprint(ans)\n", "print(int(int(input())**.5)**2)", "a=int(input())\ni=0\nwhile i**2<=a:\n  i=i+1\nprint((i-1)**2)", "n = int(input())\n\nfor i in range(n, 0, -1):\n  j = int(i ** 0.5)\n  if int(j) ** 2 == i:\n    break\nprint(i)\n", "print((int(int(input())**0.5)**2))\n", "import math\nx=int(input())\ny= math.sqrt(x)\nz= y//1\na=z**2\nprint(int(a))", "n = int(input())\nprint((int(n ** 0.5) ** 2))\n", "n = int(input())\nwhile (n ** 0.5) % 1 != 0:\n    n -= 1\nprint(n)", "print(int(int(input()) ** 0.5) ** 2)", "from math import sqrt\n\nn = int(input())\n\nans = int(sqrt(n))\n\nif (ans + 1) * (ans + 1) <= n:\n    print((ans + 1) * (ans + 1))\nelif ans * ans <= n:\n    print(ans * ans)\nelse:\n    print((ans - 1) * (ans - 1))", "print(int(int(input())**0.5//1)**2)", "N=int(input())\nans=1\nfor i in range(N+1):\n    if i*i<=N:\n        ans=i\n    else:\n        break\nprint((ans**2))\n", "n = int(input())\nx = 1\nwhile x * x <= n:\n    x += 1\n \nx -= 1\nprint(x * x)", "n = int(input())\nprint(int(n ** 0.5) ** 2)", "n = int(input())\nfor i in range(100000):\n  if n >= (10**5-i)**2:\n    print((10**5-i)**2)\n    return", "n=int(input())\nprint(int(n**(1/2))**2)", "import math\nprint(int(math.sqrt(int(input())))**2)", "from math import sqrt\nn=int(input())\nfor i in range(1,int(sqrt(n))+1):\n  if i**2>n:\n    print((i-1)**2)\n    break\nelse:\n  print(i**2)", "import sys\nN=int(input())\nif N==1:\n    print(\"1\")\nelif N==2:\n    print(\"1\")\nelse:\n    for i in range(N):\n        if i**2>N:\n            print((i-1)**2)\n            return\n        else:\n            pass", "import math\nN=int(input())\nc=int(math.sqrt(N))\nprint(c**2)", "n=int(input())\ni=1\ntmp=1\nwhile True:\n  if i**2 <= n:\n    tmp = i**2\n  else:\n    break\n  i += 1\nprint(tmp)", "def multiple(n):\n    a = []\n    for i in range(1,int(n**.5)+1):\n        a.append(i*i)\n    return a\nn = int(input())\na = multiple(n)\nans = 10**18\nfor i in a:\n    if n-i < 0:\n        continue\n    ans = min(ans,abs(n-i))\nprint(n-ans)", "# coding = SJIS\n\nn = int(input())\n\nfor i in range(n):\n    if int((n - i) ** 0.5) == (n - i) ** 0.5:\n        print((n - i))\n        return\n", "import math\na=int(input())\nb=math.sqrt(a)\nn=math.ceil(b)\nm=math.floor(b)\nprint(m**2)", "N=int(input())\nfor i in range(int(N**0.5)+1):\n    if N>=i**2:\n        ans=i**2\n    else:\n        break\nprint(ans)", "import math\n\n\ndef answer(n: int) -> int:\n    return int(math.sqrt(n)) ** 2\n\n\ndef main():\n    n = int(input())\n    print(answer(n))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nfor i in range(1,10**5+2):\n  if i**2>n:print(((i-1)**2));return\n", "n = int(input())\nfor i in range(100000):\n  if i**2 > n:\n    print((i-1)**2)\n    break", "n = int(input())\nfor i in range(1,n+2):\n    if i*i > n:\n        print((i-1)*(i-1))\n        return", "print((int(int(input())**.5)**2))\n", "n = int(input())\nans=1\nfor i in range(n+1):\n    if i**2<=n:\n        ans=i**2\n    else:\n        break\n\nprint(ans)", "import math\nN = int(input())\n\nans = 1\nfor i in range(1,math.floor(math.sqrt(N))+1):\n  if i * i <= N:\n    ans = i * i\n    \nprint(ans)", "def main():\n    N = int(input())\n    a = 1\n    i = 0\n    prev = 0\n    while a <= N:\n        i += 1\n        prev = a\n        if a > N:\n            break\n        else:\n            a = i * i\n    print(prev) \nmain()\n", "print(int(int(input())**.5)**2)", "import math\nN = int(input())\nfor i in range(N):\n  x = N - i\n  if int(math.sqrt(x)) == math.sqrt(x):\n    print(x)\n    break\n", "N = int(input())\n\nfrom math import floor, sqrt\nans = floor(sqrt(N))**2\nprint(ans)\n", "n = int(input())\nprint(int(n**0.5)**2)", "N = int(input())\nfor i in range(1, N+1):\n    if i*i > N:\n        print(((i-1)*(i-1)))\n        return\nprint((1))\n", "N = int(input())\n \nprint(int(N**0.5)**2)", "N = int(input())\nprint(int(N**(1/2))**2)", "N = int(input())\nprint(int((N**(1/2)//1)**2))", "n=int(input())\n\nans=1\nloop = 3\nfor i in range (1,100000):\n        if i**2 <= n:\n                ans=i**2\n        \n        \n\nprint(ans)", "n=int(input())\ni=1\ntmp=1\nwhile True:\n  if i**2<=n:\n    tmp=i**2\n  else:\n    break\n  i+=1\nprint(tmp)", "n = int(input())\nprint((int(n ** 0.5)) ** 2)", "N = int(input())\n\nfor i in range(1, 10**9):\n  if i**2 == N:\n    print((i**2))\n    break\n  elif i**2 > N:\n    print(((i-1)**2))\n    break\n", "N = int(input())\nprint((int(N**(1/2))**2))\n", "n = int(input())\nprint((int(n**(1/2)))**2)", "n = int(input())\n\n\nans = 1\nfor i in range(1, n):\n  if i**2 > n:\n    ans = (i-1)**2\n    break\n\n\nprint(ans)", "import math\nans=math.floor(int(input())**0.5)\nprint (ans*ans)", "N = int(input())\nans = 1\nfor i in range(1, N):\n    if i*i > N:\n        break\n    ans = max(ans, i*i)\nprint(ans)", "print(int(int(input())**.5)**2)", "n = int(input())\nans = 0\nfor i in range(100001):\n    if i **2 <= n:\n        ans = i**2\n    \nprint(ans)\n", "import math\n\nN=int(input())\nn=math.floor(math.sqrt(N))**2\n\nprint(n)\n\n", "n = int(input())\nprint(int(n ** 0.5) ** 2)", "from math import sqrt\n\nn = int(input())\nprint(int(sqrt(n)) ** 2)", "import math\nn = int(input())\nprint(int(math.sqrt(n))**2)", "import math\nn = int(input())\nprint(int(math.sqrt(n))**2)", "n = int(input())\nc = 1\nfor i in range(10**5):\n    if i**2 <= n:c = i**2\n    else:break\nprint(c)", "N = int(input())\n\nfor i in range(int(N**0.5)+3):\n  if i**2 > N:\n    print((i-1)**2)\n    break", "n = int(input())\nprint(int(n**.5) ** 2)", "import math\nN=int(input())\nans=N\nfor i in range(N):\n  if math.sqrt(ans).is_integer():\n    print(ans)\n    break\n  ans-=1", "N=int(input())\nimport math\nprint((int(math.sqrt(N)))**2)", "n = int(input())\n\nfor i in range(1, 10**5):\n    p = i**2\n    if p > n:\n        print((i-1)**2)\n        break", "import math\n\nn = int(input())\nprint(math.floor(math.sqrt(n)) ** 2)", "N=int(input())\nprint(int(N**(1/2))**2)", "n = int(input())\n\nans = 0\nmax = int(n**0.5)+1\nfor i in range(1, max, 1):\n    tmp = i**2\n    if tmp <= n:\n        ans = tmp\nprint(ans)", "n=int(input())\n\nfor i in range(10**5):\n    if i**2 > n:\n        print((i-1)**2)\n        break", "n = int(input())\np = int(n**0.5)\na = 1\nans = 1\nwhile a<=p:\n    if a**2 <=n:\n        ans = max(ans,a**2)\n    a +=1\nprint(ans)", "N = int(input())\nprint(int(N**(0.5))**2)", "N=int(input())\nif int((N+1)**.5)**2==N:print(N)\nelse:print(int(N**.5)**2)", "N = int(input())\nprint((int(N**.5)**2))\n", "N = int(input())\nprint(int(N**0.5)**2)", "N = int(input())\nfrom math import sqrt, floor\nfor i in range(1,floor(sqrt(N))+2):\n    if i**2 > N:\n        print((i-1)**2)", "import math\nn = int(input())\n\nfor i in range(10**5):\n    if n < i ** 2:\n        print((i-1) ** 2)\n        break", "n=int(input())\nprint(int(n**0.5)**2)", "n=int(input())\nres=1\nfor i in range(100000):\n    if i**2>n:\n        break\n    res=i*i\nprint(res)", "n = int(input())\nfor i in range(1, n):\n    if i**2 > n:\n        print((i-1)**2)\n        break\nelse:\n    print(1)", "import math\nn = int(input())\nfor i in range(10**9):\n  if math.sqrt(n) == int(math.sqrt(n)):\n    print(n)\n    break\n  n -= 1\n", "N=int(input())\nif N==1 :\n  print(1)\n  return\nfor i in range(1,N+1) :\n  if i*i>N :\n    print((i-1)*(i-1))\n    return", "n = int(input())\n\nans = 0\nfor i in range(1, 10 ** 5):\n    if i ** 2 <= n:\n        ans = i ** 2\n\nprint(ans)\n", "import math\n\nn = int(input())\nprint(math.floor(math.sqrt(n)) ** 2)", "x = int(input())\nfor i in range(10**5):\n  if i**2>x:\n    a=((i-1)**2)\n    break\nprint(a)", "import math\nn = int(input())\nprint(int(math.sqrt(n)) * int(math.sqrt(n)))", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [int(input()) for _ in range(n)]\n\nn = int(input())\n\nans = 1\nfor i in range(1,n+1):\n    if (i*i > n):\n        ans =  (i-1)**2\n        break\nprint(ans)\n\n\n\n", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\nn = ri()\na = int(n**0.5)\nprint((a**2))\n\n\n\n\n\n\n\n\n\n\n", "N = int(input())\nfor i in range(N+1):\n    if i ** 2 == N:\n        print((i**2))\n        return\n    elif i ** 2 > N:\n        print((max((i-1)**2,1)))\n        return\n", "n = int(input())\nans = 0\nk = 1\nwhile k ** 2 <= n:\n  ans = k ** 2\n  k += 1\nprint(ans)", "#ABC077B\nn = int(input())\nwhile n>0:\n    tmp = n**(1/2)\n    if(tmp==int(tmp)):\n        print(n)\n        break\n    n-=1", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\nn = int(input())\n\nans = 1\nfor i in range(0, n):\n    if (ans+1)**2 > n:\n        break\n    ans += 1\nprint((ans**2))\n", "import math\nn = int(input())\ntmp = int(math.sqrt(n))\nprint(tmp**2)", "N = int(input())\n\ni = 1\nwhile i*i <= N:\n  i += 1\n\nprint((i-1)**2)", "N=int(input())\nC=0\nif N==1:\n  print(1)\n  return\nfor i in range(1,N):\n  if i**2<N:\n    C=i**2\n  elif i**2==N:\n    C=i**2\n    break\n  elif i**2>N:\n    break\nprint(C)"]