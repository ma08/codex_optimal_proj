["a=list(map(int,input().split()))\nprint(len(set(a)))", "s = list(map(int,input().split()))\nprint(len(set(s)))", "lst = input().split()\nif len(lst) == len(set(lst)):\n\tprint('3')\nif len(lst)-1 == len(set(lst)):\n\tprint('2')\nif len(lst)-2 == len(set(lst)):\n\tprint('1')\n", "l = input().split()\nprint((len(set(l))))\n", "print(len(set(input().split())))", "L=set(list(map(int,input().split())))\nprint(len(L))", "paint_list = set(map(int,input().split()))\nprint(len(paint_list))", "paint_list = map(int,input().split())\nprint(len(set(paint_list)))", "print(len(set(input().split())))", "a,b,c=input().split()\nls=[a,b,c]\nls.sort()\nif ls[0]==ls[1]==ls[2]:\n  print(\"1\")\nelse:\n  if ls[0]==ls[1]:\n    print(\"2\")\n  else:\n    if ls[1]==ls[2]:\n      print(\"2\")\n    else:\n      print(\"3\")", "print(len(set(input().split())))", "print(len(set(map(int, input().split()))))", "abc =list(input().split())\n\nprint(len(set(abc)))", "#!/usr/bin/env python3\nl = list(map(int, input().split()))\nl = set(l)\nprint((len(l)))\n", "a, b, c = map(int, input().split())\nif a == b == c: print(1)\nelif a == b or b == c or c == a: print(2)\nelse: print(3)", "s = set()\nl = list(input().split())\nfor e in l:\n  s.add(e)\nprint(len(s))", "a, b, c = list(map(int, input().split()))\ndata = [a]\nif not b in data:\n    data.append(b)\nif not c in data:\n    data.append(c)\nprint(len(data))", "print(len(set(input().split())))", "print(len(set(map(int, input().split()))))", "#\n# abc046 a\n#\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3 1 4\"\"\"\n        output = \"\"\"3\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3 3 33\"\"\"\n        output = \"\"\"2\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    a, b, c = list(map(int, input().split()))\n\n    ans = 0\n    if a == b == c:\n        print(\"1\")\n    elif a == b or b == c or c == a:\n        print(\"2\")\n    else:\n        print(\"3\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "print((len(set(input().split()))))\n", "abc=list(map(int,input().split()))\nprint(len(set(abc)))", "a, b, c = map(int, (input().split()))\nprint(len(set([a, b, c])))", "a,b,c=map(int,input().split())\n\nif a==b and b==c:\n    ans=1\nelif a==b and b!=c:\n    ans=2\nelif a!=b and b==c:\n    ans=2\nelif a==c and a!=b:\n    ans=2\nelse:\n    ans=3\nprint(ans)", "abc=list(map(int , input().split()))\ncount=0\nfor i in range(0,len(abc)-1):\n    abc.sort()\n    if(abc[i] != abc[i+1]):\n        count+=1\n        \n        \n    \n    \nprint(count+1)", "a = list(input().split())\nans = len(set(a))\nprint(ans)", "a,b,c=map(int,input().split())\nans=1\nif b!=a:ans+=1\nif a!=c and b!=c:ans+=1\nprint(ans)", "s=set(map(int,input().split()))\nprint(len(s))", "A = list(map(int, input().split()))\nNum = [0]*101\ncnt = 0\nfor i in A:\n    Num[i] += 1\n    if Num[i] == 1:\n        cnt +=1\n        \nprint(cnt)", "print(len(set([int(i) for i in input().split()])))", "print(len(set(input().split())))", "a, b, c = map(int, input().split())\nm = set([a, b, c])\nprint(len(m))", "arr = list(map(int, input().split()))\nprint(len(set(arr)))", "l = list(map(int, input().split()))\nprint(len(set(l)))", "abc = list(map(int,input().split()))\nset_abc = set(abc)\nprint(len(set_abc))", "print(len(set(input().split())))", "def main():\n    c = list(map(int, input().split()))\n\n    c_set = set(c)\n    print((len(c_set)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "print((len(set(map(int, input().split())))))\n", "a, b, c = map(int, input().split())\n\nif a == b and b == c:\n    print(1)\nelif a == b and b != c:\n    print(2)\nelif a != b and b == c:\n    print(2)\nelif a == c and a != b:\n    print(2)\nelif a != b and b != c:\n    print(3)", "a, b, c = map(int,input().split())\nif a == b == c:\n  print(1)\nelif a == b or b == c or c == a:\n  print(2)\nelse:\n  print(3)", "a,b,c = map( int, input().split())\nif a == b == c :\n    print(1)\nelif a!=b==c or b!=c==a or c!=a==b :\n    print(2)\nelse:\n    print(3)", "a,b,c=map(int,input().split())\nprint(len(set([a,b,c])))", "print(len(set(map(int, input().split()))))", "print(len(set(map(int,input().split()))))", "a=set(map(int,input().split()))\nprint(len(a))", "a=set(map(int,input().split()))\nprint(len(a))", "a=list(map(int, input().split()))  \nprint(len(set(a)))", "a = list(map(int, input().split()))\nprint(len(set(a)))", "print((len(set(map(int, input().split())))))\n", "a = list(map(int, input().split()))\n\ns = set(a)\nprint(len(s))", "a = input().split()\nif a[0] == a[1] == a[2]:\n  print(1)\nelif a[0] == a[1] or a[1] == a[2] or a[2] == a[0]:\n  print(2)\nelse:\n  print(3)", "li=a,b,c=list(map(int,input().split()))\nprint(len(set(li)))", "a, b, c = list(map(int, input().split()))\n\nif a == b == c:\n    print((1))\nelif a == b or b == c or a == c:\n    print((2))\nelse:\n    print((3))\n", "a = list(map(int, input().split()))\na = set(a)\nprint(len(a))", "a, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))", "a = list(map(int,input().split()))\n\nprint(len(set(a)))", "a,b,c=map(int,input().split())\nprint(len(set([a,b,c])))", "print(len(set(list(map(int,input().split())))))", "#ABC046\ns = input().split()\nprint(len(set(s)))", "a,b,c = map(int,input().split())\nprint(len(set([a,b,c])))", "al = list(map(int, input().split()))\nprint((len(set(al))))\n\n", "def solve():\n    print(len(set(input().split())))\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "C=list(map(int,input().split()))\nC=set(C)\nprint(len(C))", "print(len(set(input().split())))", "import collections\n\nn = list(input().split())\n\nc = collections.Counter(n)\n\nprint(len(c))", "a = set(map(int,input().split()))\n\nprint((len(a)))\n\n", "import numpy as np\narray = list(map(int, input().split(' ')))\nprint(len(np.unique(array)))", "\ns = input().split()\ns = set(s)\n\nprint(len(s))", "a,b,c=map(int,input().split())\n\nif a==b==c:\n  print(\"1\")\nelif a==b or b==c or c==a:\n  print(\"2\")\nelse:\n  print(\"3\")", "a=set(input().split())\nprint(len(a))", "a, b, c = map(int, input().split())\nif a == b and b == c:\n  print(1)\nelif a != b and b != c and c != a:\n  print(3)\nelse:\n  print(2)", "a,b,c=map(int,input().split())\nif a==b==c:\n  print(\"1\")\nelif a!=b and a!=c and b!=c:\n  print(\"3\")\nelse:\n  print(\"2\")", "a = list(input().split())\nif a[0] == a[1] and a[1] == a[2]:\n    print(1)\nelif a[0] == a[1] or a[1] == a[2] or a[2] == a[0]:\n    print(2)\nelse:\n    print(3)", "data=list(input().split())\ns=1\nfor i in range(1,len(data)):\n    for j in range(0,i):\n        if data[i]==data[j]:\n            data[i]=-1\n    if data[i]!=-1:\n        s=s+1            \nprint(s)\n\n", "a = list(input().split())\nprint(len(set(a)))", "a = list(map(int, input().split()))\nprint(len(set(a)))", "import collections\ncolor = map(int, input().split())\nprint(len(collections.Counter(color)))", "def iroha():\n    a, b, c = list(map(int, input().split()))\n    if a == b and b == c and a == c:\n        print((1))\n    elif a != b and b != c and a != c:\n        print((3))\n    else:\n        print((2))\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "a, b, c=map(int, input().split(\" \"))\nink=[a, b, c]\nprint(len(set(ink)))", "N = map(int,input().split())\nprint(len(set(N)))", "penki=list(map(int,input().split()))\nans=len(set(penki))\nprint(ans)", "import numpy as np\na = list(map(int, input().split()))\n\n\nprint((len(set(a))))\n", "print(len(set(map(int, input().split()))))", "a = [*map(int,input().split())]\nprint(len(set(a)))", "paint_list = input().split()\nprint(len(set(paint_list)))", "ary = list(map(int, input().split()))\nprint(len(set(ary)))", "paint = map(int,input().split())\nprint(len(set(paint)))", "print(len(set(map(int,input().split()))))", "a,b,c = map(int,input().split())\nif a == b == c:\n    print(1)\nelif a == b or b == c or c == a:\n    print(2)\nelse:\n    print(3)", "l = list(map(int, input().split()))\nprint(len(set(l)))", "a,b,c=map(int,input().split())\ns={a,b,c}\nprint(len(s))", "a = list(map(int, input().split()))\n\nprint(len(set(a)))", "a, b, c = map(int, input().split())\ncount = 3\n\nif a == b == c:\n    print(1)\n    return\nif a == b:\n    count -=1\nif a == c:\n    count -=1\nif b == c:\n    count -=1\nprint(count)", "a = map(int, input().split())\npaint_list = list(a)\n\nif paint_list[0] == paint_list[1] == paint_list[2]:\n    print(1)\nelif paint_list[0] == paint_list[1] and paint_list[0] != paint_list[2]:\n    print(2)\nelif paint_list[0] == paint_list[2] and paint_list[0] != paint_list[1]:\n    print(2)\nelif paint_list[1] == paint_list[2] and paint_list[0] != paint_list[1]:\n    print(2)\nelse:\n    print(3)", "def si(): return input()\ndef ii(): return int(input())\ndef fi(): return float(input())\ndef lint(): return list(map(int, input().split()))\ndef lint_dec(): return list(map(lambda x:int(x) - 1, input().split()))\ndef lnstr(n): return [input() for _ in range(n)]\ndef lnint(n): return [int(input()) for _ in range(n)]\ndef dfs_input(G, m):\n    for _ in range(m):\n        a, b = lint_dec()\n        G[a].append(b)\n        G[b].append(a)\n\n\n###################################\nprint(len(set(lint())))", "str_line = input().split(\" \")\nnum_line = [int(n) for n in str_line]\n\nnum_line.sort()\nnum_list = [num_line[0]]\nfor i in range(1,len(num_line)):\n    if num_line[i] != num_line[i-1]:\n        num_list.append(num_line[i])\n\n#print(num_list)\nprint(len(num_list))", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\ndef main():\n    x = list(map(int, input().split()))\n    print(len(set(x)))\n    \ndef __starting_point():\n    main()\n__starting_point()", "a, b, c = map(int, input().split())\nst = set()\nst.add(a)\nst.add(b)\nst.add(c)\nprint(len(st))", "a, b, c = list(map(int, input().split()))\nL = []\nL.append(a)\nL.append(b)\nL.append(c)\n\nL = list(set(L))\n\nprint((len(L)))\n", "a, b, c = list(map(int, input().split()))\n\nif a == b:\n  if b == c:\n    print((1))\n  else:\n    print((2))\nelif b == c:\n  print((2))\nelif a == c:\n  print((2))\nelse:\n  print((3))\n"]