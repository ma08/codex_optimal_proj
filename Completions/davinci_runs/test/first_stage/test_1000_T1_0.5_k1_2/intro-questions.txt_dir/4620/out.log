2022-04-09 21:09:33.169962 """
A railroad running from west to east in Atcoder Kingdom is now complete.
There are N stations on the railroad, numbered 1 through N from west to east.
Tomorrow, the opening ceremony of the railroad will take place.
On this railroad, for each integer i such that 1≤i≤N-1, there will be trains that run from Station i to Station i+1 in C_i seconds. No other trains will be operated.
The first train from Station i to Station i+1 will depart Station i S_i seconds after the ceremony begins. Thereafter, there will be a train that departs Station i every F_i seconds.
Here, it is guaranteed that F_i divides S_i.
That is, for each Time t satisfying S_i≤t and t％F_i=0, there will be a train that departs Station i t seconds after the ceremony begins and arrives at Station i+1 t+C_i seconds after the ceremony begins, where A％B denotes A modulo B, and there will be no other trains.
For each i, find the earliest possible time we can reach Station N if we are at Station i when the ceremony begins, ignoring the time needed to change trains.

-----Constraints-----
 - 1≤N≤500
 - 1≤C_i≤100
 - 1≤S_i≤10^5
 - 1≤F_i≤10
 - S_i％F_i=0
 - All input values are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
C_1 S_1 F_1
:
C_{N-1} S_{N-1} F_{N-1}

-----Output-----
Print N lines. Assuming that we are at Station i (1≤i≤N) when the ceremony begins, if the earliest possible time we can reach Station N is x seconds after the ceremony begins, the i-th line should contain x.

-----Sample Input-----
3
6 5 1
1 10 1

-----Sample Output-----
12
11
0

We will travel from Station 1 as follows:
 - 5 seconds after the beginning: take the train to Station 2.
 - 11 seconds: arrive at Station 2.
 - 11 seconds: take the train to Station 3.
 - 12 seconds: arrive at Station 3.
We will travel from Station 2 as follows:
 - 10 seconds: take the train to Station 3.
 - 11 seconds: arrive at Station 3.
Note that we should print 0 for Station 3.
"""
2022-04-09 21:09:33.169992 --------------------------
2022-04-09 21:09:50.594098 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# \u5165\u529b\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\n\n# \u51fa\u529b\nfor i in range(N):\n    t = 0\n    for j in range(i, N-1):\n        if t < S[j]:\n            t = S[j]\n        else:\n            t = t + F[j] - t % F[j]\n        t += C[j]\n    print(t)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nc = []\ns = []\nf = []\nfor i in range(n - 1):\n    c_tmp, s_tmp, f_tmp = map(int, input().split())\n    c.append(c_tmp)\n    s.append(s_tmp)\n    f.append(f_tmp)\n\nfor i in range(n):\n    if i == n - 1:\n        print(0)\n        continue\n    elif i == 0:\n        t = s[0]\n        for j in range(n - 1):\n            if t % f[j] == 0:\n                t += c[j]\n            else:\n                t += f[j] - t % f[j] + c[j]\n        print(t)\n    else:\n        t = s[i]\n        for j in range(i, n - 1):\n            if t % f[j] == 0:\n                t += c[j]\n            else:\n                t += f[j] - t % f[j] + c[j]\n        print(t)"
    }
  ],
  "created": 1649552973,
  "id": "cmpl-4vGN3Wmifk9AqUQoVjZcC1LMwYWSz",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:09:50.594414 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# \u5165\u529b\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\n\n# \u51fa\u529b\nfor i in range(N):\n    t = 0\n    for j in range(i, N-1):\n        if t < S[j]:\n            t = S[j]\n        else:\n            t = t + F[j] - t % F[j]\n        t += C[j]\n    print(t)"
}
2022-04-09 21:09:50.594460 REASON stop
2022-04-09 21:09:50.595585 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nc = []\ns = []\nf = []\nfor i in range(n - 1):\n    c_tmp, s_tmp, f_tmp = map(int, input().split())\n    c.append(c_tmp)\n    s.append(s_tmp)\n    f.append(f_tmp)\n\nfor i in range(n):\n    if i == n - 1:\n        print(0)\n        continue\n    elif i == 0:\n        t = s[0]\n        for j in range(n - 1):\n            if t % f[j] == 0:\n                t += c[j]\n            else:\n                t += f[j] - t % f[j] + c[j]\n        print(t)\n    else:\n        t = s[i]\n        for j in range(i, n - 1):\n            if t % f[j] == 0:\n                t += c[j]\n            else:\n                t += f[j] - t % f[j] + c[j]\n        print(t)"
}
2022-04-09 21:09:50.595679 REASON stop
