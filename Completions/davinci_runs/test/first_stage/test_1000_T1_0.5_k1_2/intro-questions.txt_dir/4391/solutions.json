["n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nprefix=[a[0]]\nfor i in range(1,n):\n    prefix.append(prefix[-1]+a[i])\nans=[]\nfor i in range(n):\n    for j in range(i+k-1,n):\n        if(i==0):\n            ans.append(prefix[j]/(j-i+1))\n        else:\n            ans.append((prefix[j]-prefix[i-1])/(j-i+1))\nprint(max(ans))", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    s = 0\n    for j in range(i, n):\n        s += a[j];\n        if j - i + 1 >= k:\n            ans = max(ans, s / (j - i + 1))\nprint(ans)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0.0\nfor i in range(n):\n    s = 0\n    for j in range(i, n):\n        s += a[j]\n        if j - i + 1 >= k:\n            ans = max(ans, s / (j - i + 1))\nprint(\"%.20f\" % ans)\n", "from itertools import accumulate\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nacc = [0] + list(accumulate(a))\n\nans = 0\nfor i in range(n - k + 1):\n    for j in range(i + k, n + 1):\n        s = acc[j] - acc[i]\n        t = s / (j - i)\n\n        ans = max(t, ans)\n\nprint(ans)\n", "#import math\n#import itertools\n#from collections import defaultdict, Counter, deque\n\ndef max_average(nums, k):\n    def get_delta(avg, nums, k):\n        n = len(nums)\n        accu = [0.0] * (n + 1)\n        minval_pos = None\n        delta = 0.0\n        for i in range(n):\n            accu[i+1] = nums[i] + accu[i] - avg\n            if i >= (k-1):\n                if minval_pos == None or accu[i-k+1] < accu[minval_pos]:\n                    minval_pos = i-k+1\n                if accu[i+1] - accu[minval_pos] >= 0:\n                    delta = max(delta, (accu[i+1] - accu[minval_pos]) / (i+1 - minval_pos))\n        return delta\n\n    left, delta = min(nums), float(\"inf\")\n    while delta > 1e-6:\n        delta = get_delta(left, nums, k)\n        left += delta\n    return left\n\ndef f(arr, k):\n    return max_average(arr, k)\n    \n\nn, k = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nprint(f(arr, k))", "from itertools import accumulate\n\nn, k = map(int, input().split())\na = map(int, input().split())\nsums = [0] + list(accumulate(a))\n\nres = 0\n\nfor l in range(k, n + 1):\n    for i in range(0, n - l + 1):\n        res = max(res, (sums[i + l] - sums[i]) / l)\n        \nprint(res)", "n, k = map(int,input().split())\ns = [int(i) for i in input().split()]\np  = [0] * (n+1)\nfor i in range(1, n+1):\n    p[i] = p[i-1] + s[i-1]\nma = -5000\nfor i in range(k, n+1):\n    for j in range(k, n+1):\n        sred = (p[j] - p[j-i])/i\n        if sred > ma:\n            ma = sred\nprint(ma)", "# from decimal import *\nn, k = list(map(int, input().split()))\ntemps = [int(i) for i in input().split()]\npredpr = [0]\nfor i in range(n):\n    predpr.append(predpr[i] + temps[i])\nma = 0\n# print(predpr)\nfor i in range(1, n - k + 2):\n    for j in range(i + k - 1, n + 1):\n        cur = (predpr[j] - predpr[i - 1]) / (j - i + 1)\n        if cur > ma:\n            ma = cur\n            # print(i, j)\nprint(ma)\n", "n,k=list(map(int,input().split()))\ns=list(map(int,input().split()))\nx=sum(s[0:k])\nans=-1000000000000000\nfor i in range(n-k+1):\n    av=sum(s[i:k+i])/k\n    if av>ans:\n        ans=av\n    for j in range(n-k-i):\n        av=(((av)*(k+j))+s[k+i+j])/(k+j+1)\n        if av>ans:\n            ans=av\nprint(ans)\n", "n,k=list(map(int,input().split()))\na=[int(i) for i in input().split()]\nsum=0\nma=0.0\nfor i in range(k,n+1):\n    start=0\n    last=i\n    sum=0\n    for i in range(0,last):\n        sum=sum+a[i]\n    #print(sum,i+1)\n    ma=max(sum/(i+1),ma)\n    #print(ma)\n    while(last<n):\n        last=last+1\n        sum=sum-a[start]+a[last-1]\n        start=start+1\n        #print(sum,i+1)\n        ma=max((sum/(i+1)),ma)\n        #print(ma)\nprint(ma)\n", "n,k=map(int,input().split())\narr=list(map(int,input().split()))\nfind=[0]*n\nfor i in range(n):\n\tfind[i]=[0]*n\npresum=[0]*n\npresum[0]=arr[0]\nfor i in range(1,n):\n\tpresum[i]=presum[i-1]+arr[i]\nfor i in range(n-k+1):\n\tfor j in range(i+k-1,n):\n\t\tif i==0:\n\t\t\tfind[i][j]=presum[j]/(j+1)\n\t\telse:\n\t\t\tfind[i][j]=(presum[j]-presum[i-1])/(j-i+1)\nmaxi=0\nfor i in range(n):\n\tfor j in range(n):\n\t\tif find[i][j]>maxi:\n\t\t\tmaxi=find[i][j]\nprint(maxi)", "import collections\nfrom statistics import mean\nmax=0\ns=input().split()\nn,k=int(s[0]),int(s[1])\na=input().split()\na=[int(i) for i in a]\nfor i in range(0,n-k+1):\n    #print(a[i:i+k])\n    s=sum(a[i:i+k])\n    m=s/k\n    #print(s)\n    if(m>max):\n        max=m\n    num=k\n    for j in range(i+k,n):\n        s+=a[j]\n        num+=1\n        m=s/num\n        #print(m)\n        if m>max:\n            max=m\nprint(max)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0]\nfor i in range(n):\n    b.append(a[i] + b[i])\nmax1 = 0\nfor i in range(k, n + 1):\n    for j in range(1, n - i + 2):\n        max1 = max(max1, (b[j + i - 1] - b[j - 1]) / i)\nprint(max1)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\n\nps = [0]\nfor i in a:\n    ps.append(ps[-1] + i)\n\nfor j in range(k, n + 1):\n    for i in range(n):\n        if n < i + j:\n            break\n        s = max(s, (ps[i + j] - ps[i]) / j)\n\nprint(s)\n", "n, k = map(int, input().split())\np = [0]\nmaxx = 0\ns = input().split()\nfor i in range(n):\n    p.append(p[i] + int(s[i]))\nfor i in range(k, n + 1):\n    for j in range(1, n - i + 2):\n        if maxx < (p[j + i - 1] - p[j - 1]) / i:\n            maxx = (p[j + i - 1] - p[j - 1]) / i\nprint(maxx)", "read=lambda:list(map(int,input().split()))\nn,k=read()\na=list(read())\ns=[0]*(n+1)\nfor i in range(1,n+1):\n    s[i]=s[i-1]+a[i-1]\nans=0\nfor i in range(1,n+1):\n    for j in range(i+k-1,n+1):\n        t=(s[j]-s[i-1])/(j-i+1)\n        ans=max(ans,t)\nprint(ans)\n\n", "def solve(n, k, l):\n    dp = [[0] * n for _ in range(n +1)]\n    for i in range(1, n + 1):\n        for j in range(n):\n            if i + j - 1 < len(l):\n                dp[i][j] = dp[i - 1][j] + l[i + j -1]\n    m = 0\n    for i in range(k, n + 1):\n        for j in range(n):\n            m = max(m, dp[i][j] / i)\n    return m\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    print(solve(n, k , l))\n\n__starting_point()", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nrt = -1\n\nap = [a[0]]\n\nfor i in range(1, n):\n\tap.append(ap[i-1] + a[i])\n\nfor ki in range(k, n+1):\n\tans = -1\n\tfor i in range(n-ki+1):\n\n\t\tif i+ki-1 < n:\n\t\t\tif i>0:\n\t\t\t\tans = max(ans, (ap[i+ki-1] - ap[i-1]) )\n\t\t\telse:\n\t\t\t\tans = max(ans, ap[i+ki-1])\n\n\trt = max(rt, ans/ki)\n\nprint(rt)", "def solve(n, k, l):\n    dp = [[0] * n for _ in range(n +1)]\n    m = 0\n    for i in range(1, n + 1):\n        for j in range(n):\n            if i + j - 1 >= len(l):\n                continue\n            dp[i][j] = dp[i - 1][j] + l[i + j -1]\n            if i >= k:\n                m = max(m, dp[i][j] / i)\n    return m\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    print(solve(n, k , l))\n\n__starting_point()", "n, k = map(int, input().split(' '))\na = input().split(' ')\nfor i in range(n):\n    a[i] = int(a[i])\ns = 0.0\nfor i in range(n-k+1):\n    prom = sum(a[i:i+k])\n    num = k\n    if prom / num > s:\n        s = prom /num\n    for j in range(i+k, min(n, i+2*k)):\n        prom += a[j]\n        num += 1\n        if prom / num > s:\n            s = prom/num\nprint(s)", "arr = list(map(int, input().split()))\nn = arr[0]\nk = arr[1]\narr = list(map(int, input().split()))\narr2 = []\n# maxi = [0 for i in range(k)]\nfor i in range(k, n+1):\n\ttemp = sum(arr[0:i])\n\ttemp3 = temp\n\tfor j in range(i, n):\n\t\ttemp2 = temp3 + arr[j] - arr[j-i]\n\t\ttemp3 = temp2\n\t\tif(temp2>temp):\n\t\t\ttemp = temp2\n\tarr2.append(temp/i)\n\nprint(max(arr2))", "n, k = list(map(int, input().split(' ')))\na = input().split(' ')\nfor i in range(n):\n    a[i] = int(a[i])\ns = 0.0\nfor i in range(n-k+1):\n    prom = sum(a[i:i+k])\n    num = k\n    if prom / num > s:\n        s = prom /num\n    for j in range(i+k, min(n, i+2*k)):\n        prom += a[j]\n        num += 1\n        if prom / num > s:\n            s = prom/num\nprint(s)\n", "def main():\n    n, k = list(map(int, input().split()))\n    a = [0] + list(map(int, input().split()))\n    if k == 1:\n        print(max(a))\n        return 0\n    for i in range(n):\n        a[i + 1] += a[i]\n    maks = [0] * (n - k + 1)\n    for j in range(n - k + 1):\n        for i in range(n - j - k + 1):\n            maks[j] = max(maks[j], a[i + j + k] - a[i])\n    mask = 0\n    for i in range(n - k + 1):\n        mask = max(mask, maks[i] / (k +i))\n    print(mask)\n    return 0\nmain()\n", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = 0\nfor i in range(0,n-k+1):\n    x = sum(a[i:k+i-1])\n    y = len(a[i:k+i-1])\n    for j in range(k+i,n+1):\n        x +=a[j-1]\n        y +=1\n        if x/y > m:\n            m = x/y\nprint(m)\n", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = 0\nfor i in range(0,n-k+1):\n    x = sum(a[i:k+i-1])\n    y = k-1\n    for j in range(k+i,n+1):\n        x +=a[j-1]\n        y +=1\n        if x/y > m:\n            m = x/y\nprint(m)\n"]