["A = list(map(int, input().split()))\nA.sort()\nprint(A[3] - A[0], A[3] - A[2], A[3] - A[1])\n", "def main():\n    a, b, c, d = sorted(map(int, input().split()))\n    print(d - a, d - b, d - c)\n    return 0\nmain()", "a, b, c, d = sorted(list(map(int, input().split())))\nprint(d - a, d - b, d - c)\n", "arr=list(map(int,input().split()))\narr.sort()\nans=[]\nfor i in range(3):\n\tans.append(arr[-1]-arr[i])\nprint(*ans)", "a, b, c, d = sorted(map(int, input().split()))\nprint(d - a, d - b, d - c)\n", "x1,x2,x3,x4 = map(int,input().split())\n\ns1 = max(x1,x2,x3,x4)\n\nfor i in [x1,x2,x3,x4]:\n\tif i!=s1:\n\t\tprint(s1-i,end=' ')", "l = list(map(int,input().split()))\nk = max(l)\nfor i in l:\n\tif i != k:\n\t\tprint(k - i, end = \" \")\n\t\t", "A = sorted([int(a) for a in input().split()])\nm = A[-1]\nprint(m-A[2], m-A[1], m-A[0])\n", "def mp():\n    return map(int, input().split())\n\na = list(mp())\na.sort(reverse = True)\nprint(a[0] - a[1], a[0] - a[2], a[0] - a[3])", "#  =========     /\\       /|    |====/|\n#      |        /  \\       |    |   / |\n#      |       /____\\      |    |  /  |\n#      |      /      \\     |    | /   |\n#  ========= /        \\  =====  |/====|  \n#  code\n\nfrom collections import Counter\ndef __starting_point():\n    d = list(map(int,input().split()))\n    d.sort()\n    a = d[0]\n    b = d[1]\n    c = d[2]\n    d = d[3]\n    x = d - a\n    y = d - b\n    z = d - c\n\n    print(x,y,z)\n__starting_point()", "a = list(map(int, input().split()))\na.sort()\nfor i in a[:-1]:\n\tprint(a[-1]-i, end=\" \")", "x1, x2, x3, x4 = map(int, input().split())\ns = [x1, x2, x3, x4]\ns.sort()\nfor i in range(3):\n    print(s[-1] - s[i], end=' ')", "# -*- coding: utf-8 -*-\n\nab, ac, bc, abc = sorted(map(int, input().split()))\nprint(ab + ac - abc, ab + bc -abc, bc + ac - abc)\n", "l=[int(i) for i in input().split()]\nl.sort()\nm=l[3]\nprint(m-l[0],m-l[1],m-l[2])", "l = list(map(int,input().split()))\nl.sort()\n\nprint(l[-1] - l[0] , l[-1]-l[1] , l[-1]-l[2])\n", "a = [int(e) for e in input().split()]\na.sort()\nA = a[-1] - a[0]\nB = a[-1] - a[1]\nC = a[-1] - a[2]\nprint(A, B, C)\n", "a = list(map(int, input().split()))\na.sort()\nprint(a[3]-a[0], a[3]-a[1], a[3]-a[2])\n", "arr = list(map(int , input().split()))\narr.sort()\nprint(arr[-1] - arr[0] ,arr[-1] -arr[1] , arr[-1]-arr[2] )\n", "#\t!/usr/bin/env python3\n#\tencoding: UTF-8\n#\tModified: <16/Apr/2019 08:07:57 PM>\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology (IIIT),Gwalior\n\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef input(): return sys.stdin.readline().strip()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    p = get_array()\n    p.sort()\n    a, b, c, d = p[0], p[1], p[2], p[3]\n    z = d - a\n    y = d - b\n    x = d - c\n    print(x, y, z)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "x = sorted(map(int, input().split()))\nprint(\"%d %d %d\"%(x[-1]-x[0], x[-1]-x[1], x[-1]-x[2]))\n", "n = [int(x) for x in input().split()]\nm = max(n)\nn.remove(m)\nprint(' '.join(str(m - x) for x in n))\n", "c, b, a, d = sorted(list(map(int, input().split())))\nprint(d-a, d-b, d-c)", "a = list(map(int,input().split()))\na.sort()\nprint(a[3]-a[2],a[3]-a[1],a[3]-a[0])\n", "a, b, c, d = list(map(int, input().split()))\n\n\nx = max(a, b, c, d)\n\nif x == a:\n\tprint(x - b, x - c, x - d)\nelif x == b:\n\tprint(x - a, x - c, x - d)\nelif x == c:\n\tprint(x - b, x - a, x - d)\nelif x == d:\n\tprint(x - b, x - c, x - a)\n\n", "import math\nimport bisect\nimport itertools\nimport sys\nI=lambda : sys.stdin.readline()\nmod=10**9 +7\n'''fact=[1]*100001\nifact=[1]*100001\nfor i in range(1,100001):\n    fact[i]=((fact[i-1])*i)%mod\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\ndef ncr(n,r):\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\ndef npr(n,r):\n    return (((fact[n]*ifact[n-r])%mod))\n    '''\n\ndef modu(a,m):\n    if a%m:\n        return a%m\n    return m\n\ndef mindiff(a):\n    b=a[:]\n    b.sort()\n    m=10000000000\n    for i in range(len(b)-1):\n        if b[i+1]-b[i]<m:\n            m=b[i+1]-b[i]\n    return m\n    \ndef lcm(a,b):\n    return a*b//math.gcd(a,b)\n\n    \ndef merge(a,b):\n    i=0;j=0\n    c=0\n    ans=[]\n    while i<len(a) and j<len(b):\n        if a[i]<b[j]:\n            ans.append(a[i])\n            i+=1\n        else:\n            ans.append(b[j])\n            c+=len(a)-i\n            j+=1\n    ans+=a[i:]\n    ans+=b[j:]\n    return ans,c\ndef mergesort(a):\n    if len(a)==1:\n        return a,0\n    mid=len(a)//2   \n    left,left_inversion=mergesort(a[:mid])\n    right,right_inversion=mergesort(a[mid:])\n    m,c=merge(left,right)\n    c+=(left_inversion+right_inversion)\n    return m,c\n    \ndef is_prime(num):\n    if num == 1: return False\n    if num == 2: return True\n    if num == 3: return True\n    if num%2 == 0: return False\n    if num%3 == 0: return False\n    t = 5\n    a = 2\n    while t <= int(math.sqrt(num)):\n        if num%t == 0: return False\n        t += a\n        a = 6 - a\n    return True\n    \n  \ndef ceil(a,b):\n    if a%b==0:\n        return a//b\n    else:\n        return (a//b + 1)\n\n\ndef ncr1(n,r):\n    s=1\n    for i in range(min(n-r,r)):\n        s*=(n-i)\n        s%=mod\n        s*=pow(i+1,mod-2,mod)\n        s%=mod\n    return s\n\n\n#/////////////////////////////////////////////////////////////////////////////////////////////////\n\na=list(map(int,input().split()))\na.sort()\nprint(a[-1]-a[0],a[-1]-a[1],a[-1]-a[2])\n"]