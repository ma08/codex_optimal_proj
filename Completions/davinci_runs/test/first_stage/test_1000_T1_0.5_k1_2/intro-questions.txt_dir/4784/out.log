2022-04-09 22:22:30.603354 """
Pero has negotiated a Very Good data plan with his internet provider. The provider will let Pero use up $X$ megabytes to surf the internet per month. Each megabyte that he doesnâ€™t spend in that month gets transferred to the next month and can still be spent. Of course, Pero can only spend the megabytes he actually has.

If we know how much megabytes Pero has spent in each of the first $N$ months of using the plan, determine how many megabytes Pero will have available in the $N + 1$ month of using the plan.

-----Input-----
The first line of input contains the integer $X$ ($1 \leq X \leq 100$). The second line of input contains the integer $N$ ($1 \leq N \leq 100$). Each of the following $N$ lines contains an integer $P_ i$ ($0 \leq P_ i \leq 10000$), the number of megabytes spent in each of the first $N$ months of using the plan. Numbers $P_ i$ will be such that Pero will never use more megabytes than he actually has.

-----Output-----
The first and only line of output must contain the required value from the task.

-----Examples-----
Sample Input 1:
10
3
4
6
2
Sample Output 1:
28

Sample Input 2:
10
3
10
2
12
Sample Output 2:
16
"""
2022-04-09 22:22:30.603373 --------------------------
2022-04-09 22:22:56.476343 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res -= int(input())\n\nprint(res)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\"\"\"\nSolution\n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Read input\nX = int(input())\nN = int(input())\nP = [int(input()) for i in range(N)]\n\n# Init\nMB_left = X\n\n# Loop through months and calculate remaining MB\nfor i in range(N):\n    if MB_left >= P[i]:\n        MB_left -= P[i]\n    else:\n        MB_left = 0\n    MB_left += X\n\n# Print result\nprint(MB_left)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# number of megabytes available per month\nx = int(input())\n\n# number of months\nn = int(input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nX = int(input())\nN = int(input())\n\ntotal_used = 0\nfor i in range(N):\n    used = int(input())\n    total_used += used\n\nprint(X + total_used)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nx = int(input())\nn = int(input())\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = int(input())\n\np[n] = x\nfor i in range(n - 1, -1, -1):\n    p[i] = p[i + 1] - p[i]\n\nprint(p[0])"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#Number of megabytes per month\nX = int(input())\n#Number of months\nN = int(input())\n#Megabytes per month\nmegabytes = [int(input()) for i in range(N)]\n\n#Total megabytes used\ntotal_megabytes = sum(megabytes)\n#Megabytes left over\nmegabytes_left = X - total_megabytes\n\n#Total megabytes after N months\ntotal_megabytes_after_N_months = total_megabytes + megabytes_left\n\nprint(total_megabytes_after_N_months)"
    }
  ],
  "created": 1649557351,
  "id": "cmpl-4vHVfB0apZgn9WQ8H5ywJXdFKEOlQ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 22:22:56.476635 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nx = int(input())\nn = int(input())\n\nres = x\nfor i in range(n):\n    res -= int(input())\n\nprint(res)"
}
2022-04-09 22:22:56.476669 REASON stop
2022-04-09 22:22:56.477429 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.477461 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\"\"\"\nSolution\n\"\"\"\n\ndef main():\n    X = int(input())\n    N = int(input())\n    megabytes = X\n    for i in range(N):\n        megabytes = megabytes - int(input())\n    print(megabytes)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:22:56.477528 REASON stop
2022-04-09 22:22:56.477924 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.477960 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Read input\nX = int(input())\nN = int(input())\nP = [int(input()) for i in range(N)]\n\n# Init\nMB_left = X\n\n# Loop through months and calculate remaining MB\nfor i in range(N):\n    if MB_left >= P[i]:\n        MB_left -= P[i]\n    else:\n        MB_left = 0\n    MB_left += X\n\n# Print result\nprint(MB_left)"
}
2022-04-09 22:22:56.478008 REASON stop
2022-04-09 22:22:56.478219 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.478253 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# number of megabytes available per month\nx = int(input())\n\n# number of months\nn = int(input())\n\n# list of megabytes spent each month\np = []\nfor i in range(n):\n    p.append(int(input()))\n\n# megabytes remaining after n months\nremaining = x\nfor i in range(n):\n    remaining = remaining - p[i]\n    if remaining < 0:\n        remaining = 0\n\n# megabytes available in n+1 month\nprint(remaining + x)"
}
2022-04-09 22:22:56.478301 REASON stop
2022-04-09 22:22:56.478650 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.478680 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nX = int(input())\nN = int(input())\n\ntotal = X\nfor i in range(N):\n    total -= int(input())\n\nprint(total)"
}
2022-04-09 22:22:56.478727 REASON stop
2022-04-09 22:22:56.478963 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.478996 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nX = int(input())\nN = int(input())\n\ntotal_used = 0\nfor i in range(N):\n    used = int(input())\n    total_used += used\n\nprint(X + total_used)"
}
2022-04-09 22:22:56.479049 REASON stop
2022-04-09 22:22:56.479432 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.479459 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nx = int(input())\nn = int(input())\n\np = [0] * (n + 1)\nfor i in range(n):\n    p[i] = int(input())\n\np[n] = x\nfor i in range(n - 1, -1, -1):\n    p[i] = p[i + 1] - p[i]\n\nprint(p[0])"
}
2022-04-09 22:22:56.479508 REASON stop
2022-04-09 22:22:56.479783 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
2022-04-09 22:22:56.479801 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#Number of megabytes per month\nX = int(input())\n#Number of months\nN = int(input())\n#Megabytes per month\nmegabytes = [int(input()) for i in range(N)]\n\n#Total megabytes used\ntotal_megabytes = sum(megabytes)\n#Megabytes left over\nmegabytes_left = X - total_megabytes\n\n#Total megabytes after N months\ntotal_megabytes_after_N_months = total_megabytes + megabytes_left\n\nprint(total_megabytes_after_N_months)"
}
2022-04-09 22:22:56.479872 REASON stop
2022-04-09 22:22:56.479994 test/intro-questions.txt_dir/4784/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4784/solutions.json'
