["\n\nimport sys\n\ndef main():\n    words = sys.stdin.readline().strip().split()\n    phrase = set()\n    for word in words:\n        if word in phrase:\n            print('no')\n            return\n        phrase.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    while True:\n        try:\n            words = list(set(input().split()))\n            if len(words) == len(input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()", "\n\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    # Read input\n    words = input().split()\n    # Create a set to store the words\n    word_set = set()\n    # Initialize a boolean flag\n    no_repetition = True\n    # Loop over the words\n    for word in words:\n        # Check if the word is already in the set\n        if word in word_set:\n            # If it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # If it isn't, add it to the set\n            word_set.add(word)\n    # Print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print no\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    # Read input\n    phrase = input()\n    # Split input into words\n    words = phrase.split()\n    # Initialize a set of words\n    unique_words = set()\n    # Iterate over words\n    for word in words:\n        # Check if word has already been added to set\n        if word in unique_words:\n            # If yes, print no and exit\n            print(\"no\")\n            exit()\n        # If not, add word to set\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    words = input().split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('no')\n            return\n        seen.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()"]