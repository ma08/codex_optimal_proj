["\n\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1", "\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)", "\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break", "\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)", "\n\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)", "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)"]