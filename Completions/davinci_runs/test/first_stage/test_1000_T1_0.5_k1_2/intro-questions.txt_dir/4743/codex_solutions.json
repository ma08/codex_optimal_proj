["\n\nimport sys\nimport math\n\ndef convert(word):\n    letters = list(word)\n    for i in range(len(letters)):\n        if letters[i].isupper():\n            letters[i] = letters[i].lower()\n    if letters[0] not in 'bcdfghklmnpqrst':\n        letters[0] = chr(ord(letters[0])-1)\n    letters[0] = chr(ord(letters[0])-5)\n    for i in range(1,len(letters)):\n        if letters[i] in 'bcdfghklmnpqrst':\n            letters[i] = letters[i].replace(letters[i],letters[0])\n    if letters[-1] in 'bcdfghklmnpqrst':\n        letters[-1] = letters[-1].replace(letters[-1],letters[-1]+'ah')\n    return ''.join(letters)\n\ndef main():\n    for line in sys.stdin:\n        words = line.strip().split()\n        for i in range(len(words)):\n            if '-' in words[i]:\n                words[i] = ''.join(words[i].split('-'))\n        for i in range(len(words)):\n            words[i] = convert(words[i])\n        print(' '.join(words))\n\nmain()", "\n\nimport sys\nimport math\n\ndef nimionese(word):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'g', 'k', 'n', 'p', 't']\n    nimionese_word = ''\n    \n    # Replace the first letter with the nearest hard consonant\n    if word[0] in consonants:\n        nimionese_word += word[0]\n    else:\n        if word[0] in vowels:\n            nimionese_word += 'b'\n        else:\n            nimionese_word += chr(ord(word[0]) - 1)\n    \n    for i in range(1, len(word)):\n        if word[i] in consonants:\n            if word[i] == 'h':\n                word = word[:i] + word[i+1:]\n            elif word[i] == 'p':\n                word = word[:i] + 'b' + word[i+1:]\n            elif word[i] == 't':\n                word = word[:i] + 'd' + word[i+1:]\n            elif word[i] == 'g':\n                word = word[:i] + 'c' + word[i+1:]\n        elif word[i] == 'e':\n            word = word[:i] + 'dach' + word[i+1:]\n    word = word.replace('-', '')\n    nimionese_word += word[1:]\n    \n    # Add the ending\n    if word[-1] not in consonants:\n        nimionese_word += 'ah'\n    else:\n        if word[-1] == 'n':\n            nimionese_word += 'ah'\n        elif word[-1] == 'k':\n            nimionese_word += 'oh'\n        else:\n            nimionese_word += 'uh'\n    \n    return nimionese_word\n\ndef main():\n    sentence = sys.stdin.readline().strip()\n    words = sentence.split(' ')\n    \n    nimionese_sentence = ''\n    \n    for word in words:\n        nimionese_sentence += nimionese(word) + ' '\n    \n    print(nimionese_sentence[:-1])\n    \nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    # Get input\n    sentence = sys.stdin.readline().strip().split()\n\n    # Translate\n    translated = []\n    for word in sentence:\n        translated.append(translate(word))\n\n    # Print\n    print(' '.join(translated))\n\ndef translate(word):\n    # Get syllables\n    syllables = word.split('-')\n\n    # Translate\n    for i in range(len(syllables)):\n        syllables[i] = translate_syllable(syllables[i])\n\n    return ''.join(syllables)\n\ndef translate_syllable(syllable):\n    # First letter\n    if syllable[0] in 'acegikmoqsuwy':\n        if syllable[0] < 'n':\n            syllable = syllable.replace(syllable[0], 'b', 1)\n        else:\n            syllable = syllable.replace(syllable[0], 'p', 1)\n\n    # Each\n    if syllable == 'each':\n        syllable = 'dach'\n\n    # Subsequent consonants\n    if len(syllable) > 1:\n        for i in range(1, len(syllable)):\n            if syllable[i] in 'bcdfghjklmnpqrstvwxz':\n                syllable = syllable.replace(syllable[i], syllable[0], 1)\n\n    # End consonant\n    if syllable[-1] in 'bcdfghjklmnpqrstvwxz':\n        if syllable[-1] < 'n':\n            syllable += 'ah'\n        elif syllable[-1] < 't':\n            syllable += 'oh'\n        else:\n            syllable += 'uh'\n\n    return syllable\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef nimionese(word):\n    if word[0] in ['a', 'e', 'i', 'o', 'u', 'y']:\n        word = 'h' + word\n    if word[0] in ['h']:\n        word = 'g' + word[1:]\n    if word[0] in ['l']:\n        word = 'd' + word[1:]\n    if word[0] in ['m']:\n        word = 'n' + word[1:]\n    if word[0] in ['f']:\n        word = 'b' + word[1:]\n    if word[0] in ['v']:\n        word = 'c' + word[1:]\n    if word[0] in ['s']:\n        word = 'z' + word[1:]\n    if word[0] in ['r']:\n        word = 'd' + word[1:]\n    if word[0] in ['j']:\n        word = 'g' + word[1:]\n    if word[0] in ['x']:\n        word = 'k' + word[1:]\n    if word[0] in ['q']:\n        word = 'k' + word[1:]\n    if word[0] in ['w']:\n        word = 'p' + word[1:]\n    if word[0] in ['z']:\n        word = 't' + word[1:]\n    word = word.replace('each', 'dach')\n    word = word.replace('ch', word[0])\n    word = word.replace('sh', word[0])\n    word = word.replace('th', word[0])\n    word = word.replace('ph', word[0])\n    word = word.replace('wh', word[0])\n    word = word.replace('gh', word[0])\n    word = word.replace('dh', word[0])\n    word = word.replace('bh', word[0])\n    word = word.replace('kh', word[0])\n    word = word.replace('zh', word[0])\n    word = word.replace('ng', word[0])\n    word = word.replace('nk', word[0])\n    word = word.replace('nt', word[0])\n    word = word.replace('nd', word[0])\n    word = word.replace('mp', word[0])\n    word = word.replace('mb', word[0])\n    word = word.replace('nd', word[0])\n    word = word.replace('pt', word[0])\n    word = word.replace('pd', word[0])\n    word = word.replace('bt', word[0])\n    word = word.replace('bd', word[0])\n    word = word.replace('kt', word[0])\n    word = word.replace('kd', word[0])\n    word = word.replace('zt', word[0])\n    word = word.replace('zd', word[0])\n    word = word.replace('dt', word[0])\n    word = word.replace('dd', word[0])\n    word = word.replace('gt', word[0])\n    word = word.replace('gd', word[0])\n    word = word.replace('ct', word[0])\n    word = word.replace('cd', word[0])\n    word = word.replace('st', word[0])\n    word = word.replace('sd', word[0])\n    word = word.replace('zd', word[0])\n    word = word.replace('zt', word[0])\n    word = word.replace('ps', word[0])\n    word = word.replace('bs', word[0])\n    word = word.replace('ks', word[0])\n    word = word.replace('ds', word[0])\n    word = word.replace('gs', word[0])\n    word = word.replace('cs', word[0])\n    word = word.replace('ts', word[0])\n    word = word.replace('ns', word[0])\n    word = word.replace('zs', word[0])\n    if word[-1] in ['a', 'e', 'i', 'o', 'u', 'y']:\n        word += 'h'\n    if word[-1] in ['h']:\n        word = word[:-1] + 'o'\n    if word[-1] in ['l']:\n        word = word[:-1] + 'ah'\n    if word[-1] in ['m']:\n        word = word[:-1] + 'oh'\n    if word[-1] in ['f']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['v']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['s']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['r']:\n        word = word[:-1] + 'ah'\n    if word[-1] in ['j']:\n        word = word[:-1] + 'oh'\n    if word[-1] in ['x']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['q']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['w']:\n        word = word[:-1] + 'uh'\n    if word[-1] in ['z']:\n        word = word[:-1] + 'uh'\n    return word\n\ndef main():\n    sentence = sys.stdin.readline()\n    sentence = sentence.split()\n    nimionsentence = []\n    for word in sentence:\n        nimionsentence.append(nimionese(word))\n    print(' '.join(nimionsentence))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nimport math\n\ndef get_nearest_char(char):\n    if char in ['b', 'c', 'd', 'g', 'k', 'n', 'p', 't']:\n        return char\n    elif char in ['a', 'e', 'i', 'o', 'u']:\n        return 'a'\n    elif char in ['f', 'h', 'j', 'l', 'm', 'q', 'r', 'v', 'w', 'x', 'y', 'z']:\n        return 'b'\n    elif char in ['B', 'C', 'D', 'G', 'K', 'N', 'P', 'T']:\n        return char\n    elif char in ['A', 'E', 'I', 'O', 'U']:\n        return 'A'\n    elif char in ['F', 'H', 'J', 'L', 'M', 'Q', 'R', 'V', 'W', 'X', 'Y', 'Z']:\n        return 'B'\n\ndef get_nearest_ending(char):\n    if char in ['b', 'c', 'd', 'g', 'k', 'n', 'p', 't']:\n        return 'ah'\n    elif char in ['B', 'C', 'D', 'G', 'K', 'N', 'P', 'T']:\n        return 'AH'\n    elif char in ['a', 'e', 'i', 'o', 'u']:\n        return 'uh'\n    elif char in ['A', 'E', 'I', 'O', 'U']:\n        return 'UH'\n    elif char in ['f', 'h', 'j', 'l', 'm', 'q', 'r', 'v', 'w', 'x', 'y', 'z']:\n        return 'oh'\n    elif char in ['F', 'H', 'J', 'L', 'M', 'Q', 'R', 'V', 'W', 'X', 'Y', 'Z']:\n        return 'OH'\n\ndef solve(sentence):\n    words = sentence.split(' ')\n    for i in range(len(words)):\n        word = words[i]\n        if word == 'Each':\n            word = 'Dach'\n        else:\n            if word[0] != '-':\n                word = get_nearest_char(word[0])\n            for j in range(1, len(word)):\n                if word[j] in ['b', 'c', 'd', 'g', 'k', 'n', 'p', 't']:\n                    word = word[:j] + word[0] + word[j+1:]\n            if word[-1] not in ['a', 'e', 'i', 'o', 'u']:\n                word += get_nearest_ending(word[-1])\n        words[i] = word\n    return ' '.join(words)\n\ndef main():\n    sentence = sys.stdin.readline().strip()\n    print(solve(sentence))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    words = line.split(' ')\n    output = []\n    for word in words:\n        output.append(nimion(word))\n\n    print(' '.join(output))\n\ndef nimion(word):\n    syllables = word.split('-')\n    output = []\n    for syllable in syllables:\n        output.append(nimion_syllable(syllable))\n\n    return ''.join(output)\n\ndef nimion_syllable(syllable):\n    if syllable == 'Each':\n        return 'Dach'\n    elif syllable.startswith('h'):\n        return syllable[1].lower() + syllable[2:]\n    else:\n        return syllable[0].lower() + syllable[1:]\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\nfrom string import ascii_lowercase, ascii_uppercase\n\nfirst = 'bcdfghkmnpqt'\nsecond = 'aeiou'\nthird = 'aeiou'\n\ndef nimionese(word):\n    if len(word) == 0:\n        return ''\n    elif len(word) == 1:\n        return word[0]\n    elif word[0] in first:\n        return word[0] + nimionese(word[1:])\n    elif word[0] in second:\n        return 'a' + nimionese(word[1:])\n    elif word[0] in third:\n        return 'e' + nimionese(word[1:])\n    elif word[0] in ascii_uppercase:\n        return word[0].lower() + nimionese(word[1:])\n    else:\n        return ' ' + nimionese(word[1:])\n\ndef main():\n    words = stdin.readline().strip().split(' ')\n    print(' '.join([nimionese(word) for word in words]))\n\nif __name__ == '__main__':\n    main()"]