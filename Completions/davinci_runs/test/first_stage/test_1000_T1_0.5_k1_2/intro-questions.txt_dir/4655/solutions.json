["from sys import stdin,stdout\nimport sys\nimport math\n\nt=int(stdin.readline())\nfor i in range(t):\n    a=list(map(int,stdin.readline().split()))\n    print(sum(a)//2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    print((a[0] + a[1] + a[2]) // 2)\n", "ll= lambda : list(map(int,input().split()))\ntestcases=1\ntestcases=int(input())\nfor testcase in range(testcases):\n    [a,b,c]=ll()\n    print((a+b+c)//2)\n", "import sys\n# sys.stdin.readline()\nt=int(sys.stdin.readline())\nfor i in range(t):\n    a=list(map(int,sys.stdin.readline().strip().split()))\n    op=sum(a)\n    print(op//2)\n", "t=int(input())\nfor i in range(0,t):\n\tl=list(map(int,input().split()))\n\ts=sum(l)\n\ts=s//2\n\tprint(s)", "mod = 1000000007\nii = lambda : int(input())\nsi = lambda : input()\ndgl = lambda : list(map(int, input()))\nf = lambda : map(int, input().split())\nil = lambda : list(map(int, input().split()))\nls = lambda : list(input())\nn=ii()\nfor i in range(n):\n    a,b,c=f()\n    print((a+b+c)//2)", "for _ in range(int(input())):\n    a,b,c=map(int,input().split())\n    print((a+b+c)//2)", "n = int(input())\nfor _ in range(n):\n\tl = list(map(int, input().split()))\n\ts = sum(l)\n\tprint(s // 2)", "n = int(input())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    print((a+b+c)//2)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Jul 14 12:40:58 2019\n\n@author: Hamadeh\n\"\"\"\nclass cinn:\n    def __init__(self):\n        self.x=[]\n    def cin(self,t=int):\n        if(len(self.x)==0):\n            a=input()\n            self.x=a.split()\n            self.x.reverse()\n        return self.get(t)\n    def get(self,t):\n        return t(self.x.pop())\n    def clist(self,n,t=int): #n is number of inputs, t is type to be casted\n        l=[0]*n\n        for i in range(n):\n            l[i]=self.cin(t)\n        return l\n    def clist2(self,n,t1=int,t2=int,t3=int,tn=2):\n        l=[0]*n\n        for i in range(n):\n            if(tn==2):\n                a1=self.cin(t1)\n                a2=self.cin(t2)\n                l[i]=(a1,a2)\n            elif (tn==3):\n                a1=self.cin(t1)\n                a2=self.cin(t2)\n                a3=self.cin(t3)\n                l[i]=(a1,a2,a3)\n        return l\n    def clist3(self,n,t1=int,t2=int,t3=int):\n        return self.clist2(self,n,t1,t2,t3,3)\n    def cout(self,i,ans=''):   \n        if(ans==''):\n            print(\"Case #\"+str(i+1)+\":\", end=' ')\n        else:\n            print(\"Case #\"+str(i+1)+\":\",ans)\n    def printf(self,thing):\n        print(thing,end='')\n    def countlist(self,l,s=0,e=None):\n        if(e==None):\n            e=len(l)\n        dic={}\n        for el in range(s,e):\n            if l[el] not in dic:\n                dic[l[el]]=1\n            else:\n                dic[l[el]]+=1\n        return dic\n    def talk (self,x):\n        print(x,flush=True)\n    def dp1(self,k):\n        L=[-1]*(k)\n        return L\n    def dp2(self,k,kk):\n        L=[-1]*(k)\n        for i in range(k):\n            L[i]=[-1]*kk\n        return L\n    def isprime(self,n):\n        if(n==1 or n==0):\n            return False\n        for i in range(2,int(n**0.5+1)):\n            if(n%i==0):\n                return False\n        return True\n    def factors(self,n):    \n        from functools import reduce\n        return set(reduce(list.__add__, \n                    ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n    def nthprime(self,n):\n        #usable up to 10 thousand\n        i=0\n        s=2\n        L=[]\n        while(i<n):\n            while(not self.isprime(s)):\n                s+=1\n            L.append(s)\n            s+=1\n            i+=1\n        return L\n    def matrixin(self,m,n,t=int):\n        L=[]\n        for i in range(m):\n            p=self.clist(n,t)\n            L.append(p)\n        return L\n    def seive(self,k):\n        #1000000 tops\n        n=k+1\n        L=[True]*n\n        L[1]=False\n        L[0]=False\n        for i in range(2,n):\n            if(L[i]==True):\n                for j in range(2*i,n,i):\n                    L[j]=False\n        return L\n    def seiven(self,n,L):\n        i=0\n        for j in range(len(L)):\n            if(L[j]==True):\n                i+=1\n            if(i==n):\n                return j\n    def matrixin2(self,m,t=int):\n        L=[]\n        for i in range(m):\n            iny=self.cin(str)\n            lsmall=[]\n            for el in iny:\n                lsmall.append(t(el))\n            L.append(lsmall)\n        return L\nc=cinn()\nque=c.cin()\nfor i in range(que):\n    q=c.cin()\n    x=c.cin()\n    z=c.cin()\n    print((x+z+q)//2)", "q=int(input())\nfor i in range(q):\n\ta,b,c=map(int,input().split())\n\tprint ((a+b+c)//2)", "for i in range(int(input())):\n    a,b,c=map(int, input().split())\n    print((a+b+c)//2)", "q = int(input())\nfor Q in range(q):\n    A = [int(i) for i in input().split()]\n    A.sort()\n    alice = A[0]\n    bob = A[1]\n    excess = A[2]\n\n    total = sum(A)\n\n    each = total//2\n\n    print(each)\n", "import sys\ninput = lambda: sys.stdin.readline().strip()\n\nT = int(input())\nfor i in range(T):\n    a, b, c = list(map(int, input().split()))\n    print((a+b+c)//2)\n", "Q = int(input())\nfor _ in range(Q):\n    a, b, c = list(map(int, input().split()))\n    print((a+b+c)//2)\n\n", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b):\n    return abs(a[0]-b[0])+abs(b[1]-a[1])\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef eld(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n            st = be\n            en = i\n        if meh<0:\n            meh = 0\n            be = i+1\n    return msf,st,en\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\n\n\ndef flush():\n    return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nfor _ in range(int(input())):\n    a,b,c = arrIN()\n    print((a+b+c)//2)\n    \n", "for _ in range(int(input())):\n    l=list(map(int,input().split()))\n    a=sum(l)\n    print(a//2)", "import math\n\n\nclass Read:\n    @staticmethod\n    def int():\n        return int(input())\n\n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n\n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n\n\ndef solve():\n    a, b, c = Read.list_int()\n    print((a + b + c) // 2)\n\n\nquery_count = Read.int()\nfor j in range(query_count):\n    solve()\n", "#Anuneet Anand\nq=int(input())\nwhile q:\n\ta,b,c=list(map(int,input().split()))\n\tA=[a,b,c]\n\tprint(sum(A)//2)\n\tq=q-1\n", "import sys\n\nt = int(input())\nfor i in range(t):\n    a, b, c = list(map(int, sys.stdin.readline().split()))\n    print((a+b+c)//2)\n", "q = int(input())\nfor _ in range(q):\n    a,b,c = list(map(int,input().split()))\n    sum = a+b+c\n    print(sum//2)\n", "for i in range(int(input())):\n    a, b, c = list(map(int, input().split()))\n    print((a + b + c) // 2)\n", "t = int(input())\nfor _ in range(t):\n    a = list(map(int,input().split()))\n    s = sum(a)\n    print(s//2)"]