["k, n = map(int, input().split())\npoints = list(map(int, input().split()))\n\ndist = []\nfor i in range(n):\n    if i != n-1:\n        distance = points[i+1] - points[i]\n    else:\n        distance = points[0]+k - points[i]\n    dist.append(distance)\n\nmax = dist[0]\nfor j in range(1, len(dist), 1):\n    if max < dist[j]:\n        max = dist[j]\ndist.remove(max)\n\nans = 0\nfor k in dist:\n    ans += k\nprint(ans)", "k, n = map(int, input().split())\na = list(map(int, input().split()))\n\nd = []\nfor i in range(n - 1):\n    d.append(a[i + 1] - a[i])\nd.append(k - a[n - 1] + a[0])\nd.sort()\nprint(sum(d[:-1]))", "import numpy as np\nK, N = map(int, input().split())\nA = np.array(list(map(int, input().split())))\ndiff = np.append(A[1:] - A[:-1], K + A[0] - A[-1])\nprint(np.delete(diff, np.argmax(diff)).sum())", "K, N = map(int, input().split())\nA_l = sorted(map(int, input().split()))\nd_l = [K+A_l[0]-A_l[N-1]]\nfor i in range(1, N):\n    d_l.append(A_l[i]-A_l[i-1])\nprint(K-max(d_l))", "k,n = map(int,input().split())\na = list(map(int,input().split()))\ntemp = 0\nfor i in range(n-1):\n    temp = max(temp,a[i+1]-a[i])\ntemp = max(temp,k-a[n-1]+a[0])\nprint(k-temp)", "# import math\n# import statistics\n# import itertools\n# a=int(input())\n# b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\nA,B= map(int,input().split())\nf = list(map(int,input().split()))\n# g = [input().split for _ in range(a)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\nkyori=[]\nfor i in range(len(f)-1):\n    an=f[i+1]-f[i]\n    kyori.append(an)\n    \nan2=A-f[-1]+f[0]\nans=max(max(kyori),an2)\nprint(A-ans)", "def i_input(): return int(input())\n\n\ndef i_map(): return map(int, input().split())\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\n\nk, n = i_map()\naa = i_list()\ndif=[]\nfor i in range(n):\n    if i==n-1:\n        dif.append(k-aa[-1]+aa[0])\n    else:\n        dif.append(aa[i+1]-aa[i])\nprint(k-max(dif))", "K,N=map(int,input().split())\nA=list(map(int,input().split()))\nB=[0]*N\nfor i in range(N-1):\n  B[i]=A[i+1]-A[i]\nB[N-1]=K-A[N-1]+A[0]\nprint(K-max(B))", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\nmx = a[0] + k - a[n - 1]\nfor i in range(n - 1):\n    mx = max(mx, a[i + 1] - a[i])\nprint((k - mx))\n", "import numpy as np\n\nk, n = map(int, input().split())\na = list(map(int, input().split()))\n\ndist = [a[i+1]-a[i] if i < n-1 else k-a[i]+a[0] for i in range(n)]\nmax_index = np.argmax(dist)\n\ncost = 0\ncurr_index = max_index\nfor _ in range(n-1):\n    if curr_index == 0:\n        cost += a[curr_index] + k - a[curr_index-1]\n    else:\n        cost += a[curr_index] - a[curr_index-1]\n    curr_index -= 1\nprint(cost)", "import numpy as np\nn,k = [ int(i) for i in input().split() ]\na = [ int(i) for i in input().split() ]\na = np.sort(a)\na = np.append(a, n+a[0] )\na1 = np.append( 0, a[:-1] )\nb = a-a1\nb = b[1:]\nprint(( np.sum(b) - np.max(b) ))\n\n\n", "K, N = list(map(int, input().split()))\nA_list = list(map(int, input().split()))\nA_list.append(K + A_list[0])\n\ndif_list = [0] * N\n\nfor i in range(N):\n    dif_list[i] = A_list[i + 1] - A_list[i]\n\nprint(K - max(dif_list))", "k, n = map(int, input().split())\na = list(map(int,input().split()))\ntmp = 0\nansl = [] \nfor i in range(n-1):\n    tmp = a[i+1] - a[i]\n    ansl.append(tmp)\ntmp = k - a[-1] + a[0]\nansl.append(tmp)\nprint(k -max(ansl))", "k, n = map(int, input().split())\na = list(map(int, input().split()))\n\nm = 0\nfor i in range(n-1):\n  if a[i+1]-a[i]>m:\n    m = a[i+1]-a[i]\nif k-a[n-1]+a[0]>m:\n  m = k-a[n-1]+a[0]\nprint(k-m)", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nmax_d = 0\n\nfor a in range(1, N):\n    d = A[a] - A[a-1]\n    if d > max_d:\n        max_d = d\nlast_d = K - A[-1] + A[0]\nif last_d > max_d:\n    max_d = last_d\nprint(K - max_d)", "k,n = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 10000000\nfor i in range(n-1):\n    ans = min(k-(a[i+1]-a[i]), ans)\nans = min(ans,a[n-1]-a[0])\nprint(ans)", "k,n = map(int,input().split())\nL = list(map(int,input().split()))\nL.append(k+L[0])\nm = 0\n\nfor i in range(n):\n  m = max(m, L[i+1]-L[i])\n\nprint(k-m)", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\na = 0\nif A[0] == 0:\n    a = K - A[N - 1]\nelse:\n    a = min(A[N - 1] - A[0], K - A[N - 1] + A[0])\n\n\nfor i in range(N - 1):\n    b = A[i + 1] - A[i]\n    a = max(a, b)\nans = K - a\nprint(ans)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    K , N = MI()\n    L = LI()\n    res = L[-1] - L[0]\n    max_num = L[-1]\n    for i in range(1, N):\n        temp = L[i]\n        past = L[i-1]\n        past += K - temp\n        res = min(res, past)\n        \n    print(res)\ndef __starting_point():\n    main()\n__starting_point()", "K, N = map(int, input().split())\nAlst = list(map(int, input().split()))\nzero = Alst[0] + K\nM = 0\nnow = Alst[0]\nfor i in Alst:\n    dis = i - now\n    if dis > M:\n        M = dis\n    now = i\n\nlast = zero - now\nif last > M:\n    M = last\n\nprint(K - M)", "k,n = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nroute = []\nfor i in range(n-1):\n    move = a[i+1] - a[i]\n    route.append(move)\n\nroute.append(k-a[-1]+a[0])\n\nprint((sum(route) - max(route)))\n", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\nd = [K+A[0]-A[-1]]+[b-a for a, b in zip(A, A[1:])]\nprint(K-max(d))", "k,n = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nb = []\nfor i in range(n-1):\n    b.append(a[i+1]-a[i])\n\nb.append(k-a[-1]+a[0])\n\nprint((sum(b)-max(b)))\n", "k, n = map(int, input().split())\na_list = list(map(int, input().split()))\nlongest = 0\n\nfor i in range(n-1):\n        distance = a_list[i+1] - a_list[i]\n        longest = max(longest, distance)\n\nprint(k-max(longest, k-a_list[n-1]+a_list[0]))", "k,n=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\nans=k-l[n-1]+l[0]\nfor i in range(n-1):\n    if l[i+1]-l[i]>=ans:\n        ans=l[i+1]-l[i]\nprint(k-ans)", "# coding=utf-8\n\ndef __starting_point():\n    K, N = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.append(K+li[0])\n\n    l = 0\n    for i in range(N):\n        l = max(l, abs(li[i] - li[i+1]))\n\n    print(K-l)\n__starting_point()", "k,n=map(int,input().split())\nA=list(map(int,input().split()))\na=A\nfor i in range(n):\n  a.append(k+A[i])\nd=[0]*n\nfor i in range(n):\n  d[i]=a[n-1+i]-a[i]\nprint(min(d))", "k, n =map(int,input().split())\na = list(map(int,input().split()))\nlongest = k - a[-1] + a [0]\nfor i in range(len(a)-1):\n    longest = max(longest,a[i+1]-a[i])\nprint(k-longest)", "K,N = list(map(int,input().split()))\ndis = list(map(int,input().split()))\ndif = []\nfor i in range(N-1):\n  dif.append(int(dis[i+1]-dis[i]))\n  \ndif.append(int(K-dis[N-1]+dis[0]))\nprint((K-max(dif)))\n\n", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = []\n\nfor j in range(N-1):\n    B.append(A[j+1]-A[j])\n\nC = A[0]+K-A[N-1]\nB.append(C)\nB.sort()\nprint((K-B[N-1]))\n", "k, n = map(int, input().split())\na_list = list(map(int, input().split()))\n\nlongest = 0\nfor i in range(n):\n    # if i==0:\n    #     continue\n    if i==n-1:\n        longest = max(longest, k-a_list[i]+a_list[0])\n    else:\n        distance = a_list[i+1] - a_list[i]\n        longest = max(longest, distance)\n\nprint(k-longest)", "k, n = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.append(a[0] + k)\n\nm = 0\n\nfor i in range(n):\n    m = max(m, a[i + 1] - a[i])\n\nprint(k - m)", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nd = []\nfor i in range(N-1):\n    d.append(A[i+1] - A[i])\nd.append(A[0] + K - A[N-1])\n\nmax_d = max(d)\n\nprint(K - max_d)", "def main():\n    k, n = map(int, input().split())\n    a = [int(v) for v in input().split()]\n    distances = []\n    for i in range(1, len(a)):\n        distances.append((a[i]-a[i-1]))\n    distances.append((k+a[0]) - a[-1])\n    maximum = max(distances)\n    return k - maximum\n\ndef __starting_point():\n    print(main())\n__starting_point()", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nb = []\nfor i in range(n - 1):\n    b.append(a[i + 1] - a[i])\n\nb.append(k - a[-1] + a[0])\n\nprint((sum(b) - max(b)))\n", "#ABC160\nK,N=map(int,input().split())\nA =list(map(int,input().split()))\na=[K-(A[N-1]-A[0])]\nfor i in range(1,N):\n    a.append(abs(A[i]-A[i-1]))\nprint(K-max(a))", "K, N = list(map(int, input().split()))\nAs = list(map(int, input().split()))\n\nAs += [As[0] + K]\n\nmaxDiff = 0\nfor i in range(N):\n    d = As[i+1]-As[i]\n    if d > maxDiff:\n        maxDiff = d\n\nprint((K-maxDiff))\n", "k, n = map(int, input().split())\na = list(map(int, input().split()))\nroot = []\nans = 0\n\nfor i in range(0, n-1):\n    x = a[i+1] - a[i]\n    root.append(x)\n\ny = a[0] + k - a[n-1]\nroot.append(y)\n\nfor i in root:\n    ans += i\n\nans -= max(root)\nprint(ans)    ", "k, n = map(int,input().split())\na = list(map(int,input().split()))\n\nda =[-1] * n\nda[n-1] = k - a[n-1] + a[0]\nfor i in range(n-1):\n    da[i] = a[i+1] - a[i]\n    \nprint(sum(da)-max(da))", "K,N = map(int,input().split())\nA = [int(i) for i in input().split()]\nL = []\nans = 0\nfor i in range(N):\n    if(i == N-1):\n        L.append(K-A[N-1]+A[0])\n        break\n    L.append(A[i+1]-A[i])\nfor i in range(N):\n    ans += L[i]\nans -= max(L)\nprint(ans)", "try:\n    K, N = map(int,input().split())\n    A = list(map(int, input().split()))\n\n    li = []\n    for i in range(N - 1):\n        li.append(A[i + 1] - A[i]) \n\n    li.append(abs(A[0] + (K - A[-1])))\n    print(sum(li) - max(li))\nexcept:\n    pass", "k, n = map(int, input().split())\nalst = list(map(int, input().split()))\nalst.append(alst[0] + k)\nminus = 0\nfor i in range(n):\n  minus = max(minus, alst[i + 1] - alst[i])\nprint(k - minus)", "K, N = list(map(int, input().split()))\n\nA = list(map(int, input().split()))\n\nB = []\n\nfor i in range(len(A)-1):\n    B.append(A[i+1]-A[i])\n\nB.append(A[0] - A[N-1] + K)\n\nb_max       = max(B)\nb_max_index = B.index(max(B))\n\n\nB.remove(b_max)\nprint((sum(B)))\n", "import math\nimport decimal\ndef i_input(): return int(input())\n\n\ndef i_map(): return map(int, input().split())\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\nk,n= i_map()\naa=i_list()\ndis=[]\nfor i in range(n):\n    if i == 0:\n        dis.append(k-aa[-1]+aa[0])\n    else:\n        dis.append(aa[i]-aa[i-1])\nprint(k-max(dis))", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    k, n = inl()\n    A = inl()\n    dmax = A[0] + (k - A[-1])\n    for i in range(1, n):\n        dmax = max(dmax, A[i] - A[i - 1])\n    return k - dmax\n\n\nprint(solve())\n", "k, n = map(int ,input().split())\na = list(map(int,input().split()))\n\na.append(k+a[0])\n\nd = 0\nans = 0\nfor i in range(n):\n    d = (a[i+1]-a[i])\n    ans =max(ans,d)\n    \nprint(k-ans)", "K,N=map(int,input().split())\nA=list(map(int,input().split()))\nans=K-(A[-1]-A[0])\nfor i in range(N-1):\n    tmp=A[i+1]-A[i]\n    ans=max(ans,tmp)\nans=K-ans\nprint(ans)", "#!/usr/local/bin/python3\n# https://atcoder.jp/contests/abc160/tasks/abc160_c\n\nK, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ndist = []\nfor i in range(N-1):\n    dist.append(A[i+1] - A[i])\ndist.append(K - A[-1] + A[0])\n\nprint((K - max(dist)))\n", "k,n = map(int,input().split())\na = list(map(int,input().split()))\n\na.sort()\na.append(a[0]+k)\n\nans = 0\nfor i in range(n):\n  d = a[i+1] - a[i]\n  ans = max(ans,d)\n\nprint(k - ans)", "K, N = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\ndif = []\n\nfor i,a in enumerate(A[:len(A)-1]):\n    dif.append(A[i+1] - a)\n\ndif.append(K-A[len(A)-1] + A[0])\n\nprint((K - max(dif)))\n", "k,n=list(map(int,input().split()))\n\na=list(map(int,input().split()))\na.sort()\na.append(k+a[0])\n\nb=[0]*(n)\nfor i in range(n):\n    b[i]=a[i+1]-a[i]\n\nprint((k-max(b)))\n", "k,n = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nb = []\nfor i in range(n-1):\n    b.append(a[i+1]-a[i])\n\nb.append(a[0]+(k-a[-1]))\n\nprint((sum(b)-max(b)))\n", "K,N = map(int,input().split())\nA1 = list(map(int,input().split()))\n\nD = [0] * (N)\n\nA2 = [A1[i]+K for i in range(len(A1)-1)]\nA1 = A1+A2\n\nfor i in range(N):\n    D[i] = A1[i+N-1] - A1[i]\n    #print(A1[i],A1[i+N-1])\nprint(min(D))", "k,n=map(int,input().split())\na=list(map(int,input().split()))\n\nc=[]\nfor i in range(1,n):\n    c.append(a[i]-a[i-1])\nc.append(k-a[-1]+a[0])\n\nprint(k-max(c))", "k, n = map(int, input().split())\nan = list(map(int, input().split()))\n\n\nclass Solution:\n    def __init__(self, k, n, an):\n        self.k = k\n        self.n = n\n        self.an = an\n\n    @staticmethod\n    def __append_first():\n        an.append(k + an[0])\n        new_an = an\n        return new_an\n\n    def answer(self):\n        new_an = self.__append_first()\n        max_length = 0\n        for i in range(n):\n            max_length = max(max_length, new_an[i + 1] - new_an[i])\n        print(k - max_length)\n\n\nconditions = Solution(k, n, an)\nconditions.answer()", "K,N = map(int,input().split())\nA = list(map(int,input().split()))\nsa = []\n\nfor i in range(N-1):\n  sa.append(A[i+1]-A[i])\n  \nsa.append((A[0]-A[N-1])%K)\n\nprint(K-max(sa))", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\ndis = min(abs(a[0] - a[-1]), abs(k + a[0] - a[-1]))\nfor i in range(n-1):\n    dis = max(dis, abs(a[i+1] - a[i]))\nans = k - dis\nprint(ans)\n", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nA2 = [K+a for a in A]\nA3 = A + A2\n\ndist = [0] * N\nfor i in range(N):\n    j = i + N - 1\n    dist[i] = A3[j] - A[i]\n\nprint((min(dist)))\n\n", "def resolve():\n    k,n = map(int,input().split())\n    a = list(map(int,input().split()))\n    l = a[0]+k-a[-1]\n    for i in range(1,n):\n        l = max(l,a[i]-a[i-1])\n    print(k-l)\nresolve()", "# import numpy as np\n# import math\n\n# from scipy.special import perm : perm(n, r, exact=True)\n# from scipy.special import comb : comb(n, r, exact=True)\n\n# import itertools\n# for v in itertools.combinations(L, n):M.append(list(v))\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\n\n\"\"\" Definitions  \"\"\"\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n# ============================================================\nk, n = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nm = 2*10**5\nM = [0]*n\ndist = min(A[n-1]-A[0], k-A[n-1]+A[0])\nfor i in range(n-1):\n    dist = max(dist, A[i+1]-A[i])\nprint((k-dist))\n", "l,n=map(int,input().split())\na=input().split()\nfor i in range(n):\n  a[i]=(int)(a[i])\n  \nmin=l+a[0]-a[n-1]\nfor i in range(n-1):\n  if min<a[i+1]-a[i]:\n    min=a[i+1]-a[i]\nprint(l-min)", "k, n = map(int,input().split())\na = list(map(int,input().split()))\n\nda =[-1] * n\nda[n-1] = k - a[n-1] + a[0]\nfor i in range(n-1):\n    da[i] = a[i+1] - a[i]\nprint(k-max(da))", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\nans = 10**18\n\nfor i in range(N):\n    if i == 0:\n        clock_distance = A[N-1] - A[i]\n        reverse_distance = K - A[i+1] + A[i]\n    elif i == N-1:\n        clock_distance = K - A[i] + A[i-1]\n        reverse_distance = A[i] - A[0]\n    else:\n        clock_distance = K - A[i] + A[i+1]\n        reverse_distance = K - A[i+1] + A[i]\n    ans = min(clock_distance, reverse_distance, ans)\n\nprint(ans)\n\n\n\n", "f=lambda:[*map(int,input().split())]\nk,n=f()\nl=f()\nl+=[l[0]+k]\na=0\nfor i in range(n):\n  a=max(a,l[i+1]-l[i])\nprint(k-a)", "k, n = map(int, input().split())\na = [int(s) for s in input().split()]\n\nd = [0] * (n + 1)\nd[0] = a[0] - 0\nfor i in range(1, n):\n    d[i] = a[i] - a[i - 1]\nd[n] = k - a[n - 1] + a[0]\nprint(k - max(d))", "k, n = map(int, input().split())\na_list = list(map(int, input().split()))\nlongest = 0\nfor i in range(n):\n    if i==n-1:\n        longest = max(longest, k-a_list[i]+a_list[0])\n    else:\n        distance = a_list[i+1] - a_list[i]\n        longest = max(longest, distance)\nprint(k-longest)", "k,n = map(int,input().split())\na = list(map(int,input().split()))\nd= 0\nfor i in range(n-1):\n    d = max(a[i+1]-a[i],d)\nprint(min((k-d),a[-1]-a[0]))", "k,n = map(int,input().split())\nan = list(map(int,input().split()))\nan.append(k + an[0])\nmax_length = 0\nfor i in range(n):\n    max_length = max(max_length,an[i+1]-an[i])\n\nprint(k-max_length)", "K,N = map(int,input().split())\nA = list(map(int,input().split()))\n\nT = []\n\nfor i in range(1,N):\n    T.append(A[i] - A[i-1])\n\nT.append(K - A[N-1] + A[0])\n\nprint(sum(T)-max(T))", "k,n=map(int,input().split())\na=list(map(int,input().split()))\n\nn=len(a)-1\ncnt=[a[n]-a[0]]\nfor i in range(n) :\n    cnt.append(k-(a[i+1]-a[i]))\nans=min(cnt)\n\nprint(ans)", "k,n,*l=map(int,open(0).read().split())\nl+=[l[0]+k]\nprint(k-max(l[i+1]-l[i] for i in range(n)))", "\nk, n = map(int, input().split())\na = list(map(int, input().split()))\n\nc = a[0]\na.append(c + k)\nb = [a[i+1] - a[i] for i in range(n)]\n\nprint(k - max(b))", "k, n = map(int, input().split())\na = list(map(int, input().split()))\n\nd = [0]*n\nfor i in range(n):\n    if i == n-1:\n        d[n-1] = (k-a[n-1]) + a[0]\n        \n    else :\n        d[i] = a[i+1] - a[i]\n\nd.sort()\nd[n-1] = 0\n\nprint(sum(d))", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nA3 = A + [K+a for a in A]\ndist = [A3[i+N-1] - A[i] for i in range(N)]\n\nprint((min(dist)))\n\n", "k, n = list(map(int,input().split()))\na = list(map(int,input().split()))\nnew_a = sorted(a)\nnum = len(new_a) - 1\ns_a = []\nb = (k - new_a[num]) + new_a[0]\ns_a.append(b)\ncun = 0\nfor i in new_a[1::]:\n    s = i - new_a[cun]\n    s_a.append(s)\n    cun += 1\nmax_num = max(s_a)\nprint((sum(s_a) - max_num))\n\n", "def __starting_point():\n\n    k,n = list(map(int,input().split()))\n    A = list(map(int,input().split()))\n\n    #\u8ddd\u96e2\u306e\u5dee\u5206\u304c\u4e00\u756a\u591a\u3044\u533a\u9593\u3092\u6c42\u3081\u308b\n    sbn = -1\n    for i in range(n-1):\n        sbn = max(sbn,A[i+1]-A[i])\n\n    #\u6700\u521d\u3068\u6700\u5f8c\u3082\u6bd4\u8f03\u3059\u308b\n    tmp1 = A[0] - 0\n    tmp2 = k - A[n-1]\n    sbn = max(sbn,tmp1+tmp2)\n\n    print((k-sbn))\n\n\n__starting_point()", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\nA.append(K+A[0])\n\nmax_dist = max([A[i+1] - A[i] for i in range(N)])\nprint(K - max_dist)", "k, n = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\n\nd_max = 0\na[0] = a[n] - k\n\nfor i in range(1, n + 1):\n    d = a[i] - a[i - 1]\n    d_max = max(d, d_max)\n\nprint((k - d_max))\n", "k, n = map(int, input().split())\nan = [int(num) for num in input().split()]\n\ndistance =[]\nfor i in range(n-1):\n  distance.append(an[i+1]-an[i])\ndistance.append(an[0]+(k-an[n-1]))\n\ndistance.sort()\nprint(k-distance[n-1])", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nB = []\nfor i in range(N-1):\n  B.append(A[i+1] - A[i])\nB.append(K - A[N-1] + A[0])\nans = K - max(B)\nprint(ans)", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nsub = [0] * (N - 1)\n\nfor i in range(N - 1):\n\tsub[i] = A[i + 1] - A[i]\nsub.append(A[0] + (K - A[-1]))\n\nprint(sum(sub) - max(sub))", "import numpy as np\n\nk, n = map(int, input().split())\na_array = list(map(int, input().split()))\n\na_array.append(k + a_array[0])\n\na_diff = np.diff(a_array)\nans = np.sum(a_diff) - np.max(a_diff)\nprint(ans)", "k,n = map(int,input().split())\na = list(map(int,input().split()))\nans = k\nmx = k-a[-1]+a[0]\nfor i in range(n-1):\n  mx = max(mx,abs(a[i]-a[i+1]))\nprint(ans-mx)", "k,n = map(int,input().split())\na = list(map(int,input().split()))\ndd = k-a[-1]+a[0]\nd = 0\nfor i in range(n-1):\n    d = max(d,a[i+1]-a[i])\nd = max(d,dd)\nprint(k-d)", "K, N = map(int, input().split(' '))\nA_ls = list(map(int, input().split(' ')))\nrst = -1\nfor i in range(N):\n    l = A_ls[(i + 1) % N] - A_ls[i]\n    if l < 0:\n        l = K - A_ls[i] + A_ls[(i + 1) % N]\n    if rst == -1:\n        rst = l\n    else:\n        rst = max(rst, l)\nprint(K - rst)", "K,N=list(map(int,input().split()))\nA=list(map(int,input().split()))\nans=A[0]+K-A[-1]\nfor i in range(N-1):\n    ans=max(ans,A[i+1]-A[i])\nprint((K-ans))\n", "k, n = list(map(int, input().split()))\ncnt = [0] * (n + 1)\ncmb = 0\na = list(map(int, input().split()))\n\nans = 10 ** 6 + 1\nfor i in range(n):\n  r_idx = ((i+1)%n)\n  r_ans = a[i]+(k-a[r_idx]) if a[i] < a[r_idx] else abs(a[r_idx]-a[i])\n  l_idx = (i-1+n)%n\n  l_ans = (k-a[i])+a[l_idx] if a[i] > a[l_idx] else a[l_idx]-a[i]\n\n  ans = min([ans, r_ans, l_ans])\n\nprint(ans)\n", "k,n=map(int,input().split());a,c=[*map(int,input().split())],[0]*n\nfor i in range(n-1):\n  c[i]=a[i+1]-a[i]\nc[-1]=a[0]+k-a[-1]\nprint(k-max(c))", "K, N = map(int, input().split())\nA = [int(i) for i in input().split()]\nA.append(A[0] + K)\nmax = 0\nfor i in range(N):\n\tif max <= (A[i+1] - A[i]):\n\t\tmax = A[i+1] - A[i]\n    \nprint(K - max)", "K, N = list(map(int,input().split()))\nA    = list(map(int,input().split()))\nA.sort()\nd = [A[i+1]-A[i] for i in range(N-1)]\nd.append(A[0]+K-A[-1])\nprint(K-max(d))", "k,n=map(int,input().split());a=[*map(int,input().split())];d=[0]*n\nfor i in range(n-1):\n  d[i]=a[i+1]-a[i]\nd[-1]=a[0]+k-a[-1]\nprint(k-max(d))", "import numpy as np\n\nk, n = map(int, input().split())\na = list(map(int, input().split()))\n\ndif = []\nfor i in range(len(a)):\n    if i == 0:\n        dif.append(k-a[-1]+a[0])\n    else:\n        dif.append(a[i]-a[i-1])\n\ndif = np.array(dif)\nmax_dif_idx = np.argmax(dif)\nprint(dif.sum() - dif[max_dif_idx])", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\na1 = sorted(a)\ntemp = list()\nx = len(a)-1\nfor i in range(x):\n    temp.append(a1[i+1]-a1[i])\ntemp.append(min(max(a)-min(a),k-max(a)+min(a)))\nans = k-max(temp)\nprint(ans)\n", "k, n = map(int, input().split())\na = list(map(int, input().split()))\n\nbef = a[0]\nmax_diff = 0\nfor i in range(1,n):\n    diff = abs(bef - a[i])\n    max_diff = max(diff, max_diff)\n    bef = a[i]\n\nprint(k - max(max_diff, k - abs(a[n-1] - a[0])))", "K, N = list(map(int, input().split()))\nA = [int(x) for x in input().split()]\n\nmx = A[0] + K - A[-1]\n\nfor i in range(len(A) - 1):\n    dis = A[i + 1] - A[i]\n    if dis > mx:\n        mx = dis\n\nprint((K - mx))\n", "K, N = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n\n\nA = sorted(A)\nL = []\nANS = 0\n\nA_max = max(A)\n\nfor i in range(N-1):\n    L.append(abs(A[i+1]-A[i]))\n        \nL.append(K + A[0] - A_max)\n\nL = sorted(L)\n\n\nL.pop(-1)\n\nfor i in range(len(L)):\n    ANS = ANS + L[i]\n    \nprint(ANS)\n", "k,n = map(int, input().split())\nA = list(map(int,input().split()))\nd = 0\n\nfor i in range(n-1) :\n    d = max(d, A[i+1] - A[i])\n\nd1 = (k - A[n-1]) + A[0]\nd = max(d, d1)\nprint(k-d)", "K, N = map(int, input().split())\nA = [int(a) for a in input().split()]\nA.append(A[0] + K)\nb = []\nmax = 0\nsum = 0\nfor i in range(N):\n    t = A[i+1] - A[i]\n    sum += t\n    if max < t:\n        max = t\nsum -= max\nprint(sum)", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nnums = [0] * N\nfor i in range(N - 1):\n    nums[i] = A[i + 1] - A[i]\nnums[-1] = K + A[0] - A[-1]\n\nprint(sum(nums) - max(nums))\nreturn"]