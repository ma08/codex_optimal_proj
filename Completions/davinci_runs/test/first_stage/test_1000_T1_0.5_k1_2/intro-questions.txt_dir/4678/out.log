2022-04-09 21:27:04.209703 """
N persons are standing in a row. The height of the i-th person from the front is A_i.
We want to have each person stand on a stool of some heights - at least zero - so that the following condition is satisfied for every person:
Condition: Nobody in front of the person is taller than the person. Here, the height of a person includes the stool.
Find the minimum total height of the stools needed to meet this goal.

-----Constraints-----
 - 1 \leq N \leq 2\times 10^5
 - 1 \leq A_i \leq 10^9
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
A_1 \ldots A_N

-----Output-----
Print the minimum total height of the stools needed to meet the goal.

-----Sample Input-----
5
2 1 5 4 3

-----Sample Output-----
4

If the persons stand on stools of heights 0, 1, 0, 1, and 2, respectively, their heights will be 2, 2, 5, 5, and 5, satisfying the condition.
We cannot meet the goal with a smaller total height of the stools.
"""
2022-04-09 21:27:04.209770 --------------------------
2022-04-09 21:27:14.057955 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for i in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)"
    }
  ],
  "created": 1649554024,
  "id": "cmpl-4vGe0Pw54ltz1BDKy3Psz9rm3leO8",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:27:14.058269 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for i in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()"
}
2022-04-09 21:27:14.058326 REASON stop
2022-04-09 21:27:14.070557 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)"
}
2022-04-09 21:27:14.070732 REASON stop
