2022-04-09 19:51:47.971157 """
There is a string S consisting of digits 1, 2, ..., 9.
Lunlun, the Dachshund, will take out three consecutive digits from S, treat them as a single integer X and bring it to her master. (She cannot rearrange the digits.)
The master's favorite number is 753. The closer to this number, the better.
What is the minimum possible (absolute) difference between X and 753?

-----Constraints-----
 - S is a string of length between 4 and 10 (inclusive).
 - Each character in S is 1, 2, ..., or 9.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the minimum possible difference between X and 753.

-----Sample Input-----
1234567876

-----Sample Output-----
34

Taking out the seventh to ninth characters results in X = 787, and the difference between this and 753 is 787 - 753 = 34. The difference cannot be made smaller, no matter where X is taken from.
Note that the digits cannot be rearranged. For example, taking out 567 and rearranging it to 765 is not allowed.
We cannot take out three digits that are not consecutive from S, either. For example, taking out the seventh digit 7, the ninth digit 7 and the tenth digit 6 to obtain 776 is not allowed.
"""
2022-04-09 19:51:47.971176 --------------------------
2022-04-09 19:52:00.002255 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef get_min_difference(string):\n    min_difference = 1001\n    for i in range(len(string) - 2):\n        difference = abs(753 - int(string[i:i+3]))\n        if difference < min_difference:\n            min_difference = difference\n    return min_difference\n\nif __name__ == '__main__':\n    string = input()\n    print(get_min_difference(string))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\n\ndef get_min_diff(s):\n    min_diff = 10000\n    for i in range(len(s) - 2):\n        x = int(s[i:i+3])\n        diff = abs(x - 753)\n        if diff < min_diff:\n            min_diff = diff\n    return min_diff\n\nprint(get_min_diff(s))"
    }
  ],
  "created": 1649548308,
  "id": "cmpl-4vF9oA5PjS0nUJgfOEqM0aMPYJsNs",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:52:00.002459 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef get_min_difference(string):\n    min_difference = 1001\n    for i in range(len(string) - 2):\n        difference = abs(753 - int(string[i:i+3]))\n        if difference < min_difference:\n            min_difference = difference\n    return min_difference\n\nif __name__ == '__main__':\n    string = input()\n    print(get_min_difference(string))"
}
2022-04-09 19:52:00.002504 REASON stop
2022-04-09 19:52:00.014036 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\n\ndef get_min_diff(s):\n    min_diff = 10000\n    for i in range(len(s) - 2):\n        x = int(s[i:i+3])\n        diff = abs(x - 753)\n        if diff < min_diff:\n            min_diff = diff\n    return min_diff\n\nprint(get_min_diff(s))"
}
2022-04-09 19:52:00.014127 REASON stop
