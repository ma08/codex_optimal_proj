["\n\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)", "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()", "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))"]