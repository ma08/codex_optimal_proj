2022-04-09 20:06:31.979742 """
You are given two integers $a$ and $b$.

In one move, you can choose some integer $k$ from $1$ to $10$ and add it to $a$ or subtract it from $a$. In other words, you choose an integer $k \in [1; 10]$ and perform $a := a + k$ or $a := a - k$. You may use different values of $k$ in different moves.

Your task is to find the minimum number of moves required to obtain $b$ from $a$.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 2 \cdot 10^4$) â€” the number of test cases. Then $t$ test cases follow.

The only line of the test case contains two integers $a$ and $b$ ($1 \le a, b \le 10^9$).


-----Output-----

For each test case, print the answer: the minimum number of moves required to obtain $b$ from $a$.


-----Example-----
Input
6
5 5
13 42
18 4
1337 420
123456789 1000000000
100500 9000

Output
0
3
2
92
87654322
9150



-----Note-----

In the first test case of the example, you don't need to do anything.

In the second test case of the example, the following sequence of moves can be applied: $13 \rightarrow 23 \rightarrow 32 \rightarrow 42$ (add $10$, add $9$, add $10$).

In the third test case of the example, the following sequence of moves can be applied: $18 \rightarrow 10 \rightarrow 4$ (subtract $8$, subtract $6$).
"""
2022-04-09 20:06:31.979764 --------------------------
2022-04-09 20:06:46.140312 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)"
    }
  ],
  "created": 1649549192,
  "id": "cmpl-4vFO4Fjn4tTCQbvW7MsllWDMd6aAv",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:06:46.140514 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))"
}
2022-04-09 20:06:46.140558 REASON stop
2022-04-09 20:06:46.141660 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)"
}
2022-04-09 20:06:46.141749 REASON stop
