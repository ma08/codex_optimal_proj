["\n\nN, R = map(int, raw_input().split())\nprojects = []\nfor _ in xrange(N):\n    projects.append(map(int, raw_input().split()))\n\ndef solve(n, r, projects):\n    if r < 0:\n        return 'NO'\n    if n == 0:\n        return 'YES'\n    a, b = projects[0]\n    if r + b < 0:\n        return 'NO'\n    if r >= a:\n        return solve(n-1, r + b, projects[1:])\n    else:\n        return solve(n-1, r - a + b, projects[1:])\n\nprint solve(N, R, projects)", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    for i in range(n):\n        if projects[i][0] <= r:\n            r += projects[i][1]\n            if r < 0:\n                print(\"NO\")\n                break\n        else:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    a = []\n    b = []\n    for i in range(n):\n        ai, bi = map(int, input().split())\n        a.append(ai)\n        b.append(bi)\n    print(dp(n, r, a, b))\n\ndef dp(n, r, a, b):\n    dp = [False] * (r + 1)\n    dp[r] = True\n    for i in range(n):\n        dp_next = dp.copy()\n        for j in range(r + 1):\n            if dp[j]:\n                if j >= a[i]:\n                    dp_next[max(0, j + b[i])] = True\n        dp = dp_next.copy()\n    return 'YES' if dp[0] else 'NO'\n\nif __name__ == '__main__':\n    main()", "\n\nn, r = map(int, input().split())\n\nprojects = []\n\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a,b))\n\ndef possible(projects):\n    projects.sort(key=lambda x: x[0])\n    for i in range(n):\n        r += projects[i][1]\n        if r < projects[i][0]:\n            return \"NO\"\n    return \"YES\"\n\nprint(possible(projects))", "\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort()\n\nrating = r\nfor project in projects:\n    if rating < project[0]:\n        print(\"NO\")\n        break\n    rating += project[1]\n    if rating < 0:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")", "\n\ndef main():\n    n, r = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    a.sort(key=lambda x: x[0])\n    for i in range(n):\n        if(r >= a[i][0]):\n            r += a[i][1]\n            if(r < 0):\n                print(\"NO\")\n                return\n        else:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()", "\n#-----------------------------Solution---------------------------------------\nn,r=map(int,input().split())\na=[]\nb=[]\nfor i in range(n):\n    c,d=map(int,input().split())\n    a.append(c)\n    b.append(d)\nfor i in range(n):\n    r+=b[i]\n    if(r<a[i]):\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")", "\n\nn,r = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\na = sorted(a,key = lambda x:x[0],reverse=True)\n\nfor i in a:\n    r += i[1]\n    if r < 0:\n        print(\"NO\")\n        exit(0)\n\nprint(\"YES\")"]