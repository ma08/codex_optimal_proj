["\n\n#-----Solution-----\n\nimport math\n\nn, k = map(int, input().split())\n\nproblems = list(map(int, input().split()))\n\nleft = 0\nright = len(problems) - 1\n\nsolved = 0\n\nwhile left <= right:\n    if problems[left] <= k:\n        solved += 1\n        left += 1\n    elif problems[right] <= k:\n        solved += 1\n        right -= 1\n    else:\n        break\n\nprint(solved)", "\n\nn, k = map(int, raw_input().split())\nproblems = map(int, raw_input().split())\n\ncount = 0\n\nwhile problems:\n    if problems[0] <= k:\n        problems = problems[1:]\n        count += 1\n    elif problems[-1] <= k:\n        problems = problems[:-1]\n        count += 1\n    else:\n        break\n\nprint count", "\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ni = 0\nj = n-1\nans = 0\nwhile i <= j:\n    if a[i] > k and a[j] > k:\n        break\n    if a[i] <= k:\n        i += 1\n        ans += 1\n    if a[j] <= k:\n        j -= 1\n        ans += 1\nprint(ans)", "\n\n#------------------------------------------------------------------------------#\n\ndef problem_solver(problems, skill):\n    problems = problems[:]\n    num_problems = len(problems)\n    solved_problems = 0\n    while num_problems > 0:\n        if problems[0] <= skill:\n            solved_problems += 1\n            problems.pop(0)\n        elif problems[-1] <= skill:\n            solved_problems += 1\n            problems.pop(-1)\n        else:\n            break\n        num_problems = len(problems)\n    return solved_problems\n\n#------------------------------------------------------------------------------#\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\nprint(problem_solver(problems, k))", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n    i, j = 0, len(d)-1\n    c = 0\n    while i < j:\n        if d[i] <= k and d[j] <= k:\n            if d[i] < d[j]:\n                i += 1\n            else:\n                j -= 1\n            c += 1\n        elif d[i] <= k:\n            i += 1\n            c += 1\n        elif d[j] <= k:\n            j -= 1\n            c += 1\n        else:\n            break\n    print(c)\n\nmain()", "\n\n#\n# Solution 1\n#\n\ndef solve(n, k, a):\n    i, j = 0, n\n    while i < j and a[i] <= k:\n        i += 1\n    while i < j and a[j - 1] <= k:\n        j -= 1\n    return i + (n - j)\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n\n\n#\n# Solution 2\n#\n\ndef solve(n, k, a):\n    l, r = 0, n - 1\n    cnt = 0\n    while l <= r:\n        if a[l] <= k:\n            cnt += 1\n            l += 1\n        elif a[r] <= k:\n            cnt += 1\n            r -= 1\n        else:\n            break\n    return cnt\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))", "\nimport sys\nimport math\n\nn, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nans = 0\nl = 0\nr = n - 1\nwhile l <= r:\n    if a[l] <= k:\n        ans += 1\n        k -= a[l]\n        l += 1\n    elif a[r] <= k:\n        ans += 1\n        k -= a[r]\n        r -= 1\n    else:\n        break\n\nprint(ans)", "\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\ncount = 0\n\nwhile left <= right:\n    if problems[left] <= k:\n        count += 1\n        left += 1\n    elif problems[right] <= k:\n        count += 1\n        right -= 1\n    else:\n        break\n\nprint(count)"]