2022-04-16 20:14:19.046967 """
We have held a popularity poll for N items on sale. Item i received A_i votes.
From these N items, we will select M as popular items. However, we cannot select an item with less than \dfrac{1}{4M} of the total number of votes.
If M popular items can be selected, print Yes; otherwise, print No.

-----Constraints-----
 - 1 \leq M \leq N \leq 100
 - 1 \leq A_i \leq 1000
 - A_i are distinct.
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N M
A_1 ... A_N

-----Output-----
If M popular items can be selected, print Yes; otherwise, print No.

-----Sample Input-----
4 1
5 4 2 1

-----Sample Output-----
Yes

There were 12 votes in total. The most popular item received 5 votes, and we can select it.
"""
2022-04-16 20:14:19.046983 --------------------------
2022-04-16 20:14:39.273767 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\nvotes = sorted(list(map(int, input().split())), reverse=True)\n\nif votes[0] >= (4 * m * votes[-1]):\n    print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nclass PopularItem:\n    def __init__(self, n, m, lst):\n        self.n = n\n        self.m = m\n        self.lst = lst\n\n    def canSelect(self):\n        total_votes = sum(self.lst)\n        min_votes = total_votes//(4*self.m)\n        return all(i >= min_votes for i in self.lst)\n\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    print(\"Yes\" if PopularItem(n, m, lst).canSelect() else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nX = sorted(A, reverse=True)\n\nif X[M-1] >= sum(X) // 4 // M:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n#1. Get input\nN, M = map(int, input().split())\nvotes = list(map(int, input().split()))\n\n#2. Check if M is possible\nif max(votes) >= sum(votes) / (4*M):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nfrom itertools import accumulate\nfrom typing import List, Tuple\n\ndef poll(n: int, m: int, votes: List[int]) -> Tuple[str, int]:\n    \"\"\"\n    >>> poll(4, 1, [5, 4, 2, 1])\n    ('Yes', 5)\n    >>> poll(4, 2, [5, 4, 2, 1])\n    ('Yes', 3)\n    >>> poll(4, 3, [5, 4, 2, 1])\n    ('No', 2)\n    >>> poll(4, 4, [5, 4, 2, 1])\n    ('No', 1)\n    >>> poll(2, 1, [4, 2])\n    ('No', 2)\n    >>> poll(2, 2, [4, 2])\n    ('No', 1)\n    \"\"\"\n    total_votes = sum(votes)\n    threshold = total_votes // (4 * m)\n    popular_votes = [0] + list(accumulate(votes))\n\n    for i in range(1, n + 1 - m + 1):\n        if popular_votes[i + m - 1] - popular_votes[i - 1] >= threshold:\n            return 'Yes', threshold\n    return 'No', threshold\n\nif __name__ == '__main__':\n    n, m = [int(x) for x in input().split(' ')]\n    votes = [int(x) for x in input().split(' ')]\n    print(poll(n, m, votes)[0])"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\n\nif max(A) >= n / (4 * m):\n    print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# N: Number of items\n# M: Number of popular items\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# Number of votes\ntotal_votes = sum(A)\n\n# If the most popular item has more than 1/4M of the total votes, it is a popular item\nif A[0] > total_votes / (4 * M):\n    if A[0] == A[1]:\n        print('No')\n    else:\n        print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    N, M = (int(n) for n in input().split())\n    A = [int(n) for n in input().split()]\n    if max(A) // (4 * M) == 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650140059,
  "id": "cmpl-4xj6BwKotaSqfj5SDR2se6uN2gpnK",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:14:39.274078 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\nvotes = sorted(list(map(int, input().split())), reverse=True)\n\nif votes[0] >= (4 * m * votes[-1]):\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-16 20:14:39.274114 REASON stop
2022-04-16 20:14:39.293106 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nclass PopularItem:\n    def __init__(self, n, m, lst):\n        self.n = n\n        self.m = m\n        self.lst = lst\n\n    def canSelect(self):\n        total_votes = sum(self.lst)\n        min_votes = total_votes//(4*self.m)\n        return all(i >= min_votes for i in self.lst)\n\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    print(\"Yes\" if PopularItem(n, m, lst).canSelect() else \"No\")"
}
2022-04-16 20:14:39.293277 REASON stop
2022-04-16 20:14:39.293706 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nX = sorted(A, reverse=True)\n\nif X[M-1] >= sum(X) // 4 // M:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-16 20:14:39.293768 REASON stop
2022-04-16 20:14:39.314472 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n#1. Get input\nN, M = map(int, input().split())\nvotes = list(map(int, input().split()))\n\n#2. Check if M is possible\nif max(votes) >= sum(votes) / (4*M):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-16 20:14:39.314588 REASON stop
2022-04-16 20:14:39.315645 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nfrom itertools import accumulate\nfrom typing import List, Tuple\n\ndef poll(n: int, m: int, votes: List[int]) -> Tuple[str, int]:\n    \"\"\"\n    >>> poll(4, 1, [5, 4, 2, 1])\n    ('Yes', 5)\n    >>> poll(4, 2, [5, 4, 2, 1])\n    ('Yes', 3)\n    >>> poll(4, 3, [5, 4, 2, 1])\n    ('No', 2)\n    >>> poll(4, 4, [5, 4, 2, 1])\n    ('No', 1)\n    >>> poll(2, 1, [4, 2])\n    ('No', 2)\n    >>> poll(2, 2, [4, 2])\n    ('No', 1)\n    \"\"\"\n    total_votes = sum(votes)\n    threshold = total_votes // (4 * m)\n    popular_votes = [0] + list(accumulate(votes))\n\n    for i in range(1, n + 1 - m + 1):\n        if popular_votes[i + m - 1] - popular_votes[i - 1] >= threshold:\n            return 'Yes', threshold\n    return 'No', threshold\n\nif __name__ == '__main__':\n    n, m = [int(x) for x in input().split(' ')]\n    votes = [int(x) for x in input().split(' ')]\n    print(poll(n, m, votes)[0])"
}
2022-04-16 20:14:39.315738 REASON stop
2022-04-16 20:14:39.329070 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\n\nif max(A) >= n / (4 * m):\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-16 20:14:39.329168 REASON stop
2022-04-16 20:14:39.351254 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# N: Number of items\n# M: Number of popular items\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# Number of votes\ntotal_votes = sum(A)\n\n# If the most popular item has more than 1/4M of the total votes, it is a popular item\nif A[0] > total_votes / (4 * M):\n    if A[0] == A[1]:\n        print('No')\n    else:\n        print('Yes')\nelse:\n    print('No')"
}
2022-04-16 20:14:39.351410 REASON stop
2022-04-16 20:14:39.352413 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    N, M = (int(n) for n in input().split())\n    A = [int(n) for n in input().split()]\n    if max(A) // (4 * M) == 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:14:39.352540 REASON stop
