2022-04-16 20:23:15.749587 """
In the Kingdom of AtCoder, people use a language called Taknese, which uses lowercase English letters.
In Taknese, the plural form of a noun is spelled based on the following rules:
 - If a noun's singular form does not end with s, append s to the end of the singular form.
 - If a noun's singular form ends with s, append es to the end of the singular form.
You are given the singular form S of a Taknese noun. Output its plural form.

-----Constraints-----
 - S is a string of length 1 between 1000, inclusive.
 - S contains only lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the plural form of the given Taknese word.

-----Sample Input-----
apple

-----Sample Output-----
apples

apple ends with e, so its plural form is apples.
"""
2022-04-16 20:23:15.749608 --------------------------
2022-04-16 20:23:27.617876 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nsingular = input()\nif singular[-1] == 's':\n    plural = singular + 'es'\nelse:\n    plural = singular + 's'\nprint(plural)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef plural(s):\n    if s[-1] == 's':\n        return s + 'es'\n    else:\n        return s + 's'\n\ns = input()\nprint(plural(s))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    s = s + 'es'\nelse:\n    s = s + 's'\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nnoun = input()\n\nif noun[-1] == 's':\n    print(noun + 'es')\nelse:\n    print(noun + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nS = input()\n\nif S[-1] == 's':\n    print(S + 'es')\nelse:\n    print(S + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == 's':\n  print(s + 'es')\nelse:\n  print(s + 's')"
    }
  ],
  "created": 1650140595,
  "id": "cmpl-4xjEpH9B0HyNBrgV56WeD4tA4jb0s",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:23:27.618356 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nsingular = input()\nif singular[-1] == 's':\n    plural = singular + 'es'\nelse:\n    plural = singular + 's'\nprint(plural)"
}
2022-04-16 20:23:27.618463 REASON stop
2022-04-16 20:23:27.638178 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-16 20:23:27.638358 REASON stop
2022-04-16 20:23:27.638815 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef plural(s):\n    if s[-1] == 's':\n        return s + 'es'\n    else:\n        return s + 's'\n\ns = input()\nprint(plural(s))"
}
2022-04-16 20:23:27.638875 REASON stop
2022-04-16 20:23:27.661642 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    s = s + 'es'\nelse:\n    s = s + 's'\nprint(s)"
}
2022-04-16 20:23:27.661742 REASON stop
2022-04-16 20:23:27.691524 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nnoun = input()\n\nif noun[-1] == 's':\n    print(noun + 'es')\nelse:\n    print(noun + 's')"
}
2022-04-16 20:23:27.691632 REASON stop
2022-04-16 20:23:27.692695 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nS = input()\n\nif S[-1] == 's':\n    print(S + 'es')\nelse:\n    print(S + 's')"
}
2022-04-16 20:23:27.692778 REASON stop
2022-04-16 20:23:27.694024 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-16 20:23:27.694107 REASON stop
2022-04-16 20:23:27.694998 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == 's':\n  print(s + 'es')\nelse:\n  print(s + 's')"
}
2022-04-16 20:23:27.695059 REASON stop
