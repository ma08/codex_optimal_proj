["", "\n\n#Solution\nn=input()\nif(int(n[-1])==0 or int(n[-1])==4 or int(n[-1])==8):\n    print(n)\nelif(int(n[-1])==1 or int(n[-1])==5 or int(n[-1])==9):\n    print(int(n)+3)\nelif(int(n[-1])==2 or int(n[-1])==6):\n    print(int(n)+2)\nelse:\n    print(int(n)+1)", "\n\nfrom sys import stdin, stdout\nfrom itertools import product\n\ndef is_interesting(n):\n    return int(sum(map(int, list(str(n))))) % 4 == 0\n\ndef get_nearest_interesting(a):\n    for i in range(a, a+1000):\n        if is_interesting(i):\n            return i\n\nstdout.write(str(get_nearest_interesting(int(stdin.readline().strip()))))", "\n\na = int(input())\n\nsum_a = 0\n\nfor digit in str(a):\n    sum_a += int(digit)\n\nif sum_a % 4 == 0:\n    print(a)\nelse:\n    n = a\n    while n % 4 != 0:\n        n += 1\n    print(n)", "\n\na = int(input())\nif a%4==0:\n    print(a)\nelse:\n    while a%4!=0:\n        a+=1\n    print(a)", "\n\ndef interesting(n):\n  sum = 0\n  while n > 0:\n    sum += n % 10\n    n //= 10\n  return sum % 4 == 0\n\na = int(input())\nwhile not interesting(a):\n  a += 1\nprint(a)", "\n\na = int(input())\n\n#while (a % 4) != 0:\n#    a += 1\n\nprint(a + (4 - (a % 4)))", "\n\ndef get_sum(n):\n    return sum([int(x) for x in str(n)])\n\ndef is_interesting(n):\n    return get_sum(n) % 4 == 0\n\ndef next_interesting(n):\n    while not is_interesting(n):\n        n += 1\n    return n\n\nprint next_interesting(int(raw_input()))"]