["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()", "\n\nT = int(input())\nfor t in range(T):\n    n, k = map(int, input().split(' '))\n    if n > k*(k+1)/2:\n        print(\"NO\")\n        continue\n    i = 1\n    while n > k*(i+1) and i < k:\n        n -= i\n        i += 1\n    a = []\n    while i > 0:\n        a.append(i)\n        i -= 1\n    a.append(n)\n    print(\"YES\")\n    print(*a)\n\n\n\n\"\"\"\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define FOR(i,a,b) for(long long i=a;i<b;i++)\n\nint main()\n{\n    long long t,n,k;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n>>k;\n        long long i;\n        if(n>k*(k+1)/2)\n        {\n            cout<<\"NO\"<<endl;\n            continue;\n        }\n        for(i=1;i<=k && n>k*(i+1);i++)\n        {\n            n-=i;\n        }\n        cout<<\"YES\"<<endl;\n        while(i>0)\n        {\n            cout<<i<<\" \";\n            i--;\n        }\n        cout<<n<<endl;\n    }\n    return 0;\n}\n\"\"\"", "\n\nn, k = map(int, input().split())\nif k*(k+1)//2 < n or k*(k-1)//2 > n:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(k-1):\n        print(n//k+1, end=' ')\n        n -= n//k+1\n    print(n)", "\n\n\ndef main():\n\tn, k = [int(i) for i in input().split()]\n\ta = [1] * k\n\ti = 0\n\twhile sum(a) < n:\n\t\tif i == k-1:\n\t\t\ti = 0\n\t\ta[i] += 1\n\t\ti += 1\n\tif sum(a) != n:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\t\tprint(*a)\n\nif __name__ == '__main__':\n\tmain()", "\n\ndef get_input():\n    n, k = map(int, input().split())\n    return n, k\n\ndef solve(n, k):\n    if n < k:\n        return False\n    if n == k:\n        return [1] * k\n    if k == 1:\n        return [n]\n    if k == 2:\n        if n % 2 == 0:\n            return [n // 2, n // 2]\n        else:\n            return False\n    if k > 2:\n        ans = [1] * k\n        n -= k\n        while n > 0:\n            for i in range(k - 1):\n                if ans[i] < ans[i + 1] / 2:\n                    ans[i] += 1\n                    n -= 1\n                if n == 0:\n                    break\n            if n == 0:\n                break\n            if n < k - i - 1:\n                return False\n            ans[i + 1] += 1\n            n -= 1\n        return ans\n\ndef main():\n    n, k = get_input()\n    ans = solve(n, k)\n    if not ans:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(\" \".join(map(str, ans)))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef solve_dynamic(n, k):\n    dp = [0] * (k+1)\n    dp[0] = 1\n    for i in range(1, k+1):\n        dp[i] = dp[i-1] * 2\n        if dp[i] > n:\n            return False\n    return True\n\ndef solve_recursive(n, k):\n    if n == 0 and k == 0:\n        return True\n    if n <= 0 or k <= 0:\n        return False\n    return solve_recursive(n-k, k) or solve_recursive(n-k*2, k-1)\n\ndef solve_greedy(n, k):\n    if 2**(k-1) > n:\n        return False\n    else:\n        if n % 2 == 0:\n            return True\n        else:\n            return False\n\ndef solve_greedy2(n, k):\n    if n < k:\n        return False\n    if n == k:\n        return True\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\ndef solve_greedy3(n, k):\n    if n % k == 0:\n        return True\n    if n % k == 1:\n        return False\n    if n % k > 1:\n        return True\n\nif __name__ == \"__main__\":\n    n = int(input())\n    k = int(input())\n\n    # print(solve_dynamic(n, k))\n    # print(solve_recursive(n, k))\n    # print(solve_greedy(n, k))\n    print(solve_greedy3(n, k))", "\ndef solve(n,k):\n    if n<k:\n        return \"NO\"\n    elif n==k:\n        return \"YES\\n\"+\" \".join(str(i) for i in range(1,k+1))\n    else:\n        res = []\n        i = 1\n        while n-i>=0:\n            sum1 = i\n            while n-2*i>=0:\n                sum1+=2*i\n                if n-2*i<=k-len(res)-1:\n                    res.append(i)\n                    break\n                i+=1\n            res.append(i)\n            n-=sum1\n            i+=1\n        if len(res)==k and n==0:\n            return \"YES\\n\"+\" \".join(str(j) for j in res)\n        else:\n            return \"NO\"\n\nn,k = map(int,raw_input().split())\nans = solve(n,k)\nprint ans", "\n\nn,k = map(int, input().split())\n\nif n == 1:\n\tprint(\"YES\\n1\")\n\texit()\n\nif n-k > k:\n\tprint(\"NO\")\n\texit()\n\nif k == 1 and n != 1:\n\tprint(\"NO\")\n\texit()\n\nprint(\"YES\")\n\ncnt = 1\nfor i in range(1,k+1):\n\tif cnt == 1:\n\t\tprint(1, end = \" \")\n\telse:\n\t\tif i == k:\n\t\t\tprint(n, end = \" \")\n\t\telif cnt*2 < n:\n\t\t\tprint(cnt, end = \" \")\n\t\telse:\n\t\t\tprint(n-cnt, end = \" \")\n\tcnt += 1\n\nprint()"]