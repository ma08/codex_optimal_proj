["\n\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    b.append(a[i][1])\n    \nb.sort(reverse=True)\n\ntotal = 0\nfor i in range(n):\n    if (m > b[i]):\n        total += a[i][0]*b[i]\n        m -= b[i]\n    else:\n        total += a[i][0]*m\n        break\nprint(total)", "\n\n# N, M = map(int, input().split())\n\n# A = []\n# B = []\n# for i in range(N):\n#     a, b = map(int, input().split())\n#     A.append(a)\n#     B.append(b)\n\nN, M = 2, 5\nA = [4, 2]\nB = [9, 4]\n\nA_B = list(zip(A, B))\nA_B.sort()\n\nans = 0\nfor a, b in A_B:\n    if M <= b:\n        ans += a * M\n        break\n    else:\n        ans += a * b\n        M -= b\n\nprint(ans)", "\n\nN, M = map(int, input().split())\nA = [0] * N\nB = [0] * N\nfor i in range(N):\n    A[i], B[i] = map(int, input().split())\n\n# \u6761\u4ef6\u3092\u6e80\u305f\u3059\n# \u30fb\u5404\u8ca9\u58f2\u5e97\u306b\u3064\u3044\u3066\u3001\u6700\u5927\u5024\u304cM\u4ee5\u4e0b\n# \u30fb\u8ca9\u58f2\u5e97\u304c\uff11\u3064\u3067\u3082\u3042\u308b\nif N == 1:\n    print(A[0] * M)\n    exit()\n\n# \u4e8c\u5206\u63a2\u7d22\n# \u5024\u304c\u5927\u304d\u304f\u306a\u308b\u307b\u3069\u3001\u8ca9\u58f2\u5e97\u306b\u304a\u3044\u3066\u8cb7\u3048\u308b\u6700\u5927\u6570\u304c\u5897\u3048\u308b\n# \u8cb7\u3048\u308b\u6700\u5927\u6570\u304cM\u4ee5\u4e0a\u3068\u306a\u308b\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\nleft = 0\nright = 10**15\nwhile right - left > 1:\n    mid = (left + right) // 2\n    can_buy = 0\n    for i in range(N):\n        can_buy += mid // A[i] * B[i]\n    if can_buy >= M:\n        right = mid\n    else:\n        left = mid\n\n# \u8cb7\u3048\u308b\u6700\u5927\u6570\u304cM\u4ee5\u4e0a\u3068\u306a\u308b\u6700\u5c0f\u5024\u3067\u8cfc\u5165\ncan_buy = 0\nfor i in range(N):\n    can_buy += right // A[i] * B[i]\n\n# \u8cfc\u5165\u3059\u308b\u91cf\u306e\u5dee\u5206\u3092\u8ca9\u58f2\u5e97\u3054\u3068\u306b\u5747\u7b49\u306b\u8a08\u7b97\ndiff = M - can_buy\nfor i in range(N):\n    if diff == 0:\n        break\n    if diff >= B[i]:\n        diff -= B[i]\n    else:\n        break\n\n# \u6700\u5c0f\u5024\u3067\u8cfc\u5165\u3057\u305f\u91cf\u3068\u5dee\u5206\u3092\u5408\u8a08\nprint(right + (i + 1) * A[i])", "\n\nn, m = map(int, input().split())\n\na = []\nb = []\n\nfor i in range(n):\n    ai, bi = map(int, input().split())\n    a.append(ai)\n    b.append(bi)\n\n# print(a, b)\n\n# \u554f\u984c\u6587\u304b\u3089\u3001B_1 + ... + B_N >= M \u304c\u6210\u308a\u7acb\u3064\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n# \u305d\u306e\u305f\u3081\u3001\u6700\u4f4e\u3067\u3082 A_i * M (i=1...N) \u3068\u306a\u308b\u3002\n# \u3057\u305f\u304c\u3063\u3066\u3001\u89e3\u306f min(A_i * M) \u3068\u306a\u308b\u3002\n\nans = 10**10\nfor i in range(n):\n    ans = min(ans, a[i] * m)\n\nprint(ans)", "\n\nimport sys\n\ndef main():\n    N, M = map(int, input().split())\n    AB = [tuple(map(int, input().split())) for i in range(N)]\n\n    AB.sort(key=lambda x: x[0])\n    total = 0\n    for a, b in AB:\n        if b < M:\n            total += a * b\n            M -= b\n        else:\n            total += a * M\n            break\n    print(total)\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\nfrom heapq import heappush, heappop\n\nn, m = map(int, stdin.readline().split())\n\na, b = [], []\nfor _ in range(n):\n    _a, _b = map(int, stdin.readline().split())\n    a.append(_a)\n    b.append(_b)\n\nheap = []\nfor i in range(n):\n    heappush(heap, (a[i], b[i]))\n\nans = 0\nfor _ in range(m):\n    price, num = heappop(heap)\n    ans += price\n    heappush(heap, (price, num-1))\n\nprint(ans)", "\nN, M = map(int, input().split())\n# \u5168\u4f53\u3067M\u672c\u8cb7\u3048\u308b\u306e\u3067\u3001\u5165\u529b\u3055\u308c\u305f\u5e97\u306e\u4e2d\u3067\u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u63a2\u3059\n# \u305d\u3053\u304b\u3089\u3001\u4ed6\u306e\u5e97\u3067\u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u63a2\u3059\n# \u305d\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3001M\u672c\u8cb7\u3048\u308b\u307e\u3067\u8cb7\u3046\n# \u5168\u4f53\u3067M\u672c\u8cb7\u3048\u308b\u306e\u3067\u3001\u6761\u4ef6\u306f\u5168\u3066\u6e80\u305f\u3059\n# \u3053\u308c\u3067\u3001\u6700\u5c0f\u306e\u8cb7\u3044\u7269\u91d1\u984d\u304c\u308f\u304b\u308b\nA = []\nB = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\n\n# \u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u63a2\u3059\nmin_a = min(A)\n# \u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u6301\u3063\u3066\u3044\u308b\u5e97\u3067\u30011\u672c\u8cb7\u3046\nbuy_num = 1\n# \u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u6301\u3063\u3066\u3044\u308b\u5e97\u3067\u3001\u6700\u5927\u4f55\u672c\u307e\u3067\u8cb7\u3048\u308b\u304b\nmax_buy_num = B[A.index(min_a)]\n# \u6b8b\u308a\u8cb7\u3044\u305f\u3044\u672c\u6570\nremain_num = M - buy_num\n# \u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u6301\u3063\u3066\u3044\u308b\u5e97\u3067\u6700\u5927\u8cb7\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u679a\u6570\u4ee5\u4e0a\u8cb7\u3044\u305f\u3044\u6642\nif remain_num >= max_buy_num:\n    # \u5168\u4f53\u3067M\u672c\u8cb7\u3048\u308b\u306e\u3067\u3001\u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u6301\u3063\u3066\u3044\u308b\u5e97\u3067\u6700\u5927\u8cb7\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u679a\u6570\u8cb7\u3046\n    buy_num += max_buy_num\n    remain_num -= max_buy_num\n    # \u6b8b\u308a\u8cb7\u3044\u305f\u3044\u672c\u6570\u304c0\u672c\u306b\u306a\u308b\u307e\u3067\u3001\u4ed6\u306e\u5e97\u3067\u6700\u3082\u5b89\u30441\u672c\u3042\u305f\u308a\u306e\u91d1\u984d\u3092\u63a2\u3057\u3066\u8cb7\u3046\n    while remain_num > 0:\n        next_min_a = min([a for a in A if a > min_a])\n        next_max_buy_num = B[A.index(next_min_a)]\n        if remain_num >= next_max_buy_num:\n            buy_num += next_max_buy_num\n            remain_num -= next_max_buy_num\n            min_a = next_min_a\n        else:\n            buy_num += remain_num\n            remain_num -= remain_num\n            break\n\nprint(buy_num * min_a)", "\n\n#Your code for this problem goes here. Feel free to write additional functions as needed.\n\n#If you need some sample code to start, here's a sample solution for Problem A that you can look at.\n#Feel free to use this code as a starting point, or feel free to throw it out and start from scratch!\n\ndef read_input():\n    N, M = map(int, input().split())\n    return N, M\n\ndef read_store():\n    A, B = map(int, input().split())\n    return A, B\n\ndef solve():\n    N, M = read_input()\n    stores = []\n    for i in range(N):\n        stores.append(read_store())\n    stores.sort()\n\n    total_cost = 0\n    for A, B in stores:\n        if B >= M:\n            total_cost += M * A\n            break\n        else:\n            total_cost += B * A\n            M -= B\n\n    print(total_cost)\n\nif __name__ == '__main__':\n    solve()"]