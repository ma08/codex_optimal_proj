["\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for value in expression:\n        result += int(value)\n    print(result)\n\n\nmain()", "\n#SOLUTION\ns=input()\na=s.split('-')\nt=s.split('+')\nr=0\nfor i in range(len(a)):\n    r=r-int(a[i])\nfor i in range(len(t)):\n    r=r+int(t[i])\nprint(r)", "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n', '')\n    line = line.replace('+', ' ')\n    line = line.replace('-', ' ')\n    line = line.split()\n    sum = 0\n    for i in range(0, len(line)):\n        sum += int(line[i])\n    print(sum)\n\nmain()", "\n\ndef main():\n    user_input = raw_input().split(\"-\")\n    result = sum([int(x) for x in user_input])\n    print -(result + 1)\n    \n    \nif __name__ == \"__main__\":\n    main()", "\n\nimport re\n\nexpression = input()\n\noperands = re.findall('\\d+', expression)\noperators = re.findall('[\\+\\-]', expression)\n\nresult = int(operands[0])\nfor i in range(len(operators)):\n\tif operators[i] == '+':\n\t\tresult += int(operands[i+1])\n\telse:\n\t\tresult -= int(operands[i+1])\n\nprint(result)", "\n\nn = input()\nprint(eval(n))", "\nst = input()\n\ns = 0\n\nfor i in st:\n    if i == '+':\n        s += 1\n    if i == '-':\n        s -= 1\n\nprint(s)", "\n\nimport sys\n\ndata = sys.stdin.readline().split('+')\nres = 0\n\nfor i in range(0, len(data)):\n    if i % 2 == 0:\n        res += int(data[i])\n    else:\n        res -= int(data[i])\n\nprint(res)"]