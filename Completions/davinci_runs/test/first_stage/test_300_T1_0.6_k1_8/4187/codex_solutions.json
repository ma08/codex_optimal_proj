["\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef maxRest(a):\n    maxRest = 0\n    curRest = 0\n    for i in range(len(a)):\n        if a[i] == 0:\n            curRest += 1\n            if curRest > maxRest:\n                maxRest = curRest\n        else:\n            curRest = 0\n    return maxRest\n\nprint(maxRest(a + a))", "\n\nn = int(input())\na = [int(i) for i in input().split()]\nmax_rest_len = 0\nrest_len = 0\n\nfor i in range(n):\n    if a[i] == 1:\n        rest_len += 1\n    else:\n        rest_len = 0\n    if rest_len > max_rest_len:\n        max_rest_len = rest_len\n\nprint(max_rest_len)", "\nfrom pprint import pprint\n\ndef solution(n, a):\n    rest_count = 0\n    max_rest = 0\n    for x in a:\n        if x == 0:\n            rest_count = 0\n        else:\n            rest_count += 1\n            max_rest = max(max_rest, rest_count)\n    return max_rest\n\ndef test_solution():\n    assert solution(5, [1, 0, 1, 0, 1]) == 2\n    assert solution(6, [0, 1, 0, 1, 1, 0]) == 2\n    assert solution(7, [1, 0, 1, 1, 1, 0, 1]) == 3\n    assert solution(3, [0, 0, 0]) == 0\n\ntest_solution()", "\n\nn = int(input())\na = list(map(int, input().split()))\nif a[0] == 0:\n    ans = 0\nelse:\n    ans = 1\ncnt = 1\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        cnt += 1\n    else:\n        ans = max(ans, cnt)\n        cnt = 1\nans = max(ans, cnt)\nprint(ans)", "\n\nn = int(input())\nschedule = list(map(int,input().split()))\n\nmaximum = 0\ncurrent = 0\n\nfor i in schedule:\n    if i == 1:\n        current += 1\n    else:\n        current = 0\n    if current > maximum:\n        maximum = current\n\nprint(maximum)", "\nn = int(input())\na = input().split()\n\nfor i in range(n):\n    a[i] = int(a[i])\n\nmax_rest = 0\ncur_rest = 0\n\nfor i in range(n):\n    if a[i] == 1:\n        cur_rest += 1\n    else:\n        if cur_rest > max_rest:\n            max_rest = cur_rest\n        cur_rest = 0\n\nif cur_rest > max_rest:\n    max_rest = cur_rest\n\nprint(max_rest)", "\n\ndef getMaxRest(n, hours):\n\tmaxRest = 0\n\tcurRest = 0\n\tfor i in range(n):\n\t\tif hours[i] == 1:\n\t\t\tcurRest += 1\n\t\t\tif curRest > maxRest:\n\t\t\t\tmaxRest = curRest\n\t\telse:\n\t\t\tcurRest = 0\n\treturn maxRest\n\nn = int(input())\nhours = list(map(int, input().split()))\nprint(getMaxRest(n, hours))", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# A = [0, 1, 0, 1, 1, 0]\n# N = len(A)\n# dp = [0] * N\n\n# i = N - 2\n# while i >= 0:\n#     if A[i] == 1:\n#         dp[i] = dp[i + 1] + 1\n#     else:\n#         dp[i] = dp[i + 1]\n#     i -= 1\n#\n# # print(dp)\n#\n# a = 0\n# for i in range(N):\n#     if A[i] == 0:\n#         if dp[i] > a:\n#             a = dp[i]\n# print(a)\n\n# A = [0, 1, 0, 1, 1, 0]\n# N = len(A)\n#\n# a = 0\n# i = 0\n# while i < N:\n#     j = i + 1\n#     c = 1\n#     if A[i] == 0:\n#         while j < N and A[j] == 1:\n#             c += 1\n#             j += 1\n#         if c > a:\n#             a = c\n#         i = j\n#     else:\n#         i += 1\n# print(a)\n\nA = [0, 1, 0, 1, 1, 0]\nN = len(A)\n\na = 0\ni = 0\nwhile i < N:\n    if A[i] == 0:\n        j = i + 1\n        c = 1\n        while j < N and A[j] == 1:\n            c += 1\n            j += 1\n        if c > a:\n            a = c\n        i = j\n    else:\n        i += 1\nprint(a)"]