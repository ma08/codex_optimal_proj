["\n\n# Solved by 'modular arithmetic'\n#\n# Set:\n#\n#   dp[n] = the number of integer sequences A_1,A_2,\\ldots,A_n of length n\n#          satisfy all of the following conditions\n#   - 0 \\leq A_i \\leq 9\n#   - There exists some i such that A_i=0 holds.\n#   - There exists some i such that A_i=9 holds.\n#\n#   dp[n] = dp[n-1] * 10 - dp[n-2]\n#   dp[0] = 0\n#   dp[1] = 10\n#\n#  dp[2] = dp[1] * 10 - dp[0] = 10 * 10 - 0 = 100\n#  dp[3] = dp[2] * 10 - dp[1] = 100 * 10 - 10 = 990\n#  dp[4] = dp[3] * 10 - dp[2] = 990 * 10 - 100 = 9890\n#  ...\n#\n#  If we use mod 10^9 + 7, we can calculate dp[n] for n < 10^6 in about 1 second.\n#\n#  The answer is dp[n].\n#\n#  The source code of the solution is as follows:\n\ndef mod(n, m):\n    return n % m\n\ndef pow(a, n, m):\n    if n == 0:\n        return 1\n    elif n % 2 == 0:\n        return pow(a, n//2, m)**2 % m\n    else:\n        return a * pow(a, n-1, m) % m\n\ndef inv(a, m):\n    return pow(a, m-2, m)\n\ndef main():\n    n = int(input())\n    m = 10**9 + 7\n\n    dp = [0] * (n+1)\n    dp[0] = 0\n    dp[1] = 10\n    for i in range(2, n+1):\n        dp[i] = (dp[i-1] * 10 - dp[i-2]) % m\n    print(dp[n])\n\nif __name__ == '__main__':\n    main()", "\nN = int(input())\nans = (N-1)**2\nprint(ans % (10**9 + 7))", "\n\nN = int(input())\n\ndp = [0 for _ in range(N+1)]\ndp[0] = 0\ndp[1] = 10\n\nfor i in range(2, N+1):\n    dp[i] = (dp[i-1]*10-dp[i-2]) % 1000000007\n\nprint(dp[N])", "\n\n# N >= 2\n\nN = int(input())\n\n# A_i = 0 or 9\n# dp[i][j][k] := i\u6841\u76ee\u307e\u3067\u3067\u3001\u6700\u5f8c\u306e\u6570\u304cj\u3067\u3001i\u6841\u76ee\u304c0\u3067\u3042\u308b\u6570\u304ck\u500b\u3042\u308b\u5834\u5408\u306e\u6570\ndp = [[[0] * (N + 1) for _ in range(10)] for _ in range(N + 1)]\n\ndp[1][0][1] = 1\ndp[1][9][0] = 1\n\nfor i in range(2, N + 1):\n    for j in range(10):\n        for k in range(i + 1):\n            if j == 0:\n                dp[i][j][k + 1] += dp[i - 1][j][k]\n            elif j == 9:\n                dp[i][j][k] += dp[i - 1][j][k]\n            else:\n                dp[i][j][k + 1] += dp[i - 1][j][k]\n                dp[i][j][k] += dp[i - 1][j][k]\n\nans = 0\nfor j in range(10):\n    for k in range(N + 1):\n        ans += dp[N][j][k]\n\nprint(ans % (10 ** 9 + 7))", "\n\nimport sys\n\n\ndef solve(n):\n    # dp[i][j] = i\u6841\u76ee\u307e\u3067\u3067\u4e0a\u304b\u3089j\u6841\u306e\u6570\u5b57\u3092\u4f7f\u3063\u3066\u3044\u308b\u6642\u306e\u6570\n    # dp[0][0] = 1 \u304b\u3089\u59cb\u3081\u3066\u3001\u6700\u5f8c\u306b dp[n][n] \u3092\u8a08\u7b97\u3059\u308b\u3002\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(n):\n            for k in range(10):\n                dp[i + 1][j + 1 if k != 0 else j] += dp[i][j]\n                dp[i + 1][j + 1 if k != 9 else j] += dp[i][j]\n    return dp[n][n]\n\n\nif __name__ == \"__main__\":\n    n = int(input().strip())\n    print(solve(n))", "\n\nn = int(input())\n\n# dp[i][j][k] = i\u6841\u76ee\u307e\u3067\u898b\u3066\u3001j=0\u306e\u3068\u304d0\u304c\u3042\u308b\u3001j=1\u306e\u3068\u304d0\u304c\u306a\u3044\u3001k=0\u306e\u3068\u304d9\u304c\u3042\u308b\u3001k=1\u306e\u3068\u304d9\u304c\u306a\u3044\n# \u306e\u3068\u304d\u306e\u6570\ndp = [[[0, 0] for i in range(2)] for j in range(2)]\ndp[1][0][0] = 1\ndp[1][0][1] = 1\ndp[1][1][0] = 8\ndp[1][1][1] = 9\n\nfor i in range(2, n + 1):\n    dp[i][0][0] = dp[i - 1][0][0] + dp[i - 1][0][1]\n    dp[i][0][1] = dp[i - 1][1][0] + dp[i - 1][1][1]\n\n    dp[i][1][0] = (dp[i - 1][0][0] + dp[i - 1][0][1]) * 8 + dp[i - 1][1][0] * 9\n    dp[i][1][1] = (dp[i - 1][1][0] + dp[i - 1][1][1]) * 9\n\nprint((dp[n][0][0] + dp[n][0][1] + dp[n][1][0] + dp[n][1][1]) % (10 ** 9 + 7))", "\n\nN = int(input())\n\n# dp[i][j] := i\u6841\u76ee\u307e\u3067\u3067j(0 or 9)\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u6570\n# dp[i][0] = dp[i-1][0] + dp[i-1][1]\n# dp[i][1] = dp[i-1][0]\n# dp[i][1] = dp[i][0]\n# dp[i] = dp[i-1] + dp[i-1]\n\ndp = [[0]*2 for _ in range(N+1)]\ndp[1][0] = 1\ndp[1][1] = 1\n\nfor i in range(2,N+1):\n    dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % (10**9 + 7)\n    dp[i][1] = dp[i-1][0]\n\nprint(dp[N][0]%(10**9 + 7))", "\n\ndef main():\n    N = int(input())\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    dp[1] = 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 10\n    print(dp[N] - dp[N - 1] * 2)\n\nif __name__ == '__main__':\n    main()"]