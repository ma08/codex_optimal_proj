["", "\n\ndef main():\n    x = int(input())\n\n    #compound interest formula\n    #A = P (1 + r/n)^nt\n    #where P is principal amount, r is rate of interest, t is time and n is number of times the interest is compounded per unit t (in this case, per year)\n    #so we want to find t\n    #note that A is always rounded down to the nearest yen\n    #so, t = log_n(A/P) / log_n(1+r/n)\n    #in this case, since we're only concerned with the integer part, we can use floor division\n    t = math.log(x/100, 1.01)\n    print(math.floor(t))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nx = int(sys.argv[1])\n\nyear = 1\nwhile x > 100:\n    year += 1\n    x /= 1.01\n\nprint(year)", "\n\nX = int(input())\n\nyears = 0\nbalance = 100\nwhile balance < X:\n    balance = int(balance * 1.01)\n    years += 1\nprint(years)", "\n\nx = int(input())\n\ny = 100\nyear = 0\nwhile y < x:\n    y = y + y // 100\n    year = year + 1\n\nprint(year)", "\n\n\ndef main():\n    x = int(input())\n    money = 100\n    year = 0\n    while money < x:\n        money = money * 1.01\n        year += 1\n    print(year)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nx = int(input())\n\ny = 100\n\nyear = 0\nwhile(y < x):\n    y = int(y*1.01)\n    year += 1\n\nprint(year)", "\n\ndef main():\n\tx = int(input())\n\tbalance = 100\n\tyear = 1\n\twhile balance < x:\n\t\tbalance = balance + (balance * 0.01)\n\t\tyear += 1\n\tprint(year)\n\nif __name__ == \"__main__\":\n\tmain()"]