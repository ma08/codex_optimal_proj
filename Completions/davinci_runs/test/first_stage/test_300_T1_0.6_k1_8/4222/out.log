2022-04-16 20:23:28.109805 """
N Snukes called Snuke 1, Snuke 2, ..., Snuke N live in a town.
There are K kinds of snacks sold in this town, called Snack 1, Snack 2, ..., Snack K. The following d_i Snukes have Snack i: Snuke A_{i, 1}, A_{i, 2}, \cdots, A_{i, {d_i}}.
Takahashi will walk around this town and make mischief on the Snukes who have no snacks. How many Snukes will fall victim to Takahashi's mischief?

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 1 \leq K \leq 100
 - 1 \leq d_i \leq N
 - 1 \leq A_{i, 1} < \cdots < A_{i, d_i} \leq N

-----Input-----
Input is given from Standard Input in the following format:
N K
d_1
A_{1, 1} \cdots A_{1, d_1}
\vdots
d_K
A_{K, 1} \cdots A_{K, d_K}

-----Output-----
Print the answer.

-----Sample Input-----
3 2
2
1 3
1
3

-----Sample Output-----
1

 - Snuke 1 has Snack 1.
 - Snuke 2 has no snacks.
 - Snuke 3 has Snack 1 and 2.
Thus, there will be one victim: Snuke 2.
"""
2022-04-16 20:23:28.109849 --------------------------
2022-04-16 20:23:42.478959 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    snack_owner = [[] for i in range(K+1)]\n    for i in range(1, K+1):\n        d = int(input())\n        snack_owner[i] = list(map(int, input().split()))\n    victim = [True] * (N+1)\n    for i in range(1, K+1):\n        for owner in snack_owner[i]:\n            victim[owner] = False\n    print(victim.count(True) - 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\nA = [0 for i in range(N)]\nfor i in range(K):\n    d = int(input())\n    A_list = list(map(int, input().split()))\n    for j in range(d):\n        A[A_list[j] - 1] += 1\nprint(N - sum(A))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nsnuke = [0] * N\nfor _ in range(K):\n  d = int(input())\n  a = list(map(int, input().split()))\n  for i in a:\n    snuke[i-1] += 1\n\nprint(len([x for x in snuke if x == 0]))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nsnacks = [0] * n\n\nfor i in range(k):\n    d = int(sys.stdin.readline())\n    for j in map(int, sys.stdin.readline().split()):\n        snacks[j - 1] += 1\n\nvictim = 0\n\nfor i in range(n):\n    if snacks[i] == 0:\n        victim += 1\n\nprint(victim)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\n\nsnuke = [0 for _ in range(N)]\nfor _ in range(K):\n    d = int(sys.stdin.readline())\n    for i in map(int, sys.stdin.readline().split()):\n        snuke[i-1] += 1\n\nprint(sum([1 for s in snuke if s == 0]))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nsnukes = [0] * N\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snukes[j-1] += 1\n\nprint(sum([snukes[i] == 0 for i in range(N)]))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\nA = [set() for _ in range(N)]\nfor i in range(K):\n    d = int(input())\n    A_i = list(map(int, input().split()))\n    for a in A_i:\n        A[a-1].add(i+1)\n\nans = 0\nfor i in range(N):\n    if len(A[i]) == 0:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#-----main-----\n# set up\nn = int(input())\nk = int(input())\nhave = {}\nfor i in range(1, k+1):\n    have[i] = list(map(int, input().split()))\n\n# check\nvictim = 0\nfor i in range(1, n+1):\n    if i not in have[1]:\n        victim += 1\n    else:\n        for j in range(2, k+1):\n            if i not in have[j]:\n                victim += 1\n                break\n\n# print\nprint(victim)"
    }
  ],
  "created": 1650140608,
  "id": "cmpl-4xjF2NPP6tBySUgkNkydIqBMKu7pE",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:23:42.479272 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    snack_owner = [[] for i in range(K+1)]\n    for i in range(1, K+1):\n        d = int(input())\n        snack_owner[i] = list(map(int, input().split()))\n    victim = [True] * (N+1)\n    for i in range(1, K+1):\n        for owner in snack_owner[i]:\n            victim[owner] = False\n    print(victim.count(True) - 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:23:42.479324 REASON stop
2022-04-16 20:23:42.519083 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\nA = [0 for i in range(N)]\nfor i in range(K):\n    d = int(input())\n    A_list = list(map(int, input().split()))\n    for j in range(d):\n        A[A_list[j] - 1] += 1\nprint(N - sum(A))"
}
2022-04-16 20:23:42.519277 REASON stop
2022-04-16 20:23:42.519855 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nsnuke = [0] * N\nfor _ in range(K):\n  d = int(input())\n  a = list(map(int, input().split()))\n  for i in a:\n    snuke[i-1] += 1\n\nprint(len([x for x in snuke if x == 0]))"
}
2022-04-16 20:23:42.519921 REASON stop
2022-04-16 20:23:42.541319 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nsnacks = [0] * n\n\nfor i in range(k):\n    d = int(sys.stdin.readline())\n    for j in map(int, sys.stdin.readline().split()):\n        snacks[j - 1] += 1\n\nvictim = 0\n\nfor i in range(n):\n    if snacks[i] == 0:\n        victim += 1\n\nprint(victim)"
}
2022-04-16 20:23:42.541472 REASON stop
2022-04-16 20:23:42.542694 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\n\nsnuke = [0 for _ in range(N)]\nfor _ in range(K):\n    d = int(sys.stdin.readline())\n    for i in map(int, sys.stdin.readline().split()):\n        snuke[i-1] += 1\n\nprint(sum([1 for s in snuke if s == 0]))"
}
2022-04-16 20:23:42.542824 REASON stop
2022-04-16 20:23:42.550054 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nsnukes = [0] * N\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snukes[j-1] += 1\n\nprint(sum([snukes[i] == 0 for i in range(N)]))"
}
2022-04-16 20:23:42.550158 REASON stop
2022-04-16 20:23:42.551384 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\nA = [set() for _ in range(N)]\nfor i in range(K):\n    d = int(input())\n    A_i = list(map(int, input().split()))\n    for a in A_i:\n        A[a-1].add(i+1)\n\nans = 0\nfor i in range(N):\n    if len(A[i]) == 0:\n        ans += 1\nprint(ans)"
}
2022-04-16 20:23:42.551486 REASON stop
2022-04-16 20:23:42.552539 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#-----main-----\n# set up\nn = int(input())\nk = int(input())\nhave = {}\nfor i in range(1, k+1):\n    have[i] = list(map(int, input().split()))\n\n# check\nvictim = 0\nfor i in range(1, n+1):\n    if i not in have[1]:\n        victim += 1\n    else:\n        for j in range(2, k+1):\n            if i not in have[j]:\n                victim += 1\n                break\n\n# print\nprint(victim)"
}
2022-04-16 20:23:42.552668 REASON stop
