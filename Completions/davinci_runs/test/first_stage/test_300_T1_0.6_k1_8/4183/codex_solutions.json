["\n\nimport math\n\nn = int(input())\nt = [int(input()) for _ in range(n)]\nprint(math.gcd(t[0], t[1]))", "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\nans = 1\nfor i in range(N):\n    ans = lcm(ans, T[i])\n\nprint(ans)", "\n\n#%%\nimport math\n\ndef gcd(a, b):\n    if(a < b):\n        a, b = b, a\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\ndef lcm_n(arr):\n    result = arr[0]\n    for i in range(1, len(arr)):\n        result = lcm(result, arr[i])\n    return result\n\nn = int(input())\narr = []\nfor i in range(n):\n    arr.append(int(input()))\nprint(lcm_n(arr))", "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(a, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nn = int(raw_input())\nt = map(int, sys.stdin.readlines())\nprint reduce(lcm, t)", "\n\nimport math\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    ts = [int(input()) for _ in range(n)]\n\n    ans = ts[0]\n    for i in range(1, n):\n        ans = lcm(ans, ts[i])\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nn = int(input())\n\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\ndef gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = t[0]\nfor i in range(1, n):\n    ans = lcm(ans, t[i])\n\nprint(ans)", "\n\ndef gcd(a, b):\n\tif a < b:\n\t\ta, b = b, a\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef solve(args):\n\tN = args[0]\n\tT = args[1:]\n\tlcm = 1\n\tfor t in T:\n\t\tlcm = lcm * t // gcd(lcm, t)\n\treturn lcm\n\ndef main():\n\targs = list(map(int, input().split()))\n\tprint(solve(args))\n\nif __name__ == '__main__':\n\tmain()", "\n\nN = int(input())\nT = [int(input()) for _ in range(N)]\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\nans = T[0]\nfor i in range(1, N):\n    ans = lcm(ans, T[i])\n\nprint(ans)"]