["\n\nimport sys\n\ndef getMidPoint(time1, time2):\n    h1, m1 = map(int, time1.split(':'))\n    h2, m2 = map(int, time2.split(':'))\n    h = h2 - h1\n    m = m2 - m1\n    if m < 0:\n        h -= 1\n        m += 60\n    h += m // 2\n    m %= 2\n    if h < 0:\n        h += 24\n    if h < 10:\n        h = '0' + str(h)\n    else:\n        h = str(h)\n    if m < 10:\n        m = '0' + str(m)\n    else:\n        m = str(m)\n    return h + ':' + m\n\ndef main():\n    time1 = sys.stdin.readline().strip()\n    time2 = sys.stdin.readline().strip()\n    print(getMidPoint(time1, time2))\n\nif __name__ == '__main__':\n    main()", "\ndef time_length(h1,m1,h2,m2):\n    h=h2-h1\n    m=m2-m1\n    if m<0:\n        m+=60\n        h-=1\n    return h*60+m\n\ndef time_mid(h1,m1,h2,m2):\n    h=h1\n    m=m1\n    l=time_length(h1,m1,h2,m2)\n    l=l/2\n    while l>0:\n        m+=1\n        l-=1\n        if m==60:\n            h+=1\n            m=0\n    if m<10:\n        print(\"{}:0{}\".format(h,m))\n    else:\n        print(\"{}:{}\".format(h,m))\n\nh1,m1,h2,m2=map(int,raw_input().split(\":\"))\ntime_mid(h1,m1,h2,m2)", "\n\ndef time_midpoint(start_time, end_time):\n    # Use datetime to calculate midpoint\n    start_time = datetime.datetime.strptime(start_time, \"%H:%M\")\n    end_time = datetime.datetime.strptime(end_time, \"%H:%M\")\n\n    midpoint = start_time + (end_time - start_time) / 2\n    midpoint = midpoint.strftime(\"%H:%M\")\n    return midpoint\n\nstart_time, end_time = input(), input()\nprint(time_midpoint(start_time, end_time))", "\n# Solution submitted by Andrew Huang\nh1, m1 = list(map(int, input().split(':')))\nh2, m2 = list(map(int, input().split(':')))\n\n# minutes in the contest\nm = m2-m1\nif h2 < h1:\n    m += (h2+24-h1)*60\nelse:\n    m += (h2-h1)*60\n\n# midpoint\nmid_m = m // 2\nmid_h = h1 + (mid_m // 60)\nmid_m = m1 + (mid_m % 60)\nif mid_m >= 60:\n    mid_m -= 60\n    mid_h = (mid_h+1) % 24\n\nprint(str(mid_h).zfill(2) + \":\" + str(mid_m).zfill(2))", "\n\ndef main():\n    h1, m1 = map(int, input().split(':'))\n    h2, m2 = map(int, input().split(':'))\n\n    d = (h2 - h1) * 60 + (m2 - m1) // 2\n    h3 = (h1 * 60 + m1 + d) // 60\n    m3 = (h1 * 60 + m1 + d) % 60\n\n    print('{:02}:{:02}'.format(h3, m3))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n\th3 = (h1 + h2) // 2\n\tm3 = m1\nelse:\n\tm3 = (m1 + m2) // 2\n\th3 = (h1 + h2) // 2\n\tif m3 >= 60:\n\t\th3 += 1\n\t\tm3 = 0\n\nprint('{:02}:{:02}'.format(h3, m3))", "\nimport sys\n\ndef read_input(lines):\n    if isinstance(lines, list):\n        return lines\n    return sys.stdin.readlines()\n\ndef get_time_parts(time):\n    return time.split(':')\n\ndef get_time_in_minutes(time):\n    h, m = get_time_parts(time)\n    return int(h) * 60 + int(m)\n\ndef get_time_from_minutes(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return '%02d:%02d' % (h, m)\n\ndef get_mid_time(start, end):\n    start_minutes = get_time_in_minutes(start)\n    end_minutes = get_time_in_minutes(end)\n    mid_minutes = start_minutes + (end_minutes - start_minutes) // 2\n    return get_time_from_minutes(mid_minutes)\n\n\nif __name__ == '__main__':\n    lines = read_input('''10:00\n11:00'''.split('\\n'))\n    start = lines[0]\n    end = lines[1]\n    print(get_mid_time(start, end))", "\n\ndef main():\n    \"\"\"main function\"\"\"\n    h_1, m_1 = map(int, input().split(\":\"))\n    h_2, m_2 = map(int, input().split(\":\"))\n    total = (h_2 - h_1) * 60 + (m_2 - m_1)\n    half = total // 2\n    h_3 = (h_1 * 60 + m_1 + half) // 60\n    m_3 = (h_1 * 60 + m_1 + half) % 60\n    print(\"{:0>2}:{:0>2}\".format(h_3, m_3))\n\nif __name__ == \"__main__\":\n    main()"]