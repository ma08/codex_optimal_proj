2022-04-16 20:02:09.381976 """
Given an integer N, find the base -2 representation of N.
Here, S is the base -2 representation of N when the following are all satisfied:
 - S is a string consisting of 0 and 1.
 - Unless S = 0, the initial character of S is 1.
 - Let S = S_k S_{k-1} ... S_0, then S_0 \times (-2)^0 + S_1 \times (-2)^1 + ... + S_k \times (-2)^k = N.
It can be proved that, for any integer M, the base -2 representation of M is uniquely determined.

-----Constraints-----
 - Every value in input is integer.
 - -10^9 \leq N \leq 10^9

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
Print the base -2 representation of N.

-----Sample Input-----
-9

-----Sample Output-----
1011

As (-2)^0 + (-2)^1 + (-2)^3 = 1 + (-2) + (-8) = -9, 1011 is the base -2 representation of -9.
"""
2022-04-16 20:02:09.382000 --------------------------
2022-04-16 20:02:29.619440 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    ans = \"\"\n    while n != 0:\n        if n % 2 == 0:\n            ans += \"0\"\n        else:\n            n -= 1\n            ans += \"1\"\n        n //= -2\n    if ans == \"\":\n        ans = \"0\"\n    else:\n        ans = ans[::-1]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\nN = int(stdin.readline().rstrip())\n\nbinary = ''\nwhile N != 0:\n    quotient = N // -2\n    remainder = N % -2\n    if remainder < 0:\n        remainder += 2\n        quotient += 1\n    binary += str(remainder)\n    N = quotient\n\nprint(binary[::-1] if binary else '0')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\n\nans = \"\"\n\nwhile True:\n    if N == 0:\n        ans += \"0\"\n        break\n    elif N == 1:\n        ans += \"1\"\n        break\n    elif N == -1:\n        ans += \"1\"\n        break\n\n    if N%2 == 0:\n        ans += \"0\"\n        N = N//2\n    else:\n        ans += \"1\"\n        N = N//2\n        N += 1\n\nprint(ans[::-1])"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\nif N == 0:\n    print(0)\n    exit()\n\nans = ''\nwhile N != 0:\n    if N % 2 == 0:\n        ans = '0' + ans\n        N //= -2\n    else:\n        ans = '1' + ans\n        N = (N - 1) // -2\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\nans = \"\"\n\nif N == 0:\n    ans = \"0\"\nelse:\n    while N != 0:\n        if N % 2 == 0:\n            ans = \"0\" + ans\n            N = -(N // 2)\n        else:\n            ans = \"1\" + ans\n            N = (N - 1) // 2\n\nprint(ans)\n\n# \u53c2\u8003\uff1ahttps://qiita.com/drken/items/3b4fdf0a78e7a138cd9a"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef convert(val):\n    if val == 0:\n        return '0'\n    result = ''\n    while val != 0:\n        val, rem = divmod(val, -2)\n        if rem < 0:\n            val, rem = val + 1, rem + 2\n        result = str(rem) + result\n    return result\n\nif __name__ == '__main__':\n    val = int(sys.stdin.readline().rstrip())\n    print(convert(val))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    input_num = int(input())\n\n    if input_num == 0:\n        print(0)\n        return\n\n    base_minus_two = []\n    while input_num != 0:\n        base_minus_two.append(input_num % -2)\n        input_num = input_num // -2\n\n    base_minus_two.reverse()\n    print(''.join(map(str, base_minus_two)))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = []\n    while N != 0:\n        S.append(str(N % 2))\n        N = (N - N % 2) // -2\n    print(\"\".join(reversed(S)))\n\nif __name__ == '__main__':\n    main()\n\n\"\"\"\n# This is my original code.\n# It passed the test cases, but I think this code is not easy to understand.\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = []\n    while N != 0:\n        if N % 2 == 0:\n            S.append(\"0\")\n            N = N // -2\n        else:\n            S.append(\"1\")\n            if N > 0:\n                N = N // -2\n            else:\n                N = (N + 1) // -2\n    print(\"\".join(reversed(S)))\n\nif __name__ == '__main__':\n    main()\n\"\"\""
    }
  ],
  "created": 1650139329,
  "id": "cmpl-4xiuPr9aO5HOhUXp4HS227hy9YNDS",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:02:29.619719 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    ans = \"\"\n    while n != 0:\n        if n % 2 == 0:\n            ans += \"0\"\n        else:\n            n -= 1\n            ans += \"1\"\n        n //= -2\n    if ans == \"\":\n        ans = \"0\"\n    else:\n        ans = ans[::-1]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:02:29.619766 REASON stop
2022-04-16 20:02:29.640542 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\nN = int(stdin.readline().rstrip())\n\nbinary = ''\nwhile N != 0:\n    quotient = N // -2\n    remainder = N % -2\n    if remainder < 0:\n        remainder += 2\n        quotient += 1\n    binary += str(remainder)\n    N = quotient\n\nprint(binary[::-1] if binary else '0')"
}
2022-04-16 20:02:29.640720 REASON stop
2022-04-16 20:02:29.641259 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\nimport sys\n\nN = int(sys.stdin.readline())\n\nans = \"\"\n\nwhile True:\n    if N == 0:\n        ans += \"0\"\n        break\n    elif N == 1:\n        ans += \"1\"\n        break\n    elif N == -1:\n        ans += \"1\"\n        break\n\n    if N%2 == 0:\n        ans += \"0\"\n        N = N//2\n    else:\n        ans += \"1\"\n        N = N//2\n        N += 1\n\nprint(ans[::-1])"
}
2022-04-16 20:02:29.641325 REASON stop
2022-04-16 20:02:29.665770 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\nif N == 0:\n    print(0)\n    exit()\n\nans = ''\nwhile N != 0:\n    if N % 2 == 0:\n        ans = '0' + ans\n        N //= -2\n    else:\n        ans = '1' + ans\n        N = (N - 1) // -2\nprint(ans)"
}
2022-04-16 20:02:29.665870 REASON stop
2022-04-16 20:02:29.667100 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\nans = \"\"\n\nif N == 0:\n    ans = \"0\"\nelse:\n    while N != 0:\n        if N % 2 == 0:\n            ans = \"0\" + ans\n            N = -(N // 2)\n        else:\n            ans = \"1\" + ans\n            N = (N - 1) // 2\n\nprint(ans)\n\n# \u53c2\u8003\uff1ahttps://qiita.com/drken/items/3b4fdf0a78e7a138cd9a"
}
2022-04-16 20:02:29.667201 REASON stop
2022-04-16 20:02:29.668249 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef convert(val):\n    if val == 0:\n        return '0'\n    result = ''\n    while val != 0:\n        val, rem = divmod(val, -2)\n        if rem < 0:\n            val, rem = val + 1, rem + 2\n        result = str(rem) + result\n    return result\n\nif __name__ == '__main__':\n    val = int(sys.stdin.readline().rstrip())\n    print(convert(val))"
}
2022-04-16 20:02:29.668319 REASON stop
2022-04-16 20:02:29.669440 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    input_num = int(input())\n\n    if input_num == 0:\n        print(0)\n        return\n\n    base_minus_two = []\n    while input_num != 0:\n        base_minus_two.append(input_num % -2)\n        input_num = input_num // -2\n\n    base_minus_two.reverse()\n    print(''.join(map(str, base_minus_two)))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:02:29.669582 REASON stop
2022-04-16 20:02:29.670483 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = []\n    while N != 0:\n        S.append(str(N % 2))\n        N = (N - N % 2) // -2\n    print(\"\".join(reversed(S)))\n\nif __name__ == '__main__':\n    main()\n\n\"\"\"\n# This is my original code.\n# It passed the test cases, but I think this code is not easy to understand.\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = []\n    while N != 0:\n        if N % 2 == 0:\n            S.append(\"0\")\n            N = N // -2\n        else:\n            S.append(\"1\")\n            if N > 0:\n                N = N // -2\n            else:\n                N = (N + 1) // -2\n    print(\"\".join(reversed(S)))\n\nif __name__ == '__main__':\n    main()\n\"\"\""
}
2022-04-16 20:02:29.670551 REASON stop
