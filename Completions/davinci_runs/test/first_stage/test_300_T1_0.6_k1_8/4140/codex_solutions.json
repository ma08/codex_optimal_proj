["\n\ns = input()\n\n# If there are no 0s or no 1s, no tiles need to be repainted\nif (s.count('0') == 0) or (s.count('1') == 0):\n    print(0)\n\n# Otherwise, the number of tiles that need to be repainted is the minimum of the number of 0s and the number of 1s\nelse:\n    print(min(s.count('0'), s.count('1')))", "\n\nprint(input().count('01') + input().count('10'))", "\n\ns = input()\n\nans = 0\n\nfor i in range(1, len(s)):\n    if s[i] == s[i-1]:\n        ans += 1\n\nprint(ans)", "\n\nfrom collections import Counter\n\ndef main():\n    s = input()\n    counter = Counter(s)\n    print(min(counter.values()))\n\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    s = input()\n    result = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            result += 1\n    print(result)\n\n\nif __name__ == '__main__':\n    main()", "\n\ns = input()\n\nif s[0] == s[-1]:\n    print(len(s)-1)\nelse:\n    print(len(s))", "\n\nprint(len(input()) - input().count('01') - input().count('10'))", "\n\nimport sys\n\ndef main():\n    s = list(sys.stdin.readline().rstrip())\n    if s[0] == s[-1]:\n        print(1)\n    else:\n        print(0)\n\nif __name__ == '__main__':\n    main()"]