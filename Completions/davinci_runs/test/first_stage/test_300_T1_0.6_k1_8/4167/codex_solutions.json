["\n\nimport sys\n\ndef solve(n, k):\n    \"\"\"\n    n, k: positive integers\n    \"\"\"\n    # create an array of n+1\n    a = [0] * (n+1)\n    # create a dictionary to store the number of values\n    # that are multiples of k\n    d = {}\n    # loop through the array\n    for i in range(1, n+1):\n        # if i is a multiple of k\n        if i%k == 0:\n            # store the number of i that are multiples of k\n            d[i] = d.get(i, 0) + 1\n        # else if i is not a multiple of k\n        else:\n            # store the number of i that are multiples of k\n            d[i] = d.get(i, 0)\n        # count the number of values that are multiples of k\n        a[i] = d[i]\n    # initialize the triple counter\n    cnt = 0\n    # loop through the array\n    for i in range(1, n+1):\n        # loop through the array\n        for j in range(1, n+1):\n            # if i+j is a multiple of k\n            if (i+j)%k == 0:\n                # add the number of j that are multiples of k\n                # to the triple counter\n                cnt += a[j]\n    # return the triple counter\n    return cnt\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    print(solve(n, k))\n\nif __name__ == '__main__':\n    main()", "\n\n# get input\nN,K = map(int,input().split())\n\n# initialization\ncount = 0\n\n# count the number of triples\nfor a in range(1,N+1):\n    for b in range(a,N+1):\n        for c in range(b,N+1):\n            if (a+b)%K == 0 and (b+c)%K == 0 and (c+a)%K == 0:\n                count += 1\n\n# output\nprint(count)", "\n\nimport sys\n\n# input\nN, K = map(int, input().split())\n\n# initialization\ncount = 0\n\n# counting\nfor a in range(1, N + 1):\n    for b in range(1, N + 1):\n        for c in range(1, N + 1):\n            if (a + b) % K == 0 and (b + c) % K == 0 and (c + a) % K == 0:\n                count += 1\n\nprint(count)", "\n\nn, k = map(int, input().split())\n\nans = 0\nfor a in range(1, n+1):\n    for b in range(1, n+1):\n        for c in range(1, n+1):\n            if (a+b) % k == 0 and (b+c) % k == 0 and (c+a) % k == 0:\n                ans += 1\nprint(ans)", "\n\nn, k = map(int, input().split())\n\n# \u89e3\u7b54\u306f\u89e3\u8aacpdf\u3092\u53c2\u7167\na = n // k\nb = n // k\nc = n // k\n\n# a+b, b+c, c+a\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u306e\u500b\u6570\u3092\u8a08\u7b97\n# \u5404\u6570\u5b57\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3092\u8003\u3048\u308b\n# a,b,c\u304c\u5168\u3066K\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3082\u8003\u3048\u308b\nans = a * b * c\n\n# a+b\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3092\u8003\u3048\u308b\n# a\u304cK\u306e\u500d\u6570\u3067\u306a\u3044\u5834\u5408\u3092\u8003\u3048\u308b\n# \u3053\u306e\u6642\u3001b\u306fK\u306e\u500d\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\n# b\u306e\u6700\u5927\u5024\u3092N - K + 1\u3068\u3059\u308b\nans += a * (b - 1) * c\n\n# b+c\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3092\u8003\u3048\u308b\n# a+c\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3092\u8003\u3048\u308b\n# b,c\u306e\u500b\u6570\u306fa\u306e\u5834\u5408\u3068\u540c\u3058\u306a\u306e\u3067\u3001a\u306e\u5834\u5408\u306e\u8a08\u7b97\u7d50\u679c\u3092\u4f7f\u7528\u3059\u308b\nans += 2 * ans\n\n# a+b+c\u304cK\u306e\u500d\u6570\u3067\u3042\u308b\u5834\u5408\u3092\u8003\u3048\u308b\n# \u3053\u306e\u6642\u3001a,b,c\u306fK\u306e\u500d\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\n# \u3059\u3079\u3066\u306e\u5834\u5408\u3092\u8a08\u7b97\u3059\u308b\u3068\u91cd\u8907\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u91cd\u8907\u3057\u3066\u3044\u308b\u90e8\u5206\u3092\u9664\u5916\u3059\u308b\n# a=b=c\u306e\u5834\u5408\u3092\u8003\u3048\u308b\n# \u3053\u306e\u6642\u3001a\u306fK\u306e\u500d\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\nans += a * c\n\nprint(ans)", "\n\n\ndef solve(N, K):\n    count = 0\n    for i in range(K, N+1):\n        count += (i//K)**3\n    return count\n\n\ndef main():\n    N, K = map(int, input().split())\n    print(solve(N, K))\n\n\nif __name__ == '__main__':\n    main()"]