["\n\nK, X = map(int, input().split())\n\nprint(\" \".join([str(i) for i in range(X-K+1, X+K)]))", "\n\n\ndef main():\n    k, x = map(int, input().split())\n\n    for i in range(-k + 1, k):\n        print(x + i, end=' ')\n\n\nif __name__ == '__main__':\n    main()", "\n\nk, x = map(int, input().split())\n\nfor i in range(x - (k - 1), x + k):\n    print(i, end=' ')", "\n\ncount, coordinate = input().split(' ')\ncount = int(count)\ncoordinate = int(coordinate)\n\nprint(' '.join([str(i) for i in range(coordinate - count + 1, coordinate + count)]))", "\n\ndef main():\n    # read input\n    K, X = map(int, input().split())\n\n    # create range of potential stone positions\n    result = range(X-K+1, X+K)\n\n    # print result\n    print(*result)\n\nif __name__ == '__main__':\n    main()", "\n\n# S = (-1000000, 1000000)\n# K = 3\n# X = 7\n\nK, X = map(int, input().split())\nprint(*range(X - K + 1, X + K))", "\n\n# main\nK, X = map(int, input().split())\nprint(*range(X-K+1, X+K))", "\n\n# K and X\nK, X = map(int, input().split())\n\n# All possible cases\nfor i in range(X - (K - 1), X + (K - 1) + 1):\n  print(i, end=\" \")"]