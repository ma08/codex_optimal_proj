["\n\ndef main():\n    n = int(input())\n    f = list(map(int, input().split()))\n\n    # --- Construct mapping --- #\n    mapping = {}\n    for i in range(n):\n        if f[i] != 0:\n            mapping[i+1] = f[i]\n\n    # --- Fill in missing values --- #\n    for i in range(n):\n        if f[i] == 0:\n            if i+1 not in mapping.keys():\n                mapping[i+1] = i+1\n            else:\n                for j in range(n):\n                    if j+1 not in mapping.keys():\n                        mapping[i+1] = j+1\n                        break\n\n    # --- Print friends --- #\n    for i in range(n):\n        print(mapping[i+1], end=\" \")\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef solve(n, l):\n    l2 = [None for _ in range(n)]\n    for i in range(len(l)):\n        if l[i] != 0:\n            l2[l[i] - 1] = i + 1\n    for i in range(len(l)):\n        if l[i] == 0:\n            for j in range(len(l2)):\n                if l2[j] == None:\n                    l2[j] = i + 1\n                    break\n    return l2\n\nn = int(input())\nl = [int(x) for x in input().split()]\n\nprint(\" \".join(map(str, solve(n, l))))", "\n\n#WORKS\n\ndef match(l):\n    \"\"\"\n    >>> match([5, 0, 0, 2, 4])\n    [5, 3, 1, 2, 4]\n    >>> match([2, 1, 0, 0, 0])\n    [2, 1, 4, 5, 3]\n    \"\"\"\n    l = list(l)\n    for i in range(len(l)):\n        if not l[i]:\n            l[i] = [x for x in range(1,len(l)+1) if x not in l][0]\n    return l\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()", "\n\nn = int(input())\nf = list(map(int, input().split()))\n\ngifts = [i for i in range(1, n + 1) if i not in f]\n\nfor i in range(len(f)):\n    if f[i] == 0:\n        f[i] = gifts.pop()\n\nprint(*f)", "\n\n# SOLUTION\nn = int(input())\nf = list(map(int, input().split()))\n\nfor i in range(n):\n    if f[i] == 0:\n        for j in range(1, n+1):\n            if j not in f and i+1 != j:\n                f[i] = j\n                break\n        else:\n            print('IMPOSSIBLE')\n            exit()\n\nprint(*f)", "\n\nimport sys\n# sys.stdin = open('in.txt', 'r')\n# sys.stdout = open('out.txt', 'w')\n\nn = int(input())\ngifts = list(map(int, input().split()))\n\nfor i in range(n):\n    if gifts[i] == 0:\n        gifts[i] = i + 1\n\nfor i in range(n):\n    if gifts[i] == 0:\n        gifts[i] = 1\n        while gifts[gifts[i] - 1] != 0:\n            gifts[i] += 1\n        gifts[gifts[i] - 1] = i + 1\n\nprint(*gifts)", "\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    f = list(map(int, input().split()))\n\n    # Count the number of friends who already know who they are giving presents to.\n    p = 0\n    for i in f:\n        if i != 0:\n            p += 1\n\n    # Set up a list of the remaining friends.\n    r = [i for i in range(1, n + 1) if i not in f]\n\n    # Fill in the remaining friend numbers.\n    for i in range(n):\n        if f[i] == 0:\n            f[i] = r[p]\n            p += 1\n\n    # Print the result.\n    print(*f)\n\n\nif __name__ == \"__main__\":\n    main()"]