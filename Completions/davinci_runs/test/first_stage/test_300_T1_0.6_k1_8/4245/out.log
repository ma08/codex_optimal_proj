2022-04-16 20:29:51.167427 """
Takahashi's house has only one socket.
Takahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.
One power strip with A sockets can extend one empty socket into A empty sockets.
Find the minimum number of power strips required.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq A \leq 20
 - 1 \leq B \leq 20

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the minimum number of power strips required.

-----Sample Input-----
4 10

-----Sample Output-----
3

3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.
"""
2022-04-16 20:29:51.167451 --------------------------
2022-04-16 20:30:03.746218 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    nums = sys.stdin.readline().split()\n    A = int(nums[0])\n    B = int(nums[1])\n    num_extensions = 0\n    empty_sockets = 1\n    while empty_sockets < B:\n        num_extensions += 1\n        empty_sockets += A - 1\n    print(num_extensions)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    A, B = map(int, line.split())\n    cnt = 0\n    while B > 0:\n        if B >= A:\n            cnt += 1\n            B -= A\n        else:\n            A = B\n            cnt += 1\n            B -= A\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    a,b = map(int,input().split())\n    print(math.ceil(b/a))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(A, B):\n    ans = 0\n    while B-A > 0:\n        ans += 1\n        B -= A\n    return ans+1\n\ndef main():\n    line = sys.stdin.readline()\n    A, B = map(int, line.strip().split())\n    print(solve(A, B))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\na, b = [int(n) for n in input().split()]\nprint((b - 1) // a + 1)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nfrom math import ceil\n\nA, B = map(int, input().split())\n\nprint(ceil(B/A))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nsocket, num = map(int, input().split())\nprint(-(-num // socket))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\na, b = list(map(int, input().split()))\n\nif b % a == 0:\n    print(b // a)\nelse:\n    print((b // a) + 1)"
    }
  ],
  "created": 1650140991,
  "id": "cmpl-4xjLDp562UchrtHuZDdSyymDfsSD7",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:30:03.746507 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    nums = sys.stdin.readline().split()\n    A = int(nums[0])\n    B = int(nums[1])\n    num_extensions = 0\n    empty_sockets = 1\n    while empty_sockets < B:\n        num_extensions += 1\n        empty_sockets += A - 1\n    print(num_extensions)\n\nmain()"
}
2022-04-16 20:30:03.746542 REASON stop
2022-04-16 20:30:03.780358 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    A, B = map(int, line.split())\n    cnt = 0\n    while B > 0:\n        if B >= A:\n            cnt += 1\n            B -= A\n        else:\n            A = B\n            cnt += 1\n            B -= A\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:30:03.780531 REASON stop
2022-04-16 20:30:03.780987 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    a,b = map(int,input().split())\n    print(math.ceil(b/a))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:30:03.781073 REASON stop
2022-04-16 20:30:03.797941 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(A, B):\n    ans = 0\n    while B-A > 0:\n        ans += 1\n        B -= A\n    return ans+1\n\ndef main():\n    line = sys.stdin.readline()\n    A, B = map(int, line.strip().split())\n    print(solve(A, B))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:30:03.798052 REASON stop
2022-04-16 20:30:03.798957 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\na, b = [int(n) for n in input().split()]\nprint((b - 1) // a + 1)"
}
2022-04-16 20:30:03.799038 REASON stop
2022-04-16 20:30:03.813745 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nfrom math import ceil\n\nA, B = map(int, input().split())\n\nprint(ceil(B/A))"
}
2022-04-16 20:30:03.813848 REASON stop
2022-04-16 20:30:03.814640 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nsocket, num = map(int, input().split())\nprint(-(-num // socket))"
}
2022-04-16 20:30:03.814722 REASON stop
2022-04-16 20:30:03.815490 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\na, b = list(map(int, input().split()))\n\nif b % a == 0:\n    print(b // a)\nelse:\n    print((b // a) + 1)"
}
2022-04-16 20:30:03.815554 REASON stop
