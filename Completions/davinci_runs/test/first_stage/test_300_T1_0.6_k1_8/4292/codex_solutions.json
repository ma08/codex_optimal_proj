["\n\ninput = input().split(\" \")\nn, k = int(input[0]), int(input[1])\n\ninput = input().split(\" \")\nprices = [int(x) for x in input]\n\nprices.sort()\n\nprint(sum(prices[0:k]))", "\n\ndef main():\n\t# Input\n\tn, k = map(int, raw_input().split())\n\tp_list = map(int, raw_input().split())\n\n\t# Sort and choose k smallest values\n\tp_list.sort()\n\ttotal = sum(p_list[0:k])\n\n\t# Output\n\tprint total\n\nif __name__ == '__main__':\n\tmain()", "\n\nN, K = map(int, input().split())\nP = sorted(map(int, input().split()))\nprint(sum(P[:K]))", "\n\nimport sys\n\n# First line of input\nN, K = map(int, input().split(' '))\n\n# Second line of input\nprices = list(map(int, input().split(' ')))\n\n# Sort prices in ascending order\nprices.sort()\n\n# First K prices is the minimum total price\nprint(sum(prices[:K]))", "\n\n# ---- Input Section ----\n# N: The number of kinds of fruits\n# K: The number of kinds of fruits to buy\nn, k = map(int, input().split())\n\n# prices: A list of the price of each fruit\nprices = list(map(int, input().split()))\n\n# ---- Processing Section ----\n# Sort the prices in ascending order\nprices = sorted(prices)\n\n# ---- Output Section ----\n# Print the minimum possible total price of those fruits\nprint(sum(prices[0:k]))", "\n\nn, k = map(int, input().split())\nprices = [int(input()) for _ in range(n)]\n\nprint(sum(sorted(prices)[:k]))", "\n\nN, K = [int(x) for x in input().split(' ')]\nprices = [int(x) for x in input().split(' ')]\nprices.sort()\n\nprint(sum(prices[:K]))", "\n\ndef main():\n    # Get input\n    N, K = map(int, input().split())\n    prices = list(map(int, input().split()))\n\n    # Sort prices\n    prices = sorted(prices)\n\n    # Calculate minimum price\n    min_price = prices[0]\n    for i in range(K - 1):\n        min_price += prices[i + 1]\n\n    # Print result\n    print(min_price)\n\nif __name__ == '__main__':\n    main()"]