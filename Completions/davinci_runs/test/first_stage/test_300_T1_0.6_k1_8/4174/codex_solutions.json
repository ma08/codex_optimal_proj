["\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncnt = 0\ns = 0\nfor i in range(n):\n    s += l[i]\n    if s <= x:\n        cnt += 1\nprint(cnt+1)", "\n\n\ndef main():\n    # read input from standard input\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    # print the number of times the ball will bounce where the coordinate is at most x\n    print(len(list(filter(lambda d: d <= x, accumulate([0] + l)))))\n\n\nif __name__ == '__main__':\n    main()", "\n\nn = input().split()\nn = list(map(int, n))\n\nl = input().split()\nl = list(map(int, l))\n\nl.insert(0, 0)\n\ncount = 0\nfor i in range(n[0]):\n    if l[i] <= n[1]:\n        count += 1\nprint(count)", "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nans = 1\npos = 0\n\nwhile ans <= N and pos <= X:\n    pos += L[ans-1]\n    ans += 1\n\nprint(ans - 1)", "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 0\n\n# \u521d\u671f\u5730\u70b9\npos = 0\n\nfor i in range(N):\n    # \u98db\u3093\u3067\u3044\u304f\u8ddd\u96e2\n    pos += L[i]\n    if pos <= X:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)", "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = 0\nball = 0\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        ball += 1\n\nprint(ball)", "\n\nimport sys\n\n#f = open('input.txt', 'r')\n\nn, x = map(int, sys.stdin.readline().split())\nl = map(int, sys.stdin.readline().split())\n\ncoord = [0]\nfor i in range(n):\n    coord.append(coord[i] + l[i])\n\nprint len(filter(lambda d: d <= x, coord))", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, X = map(int, input().split())\n    L = list(map(int, input().split()))\n    pos = 0\n    ans = 0\n\n    for i in range(N):\n        pos += L[i]\n        if pos <= X:\n            ans += 1\n        else:\n            break\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"]