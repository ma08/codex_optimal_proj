2022-04-16 20:04:46.512312 """
A ball will bounce along a number line, making N + 1 bounces. It will make the first bounce at coordinate D_1 = 0, and the i-th bounce (2 \leq i \leq N+1) at coordinate D_i = D_{i-1} + L_{i-1}.
How many times will the ball make a bounce where the coordinate is at most X?

-----Constraints-----
 - 1 \leq N \leq 100
 - 1 \leq L_i \leq 100
 - 1 \leq X \leq 10000
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N X
L_1 L_2 ... L_{N-1} L_N

-----Output-----
Print the number of times the ball will make a bounce where the coordinate is at most X.

-----Sample Input-----
3 6
3 4 5

-----Sample Output-----
2

The ball will make a bounce at the coordinates 0, 3, 7 and 12, among which two are less than or equal to 6.
"""
2022-04-16 20:04:46.512343 --------------------------
2022-04-16 20:04:59.844486 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = 0\nball = 0\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        ball += 1\n\nprint(ball)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\n#f = open('input.txt', 'r')\n\nn, x = map(int, sys.stdin.readline().split())\nl = map(int, sys.stdin.readline().split())\n\ncoord = [0]\nfor i in range(n):\n    coord.append(coord[i] + l[i])\n\nprint len(filter(lambda d: d <= x, coord))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncnt = 0\ns = 0\nfor i in range(n):\n    s += l[i]\n    if s <= x:\n        cnt += 1\nprint(cnt+1)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nans = 1\npos = 0\n\nwhile ans <= N and pos <= X:\n    pos += L[ans-1]\n    ans += 1\n\nprint(ans - 1)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, X = map(int, input().split())\n    L = list(map(int, input().split()))\n    pos = 0\n    ans = 0\n\n    for i in range(N):\n        pos += L[i]\n        if pos <= X:\n            ans += 1\n        else:\n            break\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    # read input from standard input\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    # print the number of times the ball will bounce where the coordinate is at most x\n    print(len(list(filter(lambda d: d <= x, accumulate([0] + l)))))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 0\n\n# \u521d\u671f\u5730\u70b9\npos = 0\n\nfor i in range(N):\n    # \u98db\u3093\u3067\u3044\u304f\u8ddd\u96e2\n    pos += L[i]\n    if pos <= X:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = input().split()\nn = list(map(int, n))\n\nl = input().split()\nl = list(map(int, l))\n\nl.insert(0, 0)\n\ncount = 0\nfor i in range(n[0]):\n    if l[i] <= n[1]:\n        count += 1\nprint(count)"
    }
  ],
  "created": 1650139486,
  "id": "cmpl-4xiwwi4l62YdlCQGyhu0YbCtMEKOe",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:04:59.844759 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = 0\nball = 0\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        ball += 1\n\nprint(ball)"
}
2022-04-16 20:04:59.844791 REASON stop
2022-04-16 20:04:59.861207 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\n#f = open('input.txt', 'r')\n\nn, x = map(int, sys.stdin.readline().split())\nl = map(int, sys.stdin.readline().split())\n\ncoord = [0]\nfor i in range(n):\n    coord.append(coord[i] + l[i])\n\nprint len(filter(lambda d: d <= x, coord))"
}
2022-04-16 20:04:59.861376 REASON stop
2022-04-16 20:04:59.861835 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncnt = 0\ns = 0\nfor i in range(n):\n    s += l[i]\n    if s <= x:\n        cnt += 1\nprint(cnt+1)"
}
2022-04-16 20:04:59.861899 REASON stop
2022-04-16 20:04:59.887522 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nans = 1\npos = 0\n\nwhile ans <= N and pos <= X:\n    pos += L[ans-1]\n    ans += 1\n\nprint(ans - 1)"
}
2022-04-16 20:04:59.887625 REASON stop
2022-04-16 20:04:59.888614 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, X = map(int, input().split())\n    L = list(map(int, input().split()))\n    pos = 0\n    ans = 0\n\n    for i in range(N):\n        pos += L[i]\n        if pos <= X:\n            ans += 1\n        else:\n            break\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:04:59.888710 REASON stop
2022-04-16 20:04:59.889471 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    # read input from standard input\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    # print the number of times the ball will bounce where the coordinate is at most x\n    print(len(list(filter(lambda d: d <= x, accumulate([0] + l)))))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:04:59.889543 REASON stop
2022-04-16 20:04:59.890660 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 0\n\n# \u521d\u671f\u5730\u70b9\npos = 0\n\nfor i in range(N):\n    # \u98db\u3093\u3067\u3044\u304f\u8ddd\u96e2\n    pos += L[i]\n    if pos <= X:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)"
}
2022-04-16 20:04:59.890739 REASON stop
2022-04-16 20:04:59.891609 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = input().split()\nn = list(map(int, n))\n\nl = input().split()\nl = list(map(int, l))\n\nl.insert(0, 0)\n\ncount = 0\nfor i in range(n[0]):\n    if l[i] <= n[1]:\n        count += 1\nprint(count)"
}
2022-04-16 20:04:59.891696 REASON stop
