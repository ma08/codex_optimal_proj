["import collections\nn = int(input())\nwords = [input() for _ in range(n)]\nok = True\nfor i in range(n-1):\n    if words[i][-1] != words[i+1][0]:\n        ok = False\ncount = collections.Counter(words)\nfor i in count.values():\n    if i != 1:\n        ok = False\nprint(\"Yes\" if ok else \"No\")", "import sys\nn=int(input())\nw=[]\nfor i in range(n):\n  w.append(input())\n\nif len(w)!=len(set(w)):\n  print('No')\n  return\n\nfor i in range(n-1):\n  p=list(w[i])\n  q=list(w[i+1])\n  if p[-1]!=q[0]:\n    print('No')\n    return\n  \nprint('Yes')", "N = int (input ())\nl = []\nS = 'Yes'\nA = input ()\nW = A[-1]\nl.append (A)\nfor i in range (N-1):\n  A = input ()\n  if A[0] != W or l.count(A) != 0:\n    S = 'No'\n    break\n  l.append (A)\n  W = A[-1]\nprint (S)", "n=int(input())\nw = [(input()) for _ in range(n)]\nl = set(w)\nif len(w) != len(l):\n        print('No')\n        return\nfor i in range(n-1):\n        if w[i][len(w[i])-1] != w[i+1][0]:\n                print('No')\n                return\nprint('Yes')", "n = int(input())\ns = set()\n\nok = True\nt = input()\np = t[-1]\ns.add(t)\nfor i in range(n-1):\n    t = input()\n    if t in s:\n        ok = False\n    s.add(t)\n    if t[0] != p:\n        ok = False\n    p = t[-1]\n\nprint(('Yes' if ok else 'No'))\n", "import os\nimport sys\nfrom collections import defaultdict, Counter, deque\nfrom itertools import product, permutations,combinations, accumulate\nfrom operator import itemgetter\nfrom bisect import bisect_left,bisect\nfrom heapq import heappop,heappush,heapify\nfrom math import ceil, floor, sqrt\nfrom copy import deepcopy\n\n\ndef main():\n    n = int(input())\n    vectoer = []\n    flag = True\n    for i in range(n):\n        s = input()\n        vectoer.append(s)\n\n    if len(vectoer) != len(set(vectoer)):\n        flag = False\n        \n    for i in range(n-1):\n        if vectoer[i][-1] !=  vectoer[i+1][0]:\n            flag = False\n            break\n\n    if flag:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    \n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "n = int(input())\nW = [input() for i in range(n)]\nword = W[0]\nwords = [word]\nfor i in range(1,n):\n  if W[i] in words or word[-1] != W[i][0]:\n    print(\"No\")\n    break\n  word = W[i]\n  words.append(word)\nelse:\n  print(\"Yes\")", "n=int(input())\n\nw_list=[input()]\n\n\nans=\"Yes\"\n\nfor i in range(n-1):\n    w=input()\n    if w not in w_list and w_list[-1][-1]==w[0]:\n        w_list.append(w)\n    else:\n        ans=\"No\"\n        break\n\nprint(ans)", "n = int(input())\nw = [input() for _ in range(n)]\n# \u540c\u3058\u6587\u5b57\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\nif len(set(w)) != n:\n    print('No')\n    return\n# \u672b\u5c3e\u3068\u5148\u982d\u306e\u6587\u5b57\u304c\u540c\u3058\uff08\u3057\u308a\u3068\u308a\uff09\nfor i in range(1,n):\n    if w[i-1][-1] != w[i][0]:\n        print('No')\n        return\nprint('Yes')\n", "n = int(input())\na = []\nfor i in range(n):\n  a.append(input())\n  if i > 0 and (a[i - 1][-1] != a[i][0] or a.count(a[i]) == 2):\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "n = int(input())\nw = [input() for i in range(n)]\nflag = False\nif len(w) == len(set(w)):\n  if all(w[i-1][-1] == w[i][0] for i in range(1, n)):\n    flag = True\nprint(\"Yes\" if flag else \"No\")", "n = int(input())\n\narr = []\nans = 'Yes'\nfor _ in range(n):\n    w = input()\n    if w in arr:\n        ans = 'No'\n\n    if len(arr) >= 1:\n        if w[0] != arr[-1][-1]:\n            ans = 'No'\n\n    arr.append(w)\n\nprint(ans)", "n = int(input())\nw = [input()]\nfor i in range(n-1):\n  s = input()\n  if s in w or w[i][-1] != s[0]:\n    print(\"No\")\n    return\n  w.append(s)\nprint(\"Yes\")", "import collections\nN = int(input())\nW = []\nf = input()\nW.append(f)\nans = \"Yes\"\nfor _ in range(N-1):\n    w = input()\n    if f[-1] != w[0]:\n        ans = \"No\"\n    W.append(w)\n    f = w\n    \ncnt = collections.Counter(W)\nfor v in cnt.values():\n    if v >= 2:\n        ans = \"No\"\n        \nprint(ans)", "import math\nimport itertools\nimport sys\n\nn=int(input())\nlast=input()\nlog=[]\nlog.append(last)\nq=[]\nans=\"Yes\"\nfor i in range(n-1):\n    tmp=input()\n    q.append(tmp)\nfor i in q:\n    if(i[0]!=last[-1] or i in log):\n        ans=\"No\"\n        break\n    else:\n        last=i\n        log.append(i)\nprint(ans)\n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    words=[]\n    n = int(input())\n    words=[input().rstrip() for _ in range(n)]\n\n    if len(set(words))!=n:\n        print(\"No\")\n        return\n\n    endstring=\"\"\n    for word in words:\n        if len(endstring)==0:\n            endstring=word[-1]\n        else:\n            if endstring==word[0]:\n                endstring=word[-1]\n            else:\n                print(\"No\")\n                return\n    print(\"Yes\")\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nW = []\nfor i in range(N):\n  W.append(str(input()))\n\nflag = True\nfor i in range(1, N):\n\tif W[i-1][-1] != W[i][0]:\n\t\tprint('No')\n\t\treturn\n\tfor j in range(i-1):\n\t\tif W[j] == W[i]:\n\t\t\tprint('No')\n\t\t\treturn\n\nprint('Yes')", "n = int(input())\nl = []\nw = [0]*n\nfor i in range(n):\n\tw[i] = input()\n\tif w[i] in l:\n\t\tprint('No')\n\t\treturn\n\tl.append(w[i])\n\tif (i >= 1 and w[i-1][-1] == w[i][0]) or i == 0:\n\t\tcontinue\n\telse:\n\t\tprint('No')\n\t\treturn\nprint('Yes')", "N = int(input())\nli = []\nflag = True\nfor i in range(N):\n    word = input()\n    if i != 0:\n        if pre_word[len(pre_word)-1] != word[0] or word in li:\n            flag = False\n            break\n    li.append(word)\n    pre_word = word\nif flag:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nl = [str(input())]\nfor i in range(N-1):\n  w = str(input())\n  if w in l:\n    print('No')\n    return\n  elif l[-1][-1] != w[0]:\n    print('No')\n    return\n  else:\n    l.append(w)\nprint('Yes')", "N = int(input())\ns = set()\nt = input()\ns.add(t)\nans = True\nfor i in range(N-1):\n  q = input()\n  if t[-1] != q[0] or q in s:\n    ans = False\n  s.add(q)\n  t = q\nprint(\"Yes\") if ans else print(\"No\")", "N=int(input())\nW=list(input() for i in range(N))\n\nfor i in range(N-1):\n\tif W.count(W[i]) == 2:\n\t\tprint(\"No\")\n\t\tbreak\n\tif W[i][-1] != W[i+1][0]:\n\t\tprint(\"No\")\n\t\tbreak\nelse:\n\tprint(\"Yes\")", "N = int(input())\nW = [input() for _ in range(N)]\nused = []\n\nfirst = W[0]\nused.append(first)\n\nfor index in range(1, len(W)):\n    if W[index][0] == W[index-1][-1] and W[index] not in used:\n        used.append(W[index])\n    else:\n        print(\"No\")\n        return\nprint(\"Yes\")\n", "N = int(input())\nW = [input() for i in range(N)]\n\nans = 'Yes'\nlast = ''\n\nfor i in range(N):\n    for j in range(i):\n        if W[i]==W[j]:\n            ans = 'No'\n            \nfor w in W:\n    W_new = [i for i in w]\n    if w!=W[0] and last!=W_new[0]:\n        ans = 'No'\n    last = W_new[-1]\n\nprint(ans)", "N = int(input())\nl = []\nl.append(input())\nans = 'Yes'\n\nfor i in range(1, N):\n  t = input()\n  if t in l:\n    ans = 'No'\n    break\n  elif l[i-1][-1] ==  t[0]:\n    l.append(t)\n  else:\n    ans = 'No'\n    break\nprint(ans)", "def main():\n    n = int(input())\n    data = [input() for _ in range(n)]\n\n    ok = True\n    if len(set(data)) != n: ok = False\n    for i in range(n-1):\n        if data[i][-1] != data[i+1][0]:\n            ok = False\n\n    print(\"Yes\" if ok else \"No\")\n\nmain()", "n=int(input())\na=[]\nc=0\nfor _ in range(n):\n    w=input()\n    a.append(w)\n\nfor i in range(1,n):\n    if a[i-1][-1]!=a[i][0]:\n        print('No')\n        return\nif n != len(set(a)):\n    print('No')\n    return\nprint('Yes')", "n=int(input())\nw=[input() for i in range(n)]\nif len(w) != len(set(w)):\n  print(\"No\")\n  return\nfor i in range(n -1):\n  if w[i][-1] != w[i+1][0]:\n    print(\"No\")\n    return\nprint(\"Yes\")", "N = int(input())\n\nW_list = []\ncheck = True\n\nfor i in range(N):\n  W = input()\n  if i == 0:\n    W_list.append(W)\n    continue\n    \n  if W in W_list:\n    check = False\n    break\n    \n  if W_list[i-1][-1] != W[0]:\n    check = False\n    break\n    \n  W_list.append(W)\n    \nprint((\"Yes\" if check else \"No\"))\n", "n=int(input())\nw=str(input())\na=[]\na.append(w)\nfor i in range(1,n):\n  x=w[len(w)-1]\n  w=str(input())\n  if x!=w[0] or w in a:\n    print(\"No\")\n    return\n  a.append(w)\n\nprint(\"Yes\")", "N = int(input())\nL = []\nfor _ in range(N):\n  W = str(input())\n  if W in L:\n    print('No')\n    return\n  L.append(W)\nfor i in range(N - 1):\n  if L[i][len(L[i]) - 1] != L[i+1][0]:\n    print('No')\n    return\nprint('Yes')\n", "n = int(input())\na = [input() for _ in range(n)]\ncnt = 0\naset = set()\naset.add(a[0])\nfor i in range(1,n):\n    if a[i][0]==a[i-1][-1] and a[i] not in aset:\n        aset.add(a[i])\n        cnt += 1\nprint(\"Yes\" if cnt==n-1 else \"No\")", "from typing import List\n\n\ndef answer(n: int, w: List[str]) -> str:\n    if len(set(w)) != len(w):\n        return 'No'\n\n    for i in range(1, len(w)):\n        if not w[i].startswith(w[i - 1][-1]):\n            return 'No'\n\n    return 'Yes'\n\n\ndef main():\n    n = int(input())\n    w = [input() for _ in range(n)]\n    print((answer(n, w)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ntmp1=input()\ntmp=tmp1[len(tmp1)-1]\n\ns = set()\ns.add(tmp1)\n\nflg=True\nfor i in range(n-1):\n    w = input()\n    if w[0] != tmp:\n        flg = False\n        break\n    tmp = w[len(w)-1]\n\n    s.add(w)\n    if(len(s) != i+2):\n        flg = False\n        break\n\nif flg:\n    print('Yes')\nelse:\n    print('No')", "N=int(input())\nW=[input() for _ in range(N)]\nif len(set(W))==N:\n    for i in range(N-1):\n        if W[i][-1]!=W[i+1][0]:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")\nelse:\n    print(\"No\")\n", "n = int(input())\nw = [input() for i in range(n)]\nbool = True\nfor i in range(1,n):\n    if w[i][0] != w[i-1][len(w[i-1]) - 1]:\n        bool = False\n    for j in range(0,i):\n        if w[i] == w[j]:\n            bool = False\nif bool:\n    print('Yes')\nelse:\n    print('No')", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    W = [input().strip() for _ in range(N)]\n\n    s = set()\n    prev = \"\"\n    for w in W:\n        if w in s:\n            print(\"No\")\n            return\n        if prev == \"\":\n            prev = w[-1]\n        else:\n            if prev == w[0]:\n                prev = w[-1]\n            else:\n                print(\"No\")\n                return\n        s.add(w)\n\n    print(\"Yes\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ns = []\n\nfor i in range(int(input())):\n    W = input()\n    if W in s:\n        print(\"No\")\n        return\n    if len(s) != 0 and s[-1][-1] != W[0]:\n        print(\"No\")\n        return\n    s.append(W)\nprint(\"Yes\")", "n = int(input())\n\nw_list = []\nans = 'Yes'\nfor _ in range(n):\n    w = input()\n    w_list.append(w)\n\nif len(w_list) != len(set(w_list)):\n    ans = 'No'\n\nfor i in range(n - 1):\n    if (w_list[i][-1]) != (w_list[i + 1][0]):\n        ans = 'No'\n        break\n\nprint(ans)\n", "n = int(input())\nw = [input() for _ in range(n)]\n\nwords = set()\nok = True\nfor i in range(n):\n    if w[i] in words:\n        ok = False\n        break\n    elif i != 0 and w[i-1][-1] != w[i][0]:\n        ok = False\n        break\n    words.add(w[i])\nprint(('Yes' if ok else 'No'))\n", "def check_shiritori(n:int, w:list)->bool:\n    if len(set(w)) < n:\n        return False\n    for i in range(n - 1):\n        if w[i][-1] != w[i + 1][0]:\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    w = []\n    for i in range(n):\n        w.append(input())\n\n    if check_shiritori(n, w):\n        print('Yes')\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nW = [input() for _ in range(N)]\n\nd = dict()\nlast = W[0][0]\n\ngood = True\nfor w in W:\n    if d.get(w) != None:\n        good = False\n        break\n    elif w[0] != last:\n        good = False\n        break\n    else:\n        d[w] = 1\n        last = w[-1]\n\nif good:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n        \n", "n = int(input())\nw = [list(input()) for _ in range(n)]\n\nfor i in range(n):\n    for j in range(n-i-1):\n        if w[i] == w[-j-1]:\n            print('No')\n            return\n\nfor i in range(n):\n    if i < n-1:\n        if w[i][-1] != w[i+1][0]:\n            print('No')\n            return\n\nprint('Yes')", "n = int(input())\nw = []\nans = 'Yes'\n\nfor i in range(n):\n    w.append(input())\n\nif len(set(w)) < len(w):\n    ans = 'No'\n\nfor i in range(1, n):\n    if w[i][0] != w[i - 1][-1]:\n        ans = 'No'\n\nprint(ans)", "n = int(input())\nw = [input() for _ in range(n)]\nif len(set(w)) != n:\n    print('No')\n    return\nfor i in range(1,n):\n    if w[i-1][-1] != w[i][0]:\n        print('No')\n        return\nprint('Yes')\n", "n = int(input())\nw = [input()]\nfor i in range(n-1):\n    tmp = input()\n    if w[i][-1] == tmp[0]:\n        flg = tmp in w\n        if flg == False:\n            w.append(tmp)\n        else:\n            print('No')\n            return\n    else:\n        print('No')\n        return\nprint('Yes')", "n = int(input())\ns = input()\nws = set()\nws.add(s)\nlast = s[-1]\nfor _ in range(n-1):\n    s = input()\n    if s in ws or s[0] != last:\n        print('No')\n        break\n    else:\n        ws.add(s)\n        last = s[-1]\nelse:\n    print('Yes')", "n = int(input())\nmywords = []\nfor i in range(n):\n    mywords.append(input())\n\njudge = 0\nfor i in range(n - 1):\n    if not(mywords[i][len(mywords[i]) - 1] == mywords[i + 1][0]):\n        judge = 1\n\nfor i in range(n):\n    if mywords.count(mywords[i]) > 1:\n        judge = 1\n\nif judge == 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "n=int(input())\na=[input()]\nfor i in range(n-1):\n    tmp=input()\n    if not tmp in a and tmp[0]==a[-1][-1]:\n        a.append(tmp)\n    else:\n        break\nif len(a)==n:\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\nalist = [input() for i in range(n)]\n \nif len(set(alist))==n:\n  if all(alist[i][-1]==alist[i+1][0] for i in range(n-1)):\n    print(\"Yes\")\n    return\nprint(\"No\")", "def main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    before = words[0][0]\n    for w in words:\n        if words.count(w) >= 2 or before[-1] != w[0]:\n            print('No')\n            return\n        before = w\n    print('Yes')\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nw=[]\nfor i in range(n):\n  w.append(input())\nans=True\nfor i in range(n-1):\n  if w[i][-1]!=w[i+1][0]:\n    ans=False\nif len(set(w))!=n:\n  ans=False\nif ans:\n  print('Yes')\nelse:\n  print('No')", "N = int(input())\nW = [input() for i in range(N)]\n\nif len(set(W)) != len(W):\n    print(\"No\")\n    return\n\nfor i in range(N-1):\n    if W[i][-1] == W[i + 1][0]:\n        continue\n    else:\n        print(\"No\")\n        return\n\nprint(\"Yes\")", "n = int(input())\nwww = [input() for _ in range(n)]\nans = 'Yes'\nif len(list(set(www))) != n:\n    ans = 'No'\nelse:\n    for i in range(1, n):\n        if www[i][0] != www[i - 1][-1]:\n            ans = 'No'\nprint(ans)", "N = int(input())\nwords = set()\nW = [input() for _ in range(N)]\nres = False\n\nfor i in range(N - 1):\n    if W[i] in words:\n        res = True\n    words.add(W[i])\n    if W[i][-1] != W[i + 1][0]:\n        res = True\n\nif W[-1] in words:\n    res = True\n\nprint('YNeos'[res::2])", "N = int(input())\nW = [input() for n in range(N)]\nfor i in range(N - 1):\n    if W[i][-1] != W[i + 1][0] or W[i + 1] in W[0:i:1]:\n        print('No')\n        break\nelse:\n    print('Yes')", "N = int(input())\n\nalter_str = input()\nstr_list = [alter_str]\nfor _ in range(N-1):\n    input_str = input()\n    if input_str in str_list:\n        print('No')\n        break\n    if input_str[0] != alter_str[-1]:\n        print('No')\n        break\n    else:\n        str_list.append(input_str)\n        alter_str = input_str\nelse:\n    print('Yes')", "from collections import Counter\n\nn=int(input())\nl=[input() for i in range(n)]\n\nif Counter(l).most_common()[0][1] != 1:\n  ans=\"No\"\nelse:\n  l_head = [l[i+1][0] for i in range(n-1)]\n  l_tail = [l[i][-1] for i in range(n-1)]\n  if l_head == l_tail:\n    ans=\"Yes\"\n  else:\n    ans=\"No\"\n    \nprint(ans)\n", "N = int(input())\nm = dict()\n\nprev = input()\nm[prev] = True\nflg = True\n\nfor _ in range(N - 1):\n  s = input()\n  flg = flg and s not in m\n  flg = flg and prev[len(prev) - 1] == s[0]\n  m[s] = True\n  prev = s\n\nprint(\"Yes\" if flg else \"No\")", "n = int(input())\nseen = set()\ntmp = \"\"\nfor _ in range(n):\n    x = input()\n    if not tmp:\n        seen.add(x)\n        tmp = x[-1]\n        continue\n    elif x[0] != tmp or x in seen:\n        print(\"No\")\n        return\n    else:\n        seen.add(x)\n        tmp = x[-1]\nprint(\"Yes\")\n", "N = int(input())\nW = []\nfor i in range(N):\n    W.append(input())\n\nFalse_cnt = 0\nfor i in range(N):\n    if W.count(W[i]) >= 2:\n        False_cnt += 1\n\nfor i in range(N-1):\n    x = W[i]\n    y = W[i + 1]\n    if not x[-1] == y[0]:\n        False_cnt += 1\n\nif False_cnt == 0:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nW = list(input() for i in range(N))\n\nW_len = len(W)\n\nimport sys\nfor i in range(0,W_len):\n    n = i + 1\n    while n <= W_len - 1:\n        if W[i] == W[n]:\n            print(\"No\")\n            return\n        else:\n            n += 1\n\nx = 0\nwhile x <= W_len - 2:\n    if not W[x][-1] == W[x + 1][0]:\n        print(\"No\")\n        return\n    else:\n        x += 1\nprint(\"Yes\")\n\n\n", "N = int(input())\n\nW = []\n\nfor i in range(N):\n    W.append(input())\n\ncnt = set()\nlast = W[0][-1]\nfor i, w in enumerate(W):\n    if i == 0:\n        cnt.add(w)\n        continue\n    if w[0] != last:\n        print('No')\n        return\n    last = w[-1]\n    cnt.add(w)\n    if i+1 != len(cnt):\n        print('No')\n        return\n\nprint('Yes')\n", "n = int(input())\nw = input()\ns = set([w])\nl = w[-1]\nfor i in range(n-1):\n    w = input()\n    if w not in s:\n        s.add(w)\n        if w[0] != l:\n            print(\"No\")\n            break\n        else:\n            l = w[-1]\n    else:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")", "n = int(input())\nwords = []\nfor _ in range(n):\n    words.append(input())\n\nsets = set(words)\nif len(sets) != len(words):\n    ans = 'No'\nelse:\n    for i in range(1, n, 1):\n        if words[i-1][-1] != words[i][0]:\n            ans = 'No'\n            break\n        else:\n            ans = 'Yes'\n\nprint(ans)", "# ABC109\n# B Shiritori\nN = int(input())\nW = [input() for _ in range(N)]\nif len(W) != len(set(W)):\n    print(\"No\")\n    return\nelse:\n    for i in range(N-1):\n        if W[i][-1] != W[i+1][0]:\n            print(\"No\")\n            return\npass\nprint(\"Yes\")\n", "n=int(input())\nS=input()\nlast=S[-1]\nD=set()\nD.add(S)\nfor i in range(n-1):\n\tS=input()\n\tD.add(S)\n\tif S[0]==last:\n\t\tlast=S[-1]\n\telse:\n\t\tprint('No')\n\t\treturn\nif len(D)==n:\n\tprint('Yes')\nelse:\n\tprint('No')", "N = int(input())\nm = dict()\n\nprev = input()\nm[prev] = True\nflg = True\n\nfor _ in range(N - 1):\n  s = input()\n  flg = all([flg, s not in m, prev[len(prev) - 1] == s[0]])\n  m[s] = True\n  prev = s\n\nprint(\"Yes\" if flg else \"No\")", "import sys\nn, *s = sys.stdin.read().split()\nseen = set()\ntmp = s[0][0]\n\nfor x in s:\n    if x[0] != tmp or x in seen:\n        print(\"No\")\n        return\n    else:\n        seen.add(x)\n        tmp = x[-1]\nprint(\"Yes\")\n", "n = int(input())\nused = list(input() for x in range(n))\nans = \"Yes\"\nfor i in range(n-1): \n  if used.count(used[i]) == 2:\n    ans = \"No\"\n    break\n  if used[i][-1] != used[i+1][0]:\n    ans = \"No\"\nprint(ans)", "N = int(input())\n\nused_word_set = set()\n\nlast_char = '@'\nfor i in range(N):\n    w = input()\n    \n    if i != 0 and (w in used_word_set or last_char != w[0]):\n        print(\"No\")\n        return\n        \n    last_char = w[-1]\n    used_word_set.add(w)\n    \nprint(\"Yes\")", "N = int(input())\n\nlst = []\n\nfor i in range(N):\n    W = input()\n    lst.append(W)\n\nfor n in range(1, N):\n    if lst[n][0] != lst[n-1][-1] or lst.count(lst[n])>=2:\n        print('No')\n        break\nelse:\n    print('Yes')", "N = int(input())\nW = [input() for i in range(N)]\n\nif len(set(W)) != N:\n    print(\"No\")\n    return\n\nfor i in range(1, N):\n    if W[i-1][-1] != W[i][0]:\n        print(\"No\")\n        return\n\nprint(\"Yes\")", "n = int(input())\nw = list(input() for _ in range(n))\nans = True\nw2 = set(w)\nif len(w) != len(w2):\n    ans = False\nfor i in range(n-1):\n    if w[i][-1] != w[i+1][0]:\n        ans = False\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nans = \"Yes\"\nN = ini()\nwords = []\nfor _ in range(N):\n    words.append(input())\n\n\nif len(words) != len(set(words)):\n    ans = \"No\"\n\nfor i in range(N-1):\n    if words[i][len(words[i])-1] != words[i+1][0]:\n        ans = \"No\"\n\nprint(ans)\n\n", "n = int(input())\nw = [input() for _ in range(n)]\n\nfor i in range(n-1):\n    if w[i][-1] != w[i+1][0]:\n        print('No')\n        return\n\nif len(set(w)) != n:\n    print('No')\nelse:\n    print('Yes')", "N=int(input())\n\nli=[input() for i in range(N)]\n\ntemp=li[0][-1]\nfor j in range(N-1):\n    if temp==li[j+1][0]:\n        temp=li[j+1][-1]\n    else:\n        print(\"No\")\n        return\nli.sort()\n\nfor k in range(N-1):\n    if li[k]==li[k+1]:\n        print(\"No\")\n        return\nprint(\"Yes\")\n", "n = int(input())\nar = []\n\nfor i in range(n):\n  ar.append(input())\n\n\nfor i in range(n-1):\n  \n \n  if ar[i][-1] != ar[i+1][0]:\n    print('No')\n    return\n  if ar.count(ar[i])>1:\n    print('No')\n    return\nprint('Yes')", "n = int(input())\nw_l = [ input() for _ in range(n) ]\nmemo = set()\nb_w = w_l[0][0]\nans = 'Yes'\nfor w in w_l:\n    if b_w == w[0]:\n        if w not in memo:\n            memo.add(w)\n            b_w = w[-1]\n            continue\n    ans = 'No'\n    break\nprint(ans)", "n = int(input())\nli = [input() for i in range(n)]\n\nfor i in range(n-1):\n    for j in range(i+1,n):\n        if li[i] == li[j]:\n            print('No')\n            return\n\nfor i in range(n-1):\n    if li[i][-1] != li[i+1][0]:\n        print('No')\n        return\nprint('Yes')", "n = int(input())\nW = [input() for _ in range(n)]\n\nif len(W) > len(set(W)):\n    print(\"No\");return\n\ntmp = W[0][-1]\nfor w in W[1:]:\n    if w[0] != tmp:\n        print(\"No\");return\n    tmp = w[-1]\n\nprint(\"Yes\")", "N = int(input())\n\nsiritolist = []\n\nfor i in range(N):\n    W = input()\n    siritolist.append(W)\n\nfor i in range(1, len(siritolist)):\n    back_word = list(siritolist[i-1])\n    word = list(siritolist[i])\n    if back_word[-1] == word[0] and i > 1:\n        for j in range(i-1):\n            if siritolist[i] == siritolist[j]:\n                print('No')\n                return\n    elif back_word[-1] != word[0]:\n        print('No')\n        return\n\nprint('Yes')", "n=int(input())\nw=[\"\"]*n\na=set()\nfor i in range(n):\n    w[i]=input()\ncnt=0\nfor x in w:\n    if x in a:\n        print(\"No\")\n        return\n    else:\n        if cnt>0:\n            if bef!=x[0]:\n                print(\"No\")\n                return\n        bef=x[-1]\n    cnt+=1\n    a.add(x)\nprint(\"Yes\")\n", "N = int(input())\nwords = []\n\nfor i in range(N):\n  W = input()\n  if i == 0:\n    top = W[-1]\n    words.append(W)\n  else:\n    if top != W[0] or W in words:\n      print(\"No\")\n      return\n    else:\n      top = W[-1]\n      words.append(W)\n\nprint(\"Yes\")", "a = int(input())\nl = []\nfor i in range(a):\n  l.append(input())\nhead = l[0][0]\nc = 0\nif len(l) != len(set(l)):\n  print(\"No\")\n  exit\nelse:\n  for i in l:\n    if i[0] != head:\n      print(\"No\")\n      break\n    else:\n      head = i[-1]\n      c += 1\nif c == a:\n  print(\"Yes\")\n  \n  \n", "w=[]\nn= int(input())\n\nfor i in range(n):\n    w.append(input())\n\n\nfor i in range (n):\n    for j in range (i+1,n):\n        if w[i] == w[j]:\n            print('No')\n            return\n\nfor i in range (n-1) :\n    if w[i][-1] != w[i + 1][0]:\n        print('No')\n        return\n\n\nprint(\"Yes\")\n\n", "n=int(input())\ns=[]\nfor i in range(n):\n    s.append(input())\ntotal=True\nfor i in range(n-1):\n    if s[i][-1]!=s[i+1][0]:\n        total=False\n        break\n    for j in range(len(s)):\n        if i!=j:\n            if s[i]==s[j]:\n                total=False\n                break\n    if total==False:\n        break\nif total==False:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "N = int(input())\nW = [input() for _ in range(N)]\n\nif len(set(W)) != N:\n    print('No')\n    return\n\nfor i in range(1, N):\n    if W[i][0] != W[i-1][-1]:\n        print('No')\n        return\nprint('Yes')\n", "n=int(input())\nw=list(input() for i in range(n))\na=[w[0]]\nfor j in range(1,n):\n    if w[j] not in a and w[j][0]==a[j-1][-1]:\n        a.append(w[j])\n        continue\n    else:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")", "n=int(input())\nw=[input() for i in range(n)]\nm=w[0][-1]\nfor i in range(1,n):\n  if w.count(w[i])==1 and m==w[i][0]:\n    m=w[i][-1]\n  else:\n    print('No')\n    return\nprint('Yes')", "n = int(input())\ns = []\nres = \"Yes\"\nfor i in range(n):\n  s.append(input())\n  for j in range(i):\n    if s[i] == s[j]:\n      res = \"No\"\n  if i != 0:\n    if s[i][0] != s[i-1][len(s[i-1])-1]:\n      res = \"No\"\nprint(res)      ", "N = int(input())\nW = [input() for _ in range(N)]\n\nif len(set(W)) != len(W):\n    print(\"No\")\n    return\n\nprev = W[0][0]\nfor w in W:\n    if w[0] != prev:\n        print(\"No\")\n        return\n    prev = w[-1]\nprint(\"Yes\")", "n = int(input())\nans = 0\na = ''\nl = []\nfor i in range(n):\n    w = input()\n    if a == w[0]:\n        ans += 1\n    a = w[-1]\n    l.append(w)\nx = 'No'\nif ans == n-1 and len(set(l)) == n:\n    x = 'Yes'\nprint(x)", "n = int(input())\nw = []\nfor _ in range(n):\n    w.append(input())\na = ''\nfor i in range(n):\n    for j in range(i):\n        if w[i] == w[j]:\n            print('No')\n            return\nfor j in w:\n    b = [i for i in j]\n    if j != w[0] and a != b[0]:\n        print('No')\n        return\n    a = b[-1]\nprint('Yes')", "n=int(input())\nhatsugen=[]\nw=input()\nhatsugen.append(w)\noshiri=w[-1]\nFlag=True\nfor _ in range(n-1):\n    w=input()\n    if w[0]!=oshiri:\n        Flag=False\n        break\n    if w in hatsugen:\n        Flag=False\n        break\n    oshiri=w[-1]\n    hatsugen.append(w)\nif Flag:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nwords = set()\nW = [input() for _ in range(N)]\nres = False\n\nfor i in range(N):\n    if W[i] in words:\n        res = True\n    words.add(W[i])\n    if i < N - 1 and W[i][-1] != W[i + 1][0]:\n        res = True\n\nprint('YNeos'[res::2])", "n = int(input())\nlist_w = [input() for s in range(0, n)]\nfor i in range(0, n):\n    if i == 0 or (list_w[i - 1][-1] == list_w[i][0]) and list_w[i] not in list_w[:i]:\n        continue\n    else:\n        print(\"No\")\n        return\nprint(\"Yes\")", "n=int(input())\nw=[input() for i in range(n)]\ncheck=True\nfor i in range(1,n):\n  for j in range(i):\n    if w[i]==w[j]:\n      check=False\n  if w[i-1][-1]!=w[i][0]:\n    check=False\nprint(\"Yes\" if check else \"No\")", "def readinput():\n    n=int(input())\n    w=[]\n    for _ in range(n):\n        w.append(input())\n    return n,w\n\ndef main(n,w):\n    #print(w)\n    words={}\n    word=w[0]\n    words[w[0]] = 1 \n    for i in range(1,n):\n        #print(w[i])\n        if w[i][0]!=word[-1]:\n            return 'No'\n        else:\n            if w[i] not in words:\n                words[w[i]] = 1\n            else:\n                return 'No'\n        word = w[i]\n    return 'Yes'\n\ndef __starting_point():\n    n,w=readinput()\n    ans=main(n,w)\n    print(ans)\n\n__starting_point()"]