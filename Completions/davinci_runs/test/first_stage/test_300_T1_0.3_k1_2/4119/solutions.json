["# -*- coding: utf-8 -*-\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    x = sorted(list(map(int, input().split())))\n    diff = list()\n\n    for i, j in zip(x, x[1:]):\n        diff.append(abs(i - j))\n\n    diff = sorted(diff, reverse=True)\n    print((sum(diff) - sum(diff[:n - 1])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m = map(int,input().split())\nx = list(map(int,input().split()))\nx.sort()\nt = 0\ns = []\nfor i in range(m-1):\n    t += x[i+1]-x[i]\n    s.append(x[i+1]-x[i])\ns.sort(reverse = True)\nfor i in range(min(n-1,m-1)):\n    t -= s[i]\nprint(t)", "import numpy as np\nN, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nsortX = np.array(sorted(X), dtype=np.int64)\ndiffX = np.sort(np.diff(sortX))\nif N == 1:\n    print((np.sum(diffX)))\n    return\nans = np.sum(diffX[:-(N-1)])\nprint(ans)\n", "from itertools import accumulate\nimport sys\n\n\ndef LI():\n    return list(map(int, input().split()))\n\n\nN, M = LI()\nX = LI()\nif M <= N:\n    print((0))\n    return\nsa = []\nX.sort()\nfor i in range(M-1):\n    sa.append(X[i+1]-X[i])\nsa.sort(reverse=True)\nsa = list(accumulate(sa))\nif N == 1:\n    print((sa[M-2]))\nelse:\n    print((sa[M-2]-sa[N-2]))\n", "import heapq\n\nN, M = list(map(int, input().split())) # N\u500b\u306e\u99d2\u3001M\u500b\u306e\u5730\u70b9\nX = list( map(int, input().split())) #\u99d2\u306e\u5ea7\u6a19\n\n\nif N >= M:\n    ans = 0\nelse:\n    X.sort()\n    distance = [0] * (M-1)\n    for i in range(M-1):\n        distance[i] = -abs(X[i+1] - X[i])\n\n    sum_distance = sum(distance)\n    heapq.heapify(distance)\n\n    count = 0 \n    for _ in range(N-1):\n        max_num = heapq.heappop(distance)\n        count += max_num\n\n    ans = abs(sum_distance - count)\n\nprint(ans)\n", "n,m=list(map(int,input().split()))\nX=list(map(int,input().split()))\n\nif m==1 :\n    print((0))\n    return\n\nX.sort()\nD=[]\nfor i in range(1,m):\n    D.append(X[i]-X[i-1])\n\nD.sort(reverse=True)\nd=0\nif i>1:\n    for i in range(min(n-1,m-1)):\n        d += D[i]    \n\nans = sum(D)-d\nprint(ans)\n", "n, m = map(int, input().split())\nal = list(map(int, input().split()))\n\nif n >= m:\n    print(0)\n    return\n\nal_s = sorted(al)\nres=[]\nfor i in range(m-1):\n    res.append(al_s[i+1]-al_s[i])\n\nres_s = sorted(res)\n\nprint(sum(res)-sum(res_s[m-n:]))", "N, M, *X = list(map(int, open(0).read().split()))\n\nif N >= M:\n    print((0))\n    return\n\nX.sort()\ndiff = []\nfor i in range(M - 1):\n    diff.append(X[i + 1] - X[i])\ndiff.sort()\nprint((sum(diff[: M - N])))\n\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\nn,m = readInts()\nA = sorted(readInts())\nif n >= m:\n    print((0))\nelse:\n    dist = []\n    all = 0\n    for i in range(m-1):\n        dist.append(A[i+1] - A[i])\n        all += A[i+1] - A[i]\n    dist = sorted(dist, reverse = True)\n    print((all - sum(dist[:n-1])))\n", "N, M = list(map(int ,input().split()))\nX = list(map(int, input().split()))\n\nX.sort()\n\nsubs = []\nfor i in range(M-1):\n    subs.append(X[i+1]-X[i])\nsubs.sort()\nif N == 1:\n    print((sum(subs)))\n    return\nprint((sum(subs[:-(N-1)])))\n", "n, m = list(map(int, input().split()))\ndots = list(map(int, input().split()))\n\nif n >= m:\n  print((0))\nelse:\n  dots.sort()\n  if n == 1:\n    print((dots[-1] - dots[0]))\n  else:\n    # [\u5834\u6240, \u5dee\u5206]\n    dot_diffs = [[i, (dots[i + 1] - dots[i])] for i in range(len(dots) - 1)]\n    # \u964d\u9806\u3067sort\n    dot_diffs.sort(key=lambda x: -x[1])\n    ans = 0\n    for idx,i in enumerate(dot_diffs[0:(n - 1)]):\n      if idx == 0:\n        ans += dots[i[0]] - dots[0]\n      else:\n        ans += dots[i[0]] - dots[prev[0] + 1]\n      prev = i\n    ans += dots[-1] - dots[dot_diffs[0:(n - 1)][-1][0] + 1]\n    print(ans)\n", "n,m = map(int, input().split())\nx = sorted(list(map(int ,input().split())))\n\nif n >= m:\n  print(0)\n  return\n\nnums = [0]*(m-1)\nfor i in range(m-1): nums[i] = x[i+1] - x[i]\nnums.sort()\nprint(sum(nums[:m-1-(n-1)]))", "n,m = map(int,input().split())\nx = [int(i) for i in input().split()]\nx.sort()\nif n >= m:\n    ans = 0\nelse:\n    x_sa = [x[i+1]-x[i] for i in range(m-1)]\n    x_sa.sort(reverse = True)\n    if n >1:\n        del x_sa[:(n-1)]\n    ans = sum(x_sa)\nprint(ans)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, M, Xi):\n    lengthes = []\n    Xi.sort()\n    for i in range(1, M):\n        lengthes.append(abs(Xi[i - 1] - Xi[i]))\n    lengthes.sort()\n    num = N if N < M else M\n    print((sum(lengthes[:M - num])))\n\n\ndef __starting_point():\n    # S = input()\n    # N = int(input())\n    N, M = list(map(int, input().split()))\n    Xi = [int(i) for i in input().split()]\n    # Bi = [int(i) for i in input().split()]\n    # ABi = [[int(i) for i in input().split()] for _ in range(N)]\n    solve(N, M, Xi)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "n,m=map(int, input().split())\nx_list=[int(i) for i in input().split()]\n\nx_list.sort()\n\ndiffer_list=[]\n\nfor i in range(m-1):\n    differ_list.append(x_list[i+1]-x_list[i])\n    \nif n>=m:\n    ans=0\nelse:\n    differ_list.sort(reverse=True)\n    ans=sum(differ_list[n-1:])\n    \nprint(ans)", "n, m, *a = map(int, open(0).read().split())\na.sort()\nprint(sum(sorted([a[i + 1] - a[i] for i in range(m - 1)])[:max(0, m - n)]))", "n,m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\n\nif n >= m:print(0)\nelse:\n    dist = [abs(x[i+1] - x[i]) for i in range(m-1)]\n    dist = sorted(dist)\n    print(sum(dist[:m-n]))", "from itertools import tee\n\n\ndef pairwise(iterable):\n    \"s -> (s0,s1), (s1,s2), (s2, s3), ...\"\n    a, b = tee(iterable)\n    next(b, None)\n    return list(zip(a, b))\n\n\nN, M, *X = list(map(int, open(0).read().split()))\nif N >= M:\n    print((0))\n    return\n\nX.sort()\ndiffs = [cur - prev for prev, cur in pairwise(X)]\ndiffs.sort()\nprint((sum(diffs[: M - N])))\n", "N, M = [int(i) for i in input().split()]\nX = [int(i) for i in input().split()]\n\nif N >= M:\n    print(0)\n    return\nXs = sorted(X)\ndst = []\nfor i in range(M-1):\n    dst.append(Xs[i+1] - Xs[i])\n#print(Xs)\n#print(dst)\ndsts = sorted(dst)\n#print(dsts[:len(dsts)-N+1])\nprint(sum(dsts[:len(dsts)-N+1]))", "n,m=map(int,input().split())\nx=list(map(int, input().split()))\n\nif n >= m:\n  print('0')\n  return\n\nx_sorted = sorted(x)\ndx = [abs(x_sorted[i+1]-x_sorted[i]) for i in range(m-1)]\ndx_sorted = sorted(dx,reverse=True)\n\nresult = sum(dx_sorted)\nfor i in range(n-1):\n  result -= dx_sorted[i]\nprint(result)", "#n = int(input())\nn, m = map(int, input().split())\nxl = list(map(int, input().split()))\n#al=[list(input()) for i in range(n)]\nxl.sort()\ndifl = []\n\nfor i in range(1, m):\n    difl.append(xl[i]-xl[i-1])\n\ndifl.sort(reverse=True)\n\nif n >= m:\n    ans = 0\nelse:\n    ans = xl[-1]-xl[0]-sum(difl[:n-1])\nprint(ans)", "n, m = list(map(int, input().split()))\nx = list(map(int, input().split()))\nx.sort()\n\nd = []\nfor i in range(1, m):\n    d.append(x[i]-x[i-1])\nd.sort()\nd.reverse()\nprint((sum(d)-sum(d[:n-1])))\n", "n,m = map(int,input().split())\nx_l = list(map(int, input().split()))\nx_l = sorted(x_l)\nsub_l = sorted([ x_l[i+1] - x_l[i] for i in range(m-1)])\nif n >= m:\n    ans = 0\nelse:\n    r = m-n\n    ans = sum(sub_l[:r])\nprint(ans)", "import sys\nn,m = map(int,input().split())\nx = list(map(int,input().split()))\nx.sort()\nif n>=m:\n    print(0)\n    return\ndis = [x[i+1]-x[i] for i in range(m-1)]\ndis.sort()\nprint(sum(dis[:m-n]))", "n, m = list(map(int, input().split()))\nx = list(map(int, input().split()))\nd = []\nif n >= m:\n    print((0))\n\nelse:\n    x.sort()\n    for i in range(m-1):\n        d.append(abs(x[i] - x[i + 1]))\n    d.sort()\n    print((sum(d[:m-n])))\n", "n, m = list(map(int, input().split()))\nx_s = list(map(int, input().split()))\n\n\n\nif n >= m:\n    print((0))\nelse:\n    x_s.sort()\n    b=[]\n    for i in range(m-1):\n        b.append(x_s[i+1]-x_s[i])\n    b.sort()\n    ans = 0\n    for i in range(m-n):\n        ans += b[i]\n    print(ans)\n", "N,M = map(int,input().split())\nX = sorted(list(map(int,input().split())))\nL = []\nfor i in range(1,M):\n    L.append(X[i]-X[i-1])\nL = sorted(L,reverse=True)\nif N>=M:\n    print(0)\nelse:\n    print(sum(L[N-1:]))", "n,m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\nN = []\nfor i in range(m-1):\n    N.append(abs(x[i+1]-x[i]))\nN.sort(reverse=True)\nprint(sum(N[n-1:]))", "def main():\n    n,m = list(map(int, input().split()))\n    pos_list = list(map(int, input().split()))\n    pos_list.sort()\n\n    if n >= m:\n        return 0\n    diff_list =[0]\n    for i in range(m-1):\n        diff_list.append(pos_list[i+1]-pos_list[i])\n    diff_list.sort()\n    #print(pos_list)\n    #print(diff_list)\n    if n==1:\n        return sum(diff_list)\n    return sum(diff_list[:-n+1])\n\nprint(main())", "N, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nsortX = sorted(X)\ndiffX = [sortX[i] - sortX[i-1] for i in range(1, M)]\nsdiffX = sorted(diffX)\nif N == 1:\n    print((sum(sdiffX)))\n    return\nans = sum(sdiffX[:-(N-1)])\nprint(ans)\n", "n, m = list(map(int, input().split()))\nx = sorted(list(map(int, input().split())))\n\ngaps = [x[i] - x[i-1] for i in range(1, len(x))]\n\nif n == 1:\n    print((sum(gaps)))\nelse:\n    print((sum(sorted(gaps)[:-n+1])))\n", "N,M = list(map(int,input().split()))\nX = list(map(int,input().split()))\nX.sort()\nB=[]\n\nif N>=M:\n    print((0))\nelse:\n    for i in range(M-1):\n        B.append(X[i+1]-X[i])\n\n    B.sort()\n    print((sum(B[:M-N])))\n\n", "N,M = map(int,input().split())\nX = list(map(int,input().split()))\nif N >= M:\n    print(0)\n    return\nX.sort()\na = []\nfor i in range(M-1):\n    a.append(abs(X[i]-X[i+1]))\na.sort()\nans = 0\nfor i in range(M-N):\n    ans += a[i]\nprint(ans)", "N,M  = map(int,input().split())\nN_List = sorted(list(map(int,input().split())))\nN_Diff =[]\nfor i in range(1,M):\n    N_Diff.append(N_List[i]-N_List[i-1])\nif N >= M:\n    ans = 0\nelif M == 1:\n    ans = sum(N_Diff)\nelse:\n    ans = sum(sorted(N_Diff)[:M-N])\nprint(ans)", "N,M = map(int,input().split())\nX = list(map(int,input().split()))\nX.sort()\n\ndist = [0]*(M-1)\nfor i in range(0,M-1):\n  dist[i] += X[i+1] - X[i]\n  \ndist.sort(reverse = True)\n\nprint(sum(dist[N-1:]))", "n, m = map(int, input().split())\nx = list(map(int, input().split()))\nx.sort()\n\nres = []\nfor i in range(m-1):\n  res.append(x[i+1]-x[i])\nres.sort()\n\nans = 0\nfor i in range(m-n):\n  ans += res[i]\nprint(ans)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, M, *X = list(map(int, read().split()))\n\n    if N >= M:\n        print((0))\n        return\n\n    X.sort()\n    dist = [0] * (M - 1)\n    for i in range(M - 1):\n        dist[i] = X[i + 1] - X[i]\n\n    dist.sort()\n    ans = sum(dist[: M - N])\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = list(map(int,input().split()))\nX = list(map(int,input().split()))\nif N >= M:\n    print((0))\n    return\nX.sort()\nY = [(X[i+1]-X[i]) for i in range(M-1)]\nY.sort()\n\nprint((sum(Y[:M-N])))\n", "n, m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\nif n >= m: print(0)\nelse:\n    x_dif = sorted([x[i] - x[i-1] for i in range(1, m)], reverse=True)\n    print(x[-1] - x[0] - sum(x_dif[:n-1]))", "N,M = map(int,input().split())\nx = sorted(list(map(int,input().split())))\nans = []\nfor i in range(M-1):\n  ans.append(x[i+1]-x[i])\nans = sorted(ans,reverse=True)\n\nprint(sum(ans)-sum(ans[0:N-1]))", "'''\nCreated on 2020/08/28\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  N,M=list(map(int,pin().split()))\n  X=list(map(int,pin().split()))\n  if N>=M:\n    print((0))\n    return\n  X.sort()\n  d=[]\n  for i in range(M-1):\n    d.append(abs(X[i]-X[i+1]))\n  d.sort()\n  print((sum(d[:M-N])))\n  return \nmain()\n#\u89e3\u8aacAC\n", "N,M=list(map(int,input().split()))\nX=list(map(int,input().split()))\nY=[]\nX.sort()\nans=0\nif N>=M:\n    print((0))\n    return\nfor i in range(M-1):\n    Y.append(X[i+1]-X[i])\nY.sort(reverse=True)\nfor j in range(N-1):\n    ans+=Y[j]-1\n\nprint((X[M-1]-X[0]+1-ans-N))\n", "n, m = map(int, input().split())\nli_X = list(map(int, input().split()))\n\nli_X.sort()\nli_X_delta = []\nfor i in range(len(li_X)-1):\n    li_X_delta.append(li_X[i+1]-li_X[i])\nli_X_delta.sort(reverse=True)\ncnt = 0\n\nans = li_X[-1] - li_X[0]\nfor i in range(min(n-1, len(li_X_delta))):\n    ans -= li_X_delta[i]\nprint(ans)", "N, M = map(int, input().split())\nX = sorted(list(map(int, input().split())))\n\nh = []\nans = 0\n\nif N < M:\n    for i in range(M-1):\n        h.append(X[i+1] - X[i])\n    h = sorted(h)\n    ans = max(ans, sum(h[:M - N]))\n\nprint(ans)", "n,m = map(int,input().split())\na = sorted(list(map(int,input().split())))\ndst = [0]*(m-1)\nfor i in range(m-1):\n  dst[i] = abs(a[i+1]-a[i])\ndst.sort(reverse=True)\nprint(sum(dst[n-1::]))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, M = MI()\n    L = sorted(LI())\n    L2 = []\n    past = L[0]\n    \n    if M == 1:\n        print(0)\n        return\n        \n    for i in L[1:]:\n        L2.append(i-past)\n        past = i\n\n    L2.sort(reverse=True)\n    res = sum(L2)\n    num = N-1\n    \n    if num >= M:\n        num = M - 1\n\n    for i in range(num):\n        res -= L2[i]\n\n    print(res)\n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "N,M=list(map(int, input().split()))\nX=sorted(list(map(int, input().split())))\nkyori=[]\n\nfor i in range(M-1):\n\tkyori.append(X[i+1]-X[i])\n\n#print(sorted(kyori)[:-N+1])\n\nif N==1:\n\tprint((sum(kyori)))\nelse:\n\tprint((sum(sorted(kyori)[:-N+1])))\n", "N,M=list(map(int,input().split()))\nif N>M:\n    print((0))\n    return\nlst=list(map(int,input().split()))\nlst.sort()\nsum_1=max(lst)-min(lst)\nD=[]\nfor i in range(1,M):\n    D.append(lst[i]-lst[i-1])\nD.sort(reverse=True)\nsum_2=0\nfor i in range(N-1):\n    sum_2+=D[i]\nans=0\nans=sum_1-sum_2\nprint(ans)\n", "n, m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\nd = []\nif n>=m or m==1:\n    print(0)\nelif n<m:\n    for i in range(m-1):\n        d.append(x[i+1] - x[i])\n    print(sum(sorted(d)[:m-n]))", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n, m = inl()\n    X = inl()\n    X.sort()\n    x = X[0]\n    D = []\n    for i in range(1, m):\n        d = X[i] - x\n        D.append(d)\n        x = X[i]\n    D.sort()\n    k = max(m - n, 0)\n    return sum(D[:k])\n\n\nprint(solve())\n", "n, m = map(int, input().split())\nxl = sorted(list(map(int, input().split())))\n\ndelta = []\nfor i in range(m-1):\n    delta.append(abs(xl[i]-xl[i+1]))\ndelta.sort(reverse=True)\nprint(sum(delta[n-1:]))", "n, m = map(int,input().split())\nx = list(map(int,input().split()))\nans = 0\nif n<m:\n    x.sort()\n    l = [x[i+1]-x[i] for i in range(m-1)]\n    l.sort()\n    ans = max(x)-min(x)\n    for i in range(n-1):\n        ans -= l[-1-i]\nprint(ans)", "n,m=list(map(int,input().split()))\nx=list(map(int,input().split()))\nif n>=m:\n    print((0))\n    return\nx.sort()\nl=[]\nfor i in range(m-1):\n    l.append(x[i+1]-x[i])\nl.sort(reverse=True)\nans=x[m-1]-x[0]\nfor i in range(n-1):\n    ans-=l[i]\nprint(ans)\n", "n, m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\n\ns = sorted([x[i]-x[i-1] for i in range(1, m)], reverse=True)\nprint(sum(s[n-1:]))", "n,m=map(int,input().split())\nx=list(map(int,input().split()))\nx.sort()\nif n>=m:\n  print(0)\n  return\ndata=[0]*(m-1)\nfor i in range(m-1):\n  data[i]=x[i+1]-x[i]\ndata.sort()\nres=0\nfor i in range(n-1):\n  res+=data[m-2-i]\nprint(sum(data)-res)", "def readinput():\n    n,m=list(map(int,input().split()))\n    x=list(map(int,input().split()))\n    return n,m,x\n\ndef main(n,m,x):\n    if m<=n:\n        return 0\n    xs=sorted(x)\n    #print(xs)\n    d=[]\n    for i in range(m-1):\n        d.append((xs[i+1]-xs[i],i+1))\n    ds=sorted(d,reverse=True,key=lambda x:x[0])\n    c=[0]*m\n    for i in range(n-1):\n        c[ds[i][1]]+=1\n    #print(c)\n    ans=0\n    for i in range(1,m):\n        if c[i]==0:\n            ans+=xs[i]-xs[i-1]\n    return ans\n\ndef __starting_point():\n    n,m,x=readinput()\n    ans=main(n,m,x)\n    print(ans)\n\n__starting_point()", "N, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nX.sort()\nA = []\nfor i in range(1, M):\n    L = X[i] - X[i - 1]\n    A.append(L)\nA.sort()\nA = A[M - N:]\nans = X[-1] - X[0] - sum(A)\nif N >= M:\n    ans = 0\nprint(ans)\n  \n", "n,m=[int(i) for i in input().split()]\n\nx=[int(i) for i in input().split()]\n\nx.sort()\n\nsa=[]\n\nfor i in range(1,m):\n    sa.append(x[i]-x[i-1])\n\nsa.sort()\n\nans=0\n\nfor i in range(max(0,m-n)):\n    ans+=sa[i]\nprint(ans)", "n, m = map(int, input().split())\nx = sorted(map(int, input().split()))\na = sorted([x[i]-x[i-1] for i in range(1,m)])\nans = 0\nfor i in range(m-n):\n  ans += a[i]\nprint(ans)", "n,m = list(map(int, input().split()))\nx = list(map(int, input().split()))\nx.sort()\n\ntotal = max(x) - min(x)\nif n >= m:\n    print(0)\nelif n == 1:\n    print(total)\nelse:\n    gap = []\n    for i,j in zip(x, x[1:]):\n        gap.append(j-i)\n    gap.sort(reverse=True)\n    print(total - sum(gap[:n-1]))", "n,m=map(int, input().split())\nx=list(map(int, input().split()))\nx.sort()\nalist=[]\nfor i in range(m-1):\n  alist.append(x[i+1]-x[i])\nalist.sort()\nif n>=m:\n  print(0)\nelse:\n  print(sum(alist[0:m-n]))", "# author:  Taichicchi\n# created: 10.10.2020 19:46:14\n\nimport sys\n\nN, M = list(map(int, input().split()))\n\nif M < N:\n    print((0))\n    return\n\nX = list(map(int, input().split()))\n\nX.sort()\n\n\nls = []\nfor i in range(M - 1):\n    ls.append(X[i + 1] - X[i])\n\n\nls.sort(reverse=True)\n\nprint((X[M - 1] - X[0] - sum(ls[:N - 1])))\n", "N,M = list(map(int,input().split()))\nX = sorted(list(map(int,input().split())))\n#X.sort()\nB=[]\n\nif N>=M:\n    print((0))\nelse:\n    for i in range(M-1):\n        B.append(X[i+1]-X[i])\n\n    B.sort()\n    print((sum(B[:M-N])))\n\n", "N,M=list(map(int,input().split()))\nX=sorted(list(map(int,input().split())))\nD=sorted([X[i+1]-X[i] for i in range(M-1)])\nprint((0 if M<=N else sum(D[:M-N])))\n", "import sys\nn,m=map(int,input().split())\nx=list(map(int,input().split()))\n\nif n>=m or m==1:\n    print('0')\n    return\n\nx.sort()  \nc=[]\n\nfor i in range(1,m):\n    c.append(abs(x[i]-x[i-1]))\n\nc.sort()\nprint(sum(c[:len(c)-n+1]))", "n, m = map(int, input().split())\nx = list(map(int, input().split()))\nx.sort()\n\ndif = []\nfor i in range(m - 1):\n    dif.append(x[i] - x[i + 1])\n\ndif.sort()\nans = abs(sum(dif[n - 1:]))\nprint(ans)", "n,m = list(map(int,input().split()))\nx = list(map(int,input().split()))\n\nif n >= m:\n    print((0))\n    return\n\nx.sort()\n\ndists = []\npoint = x.pop(0)\nfor xs in x:\n    dists.append(xs-point)\n    point = xs\ndists.sort(reverse=True)\n\nprint((sum(dists[(n-1):])))\n\n", "n,m = map(int,input().split())\nx = list(map(int,input().split()))\nx.sort()\nif n>=m:\n    print(0)\n    return\ndis = [x[i+1]-x[i] for i in range(m-1)]\ndis.sort()\nif n>1:\n    del dis[-(n-1):]\nprint(sum(dis))", "N, M = map(int, input().split())\nX = list(map(int, input().split()))\nX.sort()\nd = []\nfor i in range(M-1):\n  d.append(X[i+1]-X[i])\nd.sort()\nif M-N >= 0:\n  print(sum(d[0:M-N]))\nelse:\n  print(0)", "N,M = map(int,input().split())\nX = list(map(int,input().split()))\nX.sort()\nY = [X[i] - X[i-1] for i in range(1, M)]\nY.sort(reverse=True)\nY = Y[N-1:]\nprint(sum(Y))", "N, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nX.sort()\n\nD = [r - l for l, r in zip(X, X[1:])]\nD.sort()\n\nans = sum(D)\nwhile D and N > 1:\n    N -= 1\n    ans -= D.pop()\nprint(ans)\n", "n, m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\n\ndif = []\nfor i in range(m-1):\n    dif.append(x[i+1] - x[i])\n\ndif = sorted(dif)[::-1]\nprint(sum(dif[n-1:]))", "n,m = list(map(int,input().split()))\nif n >= m :\n  print((0))\nelse:\n  ls=[int(s) for s in input().split()]\n  ls.sort()\n  d=[ls[i+1]-ls[i] for i in range(m-1)]\n  d.sort()\n  print((sum(d[:m-n])))\n", "n, m, *a = list(map(int, open(0).read().split()))\na.sort()\nb = []\nfor i in range(m - 1):\n    b.append(a[i + 1] - a[i])\nb.sort()\nans = 0\nfor i in range(m - n):\n    ans += b[i]\nprint(ans)\n", "N,M= map(int, input().split())\nX= list(map(int, input().split()))\n\nX.sort()\n\nif N >= M:\n    print(0)\n\nelif N == 1:\n    print(abs(max(X) - min(X)))\n\nelse:\n    load = [X[i] - X[i - 1] for i in range(1, M)]\n    load.sort()\n    print(sum(load[:M - N]))", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n, m = Input()\n    x = sorted(Input())\n\n    data = sorted((abs(x[i]-x[i+1]) for i in range(m-1)), reverse=True)\n    print(sum(data[n-1:]))\n\n\nmain()", "import sys\nN,M=map(int,input().split())\nL=list(map(int,input().split()))\nif N>=M:\n    print(0)\n    return\nL.sort()\nK=[]\ns=0\nfor i in range(M-1):\n    K.append(L[i+1]-L[i])\nK.sort(reverse=True)\nfor i in range(N-1):\n    s+=K[i]\nprint(L[M-1]-L[0]-s)", "import numpy as np\n\ndef main():\n    N, M = list(map(int, input().split()))\n    if N >= M:\n        print((0))\n        return\n    X = sorted(list(map(int, input().split())))\n    if N == 1:\n        print((X[-1] - X[0]))\n        return\n    D = np.array([X[i+1] - X[i] for i in range(M-1)])\n    idx_list = np.argsort(-D)[:N-1]\n    ans = sum(D)\n    for idx in idx_list:\n        ans -= D[idx]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\nn, m = map(int, input().split(\" \"))\nxL = sorted(list(map(int, input().split(\" \"))))\n\ndiff = [0 for _ in range(m - 1)]\n\nfor i in range(m - 1):\n    diff[i] = xL[i + 1] - xL[i]\n\ndiff = sorted(diff, reverse=True)\n\nprint(sum(diff[n - 1:]))", "n,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nif n>=m:\n  print(0)\n  return\nb=[]\nfor i in range(m-1):\n  b.append(a[i+1]-a[i])\n\nb.sort()\nb=b[:m-n]\nprint(sum(b))", "n, m = list(map(int, input().split()))\nx = sorted(list(map(int, input().split())))\ny = []\nif n > m :\n    print((0))\n    return\nfor i in range(m-1):\n    diff = x[i+1] - x[i]\n    y.append(diff)\ny.sort(reverse = True)\nres = x[-1] - x[0]\nfor i in range(n-1):\n    res -= y[i]\nprint(res)\n", "N, M = map(int, input().split())\nX = list(map(int, input().split()))\nxs = sorted(X)\nd = []\nfor i in range(M-1):\n  d.append(xs[i+1]-xs[i])\nds = sorted(d)\nif M>N:\n  print(sum(ds[:(M-N)]))\nelse:\n  print(0)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep 14 18:32:27 2020\n\n@author: liang\n\"\"\"\n\"\"\"\n\u914d\u5217\u306e\u30b9\u30e9\u30a4\u30b9\nX[0:-(N-1)]\u306a\u3069\u3067\u5207\u308b\u3068\u3001N=1\u306e\u6642\u306b\u30d0\u30b0\u308b\u306e\u3067\u6ce8\u610f\nX[0:len(X) - (N-1)]\u306e\u3088\u3046\u306b\u8981\u7d20\u6570-\u5f8c\u308d\u304b\u3089\u6570\u3048\u305findex\u3068\u3059\u308b\n\n\"\"\"\nN, M = map(int, input().split())\nX = [int(x) for x in input().split()]\n\ndef solve():\n    if N >= M :\n        return 0\n    X.sort()\n    d = [X[i+1] - X[i] for i in range(M-1)]\n    d.sort()\n    #print(X)\n    #print(d)\n    return sum(d[0:M-N])\nprint(solve())", "n, m = map(int, input().split())\nxl = sorted(list(map(int, input().split())))\n\ndiff = [0]*(m-1)\n\nfor i in range(m-1):\n    diff[i] = xl[i+1] - xl[i]\n\ndiff_s = sorted(diff, reverse=True)\n# print(diff_s)\nprint(sum(diff_s[n-1:]))", "n, m = map(int, input().split())\n\nxx = sorted(list(map(int, input().split())))\n\nyy = [abs(xx[i]-xx[i+1]) for i in range(m-1)]\n\nsy = sorted(yy)\n\nif n > 1:\n  print(sum(sy[:-n+1]))\nelse:\n  print(xx[-1] - xx[0])", "N,M = list(map(int,input().split()))\nX = sorted(list(map(int,input().split())))\n#X.sort()\nB=[]\n\nif N>=M:\n    print((0))\nelse:\n    for i in range(M-1):\n        B.append(X[i+1]-X[i])\n\n    B = sorted(B,reverse = True)\n    print((sum(B[N-1:])))\n\n", "n, m = map(int, input().split())\nX = sorted(set(list(map(int, input().split()))))\ns = []\nfor i in range(m-1):\n    s.append(X[i+1] - X[i])\ns = sorted(s)[::-1]\n\nprint(sum(s[n-1:]))", "import sys\nN, M= map(int, input().split())\nx = list(map(int, input().split()))\nX=sorted(x)\nD=[0]*(M-1)\nif N>=M:\n    print(0)\n    return\nfor i in range(M-1):\n    D[i]=X[i+1]-X[i]\nnew_D = sorted(D)\ncnt=0\nfor i in range(M-N):\n    cnt=cnt+new_D[i]\nprint(cnt)", "N,M=map(int,input().split())\n*X,=sorted(map(int,input().split()))\nprint(sum(sorted([abs(X[i+1]-X[i]) for i in range(M-1)],reverse=True)[N-1:]))", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\n\nif n>=m:\n  print((0))\nelse:\n  num=n-1\n  sl=sorted(l)\n\n  dsl=[abs(sl[i+1]-sl[i]) for i in range(m-1)]\n\n  dsl=sorted(dsl)\n  print((sum(dsl[0:len(dsl)-num])))\n", "n,m = map(int, input().split())\nx = sorted(list(map(int, input().split())))\n\nif n >= m: print(0)\nelse:\n  nums = [0]*(m-1)\n  for i in range(m-1): nums[i] = x[i+1] - x[i]\n  nums.sort()\n  print(sum(nums[:m-n]))", "n,m = map(int, input().split())\nx = list(map(int, input().split()))\nx.sort()\nans = []\nfor i in range(m-1):\n    ans.append(abs(x[i]-x[i+1]))\nans.sort(reverse=True)\nprint(sum(ans[n-1:]))", "\n\nN,M = list(map(int, input().split()))\nX = list(map(int, input().split()))\n\nX.sort()\ncnt = 0\narr = [0]*(M-1)\nif N >= M:\n    ans = 0\nelse:\n    for i in range(1,M):\n        arr[i-1] = (abs(X[i-1]-X[i]))\n    #print(arr)\n    arr.sort()\n    ans = sum(arr[0:M-N])\nprint(ans)", "#40 C - Streamline\nN,M = map(int,input().split())\nX = list(map(int,input().split()))\nX = sorted(X,reverse = False)\n\n# \u533a\u9593\u306e\u8ddd\u96e2\u306e\u30ea\u30b9\u30c8\nif len(X) == 1:\n    print(0)\nelse:\n    dist = []\n    for i in range(1,M):\n        dist.append(X[i]-X[i-1])\n    dist = sorted(dist,reverse = False)\n    # \u533a\u9593\u306e\u8ddd\u96e2\u3092\u964d\u9806\u306b N-1 \u500b\u5206\u6d88\u53bb\n    for k in range(N-1):\n        dist.pop()\n        if len(dist) == 0:\n            break\n    print(sum(dist))", "n,m = map(int, input().split())\nx = list(map(int, input().split()))\nx.sort()\nans = []\nfor i in range(m-1):\n    ans.append(abs(x[i]-x[i+1]))\nans.sort(reverse=True)\nprint(sum(ans[n-1:]))", "N,M = list(map(int,input().split()))\nX = list(map(int,input().split()))\nif N >= M:\n    print((0))\n    return\nX.sort()\nY = [(X[i+1]-X[i]) for i in range(M-1)]\nY.sort()\n\nprint((sum(Y[:M-N])))\n", "N,M=list(map(int,input().split()))\nX=list(map(int,input().split()))\nX.sort()\nif N>=M:\n    print((0))\nelse:\n    diff=[X[i+1]-X[i] for i in range(M-1)]\n    diff.sort()\n    print((sum(diff[0:M-N])))\n", "#!/usr/bin/env python3\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    x = sorted(map(int, input().split()))\n    x_dist = sorted([x[i] - x[i - 1] for i in range(1, m)], reverse=True)\n    print((x[-1] - x[0] - sum(x_dist[:n - 1])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]