["", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    z = arr[1] - arr[0]\n    for i in range(n-1):\n        if arr[i+1] - arr[i] != z:\n            if arr[i+1] - arr[i] == z+1 and arr[i+1] - arr[i-1] == z*2:\n                arr[i] += 1\n            elif arr[i+1] - arr[i] == z-1 and arr[i+1] - arr[i-1] == z:\n                arr[i+1] -= 1\n            else:\n                print(-1)\n                return\n    print(arr.count(arr[0])+arr.count(arr[len(arr)-1]))\n    \n    \n    \nmain()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n <= 2:\n        print(0)\n    else:\n        diff = a[1] - a[0]\n        for i in range(2, n):\n            if a[i] - a[i - 1] != diff:\n                break\n        else:\n            print(0)\n            return\n        change = 0\n        if a[i] - a[i - 1] == diff + 1:\n            change += 1\n            a[i] -= 1\n        elif a[i] - a[i - 1] == diff - 1:\n            change += 1\n            a[i] += 1\n        else:\n            print(-1)\n            return\n        for j in range(i + 1, n):\n            if a[j] - a[j - 1] != diff:\n                change += 1\n                if a[j] - a[j - 1] == diff + 1:\n                    a[j] -= 1\n                else:\n                    print(-1)\n                    return\n        print(change)\n\nif __name__ == '__main__':\n    main()", "\n\ndef solve(n, b):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 0\n    bb = [b[i + 1] - b[i] for i in range(n - 1)]\n    if max(bb) == min(bb):\n        return 0\n    if max(bb) - min(bb) == 1:\n        s = sum(bb)\n        if s % 2 == 0:\n            if s / 2 in bb:\n                return 1\n            else:\n                return 2\n        else:\n            return 2\n    else:\n        return -1\n\nif __name__ == '__main__':\n    n = int(input())\n    b = list(map(int, input().split()))\n    print(solve(n, b))", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # find the difference between the first two elements in the list\n    d = a[1] - a[0]\n\n    # count the number of elements that are different from the arithmetic progression\n    diff = 0\n    for i in range(1, n):\n        if a[i] - a[i-1] != d:\n            diff += 1\n\n    # if there are more than 2 elements that are different from the arithmetic progression, it is impossible to make it an arithmetic progression\n    if diff > 2:\n        print(-1)\n    else:\n        print(diff)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nb = list(map(int, input().split()))\n\n# check if b is an AP\nap = True\nfor i in range(1, len(b)-1):\n    if b[i+1] - b[i] != b[1] - b[0]:\n        ap = False\n        break\n\nif ap:\n    print(0)\nelse:\n    # check if we can make an AP by changing only one element\n    for i in range(1, len(b)-1):\n        if b[i+1] - b[i] == b[i] - b[i-1]:\n            print(1)\n            break\n    else:\n        # check if we can make an AP by changing two elements\n        for i in range(1, len(b)-1):\n            if b[i+1] - b[i] == 2*(b[i] - b[i-1]):\n                print(2)\n                break\n            elif b[i+1] - b[i] == 2*(b[i+1] - b[i+2]):\n                print(2)\n                break\n        else:\n            print(-1)", "\ndef dif(lst):\n    difs = []\n    for i in range(len(lst) - 1):\n        difs.append(lst[i+1] - lst[i])\n    return difs\n\ndef main(n, lst):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 0\n    difs = dif(lst)\n    if difs[1:] == difs[:-1]:\n        return 0\n    if len(set(difs)) == 1:\n        return 0\n    if len(set(difs)) == 2:\n        if difs[0] == difs[1]:\n            return 1\n        else:\n            return 2\n    if len(set(difs)) > 2:\n        return -1\n\nif __name__ == \"__main__\":\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(main(n, lst))"]