2022-04-16 20:13:29.164309 """
There are N integers, A_1, A_2, ..., A_N, written on the blackboard.
You will choose one of them and replace it with an integer of your choice between 1 and 10^9 (inclusive), possibly the same as the integer originally written.
Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 10^5
 - 1 \leq A_i \leq 10^9

-----Output-----
Input is given from Standard Input in the following format:
N
A_1 A_2 ... A_N

-----Output-----
Print the maximum possible greatest common divisor of the N integers on the blackboard after your move.

-----Sample Input-----
3
7 6 8

-----Sample Output-----
2

If we replace 7 with 4, the greatest common divisor of the three integers on the blackboard will be 2, which is the maximum possible value.
"""
2022-04-16 20:13:29.164333 --------------------------
2022-04-16 20:13:47.673042 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\n# Read the input\nN = int(input())\nA = list(map(int, input().split()))\n\n# Calculate the greatest common divisor of the elements in A\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ngcd_list = [A[0]]\nfor i in range(1, len(A)):\n    gcd_list.append(gcd(gcd_list[i-1], A[i]))\n\n# Find the maximum possible greatest common divisor\nresult = 0\nfor i in range(N):\n    if i == 0:\n        result = max(result, gcd(gcd_list[N-2], A[i+1]))\n    elif i == N - 1:\n        result = max(result, gcd(gcd_list[N-2], A[i-1]))\n    else:\n        result = max(result, gcd(gcd_list[i-1], gcd(gcd_list[N-1], A[i+1])))\n\nprint(result)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef gcd(x, y):\n    if x < y:\n        return gcd(y, x)\n    elif x % y == 0:\n        return y\n    else:\n        return gcd(y, x % y)\n\ndef solve(A):\n    N = len(A)\n    ma = 0\n    for a in A:\n        ma = max(ma, a)\n    ans = 0\n    for i in range(2, ma + 1):\n        cnt = 0\n        for a in A:\n            if a % i == 0:\n                cnt += 1\n        if cnt >= 2:\n            ans = max(ans, i)\n    return ans\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = solve(A)\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Get input\nn = int(input())\na = input().split()\na = [int(i) for i in a]\n\n# Find max gcd\nmax_gcd = 0\nfor i in a:\n    for j in a:\n        if i == j:\n            continue\n        gcd = math.gcd(i, j)\n        if gcd > max_gcd:\n            max_gcd = gcd\n\nprint(max_gcd)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ngcd_all = a[0]\nfor i in a[1:]:\n    gcd_all = gcd(gcd_all, i)\n\nans = float(\"inf\")\nfor i in a:\n    ans = min(ans, gcd(gcd_all, i))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return gcd(a % b, b)\n    else:\n        return gcd(a, b % a)\n\n\ndef gcd_list(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        return gcd(arr[0], gcd_list(arr[1:]))\n\n\nn = int(input())\narr = list(map(int, input().split()))\nmax_gcd = gcd_list(arr)\nfor i in range(n):\n    arr[i] = max_gcd\n    if gcd_list(arr) == 1:\n        break\n    arr[i] = 1\n    if gcd_list(arr) == 1:\n        break\nprint(gcd_list(arr))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nmax_gcd = 0\nfor a in A:\n    gcds = [gcd(a, b) for b in A]\n    max_gcd = max(max_gcd, max(gcds))\n\nprint(max_gcd)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u5206\u6bcd\u306e\u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\n# \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\ndef lcm(a, b):\n    return a*b // gcd(a, b)\n\n# \u6700\u5c0f\u516c\u500d\u6570\u306e\u6700\u5927\u516c\u7d04\u6570\u304c\u7b54\u3048\nans = A[0]\nfor i in range(1, N):\n    ans = lcm(ans, A[i])\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport math\nimport sys\n\ndef greatestCommonDivisor(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = list(map(lambda x: greatestCommonDivisor(a[0], x), a))\n    print(max(gcd))\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650140009,
  "id": "cmpl-4xj5NLw4wHQ7hjUV9mbqJTwmEWz2J",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:13:47.673420 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\n# Read the input\nN = int(input())\nA = list(map(int, input().split()))\n\n# Calculate the greatest common divisor of the elements in A\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ngcd_list = [A[0]]\nfor i in range(1, len(A)):\n    gcd_list.append(gcd(gcd_list[i-1], A[i]))\n\n# Find the maximum possible greatest common divisor\nresult = 0\nfor i in range(N):\n    if i == 0:\n        result = max(result, gcd(gcd_list[N-2], A[i+1]))\n    elif i == N - 1:\n        result = max(result, gcd(gcd_list[N-2], A[i-1]))\n    else:\n        result = max(result, gcd(gcd_list[i-1], gcd(gcd_list[N-1], A[i+1])))\n\nprint(result)"
}
2022-04-16 20:13:47.673458 REASON stop
2022-04-16 20:13:47.854526 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef gcd(x, y):\n    if x < y:\n        return gcd(y, x)\n    elif x % y == 0:\n        return y\n    else:\n        return gcd(y, x % y)\n\ndef solve(A):\n    N = len(A)\n    ma = 0\n    for a in A:\n        ma = max(ma, a)\n    ans = 0\n    for i in range(2, ma + 1):\n        cnt = 0\n        for a in A:\n            if a % i == 0:\n                cnt += 1\n        if cnt >= 2:\n            ans = max(ans, i)\n    return ans\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = solve(A)\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 20:13:47.854744 REASON stop
2022-04-16 20:13:47.886975 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Get input\nn = int(input())\na = input().split()\na = [int(i) for i in a]\n\n# Find max gcd\nmax_gcd = 0\nfor i in a:\n    for j in a:\n        if i == j:\n            continue\n        gcd = math.gcd(i, j)\n        if gcd > max_gcd:\n            max_gcd = gcd\n\nprint(max_gcd)"
}
2022-04-16 20:13:47.887133 REASON stop
2022-04-16 20:13:47.921090 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ngcd_all = a[0]\nfor i in a[1:]:\n    gcd_all = gcd(gcd_all, i)\n\nans = float(\"inf\")\nfor i in a:\n    ans = min(ans, gcd(gcd_all, i))\n\nprint(ans)"
}
2022-04-16 20:13:47.921220 REASON stop
2022-04-16 20:13:47.953986 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return gcd(a % b, b)\n    else:\n        return gcd(a, b % a)\n\n\ndef gcd_list(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        return gcd(arr[0], gcd_list(arr[1:]))\n\n\nn = int(input())\narr = list(map(int, input().split()))\nmax_gcd = gcd_list(arr)\nfor i in range(n):\n    arr[i] = max_gcd\n    if gcd_list(arr) == 1:\n        break\n    arr[i] = 1\n    if gcd_list(arr) == 1:\n        break\nprint(gcd_list(arr))"
}
2022-04-16 20:13:47.954190 REASON stop
2022-04-16 20:13:47.972369 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef gcd(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nmax_gcd = 0\nfor a in A:\n    gcds = [gcd(a, b) for b in A]\n    max_gcd = max(max_gcd, max(gcds))\n\nprint(max_gcd)"
}
2022-04-16 20:13:47.972486 REASON stop
2022-04-16 20:13:47.995553 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# \u5165\u529b\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u5206\u6bcd\u306e\u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\n# \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\ndef lcm(a, b):\n    return a*b // gcd(a, b)\n\n# \u6700\u5c0f\u516c\u500d\u6570\u306e\u6700\u5927\u516c\u7d04\u6570\u304c\u7b54\u3048\nans = A[0]\nfor i in range(1, N):\n    ans = lcm(ans, A[i])\nprint(ans)"
}
2022-04-16 20:13:47.995668 REASON stop
2022-04-16 20:13:48.017461 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport math\nimport sys\n\ndef greatestCommonDivisor(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = list(map(lambda x: greatestCommonDivisor(a[0], x), a))\n    print(max(gcd))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:13:48.017587 REASON stop
