["\n\ndef main():\n    # Read number of divisors\n    n = int(input())\n\n    # Read divisors\n    divisors = [int(x) for x in input().split()]\n\n    # Create a set of divisors\n    divisors_set = set(divisors)\n\n    # Create a list of divisors\n    divisors_list = list(divisors_set)\n\n    # Sort the list\n    divisors_list.sort()\n\n    # Convert to a dictionary\n    divisors_dict = dict(zip(divisors_list, divisors_list))\n\n    # Loop through divisors\n    for divisor in divisors:\n        # Check if the first divisor is in the dictionary\n        if divisor in divisors_dict:\n            # Found first divisor, remove from dictionary\n            del divisors_dict[divisor]\n        else:\n            # No first divisor, so this is the second divisor\n            break\n\n    # Initialize product\n    product = divisor\n\n    # Loop through divisors\n    for divisor in divisors_list:\n        product *= divisor\n\n    # Get the first divisor\n    first_divisor = product // divisor\n\n    # Print the answer\n    print(first_divisor, divisor)\n\nif __name__ == \"__main__\":\n    main()", "\n\n\n#@author: raj.patel\n#@Date: 01/05/2019\n\ndef get_lcm(x,y):\n    if x > y:\n        greater = x\n    else:\n        greater = y\n\n    while True:\n        if greater % x == 0 and greater % y == 0:\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nn=int(input())\nl=list(map(int,input().split()))\nx=1\ny=1\nfor i in l:\n    x=get_lcm(x,i)\n    y=get_lcm(y,i)\nprint(x,y)", "\n#Pseudocode\n\"\"\"\n1) Create a dictionary with the numbers in the list as keys and their frequencies as values\n2) iterate through the dictionary\n  2.1) check the frequency of each number\n  2.2) if the frequency is 2, then append the number to a list\n  2.3) if the frequency is 1, then append the number to a different list\n3) multiply all the numbers in the list with frequency 2\n4) multiply all the numbers in the list with frequency 1\n\"\"\"\n\ndef main():\n    n = int(input())\n    my_list = list(map(int,input().split()))\n    my_dict = {}\n    for i in my_list:\n        if i not in my_dict.keys():\n            my_dict[i] = 1\n        else:\n            my_dict[i] += 1\n\n    list_1 = []\n    list_2 = []\n    for key,value in my_dict.items():\n        if value == 2:\n            list_1.append(key)\n        else:\n            list_2.append(key)\n    print(reduce(lambda x,y:x*y, list_1), reduce(lambda x,y:x*y, list_2))\n\nif __name__ == '__main__':\n    main()", "\n\nfrom collections import Counter\n\nn = int(input())\nlist_ = list(map(int, input().split()))\n\ncounter = Counter(list_)\n\na = 1\nb = 1\n\nfor num, count in counter.items():\n    if count % 2 == 1:\n        a *= num\n    else:\n        b *= num\n\nprint(a, b)", "\n\ndef find_divisors(n):\n    div = []\n    for i in range(1, n+1):\n        if (n % i == 0):\n            div.append(i)\n    return div\n\ndef solution(n, arr):\n    x_div = []\n    y_div = []\n    for i in range(n):\n        if arr[i] in x_div:\n            y_div.append(arr[i])\n        else:\n            x_div.append(arr[i])\n    x = 1\n    y = 1\n    for i in range(len(x_div)):\n        x = x * x_div[i]\n    for i in range(len(y_div)):\n        y = y * y_div[i]\n    return x, y\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(*solution(n, arr))", "\n\ndef main():\n    n = int(input())\n    divisors = [int(i) for i in input().split()]\n    #print(divisors)\n    x = 1\n    y = 1\n    for i in divisors:\n        if i*i <= x:\n            x *= i\n        elif i*i <= y:\n            y *= i\n        else:\n            print(\"error\")\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()", "\n\nnum = int(input())\ndivisors = [int(x) for x in input().split()]\n\ndivisors = sorted(divisors, reverse=True)\nx, y = divisors[0], divisors[1]\nfor i in range(2, num):\n    if divisors[i] != divisors[i-1]:\n        if divisors[i] > x:\n            y = x\n            x = divisors[i]\n        elif divisors[i] > y:\n            y = divisors[i]\nprint(x, y)", "\n\ndef gcd(a,b):\n    while b:\n        a,b = b, a%b\n    return a\n\ndef lcm(a,b):\n    return a*b//gcd(a,b)\n\ndef main():\n    n = int(input())\n    d = [int(i) for i in input().split()]\n    d.sort()\n    l = d[0]\n    for i in range(1,n):\n        l = lcm(l,d[i])\n    x = l\n    y = l\n    for i in range(n):\n        if x%d[i] == 0:\n            x //= d[i]\n        else:\n            y *= d[i]\n    print(x,y)\n\nif __name__ == \"__main__\":\n    main()"]