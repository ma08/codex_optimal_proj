["", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ndef median(a, l, r):\n    if (r - l + 1) % 2 == 0:\n        return (a[l + (r - l) // 2] + a[l + (r - l) // 2 - 1]) // 2\n    else:\n        return a[l + (r - l) // 2]\n\ndef count_occurrences(arr, x):\n    n = len(arr)\n    count = 0\n    for i in range(n):\n        if arr[i] == x:\n            count += 1\n    return count\n\nfor i in range(n):\n    a[i] = median(a, 0, i)\n\ncount = 0\nfor i in range(n):\n    if a[i] == m:\n        count += (count_occurrences(a, m) - 1)\n    else:\n        count += count_occurrences(a, m)\nprint(count)", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    answer = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i] <= m and arr[j] >= m:\n                answer += 1\n    print(answer)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nfreq = [0] * (max(a) + 1)\nfor i in a:\n    freq[i] += 1\n\n# Prefix sum\nfor i in range(1, max(a) + 1):\n    freq[i] += freq[i - 1]\n\n# print(freq)\n\n# for i in range(n):\n#     a[i] = freq[a[i] - 1] + 1\n\n# print(a)\n\ncount = 0\nfor i in range(n):\n    if a[i] == m:\n        count += 1\n        # print(a[i], a[i])\n    elif a[i] < m:\n        continue\n    else:\n        # print(a[i], m)\n        count += freq[a[i] - 1] - freq[m - 1] + 1\n\nprint(count)", "\n\ndef main(file):\n    n, m = map(int, file.readline().strip().split())\n    arr = list(map(int, file.readline().strip().split()))\n    arr.sort()\n    left = None\n    right = None\n    count = 0\n    while left != (n - 1) and right != (n - 1):\n        if left == None:\n            left = 0\n        elif arr[left] < m:\n            left += 1\n        if right == None:\n            right = n - 1\n        elif arr[right] > m:\n            right -= 1\n        if arr[left] == m and arr[right] == m:\n            count += (right - left + 1) * (right - left) / 2\n            left += 1\n        elif arr[left] == m and arr[right] != m:\n            left += 1\n        elif arr[left] != m and arr[right] == m:\n            right -= 1\n    print(int(count))\n\nif __name__ == \"__main__\":\n    with open('inputs/MEDIAN.txt') as f:\n        main(f)", "\n\ndef main():\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    cnt = 0\n    for i in range(n):\n        if a[i] == m:\n            cnt += 1\n        else:\n            break\n\n    if cnt == 0:\n        print(0)\n        return 0\n\n    j = i + cnt - 1\n\n    for i in range(n - cnt):\n        if a[i] == m:\n            cnt += 1\n        else:\n            break\n\n    for i in range(n):\n        if a[i] == m:\n            cnt += n - j\n        else:\n            break\n\n    print(cnt)\n\n\nif __name__ == '__main__':\n    main()", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\ncount = 0\n\n# Loop through the list\nfor i in range(n):\n    # If the value is larger than the median, break out of the loop\n    if a[i] >= m:\n        break\n    # If the value is less than the median, count the number of elements larger than the median\n    else:\n        count += n - i - 1\n\n# Add the number of elements equal to the median\ncount += a.count(m)\n\nprint(count)", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    return 0\n\n\nif __name__ == \"__main__\":\n    print(main())"]