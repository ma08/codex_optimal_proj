2022-04-16 19:23:38.665518 """
Polycarp knows that if the sum of the digits of a number is divisible by $3$, then the number itself is divisible by $3$. He assumes that the numbers, the sum of the digits of which is divisible by $4$, are also somewhat interesting. Thus, he considers a positive integer $n$ interesting if its sum of digits is divisible by $4$.

Help Polycarp find the nearest larger or equal interesting number for the given number $a$. That is, find the interesting number $n$ such that $n \ge a$ and $n$ is minimal.


-----Input-----

The only line in the input contains an integer $a$ ($1 \le a \le 1000$).


-----Output-----

Print the nearest greater or equal interesting number for the given number $a$. In other words, print the interesting number $n$ such that $n \ge a$ and $n$ is minimal.


-----Examples-----
Input
432

Output
435

Input
99

Output
103

Input
237

Output
237

Input
42

Output
44
"""
2022-04-16 19:23:38.665527 --------------------------
2022-04-16 19:23:53.071886 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef get_sum(n):\n    return sum([int(x) for x in str(n)])\n\ndef is_interesting(n):\n    return get_sum(n) % 4 == 0\n\ndef next_interesting(n):\n    while not is_interesting(n):\n        n += 1\n    return n\n\nprint next_interesting(int(raw_input()))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\na = int(input())\n\n#while (a % 4) != 0:\n#    a += 1\n\nprint(a + (4 - (a % 4)))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin, stdout\nfrom itertools import product\n\ndef is_interesting(n):\n    return int(sum(map(int, list(str(n))))) % 4 == 0\n\ndef get_nearest_interesting(a):\n    for i in range(a, a+1000):\n        if is_interesting(i):\n            return i\n\nstdout.write(str(get_nearest_interesting(int(stdin.readline().strip()))))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\na = int(input())\nif a%4==0:\n    print(a)\nelse:\n    while a%4!=0:\n        a+=1\n    print(a)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef interesting(n):\n  sum = 0\n  while n > 0:\n    sum += n % 10\n    n //= 10\n  return sum % 4 == 0\n\na = int(input())\nwhile not interesting(a):\n  a += 1\nprint(a)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n#Solution\nn=input()\nif(int(n[-1])==0 or int(n[-1])==4 or int(n[-1])==8):\n    print(n)\nelif(int(n[-1])==1 or int(n[-1])==5 or int(n[-1])==9):\n    print(int(n)+3)\nelif(int(n[-1])==2 or int(n[-1])==6):\n    print(int(n)+2)\nelse:\n    print(int(n)+1)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\na = int(input())\n\nsum_a = 0\n\nfor digit in str(a):\n    sum_a += int(digit)\n\nif sum_a % 4 == 0:\n    print(a)\nelse:\n    n = a\n    while n % 4 != 0:\n        n += 1\n    print(n)"
    }
  ],
  "created": 1650137018,
  "id": "cmpl-4xiJ8I7ERf9LfTqfa289BBoWiJhug",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 19:23:53.072170 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef get_sum(n):\n    return sum([int(x) for x in str(n)])\n\ndef is_interesting(n):\n    return get_sum(n) % 4 == 0\n\ndef next_interesting(n):\n    while not is_interesting(n):\n        n += 1\n    return n\n\nprint next_interesting(int(raw_input()))"
}
2022-04-16 19:23:53.072204 REASON stop
2022-04-16 19:23:53.122801 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": ""
}
2022-04-16 19:23:53.123020 REASON stop
2022-04-16 19:23:53.123570 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\na = int(input())\n\n#while (a % 4) != 0:\n#    a += 1\n\nprint(a + (4 - (a % 4)))"
}
2022-04-16 19:23:53.123637 REASON stop
2022-04-16 19:23:53.138568 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin, stdout\nfrom itertools import product\n\ndef is_interesting(n):\n    return int(sum(map(int, list(str(n))))) % 4 == 0\n\ndef get_nearest_interesting(a):\n    for i in range(a, a+1000):\n        if is_interesting(i):\n            return i\n\nstdout.write(str(get_nearest_interesting(int(stdin.readline().strip()))))"
}
2022-04-16 19:23:53.138672 REASON stop
2022-04-16 19:23:53.140065 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\na = int(input())\nif a%4==0:\n    print(a)\nelse:\n    while a%4!=0:\n        a+=1\n    print(a)"
}
2022-04-16 19:23:53.140216 REASON stop
2022-04-16 19:23:53.164203 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef interesting(n):\n  sum = 0\n  while n > 0:\n    sum += n % 10\n    n //= 10\n  return sum % 4 == 0\n\na = int(input())\nwhile not interesting(a):\n  a += 1\nprint(a)"
}
2022-04-16 19:23:53.164323 REASON stop
2022-04-16 19:23:53.165493 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n#Solution\nn=input()\nif(int(n[-1])==0 or int(n[-1])==4 or int(n[-1])==8):\n    print(n)\nelif(int(n[-1])==1 or int(n[-1])==5 or int(n[-1])==9):\n    print(int(n)+3)\nelif(int(n[-1])==2 or int(n[-1])==6):\n    print(int(n)+2)\nelse:\n    print(int(n)+1)"
}
2022-04-16 19:23:53.165592 REASON stop
2022-04-16 19:23:53.166236 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\na = int(input())\n\nsum_a = 0\n\nfor digit in str(a):\n    sum_a += int(digit)\n\nif sum_a % 4 == 0:\n    print(a)\nelse:\n    n = a\n    while n % 4 != 0:\n        n += 1\n    print(n)"
}
2022-04-16 19:23:53.166460 REASON stop
