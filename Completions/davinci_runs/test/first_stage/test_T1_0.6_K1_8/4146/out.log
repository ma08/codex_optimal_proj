2022-04-16 19:48:30.662738 """
A sequence a_1,a_2,... ,a_n is said to be /\/\/\/ when the following conditions are satisfied:
 - For each i = 1,2,..., n-2, a_i = a_{i+2}.
 - Exactly two different numbers appear in the sequence.
You are given a sequence v_1,v_2,...,v_n whose length is even.
We would like to make this sequence /\/\/\/ by replacing some of its elements.
Find the minimum number of elements that needs to be replaced.

-----Constraints-----
 - 2 \leq n \leq 10^5
 - n is even.
 - 1 \leq v_i \leq 10^5
 - v_i is an integer.

-----Input-----
Input is given from Standard Input in the following format:
n
v_1 v_2 ... v_n

-----Output-----
Print the minimum number of elements that needs to be replaced.

-----Sample Input-----
4
3 1 3 2

-----Sample Output-----
1

The sequence 3,1,3,2 is not /\/\/\/, but we can make it /\/\/\/ by replacing one of its elements: for example, replace the fourth element to make it 3,1,3,1.
"""
2022-04-16 19:48:30.662756 --------------------------
2022-04-16 19:48:48.096628 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    if n == 2:\n        print(1)\n        return\n    v.sort()\n    if v[0] == v[1]:\n        # a_1 = a_2\n        if v[-1] == v[-2]:\n            # a_n = a_{n-1}\n            if v[2] == v[3]:\n                # a_3 = a_4\n                print(n//2)\n                return\n            else:\n                # a_3 != a_4\n                print(n-2)\n                return\n        else:\n            # a_n != a_{n-1}\n            print(n-1)\n            return\n    else:\n        # a_1 != a_2\n        if v[-1] == v[-2]:\n            # a_n = a_{n-1}\n            print(n-1)\n            return\n        else:\n            # a_n != a_{n-1}\n            print(n)\n            return\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\nn = int(input())\narr = list(map(int, input().split()))\nc = Counter(arr)\nif len(c) != 2:\n    print(n)\nelif arr[0] == arr[-1]:\n    print(n-c[arr[0]])\nelse:\n    print(n-min(c[arr[0]], c[arr[-1]]))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\ncnt = [0] * (10 ** 5 + 1)\nfor x in v:\n    cnt[x] += 1\n\nc = 0\nfor i in range(1, 10 ** 5 + 1):\n    if cnt[i] > 0:\n        c += 1\n\nif c == 2:\n    print(0)\n    exit()\n\nans = 10 ** 5\nfor i in range(1, 10 ** 5 + 1):\n    if cnt[i] > 0 and cnt[i] % 2 == 1:\n        ans = min(ans, cnt[i])\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# Read input\nn = int(input())\nv = list(map(int, input().split()))\n\n# Initialise\nc = dict()\n\n# Count the number of occurences of each number\nfor i in range(n):\n    if v[i] in c:\n        c[v[i]] += 1\n    else:\n        c[v[i]] = 1\n\n# Get the numbers\nkeys = list(c.keys())\n\n# Get the number of elements that need to be replaced to make the sequence /\\/\\/\\/\n# In the case of the sample input: n = 4, keys = [3,1], count = [2,2]\n# Since the sequence needs to have exactly 2 different numbers, we need to replace 2-2=0 elements\nif len(keys) == 2:\n    print(abs(n/2 - c[keys[0]]))\n# In the case of a sequence that has more than 2 different numbers, we need to replace all the elements\nelse:\n    print(n)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = {}\n\nfor i in a:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\nans = math.inf\n\nfor i in count:\n    if count[i] >= 2:\n        ans = min(ans, count[i] - 2)\n\nif ans == math.inf:\n    print(len(a) // 2)\nelse:\n    print(len(a) // 2 - ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# -----Input-----\nn = int(input())\nv = [int(x) for x in input().split()]\n\n# -----Output-----\nprint(len(v) - max(v.count(x) for x in set(v)))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# v\u306e\u4e2d\u3067\u4e00\u756a\u591a\u304f\u51fa\u73fe\u3059\u308b\u6570\u5b57\u3092\u51fa\u529b\u3059\u308b(\u91cd\u8907\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3069\u308c\u3067\u3082\u826f\u3044)\n# \u305d\u306e\u4ed6\u306e\u6570\u5b57\u306f1\u3064\u3067\u3042\u308b\n# \u305d\u308c\u305e\u308c\u306e\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\u3092\u8a18\u9332\u3059\u308b\ncount = [0]*10**5\nfor i in range(n):\n    count[v[i]-1] += 1\n\n# \u4e00\u756a\u591a\u304f\u51fa\u73fe\u3057\u305f\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\nmax_count = max(count)\n# \u4e00\u756a\u591a\u304f\u51fa\u73fe\u3057\u305f\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\u3092\u51fa\u529b\u3059\u308b\nprint(n - max_count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\n\nd = {}\nfor i in a:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\n\nif len(d) == 2:\n    # if there are only two different numbers in the list\n    # get the number of times each number appears in the list\n    # ans = n - max(d)\n    # a better way\n    ans = n - max(d.values())\nelse:\n    # if there are more than two different numbers in the list\n    ans = -1\n\nprint(ans)"
    }
  ],
  "created": 1650138510,
  "id": "cmpl-4xihCItYYRebmGXh4NYelEWGh7uV7",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 19:48:48.096919 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    if n == 2:\n        print(1)\n        return\n    v.sort()\n    if v[0] == v[1]:\n        # a_1 = a_2\n        if v[-1] == v[-2]:\n            # a_n = a_{n-1}\n            if v[2] == v[3]:\n                # a_3 = a_4\n                print(n//2)\n                return\n            else:\n                # a_3 != a_4\n                print(n-2)\n                return\n        else:\n            # a_n != a_{n-1}\n            print(n-1)\n            return\n    else:\n        # a_1 != a_2\n        if v[-1] == v[-2]:\n            # a_n = a_{n-1}\n            print(n-1)\n            return\n        else:\n            # a_n != a_{n-1}\n            print(n)\n            return\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 19:48:48.096955 REASON stop
2022-04-16 19:48:48.257790 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\nn = int(input())\narr = list(map(int, input().split()))\nc = Counter(arr)\nif len(c) != 2:\n    print(n)\nelif arr[0] == arr[-1]:\n    print(n-c[arr[0]])\nelse:\n    print(n-min(c[arr[0]], c[arr[-1]]))"
}
2022-04-16 19:48:48.257972 REASON stop
2022-04-16 19:48:48.327650 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\ncnt = [0] * (10 ** 5 + 1)\nfor x in v:\n    cnt[x] += 1\n\nc = 0\nfor i in range(1, 10 ** 5 + 1):\n    if cnt[i] > 0:\n        c += 1\n\nif c == 2:\n    print(0)\n    exit()\n\nans = 10 ** 5\nfor i in range(1, 10 ** 5 + 1):\n    if cnt[i] > 0 and cnt[i] % 2 == 1:\n        ans = min(ans, cnt[i])\nprint(ans)"
}
2022-04-16 19:48:48.327763 REASON stop
2022-04-16 19:48:48.369320 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# Read input\nn = int(input())\nv = list(map(int, input().split()))\n\n# Initialise\nc = dict()\n\n# Count the number of occurences of each number\nfor i in range(n):\n    if v[i] in c:\n        c[v[i]] += 1\n    else:\n        c[v[i]] = 1\n\n# Get the numbers\nkeys = list(c.keys())\n\n# Get the number of elements that need to be replaced to make the sequence /\\/\\/\\/\n# In the case of the sample input: n = 4, keys = [3,1], count = [2,2]\n# Since the sequence needs to have exactly 2 different numbers, we need to replace 2-2=0 elements\nif len(keys) == 2:\n    print(abs(n/2 - c[keys[0]]))\n# In the case of a sequence that has more than 2 different numbers, we need to replace all the elements\nelse:\n    print(n)"
}
2022-04-16 19:48:48.369508 REASON stop
2022-04-16 19:48:48.408055 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = {}\n\nfor i in a:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\nans = math.inf\n\nfor i in count:\n    if count[i] >= 2:\n        ans = min(ans, count[i] - 2)\n\nif ans == math.inf:\n    print(len(a) // 2)\nelse:\n    print(len(a) // 2 - ans)"
}
2022-04-16 19:48:48.408176 REASON stop
2022-04-16 19:48:48.442084 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# -----Input-----\nn = int(input())\nv = [int(x) for x in input().split()]\n\n# -----Output-----\nprint(len(v) - max(v.count(x) for x in set(v)))"
}
2022-04-16 19:48:48.442192 REASON stop
2022-04-16 19:48:48.463848 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# v\u306e\u4e2d\u3067\u4e00\u756a\u591a\u304f\u51fa\u73fe\u3059\u308b\u6570\u5b57\u3092\u51fa\u529b\u3059\u308b(\u91cd\u8907\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3069\u308c\u3067\u3082\u826f\u3044)\n# \u305d\u306e\u4ed6\u306e\u6570\u5b57\u306f1\u3064\u3067\u3042\u308b\n# \u305d\u308c\u305e\u308c\u306e\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\u3092\u8a18\u9332\u3059\u308b\ncount = [0]*10**5\nfor i in range(n):\n    count[v[i]-1] += 1\n\n# \u4e00\u756a\u591a\u304f\u51fa\u73fe\u3057\u305f\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\nmax_count = max(count)\n# \u4e00\u756a\u591a\u304f\u51fa\u73fe\u3057\u305f\u6570\u5b57\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u304b\u3092\u51fa\u529b\u3059\u308b\nprint(n - max_count)"
}
2022-04-16 19:48:48.464091 REASON stop
2022-04-16 19:48:48.567649 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nans = 0\n\nd = {}\nfor i in a:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\n\nif len(d) == 2:\n    # if there are only two different numbers in the list\n    # get the number of times each number appears in the list\n    # ans = n - max(d)\n    # a better way\n    ans = n - max(d.values())\nelse:\n    # if there are more than two different numbers in the list\n    ans = -1\n\nprint(ans)"
}
2022-04-16 19:48:48.567785 REASON stop
