["\n\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\n\n# \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u4e92\u9664\u6cd5\u3092\u7528\u3044\u308b\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nprint(a * b // gcd(a, b))", "\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\na, b = map(int, input().split())\nprint(lcm(a, b))", "\n\n\ndef get_snack_num(a, b):\n    return a * b // math.gcd(a, b)\n\n\na, b = map(int, input().split())\nprint(get_snack_num(a, b))", "\n\nfrom math import gcd\n\na, b = map(int, input().split())\n\nprint(a * b // gcd(a, b))", "\n\na, b = map(int, input().split())\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n# The minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests.\nprint(a*b//gcd(a, b))", "\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef main():\n    a, b = map(int, input().split())\n    print((a * b) // gcd(a, b))\n\n\nif __name__ == '__main__':\n    main()", "\n\n# ==========\n# Solution 1\n# ==========\n#\n# def lcm(a, b):\n#     \"\"\"\n#     Return the lowest common multiple of a and b.\n#     \"\"\"\n#     if a < b:\n#         a, b = b, a\n#     for i in range(b, a * b + 1, b):\n#         if i % a == 0:\n#             return i\n#     return a * b\n#\n#\n# def main():\n#     a, b = map(int, input().split())\n#     print(lcm(a, b))\n#\n#\n# if __name__ == '__main__':\n#     main()\n\n\n# ==========\n# Solution 2\n# ==========\n\nimport fractions\n\n\ndef lcm(a, b):\n    \"\"\"\n    Return the lowest common multiple of a and b.\n    \"\"\"\n    return a * b // fractions.gcd(a, b)\n\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\n\nif __name__ == '__main__':\n    main()"]