2022-04-16 19:50:24.538537 """
We have a string S consisting of uppercase English letters. Additionally, an integer N will be given.
Shift each character of S by N in alphabetical order (see below), and print the resulting string.
We assume that A follows Z. For example, shifting A by 2 results in C (A \to B \to C), and shifting Y by 3 results in B (Y \to Z \to A \to B).

-----Constraints-----
 - 0 \leq N \leq 26
 - 1 \leq |S| \leq 10^4
 - S consists of uppercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print the string resulting from shifting each character of S by N in alphabetical order.

-----Sample Input-----
2
ABCXYZ

-----Sample Output-----
CDEZAB

Note that A follows Z.
"""
2022-04-16 19:50:24.538560 --------------------------
2022-04-16 19:50:40.567365 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    print(\"\".join([chr(ord(c) + n) if ord(c) + n <= ord(\"Z\") else chr(ord(c) + n - 26) for c in s]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    s = input()\n    shift = n % 26\n    alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    shift_alphabet = alphabet[shift:] + alphabet[:shift]\n    print(''.join(shift_alphabet[alphabet.index(c)] for c in s))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(input())\ns = str(input())\n\n# s\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\u3066\u3001n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\u305f\u3082\u306e\u3068\u3059\u308b\u3068\u3001\n# n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u306e\u8f9e\u66f8\u9806\u306f\u3001s\u306e\u8f9e\u66f8\u9806 + n \u3067\u6c42\u307e\u308b\n\n# s\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\ns = ''.join(sorted(list(s)))\n\n# n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\ns = ''.join(sorted(s[n:] + s[:n]))\n\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nchars = []\nfor i in s:\n    chars.append(chr((ord(i) - ord('A') + n)%26 + ord('A')))\n\nprint(''.join(chars))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# Get the input\nn = int(input())\ns = input()\n\n# Convert each letter to the letter n places to the right\nshifted = [chr(ord(c) + n) if ord(c) + n <= ord(\"Z\") else chr(ord(c) + n - 26) for c in s]\n\n# Print the result\nprint(\"\".join(shifted))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\n#string.ascii_uppercase -> \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n#ord() function -> returns the ASCII value of a character\n#chr() function -> returns the character from ASCII value\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord(\"Z\") else chr(ord(s) + N - 26), end=\"\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n\"\"\"\n\u6587\u5b57\u5217\u3092\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306bN\u6587\u5b57\u305a\u3089\u3059\n\"\"\"\n\nn = int(input())\ns = list(input())\n\n# \u6587\u5b57\u5217\u3092\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u305a\u3089\u3059\nfor i in range(len(s)):\n    s[i] = chr((ord(s[i]) - ord('A') + n) % 26 + ord('A'))\n\nprint(''.join(s))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# my answer\nn = int(input())\ns = input()\nresult = \"\"\n\nfor i in s:\n    result += chr(ord(i) + n) if ord(i) + n <= 90 else chr(ord(i) + n - 26)\n\nprint(result)\n\n# shortest answer in yukicoder\nprint(\"\".join(chr((ord(i) - 64 + int(input())) % 26 + 64) for i in input()))"
    }
  ],
  "created": 1650138624,
  "id": "cmpl-4xij2Y67gcRvemUU703B2rBb83MUw",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 19:50:40.567655 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    print(\"\".join([chr(ord(c) + n) if ord(c) + n <= ord(\"Z\") else chr(ord(c) + n - 26) for c in s]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 19:50:40.567689 REASON stop
2022-04-16 19:50:40.623761 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    s = input()\n    shift = n % 26\n    alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    shift_alphabet = alphabet[shift:] + alphabet[:shift]\n    print(''.join(shift_alphabet[alphabet.index(c)] for c in s))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 19:50:40.624083 REASON stop
2022-04-16 19:50:40.624838 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(input())\ns = str(input())\n\n# s\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\u3066\u3001n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\u305f\u3082\u306e\u3068\u3059\u308b\u3068\u3001\n# n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u306e\u8f9e\u66f8\u9806\u306f\u3001s\u306e\u8f9e\u66f8\u9806 + n \u3067\u6c42\u307e\u308b\n\n# s\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\ns = ''.join(sorted(list(s)))\n\n# n\u6587\u5b57\u305a\u3089\u3057\u305f\u3082\u306e\u3092\u8f9e\u66f8\u9806\u3067\u4e26\u3079\u66ff\u3048\ns = ''.join(sorted(s[n:] + s[:n]))\n\nprint(s)"
}
2022-04-16 19:50:40.625060 REASON stop
2022-04-16 19:50:40.636850 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nchars = []\nfor i in s:\n    chars.append(chr((ord(i) - ord('A') + n)%26 + ord('A')))\n\nprint(''.join(chars))"
}
2022-04-16 19:50:40.636962 REASON stop
2022-04-16 19:50:40.649976 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# Get the input\nn = int(input())\ns = input()\n\n# Convert each letter to the letter n places to the right\nshifted = [chr(ord(c) + n) if ord(c) + n <= ord(\"Z\") else chr(ord(c) + n - 26) for c in s]\n\n# Print the result\nprint(\"\".join(shifted))"
}
2022-04-16 19:50:40.650087 REASON stop
2022-04-16 19:50:40.652255 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\n#string.ascii_uppercase -> \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n#ord() function -> returns the ASCII value of a character\n#chr() function -> returns the character from ASCII value\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord(\"Z\") else chr(ord(s) + N - 26), end=\"\")"
}
2022-04-16 19:50:40.652357 REASON stop
2022-04-16 19:50:40.654541 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n\"\"\"\n\u6587\u5b57\u5217\u3092\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306bN\u6587\u5b57\u305a\u3089\u3059\n\"\"\"\n\nn = int(input())\ns = list(input())\n\n# \u6587\u5b57\u5217\u3092\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u305a\u3089\u3059\nfor i in range(len(s)):\n    s[i] = chr((ord(s[i]) - ord('A') + n) % 26 + ord('A'))\n\nprint(''.join(s))"
}
2022-04-16 19:50:40.654643 REASON stop
2022-04-16 19:50:40.656665 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# my answer\nn = int(input())\ns = input()\nresult = \"\"\n\nfor i in s:\n    result += chr(ord(i) + n) if ord(i) + n <= 90 else chr(ord(i) + n - 26)\n\nprint(result)\n\n# shortest answer in yukicoder\nprint(\"\".join(chr((ord(i) - 64 + int(input())) % 26 + 64) for i in input()))"
}
2022-04-16 19:50:40.656759 REASON stop
