["\n\ndef is_prime(n):\n    for i in range(2, int(n**0.5)+1):\n        if n % i == 0:\n            return i\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n, 2*n):\n    if b[i] == 2:\n        a.append(2)\n    elif is_prime(b[i]) == True:\n        a.append(b[i-n])\n    else:\n        a.append(b[i])\n\nprint(*a)", "\n\nfrom math import *\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i+n])\n\nprint(*a)", "\n\n#---------------------------------------------------------------------------------------------------------------------\n\nprimes_set = set()\n\ndef is_prime(n):\n    global primes_set\n    if n in primes_set:\n        return True\n    elif n < 2:\n        return False\n    else:\n        for x in range(2, n):\n            if n % x == 0:\n                return False\n        primes_set.add(n)\n        return True\n\n#---------------------------------------------------------------------------------------------------------------------\n\nimport math\n\ndef get_greatest_divisor(n):\n    for i in range(2, math.ceil(math.sqrt(n))):\n        if n % i == 0:\n            return n // i\n\n#---------------------------------------------------------------------------------------------------------------------\n\ndef get_primes_list():\n    global primes_set\n    primes_list = list(primes_set)\n    primes_list.sort()\n    return primes_list\n\n#---------------------------------------------------------------------------------------------------------------------\n\ndef get_prime(n):\n    global primes_set\n    primes_list = get_primes_list()\n    if len(primes_list) > n:\n        return primes_list[n-1]\n    else:\n        while len(primes_list) < n:\n            num = primes_list[-1] + 1\n            while True:\n                if is_prime(num):\n                    primes_list.append(num)\n                    break\n                num += 1\n    return primes_list[n-1]\n\n#---------------------------------------------------------------------------------------------------------------------\n\ndef get_a_list(b_list):\n    a_list = []\n    i = 0\n    while i < len(b_list):\n        if is_prime(b_list[i]):\n            a_list.append(get_prime(b_list[i+1]))\n        else:\n            a_list.append(b_list[i] * b_list[i+1])\n        i += 2\n    return a_list\n\n#---------------------------------------------------------------------------------------------------------------------\n\nn = int(input())\nb_list = [int(i) for i in input().split()]\n\na_list = get_a_list(b_list)\nprint(' '.join(str(i) for i in a_list))", "\nimport math\n\ndef prime_sieve(n):\n    sieve = [True] * (n//2)\n    for i in range(3,int(n**0.5)+1,2):\n        if sieve[i//2]:\n            sieve[i*i//2::i] = [False] * ((n-i*i-1)//(2*i)+1)\n    return [2] + [2*i+1 for i in range(1,n//2) if sieve[i]]\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\ndef main():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    # sieve = prime_sieve(10**6)\n    # print(sieve)\n    for i in range(n):\n        if b[2*i] in prime_factors(b[2*i+1]):\n            a.append(b[2*i+1])\n        else:\n            a.append(b[2*i])\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n\n\nif __name__ == '__main__':\n    main()", "\n\n# Solution\n\nimport itertools\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i = i + 6\n    return True\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if is_prime(b[2*i]):\n            a.append(b[2*i + 1])\n        else:\n            a.append(b[2*i])\n    return a\n\nn = int(input())\nb = [int(x) for x in input().split()]\n\na = solve(n, b)\n\nprint(\" \".join([str(x) for x in a]))", "\n\nimport sys\nimport math\n\ndef isPrime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    if n == 3:\n        return True\n    if n % 3 == 0:\n        return False\n\n    i = 5\n    w = 2\n\n    while i * i <= n:\n        if n % i == 0:\n            return False\n\n        i += w\n        w = 6 - w\n\n    return True\n\ndef main():\n    N = int(sys.stdin.readline())\n    B = [int(x) for x in sys.stdin.readline().split()]\n    A = []\n    for i in range(0, 2*N, 2):\n        x = B[i]\n        y = B[i+1]\n        if isPrime(x):\n            A.append(y)\n        else:\n            A.append(x)\n    print(\" \".join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()", "\n#------------------------------------------------------------------------------#"]