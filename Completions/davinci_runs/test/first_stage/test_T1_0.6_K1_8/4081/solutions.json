["x=int(input())\na=list(map(int,input().strip().split()))\ny=[]\nc=0\nf1=1\nf2=1\nl=0\nr=x-1\nop=[]\nwhile(f1 or f2):\n    if(l>r):\n        break\n    if(a[l]<c):\n        f1=0\n    if(a[r]<c):\n        f2=0\n    if(f1 and f2):\n        if(a[l]<=a[r]):\n            c=a[l]\n            l=l+1\n            op.append('L')\n        else:\n            c=a[r]\n            r=r-1\n            op.append('R')\n    elif(f1):\n        c=a[l]\n        l=l+1\n        op.append('L')\n    elif(f2):\n        c=a[r]\n        r=r-1\n        op.append('R')\nprint(len(op))\nprint(\"\".join(op))\n", "n = int(input())\na = list(map(int,input().split()))\nt = 0\nc = 0\nl = 0\nb = ''\nr = n-1\nwhile l<=r:\n    m1 = min(a[l],a[r])\n    m2 = max(a[l],a[r])\n    if m1>t:\n        t = m1\n        if m1==a[r]:\n            r-=1\n            b+='R'\n        elif m1==a[l]:\n            l+=1\n            b+='L'\n        c+=1\n    elif m2>t:\n        t = m2\n        if m2==a[r]:\n            r-=1\n            b+='R'\n        elif m2==a[l]:\n            l+=1\n            b+='L'\n        c+=1\n    else:\n        break\n\nprint(c)\nprint(b)\n", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n = self.next_int()\n        x = [self.next_int() for _ in range(0, n)]\n        d = 0\n        l = 0\n        r = n - 1\n        rs = []\n        while l <= r:\n            if x[l] < d and x[r] < d:\n                break\n            if x[l] < d:\n                rs.append('R')\n                d = x[r]\n                r -= 1\n            elif x[r] < d:\n                rs.append('L')\n                d = x[l]\n                l += 1\n            elif x[r] < x[l]:\n                rs.append('R')\n                d = x[r]\n                r -= 1\n            else:\n                rs.append('L')\n                d = x[l]\n                l += 1\n        print(len(rs))\n        print(''.join(rs))\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    k = 0\n    mi = 0\n    ans = \"\"\n    while True:\n        if a[i] < a[j]:\n            if mi < a[i]:\n                mi = a[i]\n                i += 1\n                ans += \"L\"\n            elif mi < a[j]:\n                mi = a[j]\n                j -= 1\n                ans += \"R\"\n            else:\n                break\n        else:\n            if mi < a[j]:\n                mi = a[j]\n                j -= 1\n                ans += \"R\"\n            elif mi < a[i]:\n                mi = a[i]\n                i += 1\n                ans += \"L\"\n            else:\n                break\n    print(len(ans))\n    print(ans)\n    return 0\n\nmain()", "from collections import deque\nn = int(input())\nA = list(map(int, input().split()))\nA = deque(A)\nans = ''\nlast = 0\nwhile len(A) and (A[0] > last or A[-1] > last):\n    if A[0] > last and A[-1] > last:\n        if A[0] < A[-1]:\n            last = A[0]\n            A.popleft()\n            ans += 'L'\n        else:\n            last = A[-1]\n            A.pop()\n            ans += 'R'\n    else:\n        if A[0] > last:\n            last = A[0]\n            A.popleft()\n            ans += 'L'\n        else:\n            last = A[-1]\n            A.pop()\n            ans += 'R'\nprint(len(ans))\nprint(ans)\n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nlast = 0\nleft = 0\nright = n-1\nans = 0\noutput = []\n\nwhile left <= right:\n  if a[left] > last:\n    if a[right] > last:\n      if a[left] < a[right]:\n        last = a[left]\n        output.append('L')\n        left += 1\n      else:\n        last = a[right]\n        output.append('R')\n        right -= 1\n    else:\n      last = a[left]\n      output.append('L')\n      left += 1\n    ans += 1\n  elif a[right] > last:\n    last = a[right]\n    output.append('R')\n    right -= 1\n    ans += 1\n  else:\n    break\n\nprint(ans)\nprint(''.join(output))\n\n", "from collections import *\n\nn = int(input())\n\nM = deque(list(map(int, input().split())))\n\nans = []\nlast = None\nwhile len(M) > 0:\n    if ans == []:\n        if M[-1] <= M[0]:\n            ans += ['R']\n            last = M[-1]\n            M.pop()\n        else:\n            ans += ['L']\n            last = M[0]\n            M.popleft()\n    else:\n        if M[-1] <= last and M[0] <= last:\n            break\n        \n        if M[-1] <= last:\n            ans += [\"L\"]\n            last = M[0]\n            M.popleft()\n            continue\n        \n        if M[0] <= last:\n            ans += ['R']\n            last = M[-1]\n            M.pop()\n            continue\n        \n        if M[0] <= M[-1]:\n            ans += [\"L\"]\n            last = M[0]\n            M.popleft()\n        elif M[-1] <= M[0]:\n            ans += [\"R\"]\n            last = M[-1]\n            M.pop()\n\nprint(len(ans))\nprint(\"\".join(ans)) \n", "n = int(input())\na = [int(i) for i in input().split()]\nlast = -1\ni = 0\nj = n - 1\nans = ''\nwhile i <= j:\n    if max(a[i], a[j]) <= last:\n        break\n    if a[i] < a[j]:\n        if a[i] > last:\n            ans += 'L'\n            last = a[i]\n            i += 1\n        else:\n            ans += 'R'\n            last = a[j]\n            j -= 1\n    else:\n        if a[j] > last:\n            ans += 'R'\n            last = a[j]\n            j -= 1\n        else:\n            ans += 'L'\n            last = a[i]\n            i += 1\nprint(len(ans))\nprint(ans)\n", "n = int(input())\nu = list(map(int, input().split()))\ni1 = 0; i2 = n - 1\nans = []\nm = 0\np = []\nwhile 1 == 1:\n    m1 = min(u[i1], u[i2])\n    m2 = max(u[i1], u[i2])\n    if m > m2:\n        break\n    #print(m, m1, m2)\n    if m > m1:\n        p.append(m2)\n        m = m2\n        if u[i1] > u[i2]:\n            i1 += 1\n            ans.append('L')\n        else:\n            i2 -= 1\n            ans.append('R')\n    else:\n        p.append(m1)\n        m = m1\n        if u[i1] < u[i2]:\n            i1 += 1\n            ans.append('L')\n        else:\n            i2 -= 1\n            ans.append('R')\n    if i1 > i2:\n        break\n    #print(p)\nprint(len(ans))\nprint(''.join(ans))\n", "n = int(input())\nsp = list(map(int, input().split()))\npr = 0\nposl = \"\"\nl = 0\nr = n - 1\nwhile True:\n\tfl = True\n\tif sp[l] < sp[r]:\n\t\tif sp[l] > pr:\n\t\t\tpr = sp[l]\n\t\t\tl += 1\n\t\t\tposl += \"L\"\n\t\telif sp[r] > pr:\n\t\t\tpr = sp[r]\n\t\t\tr -= 1\n\t\t\tposl += \"R\"\n\t\telse:\n\t\t\tfl = False\n\telse:\n\t\tif sp[r] > pr:\n\t\t\tpr = sp[r]\n\t\t\tr -= 1\n\t\t\tposl += \"R\"\n\t\telif sp[l] > pr:\n\t\t\tpr = sp[l]\n\t\t\tl += 1\n\t\t\tposl += \"L\"\n\t\telse:\n\t\t\tfl = False\n\tif not fl:\n\t\tbreak\nprint(len(posl))\nprint(posl)\n", "n = int(input())\nnum = [*list(map(int, input().split()))]\nans = \"\"\ncurrent = -1\ni = 0\nj = n - 1\nwhile True:\n    if j < i:\n        break\n    if current < num[i] <= num[j] or num[j] <= current < num[i]:\n        ans += \"L\"\n        current = num[i]\n        i += 1\n        continue\n    if current < num[j] <= num[i] or num[i] <= current < num[j]:\n        ans += \"R\"\n        current = num[j]\n        j -= 1\n        continue\n    break\nprint(len(ans))\nprint(ans)\n", "n = int(input())\ni = 0\nj = n-1\ncur = 0\nls = list(map(int, input().split()))\nres = []\nwhile i<=j:\n    if ls[i]>cur and ls[j]>cur:\n        if ls[i]<ls[j]: res.append('L'); cur = ls[i]; i+=1\n        else: res.append('R'); cur = ls[j]; j-=1\n    elif ls[i]>cur: res.append('L'); cur = ls[i]; i+=1\n    elif ls[j]>cur: res.append('R'); cur = ls[j]; j-=1\n    else: break\nprint(len(res))\nfor i in res: print(i, end='')\nprint()\n", "\nn = int(input())\n\narr = list(map(int,input().strip().split()))\n\nfl = 1\n\nans = \"\"\nc = 0\n\nst = 0\nen = n-1\n\nla = 0\n\nwhile fl:\n    if arr[st] > la:\n        if arr[en]>la:\n            if arr[en] > arr[st]:\n                st+=1\n                la = arr[st-1]\n                ans+=\"L\"\n                c+=1\n            else:\n                en-=1\n                la  = arr[en+1]\n                ans+=\"R\"\n                c+=1\n        else:\n            st+=1\n            la = arr[st-1]\n            ans+=\"L\"\n            c+=1\n    else:\n        if arr[en]>la:\n            en-=1\n            la =arr[en+1]\n            ans+=\"R\"\n            c+=1\n        else:\n            break;\nprint(c)\nprint(ans)\n                \n", "n = int(input())\na = [int(item) for item in input().split()]\n\ns = []\ni = 0\nj = n - 1\nans = []\nwhile i <= j:\n    if a[i] < a[j]:\n        if not s or s[-1] < a[i]:\n            s.append(a[i])\n            ans.append('L')\n            i += 1\n        elif not s or s[-1] < a[j]:\n            s.append(a[j])\n            ans.append('R')\n            j -= 1\n        else:\n            break\n    else:\n        if not s or s[-1] < a[j]:\n            ans.append('R')\n            s.append(a[j])\n            j -= 1\n        elif not s or s[-1] < a[i]:\n            s.append(a[i])\n            ans.append('L')\n            i += 1\n        else:\n            break\n\nprint(len(s))\nprint(''.join(ans))\n", "3\n\ndef main():\n    # skip N\n    input()\n    a = [int(x) for x in input().split(' ')]\n    n = len(a)\n\n    l, r = 0, n - 1\n    res = []\n    \n    last = 0\n    picked = True\n\n    while l <= r and picked:\n        picked = False\n        if last < a[l] and last < a[r]:\n            if a[l] < a[r]:\n                last = a[l]\n                res.append('L')\n                l += 1\n            else:\n                last = a[r]\n                res.append('R')\n                r -= 1\n            picked = True\n            continue\n        \n        if last < a[l]:\n            last = a[l]\n            res.append('L')\n            l += 1\n            picked = True\n            continue\n        \n        if last < a[r]:\n            last = a[r]\n            res.append('R')\n            r -= 1\n            picked = True\n            continue\n    \n    print(len(res))\n    print(\"\".join(res))\n        \n\ndef __starting_point():\n    main()\n__starting_point()", "\nn = int(input())\n\narr = list(map(int,input().strip().split()))\n\nfl = 1\n\nans = \"\"\nc = 0\n\nst = 0\nen = n-1\n\nla = 0\n\nwhile fl:\n    if st>=n or en<=-1:\n        break\n    if arr[st] > la:\n        if arr[en]>la:\n            if arr[en] > arr[st]:\n                st+=1\n                la = arr[st-1]\n                ans+=\"L\"\n                c+=1\n            else:\n                en-=1\n                la  = arr[en+1]\n                ans+=\"R\"\n                c+=1\n        else:\n            st+=1\n            la = arr[st-1]\n            ans+=\"L\"\n            c+=1\n    else:\n        if arr[en]>la:\n            en-=1\n            la =arr[en+1]\n            ans+=\"R\"\n            c+=1\n        else:\n            break;\nprint(c)\nprint(ans)\n                \n", "import sys\nfrom collections import deque\n\n\nfin = sys.stdin.readline\nn = int(fin())\na_list = deque(int(elem) for elem in fin().split())\nlast_elem = float('-inf')\nlength_sequence = 0\noperations = []\nwhile a_list:\n    if last_elem < a_list[-1] <= a_list[0]:\n        last_elem = a_list.pop()\n        operations.append(\"R\")\n    elif last_elem < a_list[0] <= a_list[-1]:\n        last_elem = a_list.popleft()\n        operations.append(\"L\")\n    elif a_list[0] < last_elem < a_list[-1]:\n        last_elem = a_list.pop()\n        operations.append(\"R\")\n    elif a_list[-1] < last_elem < a_list[0]:\n        last_elem = a_list.popleft()\n        operations.append(\"L\")\n    else:\n        break\n    length_sequence += 1\nprint(length_sequence)\nprint(\"\".join(operations))\n", "n=int(input())\narr=list(map(int,input().split()))\ni=0\nj=n-1\nans=''\nprev=0\nwhile(i<j):\n\tif(arr[i]<arr[j]):\n\t\tif(arr[i]>prev):\n\t\t\tans+='L'\n\t\t\tprev=arr[i]\n\t\t\ti+=1\n\t\telif(arr[j]>prev):\n\t\t\tans+='R'\n\t\t\tprev=arr[j]\n\t\t\tj-=1\n\t\telse:\n\t\t\tbreak\n\telif(arr[i]>arr[j]):\n\t\tif(arr[j]>prev):\n\t\t\tans+='R'\n\t\t\tprev=arr[j]\n\t\t\tj-=1\n\t\telif(arr[i]>prev):\n\t\t\tans+='L'\n\t\t\tprev=arr[i]\n\t\t\ti+=1\n\t\telse:\n\t\t\tbreak\n\t#print(i,j)\nif(i==j and arr[i]>prev):\n\tans+='R'\n\tprev=arr[i]\nprint(len(ans))\nprint(ans)\n\n", "n = int(input())\na = list(map(int, input().split()))\nl = 0\nr = n - 1\not = []\nprot = \"\"\nif a[l] < a[r]:\n\tot.append(a[l])\n\tl += 1\n\tprot += \"L\"\nelse:\n\tot.append(a[r])\n\tr -= 1\n\tprot += \"R\"\nrun = True\nwhile run:\n\tif l > r:\n\t\t#print(\"A\")\n\t\trun = False\n\telif l == r:\n\t\tif a[l] >= ot[-1]:\n\t\t\tprot += \"R\"\n\t\t#print(\"B\")\n\t\trun = False\n\telse:\n\t\tif ot[-1] <= a[l] <= a[r]:\n\t\t\tot.append(a[l])\n\t\t\tl += 1\n\t\t\tprot += \"L\"\n\t\t\t#print(\"1\")\n\t\telif ot[-1] <= a[r] <= a[l]:\n\t\t\tot.append(a[r])\n\t\t\tr -= 1\n\t\t\tprot += \"R\"\n\t\t\t#print(\"2\")\n\t\telif ot[-1] <= a[l]:\n\t\t\tot.append(a[l])\n\t\t\tl += 1\n\t\t\tprot += \"L\"\n\t\t\t#print(\"3\")\n\t\telif ot[-1] <= a[r]:\n\t\t\tot.append(a[r])\n\t\t\tr -= 1\n\t\t\tprot += \"R\"\n\t\t\t#print(\"4\")\n\t\telse:\n\t\t\t#print(\"C\")\n\t\t\trun = False\nprint(len(prot))\nprint(prot)\n", "import math\nn = int(input())\na = list(map(int, input().split()))\nl = 0\nr = len(a)-1\nans = []\nlast = -math.inf\nwhile True:\n    if l > r:\n        break\n    if a[l] <= a[r] and a[l] > last:\n        ans.append('L')\n        last = a[l]\n        l += 1\n    elif a[r] > last:\n        ans.append('R')\n        last = a[r]\n        r -= 1\n    elif a[l] > last:\n        ans.append('L')\n        last = a[l]\n        l += 1\n    else:\n        break\nprint(len(ans))\nprint(''.join(ans))", "from collections import deque\nn = int(input())\na = deque(map(int, input().split()))\n\ncnt = 0\nans = []\nlast = 0\n\nwhile cnt < n and max(a[0], a[-1]) > last:\n\tcnt += 1\n\tif a[0] > last and (a[0] < a[-1] or a[-1] <= last):\n\t\tans.append('L')\n\t\tlast = a.popleft()\n\telse:\n\t\tans.append('R')\n\t\tlast = a.pop()\n\nprint(cnt)\nprint(\"\".join(ans))", "from collections import deque\nn=int(input())\na=list(map(int,input().split()))\na=deque(a)\np=0\nb=[]\nfor i in range(n):\n    if a[0]>=a[-1] and a[-1]>p:\n        # print(\"R\",end='')\n        p=a.pop()\n        b.append(\"R\")\n    elif a[0]>=a[-1] and a[0]>p:\n        # print(\"L\",end='')\n        p=a.popleft()\n        b.append(\"L\")\n    elif a[-1]>=a[0] and a[0]>p:\n        # print(\"L\",end='')\n        p=a.popleft()\n        b.append(\"L\")\n    elif a[-1]>=a[0] and a[-1]>p:\n        # print(\"R\",end='')\n        p=a.pop()\n        b.append(\"R\")\n    else:\n        break\n# print()    \nprint(len(b))\nprint(\"\".join(b))\n        \n    \n", "from collections import deque\n\ndef solve(A):\n    res = []\n    last = 0\n    while A:\n        if max(A[0],A[-1]) <= last:\n            return res\n\n        if A[0] == A[-1]:\n            v = A[0]-1\n            for i,a in enumerate(A):\n                if v < a:\n                    v = a\n                else:\n                    break\n            else:\n                i += 1\n            L = i\n            v = A[-1]-1\n            for i,a in enumerate(reversed(A)):\n                if v < a:\n                    v = a\n                else:\n                    break\n            else:\n                i += 1\n            R = i\n            _,op = max((L, ['L']*L), (R, ['R']*R))\n            res.extend(op)\n            return res\n        \n        v, op = min((v, op) for v,op in ((A[0], 'L'), (A[-1], 'R')) if v > last)\n        last = v\n        res.append(op)\n        if op == 'L':\n            A.popleft()\n        else:\n            A.pop()\n\n\ndef main():\n    input()\n    A = deque(map(int,input().split()))\n\n    res = solve(A)\n    print(len(res))\n    print(*res, sep='')\n\n\nmain()", "n = int(input())\nrow = list(map(int, input().split()))\nl = 0\nr = n - 1\nlast = 0\nans = ''\nwhile 1:\n\n    if row[l] < row[r]:\n        if row[l] > last:\n            ans += 'L'\n            last = row[l]\n            l += 1\n        elif row[r] > last:\n            ans += 'R'\n            last = row[r]\n            r  -= 1\n        else:\n            break\n    else:\n        if row[r] > last:\n            ans += 'R'\n            last = row[r]\n            r -= 1\n        elif row[l] > last:\n            ans += 'L'\n            last = row[l]\n            l += 1\n        else:\n            break\n\nprint(len(ans))\nprint(ans)\n", "from collections import deque\n\nn = int(input())\na = deque(list(map(int, input().split())))\n\nb = []\nd = []\nif a[0] < a[-1]:\n    b.append('L')\n    d.append(a[0])\n    a.popleft()\nelse:\n    d.append(a[-1])\n    a.pop()\n    b.append('R')\n\nwhile a:\n    c = d[-1]\n    if a[0] < a[-1]:\n        if c < a[0]:\n            d.append(a[0])\n            a.popleft()\n            b.append('L')\n        elif c < a[-1]:\n            d.append(a[-1])\n            a.pop()\n            b.append('R')\n        else:\n            break\n    else:\n        if c < a[-1]:\n            d.append(a[-1])\n            a.pop()\n            b.append('R')\n        elif c < a[0]:\n            d.append(a[0])\n            a.popleft()\n            b.append('L')\n        else:\n            break\nprint(len(b))\nprint(''.join(b))\n"]