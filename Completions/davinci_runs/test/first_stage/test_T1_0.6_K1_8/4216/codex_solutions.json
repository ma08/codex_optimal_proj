["\n\nimport math\n\nN = int(input())\n\nfor i in range(1, int(math.sqrt(N)+1)):\n    if N%i == 0:\n        print(len(str(N//i)))\n        break", "\n\nimport math\n\ndef main():\n    n = int(input())\n    a = math.floor(math.sqrt(n))\n    b = math.ceil(math.sqrt(n))\n    f_min = 0\n    for i in range(a,b+1):\n        if n % i == 0:\n            f = max(len(str(i)),len(str(n//i)))\n            if f_min == 0 or f < f_min:\n                f_min = f\n    print(f_min)\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\n\n# \u6839\u636e\u6570\u8bba\u77e5\u8bc6\uff0cN\u7684\u56e0\u6570\u6700\u591a\u53ea\u6709N\u7684\u5f00\u65b9\u6570\u4e2a\uff0c\u7a77\u4e3e\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u3002\nfor i in range(1, int(N**0.5) + 1):\n    if N % i == 0:\n        print(len(str(i)) + len(str(N//i)))\n        break", "\n\ndef main():\n    N = int(input())\n    ans = len(str(N))\n    i = 1\n    while i*i < N:\n        if N % i == 0:\n            b = i\n            a = N // i\n            ans = min(ans, max(len(str(a)), len(str(b))))\n        i += 1\n    if i*i == N:\n        ans = min(ans, len(str(i)))\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\nN = int(input())\n\nif(N==1):\n\tprint(1)\nelse:\n\t# \u5e73\u65b9\u6839\u3092\u6c42\u3081\u3066\u3001\u305d\u308c\u4ee5\u4e0b\u306e\u7d04\u6570\u3092\u5168\u63a2\u7d22\n\tsqrt_N = math.sqrt(N)\n\tmin_F = 10\n\tfor i in range(2,int(sqrt_N)+1):\n\t\tif(N%i == 0):\n\t\t\tF = max(len(str(i)),len(str(N//i)))\n\t\t\tif(F<min_F):\n\t\t\t\tmin_F = F\n\tprint(min_F)", "\n\nN = int(input())\n\nlargest_factor = 0\nfor i in range(1, int(N**0.5) + 1):\n    if N % i == 0:\n        largest_factor = i\n\nprint(len(str(largest_factor)))", "\n\nimport math\nimport sys\n\nN = int(input())\n\n# F(A,B) = max(# digits A, # digits B)\n# A * B = N\n# => # digits B = log(N) - log(A)\n# => # digits A = log(N) - log(B)\n# => F(A,B) = log(N) - min(log(A), log(B))\n\nprint(int(math.log10(N))+1)"]