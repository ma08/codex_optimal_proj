2022-04-16 20:25:58.118117 """
Let's call (yet again) a string good if its length is even, and every character in odd position of this string is different from the next character (the first character is different from the second, the third is different from the fourth, and so on). For example, the strings good, string and xyyx are good strings, and the strings bad, aa and aabc are not good. Note that the empty string is considered good.

You are given a string $s$, you have to delete minimum number of characters from this string so that it becomes good.


-----Input-----

The first line contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of characters in $s$.

The second line contains the string $s$, consisting of exactly $n$ lowercase Latin letters.


-----Output-----

In the first line, print one integer $k$ ($0 \le k \le n$) — the minimum number of characters you have to delete from $s$ to make it good.

In the second line, print the resulting string $s$. If it is empty, you may leave the second line blank, or not print it at all.


-----Examples-----
Input
4
good

Output
0
good

Input
4
aabc

Output
2
ab

Input
3
aaa

Output
3
"""
2022-04-16 20:25:58.118154 --------------------------
2022-04-16 20:26:21.073843 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# --- Solution ---\nimport re\n\ndef is_good(string):\n    if len(string) % 2 == 0:\n        for i in range(0, len(string), 2):\n            if string[i] == string[i+1]:\n                return False\n        return True\n    else:\n        return False\n\nn = int(input())\ns = input()\n\nif is_good(s):\n    print(0)\n    print(s)\nelse:\n    for i in range(len(s)):\n        for j in range(len(s)):\n            s_new = s[:i] + s[i+1:]\n            s_new = s_new[:j] + s_new[j+1:]\n\n            if is_good(s_new):\n                print(len(s) - len(s_new))\n                print(s_new)\n                break\n        else:\n            continue\n        break"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nfor line in sys.stdin:\n    n = int(line)\n    s = next(sys.stdin)\n    s = s.strip()\n    k = 0\n    i = 0\n    while i < len(s) - 1:\n        if s[i] == s[i + 1]:\n            s = s[:i] + s[i + 1:]\n            k += 1\n        else:\n            i += 2\n    if len(s) % 2 == 1:\n        s = s[:-1]\n        k += 1\n    print(k)\n    if k != len(s):\n        print(s)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    '''\n    You are given a string $s$, you have to delete minimum number of characters from this string so that it becomes good.\n\n    -----Input-----\n\n    The first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of characters in $s$.\n\n    The second line contains the string $s$, consisting of exactly $n$ lowercase Latin letters.\n\n\n    -----Output-----\n\n    In the first line, print one integer $k$ ($0 \\le k \\le n$) \u2014 the minimum number of characters you have to delete from $s$ to make it good.\n\n    In the second line, print the resulting string $s$. If it is empty, you may leave the second line blank, or not print it at all.\n\n\n    -----Examples-----\n    Input\n    4\n    good\n\n    Output\n    0\n    good\n\n    Input\n    4\n    aabc\n\n    Output\n    2\n    ab\n\n    Input\n    3\n    aaa\n\n    Output\n    3\n    '''\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        print(n)\n        print(s)\n    else:\n        count = 0\n        i = 0\n        while i < n - 1:\n            if s[i] == s[i+1]:\n                count += 1\n            i += 2\n        i = 0\n        while i < n - 2:\n            if s[i] == s[i+2]:\n                count += 1\n            i += 2\n        print(count)\n        print(s)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        print(n)\n        print()\n        return\n    c = Counter(s[::2])\n    max_count = max(c.values())\n    s = s[:max_count] + s[max_count + 1:]\n    c = Counter(s[::2])\n    max_count = max(c.values())\n    s = s[:max_count] + s[max_count + 1:]\n    print(n - len(s))\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    good = True\n    for i in range(n-1):\n        if i%2 == 0 and s[i] == s[i+1]:\n            good = False\n            break\n    if good:\n        print(0)\n        print(s)\n        return\n    else:\n        for i in range(n-1):\n            if i%2 == 0 and s[i] == s[i+1]:\n                s = s[:i] + s[i+2:]\n                break\n        print(1)\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\ndef solve(s):\n    n = len(s)\n    dp = [[0] * 26 for _ in range(n)]\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            dp[i][ord(s[i]) - ord('a')] = 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(26):\n            if s[i] != chr(j + ord('a')):\n                dp[i][j] = dp[i + 1][j]\n\n    ans = n\n    for i in range(n):\n        cnt = 0\n        for j in range(26):\n            cnt += dp[i][j]\n        ans = min(ans, cnt)\n\n    return ans\n\n\ndef main():\n    n = int(input())\n    s = input()\n    print(solve(s))\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef remove_char(s):\n    if len(s) % 2 == 1:\n        return len(s)\n\n    rem = []\n    for i in range(0, len(s), 2):\n        if s[i] == s[i+1]:\n            rem.append(i+1)\n\n    if len(rem) == 0:\n        return 0\n    else:\n        return len(rem)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    print(remove_char(s))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if i+1 < n and s[i] == s[i+1]:\n            c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650140758,
  "id": "cmpl-4xjHSgXaEy1rGEWfmGexcyvF4XAhE",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:26:21.074208 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# --- Solution ---\nimport re\n\ndef is_good(string):\n    if len(string) % 2 == 0:\n        for i in range(0, len(string), 2):\n            if string[i] == string[i+1]:\n                return False\n        return True\n    else:\n        return False\n\nn = int(input())\ns = input()\n\nif is_good(s):\n    print(0)\n    print(s)\nelse:\n    for i in range(len(s)):\n        for j in range(len(s)):\n            s_new = s[:i] + s[i+1:]\n            s_new = s_new[:j] + s_new[j+1:]\n\n            if is_good(s_new):\n                print(len(s) - len(s_new))\n                print(s_new)\n                break\n        else:\n            continue\n        break"
}
2022-04-16 20:26:21.074248 REASON stop
2022-04-16 20:26:21.100397 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nfor line in sys.stdin:\n    n = int(line)\n    s = next(sys.stdin)\n    s = s.strip()\n    k = 0\n    i = 0\n    while i < len(s) - 1:\n        if s[i] == s[i + 1]:\n            s = s[:i] + s[i + 1:]\n            k += 1\n        else:\n            i += 2\n    if len(s) % 2 == 1:\n        s = s[:-1]\n        k += 1\n    print(k)\n    if k != len(s):\n        print(s)"
}
2022-04-16 20:26:21.100656 REASON stop
2022-04-16 20:26:21.101508 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    '''\n    You are given a string $s$, you have to delete minimum number of characters from this string so that it becomes good.\n\n    -----Input-----\n\n    The first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of characters in $s$.\n\n    The second line contains the string $s$, consisting of exactly $n$ lowercase Latin letters.\n\n\n    -----Output-----\n\n    In the first line, print one integer $k$ ($0 \\le k \\le n$) \u2014 the minimum number of characters you have to delete from $s$ to make it good.\n\n    In the second line, print the resulting string $s$. If it is empty, you may leave the second line blank, or not print it at all.\n\n\n    -----Examples-----\n    Input\n    4\n    good\n\n    Output\n    0\n    good\n\n    Input\n    4\n    aabc\n\n    Output\n    2\n    ab\n\n    Input\n    3\n    aaa\n\n    Output\n    3\n    '''\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        print(n)\n        print(s)\n    else:\n        count = 0\n        i = 0\n        while i < n - 1:\n            if s[i] == s[i+1]:\n                count += 1\n            i += 2\n        i = 0\n        while i < n - 2:\n            if s[i] == s[i+2]:\n                count += 1\n            i += 2\n        print(count)\n        print(s)\n\nmain()"
}
2022-04-16 20:26:21.101669 REASON stop
2022-04-16 20:26:21.120275 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        print(n)\n        print()\n        return\n    c = Counter(s[::2])\n    max_count = max(c.values())\n    s = s[:max_count] + s[max_count + 1:]\n    c = Counter(s[::2])\n    max_count = max(c.values())\n    s = s[:max_count] + s[max_count + 1:]\n    print(n - len(s))\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:26:21.120386 REASON stop
2022-04-16 20:26:21.130836 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    good = True\n    for i in range(n-1):\n        if i%2 == 0 and s[i] == s[i+1]:\n            good = False\n            break\n    if good:\n        print(0)\n        print(s)\n        return\n    else:\n        for i in range(n-1):\n            if i%2 == 0 and s[i] == s[i+1]:\n                s = s[:i] + s[i+2:]\n                break\n        print(1)\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:26:21.131121 REASON stop
2022-04-16 20:26:21.132244 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\ndef solve(s):\n    n = len(s)\n    dp = [[0] * 26 for _ in range(n)]\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            dp[i][ord(s[i]) - ord('a')] = 1\n\n    for i in range(n - 2, -1, -1):\n        for j in range(26):\n            if s[i] != chr(j + ord('a')):\n                dp[i][j] = dp[i + 1][j]\n\n    ans = n\n    for i in range(n):\n        cnt = 0\n        for j in range(26):\n            cnt += dp[i][j]\n        ans = min(ans, cnt)\n\n    return ans\n\n\ndef main():\n    n = int(input())\n    s = input()\n    print(solve(s))\n    print(s)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:26:21.132383 REASON stop
2022-04-16 20:26:21.133256 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef remove_char(s):\n    if len(s) % 2 == 1:\n        return len(s)\n\n    rem = []\n    for i in range(0, len(s), 2):\n        if s[i] == s[i+1]:\n            rem.append(i+1)\n\n    if len(rem) == 0:\n        return 0\n    else:\n        return len(rem)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    print(remove_char(s))"
}
2022-04-16 20:26:21.133326 REASON stop
2022-04-16 20:26:21.134484 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if i+1 < n and s[i] == s[i+1]:\n            c += 1\n    print(c)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:26:21.134572 REASON stop
