2022-04-16 18:49:21.956605 """
You are given a long decimal number $a$ consisting of $n$ digits from $1$ to $9$. You also have a function $f$ that maps every digit from $1$ to $9$ to some (possibly the same) digit from $1$ to $9$.

You can perform the following operation no more than once: choose a non-empty contiguous subsegment of digits in $a$, and replace each digit $x$ from this segment with $f(x)$. For example, if $a = 1337$, $f(1) = 1$, $f(3) = 5$, $f(7) = 3$, and you choose the segment consisting of three rightmost digits, you get $1553$ as the result.

What is the maximum possible number you can obtain applying this operation no more than once?


-----Input-----

The first line contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) â€” the number of digits in $a$.

The second line contains a string of $n$ characters, denoting the number $a$. Each character is a decimal digit from $1$ to $9$.

The third line contains exactly $9$ integers $f(1)$, $f(2)$, ..., $f(9)$ ($1 \le f(i) \le 9$).


-----Output-----

Print the maximum number you can get after applying the operation described in the statement no more than once.


-----Examples-----
Input
4
1337
1 2 5 4 6 6 3 1 9

Output
1557

Input
5
11111
9 8 7 6 5 4 3 2 1

Output
99999

Input
2
33
1 1 1 1 1 1 1 1 1

Output
33
"""
2022-04-16 18:49:21.956616 --------------------------
2022-04-16 18:49:52.606346 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = input()\nF = [int(i) for i in input().split()]\n\ndef solve():\n    for i in range(N):\n        if F[int(A[i])-1] > int(A[i]):\n            A[i] = str(F[int(A[i])-1])\n        else:\n            break\n    return ''.join(A)\n\nprint(solve())"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    num = input()\n    f = list(map(int, input().split()))\n    first = max(num)\n    first_count = num.count(first)\n    second = str(f.index(int(first))+1)\n    if first_count == 1:\n        second = max(num.replace(first, second))\n\n    print(num.replace(first, second))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int, input().split()))\n    b = [str(f[int(x)-1]) for x in a]\n    print(max(a, ''.join(b)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef solve(a, f):\n    max_num = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)+1):\n            cur_num = 0\n            for k in range(i, j):\n                cur_num = cur_num * 10 + f[int(a[k])-1]\n            if cur_num > max_num:\n                max_num = cur_num\n    return max_num\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\nprint(solve(a, f))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int,input().split()))\n\n    # find the max digit\n    max_digit = 0\n    max_digit_idx = 0\n    for i in range(n):\n        if f[int(a[i])-1] > max_digit:\n            max_digit = f[int(a[i])-1]\n            max_digit_idx = i\n\n    # find the next max digit\n    next_max_digit = 0\n    next_max_digit_idx = 0\n    for i in range(n):\n        if f[int(a[i])-1] > next_max_digit and f[int(a[i])-1] < max_digit:\n            next_max_digit = f[int(a[i])-1]\n            next_max_digit_idx = i\n\n    # if this is the last digit\n    if n-1 == max_digit_idx:\n        res = \"\"\n        for i in range(n):\n            res += str(f[int(a[i])-1])\n        print(res)\n    # else the next digit is greater than this\n    elif next_max_digit_idx > max_digit_idx:\n        res = \"\"\n        for i in range(n):\n            if i < max_digit_idx:\n                res += str(f[int(a[i])-1])\n            else:\n                res += a[i]\n        print(res)\n    else:\n        # find the nextmax digit\n        next_next_max_digit = 0\n        for i in range(n):\n            if f[int(a[i])-1] > next_next_max_digit and i > max_digit_idx:\n                next_next_max_digit = f[int(a[i])-1]\n        if next_next_max_digit > next_max_digit:\n            res = \"\"\n            for i in range(n):\n                if i < max_digit_idx:\n                    res += str(f[int(a[i])-1])\n                else:\n                    res += a[i]\n            print(res)\n        else:\n            res = \"\"\n            for i in range(n):\n                if i <= max_digit_idx:\n                    res += str(f[int(a[i])-1])\n                else:\n                    res += a[i]\n            print(res)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\ndef replace(a, f):\n    d = {}\n    for i in range(1, 10):\n        d[i] = f[i-1]\n    new_a = []\n    for i in a:\n        new_a.append(d[int(i)])\n    return new_a\n\ndef max_number(a, f):\n    max_num = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            new_a = replace(a[i:j], f)\n            new_a = int(''.join(map(str, new_a)))\n            if new_a > max_num:\n                max_num = new_a\n    return max_num\n\nprint(max_number(a, f))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\nfrom typing import List\n\ndef solve(a: List[int], f: List[int]) -> int:\n    c = Counter(a)\n    for i in range(9, 0, -1):\n        if c[i] >= c[f[i-1]]:\n            return a\n    s = []\n    for d in a:\n        if c[f[d-1]] > 0:\n            s.append(f[d-1])\n            c[f[d-1]] -= 1\n        else:\n            s.append(d)\n    return int(''.join(map(str, s)))\n\ndef main() -> None:\n    n = int(input())\n    a = list(map(int, input()))\n    f = list(map(int, input().split()))\n    print(solve(a, f))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#--------------------------------- SOLUTION ---------------------------------#\n\nimport re\n\ndef get_max_number(n, a, f):\n  max_num = -1\n  for i in range(n):\n    for j in range(i+1, n+1):\n      sub_string = a[i:j]\n      sub_string_list = list(sub_string)\n      for k in range(len(sub_string_list)):\n        sub_string_list[k] = f[int(sub_string_list[k]) - 1]\n      sub_string = ''.join(sub_string_list)\n      if int(sub_string) > max_num:\n        max_num = int(sub_string)\n  return max_num\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\nprint(get_max_number(n, a, f))\n\n#--------------------------------- SOLUTION ---------------------------------#"
    }
  ],
  "created": 1650134962,
  "id": "cmpl-4xhlym8heJpZa3QwefsTNfo5B8kxQ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 18:49:52.606635 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = input()\nF = [int(i) for i in input().split()]\n\ndef solve():\n    for i in range(N):\n        if F[int(A[i])-1] > int(A[i]):\n            A[i] = str(F[int(A[i])-1])\n        else:\n            break\n    return ''.join(A)\n\nprint(solve())"
}
2022-04-16 18:49:52.606670 REASON stop
2022-04-16 18:49:52.642246 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    num = input()\n    f = list(map(int, input().split()))\n    first = max(num)\n    first_count = num.count(first)\n    second = str(f.index(int(first))+1)\n    if first_count == 1:\n        second = max(num.replace(first, second))\n\n    print(num.replace(first, second))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 18:49:52.642423 REASON stop
2022-04-16 18:49:52.642870 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int, input().split()))\n    b = [str(f[int(x)-1]) for x in a]\n    print(max(a, ''.join(b)))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 18:49:52.642963 REASON stop
2022-04-16 18:49:52.680700 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef solve(a, f):\n    max_num = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)+1):\n            cur_num = 0\n            for k in range(i, j):\n                cur_num = cur_num * 10 + f[int(a[k])-1]\n            if cur_num > max_num:\n                max_num = cur_num\n    return max_num\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\nprint(solve(a, f))"
}
2022-04-16 18:49:52.680800 REASON stop
2022-04-16 18:49:52.681935 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int,input().split()))\n\n    # find the max digit\n    max_digit = 0\n    max_digit_idx = 0\n    for i in range(n):\n        if f[int(a[i])-1] > max_digit:\n            max_digit = f[int(a[i])-1]\n            max_digit_idx = i\n\n    # find the next max digit\n    next_max_digit = 0\n    next_max_digit_idx = 0\n    for i in range(n):\n        if f[int(a[i])-1] > next_max_digit and f[int(a[i])-1] < max_digit:\n            next_max_digit = f[int(a[i])-1]\n            next_max_digit_idx = i\n\n    # if this is the last digit\n    if n-1 == max_digit_idx:\n        res = \"\"\n        for i in range(n):\n            res += str(f[int(a[i])-1])\n        print(res)\n    # else the next digit is greater than this\n    elif next_max_digit_idx > max_digit_idx:\n        res = \"\"\n        for i in range(n):\n            if i < max_digit_idx:\n                res += str(f[int(a[i])-1])\n            else:\n                res += a[i]\n        print(res)\n    else:\n        # find the nextmax digit\n        next_next_max_digit = 0\n        for i in range(n):\n            if f[int(a[i])-1] > next_next_max_digit and i > max_digit_idx:\n                next_next_max_digit = f[int(a[i])-1]\n        if next_next_max_digit > next_max_digit:\n            res = \"\"\n            for i in range(n):\n                if i < max_digit_idx:\n                    res += str(f[int(a[i])-1])\n                else:\n                    res += a[i]\n            print(res)\n        else:\n            res = \"\"\n            for i in range(n):\n                if i <= max_digit_idx:\n                    res += str(f[int(a[i])-1])\n                else:\n                    res += a[i]\n            print(res)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 18:49:52.682030 REASON stop
2022-04-16 18:49:52.683164 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\ndef replace(a, f):\n    d = {}\n    for i in range(1, 10):\n        d[i] = f[i-1]\n    new_a = []\n    for i in a:\n        new_a.append(d[int(i)])\n    return new_a\n\ndef max_number(a, f):\n    max_num = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            new_a = replace(a[i:j], f)\n            new_a = int(''.join(map(str, new_a)))\n            if new_a > max_num:\n                max_num = new_a\n    return max_num\n\nprint(max_number(a, f))"
}
2022-04-16 18:49:52.683369 REASON stop
2022-04-16 18:49:52.684278 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\nfrom typing import List\n\ndef solve(a: List[int], f: List[int]) -> int:\n    c = Counter(a)\n    for i in range(9, 0, -1):\n        if c[i] >= c[f[i-1]]:\n            return a\n    s = []\n    for d in a:\n        if c[f[d-1]] > 0:\n            s.append(f[d-1])\n            c[f[d-1]] -= 1\n        else:\n            s.append(d)\n    return int(''.join(map(str, s)))\n\ndef main() -> None:\n    n = int(input())\n    a = list(map(int, input()))\n    f = list(map(int, input().split()))\n    print(solve(a, f))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-16 18:49:52.684381 REASON stop
2022-04-16 18:49:52.685450 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#--------------------------------- SOLUTION ---------------------------------#\n\nimport re\n\ndef get_max_number(n, a, f):\n  max_num = -1\n  for i in range(n):\n    for j in range(i+1, n+1):\n      sub_string = a[i:j]\n      sub_string_list = list(sub_string)\n      for k in range(len(sub_string_list)):\n        sub_string_list[k] = f[int(sub_string_list[k]) - 1]\n      sub_string = ''.join(sub_string_list)\n      if int(sub_string) > max_num:\n        max_num = int(sub_string)\n  return max_num\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\nprint(get_max_number(n, a, f))\n\n#--------------------------------- SOLUTION ---------------------------------#"
}
2022-04-16 18:49:52.685536 REASON stop
