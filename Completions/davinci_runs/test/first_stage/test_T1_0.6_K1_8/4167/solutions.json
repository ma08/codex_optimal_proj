["n,k = map(int,input().split())\n\ncnt1,cnt2 = 0,0\nif k%2 == 1:\n    for i in range(1,n+1):\n        if i%k == 0:\n            cnt1 +=1\n    print(cnt1**3)\nelse:\n    for i in range(1,n+1):\n        if  i%k == k//2:\n            cnt2 += 1\n    for i in range(1,n+1):\n        if i%k == 0:\n            cnt1 +=1\n    print(cnt1**3+cnt2**3)", "N,K = (int(T) for T in input().split())\nReminder = [0]*K\nfor NT in range(1,N+1):\n    Reminder[NT%K] += 1\nCount = 0\nfor RA in range(0,K):\n    RB = (K-RA)%K\n    RC = (K-RA)%K\n    if (RB+RC)%K==0:\n        Count += Reminder[RA]*Reminder[RB]*Reminder[RC]\nprint(Count)", "n,k=list(map(int,input().split()))\nans=0\nif k%2!=0:\n    ans=(n//k)**3\nelse:\n    ans=(n//k)**3+((n+k//2)//k)**3\nprint(ans)\n", "N, K = map(int, input().split())\nprint((N // K) ** 3 if K % 2 == 1 else (((N // K) ** 3) + ((N - K // 2) // K + 1) ** 3))", "n, k = list(map(int, input().split()))\n\ns = 0\n\nif k % 2 == 1:\n    s = (n // k) ** 3\nelse:\n    s = (n // k) ** 3 + ((n // (k // 2)) - (n // k)) ** 3\n\nprint(s)", "n,k = list(map(int,input().split()))\nn_O = 0\nn_E = 0\nfor i in range(1,n+1):\n    if (2*i) % k == 0:\n        if (2*i//k)%2 == 0:\n            n_E += 1\n        else:\n            n_O += 1\nprint((n_E**3+n_O**3))\n", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef lcm(a: int, b: int) -> int: return (a * b) // math.gcd(a, b)\n\ndef Main():\n    n, k = read_ints()\n    if k % 2:\n        print((n // k)** 3)\n    else:\n        print((n // k)** 3 + ((n + k // 2) // k)** 3)     \n\ndef __starting_point():\n    Main()\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Oct  5 21:22:55 2020\n\n@author: liang\n\"\"\"\n\nN, K = map(int,input().split())\nif K % 2 == 0:\n    ans = (N//K)**3 + ((N+K//2)//K)**3\n    print(ans)\nelse:\n    print((N//K)**3)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N, K = LI()\n\n    # abc\u5168\u3066K//2\u304b\u5168\u30660\u306e\u3069\u3061\u3089\u304b\n    num_0 = N // K\n    if K % 2 == 0:\n        num_K_half = N // K + (1 if N % K >= K // 2 else 0)\n    else:\n        num_K_half = 0\n\n    ans = num_0 ** 3 + num_K_half ** 3\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n,k=list(map(int,input().split()))\nif k%2==1:\n    print((int(n//k)**3))\nelse:\n    s=k//2\n    print((int((n+s)//(2*s))**3+int(n//k)**3))\n    \n", "def readinput():\n    n,k=list(map(int,input().split()))\n    return n,k\n\ndef main(n,k):\n    # a,b,c\u304ck\u306e\u500d\u6570\u306e\u5834\u5408\n    m = n//k\n    count=m*m*m\n    # k\u304c\u5076\u6570\u306e\u3068\u304d\n    # a,b,c\u304ck\u306e\u500d\u6570+k/2\u306e\u5834\u5408\n    if k%2==0:\n        m=(n+k//2)//k\n        count+=m*m*m\n    return count\n\ndef __starting_point():\n    n,k=readinput()\n    ans=main(n,k)\n    print(ans)\n\n__starting_point()", "n,k=map(int,input().split())\nans=0\nif k>2*n:\n  print(ans)\nelse:\n  r=k\n  for i in range(1,k):\n    if 2*i%k==0:\n      r=i\n  amari=set()\n  for i in range(1,(n-r)//r+1+1):\n    if r*i%k in amari:\n      continue\n    else:\n      amari.add(r*i%k)\n      q=(n-r*i)//k+1\n      ans+=q**3\n  print(ans)", "n,k=list(map(int,input().split()))\nam_0=[]\nam_k2=[]\n\nif k%2==0:\n  for i in range(1,n+1):\n    if i%k==0:\n      am_0.append(i)\n    \n    elif i%k==(k//2):\n      am_k2.append(i)\n  print((len(am_0)**3+len(am_k2)**3))\n  \nelse:\n  print((pow((n//k),3)))\n", "#!/usr/bin/env python\n\nn, k = list(map(int, input().split()))\n\n# a\u306f\u5168\u63a2\u7d22\nans = 0 \nfor a in range(1, n+1):\n    ra = a%k \n    rbc = k-ra\n    if (2*rbc) % k == 0:\n        ans += ((n-rbc)//k + 1)**2\n\nprint(ans)\n", "n, k = map(int, input().split())\n\nif k % 2 == 1:\n    print((n//k) ** 3)\nelse:\n    print((((n + k//2)//k)**3) + ((n//k)**3))", "a,b=list(map(int, input().split()))\nif b%2==1:\n    print(((a//b)**3))\nelse:\n    c=(a-b/2)//b+1\n    print((int((a//b)**3+c**3)))\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n\n    ans = pow(N // K, 3)\n    if K % 2 == 0 and N >= K // 2:\n        ans += pow((N - K // 2) // K + 1, 3)\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import Counter\n\nimport numpy as np\n\nN, K = list(map(int, input().split(' ')))\n\nmods = np.arange(1, N + 1) % K\ncounter = Counter(mods)\n\nans = 0\nfor a in list(counter.keys()):\n    if (a + a) % K == 0:\n        ans += counter[a] ** 3\n\nprint(ans)\n", "n, k = map(int, input().split())\nans = (n // k) ** 3\nif k % 2 == 0:\n    ans += ((n + k // 2) // k) ** 3\nprint(ans)", "n,k=[int(i) for i in input().split()]\n\nif k%2==1:\n    print((n//k)**3)\nelse:\n    print((n // k)**3+(n // k+(n%k)//(k//2))**3)", "N, K = map(int, input().split())\n\nif K % 2 == 1:\n    print((N // K) ** 3)\nelse:\n    a = N // K\n    t = K // 2\n    b = (N - t) // K + 1\n    print(a ** 3 + b ** 3)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\ndef main():\n    n,k = i_map()\n\n    R = [0]*k\n    for i in range(1,n+1):\n        R[i%k] += 1\n\n    ans = 0\n    for a in range(k):\n        b = (k-a)%k\n        if 2*b%k == 0: # b==c\u3068\u3057\u3066b\u30922\u500d\n            ans += R[a] * R[b] * R[b]\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = map(int, input().split())\n\nres = (N // K) ** 3\n\nif K % 2 == 0:\n    res += ((N - K // 2) // K + 1) ** 3\n\nprint(res)", "n,k = map(int,input().split())\nif k%2 == 1:\n    ans = (n//k)**3\nelse:\n    if k <= 2*n:\n        a = (n//(k//2))\n        b = a//2\n        ans = (a-b)**3 + b**3\n    else:\n        ans = 0\nprint(ans)", "N,K=map(int,input().split())\nans=0\nif K%2==1:\n  print((N//K)**3)\nelse:\n  ans=(N//K)**3\n  k=K//2\n  j=(N+k)//K\n  print(j**3+ans)", "n, k = map(int, input().split())\ncandidOdd = 0\ncandidEven = 0\ncandidEven2 = 0\nfor i in range(1, n+1):\n    if k % 2 == 1:\n        if i % k == 0:\n            candidOdd += 1\n    else:\n        if i % k == 0:\n            candidEven += 1\n        elif i % k == (k/2):\n            candidEven2 += 1\nprint(candidOdd**3 + candidEven**3 + candidEven2**3)", "N, K = map(int, input().split())\n\nif K % 2 == 1:\n    print((N // K) ** 3)\nelse:\n    print((N // K) ** 3 + ((N + K // 2) // K) ** 3)", "import sys, bisect, math, itertools, string, queue, copy\nimport numpy as np\nimport scipy\nfrom collections import Counter,defaultdict,deque\nfrom itertools import permutations, combinations\nfrom heapq import heappop, heappush\nfrom fractions import gcd\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\nn,k = inpm()\n\nans = (n//k)**3\nif k % 2 == 0:\n    cnt = 0\n    for i in range(1,n+1):\n        if i % k == k//2:\n           cnt += 1\n    ans += cnt**3\n\nprint(ans)", "n, k = map(int, input().split())\nans = 0\n\nif k%2 == 1:\n    ans = (n//k)**3\nelse:\n    ans = (n//k)**3 + ((n + k//2)//k)**3\n\nprint(ans)", "import sys\n\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    if K % 2 == 1:\n        a = N // K\n        print((a * a * a))\n        return\n    else:\n        a = N // K\n        count = a * a * a\n        b = (N+K//2)//K\n        count+=b*b*b\n        print(count)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\n\nn, k = list(map(int, input().split()))\n\nans = 0\n\nnum_multiple = n//k\n\nans += num_multiple**3\n\nif k % 2 == 0:\n    num_multiple = (n+k//2)//k\n    ans += num_multiple**3\nprint(ans)\n", "N,K=map(int,input().split())\nif K%2==1:\n  print((N//K)**3)\n  return\nk=K//2\nt=N//k-N//K\nprint(t**3+(N//K)**3)", "n,k = map(int,input().split())\nif k % 2 == 1:\n    ans = (n // k) ** 3\nif k % 2 == 0:\n    mk2 = n // (k //2)\n    mk = n // k\n    ans = mk ** 3 + (mk2 - mk) ** 3\nprint(ans)", "n,k = map(int,input().split())\ncnt1 = 0\ncnt2 = 0\nfor i in range(1,n+1):\n    if i%k == 0: cnt1 += 1\n    if i%k == k//2: cnt2 += 1\nans = cnt1**3 if k%2 == 1 else cnt1**3+cnt2**3\nprint(ans)     ", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\ndef main():\n  n,k=LI()\n  if k%2==0:\n    return (n//(k//2)-(n//k))**3+(n//k)**3\n  return (n//k)**3\n\n# main()\nprint((main()))\n", "n,k= list(map(int,input().split()))\ncount_0 = 0\ncount_half = 0\nfor i in range(1,n+1):\n    if i %k == k/2:\n        count_half += 1\n    elif i%k == 0:\n        count_0 += 1\n        \nprint(count_half**3 + count_0**3)", "n,k=list(map(int,input().split()))\n\n\nkcd=0\nkcd_half=0\nfor i in range(1,n+1):\n    if k&1 and i%k==0:\n        kcd+=1\n    elif not k&1:\n        if i%k==0:\n            kcd+=1\n        if i%k==k//2:\n            kcd_half+=1\n\nprint((kcd*kcd*kcd+kcd_half*kcd_half*kcd_half))\n", "N , K = map(int, input().split())\nans = 0\nif K%2==0:\n  ans += (N//K)**3\n  ans += (N//(K//2)-N//K)**3\nelse:\n  ans += (N//K)**3\nprint(ans)", "N, K = list(map(int, input().split()))\n\n# 1\u4ee5\u4e0aN\u4ee5\u4e0b\u3067\u3001K\u3067\u5272\u3063\u305f\u4f59\u308a\u304c0,1,...,K-1\u3068\u306a\u308b\u500b\u6570\nl = [0] * K\nfor i in range(1, N + 1):\n    l[i % K] += 1\n\nans = 0\n\n# a\u3092K\u3067\u5272\u3063\u305f\u4f59\u308a\u306f0,1,...,K-1\nfor ai in range(K):\n    # b\u3092K\u3067\u5272\u3063\u305f\u4f59\u308a...(a+b)%K==0\u304b\u3089   c\u3092K\u3067\u5272\u3063\u305f\u4f59\u308a...(a+c)%K==0\u304b\u3089\n    # ai = 0\u306e\u6642\u306bK-ai\u304cK\u3068\u306a\u3063\u3066\u300c\u4f59\u308a\u300d\u3068\u3057\u3066\u4e0d\u9069\u306a\u306e\u3067%\u3092\u304b\u3051\u308b\n    bi = (K - ai) % K\n    ci = (K - ai) % K\n    # (b+c)%K==0\u3092\u6e80\u305f\u305b\u3070\u826f\u3044\n    if (bi + ci) % K == 0:\n        ans += l[ai] * l[bi] * l[ci]\nprint(ans)\n", "n, k = map(int, input().split())\nmod_0 = 0\nmod_harf = 0\n\nfor i in range(1, n + 1):\n    if i % k == 0:\n        mod_0 += 1\n    elif i % k == (-i) % k:\n        mod_harf += 1\n\nres = mod_0 ** 3 + mod_harf ** 3\nprint(res)", "N, K = list(map(int, input().split()))\n\nnum = [0] * K\n\nfor i in range(1, N + 1):\n    num[i % K] += 1  # num[x] = K\u3067\u5272\u3063\u3066x\u4f59\u308b\u6570\u304c1\u4ee5\u4e0aN\u4ee5\u4e0b\u306b\u4f55\u500b\u3042\u308b\u304b\nans = 0\nfor a in range(K):\n\n    b = (K - a) % K\n    c = (K - a) % K\n    if (b + c) % K != 0:\n        continue\n    ans += num[a] * num[b] * num[c]\nprint(ans)\n", "N, K = map(int, input().split())\nans = 0\nfor r in range(K):\n    n = (N + K - r) // K\n    if r == 0:\n        n -= 1\n    if r * 2 % K == 0:\n        ans += n ** 3\nprint(ans)", "N,K=list(map(int,input().split()))\n\n\nif (K%2!=0):\n    ans=(N//K)**3\nelse:\n    k=N//K\n    k_=N//(K//2)\n    ans=k**3+(k_-k)**3\n\nprint(ans)\n", "import itertools\nans = 0\nN, K = [int(i) for i in input().split()]\nx = 0\ny = 0\nfor i in range(1, N+1):\n    if i % K == 0:\n        x += 1\n    if K % 2 == 0 and i % K == (K//2):\n        y += 1\nprint((x**3 + y**3))\n", "n,k = map(int, input().split())\n\nif k ==1:\n    print(n**3)\n\nelif k ==2:\n    m = n % 2\n    o = n//2\n    print((o+m)**3+o**3)\n\nelif k % 2==1:\n    x = n//k\n    print(x**3)\n\nelse:\n    x = n//k\n    y = n//(k//2)\n    print(x**3+(y-x)**3)", "n,k = map(int,input().split())\nans = 0\nif k%2 == 0:\n    ans += ((n+k//2)//k)**3\nans += (n//k)**3\nprint(ans)", "n, k = map(int,input().split())\n\nif k % 2 == 1:\n    x = 0\n    for i in range(1,n+1):\n        if i % k == 0:\n            x += 1\n    print(x**3)\nelse:\n    x = 0\n    for i in range(1,n+1):\n        if i % k == 0:\n            x += 1\n    y = 0\n    for i in range(1,n+1):\n        if i % k == k//2:\n            y += 1\n    print(x**3 + y**3)", "n, k = list(map(int, input().split()))\n\n\"\"\"\na+b = K i\nb+c = K j\nc+a = K k\n2(a+b+c) = K(i+j+k)\n\nk%2=0\u306a\u3089\u3070,\na+b+c\u306fk//2\u306e\u500d\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3001\u304b\u3064\u3001\u5dee\u3092\u53d6\u308b\u3068\u7d50\u5c40a,b,c\u304c\u305d\u308c\u305e\u308ck//2\u306e\u500d\u6570\n\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u3044\u3002\u305d\u308c\u3067a+b,b+c,c+d\u306f\uff4b\u306e\u500d\u6570\u3060\u304b\u3089\u3001a,b,c\u306f\u3059\u3079\u3066\u5076\u6570\u307e\u305f\u306f\u3059\u3079\u3066\u5947\u6570\n\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u3001\na+b+c\u304ck\u306e\u500d\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u304b\u3064\u5dee\u3092\u53d6\u308b\u3068\u7d50\u5c40a,b,c\u304c\u3059\u3079\u3066k\u306e\u500d\u6570\u3067\u306a\u3051\u308c\u3070\n\u306a\u3089\u306a\u3044\u3002\n\"\"\"\n\nif k%2==0:\n    k//=2\n    a = n//k\n    even = a//2\n    if a%2==0:\n        odd = even\n    else:\n        odd = even+1\n    ans = even**3 + odd**3\nelse:\n    ans = (n//k)**3\nprint(ans)\n\n", "N,K = list(map(int,input().split()))\nmodZeroCount = N // K\nmodHalfCount = 0\nif K % 2 == 0:\n    modHalf = K // 2\n    if N % K < modHalf:\n        modHalfCount = modZeroCount\n    else:\n        modHalfCount = modZeroCount + 1\nanswer = modZeroCount ** 3 + modHalfCount ** 3\nprint(answer)", "n, k = list(map(int, input().split()))\nans = (n // k) ** 3\nif k % 2 == 0:\n    ans += ((n + k // 2) // k) ** 3\nprint(ans)\n", "def main():\n    n,k = list(map(int,input().split()))\n    if k%2==1:\n        c = n//k\n        print((c**3))\n        return\n    if k%2==0:\n        c = (n-k//2)//k+1\n        ans = c**3\n        c = n//k\n        print((ans + c**3))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k=map(int,input().split())\n\nam = [0]*k\nfor i in range(1, n+1):\n  res = i%k\n  if (res+res)%k==0:\n    am[res]+=1\n\n#print(am)\n\nans = 0\nfor i in am:\n  ans += i**3 \n  \nprint(ans)", "n,k = map(int,input().split())\nif k%2==0:\n    print(((n-k//2)//k+1)**3+(n//k)**3)\nelse:\n    print((n//k)**3)", "def main():\n    n,k = list(map(int,input().split()))\n    ans = 0\n    if k%2==0:\n        kouho1 = []\n        kouho2 = []\n        for i in range(1,n+1):\n            if i%k==0:\n                kouho1.append(i)\n            elif i%k == k/2:\n                kouho2.append(i)\n        ans += len(kouho1)**3\n        ans+= len(kouho2)**3\n    else:\n        kouho = []\n        for i in range(1,n+1):\n            if i%k==0:\n                kouho.append(i)\n        ans += len(kouho)**3\n\n    print(ans)\nmain()\n", "n,k = map(int,input().split())\nj=0\nm=0\nans = 0\nif k % 2 == 1:\n    j= n//k\n    #print('j',j)\n    ans=j*j*j\n\nelse:\n    j=n//k\n    m=(n-k//2)//k+1\n    #print('j',j,'m',m)\n    ans=m*m*m+j*j*j\n \nprint(ans)", "n,k = map(int, input().split())\n\nif k%2 == 1: # k\u304c\u5947\u6570\u306e\u5834\u5408\n  x = 0\n  for i in range(1,n+1):\n    if i%k == 0: x += 1 # k\u3067\u5272\u308a\u5207\u308c\u308b\u5024\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n  print(x**3) # \u7d44\u307f\u5408\u308f\u305b\u5206\u5897\u3048\u308b\nelse: # k\u304c\u5076\u6570\u306e\u5834\u5408\n  x = 0\n  for i in range(1, n+1):\n    if i % k == 0: x += 1 # k\u3067\u5272\u308a\u5207\u308c\u308b\u5024\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n  y = 0\n  for i in range(1, n+1):\n    if i % k == k//2: y += 1 # k//2\u3067\u5272\u308a\u5207\u308c\u308b\u5024\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n  print(x**3 + y**3) # \u7d44\u307f\u5408\u308f\u305b\u5206\u5897\u3048\u308b", "N,K = list(map(int, input().split()))\n\nif K % 2 != 0:\n    print(((N//K) ** 3))\nelse:\n    print(((N//K) ** 3 + ((N//(K//2))-(N//K)) ** 3))\n", "N,K = map(int,input().split())\ns = N//K\nt = N%K\nans = s**3\nif K%2 == 0:\n    u = K//2\n    if t < u:\n        ans += s**3\n    else:\n        ans += (s+1)**3\nprint(ans)", "n,k=list(map(int,input().split()))\n\ns=[]\nfor i in range(1,n+1):\n  s.append(i%k)\n\nfrom collections import Counter\ndic=Counter(s)\n\nans=0\nfor a in dic:\n  if (2*a)%k==0:\n    ans=ans+dic[a]*dic[(k-a)%k]*dic[(k-a)%k]\n    \nprint(ans)\n\n  \n  \n\n", "def main():\n  N, K = [int(n) for n in input().split(\" \")]\n\n  mul_K = int(N/K)\n\n  if K % 2 == 1:\n    print(mul_K ** 3)\n    return 0\n  \n  mul_K_half = int(2 * N/K)\n  mul_K_half_but_K = mul_K_half - mul_K\n  print(mul_K ** 3 + mul_K_half_but_K ** 3)\n  return 0\n\nmain()", "import sys\ninput = sys.stdin.readline\nN,K=list(map(int,input().split()))\nif K%2 == 0:\n    A = list(range(K//2,N+1,K))\n    B = list(range(K,N+1,K))\nelse:\n    A = list(range(K,N+1,K))\n    B = []\nprint(len(A)**3+len(B)**3)", "n,k = map(int,input().split())\nif k > 2:\n    if k % 2 == 0:\n        a = n//(k//2)\n        if a % 2 == 0:\n            print(2*((a//2)**3))\n        else:\n            print(((a//2)**3)+(((a//2)+1)**3))\n    else:\n        print((n//k)**3)\nelif k == 2:\n    if n % 2 == 0:\n        print(2*((n//2)**3))\n    else:\n        print(((n//2)**3)+(((n//2)+1)**3))\nelse:\n    print(n**3)", "n,k=map(int,input().split())\nif k%2==0:\n    print(int(n/k)**3+(int((n-k/2)/k+1)**3))\nelse:\n    print(int(n/k)**3)", "N,K = map(int,input().split())\ns = N//K\nt = N%K\nans = s**3\nif K%2 == 0:\n    u = K//2\n    if t < u:\n        ans += s**3\n    else:\n        ans += (s+1)**3\nprint(ans)", "N, K = map(int,input().split())\nif K % 2 == 1:\n    c = N//K\n    ans = c*(c-1)*(c-2)+3*c*(c-1)+c\n    print(ans)\nelse:\n    K //= 2\n    e = 0\n    o = 0\n    for i in range(1, N+1):\n        if i % K == 0:\n            if (i//K) % 2 == 0:\n                e += 1\n            else:\n                o += 1\n    c = e\n    ans = c*(c-1)*(c-2)+3*c*(c-1)+c\n    c = o\n    ans += c*(c-1)*(c-2)+3*c*(c-1)+c\n    print(ans)", "N,K = map(int,input().split())\n\nif K%2 == 1:\n  print((N//K)**3)\nelse:\n  print((N//K)**3 + (1+(N-K//2)//K)**3)", "n, k = map(int, input().split())\nrem0 = n // k\nremhalf = (n // k + 1 if (n // k) * k + k // 2 <= n else n // k)\nans = rem0 ** 3 + (remhalf ** 3 if k % 2 == 0 else 0)\nprint(ans)", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, K: int):\n    e = sum(i%K!=0 and i*2%K==0 for i in range(1, N+1))\n    z = sum(i%K==0 for i in range(1, N+1))\n    return pow(e, 3) + pow(z, 3)\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    print((solve(N, K)))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\ndef __starting_point():\n    #test()\n    main()\n\n__starting_point()", "N,K=list(map(int,input().split()))\nif K%2==0:\n    x=N//(K//2)\n    print(((x-x//2)**3+(x//2)**3))\nelse:\n    print(((N//K)**3))\n", "# -*- coding: utf-8 -*-\nimport numpy as np\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\nimport heapq\nimport collections\nimport itertools\nimport bisect\n\nsys.setrecursionlimit(10**6)\ndef zz():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef z():\n    return int(sys.stdin.readline())\n\n\ndef S():\n    return sys.stdin.readline()\n\n\ndef C(line):\n    return [sys.stdin.readline() for _ in range(line)]\n\ndef nck(n, k, mod=10**9+7):\n    bunbo = bunshi = 1\n    for i in range(k):\n        bunshi = (bunshi * (n-i)) % mod\n        bunbo = (bunbo * (i+1)) % mod\n    return (bunshi * pow(bunbo, mod-2, mod)) % mod\n\nN,K=zz()\nans = 0\nmodK = 0\nif (K % 2 == 0):\n    mod0 = N//K\n    ans += mod0**3\n    a = (N + K//2)//K\n    # print(a)\n    ans+=a**3\nelse:\n    mod0 = N // K\n    ans=mod0**3\nprint(ans)", "n, k = list(map(int, input().split()))\nnum = [0] * k\nfor i in range(1, n+1):\n    num[i % k] += 1\nans = 0\nfor a in range(k):\n    b = (k-a) % k\n    c = (k-a) % k\n    if ((b+c) % k != 0):\n        continue\n    ans += num[a] * num[b] * num[c]\nprint(ans)\n", "n,k = map(int, input().split())\nans = (n//k)**3\nif (k%2==0):\n    ans += (n//(k//2)-n//k)**3\nprint(ans)", "n,k = map(int,input().split())\na = 0\na2 = 0\nfor i in range(1,n+1):\n    if i % k == 0:\n        a += 1\n    elif 2*i % k == 0:\n        a2 += 1\nprint(a**3 + a2**3)", "def solve():\n    n, k = list(map(int, input().split()))\n    if k % 2 != 0:\n        print(((n // k) ** 3))\n    else:\n        print(((n // k) ** 3 + ((n + k // 2) // k) ** 3))\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "def main():\n    n,k=map(int,input().split())\n    ans=0\n    baisuu=n//k\n    ans+=baisuu**3\n    if k%2==0:\n        if baisuu*k+k//2<=n:\n            hanbun=baisuu+1\n        else:\n            hanbun=baisuu\n        ans+=hanbun**3\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n\n    R = [0] * K\n    for i in range(1, N + 1):\n        R[i % K] += 1\n\n    ans = 0\n    for a in range(K):\n        b = c = (K - a) % K\n        if (b + c) % K == 0:\n            ans += R[a] * R[b] * R[c]\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\nn0 = n//k\nans = pow(n0, 3)\nif k%2 == 0:\n    # a,b,c\u5168\u3066\u306e\u4f59\u308a\u304ck/2\u306e\u30d1\u30bf\u30fc\u30f3\n    r = n%k\n    ans += pow(n0+int(n%k>=k//2), 3)\nprint(ans)\n", "n,k = map(int, input().split())\n\nr = n // k\nres = r **3\nif k % 2 == 0:\n    s = r\n    if n % k >= k//2:\n        s += 1\n    res += s ** 3\nprint(res)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n\n    ans = pow(N // K, 3)\n    if K % 2 == 0:\n        ans += pow((N + K // 2) // K, 3)\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65e5\u8a18   \u4e00\u5bf8\u5148\u306f\u95c7\u304c\u4eba\u751f\n# https://pyteyon.hatenablog.com/entry/2018/09/02/094228\n# \u521d\u671f\u5165\u529b\nimport sys\ninput = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nN,K = map(int, input().split())\n\n# \u5076\u6570\u3001\u5947\u6570\u5171\u306b\n# a,b,c mod 0,0,0 \u21d2K\u306e\u500d\u6570\nmultip_K =[i for i in range(K,N+1,K)]\n\n#multip_K\u304b\u3089\uff13\u3064\u9078\u3073\u4e26\u3079\u308b\u9806\u5217\u7d44\u307f\u5408\u308f\u305b\nle =len(multip_K)\nans_mod_0 =le **3\n\n# \u5076\u6570\u306e\u307f\n# a,b,c mod K/2,K/2,K/2 \nans_mod_haf =0\nif K%2 ==0:\n    multip_haf =[i for i in range(1,N+1) if i %K ==K//2 ]\n    le_haf =len(multip_haf)\n    ans_mod_haf =le_haf **3\n\nans =ans_mod_0 +ans_mod_haf\nprint(ans)", "n, k = list(map(int, input().split()))\n\nnum = [0]*(k+1)\nfor i in range(1, n+1):\n    num[i % k] += 1\n\nans = 0\nfor a in range(1, n+1):\n    mod = a % k\n    temp_mod = (k-mod)%k\n    #print(temp_mod)\n    if (temp_mod*2) % k != 0:\n        continue\n    ans += num[temp_mod]**2\nprint(ans)\n", "a = list(map(int,input().split()))\nb = a[0]//a[1]\nif a[1] % 2 != 0:\n  print((b**3))\nelse:\n  if a[0]%a[1] >= a[1]//2:\n    print((b**3 + (b+1)**3))\n  else:\n    print((2*b**3))\n  \n", "n,k=map(int, input().split())\nif k%2==0:\n  cnt1=n//k\n  cnt2=n//k\n  if n%k>=k//2:\n    cnt2+=1\n  print(cnt1**3+cnt2**3)\nelse:\n  print((n//k)**3)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n\n    ans = 0\n    step = K if K % 2 else K // 2\n\n    for a in range(step, N + 1, step):\n        l = a // K + 1\n        r = (N + a) // K\n        if r >= l:\n            ans += (r - l + 1) ** 2\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,K = list(map(int,input().split()))\nans = 0\n\nif K%2==0:\n    d1=N//(K//2)\n    d2=N//K\n    ans=d2**3+(d1-d2)**3\nelse:\n    d=N//K\n    ans = d**3\n\nprint(ans)\n", "n, k = map(int, input().split())\nif k % 2 == 1:\n    print((n // k)**3)\nelse:\n    ans = (n//k)**3\n    ans += (n//(k//2)-n//k)**3\n    print(ans)", "N,K=map(int,input().strip().split())\n\nif K%2==1:\n    print((N//K)**3)\nelse:\n    a=N//K\n    b=N//(K//2)\n    print(a**3+(b-a)**3)", "N,K=map(int,input().split())\n\nif K % 2 == 1:\n  n = N//K\n  print(n**3)\n  return\n\nn = N // (K//2)\nn_odd, n_even = (n+1)//2,n//2\nprint(n_odd**3+n_even**3)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, K):\n    div0 = N // K\n    divh = (N + (K // 2)) // K if K % 2 == 0 else 0\n    import math\n    print((div0 ** 3 + divh ** 3))\n\n\ndef __starting_point():\n    # S = input()\n    # N = int(input())\n    N, K = list(map(int, input().split()))\n    # A = [int(i) for i in input().split()]\n    # B = [int(i) for i in input().split()]\n    # AB = [[int(i) for i in input().split()] for _ in range(N)]\n    solve(N, K)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "#!/usr/bin/env python\n\nn, k = list(map(int, input().split()))\n\nif k%2 == 1:\n    ans = (n//k)**3\nelse:\n    ans = (n//k)**3 + (((n-(k//2))//k)+1)**3\n\nprint(ans)\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n\n    R = [0] * K\n    for n in range(1, N + 1):\n        R[n % K] += 1\n\n    ans = 0\n    for a in range(K):\n        b = (K - a) % K\n        if 2 * b % K == 0:\n            ans += R[a] * R[b] * R[b]\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,K = map(int,input().split())\nif K % 2 == 1:\n    ans = (N//K)**3\nelse:\n    ans = (N//K)**3\n    K2 = N//(K//2) - N//K\n    ans += K2**3\nprint(ans)", "N,K = map(int,input().split())\nans = (N//K)**3\n\nif (K%2==0):\n  ans+=(N//(K//2)-N//K)**3\n\nprint(ans)", "n, k = map(int,input().split())\nif k % 2:\n    ans = (n // k)**3\nelse:\n    ans = ((k//2 + n) // k)**3 + (n // k)**3\nprint(ans)", "n,k = list(map(int,input().split()))\nR = []\nRo = []\n\nif k%2 != 0:\n  for i in range(1,n+1):\n    if i%k == 0:\n      R.append(i)\n   \n  print((len(R)**3))\nelse:\n  for i in range(1,n+1):\n    if i%k == 0:\n      R.append(i)\n    if i%k == k//2:\n      Ro.append(i)\n  print((len(R)**3 + len(Ro)**3))\n", "n, k = map(int, input().split())\n\nres = 0\nfor i in range(1, n + 1):\n    a = i % k\n    b = (-a) % k\n    c = (-a) % k\n    if (b + c) % k == 0:\n        res += ((n + b) // k) * ((n + c) // k)\n        \nprint(res)"]