["\n\ndef solve():\n  n = int(input())\n  s = input()\n  t = input()\n\n  if s == t:\n    print('NO')\n  else:\n    print('YES')\n    res = ''\n    if s[0] == t[0]:\n      res += s[1]\n      res += t[0]\n      res += s[0]\n      res += t[1]\n      res += t[1]\n      res += s[1]\n    else:\n      res += t[0]\n      res += s[0]\n      res += t[1]\n      res += s[1]\n      res += s[1]\n      res += t[0]\n\n    for i in range(n-1):\n      res += res\n\n    print(res)\n\nif __name__ == \"__main__\":\n  solve()", "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    print(\"YES\")\n    print(s[0]*n + t[1]*n + s[1]*n)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\ns = input()\nt = input()\nif s == t:\n    print(\"NO\")\nelif n == 1:\n    print(\"YES\")\n    print(s[0] + t[0] + s[1] + t[1] + s[0] + t[0])\nelif n == 2:\n    if s[0] == t[0] or s[0] == t[1] or s[1] == t[0] or s[1] == t[1]:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(s[0] + t[0] + s[1] + t[1] + s[0] + t[0] + s[1] + t[1])\nelse:\n    if s[0] == s[1]:\n        print(\"NO\")\n    elif s[0] == t[0] or s[0] == t[1] or s[1] == t[0] or s[1] == t[1]:\n        if s[0] == t[0]:\n            print(\"YES\")\n            print((s[1] + t[1] + s[0])*n)\n        elif s[0] == t[1]:\n            print(\"YES\")\n            print((s[1] + t[0] + s[0])*n)\n        elif s[1] == t[0]:\n            print(\"YES\")\n            print((s[0] + t[1] + s[1])*n)\n        else:\n            print(\"YES\")\n            print((s[0] + t[0] + s[1])*n)\n    else:\n        print(\"YES\")\n        print((s[0] + t[0] + s[1])*n)", "\n\nimport sys\nimport collections as c\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nt = sys.stdin.readline().strip()\n\n# if n is odd, impossible\nif n % 2 == 1:\n    print(\"NO\")\n    sys.exit(0)\n\n# if s == t, impossible\nif s == t:\n    print(\"NO\")\n    sys.exit(0)\n\n# if s is a substring of t, impossible\nif s in t:\n    print(\"NO\")\n    sys.exit(0)\n\n# if t is a substring of s, impossible\nif t in s:\n    print(\"NO\")\n    sys.exit(0)\n\na = b = c = n\nres = \"\"\n\n# if both s and t are different\n# just print s and t and repeat\nif s[0] != s[1] and t[0] != t[1]:\n    print(\"YES\")\n    print(s*n + t*n)\n    sys.exit(0)\n\n# if both s and t are the same\n# print s and t in a different order\n# and repeat\nif s[0] == s[1] and t[0] == t[1]:\n    if s[0] == t[0]:\n        print(\"NO\")\n        sys.exit(0)\n    print(\"YES\")\n    print(t*n + s*n)\n    sys.exit(0)\n\n# if only one of them is the same\n# print the other one and then the same one\nif s[0] == s[1]:\n    print(\"YES\")\n    print(t*n + s*n)\n    sys.exit(0)\nif t[0] == t[1]:\n    print(\"YES\")\n    print(s*n + t*n)\n    sys.exit(0)", "\n\n# Solution:\n\nn = int(input())\ns = input()\nt = input()\nif s == t:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        print(s[0], end='')\n    for i in range(n):\n        print(t[0], end='')\n    for i in range(n):\n        print(s[1], end='')\n    \n    print()", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n\n    if s[0] == s[1] and t[0] == t[1]:\n        print(\"NO\")\n        return\n\n    res = \"\"\n\n    if s[0] == s[1]:\n        res += s[0] * n\n    elif t[0] == t[1]:\n        res += t[0] * n\n    else:\n        res += s[0] * n\n        res += t[0] * n\n        res += s[1] * n\n\n    print(\"YES\")\n    print(res)\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef solve(s, t, n):\n    '''\n    Solve the problem and return the result\n    '''\n    # If n == 1, we can just replace the character with the other character.\n    if n == 1:\n        return True, ['a' if c == 'b' else 'b' for c in s]\n\n    # If both strings have the same character, we can always make it.\n    if s[0] == s[1] and t[0] == t[1]:\n        return True, [s[0]*n, s[0]*n, 'a' if s[0] != 'a' else 'b' if s[0] != 'b' else 'c']*n\n\n    # If one string has two different character, and the other string has the same character, we can always make it.\n    if s[0] != s[1] and t[0] == t[1]:\n        return True, [s[0]*n, s[1]*n, 'a' if s[0] != 'a' and s[1] != 'a' else 'b' if s[0] != 'b' and s[1] != 'b' else 'c']*n\n\n    if s[0] == s[1] and t[0] != t[1]:\n        return True, [t[0]*n, t[1]*n, 'a' if t[0] != 'a' and t[1] != 'a' else 'b' if t[0] != 'b' and t[1] != 'b' else 'c']*n\n\n    # If both strings have two different characters, we can't make it.\n    if s[0] != s[1] and t[0] != t[1]:\n        return False, None\n\n\ndef main():\n    '''\n    Main function\n    '''\n    # Read the number of characters\n    n = int(input())\n\n    # Read the first string\n    s = input()\n\n    # Read the second string\n    t = input()\n\n    # Solve the problem\n    result = solve(s, t, n)\n\n    # Print the result\n    if result[0]:\n        print('YES')\n        print(''.join(result[1]))\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    if n == 1:\n        print(\"YES\")\n        print(\"\".join(set(['a', 'b', 'c']) - set(s) - set(t)))\n    elif n == 2:\n        if s == t:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n            print(\"\".join(set(['a', 'b', 'c']) - set(s[0]) - set(s[1])) + \"\".join(set(['a', 'b', 'c']) - set(t[0]) - set(t[1])) + \"\".join(set(['a', 'b', 'c']) - set(s[0]) - set(t[0])))\n    else:\n        print(\"YES\")\n        print(\"\".join(set(['a', 'b', 'c']) - set(s[0]) - set(s[1])) + \"\".join(set(['a', 'b', 'c']) - set(t[0]) - set(t[1])) + \"\".join(set(['a', 'b', 'c']) - set(s[0]) - set(t[0])) + \"\".join(set(['a', 'b', 'c']) - set(s[1]) - set(t[1])) + \"\".join(set(['a', 'b', 'c']) - set(s[0]) - set(t[1])))\n\nif __name__ == \"__main__\":\n    main()"]