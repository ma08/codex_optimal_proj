2022-04-16 20:07:34.321079 """
We have N clocks. The hand of the i-th clock (1≤i≤N) rotates through 360° in exactly T_i seconds.

Initially, the hand of every clock stands still, pointing directly upward.

Now, Dolphin starts all the clocks simultaneously.

In how many seconds will the hand of every clock point directly upward again?

-----Constraints-----
 - 1≤N≤100 
 - 1≤T_i≤10^{18} 
 - All input values are integers.  
 - The correct answer is at most 10^{18} seconds.

-----Input-----
Input is given from Standard Input in the following format:  
N
T_1
:  
T_N

-----Output-----
Print the number of seconds after which the hand of every clock point directly upward again.

-----Sample Input-----
2
2
3

-----Sample Output-----
6

We have two clocks. The time when the hand of each clock points upward is as follows:
 - Clock 1: 2, 4, 6, ... seconds after the beginning
 - Clock 2: 3, 6, 9, ... seconds after the beginning
Therefore, it takes 6 seconds until the hands of both clocks point directly upward.
"""
2022-04-16 20:07:34.321103 --------------------------
2022-04-16 20:07:49.613783 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef gcd(a, b):\n\tif a < b:\n\t\ta, b = b, a\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef solve(args):\n\tN = args[0]\n\tT = args[1:]\n\tlcm = 1\n\tfor t in T:\n\t\tlcm = lcm * t // gcd(lcm, t)\n\treturn lcm\n\ndef main():\n\targs = list(map(int, input().split()))\n\tprint(solve(args))\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nT = [int(input()) for _ in range(N)]\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\nans = T[0]\nfor i in range(1, N):\n    ans = lcm(ans, T[i])\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    ts = [int(input()) for _ in range(n)]\n\n    ans = ts[0]\n    for i in range(1, n):\n        ans = lcm(ans, ts[i])\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\n\nn = int(input())\nt = [int(input()) for _ in range(n)]\nprint(math.gcd(t[0], t[1]))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(input())\n\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\ndef gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = t[0]\nfor i in range(1, n):\n    ans = lcm(ans, t[i])\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n#%%\nimport math\n\ndef gcd(a, b):\n    if(a < b):\n        a, b = b, a\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\ndef lcm_n(arr):\n    result = arr[0]\n    for i in range(1, len(arr)):\n        result = lcm(result, arr[i])\n    return result\n\nn = int(input())\narr = []\nfor i in range(n):\n    arr.append(int(input()))\nprint(lcm_n(arr))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\nans = 1\nfor i in range(N):\n    ans = lcm(ans, T[i])\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(a, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nn = int(raw_input())\nt = map(int, sys.stdin.readlines())\nprint reduce(lcm, t)"
    }
  ],
  "created": 1650139654,
  "id": "cmpl-4xize3nw82diJWFEPGSJMdsiI07Ui",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-16 20:07:49.614122 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef gcd(a, b):\n\tif a < b:\n\t\ta, b = b, a\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef solve(args):\n\tN = args[0]\n\tT = args[1:]\n\tlcm = 1\n\tfor t in T:\n\t\tlcm = lcm * t // gcd(lcm, t)\n\treturn lcm\n\ndef main():\n\targs = list(map(int, input().split()))\n\tprint(solve(args))\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-16 20:07:49.614160 REASON stop
2022-04-16 20:07:49.647358 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nT = [int(input()) for _ in range(N)]\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\nans = T[0]\nfor i in range(1, N):\n    ans = lcm(ans, T[i])\n\nprint(ans)"
}
2022-04-16 20:07:49.647537 REASON stop
2022-04-16 20:07:49.648452 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    ts = [int(input()) for _ in range(n)]\n\n    ans = ts[0]\n    for i in range(1, n):\n        ans = lcm(ans, ts[i])\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-16 20:07:49.648569 REASON stop
2022-04-16 20:07:49.664691 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\n\nn = int(input())\nt = [int(input()) for _ in range(n)]\nprint(math.gcd(t[0], t[1]))"
}
2022-04-16 20:07:49.664822 REASON stop
2022-04-16 20:07:49.666060 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(input())\n\nt = []\nfor i in range(n):\n    t.append(int(input()))\n\ndef gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = t[0]\nfor i in range(1, n):\n    ans = lcm(ans, t[i])\n\nprint(ans)"
}
2022-04-16 20:07:49.666156 REASON stop
2022-04-16 20:07:49.675639 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n#%%\nimport math\n\ndef gcd(a, b):\n    if(a < b):\n        a, b = b, a\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef lcm(a, b):\n    return int(a * b / gcd(a, b))\n\ndef lcm_n(arr):\n    result = arr[0]\n    for i in range(1, len(arr)):\n        result = lcm(result, arr[i])\n    return result\n\nn = int(input())\narr = []\nfor i in range(n):\n    arr.append(int(input()))\nprint(lcm_n(arr))"
}
2022-04-16 20:07:49.675739 REASON stop
2022-04-16 20:07:49.676796 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        return gcd(b, a)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\nans = 1\nfor i in range(N):\n    ans = lcm(ans, T[i])\n\nprint(ans)"
}
2022-04-16 20:07:49.676894 REASON stop
2022-04-16 20:07:49.678083 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(a, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nn = int(raw_input())\nt = map(int, sys.stdin.readlines())\nprint reduce(lcm, t)"
}
2022-04-16 20:07:49.678165 REASON stop
