["\n\n# SOLUTION\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\nif x == n:\n    print(sum(a))\n    exit()\n\nif k == 1:\n    print(-1)\n    exit()\n\ndp = [[0 for i in range(n + 1)] for j in range(n + 1)]\n\nfor i in range(1, n + 1):\n    dp[i][1] = dp[i - 1][1] + a[i - 1]\n\nfor i in range(1, n + 1):\n    for j in range(2, min(i, k) + 1):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1])\n\nfor i in range(k, n + 1):\n    for j in range(k, min(i, x) + 1):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1])\n\nprint(dp[n][x])", "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit(0)\n\ndp = [0] * (n+1)\nfor i in range(1, n+1):\n    dp[i] = dp[i-1] + a[i-1]\n\ndp2 = [0] * (n+1)\nfor i in range(1, n+1):\n    dp2[i] = max(dp2[i-1], dp[i] - dp[max(0, i-k)])\n\nprint(dp2[n] + sum(a[:x-k]))", "\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            if i < k:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1])\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-k][j-1] + a[i-1])\n    if dp[n][x] == 0:\n        print(-1)\n    else:\n        print(dp[n][x])\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            for l in range(1, k+1):\n                if i-l >= 0:\n                    dp[i][j] = max(dp[i][j], dp[i-l][j-1] + sum(a[i-l:i]))\n    print(dp[n][x])\n\nif __name__ == '__main__':\n    main()", "\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# dp[i][j] is the max sum of the first i pictures, with j pictures selected\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(pictures[i - k:i]))\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if i >= k:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(pictures[i - k:i]))\n        else:\n            dp[i][j] = dp[i - 1][j]\n\nif dp[n][x] == 0:\n    print(-1)\nelse:\n    print(dp[n][x])", "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max sum of first i elements with j elements selected\ndp = [[0 for _ in range(x+1)] for _ in range(n+1)]\n\n# base case: first i elements with 0 elements selected\nfor i in range(1, n+1):\n    dp[i][0] = 0\n\n# base case: first 0 elements with j elements selected\nfor j in range(1, x+1):\n    dp[0][j] = 0\n\nfor i in range(1, n+1):\n    for j in range(1, x+1):\n        # if we don't select this element\n        dp[i][j] = dp[i-1][j]\n\n        # if we select this element\n        if i >= k:\n            dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n\nif dp[n][x] == 0:\n    print(-1)\nelse:\n    print(dp[n][x])", "\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    if x < k:\n        print -1\n        return\n\n    if x == n:\n        print sum(a)\n        return\n\n    if k == 1:\n        print sum(a[:x])\n        return\n\n    max_sum = 0\n    max_sum_index = 0\n    max_sum_start_index = 0\n    max_sum_end_index = k - 1\n    curr_sum = sum(a[:k])\n    curr_start_index = 0\n    curr_end_index = k - 1\n    for i in range(k, n):\n        curr_sum += a[i]\n        curr_end_index += 1\n        if curr_sum > max_sum:\n            max_sum = curr_sum\n            max_sum_index = i\n            max_sum_start_index = curr_start_index\n            max_sum_end_index = curr_end_index\n\n        curr_sum -= a[curr_start_index]\n        curr_start_index += 1\n\n    if max_sum_end_index - max_sum_start_index + 1 >= x:\n        print max_sum\n        return\n\n    if max_sum_end_index + x - (max_sum_end_index - max_sum_start_index + 1) > n - 1:\n        print -1\n        return\n\n    max_sum_end_index += x - (max_sum_end_index - max_sum_start_index + 1)\n    max_sum_start_index = max_sum_end_index - k + 1\n    max_sum = sum(a[max_sum_start_index:max_sum_end_index + 1])\n    print max_sum\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\nif k == 1:\n    print(sum(a))\n    exit()\n\ndp = [[0] * (x + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n\nprint(dp[n][x])"]