2022-04-20 03:42:41.560584 """
We have a permutation p = {p_1,\ p_2,\ ...,\ p_n} of {1,\ 2,\ ...,\ n}.
Print the number of elements p_i (1 < i < n) that satisfy the following condition:
 - p_i is the second smallest number among the three numbers p_{i - 1}, p_i, and p_{i + 1}.

-----Constraints-----
 - All values in input are integers.
 - 3 \leq n \leq 20
 - p is a permutation of {1,\ 2,\ ...,\ n}.

-----Input-----
Input is given from Standard Input in the following format:
n
p_1 p_2 ... p_n

-----Output-----
Print the number of elements p_i (1 < i < n) that satisfy the condition.

-----Sample Input-----
5
1 3 5 4 2

-----Sample Output-----
2

p_2 = 3 is the second smallest number among p_1 = 1, p_2 = 3, and p_3 = 5. Also, p_4 = 4 is the second smallest number among p_3 = 5, p_4 = 4, and p_5 = 2. These two elements satisfy the condition.
"""
2022-04-20 03:42:41.560602 --------------------------
2022-04-20 03:42:41.560793 using api key gabby
2022-04-20 03:42:48.586705 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i - 1] > p[i] > p[i + 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if min(p[i - 1], p[i], p[i + 1]) < p[i] < max(p[i - 1], p[i], p[i + 1]):\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
    }
  ],
  "created": 1650426161,
  "id": "cmpl-4yvWjAVcaaX6H9FHDjXJzngDnDlui",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:42:48.587130 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.587198 REASON stop
2022-04-20 03:42:48.588553 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.588648 REASON stop
2022-04-20 03:42:48.589342 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i - 1] > p[i] > p[i + 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.589437 REASON stop
2022-04-20 03:42:48.590411 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if min(p[i - 1], p[i], p[i + 1]) < p[i] < max(p[i - 1], p[i], p[i + 1]):\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.590501 REASON stop
2022-04-20 03:42:48.591263 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.591336 REASON stop
2022-04-20 03:42:48.592140 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.592210 REASON stop
2022-04-20 03:42:48.593172 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.593248 REASON stop
2022-04-20 03:42:48.594228 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if p[i - 1] < p[i] < p[i + 1] or p[i + 1] < p[i] < p[i - 1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:48.594438 REASON stop
