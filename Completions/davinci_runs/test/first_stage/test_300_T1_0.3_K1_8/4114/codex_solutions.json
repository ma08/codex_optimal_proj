["\n\nimport sys\nimport math\n\nn = int(input())\n\n# \u5165\u529b\nx = []\ny = []\nh = []\nfor i in range(n):\n    xi, yi, hi = map(int, input().split())\n    x.append(xi)\n    y.append(yi)\n    h.append(hi)\n\n# \u5168\u63a2\u7d22\nfor cx in range(101):\n    for cy in range(101):\n        h_tmp = -1\n        for i in range(n):\n            h_tmp_i = h[i] + math.fabs(x[i] - cx) + math.fabs(y[i] - cy)\n            if h_tmp == -1:\n                h_tmp = h_tmp_i\n            else:\n                if h_tmp_i != h_tmp:\n                    break\n        else:\n            print(cx, cy, h_tmp)\n            sys.exit()", "\n\nn = int(input())\n\nx_y_h = []\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    x_y_h.append([x, y, h])\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for x, y, h_i in x_y_h:\n            h_ = h_i + abs(x - cx) + abs(y - cy)\n            if h == 0:\n                h = h_\n            else:\n                if h != h_:\n                    break\n        else:\n            print(cx, cy, h)", "\n\nimport sys\n\nN = int(input())\n\nx = []\ny = []\nh = []\n\nfor i in range(N):\n    x_i, y_i, h_i = map(int, input().split())\n    x.append(x_i)\n    y.append(y_i)\n    h.append(h_i)\n\nfor i in range(101):\n    for j in range(101):\n        H = -1\n        for k in range(N):\n            if h[k] != 0:\n                if H == -1:\n                    H = h[k] + abs(x[k] - i) + abs(y[k] - j)\n                else:\n                    if H != h[k] + abs(x[k] - i) + abs(y[k] - j):\n                        break\n            else:\n                if H == -1:\n                    H = abs(x[k] - i) + abs(y[k] - j)\n                else:\n                    if H < abs(x[k] - i) + abs(y[k] - j):\n                        break\n        else:\n            print(i, j, H)\n            sys.exit()", "\n\nN = int(input())\nx = []\ny = []\nh = []\nfor i in range(N):\n    x_i, y_i, h_i = map(int, input().split())\n    x.append(x_i)\n    y.append(y_i)\n    h.append(h_i)\n\nfor C_X in range(101):\n    for C_Y in range(101):\n        H = 0\n        for i in range(N):\n            if h[i] != 0:\n                H = h[i] + abs(x[i] - C_X) + abs(y[i] - C_Y)\n                break\n        for i in range(N):\n            if h[i] != max(H - abs(x[i] - C_X) - abs(y[i] - C_Y), 0):\n                break\n        else:\n            print(C_X, C_Y, H)\n            exit()", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    xyh = [list(map(int, input().split())) for _ in range(n)]\n    xyh.sort(key=lambda x: x[2], reverse=True)\n    x, y, h = xyh[0]\n    for i in range(n):\n        if xyh[i][2] != h:\n            break\n    x1, y1 = xyh[i][0], xyh[i][1]\n    x2, y2 = xyh[i+1][0], xyh[i+1][1]\n    if x1 == x2:\n        x = x1\n        y = (y1 + y2) // 2\n    elif y1 == y2:\n        y = y1\n        x = (x1 + x2) // 2\n    else:\n        x = (x1 + x2) // 2\n        y = (y1 + y2) // 2\n    print(x, y, h)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    xyh = [list(map(int, input().split())) for _ in range(n)]\n    xyh.sort(key=lambda x: x[2])\n    x, y, h = xyh[-1]\n    for i in range(n-1):\n        if xyh[i][2] > abs(x - xyh[i][0]) + abs(y - xyh[i][1]):\n            x, y, h = xyh[i]\n            break\n    print(x, y, h)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\n\ncoordinates = []\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coordinates.append([x, y, h])\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for x, y, h_i in coordinates:\n            h = max(h, h_i + abs(x - cx) + abs(y - cy))\n        if all(h == h_i + abs(x - cx) + abs(y - cy) for x, y, h_i in coordinates):\n            print(cx, cy, h)", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    points.sort()\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            if points[i][0] == points[j][0]:\n                if points[i][1] == points[j][1]:\n                    continue\n                else:\n                    x = points[i][0]\n                    y = (points[i][1] + points[j][1]) / 2\n                    h = points[i][2] + abs(points[i][1] - y)\n                    break\n            elif points[i][1] == points[j][1]:\n                x = (points[i][0] + points[j][0]) / 2\n                y = points[i][1]\n                h = points[i][2] + abs(points[i][0] - x)\n                break\n            else:\n                x = (points[i][0] + points[j][0]) / 2\n                y = (points[i][1] + points[j][1]) / 2\n                h = points[i][2] + abs(points[i][0] - x) + abs(points[i][1] - y)\n                break\n    print(x, y, h)\n\nif __name__ == '__main__':\n    main()"]