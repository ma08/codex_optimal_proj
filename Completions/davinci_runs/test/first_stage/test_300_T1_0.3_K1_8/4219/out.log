2022-04-20 03:27:13.640030 """
There are N people numbered 1 to N. Each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not.
Person i gives A_i testimonies. The j-th testimony by Person i is represented by two integers x_{ij} and y_{ij}. If y_{ij} = 1, the testimony says Person x_{ij} is honest; if y_{ij} = 0, it says Person x_{ij} is unkind.
How many honest persons can be among those N people at most?

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 15
 - 0 \leq A_i \leq N - 1
 - 1 \leq x_{ij} \leq N
 - x_{ij} \neq i
 - x_{ij_1} \neq x_{ij_2} (j_1 \neq j_2)
 - y_{ij} = 0, 1

-----Input-----
Input is given from Standard Input in the following format:
N
A_1
x_{11} y_{11}
x_{12} y_{12}
:
x_{1A_1} y_{1A_1}
A_2
x_{21} y_{21}
x_{22} y_{22}
:
x_{2A_2} y_{2A_2}
:
A_N
x_{N1} y_{N1}
x_{N2} y_{N2}
:
x_{NA_N} y_{NA_N}

-----Output-----
Print the maximum possible number of honest persons among the N people.

-----Sample Input-----
3
1
2 1
1
1 1
1
2 0

-----Sample Output-----
2

If Person 1 and Person 2 are honest and Person 3 is unkind, we have two honest persons without inconsistencies, which is the maximum possible number of honest persons.
"""
2022-04-20 03:27:13.640048 --------------------------
2022-04-20 03:27:13.640214 using api key derek
2022-04-20 03:28:35.396071 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom collections import defaultdict\n\ndef dfs(graph, node, visited):\n    visited[node] = True\n    for adj_node in graph[node]:\n        if not visited[adj_node]:\n            dfs(graph, adj_node, visited)\n\ndef main():\n    N = int(input())\n    graph = defaultdict(list)\n    for i in range(N):\n        A_i = int(input())\n        for j in range(A_i):\n            x, y = map(int, input().split())\n            if y == 1:\n                graph[i+1].append(x)\n                graph[x].append(i+1)\n    visited = [False] * (N+1)\n    count = 0\n    for i in range(1, N+1):\n        if not visited[i]:\n            dfs(graph, i, visited)\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    persons = []\n    for i in range(n):\n        a = int(sys.stdin.readline())\n        testimonies = []\n        for j in range(a):\n            x, y = map(int, sys.stdin.readline().split())\n            testimonies.append((x, y))\n        persons.append(testimonies)\n    print(max_honest(persons))\n\ndef max_honest(persons):\n    n = len(persons)\n    max_honest = 0\n    for i in range(1, 2 ** n):\n        honest = [0] * n\n        for j in range(n):\n            if (i >> j) & 1:\n                honest[j] = 1\n        if is_valid(persons, honest):\n            max_honest = max(max_honest, sum(honest))\n    return max_honest\n\ndef is_valid(persons, honest):\n    n = len(persons)\n    for i in range(n):\n        for testimony in persons[i]:\n            x, y = testimony\n            if honest[i] == 1 and y != honest[x - 1]:\n                return False\n    return True\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = []\n    x = []\n    y = []\n    for i in range(N):\n        A.append(int(sys.stdin.readline()))\n        x.append([])\n        y.append([])\n        for j in range(A[i]):\n            x[i].append(int(sys.stdin.readline().split()[0]))\n            y[i].append(int(sys.stdin.readline().split()[0]))\n    print(solve(N, A, x, y))\n\ndef solve(N, A, x, y):\n    # dp[i][j] = i\u756a\u76ee\u306e\u4eba\u304chonest\u3067\u3042\u308b\u3068\u304d\u306b\u3001j\u756a\u76ee\u306e\u4eba\u304chonest\u3067\u3042\u308b\u3068\u304d\u306b\u3001\n    #           \u305d\u308c\u305e\u308c\u306e\u4eba\u306e\u8a3c\u8a00\u304c\u77db\u76fe\u3057\u306a\u3044\u6700\u5927\u5024\n    dp = [[0 for j in range(N)] for i in range(N)]\n    for i in range(N):\n        dp[i][i] = 1\n    for i in range(N):\n        for j in range(i+1, N):\n            dp[i][j] = dp[j][i] = 1\n    for i in range(N):\n        for j in range(N):\n            if i == j:\n                continue\n            for k in range(A[i]):\n                if x[i][k] == j+1:\n                    if y[i][k] == 1:\n                        dp[i][j] = 0\n                    else:\n                        dp[i][j] = 1\n    for i in range(N):\n        for j in range(N):\n            for k in range(N):\n                if i == j or j == k or k == i:\n                    continue\n                if dp[i][j] == 1 and dp[j][k] == 1 and dp[k][i] == 1:\n                    dp[i][j] = dp[j][k] = dp[k][i] = 0\n    ans = 0\n    for i in range(N):\n        for j in range(N):\n            ans = max(ans, dp[i][j])\n    return ans\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(input())\n\n# \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\ntestimonies = []\nfor i in range(N):\n    testimonies.append([])\n    A_i = int(input())\n    for j in range(A_i):\n        testimonies[i].append(list(map(int, input().split())))\n\n# \u6b63\u76f4\u8005\u3068\u4e0d\u89aa\u5207\u8005\u3092\u5224\u5b9a\u3059\u308b\nhonest = [True] * N\nfor i in range(N):\n    for j in range(len(testimonies[i])):\n        if testimonies[i][j][1] == 0:\n            honest[testimonies[i][j][0] - 1] = False\n\n# \u6b63\u76f4\u8005\u306e\u6570\u3092\u6570\u3048\u308b\nprint(sum(honest))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    honest = []\n    for i in range(n):\n        ai = int(input())\n        for j in range(ai):\n            x, y = map(int, input().split())\n            if y == 1:\n                honest.append(x)\n    print(len(set(honest)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\n# \u8ab0\u304c\u8ab0\u3092\u8ab0\u304c\u8ab0\u3092\u4fe1\u3058\u3066\u3044\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u30ea\u30b9\u30c8\n# \u5165\u529b\u4f8b\u3092\u5143\u306b\u4f5c\u6210\n# \u4f8b\u3048\u3070\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        a = int(input())\n        for j in range(a):\n            x, y = map(int, input().split())\n            if x in d:\n                d[x] += y\n            else:\n                d[x] = y\n    print(len([i for i in d.values() if i > 0]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    A = [0] * N\n    x = [[0] * N for _ in range(N)]\n    y = [[0] * N for _ in range(N)]\n    for i in range(N):\n        A[i] = int(input())\n        for j in range(A[i]):\n            x[i][j], y[i][j] = map(int, input().split())\n            x[i][j] -= 1\n    ans = 0\n    for bit in range(1 << N):\n        flag = True\n        for i in range(N):\n            if (bit >> i) & 1:\n                for j in range(A[i]):\n                    if y[i][j] != ((bit >> x[i][j]) & 1):\n                        flag = False\n        if flag:\n            ans = max(ans, bin(bit).count(\"1\"))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650425233,
  "id": "cmpl-4yvHlZlT5txMj780PADdseXKvOWcT",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:28:35.396690 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom collections import defaultdict\n\ndef dfs(graph, node, visited):\n    visited[node] = True\n    for adj_node in graph[node]:\n        if not visited[adj_node]:\n            dfs(graph, adj_node, visited)\n\ndef main():\n    N = int(input())\n    graph = defaultdict(list)\n    for i in range(N):\n        A_i = int(input())\n        for j in range(A_i):\n            x, y = map(int, input().split())\n            if y == 1:\n                graph[i+1].append(x)\n                graph[x].append(i+1)\n    visited = [False] * (N+1)\n    count = 0\n    for i in range(1, N+1):\n        if not visited[i]:\n            dfs(graph, i, visited)\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:28:35.396817 REASON stop
2022-04-20 03:28:35.398222 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    persons = []\n    for i in range(n):\n        a = int(sys.stdin.readline())\n        testimonies = []\n        for j in range(a):\n            x, y = map(int, sys.stdin.readline().split())\n            testimonies.append((x, y))\n        persons.append(testimonies)\n    print(max_honest(persons))\n\ndef max_honest(persons):\n    n = len(persons)\n    max_honest = 0\n    for i in range(1, 2 ** n):\n        honest = [0] * n\n        for j in range(n):\n            if (i >> j) & 1:\n                honest[j] = 1\n        if is_valid(persons, honest):\n            max_honest = max(max_honest, sum(honest))\n    return max_honest\n\ndef is_valid(persons, honest):\n    n = len(persons)\n    for i in range(n):\n        for testimony in persons[i]:\n            x, y = testimony\n            if honest[i] == 1 and y != honest[x - 1]:\n                return False\n    return True\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:28:35.398321 REASON stop
2022-04-20 03:28:35.399152 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = []\n    x = []\n    y = []\n    for i in range(N):\n        A.append(int(sys.stdin.readline()))\n        x.append([])\n        y.append([])\n        for j in range(A[i]):\n            x[i].append(int(sys.stdin.readline().split()[0]))\n            y[i].append(int(sys.stdin.readline().split()[0]))\n    print(solve(N, A, x, y))\n\ndef solve(N, A, x, y):\n    # dp[i][j] = i\u756a\u76ee\u306e\u4eba\u304chonest\u3067\u3042\u308b\u3068\u304d\u306b\u3001j\u756a\u76ee\u306e\u4eba\u304chonest\u3067\u3042\u308b\u3068\u304d\u306b\u3001\n    #           \u305d\u308c\u305e\u308c\u306e\u4eba\u306e\u8a3c\u8a00\u304c\u77db\u76fe\u3057\u306a\u3044\u6700\u5927\u5024\n    dp = [[0 for j in range(N)] for i in range(N)]\n    for i in range(N):\n        dp[i][i] = 1\n    for i in range(N):\n        for j in range(i+1, N):\n            dp[i][j] = dp[j][i] = 1\n    for i in range(N):\n        for j in range(N):\n            if i == j:\n                continue\n            for k in range(A[i]):\n                if x[i][k] == j+1:\n                    if y[i][k] == 1:\n                        dp[i][j] = 0\n                    else:\n                        dp[i][j] = 1\n    for i in range(N):\n        for j in range(N):\n            for k in range(N):\n                if i == j or j == k or k == i:\n                    continue\n                if dp[i][j] == 1 and dp[j][k] == 1 and dp[k][i] == 1:\n                    dp[i][j] = dp[j][k] = dp[k][i] = 0\n    ans = 0\n    for i in range(N):\n        for j in range(N):\n            ans = max(ans, dp[i][j])\n    return ans\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:28:35.399249 REASON stop
2022-04-20 03:28:35.428871 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(input())\n\n# \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\ntestimonies = []\nfor i in range(N):\n    testimonies.append([])\n    A_i = int(input())\n    for j in range(A_i):\n        testimonies[i].append(list(map(int, input().split())))\n\n# \u6b63\u76f4\u8005\u3068\u4e0d\u89aa\u5207\u8005\u3092\u5224\u5b9a\u3059\u308b\nhonest = [True] * N\nfor i in range(N):\n    for j in range(len(testimonies[i])):\n        if testimonies[i][j][1] == 0:\n            honest[testimonies[i][j][0] - 1] = False\n\n# \u6b63\u76f4\u8005\u306e\u6570\u3092\u6570\u3048\u308b\nprint(sum(honest))"
}
2022-04-20 03:28:35.429043 REASON stop
2022-04-20 03:28:35.449921 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    honest = []\n    for i in range(n):\n        ai = int(input())\n        for j in range(ai):\n            x, y = map(int, input().split())\n            if y == 1:\n                honest.append(x)\n    print(len(set(honest)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:28:35.450109 REASON stop
2022-04-20 03:28:35.451065 5 {
  "finish_reason": "length",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\n# \u8ab0\u304c\u8ab0\u3092\u8ab0\u304c\u8ab0\u3092\u4fe1\u3058\u3066\u3044\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u30ea\u30b9\u30c8\n# \u5165\u529b\u4f8b\u3092\u5143\u306b\u4f5c\u6210\n# \u4f8b\u3048\u3070\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1\u3058\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u30011\u304c2\u3092\u4fe1"
}
2022-04-20 03:28:35.451258 REASON length
2022-04-20 03:28:35.451272 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        a = int(input())\n        for j in range(a):\n            x, y = map(int, input().split())\n            if x in d:\n                d[x] += y\n            else:\n                d[x] = y\n    print(len([i for i in d.values() if i > 0]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:28:35.451330 REASON stop
2022-04-20 03:28:35.453166 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    A = [0] * N\n    x = [[0] * N for _ in range(N)]\n    y = [[0] * N for _ in range(N)]\n    for i in range(N):\n        A[i] = int(input())\n        for j in range(A[i]):\n            x[i][j], y[i][j] = map(int, input().split())\n            x[i][j] -= 1\n    ans = 0\n    for bit in range(1 << N):\n        flag = True\n        for i in range(N):\n            if (bit >> i) & 1:\n                for j in range(A[i]):\n                    if y[i][j] != ((bit >> x[i][j]) & 1):\n                        flag = False\n        if flag:\n            ans = max(ans, bin(bit).count(\"1\"))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:28:35.453386 REASON stop
