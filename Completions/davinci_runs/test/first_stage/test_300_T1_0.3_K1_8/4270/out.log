2022-04-20 03:51:22.258454 """
You have a pot and N ingredients. Each ingredient has a real number parameter called value, and the value of the i-th ingredient (1 \leq i \leq N) is v_i.
When you put two ingredients in the pot, they will vanish and result in the formation of a new ingredient. The value of the new ingredient will be (x + y) / 2 where x and y are the values of the ingredients consumed, and you can put this ingredient again in the pot.
After you compose ingredients in this way N-1 times, you will end up with one ingredient. Find the maximum possible value of this ingredient.

-----Constraints-----
 - 2 \leq N \leq 50
 - 1 \leq v_i \leq 1000
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
v_1 v_2 \ldots v_N

-----Output-----
Print a decimal number (or an integer) representing the maximum possible value of the last ingredient remaining.
Your output will be judged correct when its absolute or relative error from the judge's output is at most 10^{-5}.

-----Sample Input-----
2
3 4

-----Sample Output-----
3.5

If you start with two ingredients, the only choice is to put both of them in the pot. The value of the ingredient resulting from the ingredients of values 3 and 4 is (3 + 4) / 2 = 3.5.
Printing 3.50001, 3.49999, and so on will also be accepted.
"""
2022-04-20 03:51:22.258474 --------------------------
2022-04-20 03:51:22.258624 using api key sourya
2022-04-20 03:51:30.680840 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nv = list(map(int, input().split()))\n\nv.sort()\n\nfor i in range(N-1):\n    v[i+1] = (v[i] + v[i+1]) / 2\n\nprint(v[N-1])"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\ningredients = sorted([int(x) for x in sys.stdin.readline().split()])\n\nwhile len(ingredients) > 1:\n    ingredients = sorted([(ingredients[i] + ingredients[i+1])/2 for i in range(len(ingredients)-1)])\n\nprint(ingredients[0])"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nv = sorted(list(map(int, sys.stdin.readline().split())))\n\nwhile len(v) > 1:\n    x = v.pop(0)\n    y = v.pop(0)\n    v.append((x + y) / 2)\n    v.sort()\n\nprint(v[0])"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    n = int(input())\n    ingredients = [int(x) for x in input().split()]\n    ingredients.sort()\n    for i in range(n-1):\n        ingredients[i+1] = (ingredients[i] + ingredients[i+1]) / 2\n    print(ingredients[n-1])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    ingredients = sorted(list(map(int, sys.stdin.readline().split())))\n    while len(ingredients) != 1:\n        ingredients.append((ingredients[0] + ingredients[1]) / 2)\n        ingredients.pop(0)\n        ingredients.pop(0)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    ingredients = list(map(int, sys.stdin.readline().split()))\n    ingredients.sort()\n    while len(ingredients) > 1:\n        x = ingredients.pop(0)\n        y = ingredients.pop(0)\n        ingredients.append((x + y) / 2)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\ningredients = list(map(int, sys.stdin.readline().split()))\n\ningredients.sort()\n\nfor i in range(N-1):\n    ingredients[i+1] = (ingredients[i] + ingredients[i+1]) / 2\n\nprint(ingredients[N-1])"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    ingredients = []\n    for i in range(n):\n        ingredients.append(int(sys.stdin.readline()))\n    ingredients.sort()\n    while len(ingredients) > 1:\n        ingredients.append((ingredients.pop(0) + ingredients.pop(0)) / 2.0)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650426682,
  "id": "cmpl-4yvf825d7h7RhDFQ8gx5RSnWAHohx",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:51:30.681305 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nv = list(map(int, input().split()))\n\nv.sort()\n\nfor i in range(N-1):\n    v[i+1] = (v[i] + v[i+1]) / 2\n\nprint(v[N-1])"
}
2022-04-20 03:51:30.681384 REASON stop
2022-04-20 03:51:30.682493 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\ningredients = sorted([int(x) for x in sys.stdin.readline().split()])\n\nwhile len(ingredients) > 1:\n    ingredients = sorted([(ingredients[i] + ingredients[i+1])/2 for i in range(len(ingredients)-1)])\n\nprint(ingredients[0])"
}
2022-04-20 03:51:30.682585 REASON stop
2022-04-20 03:51:30.683328 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nv = sorted(list(map(int, sys.stdin.readline().split())))\n\nwhile len(v) > 1:\n    x = v.pop(0)\n    y = v.pop(0)\n    v.append((x + y) / 2)\n    v.sort()\n\nprint(v[0])"
}
2022-04-20 03:51:30.683420 REASON stop
2022-04-20 03:51:30.684531 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    n = int(input())\n    ingredients = [int(x) for x in input().split()]\n    ingredients.sort()\n    for i in range(n-1):\n        ingredients[i+1] = (ingredients[i] + ingredients[i+1]) / 2\n    print(ingredients[n-1])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:51:30.684620 REASON stop
2022-04-20 03:51:30.685498 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    ingredients = sorted(list(map(int, sys.stdin.readline().split())))\n    while len(ingredients) != 1:\n        ingredients.append((ingredients[0] + ingredients[1]) / 2)\n        ingredients.pop(0)\n        ingredients.pop(0)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:51:30.685584 REASON stop
2022-04-20 03:51:30.686580 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    ingredients = list(map(int, sys.stdin.readline().split()))\n    ingredients.sort()\n    while len(ingredients) > 1:\n        x = ingredients.pop(0)\n        y = ingredients.pop(0)\n        ingredients.append((x + y) / 2)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:51:30.686655 REASON stop
2022-04-20 03:51:30.687970 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\ningredients = list(map(int, sys.stdin.readline().split()))\n\ningredients.sort()\n\nfor i in range(N-1):\n    ingredients[i+1] = (ingredients[i] + ingredients[i+1]) / 2\n\nprint(ingredients[N-1])"
}
2022-04-20 03:51:30.688080 REASON stop
2022-04-20 03:51:30.690177 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    ingredients = []\n    for i in range(n):\n        ingredients.append(int(sys.stdin.readline()))\n    ingredients.sort()\n    while len(ingredients) > 1:\n        ingredients.append((ingredients.pop(0) + ingredients.pop(0)) / 2.0)\n        ingredients.sort()\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:51:30.690458 REASON stop
