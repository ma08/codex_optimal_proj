2022-04-20 02:52:14.188852 """
In a flower bed, there are N flowers, numbered 1,2,......,N. Initially, the heights of all flowers are 0.
You are given a sequence h=\{h_1,h_2,h_3,......\} as input. You would like to change the height of Flower k to h_k for all k (1 \leq  k \leq N), by repeating the following "watering" operation:
 - Specify integers l and r. Increase the height of Flower x by 1 for all x such that l \leq x \leq r.
Find the minimum number of watering operations required to satisfy the condition.

-----Constraints-----
 - 1 \leq N  \leq 100
 - 0 \leq h_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
h_1 h_2 h_3 ...... h_N

-----Output-----
Print the minimum number of watering operations required to satisfy the condition.

-----Sample Input-----
4
1 2 2 1

-----Sample Output-----
2

The minimum number of watering operations required is 2.
One way to achieve it is:
 - Perform the operation with (l,r)=(1,3).
 - Perform the operation with (l,r)=(2,4).
"""
2022-04-20 02:52:14.188877 --------------------------
2022-04-20 02:52:14.189028 using api key sourya
2022-04-20 02:52:27.764751 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    h = list(map(int,input().split()))\n    ans = 0\n    for i in range(n):\n        if h[i] == 0:\n            continue\n        ans += 1\n        for j in range(i+1,n):\n            if h[j] == 0:\n                break\n            h[j] -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if i == 0:\n        ans += h[i]\n    else:\n        ans += max(0, h[i] - h[i-1])\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += h[i] - h[i-1]\n    if ans < 0:\n        ans = 0\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] > ans:\n        ans = h[i]\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    for j in range(i, N):\n        if h[j] == 0:\n            continue\n        if h[i] == h[j]:\n            ans += 1\n            for k in range(i, j+1):\n                h[k] -= 1\n            break\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    ans += 1\n    for j in range(i, N):\n        if h[j] == 0:\n            break\n        h[j] -= 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# \u6c34\u3084\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\n\n# \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u3092\u53d6\u5f97\nmax_h = max(h)\n\n# \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\nfor i in range(max_h):\n    # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n    count += 1\n    # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\n    for j in range(N):\n        h[j] -= 1\n        # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u3063\u305f\u3089\u3001\u305d\u306e\u82b1\u3073\u3089\u3092\u9664\u5916\n        if h[j] == 0:\n            h.pop(j)\n            N -= 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] > ans:\n        ans = h[i]\n\nprint(ans)"
    }
  ],
  "created": 1650423134,
  "id": "cmpl-4yujuwSwEwER5nVL1LghwznrpJU0g",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:52:27.765123 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    h = list(map(int,input().split()))\n    ans = 0\n    for i in range(n):\n        if h[i] == 0:\n            continue\n        ans += 1\n        for j in range(i+1,n):\n            if h[j] == 0:\n                break\n            h[j] -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:52:27.765199 REASON stop
2022-04-20 02:52:27.766340 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if i == 0:\n        ans += h[i]\n    else:\n        ans += max(0, h[i] - h[i-1])\nprint(ans)"
}
2022-04-20 02:52:27.766426 REASON stop
2022-04-20 02:52:27.767121 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += h[i] - h[i-1]\n    if ans < 0:\n        ans = 0\nprint(ans)"
}
2022-04-20 02:52:27.767195 REASON stop
2022-04-20 02:52:27.792631 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] > ans:\n        ans = h[i]\nprint(ans)"
}
2022-04-20 02:52:27.792807 REASON stop
2022-04-20 02:52:27.794203 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    for j in range(i, N):\n        if h[j] == 0:\n            continue\n        if h[i] == h[j]:\n            ans += 1\n            for k in range(i, j+1):\n                h[k] -= 1\n            break\n\nprint(ans)"
}
2022-04-20 02:52:27.794308 REASON stop
2022-04-20 02:52:27.796761 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    ans += 1\n    for j in range(i, N):\n        if h[j] == 0:\n            break\n        h[j] -= 1\n\nprint(ans)"
}
2022-04-20 02:52:27.796850 REASON stop
2022-04-20 02:52:27.820613 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# \u6c34\u3084\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\n\n# \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u3092\u53d6\u5f97\nmax_h = max(h)\n\n# \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\nfor i in range(max_h):\n    # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n    count += 1\n    # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u308b\n    for j in range(N):\n        h[j] -= 1\n        # \u5404\u82b1\u3073\u3089\u306e\u6700\u5927\u5024\u307e\u3067\u6c34\u3084\u3063\u305f\u3089\u3001\u305d\u306e\u82b1\u3073\u3089\u3092\u9664\u5916\n        if h[j] == 0:\n            h.pop(j)\n            N -= 1\n\nprint(count)"
}
2022-04-20 02:52:27.820789 REASON stop
2022-04-20 02:52:27.841713 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if h[i] > ans:\n        ans = h[i]\n\nprint(ans)"
}
2022-04-20 02:52:27.842042 REASON stop
