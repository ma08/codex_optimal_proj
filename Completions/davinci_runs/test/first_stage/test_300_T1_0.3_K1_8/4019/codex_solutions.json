["\n\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, sys.stdin.readline().split())))\n    if d == 0:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i+1)\n    elif d == 1:\n        print(\"YES\")\n        for i in range(1, n):\n            print(i, i+1)\n    elif d == n-1:\n        print(\"YES\")\n        for i in range(1, n):\n            print(i, i+1)\n        print(1, n)\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, m, d = map(int, input().split())\n    edges = []\n    for i in range(m):\n        edges.append(tuple(map(int, input().split())))\n    if d == 0:\n        print(\"YES\")\n        for i in range(1, n):\n            print(i, i+1)\n        return\n    if d == n-1:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i+1)\n        return\n    if d == 1:\n        print(\"YES\")\n        for i in range(1, n):\n            print(i, i+1)\n        return\n    if d == 2:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i+1)\n        return\n    if d == n-2:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i+1)\n        return\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, m, D = map(int, input().split())\n    edges = []\n    for _ in range(m):\n        edges.append(tuple(map(int, input().split())))\n    graph = [[] for _ in range(n+1)]\n    for edge in edges:\n        graph[edge[0]].append(edge[1])\n        graph[edge[1]].append(edge[0])\n    if len(graph[1]) != D:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    for i in range(2, n+1):\n        if i in graph[1]:\n            print(1, i)\n            graph[1].remove(i)\n            graph[i].remove(1)\n            break\n    for i in range(2, n+1):\n        if i == 1:\n            continue\n        for j in range(2, n+1):\n            if j == i:\n                continue\n            if j in graph[i]:\n                print(i, j)\n                graph[i].remove(j)\n                graph[j].remove(i)\n                break\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, m, d = map(int, input().split())\n    edges = [list(map(int, input().split())) for _ in range(m)]\n    if d == 1:\n        print('YES')\n        for i in range(1, n):\n            print(1, i+1)\n    elif d == n-1:\n        print('YES')\n        for i in range(1, n):\n            print(i, i+1)\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    edges = []\n    for _ in range(m):\n        edges.append(tuple(map(int, sys.stdin.readline().split())))\n    if d == 0:\n        print('YES')\n        for i in range(2, n+1):\n            print(1, i)\n    elif d == n-1:\n        print('YES')\n        for i in range(2, n):\n            print(i, i+1)\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m, d = map(int, input().split())\n    edges = []\n    for i in range(m):\n        edges.append(tuple(map(int, input().split())))\n    if d == 0:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i + 1)\n    elif d == 1:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i + 1)\n    elif d == 2:\n        print(\"YES\")\n        for i in range(1, n):\n            print(1, i + 1)\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n, m, d = map(int, input().split())\n    edges = []\n    for _ in range(m):\n        edges.append(tuple(map(int, input().split())))\n    if d == 0:\n        print('YES')\n        for i in range(2, n + 1):\n            print(1, i)\n    else:\n        print('YES')\n        for i in range(d):\n            print(1, i + 2)\n        for i in range(d, n - 1):\n            print(2, i + 2)\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, m, d = map(int, input().split())\n    edges = [tuple(map(int, input().split())) for _ in range(m)]\n    if d == 1:\n        print('YES')\n        for i in range(2, n+1):\n            print(1, i)\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()"]