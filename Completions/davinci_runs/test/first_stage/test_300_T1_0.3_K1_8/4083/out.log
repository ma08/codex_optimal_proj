2022-04-20 01:59:45.210730 """
The only difference between easy and hard versions is the number of elements in the array.

You are given an array $a$ consisting of $n$ integers. In one move you can choose any $a_i$ and divide it by $2$ rounding down (in other words, in one move you can set $a_i := \lfloor\frac{a_i}{2}\rfloor$).

You can perform such an operation any (possibly, zero) number of times with any $a_i$.

Your task is to calculate the minimum possible number of operations required to obtain at least $k$ equal numbers in the array.

Don't forget that it is possible to have $a_i = 0$ after some operations, thus the answer always exists.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le k \le n \le 50$) — the number of elements in the array and the number of equal numbers required.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 2 \cdot 10^5$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

Print one integer — the minimum possible number of operations required to obtain at least $k$ equal numbers in the array.


-----Examples-----
Input
5 3
1 2 2 4 5

Output
1

Input
5 3
1 2 3 4 5

Output
2

Input
5 3
1 2 3 3 3

Output
0
"""
2022-04-20 01:59:45.210741 --------------------------
2022-04-20 01:59:45.210845 using api key gabby
2022-04-20 02:01:11.737068 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    a.sort()\n    a.reverse()\n    if a[0] == a[k-1]:\n        print 0\n    else:\n        print a[k-1] - a[0] + 1\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\n# a = [1, 2, 2, 4, 5]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 4, 5]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a ="
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\ndef solve(n, k, a):\n    if k == 1:\n        return 0\n    a.sort()\n    if a[0] == a[-1]:\n        return 0\n    if a[0] * 2 > a[-1]:\n        return -1\n    if k == n:\n        return 1\n    if k == n - 1:\n        return 2\n    return 1\n\nprint(solve(n, k, a))"
    },
    {
      "finish_reason": "length",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum element in the array\nmax_a = max(a)\n\n# find the minimum number of operations required to make all elements equal to the maximum element\n# this is the number of times we need to divide the maximum element by 2\n# to find the number of times we need to divide the maximum element by 2, we need to find the number of times we need to multiply it by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n        return\n    count = 0\n    while a[0] < a[-1]:\n        a[0] += 1\n        a[-1] -= 1\n        count += 1\n        a.sort()\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\n# print(a)\n\n# if k == 1:\n#     print(0)\n#     exit()\n\n# if k == n:\n#     print(a[0])\n#     exit()\n\n# if k == n - 1:\n#     print(a[-1])\n#     exit()\n\n# if k == n - 2:\n#     print(a[-2])\n#     exit()\n\n# if k == n - 3:\n#     print(a[-3])\n#     exit()\n\n# if k == n - 4:\n#     print(a[-4])\n#     exit()\n\n# if k == n - 5:\n#     print(a[-5])\n#     exit()\n\n# if k == n - 6:\n#     print(a[-6])\n#     exit()\n\n# if k == n - 7:\n#     print(a[-7])\n#     exit()\n\n# if k == n - 8:\n#     print(a[-8])\n#     exit()\n\n# if k == n - 9:\n#     print(a[-9])\n#     exit()\n\n# if k == n - 10:\n#     print(a[-10])\n#     exit()\n\n# if k == n - 11:\n#     print(a[-11])\n#     exit()\n\n# if k == n - 12:\n#     print(a[-12])\n#     exit()\n\n# if k == n - 13:\n#     print(a[-13])\n#     exit()\n\n# if k == n - 14:\n#     print(a[-14])\n#     exit()\n\n# if k == n - 15:\n#     print(a[-15])\n#     exit()\n\n# if k == n - 16:\n#     print(a[-16])\n#     exit()\n\n# if k == n - 17:\n#     print(a[-17])\n#     exit()\n\n# if k == n - 18:\n#     print(a[-18])\n#     exit()\n\n# if k == n - 19:\n#     print(a[-19])\n#     exit()\n\n# if k == n - 20:\n#     print(a[-20])\n#     exit()\n\n# if k == n - 21:\n#     print(a[-21])\n#     exit()\n\n# if k == n - 22:\n#     print(a[-22])\n#     exit()\n\n# if k == n - 23:\n#     print(a[-23])\n#     exit()\n\n# if k == n - 24:\n#     print(a[-24])\n#     exit()\n\n# if k == n - 25:\n#     print(a[-25])\n#     exit()\n\n# if k == n - 26:\n#     print(a[-26])\n#     exit()\n\n# if k == n - 27:\n#     print(a[-27])\n#     exit()\n\n# if k == n - 28:\n#     print(a[-28])\n#     exit()\n\n# if k == n - 29:\n#     print(a[-29])\n#     exit()\n\n# if k == n - 30:\n#     print(a[-30])\n#     exit()\n\n# if k == n - 31:\n#     print(a[-31])\n#     exit()\n\n# if k == n - 32:\n#     print(a[-32])\n#     exit()\n\n# if k == n - 33:\n#     print(a[-33])\n#     exit()\n\n# if k == n - 34:\n#     print(a[-34])\n#     exit()\n\n# if k == n - 35:\n#     print(a[-35])\n#     exit()\n\n# if k == n - 36:\n#     print(a[-36])\n#     exit()\n\n# if k == n - 37:\n#     print(a[-37])\n#     exit()\n\n# if k == n - 38:\n#     print(a[-38])\n#     exit()\n\n# if k == n - 39:\n#     print(a[-39])\n#     exit()\n\n# if k == n - 40:\n#     print(a[-40])\n#     exit()\n\n# if k == n - 41:\n#     print(a[-41])\n#     exit()\n\n# if k == n - 42:\n#     print(a[-42])\n#     exit()\n\n# if k == n - 43:\n#     print(a[-43])\n#     exit()\n\n# if k == n - 44:\n#     print(a[-44])\n#     exit()\n\n# if k == n - 45:\n#     print(a[-45])\n#     exit()\n\n# if k == n - 46:\n#     print(a[-46])\n#     exit()\n\n# if k == n - 47:\n#     print(a[-47])\n#     exit()\n\n# if k == n - 48:\n#     print(a[-48])\n#     exit()\n\n# if k == n - 49:\n#     print(a[-49])\n#     exit()\n\n# if k == n - 50:\n#     print(a[-50])\n#     exit()\n\n# if k == n - 51:\n#     print(a[-51])\n#     exit()\n\n# if k == n - 52:\n#     print(a[-52])\n#     exit()\n\n# if k == n - 53:\n#     print(a[-53])\n#     exit()\n\n# if k == n - 54:\n#     print(a[-54])\n#     exit()\n\n# if k == n - 55:\n#     print(a[-55])\n#     exit()\n\n# if k == n - 56:\n#     print(a[-56])\n#     exit()\n\n# if k == n - 57:\n#     print(a[-57])\n#     exit()\n\n# if k == n - 58:\n#     print(a[-58])\n#     exit()\n\n# if k == n - 59:\n#     print(a[-59])\n#     exit()\n\n# if k == n - 60:\n#     print(a[-60])\n#     exit()\n\n# if k == n - 61:\n#     print(a[-61])\n#     exit()\n\n# if k == n - 62:\n#     print(a[-62])\n#     exit()\n\n# if k == n - 63:\n#     print(a[-63])\n#     exit()\n\n# if k == n - 64:\n#     print(a[-64])\n#     exit()\n\n# if k == n - 65:\n#     print(a[-65])\n#     exit()\n\n# if k == n - 66:\n#     print(a[-66])\n#     exit()\n\n# if k == n - 67:\n#     print(a[-67])\n#     exit()\n\n# if k == n - 68:\n#     print(a[-68])\n#     exit()\n\n# if k == n - 69:\n#     print(a[-69])\n#     exit()\n\n# if k == n - 70:\n#     print(a[-70])\n#     exit()\n\n# if k == n - 71:\n#     print(a[-71])\n#     exit()\n\n# if k == n - 72:\n#     print(a[-72])\n#     exit()\n\n# if k == n - 73:\n#     print(a[-73])\n#     exit()\n\n# if k == n - 74:\n#     print(a[-74])\n#     exit()\n\n# if k == n - 75:\n#     print(a[-75])\n#     exit()\n\n# if k == n - 76:\n#     print(a[-76])\n#     exit()\n\n# if k == n - 77:\n#     print(a[-77])\n#     exit()\n\n# if k == n - 78:\n#     print(a[-78])\n#     exit()\n\n# if k == n - 79:\n#     print(a[-79])\n#     exit()\n\n# if k == n - 80:\n#     print(a[-80])\n#     exit()\n\n# if k == n - 81:\n#     print(a[-81])\n#     exit()\n\n# if k == n - 82:\n#     print(a[-82])\n#     exit()\n\n# if k == n - 83:\n#     print(a[-83])\n#     exit()\n\n# if k == n - 84:\n#     print(a[-84])\n#     exit()\n\n# if k == n - 85:\n#     print(a[-85])\n#     exit()\n\n# if k == n - 86:\n#     print(a[-86])\n#     exit()\n\n# if k == n - 87:\n#     print(a[-87])\n#     exit()\n\n# if k == n - 88:\n#     print(a[-88])\n#     exit()\n\n# if k == n - 89:\n#     print(a[-89])\n#     exit()\n\n# if k == n - 90:\n#     print(a[-90])\n#     exit()\n\n# if k == n - 91:\n#     print(a[-91])\n#     exit()\n\n# if k == n - 92:\n#     print(a[-92])\n#     exit()\n\n# if k == n - 93:\n#     print(a[-93])\n#     exit()\n\n# if k == n - 94:\n#     print(a[-94])\n#     exit()\n\n# if k == n - 95:\n#     print(a[-95])\n#     exit()\n\n# if k == n - 96:\n#     print(a[-96])\n#     exit()\n\n# if k == n - 97:\n#     print(a[-97])\n#     exit()\n\n# if k == n - 98:\n#     print(a[-98])\n#     exit()\n\n# if k == n - 99:\n#     print(a[-99])\n#     exit()\n\n# if k == n - 100:\n#     print(a[-100])\n#     exit()\n\n# if k == n - 101:\n#     print(a[-101])\n#     exit()\n\n# if k == n - 102:\n#     print(a[-102])\n#     exit()\n\n# if k == n - 103:\n#     print(a[-103])\n#     exit()\n\n# if k == n - 104:\n#     print(a[-104])\n#     exit()\n\n# if k == n - 105:\n#     print(a[-105])\n#     exit()\n\n# if k == n - 106:\n#     print(a[-106])\n#     exit()\n\n# if k == n - 107:\n#     print(a[-107])\n#     exit()\n\n# if k == n - 108:\n#     print(a[-108])\n#     exit()\n\n# if k == n - 109:\n#     print(a[-109])\n#     exit()\n\n# if k == n - 110:\n#     print(a[-110])\n#     exit()\n\n# if k == n - 111:\n#     print(a[-111])\n#     exit()\n\n# if k == n - 112:\n#     print(a[-112])\n#     exit()\n\n# if k == n - 113:\n#     print(a["
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# The idea is to find the largest element in the array and divide it by 2 until it is equal to the smallest element in the array.\n# Then we can do the same with the second largest and the second smallest, and so on.\n# The number of operations is the number of times we divided the largest element by 2.\n\n# First we sort the array in descending order.\na.sort(reverse=True)\n\n# Then we find the number of operations by dividing the largest element by 2 until it is equal to the smallest element.\nops = 0\nwhile a[0] > a[-1]:\n    a[0] //= 2\n    ops += 1\n\n# Finally, we print the number of operations.\nprint(ops)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum element\nmax_a = max(a)\n\n# find the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array\nmin_ops = 0\nwhile max_a >= min(a):\n    max_a //= 2\n    min_ops += 1\n\n# if the minimum element is not equal to the maximum element,\n# then we need to perform at least one more operation\nif min(a) != max_a:\n    min_ops += 1\n\n# if the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array is greater than the number of operations required\n# to obtain at least k equal numbers in the array, then the answer is the minimum number of operations\n# required to divide the maximum element by 2 until it is less than the minimum element in the array\nif min_ops >= k:\n    print(min_ops)\n\n# otherwise, the answer is the number of operations required to obtain at least k equal numbers in the array\nelse:\n    print(k)"
    }
  ],
  "created": 1650419985,
  "id": "cmpl-4ytv7IhaQYffT34gTUh6eUKigo8UT",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:01:11.737653 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    a.sort()\n    a.reverse()\n    if a[0] == a[k-1]:\n        print 0\n    else:\n        print a[k-1] - a[0] + 1\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:01:11.737711 REASON stop
2022-04-20 02:01:11.738147 1 {
  "finish_reason": "length",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\n# a = [1, 2, 2, 4, 5]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 4, 5]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a = [1, 2, 3, 3, 3]\n# n = 5\n# k = 3\n\n# a ="
}
2022-04-20 02:01:11.738217 REASON length
2022-04-20 02:01:11.738224 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\ndef solve(n, k, a):\n    if k == 1:\n        return 0\n    a.sort()\n    if a[0] == a[-1]:\n        return 0\n    if a[0] * 2 > a[-1]:\n        return -1\n    if k == n:\n        return 1\n    if k == n - 1:\n        return 2\n    return 1\n\nprint(solve(n, k, a))"
}
2022-04-20 02:01:11.738258 REASON stop
2022-04-20 02:01:11.738677 3 {
  "finish_reason": "length",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum element in the array\nmax_a = max(a)\n\n# find the minimum number of operations required to make all elements equal to the maximum element\n# this is the number of times we need to divide the maximum element by 2\n# to find the number of times we need to divide the maximum element by 2, we need to find the number of times we need to multiply it by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times we need to divide the maximum element by 2\n# we can do this by finding the number of times"
}
2022-04-20 02:01:11.738811 REASON length
2022-04-20 02:01:11.738818 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n        return\n    count = 0\n    while a[0] < a[-1]:\n        a[0] += 1\n        a[-1] -= 1\n        count += 1\n        a.sort()\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:01:11.738849 REASON stop
2022-04-20 02:01:11.756931 5 {
  "finish_reason": "length",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\n# print(a)\n\n# if k == 1:\n#     print(0)\n#     exit()\n\n# if k == n:\n#     print(a[0])\n#     exit()\n\n# if k == n - 1:\n#     print(a[-1])\n#     exit()\n\n# if k == n - 2:\n#     print(a[-2])\n#     exit()\n\n# if k == n - 3:\n#     print(a[-3])\n#     exit()\n\n# if k == n - 4:\n#     print(a[-4])\n#     exit()\n\n# if k == n - 5:\n#     print(a[-5])\n#     exit()\n\n# if k == n - 6:\n#     print(a[-6])\n#     exit()\n\n# if k == n - 7:\n#     print(a[-7])\n#     exit()\n\n# if k == n - 8:\n#     print(a[-8])\n#     exit()\n\n# if k == n - 9:\n#     print(a[-9])\n#     exit()\n\n# if k == n - 10:\n#     print(a[-10])\n#     exit()\n\n# if k == n - 11:\n#     print(a[-11])\n#     exit()\n\n# if k == n - 12:\n#     print(a[-12])\n#     exit()\n\n# if k == n - 13:\n#     print(a[-13])\n#     exit()\n\n# if k == n - 14:\n#     print(a[-14])\n#     exit()\n\n# if k == n - 15:\n#     print(a[-15])\n#     exit()\n\n# if k == n - 16:\n#     print(a[-16])\n#     exit()\n\n# if k == n - 17:\n#     print(a[-17])\n#     exit()\n\n# if k == n - 18:\n#     print(a[-18])\n#     exit()\n\n# if k == n - 19:\n#     print(a[-19])\n#     exit()\n\n# if k == n - 20:\n#     print(a[-20])\n#     exit()\n\n# if k == n - 21:\n#     print(a[-21])\n#     exit()\n\n# if k == n - 22:\n#     print(a[-22])\n#     exit()\n\n# if k == n - 23:\n#     print(a[-23])\n#     exit()\n\n# if k == n - 24:\n#     print(a[-24])\n#     exit()\n\n# if k == n - 25:\n#     print(a[-25])\n#     exit()\n\n# if k == n - 26:\n#     print(a[-26])\n#     exit()\n\n# if k == n - 27:\n#     print(a[-27])\n#     exit()\n\n# if k == n - 28:\n#     print(a[-28])\n#     exit()\n\n# if k == n - 29:\n#     print(a[-29])\n#     exit()\n\n# if k == n - 30:\n#     print(a[-30])\n#     exit()\n\n# if k == n - 31:\n#     print(a[-31])\n#     exit()\n\n# if k == n - 32:\n#     print(a[-32])\n#     exit()\n\n# if k == n - 33:\n#     print(a[-33])\n#     exit()\n\n# if k == n - 34:\n#     print(a[-34])\n#     exit()\n\n# if k == n - 35:\n#     print(a[-35])\n#     exit()\n\n# if k == n - 36:\n#     print(a[-36])\n#     exit()\n\n# if k == n - 37:\n#     print(a[-37])\n#     exit()\n\n# if k == n - 38:\n#     print(a[-38])\n#     exit()\n\n# if k == n - 39:\n#     print(a[-39])\n#     exit()\n\n# if k == n - 40:\n#     print(a[-40])\n#     exit()\n\n# if k == n - 41:\n#     print(a[-41])\n#     exit()\n\n# if k == n - 42:\n#     print(a[-42])\n#     exit()\n\n# if k == n - 43:\n#     print(a[-43])\n#     exit()\n\n# if k == n - 44:\n#     print(a[-44])\n#     exit()\n\n# if k == n - 45:\n#     print(a[-45])\n#     exit()\n\n# if k == n - 46:\n#     print(a[-46])\n#     exit()\n\n# if k == n - 47:\n#     print(a[-47])\n#     exit()\n\n# if k == n - 48:\n#     print(a[-48])\n#     exit()\n\n# if k == n - 49:\n#     print(a[-49])\n#     exit()\n\n# if k == n - 50:\n#     print(a[-50])\n#     exit()\n\n# if k == n - 51:\n#     print(a[-51])\n#     exit()\n\n# if k == n - 52:\n#     print(a[-52])\n#     exit()\n\n# if k == n - 53:\n#     print(a[-53])\n#     exit()\n\n# if k == n - 54:\n#     print(a[-54])\n#     exit()\n\n# if k == n - 55:\n#     print(a[-55])\n#     exit()\n\n# if k == n - 56:\n#     print(a[-56])\n#     exit()\n\n# if k == n - 57:\n#     print(a[-57])\n#     exit()\n\n# if k == n - 58:\n#     print(a[-58])\n#     exit()\n\n# if k == n - 59:\n#     print(a[-59])\n#     exit()\n\n# if k == n - 60:\n#     print(a[-60])\n#     exit()\n\n# if k == n - 61:\n#     print(a[-61])\n#     exit()\n\n# if k == n - 62:\n#     print(a[-62])\n#     exit()\n\n# if k == n - 63:\n#     print(a[-63])\n#     exit()\n\n# if k == n - 64:\n#     print(a[-64])\n#     exit()\n\n# if k == n - 65:\n#     print(a[-65])\n#     exit()\n\n# if k == n - 66:\n#     print(a[-66])\n#     exit()\n\n# if k == n - 67:\n#     print(a[-67])\n#     exit()\n\n# if k == n - 68:\n#     print(a[-68])\n#     exit()\n\n# if k == n - 69:\n#     print(a[-69])\n#     exit()\n\n# if k == n - 70:\n#     print(a[-70])\n#     exit()\n\n# if k == n - 71:\n#     print(a[-71])\n#     exit()\n\n# if k == n - 72:\n#     print(a[-72])\n#     exit()\n\n# if k == n - 73:\n#     print(a[-73])\n#     exit()\n\n# if k == n - 74:\n#     print(a[-74])\n#     exit()\n\n# if k == n - 75:\n#     print(a[-75])\n#     exit()\n\n# if k == n - 76:\n#     print(a[-76])\n#     exit()\n\n# if k == n - 77:\n#     print(a[-77])\n#     exit()\n\n# if k == n - 78:\n#     print(a[-78])\n#     exit()\n\n# if k == n - 79:\n#     print(a[-79])\n#     exit()\n\n# if k == n - 80:\n#     print(a[-80])\n#     exit()\n\n# if k == n - 81:\n#     print(a[-81])\n#     exit()\n\n# if k == n - 82:\n#     print(a[-82])\n#     exit()\n\n# if k == n - 83:\n#     print(a[-83])\n#     exit()\n\n# if k == n - 84:\n#     print(a[-84])\n#     exit()\n\n# if k == n - 85:\n#     print(a[-85])\n#     exit()\n\n# if k == n - 86:\n#     print(a[-86])\n#     exit()\n\n# if k == n - 87:\n#     print(a[-87])\n#     exit()\n\n# if k == n - 88:\n#     print(a[-88])\n#     exit()\n\n# if k == n - 89:\n#     print(a[-89])\n#     exit()\n\n# if k == n - 90:\n#     print(a[-90])\n#     exit()\n\n# if k == n - 91:\n#     print(a[-91])\n#     exit()\n\n# if k == n - 92:\n#     print(a[-92])\n#     exit()\n\n# if k == n - 93:\n#     print(a[-93])\n#     exit()\n\n# if k == n - 94:\n#     print(a[-94])\n#     exit()\n\n# if k == n - 95:\n#     print(a[-95])\n#     exit()\n\n# if k == n - 96:\n#     print(a[-96])\n#     exit()\n\n# if k == n - 97:\n#     print(a[-97])\n#     exit()\n\n# if k == n - 98:\n#     print(a[-98])\n#     exit()\n\n# if k == n - 99:\n#     print(a[-99])\n#     exit()\n\n# if k == n - 100:\n#     print(a[-100])\n#     exit()\n\n# if k == n - 101:\n#     print(a[-101])\n#     exit()\n\n# if k == n - 102:\n#     print(a[-102])\n#     exit()\n\n# if k == n - 103:\n#     print(a[-103])\n#     exit()\n\n# if k == n - 104:\n#     print(a[-104])\n#     exit()\n\n# if k == n - 105:\n#     print(a[-105])\n#     exit()\n\n# if k == n - 106:\n#     print(a[-106])\n#     exit()\n\n# if k == n - 107:\n#     print(a[-107])\n#     exit()\n\n# if k == n - 108:\n#     print(a[-108])\n#     exit()\n\n# if k == n - 109:\n#     print(a[-109])\n#     exit()\n\n# if k == n - 110:\n#     print(a[-110])\n#     exit()\n\n# if k == n - 111:\n#     print(a[-111])\n#     exit()\n\n# if k == n - 112:\n#     print(a[-112])\n#     exit()\n\n# if k == n - 113:\n#     print(a["
}
2022-04-20 02:01:11.757077 REASON length
2022-04-20 02:01:11.757085 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# The idea is to find the largest element in the array and divide it by 2 until it is equal to the smallest element in the array.\n# Then we can do the same with the second largest and the second smallest, and so on.\n# The number of operations is the number of times we divided the largest element by 2.\n\n# First we sort the array in descending order.\na.sort(reverse=True)\n\n# Then we find the number of operations by dividing the largest element by 2 until it is equal to the smallest element.\nops = 0\nwhile a[0] > a[-1]:\n    a[0] //= 2\n    ops += 1\n\n# Finally, we print the number of operations.\nprint(ops)"
}
2022-04-20 02:01:11.757120 REASON stop
2022-04-20 02:01:11.776336 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum element\nmax_a = max(a)\n\n# find the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array\nmin_ops = 0\nwhile max_a >= min(a):\n    max_a //= 2\n    min_ops += 1\n\n# if the minimum element is not equal to the maximum element,\n# then we need to perform at least one more operation\nif min(a) != max_a:\n    min_ops += 1\n\n# if the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array is greater than the number of operations required\n# to obtain at least k equal numbers in the array, then the answer is the minimum number of operations\n# required to divide the maximum element by 2 until it is less than the minimum element in the array\nif min_ops >= k:\n    print(min_ops)\n\n# otherwise, the answer is the number of operations required to obtain at least k equal numbers in the array\nelse:\n    print(k)"
}
2022-04-20 02:01:11.776608 REASON stop
