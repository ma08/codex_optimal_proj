["\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# The idea is to find the largest element in the array and divide it by 2 until it is equal to the smallest element in the array.\n# Then we can do the same with the second largest and the second smallest, and so on.\n# The number of operations is the number of times we divided the largest element by 2.\n\n# First we sort the array in descending order.\na.sort(reverse=True)\n\n# Then we find the number of operations by dividing the largest element by 2 until it is equal to the smallest element.\nops = 0\nwhile a[0] > a[-1]:\n    a[0] //= 2\n    ops += 1\n\n# Finally, we print the number of operations.\nprint(ops)", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# find the maximum element\nmax_a = max(a)\n\n# find the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array\nmin_ops = 0\nwhile max_a >= min(a):\n    max_a //= 2\n    min_ops += 1\n\n# if the minimum element is not equal to the maximum element,\n# then we need to perform at least one more operation\nif min(a) != max_a:\n    min_ops += 1\n\n# if the minimum number of operations required to divide the maximum element by 2\n# until it is less than the minimum element in the array is greater than the number of operations required\n# to obtain at least k equal numbers in the array, then the answer is the minimum number of operations\n# required to divide the maximum element by 2 until it is less than the minimum element in the array\nif min_ops >= k:\n    print(min_ops)\n\n# otherwise, the answer is the number of operations required to obtain at least k equal numbers in the array\nelse:\n    print(k)", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n        return\n    count = 0\n    while a[0] < a[-1]:\n        a[0] += 1\n        a[-1] -= 1\n        count += 1\n        a.sort()\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\ndef solve(n, k, a):\n    if k == 1:\n        return 0\n    a.sort()\n    if a[0] == a[-1]:\n        return 0\n    if a[0] * 2 > a[-1]:\n        return -1\n    if k == n:\n        return 1\n    if k == n - 1:\n        return 2\n    return 1\n\nprint(solve(n, k, a))", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    a.sort()\n    a.reverse()\n    if a[0] == a[k-1]:\n        print 0\n    else:\n        print a[k-1] - a[0] + 1\n\nif __name__ == \"__main__\":\n    main()"]