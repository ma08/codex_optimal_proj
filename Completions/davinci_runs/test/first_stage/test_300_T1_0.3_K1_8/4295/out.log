2022-04-20 04:05:51.083804 """
Given any integer x, Aoki can do the operation below.
Operation: Replace x with the absolute difference of x and K.
You are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times.

-----Constraints-----
 - 0 ≤ N ≤ 10^{18}
 - 1 ≤ K ≤ 10^{18}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N K

-----Output-----
Print the minimum possible value taken by N after Aoki does the operation zero or more times.

-----Sample Input-----
7 4

-----Sample Output-----
1

Initially, N=7.
After one operation, N becomes |7-4| = 3.
After two operations, N becomes |3-4| = 1, which is the minimum value taken by N.
"""
2022-04-20 04:05:51.083839 --------------------------
2022-04-20 04:05:51.084002 using api key gabby
2022-04-20 04:05:58.432036 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - (n % k))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - n % k)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(k - n % k)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(1)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(min(n % k, k - (n % k)))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - n % k)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(min(n % k, k - (n % k)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().rstrip().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(min(n % k, k - (n % k)))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650427551,
  "id": "cmpl-4yvt9ule2hY0pneS1Rlpcdsn9fd1u",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 04:05:58.432421 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - (n % k))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 04:05:58.432497 REASON stop
2022-04-20 04:05:58.433525 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - n % k)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 04:05:58.433612 REASON stop
2022-04-20 04:05:58.434281 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(k - n % k)"
}
2022-04-20 04:05:58.434364 REASON stop
2022-04-20 04:05:58.435427 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(1)"
}
2022-04-20 04:05:58.435506 REASON stop
2022-04-20 04:05:58.436326 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(min(n % k, k - (n % k)))"
}
2022-04-20 04:05:58.436399 REASON stop
2022-04-20 04:05:58.437140 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(k - n % k)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 04:05:58.437221 REASON stop
2022-04-20 04:05:58.438077 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(min(n % k, k - (n % k)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 04:05:58.438147 REASON stop
2022-04-20 04:05:58.439016 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().rstrip().split())\n    if n % k == 0:\n        print(0)\n    else:\n        print(min(n % k, k - (n % k)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 04:05:58.439220 REASON stop
