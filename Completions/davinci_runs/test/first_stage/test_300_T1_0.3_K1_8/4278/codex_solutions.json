["\n\nimport sys\n\nn = int(input())\n\ns = []\nfor i in range(n):\n    s.append(input())\n\ncount = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if sorted(s[i]) == sorted(s[j]):\n            count += 1\n\nprint(count)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    d = {}\n    for i in range(n):\n        s = sys.stdin.readline().strip()\n        key = ''.join(sorted(s))\n        if key in d:\n            d[key] += 1\n        else:\n            d[key] = 1\n    ans = 0\n    for v in d.values():\n        ans += v * (v - 1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = []\n    for _ in range(n):\n        s.append(sys.stdin.readline().strip())\n\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_anagram(s[i], s[j]):\n                count += 1\n    print(count)\n\ndef is_anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    for c in s1:\n        if s1.count(c) != s2.count(c):\n            return False\n    return True\n\nif __name__ == '__main__':\n    main()", "\n\n# My Answer\n\nN = int(input())\ns = []\nfor i in range(N):\n    s.append(input())\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if sorted(s[i]) == sorted(s[j]):\n            count += 1\n\nprint(count)\n\n# Short Answer\n\nN = int(input())\ns = [input() for i in range(N)]\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        if sorted(s[i]) == sorted(s[j]):\n            count += 1\n\nprint(count)", "\n\nimport sys\nfrom collections import Counter\n\nn = int(input())\ns_list = []\nfor _ in range(n):\n    s_list.append(input())\n\ns_list_sorted = []\nfor s in s_list:\n    s_list_sorted.append(''.join(sorted(s)))\n\ncnt = Counter(s_list_sorted)\n\nans = 0\nfor k, v in cnt.items():\n    if v > 1:\n        ans += v * (v - 1) // 2\n\nprint(ans)", "\n\nimport sys\n\ndef is_anagram(s1, s2):\n    \"\"\"\n    Check if s1 and s2 are anagrams\n    \"\"\"\n    if len(s1) != len(s2):\n        return False\n    else:\n        return sorted(s1) == sorted(s2)\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_str = int(sys.stdin.readline().rstrip())\n    str_list = []\n    for _ in range(num_str):\n        str_list.append(sys.stdin.readline().rstrip())\n    count = 0\n    for i in range(num_str):\n        for j in range(i+1, num_str):\n            if is_anagram(str_list[i], str_list[j]):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nfrom collections import Counter\n\nN = int(input())\ns = [input() for _ in range(N)]\n\nans = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if Counter(s[i]) == Counter(s[j]):\n            ans += 1\n\nprint(ans)", "\n\nimport sys\n\ndef anagram(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_list = list(s1)\n    s2_list = list(s2)\n    s1_list.sort()\n    s2_list.sort()\n    if s1_list == s2_list:\n        return True\n    else:\n        return False\n\ndef main():\n    n = int(sys.stdin.readline())\n    s_list = []\n    for i in range(n):\n        s_list.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if anagram(s_list[i], s_list[j]):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"]