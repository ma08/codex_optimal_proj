2022-04-20 03:04:13.754284 """
There are N pieces of source code. The characteristics of the i-th code is represented by M integers A_{i1}, A_{i2}, ..., A_{iM}.
Additionally, you are given integers B_1, B_2, ..., B_M and C.
The i-th code correctly solves this problem if and only if A_{i1} B_1 + A_{i2} B_2 + ... + A_{iM} B_M + C > 0.
Among the N codes, find the number of codes that correctly solve this problem.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 20
 - -100 \leq A_{ij} \leq 100
 - -100 \leq B_i \leq 100
 - -100 \leq C \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N M C
B_1 B_2 ... B_M
A_{11} A_{12} ... A_{1M}
A_{21} A_{22} ... A_{2M}
\vdots
A_{N1} A_{N2} ... A_{NM}

-----Output-----
Print the number of codes among the given N codes that correctly solve this problem.

-----Sample Input-----
2 3 -10
1 2 3
3 2 1
1 2 2

-----Sample Output-----
1

Only the second code correctly solves this problem, as follows:
 - Since 3 \times 1 + 2 \times 2 + 1 \times 3 + (-10) = 0 \leq 0, the first code does not solve this problem.
 - 1 \times 1 + 2 \times 2 + 2 \times 3 + (-10) = 1 > 0, the second code solves this problem.
"""
2022-04-20 03:04:13.754306 --------------------------
2022-04-20 03:04:13.754473 using api key derek
2022-04-20 03:04:13.921160 in retry 8 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 03:04:18.925083 """
There are N pieces of source code. The characteristics of the i-th code is represented by M integers A_{i1}, A_{i2}, ..., A_{iM}.
Additionally, you are given integers B_1, B_2, ..., B_M and C.
The i-th code correctly solves this problem if and only if A_{i1} B_1 + A_{i2} B_2 + ... + A_{iM} B_M + C > 0.
Among the N codes, find the number of codes that correctly solve this problem.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 20
 - -100 \leq A_{ij} \leq 100
 - -100 \leq B_i \leq 100
 - -100 \leq C \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N M C
B_1 B_2 ... B_M
A_{11} A_{12} ... A_{1M}
A_{21} A_{22} ... A_{2M}
\vdots
A_{N1} A_{N2} ... A_{NM}

-----Output-----
Print the number of codes among the given N codes that correctly solve this problem.

-----Sample Input-----
2 3 -10
1 2 3
3 2 1
1 2 2

-----Sample Output-----
1

Only the second code correctly solves this problem, as follows:
 - Since 3 \times 1 + 2 \times 2 + 1 \times 3 + (-10) = 0 \leq 0, the first code does not solve this problem.
 - 1 \times 1 + 2 \times 2 + 2 \times 3 + (-10) = 1 > 0, the second code solves this problem.
"""
2022-04-20 03:04:18.925127 --------------------------
2022-04-20 03:04:18.925290 using api key gabby
2022-04-20 03:04:28.406346 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Input\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\n# Solve\nans = 0\nfor i in range(N):\n    if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n        ans += 1\n\n# Output\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# N, M, C = map(int, input().split())\n# B = list(map(int, input().split()))\n# A = [list(map(int, input().split())) for _ in range(N)]\n#\n# ans = 0\n# for i in range(N):\n#     if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n#         ans += 1\n# print(ans)\n\n\"\"\"\n-----Question-----\n\n-----Answer-----\n\n-----Explanation-----\n\n\"\"\""
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        if sum([a[i][j]*b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    for i in range(n):\n        a = list(map(int, sys.stdin.readline().split()))\n        if sum([a[j] * b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n\n    ans = 0\n    for i in range(n):\n        if sum(a[i][j] * b[j] for j in range(m)) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if sum([a[j]*b[j] for j in range(m)]) + c > 0:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Read input\nn, m, c = map(int, sys.stdin.readline().rstrip().split())\nb = list(map(int, sys.stdin.readline().rstrip().split()))\na = [list(map(int, sys.stdin.readline().rstrip().split())) for _ in range(n)]\n\n# Count number of codes that correctly solve the problem\ncount = 0\nfor i in range(n):\n    if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n        count += 1\n\n# Print result\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int, input().split())) for _ in range(N)]\n\nans = 0\nfor i in range(N):\n    if sum(A[i][j] * B[j] for j in range(M)) + C > 0:\n        ans += 1\nprint(ans)"
    }
  ],
  "created": 1650423858,
  "id": "cmpl-4yuvap84hucJOrO4m79luRXYrhcGt",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:04:28.406763 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Input\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\n# Solve\nans = 0\nfor i in range(N):\n    if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n        ans += 1\n\n# Output\nprint(ans)"
}
2022-04-20 03:04:28.406833 REASON stop
2022-04-20 03:04:28.407946 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# N, M, C = map(int, input().split())\n# B = list(map(int, input().split()))\n# A = [list(map(int, input().split())) for _ in range(N)]\n#\n# ans = 0\n# for i in range(N):\n#     if sum([A[i][j] * B[j] for j in range(M)]) + C > 0:\n#         ans += 1\n# print(ans)\n\n\"\"\"\n-----Question-----\n\n-----Answer-----\n\n-----Explanation-----\n\n\"\"\""
}
2022-04-20 03:04:28.408060 REASON stop
2022-04-20 03:04:28.408949 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        if sum([a[i][j]*b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:04:28.409047 REASON stop
2022-04-20 03:04:28.424472 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    for i in range(n):\n        a = list(map(int, sys.stdin.readline().split()))\n        if sum([a[j] * b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:04:28.424657 REASON stop
2022-04-20 03:04:28.425474 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m, c = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n\n    ans = 0\n    for i in range(n):\n        if sum(a[i][j] * b[j] for j in range(m)) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:04:28.425578 REASON stop
2022-04-20 03:04:28.438863 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if sum([a[j]*b[j] for j in range(m)]) + c > 0:\n        ans += 1\nprint(ans)"
}
2022-04-20 03:04:28.439011 REASON stop
2022-04-20 03:04:28.440164 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Read input\nn, m, c = map(int, sys.stdin.readline().rstrip().split())\nb = list(map(int, sys.stdin.readline().rstrip().split()))\na = [list(map(int, sys.stdin.readline().rstrip().split())) for _ in range(n)]\n\n# Count number of codes that correctly solve the problem\ncount = 0\nfor i in range(n):\n    if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n        count += 1\n\n# Print result\nprint(count)"
}
2022-04-20 03:04:28.440401 REASON stop
2022-04-20 03:04:28.441199 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int, input().split())) for _ in range(N)]\n\nans = 0\nfor i in range(N):\n    if sum(A[i][j] * B[j] for j in range(M)) + C > 0:\n        ans += 1\nprint(ans)"
}
2022-04-20 03:04:28.441284 REASON stop
