["\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        projects.append((a, b))\n    projects.sort(key=lambda x: x[0])\n    # print(projects)\n    dp = [0] * (r + 1)\n    for i in range(n):\n        for j in range(r, projects[i][0] - 1, -1):\n            dp[j] = max(dp[j], dp[j - projects[i][0]] + projects[i][1])\n    # print(dp)\n    print(max(dp))\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    ans = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n        else:\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects.sort(key=lambda x: x[0])\n    projects.sort(key=lambda x: x[1], reverse=True)\n    ans = 0\n    for a, b in projects:\n        if r >= a:\n            ans += 1\n            r += b\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        projects.append((a, b))\n    projects.sort(key=lambda x: x[0])\n    dp = [0] * (r + 1)\n    for i in range(r + 1):\n        dp[i] = max(dp[i - 1], dp[i - 2])\n        for a, b in projects:\n            if i < a:\n                break\n            dp[i] = max(dp[i], dp[i - a] + b)\n    print(dp[r])\n\nif __name__ == '__main__':\n    main()", "\n\nn, r = map(int, input().split())\n\nprojects = []\nfor _ in range(n):\n    projects.append(tuple(map(int, input().split())))\n\nprojects.sort(key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if r < a:\n        break\n    r += b\n    count += 1\n\nprint(count)", "\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort(key=lambda x: x[1])\n\ncount = 0\nfor project in projects:\n    if project[0] <= r:\n        r += project[1]\n        count += 1\n\nprint(count)", "\n\nimport sys\n\ndef solve(n, r, a, b):\n    dp = [0] * (r + 1)\n    for i in range(n):\n        for j in range(r, a[i] - 1, -1):\n            dp[j] = max(dp[j], dp[j - a[i]] + b[i])\n    return max(dp)\n\ndef main():\n    reader = (tuple(map(int, line.split())) for line in sys.stdin)\n    n, r = next(reader)\n    a, b = zip(*reader)\n    print(solve(n, r, a, b))\n\nif __name__ == \"__main__\":\n    main()"]