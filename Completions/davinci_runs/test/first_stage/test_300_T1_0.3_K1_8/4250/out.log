2022-04-20 03:44:30.779784 """
You are given an array $s$ consisting of $n$ integers.

You have to find any array $t$ of length $k$ such that you can cut out maximum number of copies of array $t$ from array $s$.

Cutting out the copy of $t$ means that for each element $t_i$ of array $t$ you have to find $t_i$ in $s$ and remove it from $s$. If for some $t_i$ you cannot find such element in $s$, then you cannot cut out one more copy of $t$. The both arrays can contain duplicate elements.

For example, if $s = [1, 2, 3, 2, 4, 3, 1]$ and $k = 3$ then one of the possible answers is $t = [1, 2, 3]$. This array $t$ can be cut out $2$ times.   To cut out the first copy of $t$ you can use the elements $[1, \underline{\textbf{2}}, 3, 2, 4, \underline{\textbf{3}}, \underline{\textbf{1}}]$ (use the highlighted elements). After cutting out the first copy of $t$ the array $s$ can look like $[1, 3, 2, 4]$.  To cut out the second copy of $t$ you can use the elements $[\underline{\textbf{1}}, \underline{\textbf{3}}, \underline{\textbf{2}}, 4]$. After cutting out the second copy of $t$ the array $s$ will be $[4]$. 

Your task is to find such array $t$ that you can cut out the copy of $t$ from $s$ maximum number of times. If there are multiple answers, you may choose any of them.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le k \le n \le 2 \cdot 10^5$) — the number of elements in $s$ and the desired number of elements in $t$, respectively.

The second line of the input contains exactly $n$ integers $s_1, s_2, \dots, s_n$ ($1 \le s_i \le 2 \cdot 10^5$).


-----Output-----

Print $k$ integers — the elements of array $t$ such that you can cut out maximum possible number of copies of this array from $s$. If there are multiple answers, print any of them. The required array $t$ can contain duplicate elements. All the elements of $t$ ($t_1, t_2, \dots, t_k$) should satisfy the following condition: $1 \le t_i \le 2 \cdot 10^5$.


-----Examples-----
Input
7 3
1 2 3 2 4 3 1

Output
1 2 3 

Input
10 4
1 3 1 3 10 3 7 7 12 3

Output
7 3 1 3

Input
15 2
1 2 1 1 1 2 1 1 2 1 2 1 1 1 1

Output
1 1 



-----Note-----

The first example is described in the problem statement.

In the second example the only answer is $[7, 3, 1, 3]$ and any its permutations. It can be shown that you cannot choose any other array such that the maximum number of copies you can cut out would be equal to $2$.

In the third example the array $t$ can be cut out $5$ times.
"""
2022-04-20 03:44:30.779815 --------------------------
2022-04-20 03:44:30.779960 using api key sourya
2022-04-20 03:44:30.915724 in retry 8 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 03:44:35.921163 """
You are given an array $s$ consisting of $n$ integers.

You have to find any array $t$ of length $k$ such that you can cut out maximum number of copies of array $t$ from array $s$.

Cutting out the copy of $t$ means that for each element $t_i$ of array $t$ you have to find $t_i$ in $s$ and remove it from $s$. If for some $t_i$ you cannot find such element in $s$, then you cannot cut out one more copy of $t$. The both arrays can contain duplicate elements.

For example, if $s = [1, 2, 3, 2, 4, 3, 1]$ and $k = 3$ then one of the possible answers is $t = [1, 2, 3]$. This array $t$ can be cut out $2$ times.   To cut out the first copy of $t$ you can use the elements $[1, \underline{\textbf{2}}, 3, 2, 4, \underline{\textbf{3}}, \underline{\textbf{1}}]$ (use the highlighted elements). After cutting out the first copy of $t$ the array $s$ can look like $[1, 3, 2, 4]$.  To cut out the second copy of $t$ you can use the elements $[\underline{\textbf{1}}, \underline{\textbf{3}}, \underline{\textbf{2}}, 4]$. After cutting out the second copy of $t$ the array $s$ will be $[4]$. 

Your task is to find such array $t$ that you can cut out the copy of $t$ from $s$ maximum number of times. If there are multiple answers, you may choose any of them.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le k \le n \le 2 \cdot 10^5$) — the number of elements in $s$ and the desired number of elements in $t$, respectively.

The second line of the input contains exactly $n$ integers $s_1, s_2, \dots, s_n$ ($1 \le s_i \le 2 \cdot 10^5$).


-----Output-----

Print $k$ integers — the elements of array $t$ such that you can cut out maximum possible number of copies of this array from $s$. If there are multiple answers, print any of them. The required array $t$ can contain duplicate elements. All the elements of $t$ ($t_1, t_2, \dots, t_k$) should satisfy the following condition: $1 \le t_i \le 2 \cdot 10^5$.


-----Examples-----
Input
7 3
1 2 3 2 4 3 1

Output
1 2 3 

Input
10 4
1 3 1 3 10 3 7 7 12 3

Output
7 3 1 3

Input
15 2
1 2 1 1 1 2 1 1 2 1 2 1 1 1 1

Output
1 1 



-----Note-----

The first example is described in the problem statement.

In the second example the only answer is $[7, 3, 1, 3]$ and any its permutations. It can be shown that you cannot choose any other array such that the maximum number of copies you can cut out would be equal to $2$.

In the third example the array $t$ can be cut out $5$ times.
"""
2022-04-20 03:44:35.921211 --------------------------
2022-04-20 03:44:35.921375 using api key gabby
2022-04-20 03:44:44.284760 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = [0] * k\n\n    for i in range(k):\n        t[i] = max(set(s), key=s.count)\n        s = [x for x in s if x != t[i]]\n\n    print(*t)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ns.sort()\n\nt = []\n\nfor i in range(k):\n    t.append(s[i])\n\nprint(*t)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = [int(x) for x in sys.stdin.readline().split()]\n    s = [int(x) for x in sys.stdin.readline().split()]\n    s.sort()\n    t = []\n    for i in range(k):\n        t.append(s[i])\n    t.sort()\n    print(' '.join([str(x) for x in t]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nc = Counter(s)\n\nt = []\nfor i in range(k):\n    t.append(c.most_common(1)[0][0])\n    c[t[-1]] -= 1\n\nprint(*t)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = list(map(int, sys.stdin.readline().split()))\n    t = []\n    for i in range(k):\n        t.append(max(s))\n        s.remove(max(s))\n    print(' '.join(map(str, t)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef solve(n, k, s):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print \"Hello world!\"\n\n\nif __name__ == \"__main__\":\n    n, k = map(int, raw_input().split())\n    s = map(int, raw_input().split())\n    solve(n, k, s)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef solve(n, k, s):\n\tt = []\n\tfor i in range(k):\n\t\tt.append(max(s))\n\t\ts.remove(max(s))\n\treturn t\n\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\nt = solve(n, k, s)\nprint(*t)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nc = Counter(s)\n\nt = []\nfor i in range(k):\n    t.append(c.most_common(1)[0][0])\n    c[t[-1]] -= 1\n\nprint(*t)"
    }
  ],
  "created": 1650426275,
  "id": "cmpl-4yvYZvKaQZdyVO5moz4kCKhQgj49d",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:44:44.285297 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = list(map(int, input().split()))\n    t = [0] * k\n\n    for i in range(k):\n        t[i] = max(set(s), key=s.count)\n        s = [x for x in s if x != t[i]]\n\n    print(*t)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:44:44.285385 REASON stop
2022-04-20 03:44:44.286453 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ns.sort()\n\nt = []\n\nfor i in range(k):\n    t.append(s[i])\n\nprint(*t)"
}
2022-04-20 03:44:44.286576 REASON stop
2022-04-20 03:44:44.287541 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = [int(x) for x in sys.stdin.readline().split()]\n    s = [int(x) for x in sys.stdin.readline().split()]\n    s.sort()\n    t = []\n    for i in range(k):\n        t.append(s[i])\n    t.sort()\n    print(' '.join([str(x) for x in t]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:44:44.287665 REASON stop
2022-04-20 03:44:44.288599 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nc = Counter(s)\n\nt = []\nfor i in range(k):\n    t.append(c.most_common(1)[0][0])\n    c[t[-1]] -= 1\n\nprint(*t)"
}
2022-04-20 03:44:44.288734 REASON stop
2022-04-20 03:44:44.289525 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = list(map(int, sys.stdin.readline().split()))\n    t = []\n    for i in range(k):\n        t.append(max(s))\n        s.remove(max(s))\n    print(' '.join(map(str, t)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:44:44.289597 REASON stop
2022-04-20 03:44:44.297152 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef solve(n, k, s):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print \"Hello world!\"\n\n\nif __name__ == \"__main__\":\n    n, k = map(int, raw_input().split())\n    s = map(int, raw_input().split())\n    solve(n, k, s)"
}
2022-04-20 03:44:44.297288 REASON stop
2022-04-20 03:44:44.297910 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef solve(n, k, s):\n\tt = []\n\tfor i in range(k):\n\t\tt.append(max(s))\n\t\ts.remove(max(s))\n\treturn t\n\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\nt = solve(n, k, s)\nprint(*t)"
}
2022-04-20 03:44:44.298130 REASON stop
2022-04-20 03:44:44.298698 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nc = Counter(s)\n\nt = []\nfor i in range(k):\n    t.append(c.most_common(1)[0][0])\n    c[t[-1]] -= 1\n\nprint(*t)"
}
2022-04-20 03:44:44.298771 REASON stop
