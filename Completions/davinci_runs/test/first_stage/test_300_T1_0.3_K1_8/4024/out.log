2022-04-20 00:58:18.779439 """
The only difference between the easy and the hard versions is constraints.

A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols. Characters to be deleted are not required to go successively, there can be any gaps between them. For example, for the string "abaca" the following strings are subsequences: "abaca", "aba", "aaa", "a" and "" (empty string). But the following strings are not subsequences: "aabaca", "cb" and "bcaa".

You are given a string $s$ consisting of $n$ lowercase Latin letters.

In one move you can take any subsequence $t$ of the given string and add it to the set $S$. The set $S$ can't contain duplicates. This move costs $n - |t|$, where $|t|$ is the length of the added subsequence (i.e. the price equals to the number of the deleted characters).

Your task is to find out the minimum possible total cost to obtain a set $S$ of size $k$ or report that it is impossible to do so.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le n, k \le 100$) â€” the length of the string and the size of the set, correspondingly.

The second line of the input contains a string $s$ consisting of $n$ lowercase Latin letters.


-----Output-----

Print one integer â€” if it is impossible to obtain the set $S$ of size $k$, print -1. Otherwise, print the minimum possible total cost to do it.


-----Examples-----
Input
4 5
asdf

Output
4

Input
5 6
aaaaa

Output
15

Input
5 7
aaaaa

Output
-1

Input
10 100
ajihiushda

Output
233



-----Note-----

In the first example we can generate $S$ = { "asdf", "asd", "adf", "asf", "sdf" }. The cost of the first element in $S$ is $0$ and the cost of the others is $1$. So the total cost of $S$ is $4$.
"""
2022-04-20 00:58:18.779455 --------------------------
2022-04-20 00:58:18.779560 using api key sourya
2022-04-20 00:59:21.584785 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# SOLUTION\nn, k = map(int, input().split())\ns = input()\n\ndp = [[0 for _ in range(n+1)] for _ in range(k+1)]\n\nfor i in range(1, n+1):\n    dp[1][i] = dp[1][i-1] + i\n\nfor i in range(2, k+1):\n    for j in range(i, n+1):\n        dp[i][j] = dp[i][j-1] + j\n        for l in range(1, j):\n            if s[l-1] == s[j-1]:\n                dp[i][j] = min(dp[i][j], dp[i-1][l-1] + j - l)\n\nif dp[k][n] > 10**9:\n    print(-1)\nelse:\n    print(dp[k][n])"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(sum(n-i for i in range(1, k+1)))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n*k - sum(map(len, set(s))))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().strip()\n    if k > n:\n        print(-1)\n        return\n    if k == n:\n        print(0)\n        return\n    if k == 1:\n        print(n)\n        return\n    if k == 2:\n        print(n - 1)\n        return\n    if k == 3:\n        print(n - 2)\n        return\n    if k == 4:\n        print(n - 3)\n        return\n    if k == 5:\n        print(n - 4)\n        return\n    if k == 6:\n        print(n - 5)\n        return\n    if k == 7:\n        print(n - 6)\n        return\n    if k == 8:\n        print(n - 7)\n        return\n    if k == 9:\n        print(n - 8)\n        return\n    if k == 10:\n        print(n - 9)\n        return\n    if k == 11:\n        print(n - 10)\n        return\n    if k == 12:\n        print(n - 11)\n        return\n    if k == 13:\n        print(n - 12)\n        return\n    if k == 14:\n        print(n - 13)\n        return\n    if k == 15:\n        print(n - 14)\n        return\n    if k == 16:\n        print(n - 15)\n        return\n    if k == 17:\n        print(n - 16)\n        return\n    if k == 18:\n        print(n - 17)\n        return\n    if k == 19:\n        print(n - 18)\n        return\n    if k == 20:\n        print(n - 19)\n        return\n    if k == 21:\n        print(n - 20)\n        return\n    if k == 22:\n        print(n - 21)\n        return\n    if k == 23:\n        print(n - 22)\n        return\n    if k == 24:\n        print(n - 23)\n        return\n    if k == 25:\n        print(n - 24)\n        return\n    if k == 26:\n        print(n - 25)\n        return\n    if k == 27:\n        print(n - 26)\n        return\n    if k == 28:\n        print(n - 27)\n        return\n    if k == 29:\n        print(n - 28)\n        return\n    if k == 30:\n        print(n - 29)\n        return\n    if k == 31:\n        print(n - 30)\n        return\n    if k == 32:\n        print(n - 31)\n        return\n    if k == 33:\n        print(n - 32)\n        return\n    if k == 34:\n        print(n - 33)\n        return\n    if k == 35:\n        print(n - 34)\n        return\n    if k == 36:\n        print(n - 35)\n        return\n    if k == 37:\n        print(n - 36)\n        return\n    if k == 38:\n        print(n - 37)\n        return\n    if k == 39:\n        print(n - 38)\n        return\n    if k == 40:\n        print(n - 39)\n        return\n    if k == 41:\n        print(n - 40)\n        return\n    if k == 42:\n        print(n - 41)\n        return\n    if k == 43:\n        print(n - 42)\n        return\n    if k == 44:\n        print(n - 43)\n        return\n    if k == 45:\n        print(n - 44)\n        return\n    if k == 46:\n        print(n - 45)\n        return\n    if k == 47:\n        print(n - 46)\n        return\n    if k == 48:\n        print(n - 47)\n        return\n    if k == 49:\n        print(n - 48)\n        return\n    if k == 50:\n        print(n - 49)\n        return\n    if k == 51:\n        print(n - 50)\n        return\n    if k == 52:\n        print(n - 51)\n        return\n    if k == 53:\n        print(n - 52)\n        return\n    if k == 54:\n        print(n - 53)\n        return\n    if k == 55:\n        print(n - 54)\n        return\n    if k == 56:\n        print(n - 55)\n        return\n    if k == 57:\n        print(n - 56)\n        return\n    if k == 58:\n        print(n - 57)\n        return\n    if k == 59:\n        print(n - 58)\n        return\n    if k == 60:\n        print(n - 59)\n        return\n    if k == 61:\n        print(n - 60)\n        return\n    if k == 62:\n        print(n - 61)\n        return\n    if k == 63:\n        print(n - 62)\n        return\n    if k == 64:\n        print(n - 63)\n        return\n    if k == 65:\n        print(n - 64)\n        return\n    if k == 66:\n        print(n - 65)\n        return\n    if k == 67:\n        print(n - 66)\n        return\n    if k == 68:\n        print(n - 67)\n        return\n    if k == 69:\n        print(n - 68)\n        return\n    if k == 70:\n        print(n - 69)\n        return\n    if k == 71:\n        print(n - 70)\n        return\n    if k == 72:\n        print(n - 71)\n        return\n    if k == 73:\n        print(n - 72)\n        return\n    if k == 74:\n        print(n - 73)\n        return\n    if k == 75:\n        print(n - 74)\n        return\n    if k == 76:\n        print(n - 75)\n        return\n    if k == 77:\n        print(n - 76)\n        return\n    if k == 78:\n        print(n - 77)\n        return\n    if k == 79:\n        print(n - 78)\n        return\n    if k == 80:\n        print(n - 79)\n        return\n    if k == 81:\n        print(n - 80)\n        return\n    if k == 82:\n        print(n - 81)\n        return\n    if k == 83:\n        print(n - 82)\n        return\n    if k == 84:\n        print(n - 83)\n        return\n    if k == 85:\n        print(n - 84)\n        return\n    if k == 86:\n        print(n - 85)\n        return\n    if k == 87:\n        print(n - 86)\n        return\n    if k == 88:\n        print(n - 87)\n        return\n    if k == 89:\n        print(n - 88)\n        return\n    if k == 90:\n        print(n - 89)\n        return\n    if k == 91:\n        print(n - 90)\n        return\n    if k == 92:\n        print(n - 91)\n        return\n    if k == 93:\n        print(n - 92)\n        return\n    if k == 94:\n        print(n - 93)\n        return\n    if k == 95:\n        print(n - 94)\n        return\n    if k == 96:\n        print(n - 95)\n        return\n    if k == 97:\n        print(n - 96)\n        return\n    if k == 98:\n        print(n - 97)\n        return\n    if k == 99:\n        print(n - 98)\n        return\n    if k == 100:\n        print(n - 99)\n        return\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n * k - sum(map(len, s.split(s[0]))))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n * k - sum(map(len, s.split(s[0]))))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    if k > n:\n        print(-1)\n        return\n    if k == n:\n        print(n * (n - 1) // 2)\n        return\n    if k == 1:\n        print(0)\n        return\n    if k == 2:\n        print(n - 1)\n        return\n    if k == 3:\n        print(2 * (n - 2))\n        return\n    if k == 4:\n        print(3 * (n - 3))\n        return\n    if k == 5:\n        print(4 * (n - 4))\n        return\n    print(-1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().strip()\n    dp = [[0 for _ in range(n+1)] for _ in range(k+1)]\n    for i in range(1, k+1):\n        for j in range(1, n+1):\n            dp[i][j] = dp[i][j-1] + 1\n            for l in range(j-1, 0, -1):\n                if s[l-1] == s[j-1]:\n                    dp[i][j] = min(dp[i][j], dp[i-1][l-1] + j - l)\n    if dp[k][n] == n:\n        print(-1)\n    else:\n        print(dp[k][n])\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650416298,
  "id": "cmpl-4ysxePd22Fv67XEH6nY9tjvpjUEul",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 00:59:21.585320 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# SOLUTION\nn, k = map(int, input().split())\ns = input()\n\ndp = [[0 for _ in range(n+1)] for _ in range(k+1)]\n\nfor i in range(1, n+1):\n    dp[1][i] = dp[1][i-1] + i\n\nfor i in range(2, k+1):\n    for j in range(i, n+1):\n        dp[i][j] = dp[i][j-1] + j\n        for l in range(1, j):\n            if s[l-1] == s[j-1]:\n                dp[i][j] = min(dp[i][j], dp[i-1][l-1] + j - l)\n\nif dp[k][n] > 10**9:\n    print(-1)\nelse:\n    print(dp[k][n])"
}
2022-04-20 00:59:21.585395 REASON stop
2022-04-20 00:59:21.585972 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(sum(n-i for i in range(1, k+1)))"
}
2022-04-20 00:59:21.586054 REASON stop
2022-04-20 00:59:21.586691 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n*k - sum(map(len, set(s))))"
}
2022-04-20 00:59:21.586774 REASON stop
2022-04-20 00:59:21.605342 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().strip()\n    if k > n:\n        print(-1)\n        return\n    if k == n:\n        print(0)\n        return\n    if k == 1:\n        print(n)\n        return\n    if k == 2:\n        print(n - 1)\n        return\n    if k == 3:\n        print(n - 2)\n        return\n    if k == 4:\n        print(n - 3)\n        return\n    if k == 5:\n        print(n - 4)\n        return\n    if k == 6:\n        print(n - 5)\n        return\n    if k == 7:\n        print(n - 6)\n        return\n    if k == 8:\n        print(n - 7)\n        return\n    if k == 9:\n        print(n - 8)\n        return\n    if k == 10:\n        print(n - 9)\n        return\n    if k == 11:\n        print(n - 10)\n        return\n    if k == 12:\n        print(n - 11)\n        return\n    if k == 13:\n        print(n - 12)\n        return\n    if k == 14:\n        print(n - 13)\n        return\n    if k == 15:\n        print(n - 14)\n        return\n    if k == 16:\n        print(n - 15)\n        return\n    if k == 17:\n        print(n - 16)\n        return\n    if k == 18:\n        print(n - 17)\n        return\n    if k == 19:\n        print(n - 18)\n        return\n    if k == 20:\n        print(n - 19)\n        return\n    if k == 21:\n        print(n - 20)\n        return\n    if k == 22:\n        print(n - 21)\n        return\n    if k == 23:\n        print(n - 22)\n        return\n    if k == 24:\n        print(n - 23)\n        return\n    if k == 25:\n        print(n - 24)\n        return\n    if k == 26:\n        print(n - 25)\n        return\n    if k == 27:\n        print(n - 26)\n        return\n    if k == 28:\n        print(n - 27)\n        return\n    if k == 29:\n        print(n - 28)\n        return\n    if k == 30:\n        print(n - 29)\n        return\n    if k == 31:\n        print(n - 30)\n        return\n    if k == 32:\n        print(n - 31)\n        return\n    if k == 33:\n        print(n - 32)\n        return\n    if k == 34:\n        print(n - 33)\n        return\n    if k == 35:\n        print(n - 34)\n        return\n    if k == 36:\n        print(n - 35)\n        return\n    if k == 37:\n        print(n - 36)\n        return\n    if k == 38:\n        print(n - 37)\n        return\n    if k == 39:\n        print(n - 38)\n        return\n    if k == 40:\n        print(n - 39)\n        return\n    if k == 41:\n        print(n - 40)\n        return\n    if k == 42:\n        print(n - 41)\n        return\n    if k == 43:\n        print(n - 42)\n        return\n    if k == 44:\n        print(n - 43)\n        return\n    if k == 45:\n        print(n - 44)\n        return\n    if k == 46:\n        print(n - 45)\n        return\n    if k == 47:\n        print(n - 46)\n        return\n    if k == 48:\n        print(n - 47)\n        return\n    if k == 49:\n        print(n - 48)\n        return\n    if k == 50:\n        print(n - 49)\n        return\n    if k == 51:\n        print(n - 50)\n        return\n    if k == 52:\n        print(n - 51)\n        return\n    if k == 53:\n        print(n - 52)\n        return\n    if k == 54:\n        print(n - 53)\n        return\n    if k == 55:\n        print(n - 54)\n        return\n    if k == 56:\n        print(n - 55)\n        return\n    if k == 57:\n        print(n - 56)\n        return\n    if k == 58:\n        print(n - 57)\n        return\n    if k == 59:\n        print(n - 58)\n        return\n    if k == 60:\n        print(n - 59)\n        return\n    if k == 61:\n        print(n - 60)\n        return\n    if k == 62:\n        print(n - 61)\n        return\n    if k == 63:\n        print(n - 62)\n        return\n    if k == 64:\n        print(n - 63)\n        return\n    if k == 65:\n        print(n - 64)\n        return\n    if k == 66:\n        print(n - 65)\n        return\n    if k == 67:\n        print(n - 66)\n        return\n    if k == 68:\n        print(n - 67)\n        return\n    if k == 69:\n        print(n - 68)\n        return\n    if k == 70:\n        print(n - 69)\n        return\n    if k == 71:\n        print(n - 70)\n        return\n    if k == 72:\n        print(n - 71)\n        return\n    if k == 73:\n        print(n - 72)\n        return\n    if k == 74:\n        print(n - 73)\n        return\n    if k == 75:\n        print(n - 74)\n        return\n    if k == 76:\n        print(n - 75)\n        return\n    if k == 77:\n        print(n - 76)\n        return\n    if k == 78:\n        print(n - 77)\n        return\n    if k == 79:\n        print(n - 78)\n        return\n    if k == 80:\n        print(n - 79)\n        return\n    if k == 81:\n        print(n - 80)\n        return\n    if k == 82:\n        print(n - 81)\n        return\n    if k == 83:\n        print(n - 82)\n        return\n    if k == 84:\n        print(n - 83)\n        return\n    if k == 85:\n        print(n - 84)\n        return\n    if k == 86:\n        print(n - 85)\n        return\n    if k == 87:\n        print(n - 86)\n        return\n    if k == 88:\n        print(n - 87)\n        return\n    if k == 89:\n        print(n - 88)\n        return\n    if k == 90:\n        print(n - 89)\n        return\n    if k == 91:\n        print(n - 90)\n        return\n    if k == 92:\n        print(n - 91)\n        return\n    if k == 93:\n        print(n - 92)\n        return\n    if k == 94:\n        print(n - 93)\n        return\n    if k == 95:\n        print(n - 94)\n        return\n    if k == 96:\n        print(n - 95)\n        return\n    if k == 97:\n        print(n - 96)\n        return\n    if k == 98:\n        print(n - 97)\n        return\n    if k == 99:\n        print(n - 98)\n        return\n    if k == 100:\n        print(n - 99)\n        return\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:59:21.605500 REASON stop
2022-04-20 00:59:21.622311 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n * k - sum(map(len, s.split(s[0]))))"
}
2022-04-20 00:59:21.622455 REASON stop
2022-04-20 00:59:21.623491 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n:\n    print(-1)\nelse:\n    print(n * k - sum(map(len, s.split(s[0]))))"
}
2022-04-20 00:59:21.623603 REASON stop
2022-04-20 00:59:21.624432 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    if k > n:\n        print(-1)\n        return\n    if k == n:\n        print(n * (n - 1) // 2)\n        return\n    if k == 1:\n        print(0)\n        return\n    if k == 2:\n        print(n - 1)\n        return\n    if k == 3:\n        print(2 * (n - 2))\n        return\n    if k == 4:\n        print(3 * (n - 3))\n        return\n    if k == 5:\n        print(4 * (n - 4))\n        return\n    print(-1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:59:21.624552 REASON stop
2022-04-20 00:59:21.625384 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().strip()\n    dp = [[0 for _ in range(n+1)] for _ in range(k+1)]\n    for i in range(1, k+1):\n        for j in range(1, n+1):\n            dp[i][j] = dp[i][j-1] + 1\n            for l in range(j-1, 0, -1):\n                if s[l-1] == s[j-1]:\n                    dp[i][j] = min(dp[i][j], dp[i-1][l-1] + j - l)\n    if dp[k][n] == n:\n        print(-1)\n    else:\n        print(dp[k][n])\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:59:21.625617 REASON stop
