2022-04-20 03:05:48.545047 """
We have N weights indexed 1 to N. The mass of the weight indexed i is W_i.
We will divide these weights into two groups: the weights with indices not greater than T, and those with indices greater than T, for some integer 1 \leq T < N. Let S_1 be the sum of the masses of the weights in the former group, and S_2 be the sum of the masses of the weights in the latter group.
Consider all possible such divisions and find the minimum possible absolute difference of S_1 and S_2.

-----Constraints-----
 - 2 \leq N \leq 100
 - 1 \leq W_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
W_1 W_2 ... W_{N-1} W_N

-----Output-----
Print the minimum possible absolute difference of S_1 and S_2.

-----Sample Input-----
3
1 2 3

-----Sample Output-----
0

If T = 2, S_1 = 1 + 2 = 3 and S_2 = 3, with the absolute difference of 0.
"""
2022-04-20 03:05:48.545068 --------------------------
2022-04-20 03:05:48.545221 using api key gabby
2022-04-20 03:05:48.670754 in retry 8 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 03:05:53.676221 """
We have N weights indexed 1 to N. The mass of the weight indexed i is W_i.
We will divide these weights into two groups: the weights with indices not greater than T, and those with indices greater than T, for some integer 1 \leq T < N. Let S_1 be the sum of the masses of the weights in the former group, and S_2 be the sum of the masses of the weights in the latter group.
Consider all possible such divisions and find the minimum possible absolute difference of S_1 and S_2.

-----Constraints-----
 - 2 \leq N \leq 100
 - 1 \leq W_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
W_1 W_2 ... W_{N-1} W_N

-----Output-----
Print the minimum possible absolute difference of S_1 and S_2.

-----Sample Input-----
3
1 2 3

-----Sample Output-----
0

If T = 2, S_1 = 1 + 2 = 3 and S_2 = 3, with the absolute difference of 0.
"""
2022-04-20 03:05:53.676268 --------------------------
2022-04-20 03:05:53.676438 using api key gabby
2022-04-20 03:05:53.714854 in retry 7 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-20 03:06:03.725002 """
We have N weights indexed 1 to N. The mass of the weight indexed i is W_i.
We will divide these weights into two groups: the weights with indices not greater than T, and those with indices greater than T, for some integer 1 \leq T < N. Let S_1 be the sum of the masses of the weights in the former group, and S_2 be the sum of the masses of the weights in the latter group.
Consider all possible such divisions and find the minimum possible absolute difference of S_1 and S_2.

-----Constraints-----
 - 2 \leq N \leq 100
 - 1 \leq W_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
W_1 W_2 ... W_{N-1} W_N

-----Output-----
Print the minimum possible absolute difference of S_1 and S_2.

-----Sample Input-----
3
1 2 3

-----Sample Output-----
0

If T = 2, S_1 = 1 + 2 = 3 and S_2 = 3, with the absolute difference of 0.
"""
2022-04-20 03:06:03.725040 --------------------------
2022-04-20 03:06:03.725193 using api key sourya
2022-04-20 03:06:20.218139 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\n\nans = S2\nfor i in range(N):\n    S1 += W[i]\n    S2 -= W[i]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    W = list(map(int, sys.stdin.readline().rstrip().split()))\n    S1 = 0\n    S2 = sum(W)\n    min_diff = float('inf')\n    for i in range(N):\n        S1 += W[i]\n        S2 -= W[i]\n        diff = abs(S1 - S2)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3059\nmin_diff = float(\"inf\")\nfor i in range(1, N):\n    s1 = sum(weights[:i])\n    s2 = sum(weights[i:])\n    diff = abs(s1 - s2)\n    min_diff = min(min_diff, diff)\n\nprint(min_diff)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\n# \u4e8c\u5206\u63a2\u7d22\ndef binary_search(n, w, left, right):\n    if left == right:\n        return left\n    mid = (left + right) // 2\n    if n // 2 <= mid:\n        return binary_search(n, w, left, mid)\n    else:\n        return binary_search(n, w, mid + 1, right)\n\n# \u4e8c\u5206\u63a2\u7d22\u3067T\u3092\u6c42\u3081\u308b\nT = binary_search(N, W, 0, N - 1)\n\n# T\u3092\u5883\u306b\u5206\u3051\u308b\nS1 = sum(W[:T + 1])\nS2 = sum(W[T + 1:])\n\n# \u7d76\u5bfe\u5024\u3092\u51fa\u529b\nprint(abs(S1 - S2))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\n# dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u8981\u7d20\u3067\u3001j\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306b\u9078\u3093\u3060\u6642\u306e\u3001S1\u3068S2\u306e\u5dee\u306e\u7d76\u5bfe\u5024\u306e\u6700\u5c0f\u5024\ndp = [[float('inf') for _ in range(sum(W)+1)] for _ in range(N+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(sum(W)+1):\n        if j >= W[i]:\n            dp[i+1][j] = min(dp[i+1][j], dp[i][j-W[i]])\n        dp[i+1][j] = min(dp[i+1][j], dp[i][j] + W[i])\n\nans = float('inf')\nfor j in range(sum(W)+1):\n    ans = min(ans, abs(2*j-sum(W)))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\nans = S2\nfor i in range(N):\n    S1 += W[i]\n    S2 -= W[i]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# Read input\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Calculate the minimum difference\nmin_diff = sum(weights)\nfor i in range(1, N):\n    min_diff = min(min_diff, abs(sum(weights[:i]) - sum(weights[i:])))\n\n# Print the result\nprint(min_diff)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\ns1 = 0\ns2 = sum(weights)\n\nmin_diff = abs(s1 - s2)\n\nfor i in range(N-1):\n    s1 += weights[i]\n    s2 -= weights[i]\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)"
    }
  ],
  "created": 1650423963,
  "id": "cmpl-4yuxHbt4B5zkDQBemCZZx33cShGlD",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:06:20.218589 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\n\nans = S2\nfor i in range(N):\n    S1 += W[i]\n    S2 -= W[i]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
}
2022-04-20 03:06:20.218668 REASON stop
2022-04-20 03:06:20.221468 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    W = list(map(int, sys.stdin.readline().rstrip().split()))\n    S1 = 0\n    S2 = sum(W)\n    min_diff = float('inf')\n    for i in range(N):\n        S1 += W[i]\n        S2 -= W[i]\n        diff = abs(S1 - S2)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:06:20.221600 REASON stop
2022-04-20 03:06:20.222386 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3059\nmin_diff = float(\"inf\")\nfor i in range(1, N):\n    s1 = sum(weights[:i])\n    s2 = sum(weights[i:])\n    diff = abs(s1 - s2)\n    min_diff = min(min_diff, diff)\n\nprint(min_diff)"
}
2022-04-20 03:06:20.222559 REASON stop
2022-04-20 03:06:20.249670 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\n# \u4e8c\u5206\u63a2\u7d22\ndef binary_search(n, w, left, right):\n    if left == right:\n        return left\n    mid = (left + right) // 2\n    if n // 2 <= mid:\n        return binary_search(n, w, left, mid)\n    else:\n        return binary_search(n, w, mid + 1, right)\n\n# \u4e8c\u5206\u63a2\u7d22\u3067T\u3092\u6c42\u3081\u308b\nT = binary_search(N, W, 0, N - 1)\n\n# T\u3092\u5883\u306b\u5206\u3051\u308b\nS1 = sum(W[:T + 1])\nS2 = sum(W[T + 1:])\n\n# \u7d76\u5bfe\u5024\u3092\u51fa\u529b\nprint(abs(S1 - S2))"
}
2022-04-20 03:06:20.249861 REASON stop
2022-04-20 03:06:20.250786 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\n# dp[i][j] = i\u756a\u76ee\u307e\u3067\u306e\u8981\u7d20\u3067\u3001j\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306b\u9078\u3093\u3060\u6642\u306e\u3001S1\u3068S2\u306e\u5dee\u306e\u7d76\u5bfe\u5024\u306e\u6700\u5c0f\u5024\ndp = [[float('inf') for _ in range(sum(W)+1)] for _ in range(N+1)]\ndp[0][0] = 0\n\nfor i in range(N):\n    for j in range(sum(W)+1):\n        if j >= W[i]:\n            dp[i+1][j] = min(dp[i+1][j], dp[i][j-W[i]])\n        dp[i+1][j] = min(dp[i+1][j], dp[i][j] + W[i])\n\nans = float('inf')\nfor j in range(sum(W)+1):\n    ans = min(ans, abs(2*j-sum(W)))\n\nprint(ans)"
}
2022-04-20 03:06:20.250894 REASON stop
2022-04-20 03:06:20.271532 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\nans = S2\nfor i in range(N):\n    S1 += W[i]\n    S2 -= W[i]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
}
2022-04-20 03:06:20.271730 REASON stop
2022-04-20 03:06:20.272696 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# Read input\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Calculate the minimum difference\nmin_diff = sum(weights)\nfor i in range(1, N):\n    min_diff = min(min_diff, abs(sum(weights[:i]) - sum(weights[i:])))\n\n# Print the result\nprint(min_diff)"
}
2022-04-20 03:06:20.273020 REASON stop
2022-04-20 03:06:20.275565 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nweights = list(map(int, input().split()))\n\ns1 = 0\ns2 = sum(weights)\n\nmin_diff = abs(s1 - s2)\n\nfor i in range(N-1):\n    s1 += weights[i]\n    s2 -= weights[i]\n    min_diff = min(min_diff, abs(s1 - s2))\n\nprint(min_diff)"
}
2022-04-20 03:06:20.275664 REASON stop
