["\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    stores = []\n    for _ in range(n):\n        stores.append(list(map(int, input().split())))\n    stores.sort(key=lambda x: x[0])\n    total = 0\n    for store in stores:\n        if m - store[1] >= 0:\n            total += store[0] * store[1]\n            m -= store[1]\n        else:\n            total += store[0] * m\n            break\n    print(total)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    a = []\n    b = []\n    for i in range(n):\n        ai, bi = map(int, input().split())\n        a.append(ai)\n        b.append(bi)\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(m):\n        ans += a[i]\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\nA = []\nB = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\n\ndef solve(N, M, A, B):\n    ans = 0\n    for i in range(N):\n        if B[i] <= M:\n            ans += A[i] * B[i]\n            M -= B[i]\n        else:\n            ans += A[i] * M\n            break\n    return ans\n\nprint(solve(N, M, A, B))", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\ndrinks = []\nfor i in range(N):\n    drinks.append(list(map(int, sys.stdin.readline().split())))\n\ndrinks.sort(key=lambda x: x[0])\n\nans = 0\nfor i in range(N):\n    if M <= drinks[i][1]:\n        ans += M * drinks[i][0]\n        break\n    else:\n        ans += drinks[i][0] * drinks[i][1]\n        M -= drinks[i][1]\n\nprint(ans)", "\n\nimport heapq\n\ndef solve(N, M, A, B):\n    heap = []\n    for i in range(N):\n        heapq.heappush(heap, (A[i], B[i]))\n    ans = 0\n    while M > 0:\n        price, num = heapq.heappop(heap)\n        ans += price * min(num, M)\n        M -= num\n    return ans\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    A = []\n    B = []\n    for i in range(N):\n        a, b = map(int, input().split())\n        A.append(a)\n        B.append(b)\n    print(solve(N, M, A, B))", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nA = []\nB = []\nfor i in range(N):\n    a, b = map(int, sys.stdin.readline().split())\n    A.append(a)\n    B.append(b)\n\nmin_cost = 0\nfor i in range(N):\n    if B[i] >= M:\n        min_cost += A[i] * M\n        break\n    else:\n        min_cost += A[i] * B[i]\n        M -= B[i]\n\nprint(min_cost)", "\n\nN, M = map(int, input().split())\nA = []\nB = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\n\nA.sort()\nB.sort()\n\nans = 0\nfor i in range(N):\n    if M > B[i]:\n        ans += A[i] * B[i]\n        M -= B[i]\n    else:\n        ans += A[i] * M\n        break\n\nprint(ans)", "\n\ndef main():\n    N, M = map(int, input().split())\n    A = []\n    B = []\n    for i in range(N):\n        a, b = map(int, input().split())\n        A.append(a)\n        B.append(b)\n    A = sorted(A)\n    B = sorted(B)\n    ans = 0\n    for i in range(N):\n        if B[i] < M:\n            ans += A[i] * B[i]\n            M -= B[i]\n        else:\n            ans += A[i] * M\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()"]