2022-04-20 02:30:49.299230 """
There are N cities on a number line. The i-th city is located at coordinate x_i.
Your objective is to visit all these cities at least once.
In order to do so, you will first set a positive integer D.
Then, you will depart from coordinate X and perform Move 1 and Move 2 below, as many times as you like:
 - Move 1: travel from coordinate y to coordinate y + D.
 - Move 2: travel from coordinate y to coordinate y - D.
Find the maximum value of D that enables you to visit all the cities.
Here, to visit a city is to travel to the coordinate where that city is located.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 10^5
 - 1 \leq X \leq 10^9
 - 1 \leq x_i \leq 10^9
 - x_i are all different.
 - x_1, x_2, ..., x_N \neq X

-----Input-----
Input is given from Standard Input in the following format:
N X
x_1 x_2 ... x_N

-----Output-----
Print the maximum value of D that enables you to visit all the cities.

-----Sample Input-----
3 3
1 7 11

-----Sample Output-----
2

Setting D = 2 enables you to visit all the cities as follows, and this is the maximum value of such D.
 - Perform Move 2 to travel to coordinate 1.
 - Perform Move 1 to travel to coordinate 3.
 - Perform Move 1 to travel to coordinate 5.
 - Perform Move 1 to travel to coordinate 7.
 - Perform Move 1 to travel to coordinate 9.
 - Perform Move 1 to travel to coordinate 11.
"""
2022-04-20 02:30:49.299254 --------------------------
2022-04-20 02:30:49.299412 using api key gabby
2022-04-20 02:32:13.062453 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(N, X, x):\n    x.sort()\n    x.append(X)\n    x.insert(0, X)\n    x.sort()\n    i = x.index(X)\n    return max(x[i] - x[i-1], x[i+1] - x[i]) // 2\n\ndef main():\n    N, X = map(int, sys.stdin.readline().rstrip().split())\n    x = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solve(N, X, x))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().rstrip().split())\n    xs = sorted(map(int, sys.stdin.readline().rstrip().split()))\n\n    d = 0\n    for i in range(n):\n        if xs[i] < x:\n            d = max(d, x - xs[i])\n        else:\n            d = max(d, xs[i] - x)\n            x = xs[i]\n\n    print(d)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, x = map(int, sys.stdin.readline().split())\nx_i = list(map(int, sys.stdin.readline().split()))\n\nx_i.sort()\n\nd = 0\nfor i in range(n):\n    if i == 0:\n        d = max(d, abs(x_i[i] - x))\n    else:\n        d = max(d, (x_i[i] - x_i[i - 1]) // 2)\n\nprint(d)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\ncities.sort()\n\nmax_distance = 0\nfor i in range(n):\n    if cities[i] < x:\n        max_distance = max(max_distance, x - cities[i])\n    else:\n        max_distance = max(max_distance, cities[i] - x)\n\nprint(max_distance)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    xs = [int(x) for x in sys.stdin.readline().split()]\n    xs.sort()\n    d = 0\n    for i in range(n):\n        if xs[i] < x:\n            d = max(d, x - xs[i])\n        else:\n            d = max(d, xs[i] - x)\n    print(d)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = list(map(int, sys.stdin.readline().split()))\n    x_list.sort()\n    x_list.append(x)\n\n    d_min = 0\n    for i in range(n):\n        d_min = max(d_min, x_list[i+1] - x_list[i])\n    print(d_min)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# n = int(input())\n# x = int(input())\n# x_list = list(map(int, input().split()))\nn = 3\nx = 3\nx_list = [1, 7, 11]\n\nx_list.sort()\n# print(x_list)\n\n# x_list = [1, 7, 11]\n# x = 3\n\n# x_list = [1, 7, 11]\n# x = 4\n\n# x_list = [1, 7, 11]\n# x = 5\n\n# x_list = [1, 7, 11]\n# x = 6\n\n# x_list = [1, 7, 11]\n# x = 7\n\n# x_list = [1, 7, 11]\n# x = 8\n\n# x_list = [1, 7, 11]\n# x = 9\n\n# x_list = [1, 7, 11]\n# x = 10\n\n# x_list = [1, 7, 11]\n# x = 11\n\n# x_list = [1, 7, 11]\n# x = 12\n\n# x_list = [1, 7, 11]\n# x = 13\n\n# x_list = [1, 7, 11]\n# x = 14\n\n# x_list = [1, 7, 11]\n# x = 15\n\n# x_list = [1, 7, 11]\n# x = 16\n\n# x_list = [1, 7, 11]\n# x = 17\n\n# x_list = [1, 7, 11]\n# x = 18\n\n# x_list = [1, 7, 11]\n# x = 19\n\n# x_list = [1, 7, 11]\n# x = 20\n\n# x_list = [1, 7, 11]\n# x = 21\n\n# x_list = [1, 7, 11]\n# x = 22\n\n# x_list = [1, 7, 11]\n# x = 23\n\n# x_list = [1, 7, 11]\n# x = 24\n\n# x_list = [1, 7, 11]\n# x = 25\n\n# x_list = [1, 7, 11]\n# x = 26\n\n# x_list = [1, 7, 11]\n# x = 27\n\n# x_list = [1, 7, 11]\n# x = 28\n\n# x_list = [1, 7, 11]\n# x = 29\n\n# x_list = [1, 7, 11]\n# x = 30\n\n# x_list = [1, 7, 11]\n# x = 31\n\n# x_list = [1, 7, 11]\n# x = 32\n\n# x_list = [1, 7, 11]\n# x = 33\n\n# x_list = [1, 7, 11]\n# x = 34\n\n# x_list = [1, 7, 11]\n# x = 35\n\n# x_list = [1, 7, 11]\n# x = 36\n\n# x_list = [1, 7, 11]\n# x = 37\n\n# x_list = [1, 7, 11]\n# x = 38\n\n# x_list = [1, 7, 11]\n# x = 39\n\n# x_list = [1, 7, 11]\n# x = 40\n\n# x_list = [1, 7, 11]\n# x = 41\n\n# x_list = [1, 7, 11]\n# x = 42\n\n# x_list = [1, 7, 11]\n# x = 43\n\n# x_list = [1, 7, 11]\n# x = 44\n\n# x_list = [1, 7, 11]\n# x = 45\n\n# x_list = [1, 7, 11]\n# x = 46\n\n# x_list = [1, 7, 11]\n# x = 47\n\n# x_list = [1, 7, 11]\n# x = 48\n\n# x_list = [1, 7, 11]\n# x = 49\n\n# x_list = [1, 7, 11]\n# x = 50\n\n# x_list = [1, 7, 11]\n# x = 51\n\n# x_list = [1, 7, 11]\n# x = 52\n\n# x_list = [1, 7, 11]\n# x = 53\n\n# x_list = [1, 7, 11]\n# x = 54\n\n# x_list = [1, 7, 11]\n# x = 55\n\n# x_list = [1, 7, 11]\n# x = 56\n\n# x_list = [1, 7, 11]\n# x = 57\n\n# x_list = [1, 7, 11]\n# x = 58\n\n# x_list = [1, 7, 11]\n# x = 59\n\n# x_list = [1, 7, 11]\n# x = 60\n\n# x_list = [1, 7, 11]\n# x = 61\n\n# x_list = [1, 7, 11]\n# x = 62\n\n# x_list = [1, 7, 11]\n# x = 63\n\n# x_list = [1, 7, 11]\n# x = 64\n\n# x_list = [1, 7, 11]\n# x = 65\n\n# x_list = [1, 7, 11]\n# x = 66\n\n# x_list = [1, 7, 11]\n# x = 67\n\n# x_list = [1, 7, 11]\n# x = 68\n\n# x_list = [1, 7, 11]\n# x = 69\n\n# x_list = [1, 7, 11]\n# x = 70\n\n# x_list = [1, 7, 11]\n# x = 71\n\n# x_list = [1, 7, 11]\n# x = 72\n\n# x_list = [1, 7, 11]\n# x = 73\n\n# x_list = [1, 7, 11]\n# x = 74\n\n# x_list = [1, 7, 11]\n# x = 75\n\n# x_list = [1, 7, 11]\n# x = 76\n\n# x_list = [1, 7, 11]\n# x = 77\n\n# x_list = [1, 7, 11]\n# x = 78\n\n# x_list = [1, 7, 11]\n# x = 79\n\n# x_list = [1, 7, 11]\n# x = 80\n\n# x_list = [1, 7, 11]\n# x = 81\n\n# x_list = [1, 7, 11]\n# x = 82\n\n# x_list = [1, 7, 11]\n# x = 83\n\n# x_list = [1, 7, 11]\n# x = 84\n\n# x_list = [1, 7, 11]\n# x = 85\n\n# x_list = [1, 7, 11]\n# x = 86\n\n# x_list = [1, 7, 11]\n# x = 87\n\n# x_list = [1, 7, 11]\n# x = 88\n\n# x_list = [1, 7, 11]\n# x = 89\n\n# x_list = [1, 7, 11]\n# x = 90\n\n# x_list = [1, 7, 11]\n# x = 91\n\n# x_list = [1, 7, 11]\n# x = 92\n\n# x_list = [1, 7, 11]\n# x = 93\n\n# x_list = [1, 7, 11]\n# x = 94\n\n# x_list = [1, 7, 11]\n# x = 95\n\n# x_list = [1, 7, 11]\n# x = 96\n\n# x_list = [1, 7, 11]\n# x = 97\n\n# x_list = [1, 7, 11]\n# x = 98\n\n# x_list = [1, 7, 11]\n# x = 99\n\n# x_list = [1, 7, 11]\n# x = 100\n\n# x_list = [1, 7, 11]\n# x = 101\n\n# x_list = [1, 7, 11]\n# x = 102\n\n# x_list = [1, 7, 11]\n# x = 103\n\n# x_list = [1, 7, 11]\n# x = 104\n\n# x_list = [1, 7, 11]\n# x = 105\n\n# x_list = [1, 7, 11]\n# x = 106\n\n# x_list = [1, 7, 11]\n# x = 107\n\n# x_list = [1, 7, 11]\n# x = 108\n\n# x_list = [1, 7, 11]\n# x = 109\n\n# x_list = [1, 7, 11]\n# x = 110\n\n# x_list = [1, 7, 11]\n# x = 111\n\n# x_list = [1, 7, 11]\n# x = 112\n\n# x_list = [1, 7, 11]\n# x = 113\n\n# x_list = [1, 7, 11]\n# x = 114\n\n# x_list = [1, 7, 11]\n# x = 115\n\n# x_list = [1, 7, 11]\n# x = 116\n\n# x_list = [1, 7, 11]\n# x = 117\n\n# x_list = [1, 7, 11]\n# x = 118\n\n# x_list = [1, 7, 11]\n# x = 119\n\n# x_list = [1, 7, 11]\n# x = 120\n\n# x_list = [1, 7, 11]\n# x = 121\n\n# x_list = [1, 7, 11]\n# x = 122\n\n# x_list = [1, 7, 11]\n# x = 123\n\n# x_list = [1, 7, 11]\n# x = 124\n\n# x_list = [1, 7, 11]\n# x = 125\n\n# x_list = [1, 7, 11]\n# x = 126\n\n# x_list = [1, 7, 11]\n# x = 127\n\n# x_list = [1, 7, 11]\n# x = 128\n\n# x_list = [1, 7, 11]\n# x = 129\n\n# x_list = [1, 7, 11]\n# x = 130\n\n# x_list = [1, 7, 11]\n# x = 131\n\n# x_list = [1, 7, 11]\n# x = 132\n\n# x_list = [1, 7, 11]\n# x = 133\n\n# x_list = [1, 7, 11]\n# x = 134\n\n# x_list = [1, 7, 11]\n# x = 135\n\n# x_list = [1, 7, 11]\n# x = 136\n\n# x_list = [1, 7, 11]\n# x = 137\n\n# x_list = [1, 7, 11]\n# x = 138\n\n# x_list = [1, 7, 11]\n# x = 139\n\n# x_list = [1, 7, 11]\n# x = 140\n\n# x_list = [1, 7, 11]\n# x = 141\n\n# x_list = [1, 7, 11]\n# x = 142\n\n# x_list = [1, 7, 11]\n# x = 143\n\n# x_list = [1, 7, 11]\n# x = 144\n\n# x_list = [1, 7, 11]\n# x = 145\n\n# x_list = [1, 7, 11]\n# x = 146\n\n# x_list = [1, 7, 11]\n# x = 147\n\n# x_list = [1, 7, 11]\n# x = 148\n\n# x_list = [1, 7, 11]\n# x = 149\n\n# x_list = [1, 7, 11]\n# x = 150\n\n# x_list = [1, 7, 11]\n# x ="
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\ncities.sort()\n\nif cities[0] > x:\n    cities.insert(0, x - (cities[0] - x))\nelif cities[-1] < x:\n    cities.append(x + (x - cities[-1]))\nelse:\n    for i in range(n):\n        if cities[i] > x:\n            cities.insert(i, x)\n            break\n\nprint(cities)\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u3089\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b"
    }
  ],
  "created": 1650421849,
  "id": "cmpl-4yuPB82m1vc4Xd9sOW9GX7jeQ4CH5",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:32:13.062923 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(N, X, x):\n    x.sort()\n    x.append(X)\n    x.insert(0, X)\n    x.sort()\n    i = x.index(X)\n    return max(x[i] - x[i-1], x[i+1] - x[i]) // 2\n\ndef main():\n    N, X = map(int, sys.stdin.readline().rstrip().split())\n    x = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solve(N, X, x))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:32:13.062980 REASON stop
2022-04-20 02:32:13.067966 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().rstrip().split())\n    xs = sorted(map(int, sys.stdin.readline().rstrip().split()))\n\n    d = 0\n    for i in range(n):\n        if xs[i] < x:\n            d = max(d, x - xs[i])\n        else:\n            d = max(d, xs[i] - x)\n            x = xs[i]\n\n    print(d)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:32:13.068091 REASON stop
2022-04-20 02:32:13.084886 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, x = map(int, sys.stdin.readline().split())\nx_i = list(map(int, sys.stdin.readline().split()))\n\nx_i.sort()\n\nd = 0\nfor i in range(n):\n    if i == 0:\n        d = max(d, abs(x_i[i] - x))\n    else:\n        d = max(d, (x_i[i] - x_i[i - 1]) // 2)\n\nprint(d)"
}
2022-04-20 02:32:13.085047 REASON stop
2022-04-20 02:32:13.133754 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\ncities.sort()\n\nmax_distance = 0\nfor i in range(n):\n    if cities[i] < x:\n        max_distance = max(max_distance, x - cities[i])\n    else:\n        max_distance = max(max_distance, cities[i] - x)\n\nprint(max_distance)"
}
2022-04-20 02:32:13.133897 REASON stop
2022-04-20 02:32:13.157826 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    xs = [int(x) for x in sys.stdin.readline().split()]\n    xs.sort()\n    d = 0\n    for i in range(n):\n        if xs[i] < x:\n            d = max(d, x - xs[i])\n        else:\n            d = max(d, xs[i] - x)\n    print(d)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:32:13.157980 REASON stop
2022-04-20 02:32:13.175321 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = list(map(int, sys.stdin.readline().split()))\n    x_list.sort()\n    x_list.append(x)\n\n    d_min = 0\n    for i in range(n):\n        d_min = max(d_min, x_list[i+1] - x_list[i])\n    print(d_min)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:32:13.175469 REASON stop
2022-04-20 02:32:13.194483 6 {
  "finish_reason": "length",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# n = int(input())\n# x = int(input())\n# x_list = list(map(int, input().split()))\nn = 3\nx = 3\nx_list = [1, 7, 11]\n\nx_list.sort()\n# print(x_list)\n\n# x_list = [1, 7, 11]\n# x = 3\n\n# x_list = [1, 7, 11]\n# x = 4\n\n# x_list = [1, 7, 11]\n# x = 5\n\n# x_list = [1, 7, 11]\n# x = 6\n\n# x_list = [1, 7, 11]\n# x = 7\n\n# x_list = [1, 7, 11]\n# x = 8\n\n# x_list = [1, 7, 11]\n# x = 9\n\n# x_list = [1, 7, 11]\n# x = 10\n\n# x_list = [1, 7, 11]\n# x = 11\n\n# x_list = [1, 7, 11]\n# x = 12\n\n# x_list = [1, 7, 11]\n# x = 13\n\n# x_list = [1, 7, 11]\n# x = 14\n\n# x_list = [1, 7, 11]\n# x = 15\n\n# x_list = [1, 7, 11]\n# x = 16\n\n# x_list = [1, 7, 11]\n# x = 17\n\n# x_list = [1, 7, 11]\n# x = 18\n\n# x_list = [1, 7, 11]\n# x = 19\n\n# x_list = [1, 7, 11]\n# x = 20\n\n# x_list = [1, 7, 11]\n# x = 21\n\n# x_list = [1, 7, 11]\n# x = 22\n\n# x_list = [1, 7, 11]\n# x = 23\n\n# x_list = [1, 7, 11]\n# x = 24\n\n# x_list = [1, 7, 11]\n# x = 25\n\n# x_list = [1, 7, 11]\n# x = 26\n\n# x_list = [1, 7, 11]\n# x = 27\n\n# x_list = [1, 7, 11]\n# x = 28\n\n# x_list = [1, 7, 11]\n# x = 29\n\n# x_list = [1, 7, 11]\n# x = 30\n\n# x_list = [1, 7, 11]\n# x = 31\n\n# x_list = [1, 7, 11]\n# x = 32\n\n# x_list = [1, 7, 11]\n# x = 33\n\n# x_list = [1, 7, 11]\n# x = 34\n\n# x_list = [1, 7, 11]\n# x = 35\n\n# x_list = [1, 7, 11]\n# x = 36\n\n# x_list = [1, 7, 11]\n# x = 37\n\n# x_list = [1, 7, 11]\n# x = 38\n\n# x_list = [1, 7, 11]\n# x = 39\n\n# x_list = [1, 7, 11]\n# x = 40\n\n# x_list = [1, 7, 11]\n# x = 41\n\n# x_list = [1, 7, 11]\n# x = 42\n\n# x_list = [1, 7, 11]\n# x = 43\n\n# x_list = [1, 7, 11]\n# x = 44\n\n# x_list = [1, 7, 11]\n# x = 45\n\n# x_list = [1, 7, 11]\n# x = 46\n\n# x_list = [1, 7, 11]\n# x = 47\n\n# x_list = [1, 7, 11]\n# x = 48\n\n# x_list = [1, 7, 11]\n# x = 49\n\n# x_list = [1, 7, 11]\n# x = 50\n\n# x_list = [1, 7, 11]\n# x = 51\n\n# x_list = [1, 7, 11]\n# x = 52\n\n# x_list = [1, 7, 11]\n# x = 53\n\n# x_list = [1, 7, 11]\n# x = 54\n\n# x_list = [1, 7, 11]\n# x = 55\n\n# x_list = [1, 7, 11]\n# x = 56\n\n# x_list = [1, 7, 11]\n# x = 57\n\n# x_list = [1, 7, 11]\n# x = 58\n\n# x_list = [1, 7, 11]\n# x = 59\n\n# x_list = [1, 7, 11]\n# x = 60\n\n# x_list = [1, 7, 11]\n# x = 61\n\n# x_list = [1, 7, 11]\n# x = 62\n\n# x_list = [1, 7, 11]\n# x = 63\n\n# x_list = [1, 7, 11]\n# x = 64\n\n# x_list = [1, 7, 11]\n# x = 65\n\n# x_list = [1, 7, 11]\n# x = 66\n\n# x_list = [1, 7, 11]\n# x = 67\n\n# x_list = [1, 7, 11]\n# x = 68\n\n# x_list = [1, 7, 11]\n# x = 69\n\n# x_list = [1, 7, 11]\n# x = 70\n\n# x_list = [1, 7, 11]\n# x = 71\n\n# x_list = [1, 7, 11]\n# x = 72\n\n# x_list = [1, 7, 11]\n# x = 73\n\n# x_list = [1, 7, 11]\n# x = 74\n\n# x_list = [1, 7, 11]\n# x = 75\n\n# x_list = [1, 7, 11]\n# x = 76\n\n# x_list = [1, 7, 11]\n# x = 77\n\n# x_list = [1, 7, 11]\n# x = 78\n\n# x_list = [1, 7, 11]\n# x = 79\n\n# x_list = [1, 7, 11]\n# x = 80\n\n# x_list = [1, 7, 11]\n# x = 81\n\n# x_list = [1, 7, 11]\n# x = 82\n\n# x_list = [1, 7, 11]\n# x = 83\n\n# x_list = [1, 7, 11]\n# x = 84\n\n# x_list = [1, 7, 11]\n# x = 85\n\n# x_list = [1, 7, 11]\n# x = 86\n\n# x_list = [1, 7, 11]\n# x = 87\n\n# x_list = [1, 7, 11]\n# x = 88\n\n# x_list = [1, 7, 11]\n# x = 89\n\n# x_list = [1, 7, 11]\n# x = 90\n\n# x_list = [1, 7, 11]\n# x = 91\n\n# x_list = [1, 7, 11]\n# x = 92\n\n# x_list = [1, 7, 11]\n# x = 93\n\n# x_list = [1, 7, 11]\n# x = 94\n\n# x_list = [1, 7, 11]\n# x = 95\n\n# x_list = [1, 7, 11]\n# x = 96\n\n# x_list = [1, 7, 11]\n# x = 97\n\n# x_list = [1, 7, 11]\n# x = 98\n\n# x_list = [1, 7, 11]\n# x = 99\n\n# x_list = [1, 7, 11]\n# x = 100\n\n# x_list = [1, 7, 11]\n# x = 101\n\n# x_list = [1, 7, 11]\n# x = 102\n\n# x_list = [1, 7, 11]\n# x = 103\n\n# x_list = [1, 7, 11]\n# x = 104\n\n# x_list = [1, 7, 11]\n# x = 105\n\n# x_list = [1, 7, 11]\n# x = 106\n\n# x_list = [1, 7, 11]\n# x = 107\n\n# x_list = [1, 7, 11]\n# x = 108\n\n# x_list = [1, 7, 11]\n# x = 109\n\n# x_list = [1, 7, 11]\n# x = 110\n\n# x_list = [1, 7, 11]\n# x = 111\n\n# x_list = [1, 7, 11]\n# x = 112\n\n# x_list = [1, 7, 11]\n# x = 113\n\n# x_list = [1, 7, 11]\n# x = 114\n\n# x_list = [1, 7, 11]\n# x = 115\n\n# x_list = [1, 7, 11]\n# x = 116\n\n# x_list = [1, 7, 11]\n# x = 117\n\n# x_list = [1, 7, 11]\n# x = 118\n\n# x_list = [1, 7, 11]\n# x = 119\n\n# x_list = [1, 7, 11]\n# x = 120\n\n# x_list = [1, 7, 11]\n# x = 121\n\n# x_list = [1, 7, 11]\n# x = 122\n\n# x_list = [1, 7, 11]\n# x = 123\n\n# x_list = [1, 7, 11]\n# x = 124\n\n# x_list = [1, 7, 11]\n# x = 125\n\n# x_list = [1, 7, 11]\n# x = 126\n\n# x_list = [1, 7, 11]\n# x = 127\n\n# x_list = [1, 7, 11]\n# x = 128\n\n# x_list = [1, 7, 11]\n# x = 129\n\n# x_list = [1, 7, 11]\n# x = 130\n\n# x_list = [1, 7, 11]\n# x = 131\n\n# x_list = [1, 7, 11]\n# x = 132\n\n# x_list = [1, 7, 11]\n# x = 133\n\n# x_list = [1, 7, 11]\n# x = 134\n\n# x_list = [1, 7, 11]\n# x = 135\n\n# x_list = [1, 7, 11]\n# x = 136\n\n# x_list = [1, 7, 11]\n# x = 137\n\n# x_list = [1, 7, 11]\n# x = 138\n\n# x_list = [1, 7, 11]\n# x = 139\n\n# x_list = [1, 7, 11]\n# x = 140\n\n# x_list = [1, 7, 11]\n# x = 141\n\n# x_list = [1, 7, 11]\n# x = 142\n\n# x_list = [1, 7, 11]\n# x = 143\n\n# x_list = [1, 7, 11]\n# x = 144\n\n# x_list = [1, 7, 11]\n# x = 145\n\n# x_list = [1, 7, 11]\n# x = 146\n\n# x_list = [1, 7, 11]\n# x = 147\n\n# x_list = [1, 7, 11]\n# x = 148\n\n# x_list = [1, 7, 11]\n# x = 149\n\n# x_list = [1, 7, 11]\n# x = 150\n\n# x_list = [1, 7, 11]\n# x ="
}
2022-04-20 02:32:13.194675 REASON length
2022-04-20 02:32:13.194684 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\ncities.sort()\n\nif cities[0] > x:\n    cities.insert(0, x - (cities[0] - x))\nelif cities[-1] < x:\n    cities.append(x + (x - cities[-1]))\nelse:\n    for i in range(n):\n        if cities[i] > x:\n            cities.insert(i, x)\n            break\n\nprint(cities)\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u3089\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n# \u5168\u90e8\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u6700\u5927\u306eD\u3092\u6c42\u3081\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089D\u3092\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304b\u3089\u6700\u3082\u8fd1\u3044\u90fd\u5e02\u307e\u3067\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u305d\u308c\u3092D\u3068\u3059\u308c\u3070\u826f\u3044\n# \u305f\u3060\u3057\u3001X\u304c\u90fd\u5e02\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u305d\u306e\u305f\u3081\u306b\u306f\u3001X\u304c\u5165\u3063\u3066\u3044\u308b\u90fd\u5e02\u3092\u63a2\u3057\u3001\u305d\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\n# \u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u5168\u3066\u306e\u90fd\u5e02\u3092\u8a2a\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308bD\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b"
}
2022-04-20 02:32:13.194834 REASON stop
