["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    pockets = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            pockets += 1\n    print(pockets)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\npockets = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        pockets += 1\n\nprint(pockets)", "\n\nn = int(input())\ncoins = list(map(int, input().split()))\n\n# Sort the coins by value\ncoins.sort()\n\n# Initialize the number of pockets to 1\npockets = 1\n\n# Initialize the current pocket to the first coin\ncurrent_pocket = coins[0]\n\n# Iterate through the coins\nfor coin in coins:\n    # If the current coin is the same as the current pocket, increment the number of pockets\n    if coin == current_pocket:\n        pockets += 1\n        current_pocket = coin\n    # If the current coin is greater than the current pocket, set the current pocket to the current coin\n    elif coin > current_pocket:\n        current_pocket = coin\n\n# Print the number of pockets\nprint(pockets)", "\n\n# SOLUTION\nn = int(input())\na = list(map(int, input().split()))\n\na = sorted(a)\n\ncount = 1\nfor i in range(n-1):\n    if a[i] != a[i+1]:\n        count += 1\n\nprint(count)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 0\n\nfor i in range(n):\n    if i == 0:\n        count += 1\n    else:\n        if a[i] != a[i-1]:\n            count += 1\n\nprint(count)", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom collections import defaultdict\n\nn = int(input())\ncoins = list(map(int, input().split()))\n\n# create a dictionary of unique coins\nunique_coins = defaultdict(int)\nfor coin in coins:\n    unique_coins[coin] += 1\n\n# print the number of unique coins\nprint(len(unique_coins))"]