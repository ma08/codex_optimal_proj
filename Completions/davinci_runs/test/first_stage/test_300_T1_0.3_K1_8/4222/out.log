2022-04-20 03:28:48.595943 """
N Snukes called Snuke 1, Snuke 2, ..., Snuke N live in a town.
There are K kinds of snacks sold in this town, called Snack 1, Snack 2, ..., Snack K. The following d_i Snukes have Snack i: Snuke A_{i, 1}, A_{i, 2}, \cdots, A_{i, {d_i}}.
Takahashi will walk around this town and make mischief on the Snukes who have no snacks. How many Snukes will fall victim to Takahashi's mischief?

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 1 \leq K \leq 100
 - 1 \leq d_i \leq N
 - 1 \leq A_{i, 1} < \cdots < A_{i, d_i} \leq N

-----Input-----
Input is given from Standard Input in the following format:
N K
d_1
A_{1, 1} \cdots A_{1, d_1}
\vdots
d_K
A_{K, 1} \cdots A_{K, d_K}

-----Output-----
Print the answer.

-----Sample Input-----
3 2
2
1 3
1
3

-----Sample Output-----
1

 - Snuke 1 has Snack 1.
 - Snuke 2 has no snacks.
 - Snuke 3 has Snack 1 and 2.
Thus, there will be one victim: Snuke 2.
"""
2022-04-20 03:28:48.595962 --------------------------
2022-04-20 03:28:48.596115 using api key sourya
2022-04-20 03:29:00.495267 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nsnack_list = [[] for i in range(k)]\n\nfor i in range(k):\n    d = int(input())\n    snack_list[i] = list(map(int, input().split()))\n\nvictim_list = []\n\nfor i in range(1, n+1):\n    if i not in snack_list[0]:\n        victim_list.append(i)\n\nfor i in range(1, k):\n    for j in snack_list[i]:\n        if j in victim_list:\n            victim_list.remove(j)\n\nprint(len(victim_list))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nsnacks = [0] * n\nfor i in range(k):\n    d = int(input())\n    a = list(map(int, input().split()))\n    for j in range(d):\n        snacks[a[j] - 1] += 1\n\nprint(snacks.count(0))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nsnack_list = []\nfor i in range(K):\n    snack_list.append(list(map(int, input().split())))\n\nvictim = 0\nfor i in range(1, N+1):\n    if i not in snack_list:\n        victim += 1\n\nprint(victim)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    d = [0] * k\n    a = [[0] * n for _ in range(k)]\n    for i in range(k):\n        d[i] = int(input())\n        a[i] = list(map(int, input().split()))\n    print(n - sum(d))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nsnacks = [0] * N\n\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snacks[j - 1] += 1\n\nprint(snacks.count(0))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nsnack_list = []\nfor i in range(K):\n    snack_list.append(list(map(int, input().split())))\n\nvictim_list = []\nfor i in range(K):\n    for j in range(1, snack_list[i][0]+1):\n        victim_list.append(snack_list[i][j])\n\nprint(N - len(set(victim_list)))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    snacks = [0] * k\n    for i in range(k):\n        d = int(input())\n        for j in range(d):\n            snacks[i] |= 1 << int(input())\n    ans = 0\n    for i in range(1, 1 << n):\n        if not (i & snacks[0]):\n            continue\n        for j in range(1, k):\n            if not (i & snacks[j]):\n                break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    snukes = [0] * n\n    for i in range(k):\n        d = int(sys.stdin.readline())\n        for j in range(d):\n            snukes[int(sys.stdin.readline()) - 1] += 1\n    print(snukes.count(0))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650425328,
  "id": "cmpl-4yvJIdxUcQ7klieqxAQAcq6HTPfHN",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:29:00.495710 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nsnack_list = [[] for i in range(k)]\n\nfor i in range(k):\n    d = int(input())\n    snack_list[i] = list(map(int, input().split()))\n\nvictim_list = []\n\nfor i in range(1, n+1):\n    if i not in snack_list[0]:\n        victim_list.append(i)\n\nfor i in range(1, k):\n    for j in snack_list[i]:\n        if j in victim_list:\n            victim_list.remove(j)\n\nprint(len(victim_list))"
}
2022-04-20 03:29:00.495778 REASON stop
2022-04-20 03:29:00.497300 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nsnacks = [0] * n\nfor i in range(k):\n    d = int(input())\n    a = list(map(int, input().split()))\n    for j in range(d):\n        snacks[a[j] - 1] += 1\n\nprint(snacks.count(0))"
}
2022-04-20 03:29:00.497413 REASON stop
2022-04-20 03:29:00.498345 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nsnack_list = []\nfor i in range(K):\n    snack_list.append(list(map(int, input().split())))\n\nvictim = 0\nfor i in range(1, N+1):\n    if i not in snack_list:\n        victim += 1\n\nprint(victim)"
}
2022-04-20 03:29:00.498433 REASON stop
2022-04-20 03:29:00.530514 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    d = [0] * k\n    a = [[0] * n for _ in range(k)]\n    for i in range(k):\n        d[i] = int(input())\n        a[i] = list(map(int, input().split()))\n    print(n - sum(d))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:00.530701 REASON stop
2022-04-20 03:29:00.531782 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nsnacks = [0] * N\n\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snacks[j - 1] += 1\n\nprint(snacks.count(0))"
}
2022-04-20 03:29:00.531894 REASON stop
2022-04-20 03:29:00.542269 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nsnack_list = []\nfor i in range(K):\n    snack_list.append(list(map(int, input().split())))\n\nvictim_list = []\nfor i in range(K):\n    for j in range(1, snack_list[i][0]+1):\n        victim_list.append(snack_list[i][j])\n\nprint(N - len(set(victim_list)))"
}
2022-04-20 03:29:00.542423 REASON stop
2022-04-20 03:29:00.543425 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    snacks = [0] * k\n    for i in range(k):\n        d = int(input())\n        for j in range(d):\n            snacks[i] |= 1 << int(input())\n    ans = 0\n    for i in range(1, 1 << n):\n        if not (i & snacks[0]):\n            continue\n        for j in range(1, k):\n            if not (i & snacks[j]):\n                break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:00.543531 REASON stop
2022-04-20 03:29:00.544914 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    snukes = [0] * n\n    for i in range(k):\n        d = int(sys.stdin.readline())\n        for j in range(d):\n            snukes[int(sys.stdin.readline()) - 1] += 1\n    print(snukes.count(0))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:00.545139 REASON stop
