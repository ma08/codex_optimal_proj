2022-04-20 03:58:56.998400 """
You are a coach at your local university. There are $n$ students under your supervision, the programming skill of the $i$-th student is $a_i$.

You have to create a team for a new programming competition. As you know, the more students some team has the more probable its victory is! So you have to create a team with the maximum number of students. But you also know that a team should be balanced. It means that the programming skill of each pair of students in a created team should differ by no more than $5$.

Your task is to report the maximum possible number of students in a balanced team.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of students.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^9$), where $a_i$ is a programming skill of the $i$-th student.


-----Output-----

Print one integer — the maximum possible number of students in a balanced team.


-----Examples-----
Input
6
1 10 17 12 15 2

Output
3

Input
10
1337 1337 1337 1337 1337 1337 1337 1337 1337 1337

Output
10

Input
6
1 1000 10000 10 100 1000000000

Output
1



-----Note-----

In the first example you can create a team with skills $[12, 17, 15]$.

In the second example you can take all students in a team because their programming skills are equal.

In the third example you can create a team consisting of a single student (and you cannot create a team consisting of at least two students).
"""
2022-04-20 03:58:56.998431 --------------------------
2022-04-20 03:58:56.998581 using api key gabby
2022-04-20 03:59:05.276757 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i-1] <= 5:\n            ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = Counter(a)\n    m = max(c.values())\n    for i in range(1, 6):\n        if c[a[-i]] == m:\n            print(m)\n            return\n    print(m + 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmax_count = 0\n\nfor i in range(n):\n    count = 1\n    for j in range(i+1, n):\n        if a[j] - a[i] <= 5:\n            count += 1\n        else:\n            break\n    max_count = max(max_count, count)\n\nprint(max_count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\n\nfor i in range(n):\n    l = i\n    r = i\n    while r + 1 < n and a[r + 1] - a[i] <= 5:\n        r += 1\n    ans = max(ans, r - l + 1)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 1\n    l = 0\n    r = 1\n    while r < n:\n        if a[r] - a[l] <= 5:\n            ans = max(ans, r - l + 1)\n            r += 1\n        else:\n            l += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i-1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650427137,
  "id": "cmpl-4yvmTDSqws3opHfwz44khqGgHW8Dm",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:59:05.277194 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i-1] <= 5:\n            ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:59:05.277262 REASON stop
2022-04-20 03:59:05.278192 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:59:05.278300 REASON stop
2022-04-20 03:59:05.278981 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = Counter(a)\n    m = max(c.values())\n    for i in range(1, 6):\n        if c[a[-i]] == m:\n            print(m)\n            return\n    print(m + 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:59:05.279073 REASON stop
2022-04-20 03:59:05.281352 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmax_count = 0\n\nfor i in range(n):\n    count = 1\n    for j in range(i+1, n):\n        if a[j] - a[i] <= 5:\n            count += 1\n        else:\n            break\n    max_count = max(max_count, count)\n\nprint(max_count)"
}
2022-04-20 03:59:05.281436 REASON stop
2022-04-20 03:59:05.285320 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\n\nfor i in range(n):\n    l = i\n    r = i\n    while r + 1 < n and a[r + 1] - a[i] <= 5:\n        r += 1\n    ans = max(ans, r - l + 1)\n\nprint(ans)"
}
2022-04-20 03:59:05.285419 REASON stop
2022-04-20 03:59:05.289174 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:59:05.289270 REASON stop
2022-04-20 03:59:05.290072 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 1\n    l = 0\n    r = 1\n    while r < n:\n        if a[r] - a[l] <= 5:\n            ans = max(ans, r - l + 1)\n            r += 1\n        else:\n            l += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:59:05.290175 REASON stop
2022-04-20 03:59:05.293057 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(1, n):\n        if a[i] - a[i-1] <= 5:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:59:05.293268 REASON stop
