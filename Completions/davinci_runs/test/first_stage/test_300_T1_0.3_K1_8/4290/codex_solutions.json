["\n\nN, M = map(int, input().split())\n\ndef combination(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n\nprint(combination(N, 2) + combination(M, 2))", "\n\ndef main():\n    n, m = map(int, input().split())\n    print(n*m)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    N, M = map(int, input().split())\n    print(N * M)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    print(n*m)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, M = map(int, input().split())\n    print((N + M) * (N + M - 1) // 2 - N * M)\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\n\nprint(2**(N+M-1) - 2**(N-1))", "\n\nimport sys\n\nn,m = map(int, sys.stdin.readline().split())\n\nprint(n*m)", "\n\ndef main():\n    n, m = map(int, input().split())\n    print(n * m)\n\nif __name__ == '__main__':\n    main()"]