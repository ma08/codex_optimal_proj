2022-04-20 00:43:55.222852 """
There is a white sheet of paper lying on a rectangle table. The sheet is a rectangle with its sides parallel to the sides of the table. If you will take a look from above and assume that the bottom left corner of the table has coordinates $(0, 0)$, and coordinate axes are left and bottom sides of the table, then the bottom left corner of the white sheet has coordinates $(x_1, y_1)$, and the top right — $(x_2, y_2)$.

After that two black sheets of paper are placed on the table. Sides of both black sheets are also parallel to the sides of the table. Coordinates of the bottom left corner of the first black sheet are $(x_3, y_3)$, and the top right — $(x_4, y_4)$. Coordinates of the bottom left corner of the second black sheet are $(x_5, y_5)$, and the top right — $(x_6, y_6)$.  [Image] Example of three rectangles. 

Determine if some part of the white sheet can be seen from the above after the two black sheets are placed. The part of the white sheet can be seen if there is at least one point lying not strictly inside the white sheet and strictly outside of both black sheets.


-----Input-----

The first line of the input contains four integers $x_1, y_1, x_2, y_2$ $(0 \le x_1 < x_2 \le 10^{6}, 0 \le y_1 < y_2 \le 10^{6})$ — coordinates of the bottom left and the top right corners of the white sheet.

The second line of the input contains four integers $x_3, y_3, x_4, y_4$ $(0 \le x_3 < x_4 \le 10^{6}, 0 \le y_3 < y_4 \le 10^{6})$ — coordinates of the bottom left and the top right corners of the first black sheet.

The third line of the input contains four integers $x_5, y_5, x_6, y_6$ $(0 \le x_5 < x_6 \le 10^{6}, 0 \le y_5 < y_6 \le 10^{6})$ — coordinates of the bottom left and the top right corners of the second black sheet.

The sides of each sheet of paper are parallel (perpendicular) to the coordinate axes.


-----Output-----

If some part of the white sheet can be seen from the above after the two black sheets are placed, print "YES" (without quotes). Otherwise print "NO".


-----Examples-----
Input
2 2 4 4
1 1 3 5
3 1 5 5

Output
NO

Input
3 3 7 5
0 0 4 6
0 0 7 4

Output
YES

Input
5 2 10 5
3 1 7 6
8 1 11 7

Output
YES

Input
0 0 1000000 1000000
0 0 499999 1000000
500000 0 1000000 1000000

Output
YES



-----Note-----

In the first example the white sheet is fully covered by black sheets.

In the second example the part of the white sheet can be seen after two black sheets are placed. For example, the point $(6.5, 4.5)$ lies not strictly inside the white sheet and lies strictly outside of both black sheets.
"""
2022-04-20 00:43:55.222884 --------------------------
2022-04-20 00:43:55.223016 using api key gabby
2022-04-20 00:44:22.048542 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef is_visible(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    # check if white sheet is fully covered\n    if x3 <= x1 and x4 >= x2 and y3 <= y1 and y4 >= y2:\n        return False\n    if x5 <= x1 and x6 >= x2 and y5 <= y1 and y6 >= y2:\n        return False\n    # check if white sheet is fully visible\n    if x1 >= x3 and x2 <= x4 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 >= y5 and y2 <= y6:\n        return True\n    # check if white sheet is partially visible\n    if x1 >= x3 and x2 <= x4 and y1 >= y5 and y2 <= y6:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 >= x3 and x2 <= x4 and y1 <= y3 and y2 >= y4:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 <= y5 and y2 >= y6:\n        return True\n    if x1 <= x3 and x2 >= x4 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 <= x5 and x2 >= x6 and y1 >= y5 and y2 <= y6:\n        return True\n    if x1 <= x3 and x2 >= x4 and y1 <= y5 and y2 >= y6:\n        return True\n    if x1 <= x5 and x2 >= x6 and y1 <= y3 and y2 >= y4:\n        return True\n    return False\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n    if is_visible(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x2 <= x3 or x4 <= x1 or y2 <= y3 or y4 <= y1:\n        if x2 <= x5 or x6 <= x1 or y2 <= y5 or y6 <= y1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    1. Get input\n    2. Check if the white sheet is fully covered by the black sheets\n    3. Check if the white sheet is partially covered by the black sheets\n    4. Print the result\n    \"\"\"\n    # 1. Get input\n    white_sheet = [int(x) for x in input().split()]\n    black_sheet_1 = [int(x) for x in input().split()]\n    black_sheet_2 = [int(x) for x in input().split()]\n\n    # 2. Check if the white sheet is fully covered by the black sheets\n    if (white_sheet[0] >= black_sheet_1[0] and white_sheet[1] >= black_sheet_1[1] and white_sheet[2] <= black_sheet_1[2] and white_sheet[3] <= black_sheet_1[3]) or (white_sheet[0] >= black_sheet_2[0] and white_sheet[1] >= black_sheet_2[1] and white_sheet[2] <= black_sheet_2[2] and white_sheet[3] <= black_sheet_2[3]):\n        print(\"NO\")\n        return\n\n    # 3. Check if the white sheet is partially covered by the black sheets\n    if (white_sheet[0] >= black_sheet_1[0] and white_sheet[1] >= black_sheet_1[1] and white_sheet[2] <= black_sheet_1[2] and white_sheet[3] <= black_sheet_1[3]) or (white_sheet[0] >= black_sheet_2[0] and white_sheet[1] >= black_sheet_2[1] and white_sheet[2] <= black_sheet_2[2] and white_sheet[3] <= black_sheet_2[3]):\n        print(\"NO\")\n        return\n\n    # 4. Print the result\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n    if x4 < x1 or x2 < x3 or x6 < x1 or x2 < x5 or y4 < y1 or y2 < y3 or y6 < y1 or y2 < y5:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x3 <= x1 <= x4 and y3 <= y1 <= y4) or (x3 <= x2 <= x4 and y3 <= y2 <= y4) or (x5 <= x1 <= x6 and y5 <= y1 <= y6) or (x5 <= x2 <= x6 and y5 <= y2 <= y6):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x3 <= x1 and x1 < x4 and y3 <= y1 and y1 < y4:\n        if x5 <= x1 and x1 < x6 and y5 <= y1 and y1 < y6:\n            print(\"NO\")\n            return\n    if x3 <= x2 and x2 < x4 and y3 <= y2 and y2 < y4:\n        if x5 <= x2 and x2 < x6 and y5 <= y2 and y2 < y6:\n            print(\"NO\")\n            return\n\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 < x3 < x2 < x4 and y1 < y3 < y2 < y4:\n        print(\"NO\")\n    elif x1 < x5 < x2 < x6 and y1 < y5 < y2 < y6:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650415436,
  "id": "cmpl-4ysjkRqamjr7ddjJy2ol9EiAF3FZM",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 00:44:22.049049 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef is_visible(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    # check if white sheet is fully covered\n    if x3 <= x1 and x4 >= x2 and y3 <= y1 and y4 >= y2:\n        return False\n    if x5 <= x1 and x6 >= x2 and y5 <= y1 and y6 >= y2:\n        return False\n    # check if white sheet is fully visible\n    if x1 >= x3 and x2 <= x4 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 >= y5 and y2 <= y6:\n        return True\n    # check if white sheet is partially visible\n    if x1 >= x3 and x2 <= x4 and y1 >= y5 and y2 <= y6:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 >= x3 and x2 <= x4 and y1 <= y3 and y2 >= y4:\n        return True\n    if x1 >= x5 and x2 <= x6 and y1 <= y5 and y2 >= y6:\n        return True\n    if x1 <= x3 and x2 >= x4 and y1 >= y3 and y2 <= y4:\n        return True\n    if x1 <= x5 and x2 >= x6 and y1 >= y5 and y2 <= y6:\n        return True\n    if x1 <= x3 and x2 >= x4 and y1 <= y5 and y2 >= y6:\n        return True\n    if x1 <= x5 and x2 >= x6 and y1 <= y3 and y2 >= y4:\n        return True\n    return False\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n    if is_visible(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 00:44:22.049105 REASON stop
2022-04-20 00:44:22.049675 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x2 <= x3 or x4 <= x1 or y2 <= y3 or y4 <= y1:\n        if x2 <= x5 or x6 <= x1 or y2 <= y5 or y6 <= y1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:44:22.049739 REASON stop
2022-04-20 00:44:22.050213 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    1. Get input\n    2. Check if the white sheet is fully covered by the black sheets\n    3. Check if the white sheet is partially covered by the black sheets\n    4. Print the result\n    \"\"\"\n    # 1. Get input\n    white_sheet = [int(x) for x in input().split()]\n    black_sheet_1 = [int(x) for x in input().split()]\n    black_sheet_2 = [int(x) for x in input().split()]\n\n    # 2. Check if the white sheet is fully covered by the black sheets\n    if (white_sheet[0] >= black_sheet_1[0] and white_sheet[1] >= black_sheet_1[1] and white_sheet[2] <= black_sheet_1[2] and white_sheet[3] <= black_sheet_1[3]) or (white_sheet[0] >= black_sheet_2[0] and white_sheet[1] >= black_sheet_2[1] and white_sheet[2] <= black_sheet_2[2] and white_sheet[3] <= black_sheet_2[3]):\n        print(\"NO\")\n        return\n\n    # 3. Check if the white sheet is partially covered by the black sheets\n    if (white_sheet[0] >= black_sheet_1[0] and white_sheet[1] >= black_sheet_1[1] and white_sheet[2] <= black_sheet_1[2] and white_sheet[3] <= black_sheet_1[3]) or (white_sheet[0] >= black_sheet_2[0] and white_sheet[1] >= black_sheet_2[1] and white_sheet[2] <= black_sheet_2[2] and white_sheet[3] <= black_sheet_2[3]):\n        print(\"NO\")\n        return\n\n    # 4. Print the result\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:44:22.050273 REASON stop
2022-04-20 00:44:22.078680 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n    if x4 < x1 or x2 < x3 or x6 < x1 or x2 < x5 or y4 < y1 or y2 < y3 or y6 < y1 or y2 < y5:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:44:22.078810 REASON stop
2022-04-20 00:44:22.080170 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x3 <= x1 <= x4 and y3 <= y1 <= y4) or (x3 <= x2 <= x4 and y3 <= y2 <= y4) or (x5 <= x1 <= x6 and y5 <= y1 <= y6) or (x5 <= x2 <= x6 and y5 <= y2 <= y6):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 00:44:22.080265 REASON stop
2022-04-20 00:44:22.084556 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x3 <= x1 and x1 < x4 and y3 <= y1 and y1 < y4:\n        if x5 <= x1 and x1 < x6 and y5 <= y1 and y1 < y6:\n            print(\"NO\")\n            return\n    if x3 <= x2 and x2 < x4 and y3 <= y2 and y2 < y4:\n        if x5 <= x2 and x2 < x6 and y5 <= y2 and y2 < y6:\n            print(\"NO\")\n            return\n\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:44:22.084648 REASON stop
2022-04-20 00:44:22.085930 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3:\n        if x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 00:44:22.086018 REASON stop
2022-04-20 00:44:22.088241 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 < x3 < x2 < x4 and y1 < y3 < y2 < y4:\n        print(\"NO\")\n    elif x1 < x5 < x2 < x6 and y1 < y5 < y2 < y6:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 00:44:22.088415 REASON stop
