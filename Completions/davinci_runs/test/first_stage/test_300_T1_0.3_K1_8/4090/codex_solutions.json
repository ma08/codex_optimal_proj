["\n\ndef main():\n    n = int(input())\n    words = input().split()\n    print(min_length(words))\n\ndef min_length(words):\n    if len(words) == 1:\n        return len(words[0])\n    if len(words) == 2:\n        return len(words[0]) + len(words[1])\n    return min(\n        len(words[0]) + len(words[1]) + min_length(words[2:]),\n        len(words[0]) + len(words[1]) + len(words[2]) + min_length(words[3:])\n    )\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    min_len = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i + 2, n + 1):\n            for k in range(j, n + 1):\n                if words[i:j] == words[j:k]:\n                    abbreviation = words[i][0].upper() * (j - i)\n                    new_words = words[:i] + [abbreviation] + words[k:]\n                    min_len = min(min_len, len(\"\".join(new_words)))\n    print(min_len)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    words_dict = {}\n    for word in words:\n        if word in words_dict:\n            words_dict[word] += 1\n        else:\n            words_dict[word] = 1\n    words_dict = sorted(words_dict.items(), key=lambda x: x[1], reverse=True)\n    if words_dict[0][1] > 2:\n        print(len(words) - words_dict[0][1] + 2)\n    else:\n        print(len(words))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    words_dict = {}\n    for word in words:\n        if word not in words_dict:\n            words_dict[word] = 1\n        else:\n            words_dict[word] += 1\n    words_dict = {key:value for key, value in words_dict.items() if value > 1}\n    if len(words_dict) == 0:\n        print(len(words) + len(words) - 1)\n    else:\n        print(len(words) + len(words_dict) - 1)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for i in range(n):\n        if words[i] not in count:\n            count[words[i]] = 1\n        else:\n            count[words[i]] += 1\n    count = sorted(count.items(), key=lambda x: x[1], reverse=True)\n    if count[0][1] >= 2:\n        print(n - count[0][1] + 2)\n    else:\n        print(n)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    words_dict = {}\n    for i in range(n):\n        if words[i] not in words_dict:\n            words_dict[words[i]] = [i]\n        else:\n            words_dict[words[i]].append(i)\n    # print(words_dict)\n    min_length = n\n    for word in words_dict:\n        if len(words_dict[word]) == 1:\n            continue\n        for i in range(len(words_dict[word]) - 1):\n            for j in range(i + 1, len(words_dict[word])):\n                if words_dict[word][j] - words_dict[word][i] > 1:\n                    length = n - (j - i) * len(word) + 2\n                    if length < min_length:\n                        min_length = length\n                else:\n                    break\n    print(min_length)\n\nif __name__ == \"__main__\":\n    main()"]