2022-04-20 01:44:18.434054 """
You are given an array $a$ consisting of $n$ integers $a_1, a_2, \dots, a_n$.

Your problem is to find such pair of indices $i, j$ ($1 \le i < j \le n$) that $lcm(a_i, a_j)$ is minimum possible.

$lcm(x, y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).


-----Input-----

The first line of the input contains one integer $n$ ($2 \le n \le 10^6$) â€” the number of elements in $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^7$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

Print two integers $i$ and $j$ ($1 \le i < j \le n$) such that the value of $lcm(a_i, a_j)$ is minimum among all valid pairs $i, j$. If there are multiple answers, you can print any.


-----Examples-----
Input
5
2 4 8 3 6

Output
1 2

Input
5
5 2 11 3 7

Output
2 4

Input
6
2 5 10 1 10 2

Output
1 4
"""
2022-04-20 01:44:18.434072 --------------------------
2022-04-20 01:44:18.434179 using api key gabby
2022-04-20 01:44:29.167804 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom math import gcd\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_lcm_index = [0, 1]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_lcm_index = [i, j]\n    print(min_lcm_index[0] + 1, min_lcm_index[1] + 1)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    ans = (1, 2)\n    for i in range(1, n):\n        for j in range(i + 1, n + 1):\n            if lcm(a[i - 1], a[j - 1]) < lcm(a[ans[0] - 1], a[ans[1] - 1]):\n                ans = (i, j)\n    print(ans[0], ans[1])\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    m = a[0]\n    for i in range(1, len(a)):\n        if lcm(m, a[i]) < lcm(m, a[i-1]):\n            m = a[i]\n    print(1, a.index(m) + 1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i+1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = sys.maxsize\n    min_i = min_j = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i+1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i+1\n                min_j = j+1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = float('inf')\n    min_i = -1\n    min_j = -1\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i\n                min_j = j\n    print(min_i + 1, min_j + 1)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650419058,
  "id": "cmpl-4ytgAfFfCfMvr0wWEMhaBgxArrTcl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 01:44:29.168139 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom math import gcd\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_lcm_index = [0, 1]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_lcm_index = [i, j]\n    print(min_lcm_index[0] + 1, min_lcm_index[1] + 1)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:44:29.168178 REASON stop
2022-04-20 01:44:29.168771 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    ans = (1, 2)\n    for i in range(1, n):\n        for j in range(i + 1, n + 1):\n            if lcm(a[i - 1], a[j - 1]) < lcm(a[ans[0] - 1], a[ans[1] - 1]):\n                ans = (i, j)\n    print(ans[0], ans[1])\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.168848 REASON stop
2022-04-20 01:44:29.169259 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    m = a[0]\n    for i in range(1, len(a)):\n        if lcm(m, a[i]) < lcm(m, a[i-1]):\n            m = a[i]\n    print(1, a.index(m) + 1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.169317 REASON stop
2022-04-20 01:44:29.185198 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.185360 REASON stop
2022-04-20 01:44:29.186326 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i+1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.186399 REASON stop
2022-04-20 01:44:29.206890 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = sys.maxsize\n    min_i = min_j = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.207017 REASON stop
2022-04-20 01:44:29.208626 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i+1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i+1\n                min_j = j+1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:44:29.208762 REASON stop
2022-04-20 01:44:29.209553 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = float('inf')\n    min_i = -1\n    min_j = -1\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i\n                min_j = j\n    print(min_i + 1, min_j + 1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 01:44:29.209738 REASON stop
