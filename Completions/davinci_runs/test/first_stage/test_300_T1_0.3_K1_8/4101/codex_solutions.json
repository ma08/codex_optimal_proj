["\n\n#-----Solution-----\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\nr = [0] * n\nc = [0] * m\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            r[i] = 1\n            c[j] = 1\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] != (r[i] ^ c[j]):\n            print('NO')\n            exit(0)\n\nprint('YES')\nprint(''.join(map(str, r)))\nprint(''.join(map(str, c)))", "\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nr = [0] * n\nc = [0] * m\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            r[i] = 1\n            c[j] = 1\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1 and r[i] == 0 and c[j] == 0:\n            print(\"NO\")\n            exit()\n\nprint(\"YES\")\nprint(\"\".join(map(str, r)))\nprint(\"\".join(map(str, c)))", "\n\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                for k in range(m):\n                    matrix[i][k] = 1 - matrix[i][k]\n                for k in range(n):\n                    matrix[k][j] = 1 - matrix[k][j]\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    print(\"0\" * n)\n    print(\"0\" * m)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, sys.stdin.readline().split())))\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r[i] = 1\n                c[j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != (r[i] ^ c[j]):\n                print(\"NO\")\n                return\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                ans.append((i, j))\n                break\n    if len(ans) == n:\n        print('YES')\n        print('0' * n)\n        print('0' * m)\n        return\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                ans.append((i, j))\n                break\n    if len(ans) == n + m:\n        print('YES')\n        print('0' * n)\n        print('0' * m)\n        return\n    print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, sys.stdin.readline().split())))\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                r[i] = 1\n                c[j] = 1\n    for i in range(n):\n        for j in range(m):\n            if r[i] == 1 and c[j] == 1:\n                a[i][j] = 1\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\ndef check(a):\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != a[0][0]:\n                return False\n    return True\n\ndef invert_row(a, i):\n    for j in range(m):\n        a[i][j] = 1 - a[i][j]\n\ndef invert_column(a, j):\n    for i in range(n):\n        a[i][j] = 1 - a[i][j]\n\ndef solve(a):\n    if check(a):\n        return 'YES\\n' + '0' * n + '\\n' + '0' * m\n    for i in range(n):\n        invert_row(a, i)\n        if check(a):\n            return 'YES\\n' + '1' * i + '0' * (n - i - 1) + '\\n' + '0' * m\n        invert_row(a, i)\n    for j in range(m):\n        invert_column(a, j)\n        if check(a):\n            return 'YES\\n' + '0' * n + '\\n' + '1' * j + '0' * (m - j - 1)\n        invert_column(a, j)\n    return 'NO'\n\nprint(solve(a))"]