2022-04-20 03:40:48.503134 """
You are given positive integers A and B.
Find the K-th largest positive integer that divides both A and B.
The input guarantees that there exists such a number.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq A, B \leq 100
 - The K-th largest positive integer that divides both A and B exists.
 - K \geq 1

-----Input-----
Input is given from Standard Input in the following format:
A B K

-----Output-----
Print the K-th largest positive integer that divides both A and B.

-----Sample Input-----
8 12 2

-----Sample Output-----
2

Three positive integers divides both 8 and 12: 1, 2 and 4.
Among them, the second largest is 2.
"""
2022-04-20 03:40:48.503155 --------------------------
2022-04-20 03:40:48.503311 using api key gabby
2022-04-20 03:42:09.179994 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b)+1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\na, b, k = map(int, input().split())\n\n# Find the greatest common divisor (gcd) of a and b\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# Find the least common multiple (lcm) of a and b\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n# Find all the common divisors of a and b\ndef common_divisors(a, b):\n    gcd_ab = gcd(a, b)\n    divisors = []\n    for i in range(1, gcd_ab + 1):\n        if gcd_ab % i == 0:\n            divisors.append(i)\n    return divisors\n\n# Find the k-th largest common divisor of a and b\ndef kth_largest_common_divisor(a, b, k):\n    divisors = common_divisors(a, b)\n    return divisors[-k]\n\nprint(kth_largest_common_divisor(a, b, k))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    nums = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            nums.append(i)\n    print(nums[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    a, b, k = map(int, input().split())\n    divisors = []\n    for i in range(1, max(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 6,
      "logprobs": null,
      "text": "\n\nfrom math import gcd\nfrom functools import reduce\n\ndef main():\n    A, B, K = map(int, input().split())\n    # A, B, K = 8, 12, 2\n    # A, B, K = 1, 1, 1\n    # A, B, K = 1, 2, 1\n    # A, B, K = 2, 3, 1\n    # A, B, K = 2, 3, 2\n    # A, B, K = 2, 3, 3\n    # A, B, K = 2, 3, 4\n    # A, B, K = 2, 3, 5\n    # A, B, K = 2, 3, 6\n    # A, B, K = 2, 3, 7\n    # A, B, K = 2, 3, 8\n    # A, B, K = 2, 3, 9\n    # A, B, K = 2, 3, 10\n    # A, B, K = 2, 3, 11\n    # A, B, K = 2, 3, 12\n    # A, B, K = 2, 3, 13\n    # A, B, K = 2, 3, 14\n    # A, B, K = 2, 3, 15\n    # A, B, K = 2, 3, 16\n    # A, B, K = 2, 3, 17\n    # A, B, K = 2, 3, 18\n    # A, B, K = 2, 3, 19\n    # A, B, K = 2, 3, 20\n    # A, B, K = 2, 3, 21\n    # A, B, K = 2, 3, 22\n    # A, B, K = 2, 3, 23\n    # A, B, K = 2, 3, 24\n    # A, B, K = 2, 3, 25\n    # A, B, K = 2, 3, 26\n    # A, B, K = 2, 3, 27\n    # A, B, K = 2, 3, 28\n    # A, B, K = 2, 3, 29\n    # A, B, K = 2, 3, 30\n    # A, B, K = 2, 3, 31\n    # A, B, K = 2, 3, 32\n    # A, B, K = 2, 3, 33\n    # A, B, K = 2, 3, 34\n    # A, B, K = 2, 3, 35\n    # A, B, K = 2, 3, 36\n    # A, B, K = 2, 3, 37\n    # A, B, K = 2, 3, 38\n    # A, B, K = 2, 3, 39\n    # A, B, K = 2, 3, 40\n    # A, B, K = 2, 3, 41\n    # A, B, K = 2, 3, 42\n    # A, B, K = 2, 3, 43\n    # A, B, K = 2, 3, 44\n    # A, B, K = 2, 3, 45\n    # A, B, K = 2, 3, 46\n    # A, B, K = 2, 3, 47\n    # A, B, K = 2, 3, 48\n    # A, B, K = 2, 3, 49\n    # A, B, K = 2, 3, 50\n    # A, B, K = 2, 3, 51\n    # A, B, K = 2, 3, 52\n    # A, B, K = 2, 3, 53\n    # A, B, K = 2, 3, 54\n    # A, B, K = 2, 3, 55\n    # A, B, K = 2, 3, 56\n    # A, B, K = 2, 3, 57\n    # A, B, K = 2, 3, 58\n    # A, B, K = 2, 3, 59\n    # A, B, K = 2, 3, 60\n    # A, B, K = 2, 3, 61\n    # A, B, K = 2, 3, 62\n    # A, B, K = 2, 3, 63\n    # A, B, K = 2, 3, 64\n    # A, B, K = 2, 3, 65\n    # A, B, K = 2, 3, 66\n    # A, B, K = 2, 3, 67\n    # A, B, K = 2, 3, 68\n    # A, B, K = 2, 3, 69\n    # A, B, K = 2, 3, 70\n    # A, B, K = 2, 3, 71\n    # A, B, K = 2, 3, 72\n    # A, B, K = 2, 3, 73\n    # A, B, K = 2, 3, 74\n    # A, B, K = 2, 3, 75\n    # A, B, K = 2, 3, 76\n    # A, B, K = 2, 3, 77\n    # A, B, K = 2, 3, 78\n    # A, B, K = 2, 3, 79\n    # A, B, K = 2, 3, 80\n    # A, B, K = 2, 3, 81\n    # A, B, K = 2, 3, 82\n    # A, B, K = 2, 3, 83\n    # A, B, K = 2, 3, 84\n    # A, B, K = 2, 3, 85\n    # A, B, K = 2, 3, 86\n    # A, B, K = 2, 3, 87\n    # A, B, K = 2, 3, 88\n    # A, B, K = 2, 3, 89\n    # A, B, K = 2, 3, 90\n    # A, B, K = 2, 3, 91\n    # A, B, K = 2, 3, 92\n    # A, B, K = 2, 3, 93\n    # A, B, K = 2, 3, 94\n    # A, B, K = 2, 3, 95\n    # A, B, K = 2, 3, 96\n    # A, B, K = 2, 3, 97\n    # A, B, K = 2, 3, 98\n    # A, B, K = 2, 3, 99\n    # A, B, K = 2, 3, 100\n    # A, B, K = 2, 3, 101\n    # A, B, K = 2, 3, 102\n    # A, B, K = 2, 3, 103\n    # A, B, K = 2, 3, 104\n    # A, B, K = 2, 3, 105\n    # A, B, K = 2, 3, 106\n    # A, B, K = 2, 3, 107\n    # A, B, K = 2, 3, 108\n    # A, B, K = 2, 3, 109\n    # A, B, K = 2, 3, 110\n    # A, B, K = 2, 3, 111\n    # A, B, K = 2, 3, 112\n    # A, B, K = 2, 3, 113\n    # A, B, K = 2, 3, 114\n    # A, B, K = 2, 3, 115\n    # A, B, K = 2, 3, 116\n    # A, B, K = 2, 3, 117\n    # A, B, K = 2, 3, 118\n    # A, B, K = 2, 3, 119\n    # A, B, K = 2, 3, 120\n    # A, B, K = 2, 3, 121\n    # A, B, K = 2, 3, 122\n    # A, B, K = 2, 3, 123\n    # A, B, K = 2, 3, 124\n    # A, B, K = 2, 3, 125\n    # A, B, K = 2, 3, 126\n    # A, B, K = 2, 3, 127\n    # A, B, K = 2, 3, 128\n    # A, B, K = 2, 3, 129\n    # A, B, K = 2, 3, 130\n    # A, B, K = 2, 3, 131\n    # A, B, K = 2, 3, 132\n    # A, B, K = 2, 3, 133\n    # A, B, K = 2, 3, 134\n    # A, B, K = 2, 3, 135\n    # A, B, K = 2, 3, 136\n    # A, B, K = 2, 3, 137\n    # A, B, K = 2, 3, 138\n    # A, B, K = 2, 3, 139\n    # A, B, K = 2, 3, 140\n    # A, B, K = 2, 3, 141\n    # A, B, K = 2, 3, 142\n    # A, B, K = 2, 3, 143\n    # A, B, K = 2, 3, 144\n    # A, B, K = 2, 3, 145\n    # A, B, K = 2, 3, 146\n    # A, B, K = 2, 3, 147\n    # A, B, K = 2, 3, 148\n    # A, B, K = 2, 3, 149\n    # A, B, K = 2, 3, 150\n    # A, B, K = 2, 3, 151\n    # A, B, K = 2, 3, 152\n    # A, B, K = 2, 3, 153\n    # A, B, K = 2, 3, 154\n    # A, B, K = 2, 3, 155\n    # A, B, K = 2, 3, 156\n    # A, B, K = 2, 3, 157\n    # A, B, K = 2, 3, 158\n    # A, B, K = 2, 3, 159\n    # A, B, K = 2, 3, 160\n    # A, B, K = 2, 3, 161\n    # A, B, K = 2, 3, 162\n    # A, B, K = 2, 3, 163\n    # A, B, K = 2, 3, 164\n    # A, B, K = 2, 3, 165\n    # A, B, K = 2, 3, 166\n    # A, B, K = 2, 3, 167\n    # A, B, K = 2, 3, 168\n    # A, B, K = 2, 3, 169\n    # A, B, K = 2, 3, 170\n    # A, B, K = 2, 3, 171\n    # A, B, K = 2, 3, 172\n    # A, B, K = 2, 3, 173\n    # A, B, K = 2, 3, 174\n    # A, B, K = 2, 3, 175\n    # A, B, K = 2, 3, 176\n    # A, B, K = 2, 3, 177\n    # A, B, K = 2, 3, 178\n    # A, B, K = 2, 3, 179\n    # A, B, K = 2, 3, 180\n    # A, B, K = 2, 3, 181\n    # A, B, K = 2, 3, 182\n    # A, B, K = 2, 3, 183\n    # A, B, K = 2, 3, 184\n    # A, B, K = 2, 3, 185\n    # A, B, K = 2, 3, 186\n    # A, B, K = 2, 3, 187\n    # A, B, K = 2, 3, 188\n    # A, B, K = 2, 3, 189\n    # A, B, K = 2, 3, 190\n    # A, B, K = 2, 3, 191\n    # A, B, K = 2, 3, 192\n    # A, B, K = 2, 3, 193\n    # A, B, K = 2, 3, 194\n    # A, B, K = 2, 3, 195\n    # A, B, K = 2, 3, 196\n    # A, B, K = 2, 3, 197\n    # A, B, K = 2, 3, 198\n    # A, B, K = 2, 3, 199\n    # A, B, K = 2, 3, 200\n    # A, B, K = 2, 3, 201\n    # A, B, K ="
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    a, b, k = map(int, input().split())\n    g = gcd(a, b)\n    print(math.floor(g / math.pow(2, math.floor(math.log2(g)) - k + 1)))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650426048,
  "id": "cmpl-4yvUuJT5QC6qQ12iFEJDPhMN9QvOd",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:42:09.180578 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b)+1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.180683 REASON stop
2022-04-20 03:42:09.181786 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\na, b, k = map(int, input().split())\n\n# Find the greatest common divisor (gcd) of a and b\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# Find the least common multiple (lcm) of a and b\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n# Find all the common divisors of a and b\ndef common_divisors(a, b):\n    gcd_ab = gcd(a, b)\n    divisors = []\n    for i in range(1, gcd_ab + 1):\n        if gcd_ab % i == 0:\n            divisors.append(i)\n    return divisors\n\n# Find the k-th largest common divisor of a and b\ndef kth_largest_common_divisor(a, b, k):\n    divisors = common_divisors(a, b)\n    return divisors[-k]\n\nprint(kth_largest_common_divisor(a, b, k))"
}
2022-04-20 03:42:09.181892 REASON stop
2022-04-20 03:42:09.182561 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.182645 REASON stop
2022-04-20 03:42:09.200458 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    nums = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            nums.append(i)\n    print(nums[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.200620 REASON stop
2022-04-20 03:42:09.217314 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.217484 REASON stop
2022-04-20 03:42:09.218543 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    a, b, k = map(int, input().split())\n    divisors = []\n    for i in range(1, max(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            divisors.append(i)\n    print(divisors[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.218656 REASON stop
2022-04-20 03:42:09.219548 6 {
  "finish_reason": "length",
  "index": 6,
  "logprobs": null,
  "text": "\n\nfrom math import gcd\nfrom functools import reduce\n\ndef main():\n    A, B, K = map(int, input().split())\n    # A, B, K = 8, 12, 2\n    # A, B, K = 1, 1, 1\n    # A, B, K = 1, 2, 1\n    # A, B, K = 2, 3, 1\n    # A, B, K = 2, 3, 2\n    # A, B, K = 2, 3, 3\n    # A, B, K = 2, 3, 4\n    # A, B, K = 2, 3, 5\n    # A, B, K = 2, 3, 6\n    # A, B, K = 2, 3, 7\n    # A, B, K = 2, 3, 8\n    # A, B, K = 2, 3, 9\n    # A, B, K = 2, 3, 10\n    # A, B, K = 2, 3, 11\n    # A, B, K = 2, 3, 12\n    # A, B, K = 2, 3, 13\n    # A, B, K = 2, 3, 14\n    # A, B, K = 2, 3, 15\n    # A, B, K = 2, 3, 16\n    # A, B, K = 2, 3, 17\n    # A, B, K = 2, 3, 18\n    # A, B, K = 2, 3, 19\n    # A, B, K = 2, 3, 20\n    # A, B, K = 2, 3, 21\n    # A, B, K = 2, 3, 22\n    # A, B, K = 2, 3, 23\n    # A, B, K = 2, 3, 24\n    # A, B, K = 2, 3, 25\n    # A, B, K = 2, 3, 26\n    # A, B, K = 2, 3, 27\n    # A, B, K = 2, 3, 28\n    # A, B, K = 2, 3, 29\n    # A, B, K = 2, 3, 30\n    # A, B, K = 2, 3, 31\n    # A, B, K = 2, 3, 32\n    # A, B, K = 2, 3, 33\n    # A, B, K = 2, 3, 34\n    # A, B, K = 2, 3, 35\n    # A, B, K = 2, 3, 36\n    # A, B, K = 2, 3, 37\n    # A, B, K = 2, 3, 38\n    # A, B, K = 2, 3, 39\n    # A, B, K = 2, 3, 40\n    # A, B, K = 2, 3, 41\n    # A, B, K = 2, 3, 42\n    # A, B, K = 2, 3, 43\n    # A, B, K = 2, 3, 44\n    # A, B, K = 2, 3, 45\n    # A, B, K = 2, 3, 46\n    # A, B, K = 2, 3, 47\n    # A, B, K = 2, 3, 48\n    # A, B, K = 2, 3, 49\n    # A, B, K = 2, 3, 50\n    # A, B, K = 2, 3, 51\n    # A, B, K = 2, 3, 52\n    # A, B, K = 2, 3, 53\n    # A, B, K = 2, 3, 54\n    # A, B, K = 2, 3, 55\n    # A, B, K = 2, 3, 56\n    # A, B, K = 2, 3, 57\n    # A, B, K = 2, 3, 58\n    # A, B, K = 2, 3, 59\n    # A, B, K = 2, 3, 60\n    # A, B, K = 2, 3, 61\n    # A, B, K = 2, 3, 62\n    # A, B, K = 2, 3, 63\n    # A, B, K = 2, 3, 64\n    # A, B, K = 2, 3, 65\n    # A, B, K = 2, 3, 66\n    # A, B, K = 2, 3, 67\n    # A, B, K = 2, 3, 68\n    # A, B, K = 2, 3, 69\n    # A, B, K = 2, 3, 70\n    # A, B, K = 2, 3, 71\n    # A, B, K = 2, 3, 72\n    # A, B, K = 2, 3, 73\n    # A, B, K = 2, 3, 74\n    # A, B, K = 2, 3, 75\n    # A, B, K = 2, 3, 76\n    # A, B, K = 2, 3, 77\n    # A, B, K = 2, 3, 78\n    # A, B, K = 2, 3, 79\n    # A, B, K = 2, 3, 80\n    # A, B, K = 2, 3, 81\n    # A, B, K = 2, 3, 82\n    # A, B, K = 2, 3, 83\n    # A, B, K = 2, 3, 84\n    # A, B, K = 2, 3, 85\n    # A, B, K = 2, 3, 86\n    # A, B, K = 2, 3, 87\n    # A, B, K = 2, 3, 88\n    # A, B, K = 2, 3, 89\n    # A, B, K = 2, 3, 90\n    # A, B, K = 2, 3, 91\n    # A, B, K = 2, 3, 92\n    # A, B, K = 2, 3, 93\n    # A, B, K = 2, 3, 94\n    # A, B, K = 2, 3, 95\n    # A, B, K = 2, 3, 96\n    # A, B, K = 2, 3, 97\n    # A, B, K = 2, 3, 98\n    # A, B, K = 2, 3, 99\n    # A, B, K = 2, 3, 100\n    # A, B, K = 2, 3, 101\n    # A, B, K = 2, 3, 102\n    # A, B, K = 2, 3, 103\n    # A, B, K = 2, 3, 104\n    # A, B, K = 2, 3, 105\n    # A, B, K = 2, 3, 106\n    # A, B, K = 2, 3, 107\n    # A, B, K = 2, 3, 108\n    # A, B, K = 2, 3, 109\n    # A, B, K = 2, 3, 110\n    # A, B, K = 2, 3, 111\n    # A, B, K = 2, 3, 112\n    # A, B, K = 2, 3, 113\n    # A, B, K = 2, 3, 114\n    # A, B, K = 2, 3, 115\n    # A, B, K = 2, 3, 116\n    # A, B, K = 2, 3, 117\n    # A, B, K = 2, 3, 118\n    # A, B, K = 2, 3, 119\n    # A, B, K = 2, 3, 120\n    # A, B, K = 2, 3, 121\n    # A, B, K = 2, 3, 122\n    # A, B, K = 2, 3, 123\n    # A, B, K = 2, 3, 124\n    # A, B, K = 2, 3, 125\n    # A, B, K = 2, 3, 126\n    # A, B, K = 2, 3, 127\n    # A, B, K = 2, 3, 128\n    # A, B, K = 2, 3, 129\n    # A, B, K = 2, 3, 130\n    # A, B, K = 2, 3, 131\n    # A, B, K = 2, 3, 132\n    # A, B, K = 2, 3, 133\n    # A, B, K = 2, 3, 134\n    # A, B, K = 2, 3, 135\n    # A, B, K = 2, 3, 136\n    # A, B, K = 2, 3, 137\n    # A, B, K = 2, 3, 138\n    # A, B, K = 2, 3, 139\n    # A, B, K = 2, 3, 140\n    # A, B, K = 2, 3, 141\n    # A, B, K = 2, 3, 142\n    # A, B, K = 2, 3, 143\n    # A, B, K = 2, 3, 144\n    # A, B, K = 2, 3, 145\n    # A, B, K = 2, 3, 146\n    # A, B, K = 2, 3, 147\n    # A, B, K = 2, 3, 148\n    # A, B, K = 2, 3, 149\n    # A, B, K = 2, 3, 150\n    # A, B, K = 2, 3, 151\n    # A, B, K = 2, 3, 152\n    # A, B, K = 2, 3, 153\n    # A, B, K = 2, 3, 154\n    # A, B, K = 2, 3, 155\n    # A, B, K = 2, 3, 156\n    # A, B, K = 2, 3, 157\n    # A, B, K = 2, 3, 158\n    # A, B, K = 2, 3, 159\n    # A, B, K = 2, 3, 160\n    # A, B, K = 2, 3, 161\n    # A, B, K = 2, 3, 162\n    # A, B, K = 2, 3, 163\n    # A, B, K = 2, 3, 164\n    # A, B, K = 2, 3, 165\n    # A, B, K = 2, 3, 166\n    # A, B, K = 2, 3, 167\n    # A, B, K = 2, 3, 168\n    # A, B, K = 2, 3, 169\n    # A, B, K = 2, 3, 170\n    # A, B, K = 2, 3, 171\n    # A, B, K = 2, 3, 172\n    # A, B, K = 2, 3, 173\n    # A, B, K = 2, 3, 174\n    # A, B, K = 2, 3, 175\n    # A, B, K = 2, 3, 176\n    # A, B, K = 2, 3, 177\n    # A, B, K = 2, 3, 178\n    # A, B, K = 2, 3, 179\n    # A, B, K = 2, 3, 180\n    # A, B, K = 2, 3, 181\n    # A, B, K = 2, 3, 182\n    # A, B, K = 2, 3, 183\n    # A, B, K = 2, 3, 184\n    # A, B, K = 2, 3, 185\n    # A, B, K = 2, 3, 186\n    # A, B, K = 2, 3, 187\n    # A, B, K = 2, 3, 188\n    # A, B, K = 2, 3, 189\n    # A, B, K = 2, 3, 190\n    # A, B, K = 2, 3, 191\n    # A, B, K = 2, 3, 192\n    # A, B, K = 2, 3, 193\n    # A, B, K = 2, 3, 194\n    # A, B, K = 2, 3, 195\n    # A, B, K = 2, 3, 196\n    # A, B, K = 2, 3, 197\n    # A, B, K = 2, 3, 198\n    # A, B, K = 2, 3, 199\n    # A, B, K = 2, 3, 200\n    # A, B, K = 2, 3, 201\n    # A, B, K ="
}
2022-04-20 03:42:09.219744 REASON length
2022-04-20 03:42:09.219759 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    a, b, k = map(int, input().split())\n    g = gcd(a, b)\n    print(math.floor(g / math.pow(2, math.floor(math.log2(g)) - k + 1)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:09.219945 REASON stop
