["\n\nimport sys\nfrom collections import defaultdict\n\nn, m = map(int, input().split())\n\n# Create a dictionary of prefectures and their cities\nprefectures = defaultdict(list)\nfor _ in range(m):\n    p, y = map(int, input().split())\n    prefectures[p].append(y)\n\n# Sort the cities in each prefecture\nfor p in prefectures:\n    prefectures[p].sort()\n\n# Create a dictionary of cities and their IDs\ncities = {}\nfor p in prefectures:\n    for i, y in enumerate(prefectures[p]):\n        cities[(p, y)] = str(p).zfill(6) + str(i + 1).zfill(6)\n\n# Print the IDs of the cities in ascending order of indices\nfor p, y in sorted(cities):\n    print(cities[(p, y)])", "\n\nimport sys\nimport bisect\nfrom collections import defaultdict\n\nn, m = map(int, sys.stdin.readline().split())\n\nd = defaultdict(list)\nfor i in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    d[p].append(y)\n\nfor k, v in d.items():\n    v.sort()\n\nfor i in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    idx = bisect.bisect_left(d[p], y) + 1\n    print(f'{p:06}{idx:06}')", "\n\nn, m = map(int, input().split())\n\nprefecture = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, input().split())\n    prefecture[p-1].append(y)\n\nfor p in prefecture:\n    p.sort()\n\nfor p, y in zip(map(int, input().split()), map(int, input().split())):\n    print(\"{:06}{:06}\".format(p, prefecture[p-1].index(y)+1))", "\n\n# \u5165\u529b\nn, m = map(int, input().split())\np_list = []\ny_list = []\nfor i in range(m):\n    p, y = map(int, input().split())\n    p_list.append(p)\n    y_list.append(y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\u3092\u30ab\u30a6\u30f3\u30c8\np_count = [0] * n\nfor i in range(m):\n    p_count[p_list[i] - 1] += 1\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\u3092\u7d2f\u7a4d\u548c\np_sum = [0] * n\nfor i in range(n):\n    if i == 0:\n        p_sum[i] = p_count[i]\n    else:\n        p_sum[i] = p_sum[i - 1] + p_count[i]\n\n# \u5404\u90fd\u5e02\u306eID\u3092\u7b97\u51fa\nid_list = []\nfor i in range(m):\n    id_list.append(str(p_list[i]).zfill(6) + str(p_sum[p_list[i] - 1] - p_count[p_list[i] - 1] + y_list[i]).zfill(6))\n    p_count[p_list[i] - 1] -= 1\n\n# \u51fa\u529b\nfor i in range(m):\n    print(id_list[i])", "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefecture_dict = {}\n\nfor i in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    if p in prefecture_dict:\n        prefecture_dict[p].append(y)\n    else:\n        prefecture_dict[p] = [y]\n\nfor p in prefecture_dict:\n    prefecture_dict[p].sort()\n\nfor p in prefecture_dict:\n    for i in range(len(prefecture_dict[p])):\n        print(\"{:06d}{:06d}\".format(p, i + 1))", "\n\nn, m = map(int, input().split())\n\npref = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, input().split())\n    pref[p-1].append(y)\n\nfor p in pref:\n    p.sort()\n\nfor i in range(m):\n    p, y = map(int, input().split())\n    print(\"{:06}{:06}\".format(p, pref[p-1].index(y)+1))", "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    prefecture_cities = [[] for _ in range(n)]\n    for i in range(m):\n        p, y = map(int, input().split())\n        prefecture_cities[p-1].append(y)\n    for i in range(n):\n        prefecture_cities[i].sort()\n    for i in range(m):\n        p, y = map(int, input().split())\n        print(\"{:06}{:06}\".format(p, prefecture_cities[p-1].index(y)+1))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    prefecture = [[] for _ in range(n)]\n    for _ in range(m):\n        p, y = map(int, sys.stdin.readline().split())\n        prefecture[p-1].append(y)\n    for p in prefecture:\n        p.sort()\n    for p, y in zip(prefecture, sys.stdin.readlines()):\n        p, y = map(int, y.split())\n        print(\"{:06d}{:06d}\".format(p, p.index(y)+1))\n\nif __name__ == '__main__':\n    main()"]