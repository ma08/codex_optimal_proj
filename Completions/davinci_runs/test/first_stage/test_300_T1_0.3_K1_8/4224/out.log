2022-04-20 03:29:09.025781 """
As AtCoder Beginner Contest 100 is taking place, the office of AtCoder, Inc. is decorated with a sequence of length N, a = {a_1, a_2, a_3, ..., a_N}.

Snuke, an employee, would like to play with this sequence.
Specifically, he would like to repeat the following operation as many times as possible:
For every i satisfying 1 \leq i \leq N, perform one of the following: "divide a_i by 2" and "multiply a_i by 3".  
Here, choosing "multiply a_i by 3" for every i is not allowed, and the value of a_i after the operation must be an integer.

At most how many operations can be performed?

-----Constraints-----
 - N is an integer between 1 and 10 \ 000 (inclusive).
 - a_i is an integer between 1 and 1 \ 000 \ 000 \ 000 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
N
a_1 a_2 a_3 ... a_N

-----Output-----
Print the maximum number of operations that Snuke can perform.

-----Sample Input-----
3
5 2 4

-----Sample Output-----
3

The sequence is initially {5, 2, 4}. Three operations can be performed as follows:
 - First, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {15, 6, 2}.
 - Next, multiply a_1 by 3, divide a_2 by 2 and multiply a_3 by 3. The sequence is now {45, 3, 6}.
 - Finally, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {135, 9, 3}.
"""
2022-04-20 03:29:09.025800 --------------------------
2022-04-20 03:29:09.025972 using api key gabby
2022-04-20 03:29:09.156237 in retry 8 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 03:29:14.161078 """
As AtCoder Beginner Contest 100 is taking place, the office of AtCoder, Inc. is decorated with a sequence of length N, a = {a_1, a_2, a_3, ..., a_N}.

Snuke, an employee, would like to play with this sequence.
Specifically, he would like to repeat the following operation as many times as possible:
For every i satisfying 1 \leq i \leq N, perform one of the following: "divide a_i by 2" and "multiply a_i by 3".  
Here, choosing "multiply a_i by 3" for every i is not allowed, and the value of a_i after the operation must be an integer.

At most how many operations can be performed?

-----Constraints-----
 - N is an integer between 1 and 10 \ 000 (inclusive).
 - a_i is an integer between 1 and 1 \ 000 \ 000 \ 000 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
N
a_1 a_2 a_3 ... a_N

-----Output-----
Print the maximum number of operations that Snuke can perform.

-----Sample Input-----
3
5 2 4

-----Sample Output-----
3

The sequence is initially {5, 2, 4}. Three operations can be performed as follows:
 - First, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {15, 6, 2}.
 - Next, multiply a_1 by 3, divide a_2 by 2 and multiply a_3 by 3. The sequence is now {45, 3, 6}.
 - Finally, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {135, 9, 3}.
"""
2022-04-20 03:29:14.161124 --------------------------
2022-04-20 03:29:14.161285 using api key gabby
2022-04-20 03:29:14.199599 in retry 7 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-20 03:29:24.209073 """
As AtCoder Beginner Contest 100 is taking place, the office of AtCoder, Inc. is decorated with a sequence of length N, a = {a_1, a_2, a_3, ..., a_N}.

Snuke, an employee, would like to play with this sequence.
Specifically, he would like to repeat the following operation as many times as possible:
For every i satisfying 1 \leq i \leq N, perform one of the following: "divide a_i by 2" and "multiply a_i by 3".  
Here, choosing "multiply a_i by 3" for every i is not allowed, and the value of a_i after the operation must be an integer.

At most how many operations can be performed?

-----Constraints-----
 - N is an integer between 1 and 10 \ 000 (inclusive).
 - a_i is an integer between 1 and 1 \ 000 \ 000 \ 000 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
N
a_1 a_2 a_3 ... a_N

-----Output-----
Print the maximum number of operations that Snuke can perform.

-----Sample Input-----
3
5 2 4

-----Sample Output-----
3

The sequence is initially {5, 2, 4}. Three operations can be performed as follows:
 - First, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {15, 6, 2}.
 - Next, multiply a_1 by 3, divide a_2 by 2 and multiply a_3 by 3. The sequence is now {45, 3, 6}.
 - Finally, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {135, 9, 3}.
"""
2022-04-20 03:29:24.209119 --------------------------
2022-04-20 03:29:24.209278 using api key sourya
2022-04-20 03:29:34.426240 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    if a[i] % 2 == 0:\n        a[i] //= 2\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(N):\n        if a[i] % 2 == 0:\n            ans += 1\n            a[i] /= 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# N = int(input())\n# a = list(map(int, input().split()))\n\nN = 3\na = [5, 2, 4]\n\ncount = 0\nwhile True:\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] // 2\n        else:\n            break\n    else:\n        count += 1\n        continue\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] * 3\n            break\n    else:\n        break\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        ans += 1\n        a[i] /= 2\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    while a[i] % 2 == 0:\n        a[i] //= 2\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] // 2\n            cnt += 1\n    print(cnt)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] /= 2\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650425364,
  "id": "cmpl-4yvJslGzxG26zx7g9I2iEVT9TpfTw",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:29:34.426653 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    if a[i] % 2 == 0:\n        a[i] //= 2\n        ans += 1\n\nprint(ans)"
}
2022-04-20 03:29:34.426713 REASON stop
2022-04-20 03:29:34.431766 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(N):\n        if a[i] % 2 == 0:\n            ans += 1\n            a[i] /= 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:34.431963 REASON stop
2022-04-20 03:29:34.435165 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# N = int(input())\n# a = list(map(int, input().split()))\n\nN = 3\na = [5, 2, 4]\n\ncount = 0\nwhile True:\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] // 2\n        else:\n            break\n    else:\n        count += 1\n        continue\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] * 3\n            break\n    else:\n        break\n\nprint(count)"
}
2022-04-20 03:29:34.435276 REASON stop
2022-04-20 03:29:34.469603 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        ans += 1\n        a[i] /= 2\n\nprint(ans)"
}
2022-04-20 03:29:34.469767 REASON stop
2022-04-20 03:29:34.488074 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    while a[i] % 2 == 0:\n        a[i] //= 2\n        ans += 1\n\nprint(ans)"
}
2022-04-20 03:29:34.488251 REASON stop
2022-04-20 03:29:34.498159 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] = a[i] // 2\n            cnt += 1\n    print(cnt)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:34.498355 REASON stop
2022-04-20 03:29:34.510832 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] /= 2\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:34.511150 REASON stop
2022-04-20 03:29:34.526252 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:34.526424 REASON stop
