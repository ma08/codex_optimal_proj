["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] + a[-2])\n\nif __name__ == '__main__':\n    main()", "\n\n#-----Main-----\n\nn = int(input())\na = list(map(int, input().split()))\n\n#-----Solution-----\n\na.sort()\n\n#-----Output-----\n\nprint(a[-1] - a[0])", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(n, a))\n\ndef solve(n, a):\n    a.sort()\n    return a[-1] + a[-2]\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] - a[0] + 1 - n)\n\nif __name__ == \"__main__\":\n    main()", "\n\n# get input\nn = int(input())\na = list(map(int, input().split()))\n\n# initialize variables\ndp = [0] * (n+1)\n\n# loop through each element\nfor i in range(n):\n    # loop through each element in dp\n    for j in range(n):\n        # if the element in dp is greater than the current element in a\n        if dp[j] > a[i]:\n            # set the element in dp to the current element in a\n            dp[j] = a[i]\n            # break out of the loop\n            break\n    # if the current element in a is greater than the last element in dp\n    if a[i] > dp[-1]:\n        # set the last element in dp to the current element in a\n        dp[-1] = a[i]\n\n# print the length of the longest increasing subsequence\nprint(len(dp))", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    # print(a)\n    if a[0] == 1:\n        print(1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[-1]*a[-2])\n\nif __name__ == '__main__':\n    main()"]