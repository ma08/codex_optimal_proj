["\n\ndef main():\n    s = input()\n    t = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\n# ==========\n# Solution 1\n# ==========\n\ns = input()\nt = input()\n\ncount = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        count += 1\n\nprint(count)\n\n# ==========\n# Solution 2\n# ==========\n\ns = input()\nt = input()\n\nprint(sum(1 for i in range(len(s)) if s[i] != t[i]))\n\n# ==========\n# Solution 3\n# ==========\n\ns = input()\nt = input()\n\nprint(sum(s[i] != t[i] for i in range(len(s))))", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    slen = len(s)\n    tlen = len(t)\n    dp = [[0 for _ in range(tlen+1)] for _ in range(slen+1)]\n    for i in range(slen+1):\n        for j in range(tlen+1):\n            if i == 0:\n                dp[i][j] = j\n            elif j == 0:\n                dp[i][j] = i\n            elif s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1\n    print(dp[slen][tlen])\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    print(solve(s, t))\n\ndef solve(s, t):\n    n = len(s)\n    m = len(t)\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n    for i in range(n+1):\n        dp[i][0] = i\n    for j in range(m+1):\n        dp[0][j] = j\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1\n    return dp[n][m]\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    print(len(s) - len(t) + 1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    print(get_min_changes(s, t))\n\ndef get_min_changes(s, t):\n    slen = len(s)\n    tlen = len(t)\n    dp = [[0 for j in range(tlen+1)] for i in range(slen+1)]\n    for i in range(slen+1):\n        dp[i][0] = i\n    for j in range(tlen+1):\n        dp[0][j] = j\n    for i in range(1, slen+1):\n        for j in range(1, tlen+1):\n            if s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]) + 1\n    return dp[slen][tlen]\n\nif __name__ == '__main__':\n    main()"]