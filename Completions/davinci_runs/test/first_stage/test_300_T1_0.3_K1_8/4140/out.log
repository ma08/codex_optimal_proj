2022-04-20 02:39:39.246283 """
N tiles are arranged in a row from left to right. The initial color of each tile is represented by a string S of length N.
The i-th tile from the left is painted black if the i-th character of S is 0, and painted white if that character is 1.
You want to repaint some of the tiles black or white, so that any two adjacent tiles have different colors.
At least how many tiles need to be repainted to satisfy the condition?

-----Constraints-----
 - 1 \leq |S| \leq 10^5
 - S_i is 0 or 1.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the minimum number of tiles that need to be repainted to satisfy the condition.

-----Sample Input-----
000

-----Sample Output-----
1

The condition can be satisfied by repainting the middle tile white.
"""
2022-04-20 02:39:39.246300 --------------------------
2022-04-20 02:39:39.246464 using api key derek
2022-04-20 02:39:53.707273 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nS = input()\n\n# \u5168\u3066\u306e\u8272\u304c\u540c\u3058\u5834\u5408\u306f\u30011\u8272\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3059\n# \u5168\u3066\u306e\u8272\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\n# \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u8272\u304c\u7570\u306a\u308b\u96a3\u308a\u5408\u3046\u30bf\u30a4\u30eb\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n\nif S.count('0') == len(S) or S.count('1') == len(S):\n    print(1)\nelse:\n    count = 0\n    for i in range(len(S)-1):\n        if S[i] != S[i+1]:\n            count += 1\n    print(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    cnt = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nS = input()\n\n# Count the number of consecutive zeros and ones\nzero = 0\none = 0\nfor s in S:\n    if s == '0':\n        zero += 1\n    else:\n        one += 1\n\n# The minimum number of repaints is the maximum of the consecutive zeros and ones\nprint(max(zero, one))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    print(min(s.count(\"0\"), s.count(\"1\")))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ns = input()\n\nprint(min(s.count(\"0\"), s.count(\"1\")))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n-1):\n        if s[i] == s[i+1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#-----Main-----\n\nS = input()\n\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)"
    }
  ],
  "created": 1650422379,
  "id": "cmpl-4yuXj4DelCeu8te6myIsnHuHe69Ij",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:39:53.707704 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:39:53.707799 REASON stop
2022-04-20 02:39:53.711410 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nS = input()\n\n# \u5168\u3066\u306e\u8272\u304c\u540c\u3058\u5834\u5408\u306f\u30011\u8272\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3059\n# \u5168\u3066\u306e\u8272\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059\n# \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u8272\u304c\u7570\u306a\u308b\u96a3\u308a\u5408\u3046\u30bf\u30a4\u30eb\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n\nif S.count('0') == len(S) or S.count('1') == len(S):\n    print(1)\nelse:\n    count = 0\n    for i in range(len(S)-1):\n        if S[i] != S[i+1]:\n            count += 1\n    print(count)"
}
2022-04-20 02:39:53.711528 REASON stop
2022-04-20 02:39:53.715457 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    cnt = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:39:53.715567 REASON stop
2022-04-20 02:39:53.741725 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nS = input()\n\n# Count the number of consecutive zeros and ones\nzero = 0\none = 0\nfor s in S:\n    if s == '0':\n        zero += 1\n    else:\n        one += 1\n\n# The minimum number of repaints is the maximum of the consecutive zeros and ones\nprint(max(zero, one))"
}
2022-04-20 02:39:53.741917 REASON stop
2022-04-20 02:39:53.751102 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    print(min(s.count(\"0\"), s.count(\"1\")))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:39:53.751264 REASON stop
2022-04-20 02:39:53.762401 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ns = input()\n\nprint(min(s.count(\"0\"), s.count(\"1\")))"
}
2022-04-20 02:39:53.762569 REASON stop
2022-04-20 02:39:53.771672 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n-1):\n        if s[i] == s[i+1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:39:53.771862 REASON stop
2022-04-20 02:39:53.780889 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#-----Main-----\n\nS = input()\n\ncount = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i+1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 02:39:53.781191 REASON stop
