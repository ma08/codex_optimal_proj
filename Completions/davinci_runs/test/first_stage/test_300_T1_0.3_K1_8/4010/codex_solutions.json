["\n\n\ndef is_palindrome(a):\n    n = len(a)\n    for i in range(n // 2):\n        if a[i] != a[n - i - 1]:\n            return False\n    return True\n\n\ndef solve(a):\n    n = len(a)\n    for i in range(n - 2):\n        for j in range(i + 2, n + 1):\n            if is_palindrome(a[i:j]):\n                return True\n    return False\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if solve(a):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef isPalindrome(arr):\n    for i in range(len(arr)//2):\n        if arr[i] != arr[len(arr)-i-1]:\n            return False\n    return True\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        n = int(sys.stdin.readline().strip())\n        arr = [int(x) for x in sys.stdin.readline().strip().split()]\n        for j in range(n):\n            for k in range(j+2, n+1):\n                if isPalindrome(arr[j:k]):\n                    print(\"YES\")\n                    break\n            else:\n                continue\n            break\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if n < 3:\n            print(\"NO\")\n            continue\n        if a[0] == a[-1]:\n            print(\"YES\")\n            continue\n        for i in range(1, n-1):\n            if a[i] == a[i-1] or a[i] == a[i+1]:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef isPalindrome(arr):\n    for i in range(len(arr)):\n        if arr[i] != arr[len(arr) - i - 1]:\n            return False\n    return True\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        for i in range(n):\n            for j in range(i + 2, n + 1):\n                if isPalindrome(arr[i:j]):\n                    print(\"YES\")\n                    break\n            else:\n                continue\n            break\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution\n\ndef is_palindrome(subseq):\n    \"\"\"\n    Checks if a subsequence is a palindrome.\n    \"\"\"\n    if len(subseq) < 3:\n        return False\n    else:\n        for i in range(len(subseq)//2):\n            if subseq[i] != subseq[-i-1]:\n                return False\n        return True\n\ndef find_palindrome(seq):\n    \"\"\"\n    Finds a palindrome in a sequence.\n    \"\"\"\n    for i in range(len(seq)):\n        for j in range(i+3, len(seq)+1):\n            if is_palindrome(seq[i:j]):\n                return True\n    return False\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    if find_palindrome(seq):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        if arr[0] == arr[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    # print(a)\n    for i in range(n-2):\n        if a[i] == a[i+2]:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")", "\n\ndef is_palindrome(arr):\n    for i in range(len(arr)//2):\n        if arr[i] != arr[len(arr)-i-1]:\n            return False\n    return True\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        for i in range(n-2):\n            for j in range(i+2, n+1):\n                if is_palindrome(a[i:j]):\n                    print(\"YES\")\n                    break\n            else:\n                continue\n            break\n        else:\n            print(\"NO\")\n\nif __name__ == '__main__':\n    main()"]