2022-04-20 03:28:42.068682 """
In the Kingdom of AtCoder, people use a language called Taknese, which uses lowercase English letters.
In Taknese, the plural form of a noun is spelled based on the following rules:
 - If a noun's singular form does not end with s, append s to the end of the singular form.
 - If a noun's singular form ends with s, append es to the end of the singular form.
You are given the singular form S of a Taknese noun. Output its plural form.

-----Constraints-----
 - S is a string of length 1 between 1000, inclusive.
 - S contains only lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the plural form of the given Taknese word.

-----Sample Input-----
apple

-----Sample Output-----
apples

apple ends with e, so its plural form is apples.
"""
2022-04-20 03:28:42.068734 --------------------------
2022-04-20 03:28:42.068901 using api key derek
2022-04-20 03:28:47.900803 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#S = input()\nS = \"apple\"\n\nif S[-1] == \"s\":\n    print(S + \"es\")\nelse:\n    print(S + \"s\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nS = input()\nif S[-1] == 's':\n    print(S + 'es')\nelse:\n    print(S + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    }
  ],
  "created": 1650425322,
  "id": "cmpl-4yvJC8CP4t8uFskzl12CZyzevhuk8",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:28:47.901210 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#S = input()\nS = \"apple\"\n\nif S[-1] == \"s\":\n    print(S + \"es\")\nelse:\n    print(S + \"s\")"
}
2022-04-20 03:28:47.901286 REASON stop
2022-04-20 03:28:47.902384 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.902482 REASON stop
2022-04-20 03:28:47.903108 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.903187 REASON stop
2022-04-20 03:28:47.904213 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.904292 REASON stop
2022-04-20 03:28:47.906049 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.906120 REASON stop
2022-04-20 03:28:47.907461 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nS = input()\nif S[-1] == 's':\n    print(S + 'es')\nelse:\n    print(S + 's')"
}
2022-04-20 03:28:47.907530 REASON stop
2022-04-20 03:28:47.909043 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.909121 REASON stop
2022-04-20 03:28:47.909927 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-20 03:28:47.910128 REASON stop
