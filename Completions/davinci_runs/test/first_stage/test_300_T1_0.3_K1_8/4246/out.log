2022-04-20 03:42:33.855869 """
You will be given a string S of length 3 representing the weather forecast for three days in the past.
The i-th character (1 \leq i \leq 3) of S represents the forecast for the i-th day. S, C, and R stand for sunny, cloudy, and rainy, respectively.
You will also be given a string T of length 3 representing the actual weather on those three days.
The i-th character (1 \leq i \leq 3) of S represents the actual weather on the i-th day. S, C, and R stand for sunny, cloudy, and rainy, respectively.
Print the number of days for which the forecast was correct.

-----Constraints-----
 - S and T are strings of length 3 each.
 - S and T consist of S, C, and R.

-----Input-----
Input is given from Standard Input in the following format:
S
T

-----Output-----
Print the number of days for which the forecast was correct.

-----Sample Input-----
CSS
CSR

-----Sample Output-----
2

 - For the first day, it was forecast to be cloudy, and it was indeed cloudy.
 - For the second day, it was forecast to be sunny, and it was indeed sunny.
 - For the third day, it was forecast to be sunny, but it was rainy.
Thus, the forecast was correct for two days in this case.
"""
2022-04-20 03:42:33.855906 --------------------------
2022-04-20 03:42:33.856075 using api key sourya
2022-04-20 03:42:40.901387 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\ncount = 0\nfor i in range(len(S)):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Get input\nforecast = input()\nactual = input()\n\n# Count number of days forecast was correct\ncorrect = 0\nfor i in range(3):\n    if forecast[i] == actual[i]:\n        correct += 1\n\n# Print number of days forecast was correct\nprint(correct)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\n\ncount = 0\nfor i in range(3):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    S = input()\n    T = input()\n    count = 0\n    for i in range(len(S)):\n        if S[i] == T[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\n\ncount = 0\n\nfor i in range(3):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    # get input\n    forecast = input()\n    actual = input()\n    # compare input and output\n    correct = 0\n    for i in range(3):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\ncorrect = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        correct += 1\n\nprint(correct)"
    }
  ],
  "created": 1650426153,
  "id": "cmpl-4yvWbhHL5NSohFxeFakm5FH3YYD01",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:42:40.901883 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:40.901982 REASON stop
2022-04-20 03:42:40.903158 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\ncount = 0\nfor i in range(len(S)):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:40.903265 REASON stop
2022-04-20 03:42:40.904016 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Get input\nforecast = input()\nactual = input()\n\n# Count number of days forecast was correct\ncorrect = 0\nfor i in range(3):\n    if forecast[i] == actual[i]:\n        correct += 1\n\n# Print number of days forecast was correct\nprint(correct)"
}
2022-04-20 03:42:40.904116 REASON stop
2022-04-20 03:42:40.905517 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\n\ncount = 0\nfor i in range(3):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:40.905613 REASON stop
2022-04-20 03:42:40.906261 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    S = input()\n    T = input()\n    count = 0\n    for i in range(len(S)):\n        if S[i] == T[i]:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:40.906337 REASON stop
2022-04-20 03:42:40.907665 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\n\ncount = 0\n\nfor i in range(3):\n    if s[i] == t[i]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:42:40.907750 REASON stop
2022-04-20 03:42:40.908975 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    # get input\n    forecast = input()\n    actual = input()\n    # compare input and output\n    correct = 0\n    for i in range(3):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:42:40.909065 REASON stop
2022-04-20 03:42:40.909725 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\ncorrect = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        correct += 1\n\nprint(correct)"
}
2022-04-20 03:42:40.909930 REASON stop
