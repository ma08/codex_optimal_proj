2022-04-20 02:16:15.829666 """
-----Input-----

The only line of the input contains a string of digits. The length of the string is between 1 and 10, inclusive.


-----Output-----

Output "Yes" or "No".


-----Examples-----
Input
373

Output
Yes

Input
121

Output
No

Input
436

Output
Yes
"""
2022-04-20 02:16:15.829674 --------------------------
2022-04-20 02:16:15.829778 using api key gabby
2022-04-20 02:16:27.608778 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\ndef is_lucky(n):\n    n = list(str(n))\n    return sum(map(int, n[:len(n)//2])) == sum(map(int, n[len(n)//2:]))\n\nprint(\"Yes\" if is_lucky(int(input())) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef is_lucky(n):\n    n = str(n)\n    if len(n)%2 == 0:\n        n1 = n[:len(n)//2]\n        n2 = n[len(n)//2:]\n        return sum(map(int, n1)) == sum(map(int, n2))\n    else:\n        return False\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    input_string = input()\n    if len(input_string) == 1:\n        print(\"Yes\")\n    else:\n        if input_string[0] == input_string[-1]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef is_lucky(number):\n    \"\"\"\n    Returns True if the number is lucky, False otherwise\n    \"\"\"\n    number = str(number)\n    length = len(number)\n    half = length // 2\n    first_half = number[:half]\n    second_half = number[half:]\n    return sum([int(digit) for digit in first_half]) == sum([int(digit) for digit in second_half])\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef is_lucky(num):\n    num = str(num)\n    half = len(num) // 2\n    return sum(int(num[i]) for i in range(half)) == sum(int(num[i]) for i in range(half, len(num)))\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(n**0.5) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef is_prime_sum(n):\n    if is_prime(n):\n        return False\n    for i in range(1, n):\n        if is_prime(i) and is_prime(n - i):\n            return True\n    return False\n\nprint(\"Yes\" if is_prime_sum(int(input())) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    num = input()\n    if int(num[0]) + int(num[1]) == int(num[2]):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef is_lucky(n):\n    n = str(n)\n    half = len(n) // 2\n    return sum(int(n[i]) for i in range(half)) == sum(int(n[i]) for i in range(half, len(n)))\n\nprint(is_lucky(input()))"
    }
  ],
  "created": 1650420975,
  "id": "cmpl-4yuB5k9FhbucOHUeWnQNswnKldjMd",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:16:27.609107 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\ndef is_lucky(n):\n    n = list(str(n))\n    return sum(map(int, n[:len(n)//2])) == sum(map(int, n[len(n)//2:]))\n\nprint(\"Yes\" if is_lucky(int(input())) else \"No\")"
}
2022-04-20 02:16:27.609143 REASON stop
2022-04-20 02:16:27.609638 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef is_lucky(n):\n    n = str(n)\n    if len(n)%2 == 0:\n        n1 = n[:len(n)//2]\n        n2 = n[len(n)//2:]\n        return sum(map(int, n1)) == sum(map(int, n2))\n    else:\n        return False\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
}
2022-04-20 02:16:27.609699 REASON stop
2022-04-20 02:16:27.610100 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    input_string = input()\n    if len(input_string) == 1:\n        print(\"Yes\")\n    else:\n        if input_string[0] == input_string[-1]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nmain()"
}
2022-04-20 02:16:27.610158 REASON stop
2022-04-20 02:16:27.632687 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef is_lucky(number):\n    \"\"\"\n    Returns True if the number is lucky, False otherwise\n    \"\"\"\n    number = str(number)\n    length = len(number)\n    half = length // 2\n    first_half = number[:half]\n    second_half = number[half:]\n    return sum([int(digit) for digit in first_half]) == sum([int(digit) for digit in second_half])\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
}
2022-04-20 02:16:27.632848 REASON stop
2022-04-20 02:16:27.656863 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef is_lucky(num):\n    num = str(num)\n    half = len(num) // 2\n    return sum(int(num[i]) for i in range(half)) == sum(int(num[i]) for i in range(half, len(num)))\n\nprint(\"Yes\" if is_lucky(input()) else \"No\")"
}
2022-04-20 02:16:27.656993 REASON stop
2022-04-20 02:16:27.657748 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(n**0.5) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef is_prime_sum(n):\n    if is_prime(n):\n        return False\n    for i in range(1, n):\n        if is_prime(i) and is_prime(n - i):\n            return True\n    return False\n\nprint(\"Yes\" if is_prime_sum(int(input())) else \"No\")"
}
2022-04-20 02:16:27.657847 REASON stop
2022-04-20 02:16:27.658806 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    num = input()\n    if int(num[0]) + int(num[1]) == int(num[2]):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:16:27.658903 REASON stop
2022-04-20 02:16:27.659743 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef is_lucky(n):\n    n = str(n)\n    half = len(n) // 2\n    return sum(int(n[i]) for i in range(half)) == sum(int(n[i]) for i in range(half, len(n)))\n\nprint(is_lucky(input()))"
}
2022-04-20 02:16:27.659932 REASON stop
