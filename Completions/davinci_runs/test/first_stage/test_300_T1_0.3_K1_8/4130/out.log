2022-04-20 02:34:17.062294 """
There are $n$ boxers, the weight of the $i$-th boxer is $a_i$. Each of them can change the weight by no more than $1$ before the competition (the weight cannot become equal to zero, that is, it must remain positive). Weight is always an integer number.

It is necessary to choose the largest boxing team in terms of the number of people, that all the boxers' weights in the team are different (i.e. unique).

Write a program that for given current values ​$a_i$ will find the maximum possible number of boxers in a team.

It is possible that after some change the weight of some boxer is $150001$ (but no more).


-----Input-----

The first line contains an integer $n$ ($1 \le n \le 150000$) — the number of boxers. The next line contains $n$ integers $a_1, a_2, \dots, a_n$, where $a_i$ ($1 \le a_i \le 150000$) is the weight of the $i$-th boxer.


-----Output-----

Print a single integer — the maximum possible number of people in a team.


-----Examples-----
Input
4
3 2 4 1

Output
4

Input
6
1 1 1 4 4 4

Output
5



-----Note-----

In the first example, boxers should not change their weights — you can just make a team out of all of them.

In the second example, one boxer with a weight of $1$ can be increased by one (get the weight of $2$), one boxer with a weight of $4$ can be reduced by one, and the other can be increased by one (resulting the boxers with a weight of $3$ and $5$, respectively). Thus, you can get a team consisting of boxers with weights of $5, 4, 3, 2, 1$.
"""
2022-04-20 02:34:17.062316 --------------------------
2022-04-20 02:34:17.062457 using api key derek
2022-04-20 02:34:31.596367 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmax_team_size = 1\n\nfor i in range(1, n):\n    if a[i] - a[i - 1] > 1:\n        max_team_size += 1\n\nprint(max_team_size)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    ans = 0\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n            ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n# The problem is to find the minimum number of changes needed to make all the weights unique.\n# We can do this by sorting the weights and then iterating through the sorted list,\n# and changing the weight of the current boxer to the next available weight.\n# The next available weight is the current weight of the boxer + 1,\n# unless the current weight is the same as the previous boxer's weight,\n# in which case the next available weight is the current weight of the boxer + 2.\n# The number of changes needed is the number of boxers minus the number of unique weights.\n\n# The time complexity is O(n log n) because of the sorting.\n# The space complexity is O(n) because of the sorting.\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nprev = -1\nfor i in range(n):\n    if a[i] == prev:\n        ans += 1\n        prev += 2\n    else:\n        ans += a[i] - prev - 1\n        prev = a[i]\n\nprint(n - ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.append(150001)\n    cnt = 0\n    for i in range(n):\n        if a[i] != a[i+1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    count = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    a.append(150001)\n    #print(a)\n    cnt = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            cnt += 1\n    print(cnt)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    cnt = 0\n    for i in range(n):\n        if a[i] in d:\n            cnt += 1\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] - 1 in d:\n                d[a[i] - 1] -= 1\n                if d[a[i] - 1] == 0:\n                    del d[a[i] - 1]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\nweights = list(map(int, input().split()))\n\nweights.sort()\n\nmax_weight = 0\nmax_team = 0\n\nfor weight in weights:\n    if weight > max_weight + 1:\n        max_team += 1\n        max_weight = weight\n\nprint(max_team)"
    }
  ],
  "created": 1650422057,
  "id": "cmpl-4yuSX6K47yjSG8ewApww9fJP4X4D6",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:34:31.596849 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmax_team_size = 1\n\nfor i in range(1, n):\n    if a[i] - a[i - 1] > 1:\n        max_team_size += 1\n\nprint(max_team_size)"
}
2022-04-20 02:34:31.596933 REASON stop
2022-04-20 02:34:31.597659 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    ans = 0\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n            ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:34:31.597754 REASON stop
2022-04-20 02:34:31.598388 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n# The problem is to find the minimum number of changes needed to make all the weights unique.\n# We can do this by sorting the weights and then iterating through the sorted list,\n# and changing the weight of the current boxer to the next available weight.\n# The next available weight is the current weight of the boxer + 1,\n# unless the current weight is the same as the previous boxer's weight,\n# in which case the next available weight is the current weight of the boxer + 2.\n# The number of changes needed is the number of boxers minus the number of unique weights.\n\n# The time complexity is O(n log n) because of the sorting.\n# The space complexity is O(n) because of the sorting.\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nprev = -1\nfor i in range(n):\n    if a[i] == prev:\n        ans += 1\n        prev += 2\n    else:\n        ans += a[i] - prev - 1\n        prev = a[i]\n\nprint(n - ans)"
}
2022-04-20 02:34:31.598517 REASON stop
2022-04-20 02:34:31.622486 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.append(150001)\n    cnt = 0\n    for i in range(n):\n        if a[i] != a[i+1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:34:31.622647 REASON stop
2022-04-20 02:34:31.623529 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    count = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:34:31.623622 REASON stop
2022-04-20 02:34:31.646718 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    a.append(150001)\n    #print(a)\n    cnt = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            cnt += 1\n    print(cnt)\n\nmain()"
}
2022-04-20 02:34:31.646882 REASON stop
2022-04-20 02:34:31.648336 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    cnt = 0\n    for i in range(n):\n        if a[i] in d:\n            cnt += 1\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] - 1 in d:\n                d[a[i] - 1] -= 1\n                if d[a[i] - 1] == 0:\n                    del d[a[i] - 1]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:34:31.648478 REASON stop
2022-04-20 02:34:31.649278 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\nweights = list(map(int, input().split()))\n\nweights.sort()\n\nmax_weight = 0\nmax_team = 0\n\nfor weight in weights:\n    if weight > max_weight + 1:\n        max_team += 1\n        max_weight = weight\n\nprint(max_team)"
}
2022-04-20 02:34:31.649502 REASON stop
