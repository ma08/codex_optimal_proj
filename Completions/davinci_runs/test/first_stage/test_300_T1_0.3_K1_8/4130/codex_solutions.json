["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    count = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    cnt = 0\n    for i in range(n):\n        if a[i] in d:\n            cnt += 1\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] - 1 in d:\n                d[a[i] - 1] -= 1\n                if d[a[i] - 1] == 0:\n                    del d[a[i] - 1]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n    print(cnt)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.append(150001)\n    cnt = 0\n    for i in range(n):\n        if a[i] != a[i+1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmax_team_size = 1\n\nfor i in range(1, n):\n    if a[i] - a[i - 1] > 1:\n        max_team_size += 1\n\nprint(max_team_size)", "\n\nn = int(input())\nweights = list(map(int, input().split()))\n\nweights.sort()\n\nmax_weight = 0\nmax_team = 0\n\nfor weight in weights:\n    if weight > max_weight + 1:\n        max_team += 1\n        max_weight = weight\n\nprint(max_team)", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] += 1\n        else:\n            d[a[i]] = 1\n    ans = 0\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]] -= 1\n            if d[a[i]] == 0:\n                del d[a[i]]\n            if a[i] + 1 in d:\n                d[a[i] + 1] -= 1\n                if d[a[i] + 1] == 0:\n                    del d[a[i] + 1]\n            ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n# SOLUTION\n# The problem is to find the minimum number of changes needed to make all the weights unique.\n# We can do this by sorting the weights and then iterating through the sorted list,\n# and changing the weight of the current boxer to the next available weight.\n# The next available weight is the current weight of the boxer + 1,\n# unless the current weight is the same as the previous boxer's weight,\n# in which case the next available weight is the current weight of the boxer + 2.\n# The number of changes needed is the number of boxers minus the number of unique weights.\n\n# The time complexity is O(n log n) because of the sorting.\n# The space complexity is O(n) because of the sorting.\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nprev = -1\nfor i in range(n):\n    if a[i] == prev:\n        ans += 1\n        prev += 2\n    else:\n        ans += a[i] - prev - 1\n        prev = a[i]\n\nprint(n - ans)", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    a.append(150001)\n    #print(a)\n    cnt = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            cnt += 1\n    print(cnt)\n\nmain()"]