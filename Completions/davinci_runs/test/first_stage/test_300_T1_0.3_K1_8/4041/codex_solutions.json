["\n\ndef main():\n    s = input()\n    t = input()\n    print(len(s) - len(t))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef subsequence(s, t):\n    \"\"\"\n    >>> subsequence('bbaba', 'bb')\n    3\n    >>> subsequence('baaba', 'ab')\n    2\n    >>> subsequence('abcde', 'abcde')\n    0\n    >>> subsequence('asdfasdf', 'fasd')\n    3\n    \"\"\"\n    s_index = 0\n    t_index = 0\n    s_len = len(s)\n    t_len = len(t)\n    max_len = 0\n    while s_index < s_len and t_index < t_len:\n        if s[s_index] == t[t_index]:\n            t_index += 1\n        else:\n            max_len = max(max_len, s_index - t_index)\n        s_index += 1\n    return max(max_len, s_index - t_index)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()", "\n\ndef subsequence(s, t):\n    if len(t) == 0:\n        return 0\n    if len(s) == 0:\n        return len(t)\n    if s[0] == t[0]:\n        return subsequence(s[1:], t[1:])\n    else:\n        return 1 + subsequence(s[1:], t)\n\ndef main():\n    s = input()\n    t = input()\n    print(subsequence(s, t))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    s = input()\n    t = input()\n    #print(s, t)\n    i = 0\n    j = 0\n    while i < len(s) and j < len(t):\n        if s[i] == t[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n    print(len(s)-len(t))\n\nif __name__ == '__main__':\n    main()", "\n\n#------------------------------------------------------------------------------#\n\ndef solve(s, t):\n    \"\"\"\n    >>> solve('bbaba', 'bb')\n    3\n    >>> solve('baaba', 'ab')\n    2\n    >>> solve('abcde', 'abcde')\n    0\n    >>> solve('asdfasdf', 'fasd')\n    3\n    \"\"\"\n    # TODO\n    pass\n\n#------------------------------------------------------------------------------#\n\ndef _test():\n    import doctest\n    doctest.testmod()\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    _test()", "\n\ndef main():\n    s = input()\n    t = input()\n\n    # dp[i][j] = length of longest common subsequence of s[:i] and t[:j]\n    dp = [[0 for _ in range(len(t) + 1)] for _ in range(len(s) + 1)]\n\n    for i in range(1, len(s) + 1):\n        for j in range(1, len(t) + 1):\n            if s[i - 1] == t[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n\n    print(len(s) - dp[len(s)][len(t)])\n\nif __name__ == '__main__':\n    main()"]