2022-04-20 02:57:11.941927 """
If there is an integer not less than 0 satisfying the following conditions, print the smallest such integer; otherwise, print -1.
 - The integer has exactly N digits in base ten. (We assume 0 to be a 1-digit integer. For other integers, leading zeros are not allowed.)
 - The s_i-th digit from the left is c_i. \left(i = 1, 2, \cdots, M\right)

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 3
 - 0 \leq M \leq 5
 - 1 \leq s_i \leq N
 - 0 \leq c_i \leq 9

-----Input-----
Input is given from Standard Input in the following format:
N M
s_1 c_1
\vdots
s_M c_M

-----Output-----
Print the answer.

-----Sample Input-----
3 3
1 7
3 2
1 7

-----Sample Output-----
702

702 satisfies the conditions - its 1-st and 3-rd digits are 7 and 2, respectively - while no non-negative integer less than 702 satisfies them.
"""
2022-04-20 02:57:11.941954 --------------------------
2022-04-20 02:57:11.942136 using api key gabby
2022-04-20 02:58:32.804816 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\ns = [0] * (n + 1)\n\nfor i in range(m):\n    si, ci = map(int, input().split())\n    s[si] = ci\n\nfor i in range(1, n + 1):\n    if s[i] == 0:\n        s[i] = -1\n\nfor i in range(10):\n    if s[1] != -1 and s[1] != i:\n        continue\n    for j in range(10):\n        if s[2] != -1 and s[2] != j:\n            continue\n        for k in range(10):\n            if s[3] != -1 and s[3] != k:\n                continue\n            if n == 1 and i == 0:\n                continue\n            if n == 2 and i == 0 and j == 0:\n                continue\n            if n == 3 and i == 0 and j == 0 and k == 0:\n                continue\n            print(i * 100 + j * 10 + k)\n            exit()\n\nprint(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ns = [0] * M\nc = [0] * M\n\nfor i in range(M):\n    s[i], c[i] = map(int, input().split())\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n#-----main-----\nn, m = map(int, input().split())\n\n# \u5168\u63a2\u7d22\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f0\u3067\u521d\u671f\u5316\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u3068\u6570\u5b57\u3092\u53d6\u5f97\n# \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f-1\u3092\u51fa\u529b\n# \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u306f\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f4\u65b0\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51fa\u529b\n\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f0\u3067\u521d\u671f\u5316\nl = [0] * n\n\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u3068\u6570\u5b57\u3092\u53d6\u5f97\nfor i in range(m):\n    s, c = map(int, input().split())\n    # \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f-1\u3092\u51fa\u529b\n    if s > n:\n        print(-1)\n        exit()\n    # \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u306f\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f4\u65b0\n    l[s-1] = c\n\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51fa\u529b\nprint(''.join(map(str, l)))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor i in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nif N == 1:\n    if M == 1:\n        print(c[0])\n    else:\n        print(-1)\nelse:\n    if M == 1:\n        if s[0] == 1:\n            print(c[0]*(10**(N-1)))\n        else:\n            print(c[0])\n    else:\n        if s[0] == 1 and s[1] == 1:\n            if c[0] == c[1]:\n                print(c[0]*(10**(N-1)) + c[0])\n            else:\n                print(-1)\n        else:\n            if s[0] == 1:\n                print(c[0]*(10**(N-1)) + c[1])\n            else:\n                print(c[1]*(10**(N-1)) + c[0])"
    },
    {
      "finish_reason": "length",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\n# initialize the answer\nans = -1\n\n# initialize the number of digits\nnum_digits = N\n\n# initialize the number of digits that satisfy the conditions\nnum_satisfied = 0\n\n# initialize the number of digits that are not satisfied\nnum_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked\nnum_not_checked = N\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\ns = [0] * n\nfor i in range(m):\n    si, ci = map(int, input().split())\n    s[si - 1] = ci\n\nfor i in range(n):\n    if s[i] == 0:\n        s[i] = -1\n\nfor i in range(10 ** n):\n    flag = True\n    for j in range(n):\n        if s[j] != -1 and s[j] != int(str(i).zfill(n)[j]):\n            flag = False\n            break\n    if flag:\n        print(i)\n        exit()\nprint(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    digits = [0] * n\n    for i in range(m):\n        s, c = map(int, sys.stdin.readline().split())\n        digits[s - 1] = c\n\n    if digits[0] == 0:\n        print(-1)\n    else:\n        print(\"\".join(map(str, digits)))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ns = [0] * M\nc = [0] * M\n\nfor i in range(M):\n    s[i], c[i] = map(int, input().split())\n\nif N == 1:\n    if M == 1:\n        print(c[0])\n    else:\n        print(-1)\nelse:\n    if M == 1:\n        if s[0] == 1:\n            print(c[0])\n        else:\n            print(-1)\n    else:\n        if s[0] == 1:\n            if c[0] == 0:\n                print(-1)\n            else:\n                print(c[0] * 10 ** (N - 1))\n        else:\n            print(-1)"
    }
  ],
  "created": 1650423432,
  "id": "cmpl-4yuoiRdvIYr0whMiQvtTVlo8FM66R",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:58:32.805515 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\ns = [0] * (n + 1)\n\nfor i in range(m):\n    si, ci = map(int, input().split())\n    s[si] = ci\n\nfor i in range(1, n + 1):\n    if s[i] == 0:\n        s[i] = -1\n\nfor i in range(10):\n    if s[1] != -1 and s[1] != i:\n        continue\n    for j in range(10):\n        if s[2] != -1 and s[2] != j:\n            continue\n        for k in range(10):\n            if s[3] != -1 and s[3] != k:\n                continue\n            if n == 1 and i == 0:\n                continue\n            if n == 2 and i == 0 and j == 0:\n                continue\n            if n == 3 and i == 0 and j == 0 and k == 0:\n                continue\n            print(i * 100 + j * 10 + k)\n            exit()\n\nprint(-1)"
}
2022-04-20 02:58:32.805642 REASON stop
2022-04-20 02:58:32.806720 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ns = [0] * M\nc = [0] * M\n\nfor i in range(M):\n    s[i], c[i] = map(int, input().split())\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)"
}
2022-04-20 02:58:32.806808 REASON stop
2022-04-20 02:58:32.807576 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n#-----main-----\nn, m = map(int, input().split())\n\n# \u5168\u63a2\u7d22\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f0\u3067\u521d\u671f\u5316\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u3068\u6570\u5b57\u3092\u53d6\u5f97\n# \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f-1\u3092\u51fa\u529b\n# \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u306f\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f4\u65b0\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51fa\u529b\n\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f0\u3067\u521d\u671f\u5316\nl = [0] * n\n\n# \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u306e\u6841\u6570\u3068\u6570\u5b57\u3092\u53d6\u5f97\nfor i in range(m):\n    s, c = map(int, input().split())\n    # \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f-1\u3092\u51fa\u529b\n    if s > n:\n        print(-1)\n        exit()\n    # \u6841\u6570\u304c\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u306f\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f4\u65b0\n    l[s-1] = c\n\n# \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51fa\u529b\nprint(''.join(map(str, l)))"
}
2022-04-20 02:58:32.807674 REASON stop
2022-04-20 02:58:32.832732 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor i in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nif N == 1:\n    if M == 1:\n        print(c[0])\n    else:\n        print(-1)\nelse:\n    if M == 1:\n        if s[0] == 1:\n            print(c[0]*(10**(N-1)))\n        else:\n            print(c[0])\n    else:\n        if s[0] == 1 and s[1] == 1:\n            if c[0] == c[1]:\n                print(c[0]*(10**(N-1)) + c[0])\n            else:\n                print(-1)\n        else:\n            if s[0] == 1:\n                print(c[0]*(10**(N-1)) + c[1])\n            else:\n                print(c[1]*(10**(N-1)) + c[0])"
}
2022-04-20 02:58:32.832912 REASON stop
2022-04-20 02:58:32.833905 4 {
  "finish_reason": "length",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\n# initialize the answer\nans = -1\n\n# initialize the number of digits\nnum_digits = N\n\n# initialize the number of digits that satisfy the conditions\nnum_satisfied = 0\n\n# initialize the number of digits that are not satisfied\nnum_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked\nnum_not_checked = N\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_checked_not_satisfied = 0\n\n# initialize the number of digits that are not yet checked and satisfy the conditions\nnum_not_checked_satisfied = 0\n\n# initialize the number of digits that are not yet checked and not satisfy the conditions\nnum_not_"
}
2022-04-20 02:58:32.834178 REASON length
2022-04-20 02:58:32.834194 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\ns = [0] * n\nfor i in range(m):\n    si, ci = map(int, input().split())\n    s[si - 1] = ci\n\nfor i in range(n):\n    if s[i] == 0:\n        s[i] = -1\n\nfor i in range(10 ** n):\n    flag = True\n    for j in range(n):\n        if s[j] != -1 and s[j] != int(str(i).zfill(n)[j]):\n            flag = False\n            break\n    if flag:\n        print(i)\n        exit()\nprint(-1)"
}
2022-04-20 02:58:32.834259 REASON stop
2022-04-20 02:58:32.835524 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    digits = [0] * n\n    for i in range(m):\n        s, c = map(int, sys.stdin.readline().split())\n        digits[s - 1] = c\n\n    if digits[0] == 0:\n        print(-1)\n    else:\n        print(\"\".join(map(str, digits)))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:58:32.835626 REASON stop
2022-04-20 02:58:32.837065 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ns = [0] * M\nc = [0] * M\n\nfor i in range(M):\n    s[i], c[i] = map(int, input().split())\n\nif N == 1:\n    if M == 1:\n        print(c[0])\n    else:\n        print(-1)\nelse:\n    if M == 1:\n        if s[0] == 1:\n            print(c[0])\n        else:\n            print(-1)\n    else:\n        if s[0] == 1:\n            if c[0] == 0:\n                print(-1)\n            else:\n                print(c[0] * 10 ** (N - 1))\n        else:\n            print(-1)"
}
2022-04-20 02:58:32.837295 REASON stop
