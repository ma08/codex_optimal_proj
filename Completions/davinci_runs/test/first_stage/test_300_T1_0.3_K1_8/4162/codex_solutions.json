["\n\nN = int(input())\na = list(map(int, input().split()))\n\ndef f(m):\n    return sum([m % i for i in a])\n\ndef g(m):\n    return sum([m // i for i in a])\n\ndef h(m):\n    return sum([i - 1 for i in a])\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\ndef lcm_list(l):\n    return reduce(lcm, l)\n\ndef solve(N, a):\n    l = lcm_list(a)\n    return f(l * h(l))\n\nprint(solve(N, a))", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n):\n        ans = max(ans, sum(a[:i+1]) - i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a_max = a[-1]\n    a_min = a[0]\n    a_max_divisors = []\n    a_min_divisors = []\n\n    for i in range(1, int(math.sqrt(a_max)) + 1):\n        if a_max % i == 0:\n            a_max_divisors.append(i)\n            if i != a_max // i:\n                a_max_divisors.append(a_max // i)\n\n    for i in range(1, int(math.sqrt(a_min)) + 1):\n        if a_min % i == 0:\n            a_min_divisors.append(i)\n            if i != a_min // i:\n                a_min_divisors.append(a_min // i)\n\n    a_max_divisors.sort()\n    a_min_divisors.sort()\n\n    ans = 0\n    for divisor in a_max_divisors:\n        if divisor in a_min_divisors:\n            ans = divisor\n            break\n    print(sum([ans - (ans % a[i]) for i in range(n)]))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(solve(n, a))\n\ndef solve(n, a):\n    \"\"\"\n    f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N)\n    f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N)\n    f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N)\n    f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N)\n    \"\"\"\n    return 0\n\nif __name__ == \"__main__\":\n    main()", "\n\nN = int(input())\na = list(map(int, input().split()))\n\n# f(m) = (m\\ mod\\ a_1) + (m\\ mod\\ a_2) + ... + (m\\ mod\\ a_N)\n# f(m) = m\\ mod\\ a_1 + m\\ mod\\ a_2 + ... + m\\ mod\\ a_N\n# f(m) = m\\ mod\\ (a_1 * a_2 * ... * a_N)\n# f(m) = m\\ mod\\ (lcm(a_1, a_2, ..., a_N))\n\n# lcm(a_1, a_2, ..., a_N)\n# lcm(a_1, a_2, ..., a_N) = a_1 * a_2 * ... * a_N / gcd(a_1, a_2, ..., a_N)\n# gcd(a_1, a_2, ..., a_N) = gcd(gcd(a_1, a_2), a_3, ..., a_N)\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef lcm_list(a):\n    l = a[0]\n    for i in range(1, len(a)):\n        l = lcm(l, a[i])\n    return l\n\nprint(lcm_list(a))"]