["", "\n\ndef main():\n    n = int(input())\n    s = input()\n    assert n % 3 == 0\n    assert len(s) == n\n    assert all(c in \"012\" for c in s)\n\n    # Count the number of 0's, 1's, and 2's.\n    counts = [0, 0, 0]\n    for c in s:\n        counts[int(c)] += 1\n\n    # If the string is already balanced, we're done.\n    if counts[0] == counts[1] == counts[2]:\n        print(s)\n        return\n\n    # Otherwise, we need to replace some characters.\n    # We will replace 0's with 1's and 2's, 1's with 0's and 2's, and 2's with 0's and 1's.\n    # We will do this in such a way that the resulting string is lexicographically smallest.\n    # To do this, we will replace 0's with 1's and 2's, then 1's with 0's and 2's, then 2's with 0's and 1's.\n    # We will replace 0's with 1's and 2's in such a way that the resulting string is lexicographically smallest.\n    # To do this, we will replace 0's with 1's and 2's in the order of their indices.\n    # We will replace 1's with 0's and 2's in such a way that the resulting string is lexicographically smallest.\n    # To do this, we will replace 1's with 0's and 2's in the order of their indices.\n    # We will replace 2's with 0's and 1's in such a way that the resulting string is lexicographically smallest.\n    # To do this, we will replace 2's with 0's and 1's in the order of their indices.\n\n    # Replace 0's with 1's and 2's.\n    result = \"\"\n    for c in s:\n        if c == \"0\":\n            if counts[1] < counts[2]:\n                result += \"1\"\n                counts[1] += 1\n            else:\n                result += \"2\"\n                counts[2] += 1\n        else:\n            result += c\n\n    # Replace 1's with 0's and 2's.\n    s = result\n    result = \"\"\n    for c in s:\n        if c == \"1\":\n            if counts[0] < counts[2]:\n                result += \"0\"\n                counts[0] += 1\n            else:\n                result += \"2\"\n                counts[2] += 1\n        else:\n            result += c\n\n    # Replace 2's with 0's and 1's.\n    s = result\n    result = \"\"\n    for c in s:\n        if c == \"2\":\n            if counts[0] < counts[1]:\n                result += \"0\"\n                counts[0] += 1\n            else:\n                result += \"1\"\n                counts[1] += 1\n        else:\n            result += c\n\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\ncounts = Counter(s)\n\nif counts['0'] == counts['1'] == counts['2']:\n    print(s)\n    exit()\n\nif counts['0'] > counts['1']:\n    if counts['0'] > counts['2']:\n        # replace 0 with 1\n        print(s.replace('0', '1', 1))\n    else:\n        # replace 0 with 2\n        print(s.replace('0', '2', 1))\nelse:\n    if counts['1'] > counts['2']:\n        # replace 1 with 0\n        print(s.replace('1', '0', 1))\n    else:\n        # replace 1 with 2\n        print(s.replace('1', '2', 1))", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(input())\n    s = input()\n\n    if n % 3 == 0:\n        print(\"\".join(sorted(s)))\n    else:\n        print(\"\".join(sorted(s[:n-n%3]) + s[n-n%3:]))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    s = input()\n    if n % 3 != 0:\n        print(\"Error\")\n        return\n    s = list(s)\n    count_0 = 0\n    count_1 = 0\n    count_2 = 0\n    for i in range(n):\n        if s[i] == '0':\n            count_0 += 1\n        elif s[i] == '1':\n            count_1 += 1\n        else:\n            count_2 += 1\n    if count_0 == count_1 == count_2:\n        print(\"\".join(s))\n        return\n    for i in range(n):\n        if count_0 < count_1:\n            if s[i] == '2':\n                s[i] = '0'\n                count_2 -= 1\n                count_0 += 1\n        elif count_0 > count_1:\n            if s[i] == '2':\n                s[i] = '1'\n                count_2 -= 1\n                count_1 += 1\n        if count_0 == count_1:\n            break\n    for i in range(n):\n        if count_1 < count_2:\n            if s[i] == '0':\n                s[i] = '1'\n                count_0 -= 1\n                count_1 += 1\n        elif count_1 > count_2:\n            if s[i] == '0':\n                s[i] = '2'\n                count_0 -= 1\n                count_2 += 1\n        if count_1 == count_2:\n            break\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\ns = input()\n\n# Count the number of 0s, 1s, and 2s\nzeros = s.count('0')\nones = s.count('1')\ntwos = s.count('2')\n\n# The number of 0s, 1s, and 2s should be equal\nassert zeros == ones == twos\n\n# The number of characters should be divisible by 3\nassert n % 3 == 0\n\n# The number of characters should be equal to the sum of 0s, 1s, and 2s\nassert n == zeros + ones + twos\n\n# The number of 0s, 1s, and 2s should be less than or equal to the number of characters\nassert zeros <= n\nassert ones <= n\nassert twos <= n\n\n# The number of 0s, 1s, and 2s should be greater than or equal to 0\nassert zeros >= 0\nassert ones >= 0\nassert twos >= 0\n\n# Replace the 0s with 2s\ns = s.replace('0', '2')\n\n# Replace the 1s with 0s\ns = s.replace('1', '0')\n\n# Replace the 2s with 1s\ns = s.replace('2', '1')\n\n# Print the result\nprint(s)", "\n\nfrom collections import Counter\n\ndef balanced_ternary(s):\n    s_count = Counter(s)\n    if s_count['1'] == s_count['2']:\n        return s\n    if s_count['1'] > s_count['2']:\n        return ''.join(['1' if c == '2' else c for c in s])\n    if s_count['1'] < s_count['2']:\n        return ''.join(['2' if c == '1' else c for c in s])\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    print(balanced_ternary(s))"]