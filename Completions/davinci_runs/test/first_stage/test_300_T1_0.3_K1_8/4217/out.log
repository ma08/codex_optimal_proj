2022-04-20 03:25:43.192925 """
Katsusando loves omelette rice.
Besides, he loves crème brûlée, tenderloin steak and so on, and believes that these foods are all loved by everyone.
To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.
The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th, ..., A_{iK_i}-th food.
Find the number of the foods liked by all the N people.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 30
 - 1 \leq K_i \leq M
 - 1 \leq A_{ij} \leq M
 - For each i (1 \leq i \leq N), A_{i1}, A_{i2}, ..., A_{iK_i} are distinct.

-----Constraints-----
Input is given from Standard Input in the following format:
N M
K_1 A_{11} A_{12} ... A_{1K_1}
K_2 A_{21} A_{22} ... A_{2K_2}
:
K_N A_{N1} A_{N2} ... A_{NK_N}

-----Output-----
Print the number of the foods liked by all the N people.

-----Sample Input-----
3 4
2 1 3
3 1 2 3
2 3 2

-----Sample Output-----
1

As only the third food is liked by all the three people, 1 should be printed.
"""
2022-04-20 03:25:43.192951 --------------------------
2022-04-20 03:25:43.193120 using api key derek
2022-04-20 03:25:53.400828 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for _ in range(n):\n        k = list(map(int, input().split()))\n        for i in range(1, k[0]+1):\n            foods[k[i]-1] += 1\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# input\nN, M = map(int, input().split())\nlikes = [list(map(int, input().split())) for _ in range(N)]\n\n# initialize\nliked_by_all = [0] * M\n\n# count\nfor i in range(N):\n    for j in range(1, likes[i][0] + 1):\n        liked_by_all[likes[i][j] - 1] += 1\n\n# output\nprint(liked_by_all.count(N))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, M = map(int, input().split())\n    foods = [0] * M\n    for _ in range(N):\n        K = int(input())\n        for _ in range(K):\n            foods[int(input())-1] += 1\n    print(foods.count(N))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input())\n        for j in map(int, input().split()):\n            foods[j-1] += 1\n    print(len([f for f in foods if f == n]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\nfoods = [0] * m\nfor _ in range(n):\n    k = list(map(int, input().split()))\n    for i in k[1:]:\n        foods[i-1] += 1\n\nprint(foods.count(n))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\nfoods = [0] * M\n\nfor i in range(N):\n    K = int(input().split()[0])\n    for j in range(K):\n        foods[int(input().split()[0]) - 1] += 1\n\nprint(foods.count(N))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\n# list of lists\nlikes = [[] for _ in range(n)]\n\nfor i in range(n):\n    likes[i] = list(map(int, input().split()))\n\n# print(likes)\n\n# set of sets\nlikes_set = [set() for _ in range(n)]\n\nfor i in range(n):\n    likes_set[i] = set(likes[i][1:])\n\n# print(likes_set)\n\n# set intersection\nintersection = set.intersection(*likes_set)\n\n# print(intersection)\n\nprint(len(intersection))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, M = map(int, input().split())\n\n# Initialize the list of foods\nfoods = [0] * M\n\n# Count the number of people who like each food\nfor i in range(N):\n    K = int(input().split()[0])\n    for j in range(K):\n        foods[int(input().split()[0]) - 1] += 1\n\n# Print the number of foods liked by all the N people\nprint(foods.count(N))"
    }
  ],
  "created": 1650425143,
  "id": "cmpl-4yvGJYmORvm1S54lzyT5Wx0pRZZY7",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:25:53.401267 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for _ in range(n):\n        k = list(map(int, input().split()))\n        for i in range(1, k[0]+1):\n            foods[k[i]-1] += 1\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:25:53.401335 REASON stop
2022-04-20 03:25:53.402657 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# input\nN, M = map(int, input().split())\nlikes = [list(map(int, input().split())) for _ in range(N)]\n\n# initialize\nliked_by_all = [0] * M\n\n# count\nfor i in range(N):\n    for j in range(1, likes[i][0] + 1):\n        liked_by_all[likes[i][j] - 1] += 1\n\n# output\nprint(liked_by_all.count(N))"
}
2022-04-20 03:25:53.402767 REASON stop
2022-04-20 03:25:53.403544 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, M = map(int, input().split())\n    foods = [0] * M\n    for _ in range(N):\n        K = int(input())\n        for _ in range(K):\n            foods[int(input())-1] += 1\n    print(foods.count(N))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:25:53.403642 REASON stop
2022-04-20 03:25:53.405089 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input())\n        for j in map(int, input().split()):\n            foods[j-1] += 1\n    print(len([f for f in foods if f == n]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:25:53.405185 REASON stop
2022-04-20 03:25:53.406181 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\nfoods = [0] * m\nfor _ in range(n):\n    k = list(map(int, input().split()))\n    for i in k[1:]:\n        foods[i-1] += 1\n\nprint(foods.count(n))"
}
2022-04-20 03:25:53.406277 REASON stop
2022-04-20 03:25:53.421690 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\nfoods = [0] * M\n\nfor i in range(N):\n    K = int(input().split()[0])\n    for j in range(K):\n        foods[int(input().split()[0]) - 1] += 1\n\nprint(foods.count(N))"
}
2022-04-20 03:25:53.421850 REASON stop
2022-04-20 03:25:53.423127 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\n# list of lists\nlikes = [[] for _ in range(n)]\n\nfor i in range(n):\n    likes[i] = list(map(int, input().split()))\n\n# print(likes)\n\n# set of sets\nlikes_set = [set() for _ in range(n)]\n\nfor i in range(n):\n    likes_set[i] = set(likes[i][1:])\n\n# print(likes_set)\n\n# set intersection\nintersection = set.intersection(*likes_set)\n\n# print(intersection)\n\nprint(len(intersection))"
}
2022-04-20 03:25:53.423257 REASON stop
2022-04-20 03:25:53.424741 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, M = map(int, input().split())\n\n# Initialize the list of foods\nfoods = [0] * M\n\n# Count the number of people who like each food\nfor i in range(N):\n    K = int(input().split()[0])\n    for j in range(K):\n        foods[int(input().split()[0]) - 1] += 1\n\n# Print the number of foods liked by all the N people\nprint(foods.count(N))"
}
2022-04-20 03:25:53.425002 REASON stop
