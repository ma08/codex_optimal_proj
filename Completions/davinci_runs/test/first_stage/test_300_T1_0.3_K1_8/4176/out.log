2022-04-20 03:03:49.925641 """
Takahashi is organizing a party.
At the party, each guest will receive one or more snack pieces.
Takahashi predicts that the number of guests at this party will be A or B.
Find the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted.
We assume that a piece cannot be divided and distributed to multiple guests.

-----Constraints-----
 - 1 \leq A, B \leq 10^5
 - A \neq B
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests.

-----Sample Input-----
2 3

-----Sample Output-----
6

When we have six snack pieces, each guest can take three pieces if we have two guests, and each guest can take two if we have three guests.
"""
2022-04-20 03:03:49.925660 --------------------------
2022-04-20 03:03:49.925807 using api key sourya
2022-04-20 03:03:57.772790 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().split())\n\nif a > b:\n    a, b = b, a\n\nprint(b*(b+1)//2 - (b-a)*(b-a+1)//2)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    # get input\n    a, b = map(int, input().split())\n\n    # get the greatest common divisor\n    gcd = math.gcd(a, b)\n\n    # get the least common multiple\n    lcm = a * b // gcd\n\n    # print the result\n    print(lcm)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    print(math.gcd(a, b))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\na, b = map(int, input().split())\n\nif a < b:\n    a, b = b, a\n\nprint(a * b)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650423830,
  "id": "cmpl-4yuv8UQx7qTftHtXk2HgXUoUoN7fF",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:03:57.773200 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().split())\n\nif a > b:\n    a, b = b, a\n\nprint(b*(b+1)//2 - (b-a)*(b-a+1)//2)"
}
2022-04-20 03:03:57.773284 REASON stop
2022-04-20 03:03:57.774296 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.774396 REASON stop
2022-04-20 03:03:57.775052 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    # get input\n    a, b = map(int, input().split())\n\n    # get the greatest common divisor\n    gcd = math.gcd(a, b)\n\n    # get the least common multiple\n    lcm = a * b // gcd\n\n    # print the result\n    print(lcm)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.775166 REASON stop
2022-04-20 03:03:57.776179 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.776271 REASON stop
2022-04-20 03:03:57.777205 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    print(math.gcd(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.777283 REASON stop
2022-04-20 03:03:57.777994 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.778067 REASON stop
2022-04-20 03:03:57.778870 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\na, b = map(int, input().split())\n\nif a < b:\n    a, b = b, a\n\nprint(a * b)"
}
2022-04-20 03:03:57.778948 REASON stop
2022-04-20 03:03:57.779788 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:57.780021 REASON stop
