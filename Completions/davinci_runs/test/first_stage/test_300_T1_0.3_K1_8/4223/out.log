2022-04-20 03:29:01.217591 """
There are N slimes lining up from left to right. The colors of these slimes will be given as a string S of length N consisting of lowercase English letters. The i-th slime from the left has the color that corresponds to the i-th character of S.
Adjacent slimes with the same color will fuse into one larger slime without changing the color. If there were a slime adjacent to this group of slimes before fusion, that slime is now adjacent to the new larger slime.
Ultimately, how many slimes will be there?

-----Constraints-----
 - 1 \leq N \leq 10^5
 - |S| = N
 - S consists of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print the final number of slimes.

-----Sample Input-----
10
aabbbbaaca

-----Sample Output-----
5

Ultimately, these slimes will fuse into abaca.
"""
2022-04-20 03:29:01.217612 --------------------------
2022-04-20 03:29:01.217846 using api key gabby
2022-04-20 03:29:08.345588 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    S = input()\n    cnt = 1\n    for i in range(1, N):\n        if S[i] != S[i-1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(1, n):\n    if s[i] != s[i-1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 1\nfor i in range(1, N):\n    if S[i - 1] != S[i]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = 1\n    for i in range(1, n):\n        if s[i] != s[i-1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nfrom collections import deque\n\nn = int(input())\ns = input()\n\nslimes = deque()\n\nfor i in range(n):\n    if len(slimes) == 0:\n        slimes.append(s[i])\n    else:\n        if slimes[-1] == s[i]:\n            slimes.pop()\n        else:\n            slimes.append(s[i])\n\nprint(len(slimes))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = 1\n    for i in range(1, n):\n        if s[i] != s[i-1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(1, n):\n    if s[i] != s[i-1]:\n        count += 1\nprint(count)"
    }
  ],
  "created": 1650425341,
  "id": "cmpl-4yvJV0rvnCRjtbI2c3O3KBowrzm8n",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:29:08.346020 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    S = input()\n    cnt = 1\n    for i in range(1, N):\n        if S[i] != S[i-1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:08.346095 REASON stop
2022-04-20 03:29:08.352410 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(1, n):\n    if s[i] != s[i-1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:29:08.352548 REASON stop
2022-04-20 03:29:08.355526 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 1\nfor i in range(1, N):\n    if S[i - 1] != S[i]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:29:08.355644 REASON stop
2022-04-20 03:29:08.362649 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = 1\n    for i in range(1, n):\n        if s[i] != s[i-1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:08.362802 REASON stop
2022-04-20 03:29:08.370003 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:29:08.370150 REASON stop
2022-04-20 03:29:08.377881 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nfrom collections import deque\n\nn = int(input())\ns = input()\n\nslimes = deque()\n\nfor i in range(n):\n    if len(slimes) == 0:\n        slimes.append(s[i])\n    else:\n        if slimes[-1] == s[i]:\n            slimes.pop()\n        else:\n            slimes.append(s[i])\n\nprint(len(slimes))"
}
2022-04-20 03:29:08.378031 REASON stop
2022-04-20 03:29:08.384819 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = 1\n    for i in range(1, n):\n        if s[i] != s[i-1]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:29:08.384981 REASON stop
2022-04-20 03:29:08.391556 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ncount = 1\nfor i in range(1, n):\n    if s[i] != s[i-1]:\n        count += 1\nprint(count)"
}
2022-04-20 03:29:08.391830 REASON stop
