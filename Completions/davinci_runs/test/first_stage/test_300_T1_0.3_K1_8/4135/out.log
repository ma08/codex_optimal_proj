2022-04-20 02:37:22.784576 """
A string $s$ of length $n$ can be encrypted by the following algorithm:  iterate over all divisors of $n$ in decreasing order (i.e. from $n$ to $1$),  for each divisor $d$, reverse the substring $s[1 \dots d]$ (i.e. the substring which starts at position $1$ and ends at position $d$). 

For example, the above algorithm applied to the string $s$="codeforces" leads to the following changes: "codeforces" $\to$ "secrofedoc" $\to$ "orcesfedoc" $\to$ "rocesfedoc" $\to$ "rocesfedoc" (obviously, the last reverse operation doesn't change the string because $d=1$).

You are given the encrypted string $t$. Your task is to decrypt this string, i.e., to find a string $s$ such that the above algorithm results in string $t$. It can be proven that this string $s$ always exists and is unique.


-----Input-----

The first line of input consists of a single integer $n$ ($1 \le n \le 100$) â€” the length of the string $t$. The second line of input consists of the string $t$. The length of $t$ is $n$, and it consists only of lowercase Latin letters.


-----Output-----

Print a string $s$ such that the above algorithm results in $t$.


-----Examples-----
Input
10
rocesfedoc

Output
codeforces

Input
16
plmaetwoxesisiht

Output
thisisexampletwo

Input
1
z

Output
z



-----Note-----

The first example is described in the problem statement.
"""
2022-04-20 02:37:22.784600 --------------------------
2022-04-20 02:37:22.784788 using api key derek
2022-04-20 02:37:31.424255 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = list(t)\n    for d in range(n, 0, -1):\n        if n % d == 0:\n            s[0:d] = s[0:d][::-1]\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt = input()\n\n# print(n, t)\n\ndivisors = []\nfor i in range(1, n+1):\n    if n % i == 0:\n        divisors.append(i)\n\n# print(divisors)\n\ns = t\nfor d in divisors[::-1]:\n    # print(s, d)\n    s = s[:d][::-1] + s[d:]\n\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = [''] * n\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            for j in range(i):\n                s[j::i] = t[j:i-j-1:-1]\n            t = ''.join(s)\n    print(t)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = t[:]\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            s = s[:i][::-1] + s[i:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = list(t)\n    for i in range(n,0,-1):\n        if n%i == 0:\n            s[:i] = s[:i][::-1]\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt = input()\n\nfor i in range(n, 0, -1):\n    if n % i == 0:\n        t = t[:i][::-1] + t[i:]\n\nprint(t)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = [None] * n\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            for j in range(i):\n                s[j * (n // i)] = t[j]\n            t = ''.join(s)\n    print(t)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = t\n    for d in range(n, 0, -1):\n        if n % d == 0:\n            s = s[d-1::-1] + s[d:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650422242,
  "id": "cmpl-4yuVWrOtYvAyFs1kinxnl6C2ADJU8",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:37:31.424670 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = list(t)\n    for d in range(n, 0, -1):\n        if n % d == 0:\n            s[0:d] = s[0:d][::-1]\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.424767 REASON stop
2022-04-20 02:37:31.425491 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt = input()\n\n# print(n, t)\n\ndivisors = []\nfor i in range(1, n+1):\n    if n % i == 0:\n        divisors.append(i)\n\n# print(divisors)\n\ns = t\nfor d in divisors[::-1]:\n    # print(s, d)\n    s = s[:d][::-1] + s[d:]\n\nprint(s)"
}
2022-04-20 02:37:31.425601 REASON stop
2022-04-20 02:37:31.426279 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = [''] * n\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            for j in range(i):\n                s[j::i] = t[j:i-j-1:-1]\n            t = ''.join(s)\n    print(t)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.426372 REASON stop
2022-04-20 02:37:31.451371 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = t[:]\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            s = s[:i][::-1] + s[i:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.451543 REASON stop
2022-04-20 02:37:31.452443 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = list(t)\n    for i in range(n,0,-1):\n        if n%i == 0:\n            s[:i] = s[:i][::-1]\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.452544 REASON stop
2022-04-20 02:37:31.453438 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt = input()\n\nfor i in range(n, 0, -1):\n    if n % i == 0:\n        t = t[:i][::-1] + t[i:]\n\nprint(t)"
}
2022-04-20 02:37:31.453530 REASON stop
2022-04-20 02:37:31.455712 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = [None] * n\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            for j in range(i):\n                s[j * (n // i)] = t[j]\n            t = ''.join(s)\n    print(t)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.455804 REASON stop
2022-04-20 02:37:31.457100 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    t = input()\n    s = t\n    for d in range(n, 0, -1):\n        if n % d == 0:\n            s = s[d-1::-1] + s[d:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 02:37:31.457323 REASON stop
