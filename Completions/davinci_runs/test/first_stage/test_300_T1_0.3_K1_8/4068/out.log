2022-04-20 01:45:51.473916 """
There is a staircase with N steps. Takahashi is now standing at the foot of the stairs, that is, on the 0-th step.
He can climb up one or two steps at a time.
However, the treads of the a_1-th, a_2-th, a_3-th, \ldots, a_M-th steps are broken, so it is dangerous to set foot on those steps.
How many are there to climb up to the top step, that is, the N-th step, without setting foot on the broken steps?
Find the count modulo 1\ 000\ 000\ 007.

-----Constraints-----
 - 1 \leq N \leq 10^5
 - 0 \leq M \leq N-1
 - 1 \leq a_1 < a_2 <  ...  < a_M \leq N-1

-----Input-----
Input is given from Standard Input in the following format:
N M
a_1
a_2
 .
 .
 .
a_M

-----Output-----
Print the number of ways to climb up the stairs under the condition, modulo 1\ 000\ 000\ 007.

-----Sample Input-----
6 1
3

-----Sample Output-----
4

There are four ways to climb up the stairs, as follows:
 - 0 \to 1 \to 2 \to 4 \to 5 \to 6
 - 0 \to 1 \to 2 \to 4 \to 6
 - 0 \to 2 \to 4 \to 5 \to 6
 - 0 \to 2 \to 4 \to 6
"""
2022-04-20 01:45:51.473925 --------------------------
2022-04-20 01:45:51.474028 using api key sourya
2022-04-20 01:46:00.891764 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\na = [0] * M\nfor i in range(M):\n    a[i] = int(sys.stdin.readline())\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, N + 1):\n    dp[i] = dp[i - 1] + dp[i - 2]\n    for j in range(M):\n        if i == a[j]:\n            dp[i] = 0\n            break\nprint(dp[N] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\na = [int(input()) for _ in range(M)]\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N + 1):\n    if i not in a:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[N] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# \u521d\u671f\u5316\nN, M = map(int, input().split())\nA = set(map(int, ('' for i in range(M)).split()))\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, N + 1):\n    if i in A:\n        dp[i] = 0\n    else:\n        dp[i] = dp[i - 1] + dp[i - 2]\n\nprint(dp[N] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nbroken = set(map(int, [input() for _ in range(M)]))\n\n# dp[i] = i\u756a\u76ee\u306e\u968e\u6bb5\u3092\u767b\u3063\u305f\u5834\u5408\u306e\u767b\u308a\u65b9\u306e\u7dcf\u6570\ndp = [0] * (N+1)\ndp[0] = 1\nfor i in range(1, N+1):\n    if i in broken:\n        continue\n    if i == 1:\n        dp[1] = 1\n    else:\n        dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[-1] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nbroken = [0] * N\nfor _ in range(M):\n    broken[int(input())] = 1\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N + 1):\n    if broken[i - 1] == 0:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[N] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [0] * m\n    for i in range(m):\n        a[i] = int(sys.stdin.readline())\n    a.sort()\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        if i == a[0]:\n            dp[i] = dp[i-2]\n            a.pop(0)\n        else:\n            dp[i] = dp[i-1] + dp[i-2]\n    print(dp[n] % 1000000007)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# input\nN, M = map(int, input().split())\na = [int(input()) for _ in range(M)]\n\n# dp\ndp = [0] * (N + 1)\ndp[0] = 1\n\nfor i in range(N + 1):\n    if i - 1 >= 0 and i - 1 not in a:\n        dp[i] += dp[i - 1]\n    if i - 2 >= 0 and i - 2 not in a:\n        dp[i] += dp[i - 2]\n\n# output\nprint(dp[N] % 1000000007)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [int(sys.stdin.readline()) for _ in range(m)]\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(n):\n        if i + 1 <= n:\n            dp[i + 1] += dp[i]\n        if i + 2 <= n:\n            dp[i + 2] += dp[i]\n        if i + 1 in a:\n            dp[i + 1] = 0\n        if i + 2 in a:\n            dp[i + 2] = 0\n    print(dp[n] % 1000000007)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650419151,
  "id": "cmpl-4ythfngHzTSypOlIrFgTNpAxU2zjT",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 01:46:00.892088 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\na = [0] * M\nfor i in range(M):\n    a[i] = int(sys.stdin.readline())\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, N + 1):\n    dp[i] = dp[i - 1] + dp[i - 2]\n    for j in range(M):\n        if i == a[j]:\n            dp[i] = 0\n            break\nprint(dp[N] % 1000000007)"
}
2022-04-20 01:46:00.892123 REASON stop
2022-04-20 01:46:00.896271 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\na = [int(input()) for _ in range(M)]\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N + 1):\n    if i not in a:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[N] % 1000000007)"
}
2022-04-20 01:46:00.896387 REASON stop
2022-04-20 01:46:00.934908 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# \u521d\u671f\u5316\nN, M = map(int, input().split())\nA = set(map(int, ('' for i in range(M)).split()))\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, N + 1):\n    if i in A:\n        dp[i] = 0\n    else:\n        dp[i] = dp[i - 1] + dp[i - 2]\n\nprint(dp[N] % 1000000007)"
}
2022-04-20 01:46:00.935060 REASON stop
2022-04-20 01:46:00.961775 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nbroken = set(map(int, [input() for _ in range(M)]))\n\n# dp[i] = i\u756a\u76ee\u306e\u968e\u6bb5\u3092\u767b\u3063\u305f\u5834\u5408\u306e\u767b\u308a\u65b9\u306e\u7dcf\u6570\ndp = [0] * (N+1)\ndp[0] = 1\nfor i in range(1, N+1):\n    if i in broken:\n        continue\n    if i == 1:\n        dp[1] = 1\n    else:\n        dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[-1] % 1000000007)"
}
2022-04-20 01:46:00.961945 REASON stop
2022-04-20 01:46:00.996951 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nbroken = [0] * N\nfor _ in range(M):\n    broken[int(input())] = 1\n\ndp = [0] * (N + 1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N + 1):\n    if broken[i - 1] == 0:\n        dp[i] = dp[i - 1] + dp[i - 2]\n    else:\n        dp[i] = 0\n\nprint(dp[N] % 1000000007)"
}
2022-04-20 01:46:00.997110 REASON stop
2022-04-20 01:46:01.014116 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [0] * m\n    for i in range(m):\n        a[i] = int(sys.stdin.readline())\n    a.sort()\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        if i == a[0]:\n            dp[i] = dp[i-2]\n            a.pop(0)\n        else:\n            dp[i] = dp[i-1] + dp[i-2]\n    print(dp[n] % 1000000007)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:46:01.014282 REASON stop
2022-04-20 01:46:01.056416 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# input\nN, M = map(int, input().split())\na = [int(input()) for _ in range(M)]\n\n# dp\ndp = [0] * (N + 1)\ndp[0] = 1\n\nfor i in range(N + 1):\n    if i - 1 >= 0 and i - 1 not in a:\n        dp[i] += dp[i - 1]\n    if i - 2 >= 0 and i - 2 not in a:\n        dp[i] += dp[i - 2]\n\n# output\nprint(dp[N] % 1000000007)"
}
2022-04-20 01:46:01.056751 REASON stop
2022-04-20 01:46:01.083854 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [int(sys.stdin.readline()) for _ in range(m)]\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(n):\n        if i + 1 <= n:\n            dp[i + 1] += dp[i]\n        if i + 2 <= n:\n            dp[i + 2] += dp[i]\n        if i + 1 in a:\n            dp[i + 1] = 0\n        if i + 2 in a:\n            dp[i + 2] = 0\n    print(dp[n] % 1000000007)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:46:01.084141 REASON stop
