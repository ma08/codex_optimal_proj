2022-04-20 02:42:25.509330 """
A sequence a_1,a_2,... ,a_n is said to be /\/\/\/ when the following conditions are satisfied:
 - For each i = 1,2,..., n-2, a_i = a_{i+2}.
 - Exactly two different numbers appear in the sequence.
You are given a sequence v_1,v_2,...,v_n whose length is even.
We would like to make this sequence /\/\/\/ by replacing some of its elements.
Find the minimum number of elements that needs to be replaced.

-----Constraints-----
 - 2 \leq n \leq 10^5
 - n is even.
 - 1 \leq v_i \leq 10^5
 - v_i is an integer.

-----Input-----
Input is given from Standard Input in the following format:
n
v_1 v_2 ... v_n

-----Output-----
Print the minimum number of elements that needs to be replaced.

-----Sample Input-----
4
3 1 3 2

-----Sample Output-----
1

The sequence 3,1,3,2 is not /\/\/\/, but we can make it /\/\/\/ by replacing one of its elements: for example, replace the fourth element to make it 3,1,3,1.
"""
2022-04-20 02:42:25.509349 --------------------------
2022-04-20 02:42:25.509520 using api key gabby
2022-04-20 02:43:47.184857 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u306a\u30890\nif len(set(v)) == 1:\n    print(0)\n    exit()\n\n# \u5168\u3066\u7570\u306a\u308b\u6570\u5b57\u306a\u30892\nif len(set(v)) == n:\n    print(2)\n    exit()\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u306a\u304f\u3001\u5168\u3066\u7570\u306a\u308b\u6570\u5b57\u3067\u3082\u306a\u3044\u306a\u30891\nprint(1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\nv = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# 2\u3064\u306e\u6570\u5b57\u304c\u3069\u3061\u3089\u3082\u540c\u3058\u5024\u306b\u306a\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059\nwhile v[0] == v[1]:\n    v.pop(0)\n    v.pop(0)\n\n# 2\u3064\u306e\u6570\u5b57\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u3069\u3061\u3089\u304b\u306e\u6570\u5b57\u3092\u6b8b\u3057\u3066\u3001\u3082\u3046\u4e00\u65b9\u306e\u6570\u5b57\u3092\u7f6e\u304d\u63db\u3048\u308b\n# \u3053\u306e\u6642\u3001\u7f6e\u304d\u63db\u3048\u308b\u6570\u5b57\u306f\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\n# \u305d\u306e\u305f\u3081\u3001\u7f6e\u304d\u63db\u3048\u308b\u6570\u5b57\u306f\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u7570\u306a\u308b\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n# \u305d\u306e\u5f8c\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n# \u3053\u308c\u3089\u306e\u500b\u6570\u306e\u5c0f\u3055\u3044\u65b9\u3092\u7b54\u3048\u3068\u3059\u308b\n\n# \u6b8b\u3057\u305f\u6570\u5b57\u3068\u7570\u306a\u308b\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\ndiff_num = v[1]\ndiff_cnt = 0\nfor i in range(2, len(v)):\n    if v[i] != diff_num:\n        diff_cnt += 1\n\n# \u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\nsame_num = v[0]\nsame_cnt = 0\nfor i in range(2, len(v)):\n    if v[i] == same_num:\n        same_cnt += 1\n\n# \u5c0f\u3055\u3044\u65b9\u3092\u7b54\u3048\u3068\u3059\u308b\nprint(min(diff_cnt, same_cnt))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u3042\u308c\u30700\u3001\u9055\u3046\u6570\u5b57\u304c2\u3064\u3067\u3042\u308c\u30701\u3001\u305d\u308c\u4ee5\u5916\u306f2\nif len(set(v)) == 1:\n    print(0)\nelif len(set(v)) == 2:\n    print(1)\nelse:\n    print(2)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# Count the number of each element\ncount = {}\nfor i in v:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\n# Find the two elements\na = -1\nb = -1\nfor i in count:\n    if count[i] > n // 2:\n        print(-1)\n        exit()\n    if count[i] == n // 2:\n        if a == -1:\n            a = i\n        elif b == -1:\n            b = i\n\n# If a and b are the same, then no need to replace\nif a == b:\n    print(0)\n    exit()\n\n# Find the number of elements that need to be replaced\nans = 0\nfor i in range(n - 1):\n    if v[i] != a and v[i + 1] != a:\n        ans += 1\n    if v[i] != b and v[i + 1] != b:\n        ans += 1\n\nprint(ans // 2)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u90e8\u540c\u3058\u6570\u5b57\u304b\u30012\u7a2e\u985e\u306e\u6570\u5b57\u304b\u3092\u5224\u5b9a\u3059\u308b\nif len(set(v)) == 1:\n    print(0)\nelif len(set(v)) == 2:\n    print(n//2)\nelse:\n    print(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# dic = {key:value}\ndic = {}\nfor i in range(n):\n    if v[i] in dic:\n        dic[v[i]] += 1\n    else:\n        dic[v[i]] = 1\n\n# print(dic)\n\n# dic.keys()\n# dic.values()\n# dic.items()\n\n# if len(dic) == 1:\n#     print(n//2)\n# else:\n#     print(n - max(dic.values()))\n\nif len(dic) == 1:\n    print(n//2)\nelse:\n    print(n - max(dic.values()))"
    },
    {
      "finish_reason": "length",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem B\n\nif __name__ == '__main__':\n    count = int(input())\n    numbers = list(map(int, input().split()))\n\n    # See:\n    # https://img.atcoder.jp/abc099/editorial.pdf\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855984\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855983\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855982\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855980\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855979\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855977\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855976\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855975\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855974\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855973\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855972\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855971\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855970\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855969\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855968\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855967\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855966\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855965\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855964\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855963\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855962\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855961\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855960\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855959\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855958\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855957\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855956\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855955\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855954\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855953\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855952\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855951\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855950\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855949\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855948\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855947\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855946\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855945\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855944\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855943\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855942\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855941\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855940\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855939\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855938\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855937\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855936\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855935\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855934\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855933\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855932\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855931\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855930\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855929\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855928\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855927\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855926\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855925\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855924\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855923\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855922\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855921\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855920\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855919\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855918\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855917\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855916\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855915\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855914\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855913\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855912\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855911\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855910\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855909\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855908\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855907\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855906\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855905\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855904\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855903\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855902\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855901\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855900\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855899\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855898\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855897\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855896\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855895\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855894\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855893\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855892\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855891\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855890\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855889\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855888\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855887\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855886\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855885\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855884\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855883\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855882\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855881\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855880\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855879\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855878\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855877\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855876\n    # https://beta.atcoder.jp/contests/abc0"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    v.sort()\n    if v[0] == v[1]:\n        print(n//2 - v.count(v[0]))\n    else:\n        print(n//2 - v.count(v[-1]))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650422545,
  "id": "cmpl-4yuaP0lbLuyqrK02jYDqHaWeWcvOl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:43:47.185510 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u306a\u30890\nif len(set(v)) == 1:\n    print(0)\n    exit()\n\n# \u5168\u3066\u7570\u306a\u308b\u6570\u5b57\u306a\u30892\nif len(set(v)) == n:\n    print(2)\n    exit()\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u306a\u304f\u3001\u5168\u3066\u7570\u306a\u308b\u6570\u5b57\u3067\u3082\u306a\u3044\u306a\u30891\nprint(1)"
}
2022-04-20 02:43:47.185603 REASON stop
2022-04-20 02:43:47.201555 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\nv = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# 2\u3064\u306e\u6570\u5b57\u304c\u3069\u3061\u3089\u3082\u540c\u3058\u5024\u306b\u306a\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059\nwhile v[0] == v[1]:\n    v.pop(0)\n    v.pop(0)\n\n# 2\u3064\u306e\u6570\u5b57\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u3069\u3061\u3089\u304b\u306e\u6570\u5b57\u3092\u6b8b\u3057\u3066\u3001\u3082\u3046\u4e00\u65b9\u306e\u6570\u5b57\u3092\u7f6e\u304d\u63db\u3048\u308b\n# \u3053\u306e\u6642\u3001\u7f6e\u304d\u63db\u3048\u308b\u6570\u5b57\u306f\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\n# \u305d\u306e\u305f\u3081\u3001\u7f6e\u304d\u63db\u3048\u308b\u6570\u5b57\u306f\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u7570\u306a\u308b\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n# \u305d\u306e\u5f8c\u3001\u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n# \u3053\u308c\u3089\u306e\u500b\u6570\u306e\u5c0f\u3055\u3044\u65b9\u3092\u7b54\u3048\u3068\u3059\u308b\n\n# \u6b8b\u3057\u305f\u6570\u5b57\u3068\u7570\u306a\u308b\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\ndiff_num = v[1]\ndiff_cnt = 0\nfor i in range(2, len(v)):\n    if v[i] != diff_num:\n        diff_cnt += 1\n\n# \u6b8b\u3057\u305f\u6570\u5b57\u3068\u540c\u3058\u5024\u306e\u6570\u5b57\u3092\u63a2\u3057\u3001\u305d\u306e\u500b\u6570\u3092\u6570\u3048\u308b\nsame_num = v[0]\nsame_cnt = 0\nfor i in range(2, len(v)):\n    if v[i] == same_num:\n        same_cnt += 1\n\n# \u5c0f\u3055\u3044\u65b9\u3092\u7b54\u3048\u3068\u3059\u308b\nprint(min(diff_cnt, same_cnt))"
}
2022-04-20 02:43:47.201736 REASON stop
2022-04-20 02:43:47.257129 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u3066\u540c\u3058\u6570\u5b57\u3067\u3042\u308c\u30700\u3001\u9055\u3046\u6570\u5b57\u304c2\u3064\u3067\u3042\u308c\u30701\u3001\u305d\u308c\u4ee5\u5916\u306f2\nif len(set(v)) == 1:\n    print(0)\nelif len(set(v)) == 2:\n    print(1)\nelse:\n    print(2)"
}
2022-04-20 02:43:47.257321 REASON stop
2022-04-20 02:43:47.281087 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# Count the number of each element\ncount = {}\nfor i in v:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\n# Find the two elements\na = -1\nb = -1\nfor i in count:\n    if count[i] > n // 2:\n        print(-1)\n        exit()\n    if count[i] == n // 2:\n        if a == -1:\n            a = i\n        elif b == -1:\n            b = i\n\n# If a and b are the same, then no need to replace\nif a == b:\n    print(0)\n    exit()\n\n# Find the number of elements that need to be replaced\nans = 0\nfor i in range(n - 1):\n    if v[i] != a and v[i + 1] != a:\n        ans += 1\n    if v[i] != b and v[i + 1] != b:\n        ans += 1\n\nprint(ans // 2)"
}
2022-04-20 02:43:47.281268 REASON stop
2022-04-20 02:43:47.319188 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# \u5168\u90e8\u540c\u3058\u6570\u5b57\u304b\u30012\u7a2e\u985e\u306e\u6570\u5b57\u304b\u3092\u5224\u5b9a\u3059\u308b\nif len(set(v)) == 1:\n    print(0)\nelif len(set(v)) == 2:\n    print(n//2)\nelse:\n    print(-1)"
}
2022-04-20 02:43:47.319374 REASON stop
2022-04-20 02:43:47.363004 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\nv = list(map(int, input().split()))\n\n# dic = {key:value}\ndic = {}\nfor i in range(n):\n    if v[i] in dic:\n        dic[v[i]] += 1\n    else:\n        dic[v[i]] = 1\n\n# print(dic)\n\n# dic.keys()\n# dic.values()\n# dic.items()\n\n# if len(dic) == 1:\n#     print(n//2)\n# else:\n#     print(n - max(dic.values()))\n\nif len(dic) == 1:\n    print(n//2)\nelse:\n    print(n - max(dic.values()))"
}
2022-04-20 02:43:47.363223 REASON stop
2022-04-20 02:43:47.403331 6 {
  "finish_reason": "length",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem B\n\nif __name__ == '__main__':\n    count = int(input())\n    numbers = list(map(int, input().split()))\n\n    # See:\n    # https://img.atcoder.jp/abc099/editorial.pdf\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855984\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855983\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855982\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855980\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855979\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855977\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855976\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855975\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855974\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855973\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855972\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855971\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855970\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855969\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855968\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855967\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855966\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855965\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855964\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855963\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855962\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855961\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855960\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855959\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855958\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855957\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855956\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855955\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855954\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855953\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855952\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855951\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855950\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855949\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855948\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855947\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855946\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855945\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855944\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855943\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855942\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855941\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855940\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855939\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855938\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855937\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855936\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855935\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855934\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855933\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855932\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855931\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855930\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855929\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855928\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855927\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855926\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855925\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855924\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855923\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855922\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855921\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855920\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855919\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855918\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855917\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855916\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855915\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855914\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855913\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855912\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855911\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855910\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855909\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855908\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855907\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855906\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855905\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855904\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855903\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855902\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855901\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855900\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855899\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855898\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855897\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855896\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855895\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855894\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855893\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855892\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855891\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855890\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855889\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855888\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855887\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855886\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855885\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855884\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855883\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855882\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855881\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855880\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855879\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855878\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855877\n    # https://beta.atcoder.jp/contests/abc099/submissions/2855876\n    # https://beta.atcoder.jp/contests/abc0"
}
2022-04-20 02:43:47.403615 REASON length
2022-04-20 02:43:47.403637 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    v = list(map(int, input().split()))\n    v.sort()\n    if v[0] == v[1]:\n        print(n//2 - v.count(v[0]))\n    else:\n        print(n//2 - v.count(v[-1]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:43:47.403847 REASON stop
