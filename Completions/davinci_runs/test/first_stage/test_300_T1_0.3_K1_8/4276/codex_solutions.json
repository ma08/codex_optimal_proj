["\n\nn, t = map(int, input().split())\nroutes = [list(map(int, input().split())) for _ in range(n)]\n\nroutes.sort(key=lambda x: x[1])\n\nfor i in range(len(routes)):\n    if routes[i][1] <= t:\n        print(routes[i][0])\n        exit()\nprint('TLE')", "\n\nn, t = map(int, input().split())\n\nmin_cost = float('inf')\nfor _ in range(n):\n    cost, time = map(int, input().split())\n    if time <= t:\n        min_cost = min(min_cost, cost)\n\nif min_cost == float('inf'):\n    print('TLE')\nelse:\n    print(min_cost)", "\n\nn, t = map(int, input().split())\ncosts = []\nfor i in range(n):\n    c, ti = map(int, input().split())\n    costs.append((c, ti))\n\ncosts.sort(key=lambda x: x[1])\n\nfor i in range(n):\n    if costs[i][1] <= t:\n        print(costs[i][0])\n        exit()\n\nprint(\"TLE\")", "\n\nN, T = map(int, input().split())\n\ncost = 1001\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        cost = min(cost, c)\n\nif cost == 1001:\n    print(\"TLE\")\nelse:\n    print(cost)", "\n\nn, t = map(int, input().split())\n\ncosts = []\nfor _ in range(n):\n    c, ti = map(int, input().split())\n    if ti <= t:\n        costs.append(c)\n\nif len(costs) == 0:\n    print(\"TLE\")\nelse:\n    print(min(costs))", "\n\nimport sys\n\nN, T = map(int, sys.stdin.readline().split())\n\ncost = []\ntime = []\nfor i in range(N):\n    c, t = map(int, sys.stdin.readline().split())\n    cost.append(c)\n    time.append(t)\n\nfor i in range(N):\n    if time[i] <= T:\n        print(cost[i])\n        sys.exit()\n\nprint(\"TLE\")", "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    routes = []\n    for _ in range(n):\n        c, t_i = map(int, sys.stdin.readline().split())\n        routes.append((c, t_i))\n    routes.sort(key=lambda x: x[1])\n    for c, t_i in routes:\n        if t_i <= t:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()", "\n\nn, t = map(int, input().split())\ncosts = []\nfor i in range(n):\n    c, ti = map(int, input().split())\n    costs.append((c, ti))\n\ncosts.sort()\n\nfor i in range(n):\n    if costs[i][1] <= t:\n        print(costs[i][0])\n        break\nelse:\n    print(\"TLE\")"]