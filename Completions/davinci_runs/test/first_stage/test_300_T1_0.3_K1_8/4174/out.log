2022-04-20 03:03:28.234528 """
A ball will bounce along a number line, making N + 1 bounces. It will make the first bounce at coordinate D_1 = 0, and the i-th bounce (2 \leq i \leq N+1) at coordinate D_i = D_{i-1} + L_{i-1}.
How many times will the ball make a bounce where the coordinate is at most X?

-----Constraints-----
 - 1 \leq N \leq 100
 - 1 \leq L_i \leq 100
 - 1 \leq X \leq 10000
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N X
L_1 L_2 ... L_{N-1} L_N

-----Output-----
Print the number of times the ball will make a bounce where the coordinate is at most X.

-----Sample Input-----
3 6
3 4 5

-----Sample Output-----
2

The ball will make a bounce at the coordinates 0, 3, 7 and 12, among which two are less than or equal to 6.
"""
2022-04-20 03:03:28.234548 --------------------------
2022-04-20 03:03:28.234709 using api key derek
2022-04-20 03:03:40.120822 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 1\npos = 0\nfor i in range(n):\n    pos += l[i]\n    if pos <= x:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nans = 1\nD = 0\n\nfor i in range(N):\n    if D + L[i] <= X:\n        ans += 1\n        D += L[i]\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\nD = [0]\n\n# \u5404\u5ea7\u6a19\u3092\u8a08\u7b97\nfor i in range(N):\n    D.append(D[i] + L[i])\n\n# \u5ea7\u6a19\u304cX\u4ee5\u4e0b\u306b\u306a\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\nfor i in range(N+1):\n    if D[i] <= X:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N, X = map(int, sys.stdin.readline().split())\n    L = list(map(int, sys.stdin.readline().split()))\n    D = [0]\n    for i in range(N):\n        D.append(D[i] + L[i])\n    print(len([d for d in D if d <= X]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nans = 0\npos = 0\nfor i in range(n):\n    if pos <= x:\n        ans += 1\n    pos += l[i]\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    count = 0\n    for i in range(n):\n        if x >= l[i]:\n            count += 1\n            x -= l[i]\n        else:\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 1\npos = 0\n\nfor i in range(n):\n    pos += l[i]\n    if pos <= x:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n\n    # d[i] = i\u756a\u76ee\u306e\u8df3\u306d\u8fd4\u308a\u3067\u306e\u4f4d\u7f6e\n    d = [0] * (n + 1)\n    for i in range(n):\n        d[i + 1] = d[i] + l[i]\n\n    # d[i] <= x \u3068\u306a\u308b\u6700\u5927\u306ei\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n + 1):\n        if d[i] <= x:\n            ans = i\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650423808,
  "id": "cmpl-4yuumM7KT0O4GxZ28TiPSTpVRkefS",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:03:40.121239 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 1\npos = 0\nfor i in range(n):\n    pos += l[i]\n    if pos <= x:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:03:40.121312 REASON stop
2022-04-20 03:03:40.122304 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nans = 1\nD = 0\n\nfor i in range(N):\n    if D + L[i] <= X:\n        ans += 1\n        D += L[i]\n\nprint(ans)"
}
2022-04-20 03:03:40.122401 REASON stop
2022-04-20 03:03:40.123065 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\n# \u521d\u671f\u5024\nD = [0]\n\n# \u5404\u5ea7\u6a19\u3092\u8a08\u7b97\nfor i in range(N):\n    D.append(D[i] + L[i])\n\n# \u5ea7\u6a19\u304cX\u4ee5\u4e0b\u306b\u306a\u308b\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\nfor i in range(N+1):\n    if D[i] <= X:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:03:40.123155 REASON stop
2022-04-20 03:03:40.147653 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N, X = map(int, sys.stdin.readline().split())\n    L = list(map(int, sys.stdin.readline().split()))\n    D = [0]\n    for i in range(N):\n        D.append(D[i] + L[i])\n    print(len([d for d in D if d <= X]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:40.147807 REASON stop
2022-04-20 03:03:40.169845 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nans = 0\npos = 0\nfor i in range(n):\n    if pos <= x:\n        ans += 1\n    pos += l[i]\n\nprint(ans)"
}
2022-04-20 03:03:40.169989 REASON stop
2022-04-20 03:03:40.170927 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    count = 0\n    for i in range(n):\n        if x >= l[i]:\n            count += 1\n            x -= l[i]\n        else:\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:40.171041 REASON stop
2022-04-20 03:03:40.171968 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 1\npos = 0\n\nfor i in range(n):\n    pos += l[i]\n    if pos <= x:\n        count += 1\n\nprint(count)"
}
2022-04-20 03:03:40.172052 REASON stop
2022-04-20 03:03:40.173054 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n\n    # d[i] = i\u756a\u76ee\u306e\u8df3\u306d\u8fd4\u308a\u3067\u306e\u4f4d\u7f6e\n    d = [0] * (n + 1)\n    for i in range(n):\n        d[i + 1] = d[i] + l[i]\n\n    # d[i] <= x \u3068\u306a\u308b\u6700\u5927\u306ei\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n + 1):\n        if d[i] <= x:\n            ans = i\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 03:03:40.173266 REASON stop
