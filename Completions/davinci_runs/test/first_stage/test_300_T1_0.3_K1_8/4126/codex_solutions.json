["\n\ns = input()\n\nif s == s[::-1] and s[:len(s)//2] == s[:len(s)//2][::-1] and s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\ns = input()\n\nif s == s[::-1]:\n    if s[:len(s)//2] == s[:len(s)//2][::-1]:\n        if s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n            print(\"Yes\")\n            exit()\nprint(\"No\")", "\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\ndef is_strong_palindrome(s):\n    return is_palindrome(s) and is_palindrome(s[:len(s)//2]) and is_palindrome(s[len(s)//2+1:])\n\ns = input()\nif is_strong_palindrome(s):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\nS = input()\n\nif S == S[::-1]:\n    if S[:len(S)//2] == S[:len(S)//2][::-1]:\n        if S[(len(S)+3)//2-1:] == S[(len(S)+3)//2-1:][::-1]:\n            print(\"Yes\")\n            exit()\n\nprint(\"No\")", "\n\nimport sys\n\ndef is_palindrome(string):\n    return string == string[::-1]\n\ndef is_strong_palindrome(string):\n    if not is_palindrome(string):\n        return False\n    else:\n        length = len(string)\n        return is_palindrome(string[:length//2]) and is_palindrome(string[(length+3)//2-1:])\n\ndef main():\n    string = sys.stdin.readline().strip()\n    if is_strong_palindrome(string):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()", "\n\ns = input()\n\nif s == s[::-1]:\n    if s[:int((len(s)-1)/2)] == s[:int((len(s)-1)/2)][::-1]:\n        if s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1]:\n            print(\"Yes\")\n            exit()\n\nprint(\"No\")", "\n\ns = input()\n\nif s[:int((len(s)-1)/2)] == s[:int((len(s)-1)/2)][::-1] and s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1] and s == s[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"]