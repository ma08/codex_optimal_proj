["\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef get_primes(n):\n    primes = []\n    for i in range(2, n + 1):\n        if is_prime(i):\n            primes.append(i)\n    return primes\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\ndef get_array_a(b):\n    a = []\n    for i in range(0, len(b), 2):\n        if b[i] in primes:\n            a.append(primes.index(b[i]) + 1)\n        else:\n            a.append(b[i] // get_divisors(b[i])[0])\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\nprimes = get_primes(2750131)\na = get_array_a(b)\nprint(*a)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    b = [int(x) for x in sys.stdin.readline().strip().split()]\n    a = []\n    for i in range(n):\n        if b[2*i] in a:\n            a.append(b[2*i+1])\n        else:\n            a.append(b[2*i])\n    print(\" \".join([str(x) for x in a]))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport math\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef getPrimes(n):\n    primes = [2, 3]\n    i = 5\n    while len(primes) < n:\n        if isPrime(i):\n            primes.append(i)\n        i += 2\n    return primes\n\ndef getDivisors(n):\n    divisors = []\n    for i in range(2, math.ceil(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\ndef getArray(n, b):\n    a = []\n    for i in range(n):\n        if b[i] in b[n:]:\n            a.append(b[i])\n        else:\n            a.append(getDivisors(b[i])[0])\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\n\nprint(*getArray(n, b))", "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef get_prime(n):\n    primes = [2]\n    i = 3\n    while len(primes) < n:\n        if is_prime(i):\n            primes.append(i)\n        i += 2\n    return primes\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\ndef get_a(n, b):\n    a = []\n    for i in range(n):\n        if b[i] in get_prime(199999):\n            a.append(b[i])\n        else:\n            a.append(b[i] // get_divisors(b[i])[-1])\n    return a\n\ndef main():\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    a = get_a(n, b)\n    print(\" \".join([str(i) for i in a]))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef isPrime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = []\n    for i in range(0, 2*n, 2):\n        if b[i] == b[i+1]:\n            a.append(b[i])\n        else:\n            a.append(b[i]*b[i+1])\n    print(\" \".join(str(x) for x in a))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i = i + 6\n    return True\n\ndef get_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef get_divisor(n):\n    for i in range(2, n):\n        if n % i == 0:\n            return i\n    return 1\n\ndef get_array_a(b):\n    a = []\n    for i in range(len(b)):\n        if is_prime(b[i]):\n            a.append(get_prime(b[i]))\n        else:\n            a.append(get_divisor(b[i]))\n    return a\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = get_array_a(b)\n    print(' '.join([str(x) for x in a]))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef is_prime(x):\n    if x == 1:\n        return False\n    if x == 2:\n        return True\n    for i in range(2, int(math.sqrt(x))+1):\n        if x % i == 0:\n            return False\n    return True\n\ndef get_primes(n):\n    primes = []\n    x = 1\n    while len(primes) < n:\n        x += 1\n        if is_prime(x):\n            primes.append(x)\n    return primes\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n))+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\ndef get_a(b):\n    a = []\n    for i in range(len(b)):\n        if i % 2 == 0:\n            if is_prime(b[i]):\n                a.append(b[i])\n            else:\n                divisors = get_divisors(b[i])\n                for divisor in divisors:\n                    if divisor in b:\n                        a.append(divisor)\n                        break\n        else:\n            primes = get_primes(b[i])\n            for prime in primes:\n                if prime in b:\n                    a.append(prime)\n                    break\n    return a\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    b = [int(x) for x in sys.stdin.readline().strip().split()]\n    a = get_a(b)\n    for x in a:\n        print(x, end=' ')\n    print()\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef find_divisor(n):\n    for divisor in range(2, n):\n        if n % divisor == 0:\n            return divisor\n    return -1\n\ndef find_prime(n):\n    primes = [2]\n    for i in range(3, 2750131, 2):\n        if is_prime(i):\n            primes.append(i)\n    return primes[n - 1]\n\ndef find_a(b):\n    n = len(b) // 2\n    a = []\n    for i in range(n):\n        if b[i] == b[n + i]:\n            a.append(b[i])\n        else:\n            if b[i] == find_prime(b[n + i]):\n                a.append(b[n + i])\n            else:\n                a.append(find_prime(b[i]))\n    return a\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = find_a(b)\n    print(' '.join([str(x) for x in a]))\n\nif __name__ == '__main__':\n    main()"]