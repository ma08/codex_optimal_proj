2022-04-20 01:03:14.707219 """
Mishka started participating in a programming contest. There are $n$ problems in the contest. Mishka's problem-solving skill is equal to $k$.

Mishka arranges all problems from the contest into a list. Because of his weird principles, Mishka only solves problems from one of the ends of the list. Every time, he chooses which end (left or right) he will solve the next problem from. Thus, each problem Mishka solves is either the leftmost or the rightmost problem in the list.

Mishka cannot solve a problem with difficulty greater than $k$. When Mishka solves the problem, it disappears from the list, so the length of the list decreases by $1$. Mishka stops when he is unable to solve any problem from any end of the list.

How many problems can Mishka solve?


-----Input-----

The first line of input contains two integers $n$ and $k$ ($1 \le n, k \le 100$) — the number of problems in the contest and Mishka's problem-solving skill.

The second line of input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 100$), where $a_i$ is the difficulty of the $i$-th problem. The problems are given in order from the leftmost to the rightmost in the list.


-----Output-----

Print one integer — the maximum number of problems Mishka can solve.


-----Examples-----
Input
8 4
4 2 3 1 5 1 6 4

Output
5

Input
5 2
3 1 2 1 3

Output
0

Input
5 100
12 34 55 43 21

Output
5



-----Note-----

In the first example, Mishka can solve problems in the following order: $[4, 2, 3, 1, 5, 1, 6, 4] \rightarrow [2, 3, 1, 5, 1, 6, 4] \rightarrow [2, 3, 1, 5, 1, 6] \rightarrow [3, 1, 5, 1, 6] \rightarrow [1, 5, 1, 6] \rightarrow [5, 1, 6]$, so the number of solved problems will be equal to $5$.

In the second example, Mishka can't solve any problem because the difficulties of problems from both ends are greater than $k$.

In the third example, Mishka's solving skill is so amazing that he can solve all the problems.
"""
2022-04-20 01:03:14.707235 --------------------------
2022-04-20 01:03:14.707338 using api key derek
2022-04-20 01:03:22.604203 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    i, j = 0, n-1\n    s = 0\n    while i <= j:\n        if a[i] <= k:\n            s += 1\n            i += 1\n        elif a[j] <= k:\n            s += 1\n            j -= 1\n        else:\n            break\n    print(s)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ncnt = 0\nwhile len(a) > 0:\n    if a[0] <= k:\n        a.pop(0)\n        cnt += 1\n    elif a[-1] <= k:\n        a.pop()\n        cnt += 1\n    else:\n        break\n\nprint(cnt)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nwhile a:\n    if a[0] <= k:\n        ans += 1\n        a.pop(0)\n    elif a[-1] <= k:\n        ans += 1\n        a.pop()\n    else:\n        break\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\n\nans = 0\nwhile left <= right:\n    if a[left] <= k:\n        ans += 1\n        left += 1\n    elif a[right] <= k:\n        ans += 1\n        right -= 1\n    else:\n        break\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    i = 0\n    j = n - 1\n    count = 0\n\n    while i <= j:\n        if a[i] <= k:\n            count += 1\n            i += 1\n        elif a[j] <= k:\n            count += 1\n            j -= 1\n        else:\n            break\n\n    print(count)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\nsolved = 0\n\nwhile left <= right:\n    if problems[left] <= k:\n        solved += 1\n        left += 1\n    elif problems[right] <= k:\n        solved += 1\n        right -= 1\n    else:\n        break\n\nprint(solved)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    ans = 0\n    while l <= r:\n        if a[l] <= k:\n            l += 1\n            ans += 1\n        elif a[r] <= k:\n            r -= 1\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l, r = 0, n-1\n    res = 0\n    while l <= r:\n        if a[l] <= k:\n            l += 1\n            res += 1\n        elif a[r] <= k:\n            r -= 1\n            res += 1\n        else:\n            break\n    print(res)\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650416594,
  "id": "cmpl-4yt2QzuT0sc4dsMgTIU6pkxMckghl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 01:03:22.604564 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    i, j = 0, n-1\n    s = 0\n    while i <= j:\n        if a[i] <= k:\n            s += 1\n            i += 1\n        elif a[j] <= k:\n            s += 1\n            j -= 1\n        else:\n            break\n    print(s)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:03:22.604602 REASON stop
2022-04-20 01:03:22.605185 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ncnt = 0\nwhile len(a) > 0:\n    if a[0] <= k:\n        a.pop(0)\n        cnt += 1\n    elif a[-1] <= k:\n        a.pop()\n        cnt += 1\n    else:\n        break\n\nprint(cnt)"
}
2022-04-20 01:03:22.605249 REASON stop
2022-04-20 01:03:22.605683 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nwhile a:\n    if a[0] <= k:\n        ans += 1\n        a.pop(0)\n    elif a[-1] <= k:\n        ans += 1\n        a.pop()\n    else:\n        break\nprint(ans)"
}
2022-04-20 01:03:22.605741 REASON stop
2022-04-20 01:03:22.607487 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\n\nans = 0\nwhile left <= right:\n    if a[left] <= k:\n        ans += 1\n        left += 1\n    elif a[right] <= k:\n        ans += 1\n        right -= 1\n    else:\n        break\n\nprint(ans)"
}
2022-04-20 01:03:22.607572 REASON stop
2022-04-20 01:03:22.608452 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    i = 0\n    j = n - 1\n    count = 0\n\n    while i <= j:\n        if a[i] <= k:\n            count += 1\n            i += 1\n        elif a[j] <= k:\n            count += 1\n            j -= 1\n        else:\n            break\n\n    print(count)\n\nmain()"
}
2022-04-20 01:03:22.608533 REASON stop
2022-04-20 01:03:22.609553 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\nsolved = 0\n\nwhile left <= right:\n    if problems[left] <= k:\n        solved += 1\n        left += 1\n    elif problems[right] <= k:\n        solved += 1\n        right -= 1\n    else:\n        break\n\nprint(solved)"
}
2022-04-20 01:03:22.609670 REASON stop
2022-04-20 01:03:22.610905 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    ans = 0\n    while l <= r:\n        if a[l] <= k:\n            l += 1\n            ans += 1\n        elif a[r] <= k:\n            r -= 1\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:03:22.610975 REASON stop
2022-04-20 01:03:22.611718 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    l, r = 0, n-1\n    res = 0\n    while l <= r:\n        if a[l] <= k:\n            l += 1\n            res += 1\n        elif a[r] <= k:\n            r -= 1\n            res += 1\n        else:\n            break\n    print(res)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 01:03:22.611888 REASON stop
