["\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    dic = {}\n    for i in range(len(s)):\n        if s[i] in dic:\n            if dic[s[i]] != t[i]:\n                print(\"No\")\n                return\n        else:\n            dic[s[i]] = t[i]\n\n    print(\"Yes\")\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    if len(set(s)) != len(set(t)):\n        print('No')\n        return\n    if len(set(s)) > 26:\n        print('No')\n        return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n\n    s_list = list(s)\n    t_list = list(t)\n\n    s_list.sort()\n    t_list.sort()\n\n    for i in range(len(s)):\n        if s_list[i] != t_list[i]:\n            return False\n    return True\n\nprint(\"Yes\" if can_be_equal(s, t) else \"No\")", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = t[i]\n        elif d[s[i]] != t[i]:\n            print('No')\n            return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()", "\n\nfrom collections import Counter\n\ndef can_be_equal(s, t):\n    \"\"\"\n    :param s: string\n    :param t: string\n    :return: boolean\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    if s == t:\n        return True\n\n    s_counter = Counter(s)\n    t_counter = Counter(t)\n\n    if s_counter == t_counter:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    s = input()\n    t = input()\n\n    print('Yes' if can_be_equal(s, t) else 'No')", "\n\ndef main():\n    s = input()\n    t = input()\n    if s == t:\n        print(\"Yes\")\n    else:\n        s_dict = {}\n        t_dict = {}\n        for i in range(len(s)):\n            if s[i] in s_dict:\n                s_dict[s[i]] += 1\n            else:\n                s_dict[s[i]] = 1\n            if t[i] in t_dict:\n                t_dict[t[i]] += 1\n            else:\n                t_dict[t[i]] = 1\n        if s_dict == t_dict:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        print(\"No\")\n        return\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"]