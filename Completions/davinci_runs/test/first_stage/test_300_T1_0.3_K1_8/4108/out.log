2022-04-20 02:21:12.613727 """
You are given strings S and T consisting of lowercase English letters.
You can perform the following operation on S any number of times:
Operation: Choose two distinct lowercase English letters c_1 and c_2, then replace every occurrence of c_1 with c_2, and every occurrence of c_2 with c_1.
Determine if S and T can be made equal by performing the operation zero or more times.

-----Constraints-----
 - 1 \leq |S| \leq 2 \times 10^5
 - |S| = |T|
 - S and T consists of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S
T

-----Output-----
If S and T can be made equal, print Yes; otherwise, print No.

-----Sample Input-----
azzel
apple

-----Sample Output-----
Yes

azzel can be changed to apple, as follows:
 - Choose e as c_1 and l as c_2. azzel becomes azzle.
 - Choose z as c_1 and p as c_2. azzle becomes apple.
"""
2022-04-20 02:21:12.613735 --------------------------
2022-04-20 02:21:12.613839 using api key gabby
2022-04-20 02:21:24.357111 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = t[i]\n        elif d[s[i]] != t[i]:\n            print('No')\n            return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\ndef can_be_equal(s, t):\n    \"\"\"\n    :param s: string\n    :param t: string\n    :return: boolean\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    if s == t:\n        return True\n\n    s_counter = Counter(s)\n    t_counter = Counter(t)\n\n    if s_counter == t_counter:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    s = input()\n    t = input()\n\n    print('Yes' if can_be_equal(s, t) else 'No')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n\n    s_list = list(s)\n    t_list = list(t)\n\n    s_list.sort()\n    t_list.sort()\n\n    for i in range(len(s)):\n        if s_list[i] != t_list[i]:\n            return False\n    return True\n\nprint(\"Yes\" if can_be_equal(s, t) else \"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    t = input()\n    if s == t:\n        print(\"Yes\")\n    else:\n        s_dict = {}\n        t_dict = {}\n        for i in range(len(s)):\n            if s[i] in s_dict:\n                s_dict[s[i]] += 1\n            else:\n                s_dict[s[i]] = 1\n            if t[i] in t_dict:\n                t_dict[t[i]] += 1\n            else:\n                t_dict[t[i]] = 1\n        if s_dict == t_dict:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    dic = {}\n    for i in range(len(s)):\n        if s[i] in dic:\n            if dic[s[i]] != t[i]:\n                print(\"No\")\n                return\n        else:\n            dic[s[i]] = t[i]\n\n    print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    if len(set(s)) != len(set(t)):\n        print('No')\n        return\n    if len(set(s)) > 26:\n        print('No')\n        return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        print(\"No\")\n        return\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650421272,
  "id": "cmpl-4yuFsklnU08IHvTs6D1aKKPh34R9S",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 02:21:24.357461 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = t[i]\n        elif d[s[i]] != t[i]:\n            print('No')\n            return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.357501 REASON stop
2022-04-20 02:21:24.364418 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.364546 REASON stop
2022-04-20 02:21:24.434765 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\ndef can_be_equal(s, t):\n    \"\"\"\n    :param s: string\n    :param t: string\n    :return: boolean\n    \"\"\"\n    if len(s) != len(t):\n        return False\n    if s == t:\n        return True\n\n    s_counter = Counter(s)\n    t_counter = Counter(t)\n\n    if s_counter == t_counter:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    s = input()\n    t = input()\n\n    print('Yes' if can_be_equal(s, t) else 'No')"
}
2022-04-20 02:21:24.434948 REASON stop
2022-04-20 02:21:24.464146 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n\n    s_list = list(s)\n    t_list = list(t)\n\n    s_list.sort()\n    t_list.sort()\n\n    for i in range(len(s)):\n        if s_list[i] != t_list[i]:\n            return False\n    return True\n\nprint(\"Yes\" if can_be_equal(s, t) else \"No\")"
}
2022-04-20 02:21:24.464352 REASON stop
2022-04-20 02:21:24.493225 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    t = input()\n    if s == t:\n        print(\"Yes\")\n    else:\n        s_dict = {}\n        t_dict = {}\n        for i in range(len(s)):\n            if s[i] in s_dict:\n                s_dict[s[i]] += 1\n            else:\n                s_dict[s[i]] = 1\n            if t[i] in t_dict:\n                t_dict[t[i]] += 1\n            else:\n                t_dict[t[i]] = 1\n        if s_dict == t_dict:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.493369 REASON stop
2022-04-20 02:21:24.522929 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n\n    if len(s) != len(t):\n        print(\"No\")\n        return\n\n    dic = {}\n    for i in range(len(s)):\n        if s[i] in dic:\n            if dic[s[i]] != t[i]:\n                print(\"No\")\n                return\n        else:\n            dic[s[i]] = t[i]\n\n    print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.523085 REASON stop
2022-04-20 02:21:24.550547 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if len(s) != len(t):\n        print('No')\n        return\n    if len(set(s)) != len(set(t)):\n        print('No')\n        return\n    if len(set(s)) > 26:\n        print('No')\n        return\n    print('Yes')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.550700 REASON stop
2022-04-20 02:21:24.572874 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        print(\"No\")\n        return\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] not in s_dict:\n            s_dict[s[i]] = 1\n        else:\n            s_dict[s[i]] += 1\n        if t[i] not in t_dict:\n            t_dict[t[i]] = 1\n        else:\n            t_dict[t[i]] += 1\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-20 02:21:24.573107 REASON stop
