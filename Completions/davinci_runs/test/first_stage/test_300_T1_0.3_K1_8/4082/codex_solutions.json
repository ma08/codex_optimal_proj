["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_len = 0\n    for i in range(n):\n        cur_len = 1\n        for j in range(i, n - 1):\n            if a[j + 1] > a[j]:\n                cur_len += 1\n            else:\n                break\n        max_len = max(max_len, cur_len)\n    print(max_len)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 2:\n        print(2)\n        return\n    if a[0] < a[1]:\n        inc = True\n        inc_count = 2\n        dec_count = 0\n    else:\n        inc = False\n        inc_count = 0\n        dec_count = 2\n    for i in range(2, n):\n        if a[i-1] < a[i]:\n            if inc:\n                inc_count += 1\n            else:\n                inc = True\n                dec_count = 2\n        else:\n            if inc:\n                inc = False\n                inc_count = 2\n            else:\n                dec_count += 1\n    print(max(inc_count, dec_count))\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(2)\nelse:\n    max_len = 2\n    current_len = 2\n    for i in range(2, n):\n        if a[i] > a[i-1]:\n            current_len += 1\n        else:\n            max_len = max(max_len, current_len)\n            current_len = 2\n    max_len = max(max_len, current_len)\n    print(max_len)", "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(2)\nelse:\n    l = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            l[i] = l[i - 1] + 1\n    r = [1] * n\n    for i in range(n - 2, -1, -1):\n        if a[i] < a[i + 1]:\n            r[i] = r[i + 1] + 1\n    ans = 1\n    for i in range(n):\n        if i > 0 and i < n - 1:\n            if a[i - 1] < a[i + 1]:\n                ans = max(ans, l[i - 1] + r[i + 1])\n        ans = max(ans, l[i], r[i])\n    print(ans)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef longest_increasing_subarray(a):\n    longest = 0\n    current = 0\n    for i in range(1, len(a)):\n        if a[i] > a[i-1]:\n            current += 1\n        else:\n            longest = max(longest, current)\n            current = 0\n    return max(longest, current)\n\ndef longest_increasing_subarray_after_removing_one(a):\n    longest = 0\n    for i in range(len(a)):\n        longest = max(longest, longest_increasing_subarray(a[:i] + a[i+1:]))\n    return longest\n\nprint(longest_increasing_subarray_after_removing_one(a))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# if the array is already strictly increasing, the answer is n\nif all(a[i] < a[i+1] for i in range(n-1)):\n    print(n)\nelse:\n    # if the array is not strictly increasing, the answer is either n-1 or n\n    # we can check if the answer is n-1 by removing each element and checking if the remaining array is strictly increasing\n    # if it is, then the answer is n-1\n    # if it is not, then the answer is n\n    for i in range(n):\n        if all(a[j] < a[j+1] for j in range(n) if j != i):\n            print(n-1)\n            break\n    else:\n        print(n)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(2)\n    exit()\n\nmax_len = 2\ncur_len = 2\nfor i in range(2, n):\n    if a[i] > a[i - 1]:\n        cur_len += 1\n    else:\n        if a[i - 1] > a[i - 2]:\n            cur_len = 2\n        else:\n            cur_len = 1\n    max_len = max(max_len, cur_len)\n\nprint(max_len)"]