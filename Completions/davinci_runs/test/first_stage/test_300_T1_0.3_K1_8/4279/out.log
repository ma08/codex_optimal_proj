2022-04-20 03:53:56.774098 """
The only difference between the easy and the hard versions is the maximum value of $k$.

You are given an infinite sequence of form "112123123412345$\dots$" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from $1$ to $1$, the second one — from $1$ to $2$, the third one — from $1$ to $3$, $\dots$, the $i$-th block consists of all numbers from $1$ to $i$. 

So the first $56$ elements of the sequence are "11212312341234512345612345671234567812345678912345678910". Elements of the sequence are numbered from one. For example, the $1$-st element of the sequence is $1$, the $3$-rd element of the sequence is $2$, the $20$-th element of the sequence is $5$, the $38$-th element is $2$, the $56$-th element of the sequence is $0$.

Your task is to answer $q$ independent queries. In the $i$-th query you are given one integer $k_i$. Calculate the digit at the position $k_i$ of the sequence.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 500$) — the number of queries.

The $i$-th of the following $q$ lines contains one integer $k_i$ $(1 \le k_i \le 10^9)$ — the description of the corresponding query.


-----Output-----

Print $q$ lines. In the $i$-th line print one digit $x_i$ $(0 \le x_i \le 9)$ — the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k_i$ of the sequence.


-----Examples-----
Input
5
1
3
20
38
56

Output
1
2
5
2
0

Input
4
2132
506
999999999
1000000000

Output
8
2
9
8



-----Note-----

Answers on queries from the first example are described in the problem statement.
"""
2022-04-20 03:53:56.774128 --------------------------
2022-04-20 03:53:56.774287 using api key derek
2022-04-20 03:53:56.941606 in retry 8 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 03:54:01.945046 """
The only difference between the easy and the hard versions is the maximum value of $k$.

You are given an infinite sequence of form "112123123412345$\dots$" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from $1$ to $1$, the second one — from $1$ to $2$, the third one — from $1$ to $3$, $\dots$, the $i$-th block consists of all numbers from $1$ to $i$. 

So the first $56$ elements of the sequence are "11212312341234512345612345671234567812345678912345678910". Elements of the sequence are numbered from one. For example, the $1$-st element of the sequence is $1$, the $3$-rd element of the sequence is $2$, the $20$-th element of the sequence is $5$, the $38$-th element is $2$, the $56$-th element of the sequence is $0$.

Your task is to answer $q$ independent queries. In the $i$-th query you are given one integer $k_i$. Calculate the digit at the position $k_i$ of the sequence.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 500$) — the number of queries.

The $i$-th of the following $q$ lines contains one integer $k_i$ $(1 \le k_i \le 10^9)$ — the description of the corresponding query.


-----Output-----

Print $q$ lines. In the $i$-th line print one digit $x_i$ $(0 \le x_i \le 9)$ — the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k_i$ of the sequence.


-----Examples-----
Input
5
1
3
20
38
56

Output
1
2
5
2
0

Input
4
2132
506
999999999
1000000000

Output
8
2
9
8



-----Note-----

Answers on queries from the first example are described in the problem statement.
"""
2022-04-20 03:54:01.945096 --------------------------
2022-04-20 03:54:01.945256 using api key gabby
2022-04-20 03:54:01.983733 in retry 7 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-20 03:54:11.994185 """
The only difference between the easy and the hard versions is the maximum value of $k$.

You are given an infinite sequence of form "112123123412345$\dots$" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from $1$ to $1$, the second one — from $1$ to $2$, the third one — from $1$ to $3$, $\dots$, the $i$-th block consists of all numbers from $1$ to $i$. 

So the first $56$ elements of the sequence are "11212312341234512345612345671234567812345678912345678910". Elements of the sequence are numbered from one. For example, the $1$-st element of the sequence is $1$, the $3$-rd element of the sequence is $2$, the $20$-th element of the sequence is $5$, the $38$-th element is $2$, the $56$-th element of the sequence is $0$.

Your task is to answer $q$ independent queries. In the $i$-th query you are given one integer $k_i$. Calculate the digit at the position $k_i$ of the sequence.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 500$) — the number of queries.

The $i$-th of the following $q$ lines contains one integer $k_i$ $(1 \le k_i \le 10^9)$ — the description of the corresponding query.


-----Output-----

Print $q$ lines. In the $i$-th line print one digit $x_i$ $(0 \le x_i \le 9)$ — the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k_i$ of the sequence.


-----Examples-----
Input
5
1
3
20
38
56

Output
1
2
5
2
0

Input
4
2132
506
999999999
1000000000

Output
8
2
9
8



-----Note-----

Answers on queries from the first example are described in the problem statement.
"""
2022-04-20 03:54:11.994237 --------------------------
2022-04-20 03:54:11.994393 using api key gabby
2022-04-20 03:55:37.848797 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    n = 1\n    while True:\n        if k <= n*(n+1)//2:\n            break\n        n += 1\n    k -= (n-1)*n//2\n    return str(n)[k-1]\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# Solution\n\ndef digit(k):\n    \"\"\"\n    Returns the digit at the k-th position of the sequence.\n    \"\"\"\n    # Find the block of the sequence where k is located\n    block = 1\n    while k > block:\n        k -= block\n        block += 1\n    # Find the number where k is located\n    number = 1\n    while k > len(str(number)):\n        k -= len(str(number))\n        number += 1\n    # Find the digit of the number where k is located\n    return int(str(number)[k-1])\n\nq = int(input())\nfor i in range(q):\n    k = int(input())\n    print(digit(k))"
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for i in range(q):\n        k = int(sys.stdin.readline())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    if k == 4:\n        return 1\n    if k == 5:\n        return 2\n    if k == 6:\n        return 3\n    if k == 7:\n        return 1\n    if k == 8:\n        return 2\n    if k == 9:\n        return 3\n    if k == 10:\n        return 4\n    if k == 11:\n        return 1\n    if k == 12:\n        return 2\n    if k == 13:\n        return 3\n    if k == 14:\n        return 4\n    if k == 15:\n        return 5\n    if k == 16:\n        return 1\n    if k == 17:\n        return 2\n    if k == 18:\n        return 3\n    if k == 19:\n        return 4\n    if k == 20:\n        return 5\n    if k == 21:\n        return 6\n    if k == 22:\n        return 1\n    if k == 23:\n        return 2\n    if k == 24:\n        return 3\n    if k == 25:\n        return 4\n    if k == 26:\n        return 5\n    if k == 27:\n        return 6\n    if k == 28:\n        return 7\n    if k == 29:\n        return 1\n    if k == 30:\n        return 2\n    if k == 31:\n        return 3\n    if k == 32:\n        return 4\n    if k == 33:\n        return 5\n    if k == 34:\n        return 6\n    if k == 35:\n        return 7\n    if k == 36:\n        return 8\n    if k == 37:\n        return 1\n    if k == 38:\n        return 2\n    if k == 39:\n        return 3\n    if k == 40:\n        return 4\n    if k == 41:\n        return 5\n    if k == 42:\n        return 6\n    if k == 43:\n        return 7\n    if k == 44:\n        return 8\n    if k == 45:\n        return 9\n    if k == 46:\n        return 1\n    if k == 47:\n        return 2\n    if k == 48:\n        return 3\n    if k == 49:\n        return 4\n    if k == 50:\n        return 5\n    if k == 51:\n        return 6\n    if k == 52:\n        return 7\n    if k == 53:\n        return 8\n    if k == 54:\n        return 9\n    if k == 55:\n        return 10\n    if k == 56:\n        return 0\n    if k == 57:\n        return 1\n    if k == 58:\n        return 2\n    if k == 59:\n        return 3\n    if k == 60:\n        return 4\n    if k == 61:\n        return 5\n    if k == 62:\n        return 6\n    if k == 63:\n        return 7\n    if k == 64:\n        return 8\n    if k == 65:\n        return 9\n    if k == 66:\n        return 10\n    if k == 67:\n        return 1\n    if k == 68:\n        return 2\n    if k == 69:\n        return 3\n    if k == 70:\n        return 4\n    if k == 71:\n        return 5\n    if k == 72:\n        return 6\n    if k == 73:\n        return 7\n    if k == 74:\n        return 8\n    if k == 75:\n        return 9\n    if k == 76:\n        return 10\n    if k == 77:\n        return 11\n    if k == 78:\n        return 1\n    if k == 79:\n        return 2\n    if k == 80:\n        return 3\n    if k == 81:\n        return 4\n    if k == 82:\n        return 5\n    if k == 83:\n        return 6\n    if k == 84:\n        return 7\n    if k == 85:\n        return 8\n    if k == 86:\n        return 9\n    if k == 87:\n        return 10\n    if k == 88:\n        return 11\n    if k == 89:\n        return 12\n    if k == 90:\n        return 1\n    if k == 91:\n        return 2\n    if k == 92:\n        return 3\n    if k == 93:\n        return 4\n    if k == 94:\n        return 5\n    if k == 95:\n        return 6\n    if k == 96:\n        return 7\n    if k == 97:\n        return 8\n    if k == 98:\n        return 9\n    if k == 99:\n        return 10\n    if k == 100:\n        return 11\n    if k == 101:\n        return 12\n    if k == 102:\n        return 13\n    if k == 103:\n        return 1\n    if k == 104:\n        return 2\n    if k == 105:\n        return 3\n    if k == 106:\n        return 4\n    if k == 107:\n        return 5\n    if k == 108:\n        return 6\n    if k == 109:\n        return 7\n    if k == 110:\n        return 8\n    if k == 111:\n        return 9\n    if k == 112:\n        return 10\n    if k == 113:\n        return 11\n    if k == 114:\n        return 12\n    if k == 115:\n        return 13\n    if k == 116:\n        return 14\n    if k == 117:\n        return 1\n    if k == 118:\n        return 2\n    if k == 119:\n        return 3\n    if k == 120:\n        return 4\n    if k == 121:\n        return 5\n    if k == 122:\n        return 6\n    if k == 123:\n        return 7\n    if k == 124:\n        return 8\n    if k == 125:\n        return 9\n    if k == 126:\n        return 10\n    if k == 127:\n        return 11\n    if k == 128:\n        return 12\n    if k == 129:\n        return 13\n    if k == 130:\n        return 14\n    if k == 131:\n        return 15\n    if k == 132:\n        return 1\n    if k == 133:\n        return 2\n    if k == 134:\n        return 3\n    if k == 135:\n        return 4\n    if k == 136:\n        return 5\n    if k == 137:\n        return 6\n    if k == 138:\n        return 7\n    if k == 139:\n        return 8\n    if k == 140:\n        return 9\n    if k == 141:\n        return 10\n    if k == 142:\n        return 11\n    if k == 143:\n        return 12\n    if k == 144:\n        return 13\n    if k == 145:\n        return 14\n    if k == 146:\n        return 15\n    if k == 147:\n        return 16\n    if k == 148:\n        return 1\n    if k == 149:\n        return 2\n    if k == 150:\n        return 3\n    if k == 151:\n        return 4\n    if k == 152:\n        return 5\n    if k == 153:\n        return 6\n    if k == 154:\n        return 7\n    if k == 155:\n        return 8\n    if k == 156:\n        return 9\n    if k == 157:\n        return 10\n    if k == 158:\n        return 11\n    if k == 159:\n        return 12\n    if k == 160:\n        return 13\n    if k == 161:\n        return 14\n    if k == 162:\n        return 15\n    if k == 163:\n        return 16\n    if k == 164:\n        return 17\n    if k == 165:\n        return 1\n    if k == 166:\n        return 2\n    if k == 167:\n        return 3\n    if k == 168:\n        return 4\n    if k == 169:\n        return 5\n    if k == 170:\n        return 6\n    if k == 171:\n        return 7\n    if k == 172:\n        return 8\n    if k == 173:\n        return 9\n    if k == 174:\n        return 10\n    if k == 175:\n        return 11\n    if k == 176:\n        return 12\n    if k == 177:\n        return 13\n    if k == 178:\n        return 14\n    if k == 179:\n        return 15\n    if k == 180:\n        return 16\n    if k == 181:\n        return 17\n    if k == 182:\n        return 18\n    if k == 183:\n        return 1\n    if k == 184:\n        return 2\n    if k == 185:\n        return 3\n    if k == 186:\n        return 4\n    if k == 187:\n        return 5\n    if k == 188:\n        return 6\n    if k == 189:\n        return 7\n    if k == 190:\n        return 8\n    if k == 191:\n        return 9\n    if k == 192:\n        return 10\n    if k == 193:\n        return 11\n    if k == 194:\n        return 12\n    if k == 195:\n        return 13\n    if k == 196:\n        return 14\n    if k == 197:\n        return 15\n    if k == 198:\n        return 16\n    if k == 199:\n        return 17\n    if k == 200:\n        return 18\n    if k == 201:\n        return 19\n    if k == 202:\n        return 1\n    if k == 203:\n        return 2\n    if k == 204:\n        return 3\n    if k == 205:\n        return 4\n    if k == 206:\n        return 5\n    if k == 207:\n        return 6\n    if k == 208:\n        return 7\n    if k == 209:\n        return 8\n    if k == 210:\n        return 9\n    if k == 211:\n        return 10\n    if k == 212:\n        return 11\n    if k == 213:\n        return 12\n    if k == 214:\n        return 13\n    if k == 215:\n        return 14\n    if k == 216:\n        return 15\n    if k == 217:\n        return 16\n    if k == 218:\n        return 17\n    if k == 219:\n        return 18\n    if k == 220:\n        return 19\n    if k == 221:\n        return 20\n    if k == 222:\n        return 1\n    if k == 223:\n        return 2\n    if k == 224:\n        return 3\n    if k == 225:\n        return 4\n    if k == 226:\n        return 5\n    if k == 227:\n        return 6\n    if k == 228:\n        return 7\n    if k == 229:\n        return 8\n    if k == 230:\n        return 9\n    if k == 231:\n        return 10\n    if k == 232:\n        return 11\n    if k == 233:\n        return 12\n    if k == 234:\n        return 13\n    if k == 235:\n        return 14\n    if k == 236:\n        return 15\n    if k == 237:\n        return 16\n    if k == 238:\n        return 17\n    if k == 239:\n        return 18\n    if k == 240:\n        return 19\n    if k == 241:\n        return 20\n    if k == 242:\n        return 21\n    if k == 243:\n        return 1\n    if k == 244:\n        return 2\n    if k == 245:\n        return 3\n    if k == 246:\n        return 4\n    if k == 247:\n        return 5\n    if k == 248:\n        return 6\n    if k == 249:\n        return 7\n    if k == 250:\n        return 8\n    if k == 251:\n        return 9\n    if k == 252:\n        return 10\n    if k == 253:\n        return 11\n    if k == 254:\n        return 12\n    if k == 255:\n        return 13\n    if k == 256:\n        return 14\n    if k == 257:\n        return 15\n    if k == 258:\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom math import ceil, log10\n\ndef get_digit(k):\n    \"\"\"\n    Return the digit at position k in the sequence.\n    \"\"\"\n    # The first block is of length 1, the second is of length 2, etc.\n    # The length of the nth block is n.\n    # The length of the first n blocks is n(n+1)/2.\n    # Find the block that k is in.\n    # The length of the first n blocks is n(n+1)/2.\n    # Find the block that k is in.\n    # Find the number in the block that k is in.\n    # Find the digit in that number that k is in.\n    block = int(ceil((-1 + (1 + 8*k)**0.5)/2))\n    num_in_block = k - block*(block-1)/2\n    num = block - num_in_block + 1\n    digit = int(ceil(log10(num))) - 1\n    return int(str(num)[digit])\n\nq = int(raw_input())\nfor _ in range(q):\n    k = int(raw_input())\n    print get_digit(k)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    \"\"\"\n    Returns the digit at position k in the sequence\n    \"\"\"\n    if k == 1:\n        return 1\n    # Find the block that contains k\n    block_start = 1\n    block_end = 1\n    block_length = 1\n    while block_end < k:\n        block_start = block_end + 1\n        block_length += 1\n        block_end = block_start + block_length * block_length - 1\n    # Find the number that contains k\n    number_start = block_start\n    number_end = block_start\n    while number_end < k:\n        number_start = number_end + 1\n        number_end += len(str(block_length))\n    # Find the digit in the number\n    number = number_start + (k - number_start) // len(str(block_length))\n    digit_index = (k - number_start) % len(str(block_length))\n    return int(str(number)[digit_index])\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n\n    # get the block number\n    block_num = 1\n    block_start = 1\n    block_end = 1\n    while block_end < k:\n        block_num += 1\n        block_start = block_end + 1\n        block_end = block_start + block_num - 1\n\n    # get the digit\n    digit_pos = k - block_start\n    digit = block_num - digit_pos\n\n    return digit\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    # find the block that contains k\n    block = 0\n    while k > block:\n        block += 1\n        k -= block\n    # find the number in the block that contains k\n    number = block - k\n    # find the digit of the number\n    digit = number % 10\n    return digit\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nq = int(input())\n\nfor i in range(q):\n    k = int(input())\n    block = 1\n    while k > block:\n        k -= block\n        block += 1\n    print(str(block)[k-1])"
    }
  ],
  "created": 1650426852,
  "id": "cmpl-4yvhslUhJoDe1oJNoUwpZsdFTitFF",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-20 03:55:37.851233 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    n = 1\n    while True:\n        if k <= n*(n+1)//2:\n            break\n        n += 1\n    k -= (n-1)*n//2\n    return str(n)[k-1]\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:55:37.851348 REASON stop
2022-04-20 03:55:37.852319 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# Solution\n\ndef digit(k):\n    \"\"\"\n    Returns the digit at the k-th position of the sequence.\n    \"\"\"\n    # Find the block of the sequence where k is located\n    block = 1\n    while k > block:\n        k -= block\n        block += 1\n    # Find the number where k is located\n    number = 1\n    while k > len(str(number)):\n        k -= len(str(number))\n        number += 1\n    # Find the digit of the number where k is located\n    return int(str(number)[k-1])\n\nq = int(input())\nfor i in range(q):\n    k = int(input())\n    print(digit(k))"
}
2022-04-20 03:55:37.852413 REASON stop
2022-04-20 03:55:37.853188 2 {
  "finish_reason": "length",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for i in range(q):\n        k = int(sys.stdin.readline())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    if k == 4:\n        return 1\n    if k == 5:\n        return 2\n    if k == 6:\n        return 3\n    if k == 7:\n        return 1\n    if k == 8:\n        return 2\n    if k == 9:\n        return 3\n    if k == 10:\n        return 4\n    if k == 11:\n        return 1\n    if k == 12:\n        return 2\n    if k == 13:\n        return 3\n    if k == 14:\n        return 4\n    if k == 15:\n        return 5\n    if k == 16:\n        return 1\n    if k == 17:\n        return 2\n    if k == 18:\n        return 3\n    if k == 19:\n        return 4\n    if k == 20:\n        return 5\n    if k == 21:\n        return 6\n    if k == 22:\n        return 1\n    if k == 23:\n        return 2\n    if k == 24:\n        return 3\n    if k == 25:\n        return 4\n    if k == 26:\n        return 5\n    if k == 27:\n        return 6\n    if k == 28:\n        return 7\n    if k == 29:\n        return 1\n    if k == 30:\n        return 2\n    if k == 31:\n        return 3\n    if k == 32:\n        return 4\n    if k == 33:\n        return 5\n    if k == 34:\n        return 6\n    if k == 35:\n        return 7\n    if k == 36:\n        return 8\n    if k == 37:\n        return 1\n    if k == 38:\n        return 2\n    if k == 39:\n        return 3\n    if k == 40:\n        return 4\n    if k == 41:\n        return 5\n    if k == 42:\n        return 6\n    if k == 43:\n        return 7\n    if k == 44:\n        return 8\n    if k == 45:\n        return 9\n    if k == 46:\n        return 1\n    if k == 47:\n        return 2\n    if k == 48:\n        return 3\n    if k == 49:\n        return 4\n    if k == 50:\n        return 5\n    if k == 51:\n        return 6\n    if k == 52:\n        return 7\n    if k == 53:\n        return 8\n    if k == 54:\n        return 9\n    if k == 55:\n        return 10\n    if k == 56:\n        return 0\n    if k == 57:\n        return 1\n    if k == 58:\n        return 2\n    if k == 59:\n        return 3\n    if k == 60:\n        return 4\n    if k == 61:\n        return 5\n    if k == 62:\n        return 6\n    if k == 63:\n        return 7\n    if k == 64:\n        return 8\n    if k == 65:\n        return 9\n    if k == 66:\n        return 10\n    if k == 67:\n        return 1\n    if k == 68:\n        return 2\n    if k == 69:\n        return 3\n    if k == 70:\n        return 4\n    if k == 71:\n        return 5\n    if k == 72:\n        return 6\n    if k == 73:\n        return 7\n    if k == 74:\n        return 8\n    if k == 75:\n        return 9\n    if k == 76:\n        return 10\n    if k == 77:\n        return 11\n    if k == 78:\n        return 1\n    if k == 79:\n        return 2\n    if k == 80:\n        return 3\n    if k == 81:\n        return 4\n    if k == 82:\n        return 5\n    if k == 83:\n        return 6\n    if k == 84:\n        return 7\n    if k == 85:\n        return 8\n    if k == 86:\n        return 9\n    if k == 87:\n        return 10\n    if k == 88:\n        return 11\n    if k == 89:\n        return 12\n    if k == 90:\n        return 1\n    if k == 91:\n        return 2\n    if k == 92:\n        return 3\n    if k == 93:\n        return 4\n    if k == 94:\n        return 5\n    if k == 95:\n        return 6\n    if k == 96:\n        return 7\n    if k == 97:\n        return 8\n    if k == 98:\n        return 9\n    if k == 99:\n        return 10\n    if k == 100:\n        return 11\n    if k == 101:\n        return 12\n    if k == 102:\n        return 13\n    if k == 103:\n        return 1\n    if k == 104:\n        return 2\n    if k == 105:\n        return 3\n    if k == 106:\n        return 4\n    if k == 107:\n        return 5\n    if k == 108:\n        return 6\n    if k == 109:\n        return 7\n    if k == 110:\n        return 8\n    if k == 111:\n        return 9\n    if k == 112:\n        return 10\n    if k == 113:\n        return 11\n    if k == 114:\n        return 12\n    if k == 115:\n        return 13\n    if k == 116:\n        return 14\n    if k == 117:\n        return 1\n    if k == 118:\n        return 2\n    if k == 119:\n        return 3\n    if k == 120:\n        return 4\n    if k == 121:\n        return 5\n    if k == 122:\n        return 6\n    if k == 123:\n        return 7\n    if k == 124:\n        return 8\n    if k == 125:\n        return 9\n    if k == 126:\n        return 10\n    if k == 127:\n        return 11\n    if k == 128:\n        return 12\n    if k == 129:\n        return 13\n    if k == 130:\n        return 14\n    if k == 131:\n        return 15\n    if k == 132:\n        return 1\n    if k == 133:\n        return 2\n    if k == 134:\n        return 3\n    if k == 135:\n        return 4\n    if k == 136:\n        return 5\n    if k == 137:\n        return 6\n    if k == 138:\n        return 7\n    if k == 139:\n        return 8\n    if k == 140:\n        return 9\n    if k == 141:\n        return 10\n    if k == 142:\n        return 11\n    if k == 143:\n        return 12\n    if k == 144:\n        return 13\n    if k == 145:\n        return 14\n    if k == 146:\n        return 15\n    if k == 147:\n        return 16\n    if k == 148:\n        return 1\n    if k == 149:\n        return 2\n    if k == 150:\n        return 3\n    if k == 151:\n        return 4\n    if k == 152:\n        return 5\n    if k == 153:\n        return 6\n    if k == 154:\n        return 7\n    if k == 155:\n        return 8\n    if k == 156:\n        return 9\n    if k == 157:\n        return 10\n    if k == 158:\n        return 11\n    if k == 159:\n        return 12\n    if k == 160:\n        return 13\n    if k == 161:\n        return 14\n    if k == 162:\n        return 15\n    if k == 163:\n        return 16\n    if k == 164:\n        return 17\n    if k == 165:\n        return 1\n    if k == 166:\n        return 2\n    if k == 167:\n        return 3\n    if k == 168:\n        return 4\n    if k == 169:\n        return 5\n    if k == 170:\n        return 6\n    if k == 171:\n        return 7\n    if k == 172:\n        return 8\n    if k == 173:\n        return 9\n    if k == 174:\n        return 10\n    if k == 175:\n        return 11\n    if k == 176:\n        return 12\n    if k == 177:\n        return 13\n    if k == 178:\n        return 14\n    if k == 179:\n        return 15\n    if k == 180:\n        return 16\n    if k == 181:\n        return 17\n    if k == 182:\n        return 18\n    if k == 183:\n        return 1\n    if k == 184:\n        return 2\n    if k == 185:\n        return 3\n    if k == 186:\n        return 4\n    if k == 187:\n        return 5\n    if k == 188:\n        return 6\n    if k == 189:\n        return 7\n    if k == 190:\n        return 8\n    if k == 191:\n        return 9\n    if k == 192:\n        return 10\n    if k == 193:\n        return 11\n    if k == 194:\n        return 12\n    if k == 195:\n        return 13\n    if k == 196:\n        return 14\n    if k == 197:\n        return 15\n    if k == 198:\n        return 16\n    if k == 199:\n        return 17\n    if k == 200:\n        return 18\n    if k == 201:\n        return 19\n    if k == 202:\n        return 1\n    if k == 203:\n        return 2\n    if k == 204:\n        return 3\n    if k == 205:\n        return 4\n    if k == 206:\n        return 5\n    if k == 207:\n        return 6\n    if k == 208:\n        return 7\n    if k == 209:\n        return 8\n    if k == 210:\n        return 9\n    if k == 211:\n        return 10\n    if k == 212:\n        return 11\n    if k == 213:\n        return 12\n    if k == 214:\n        return 13\n    if k == 215:\n        return 14\n    if k == 216:\n        return 15\n    if k == 217:\n        return 16\n    if k == 218:\n        return 17\n    if k == 219:\n        return 18\n    if k == 220:\n        return 19\n    if k == 221:\n        return 20\n    if k == 222:\n        return 1\n    if k == 223:\n        return 2\n    if k == 224:\n        return 3\n    if k == 225:\n        return 4\n    if k == 226:\n        return 5\n    if k == 227:\n        return 6\n    if k == 228:\n        return 7\n    if k == 229:\n        return 8\n    if k == 230:\n        return 9\n    if k == 231:\n        return 10\n    if k == 232:\n        return 11\n    if k == 233:\n        return 12\n    if k == 234:\n        return 13\n    if k == 235:\n        return 14\n    if k == 236:\n        return 15\n    if k == 237:\n        return 16\n    if k == 238:\n        return 17\n    if k == 239:\n        return 18\n    if k == 240:\n        return 19\n    if k == 241:\n        return 20\n    if k == 242:\n        return 21\n    if k == 243:\n        return 1\n    if k == 244:\n        return 2\n    if k == 245:\n        return 3\n    if k == 246:\n        return 4\n    if k == 247:\n        return 5\n    if k == 248:\n        return 6\n    if k == 249:\n        return 7\n    if k == 250:\n        return 8\n    if k == 251:\n        return 9\n    if k == 252:\n        return 10\n    if k == 253:\n        return 11\n    if k == 254:\n        return 12\n    if k == 255:\n        return 13\n    if k == 256:\n        return 14\n    if k == 257:\n        return 15\n    if k == 258:\n"
}
2022-04-20 03:55:37.853354 REASON length
2022-04-20 03:55:37.853368 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom math import ceil, log10\n\ndef get_digit(k):\n    \"\"\"\n    Return the digit at position k in the sequence.\n    \"\"\"\n    # The first block is of length 1, the second is of length 2, etc.\n    # The length of the nth block is n.\n    # The length of the first n blocks is n(n+1)/2.\n    # Find the block that k is in.\n    # The length of the first n blocks is n(n+1)/2.\n    # Find the block that k is in.\n    # Find the number in the block that k is in.\n    # Find the digit in that number that k is in.\n    block = int(ceil((-1 + (1 + 8*k)**0.5)/2))\n    num_in_block = k - block*(block-1)/2\n    num = block - num_in_block + 1\n    digit = int(ceil(log10(num))) - 1\n    return int(str(num)[digit])\n\nq = int(raw_input())\nfor _ in range(q):\n    k = int(raw_input())\n    print get_digit(k)"
}
2022-04-20 03:55:37.853422 REASON stop
2022-04-20 03:55:37.869322 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    \"\"\"\n    Returns the digit at position k in the sequence\n    \"\"\"\n    if k == 1:\n        return 1\n    # Find the block that contains k\n    block_start = 1\n    block_end = 1\n    block_length = 1\n    while block_end < k:\n        block_start = block_end + 1\n        block_length += 1\n        block_end = block_start + block_length * block_length - 1\n    # Find the number that contains k\n    number_start = block_start\n    number_end = block_start\n    while number_end < k:\n        number_start = number_end + 1\n        number_end += len(str(block_length))\n    # Find the digit in the number\n    number = number_start + (k - number_start) // len(str(block_length))\n    digit_index = (k - number_start) % len(str(block_length))\n    return int(str(number)[digit_index])\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:55:37.869487 REASON stop
2022-04-20 03:55:37.878991 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n\n    # get the block number\n    block_num = 1\n    block_start = 1\n    block_end = 1\n    while block_end < k:\n        block_num += 1\n        block_start = block_end + 1\n        block_end = block_start + block_num - 1\n\n    # get the digit\n    digit_pos = k - block_start\n    digit = block_num - digit_pos\n\n    return digit\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:55:37.879141 REASON stop
2022-04-20 03:55:37.880089 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    # find the block that contains k\n    block = 0\n    while k > block:\n        block += 1\n        k -= block\n    # find the number in the block that contains k\n    number = block - k\n    # find the digit of the number\n    digit = number % 10\n    return digit\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-20 03:55:37.880316 REASON stop
2022-04-20 03:55:37.881099 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nq = int(input())\n\nfor i in range(q):\n    k = int(input())\n    block = 1\n    while k > block:\n        k -= block\n        block += 1\n    print(str(block)[k-1])"
}
2022-04-20 03:55:37.881183 REASON stop
