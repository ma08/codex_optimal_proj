2022-04-18 02:44:37.498806 """
A string $s$ of length $n$ can be encrypted by the following algorithm:  iterate over all divisors of $n$ in decreasing order (i.e. from $n$ to $1$),  for each divisor $d$, reverse the substring $s[1 \dots d]$ (i.e. the substring which starts at position $1$ and ends at position $d$). 

For example, the above algorithm applied to the string $s$="codeforces" leads to the following changes: "codeforces" $\to$ "secrofedoc" $\to$ "orcesfedoc" $\to$ "rocesfedoc" $\to$ "rocesfedoc" (obviously, the last reverse operation doesn't change the string because $d=1$).

You are given the encrypted string $t$. Your task is to decrypt this string, i.e., to find a string $s$ such that the above algorithm results in string $t$. It can be proven that this string $s$ always exists and is unique.


-----Input-----

The first line of input consists of a single integer $n$ ($1 \le n \le 100$) â€” the length of the string $t$. The second line of input consists of the string $t$. The length of $t$ is $n$, and it consists only of lowercase Latin letters.


-----Output-----

Print a string $s$ such that the above algorithm results in $t$.


-----Examples-----
Input
10
rocesfedoc

Output
codeforces

Input
16
plmaetwoxesisiht

Output
thisisexampletwo

Input
1
z

Output
z



-----Note-----

The first example is described in the problem statement.
"""
2022-04-18 02:44:37.498825 --------------------------
2022-04-18 02:45:03.828583 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt = input()\ns = \"\"\nfor i in range(n, 0, -1):\n    if n % i == 0:\n        s += t[i-1::i][::-1]\n        t = t[:i-1] + s[-i:] + t[i:]\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    t = input()\n    s = ['']*n\n    for i in range(n, 0, -1):\n        if n%i == 0:\n            for j in range(i):\n                s[j::i] = t[j::i][::-1]\n            t = ''.join(s)\n    print(s)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n\nn = int(input())\nt = input()\n\ns = [0]*n\n\nfor i in range(n-1, 0, -1):\n  x = n//i\n  y = n%i\n  if y==0:\n    for j in range(x):\n      s[i*j] = t[i*(x-1-j)]\n  else:\n    for j in range(x+1):\n      s[y+i*j] = t[y+i*(x-j)]\n\nprint(''.join(s))"
    }
  ],
  "created": 1650249877,
  "id": "cmpl-4yBfRsDxSq0uEvo1Pr6oo5bitDhIl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:45:03.828828 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt = input()\ns = \"\"\nfor i in range(n, 0, -1):\n    if n % i == 0:\n        s += t[i-1::i][::-1]\n        t = t[:i-1] + s[-i:] + t[i:]\nprint(s)"
}
2022-04-18 02:45:03.828885 REASON stop
2022-04-18 02:45:03.856482 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    t = input()\n    s = ['']*n\n    for i in range(n, 0, -1):\n        if n%i == 0:\n            for j in range(i):\n                s[j::i] = t[j::i][::-1]\n            t = ''.join(s)\n    print(s)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:45:03.856551 REASON stop
2022-04-18 02:45:03.857095 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n\nn = int(input())\nt = input()\n\ns = [0]*n\n\nfor i in range(n-1, 0, -1):\n  x = n//i\n  y = n%i\n  if y==0:\n    for j in range(x):\n      s[i*j] = t[i*(x-1-j)]\n  else:\n    for j in range(x+1):\n      s[y+i*j] = t[y+i*(x-j)]\n\nprint(''.join(s))"
}
2022-04-18 02:45:03.857164 REASON stop
