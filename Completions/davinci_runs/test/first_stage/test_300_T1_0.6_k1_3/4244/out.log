2022-04-18 03:46:28.488427 """
There are N people living on a number line.
The i-th person lives at coordinate X_i.
You are going to hold a meeting that all N people have to attend.
The meeting can be held at any integer coordinate. If you choose to hold the meeting at coordinate P, the i-th person will spend (X_i - P)^2 points of stamina to attend the meeting.
Find the minimum total points of stamina the N people have to spend.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 1 \leq X_i \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N
X_1 X_2 ... X_N

-----Output-----
Print the minimum total stamina the N people have to spend.

-----Sample Input-----
2
1 4

-----Sample Output-----
5

Assume the meeting is held at coordinate 2. In this case, the first person will spend (1 - 2)^2 points of stamina, and the second person will spend (4 - 2)^2 = 4 points of stamina, for a total of 5 points of stamina. This is the minimum total stamina that the 2 people have to spend.
Note that you can hold the meeting only at an integer coordinate.
"""
2022-04-18 03:46:28.488443 --------------------------
2022-04-18 03:46:53.362215 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))"
    }
  ],
  "created": 1650253588,
  "id": "cmpl-4yCdI09BOaYsx22LG7NrvaJxlMqsv",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 03:46:53.362424 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 03:46:53.362459 REASON stop
2022-04-18 03:46:53.380400 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))"
}
2022-04-18 03:46:53.380459 REASON stop
2022-04-18 03:46:53.381029 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\nimport sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))"
}
2022-04-18 03:46:53.381080 REASON stop
