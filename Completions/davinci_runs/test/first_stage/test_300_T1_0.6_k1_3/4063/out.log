2022-04-18 02:04:39.448457 """
Takahashi made N problems for competitive programming.
The problems are numbered 1 to N, and the difficulty of Problem i is represented as an integer d_i (the higher, the harder).
He is dividing the problems into two categories by choosing an integer K, as follows:
 - A problem with difficulty K or higher will be for ARCs.
 - A problem with difficulty lower than K will be for ABCs.
How many choices of the integer K make the number of problems for ARCs and the number of problems for ABCs the same?

-----Problem Statement-----
 - 2 \leq N \leq 10^5
 - N is an even number.
 - 1 \leq d_i \leq 10^5
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
d_1 d_2 ... d_N

-----Output-----
Print the number of choices of the integer K that make the number of problems for ARCs and the number of problems for ABCs the same.

-----Sample Input-----
6
9 1 4 4 6 7

-----Sample Output-----
2

If we choose K=5 or 6, Problem 1, 5, and 6 will be for ARCs, Problem 2, 3, and 4 will be for ABCs, and the objective is achieved.
Thus, the answer is 2.
"""
2022-04-18 02:04:39.448472 --------------------------
2022-04-18 02:05:12.429611 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    # Read the number of problems\n    N = int(input())\n\n    # Read the difficulty of each problem\n    problems = [int(x) for x in input().split()]\n\n    # Sort the problems in ascending order\n    problems.sort()\n\n    # Calculate the number of problems for each difficulty\n    problems_by_difficulty = {}\n    for problem in problems:\n        if problem not in problems_by_difficulty:\n            problems_by_difficulty[problem] = 0\n        problems_by_difficulty[problem] += 1\n\n    # Calculate the number of choices of the integer K\n    count = 0\n    for difficulty in problems_by_difficulty:\n        if difficulty in problems_by_difficulty:\n            count += problems_by_difficulty[difficulty] * problems_by_difficulty[N//2-difficulty]\n\n    # Print the answer\n    print(count)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nd = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# print(N)\n# print(d)\n\ncount = 0\nfor i in range(1, N):\n    if sum(d[:i]) == sum(d[i:]):\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef solve(N, d):\n    d.sort()\n    d_median = d[N // 2]\n\n    l, r = 0, 0\n    for i in range(N // 2):\n        l += d[i]\n    for i in range(N // 2, N):\n        r += d[i]\n\n    K_min = d[0]\n    K_max = d[-1]\n\n    if l == r:\n        return K_max - K_min + 1\n\n    return 0\n\n\ndef main():\n    N = int(input())\n    d = list(map(int, input().split()))\n\n    print(solve(N, d))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650247479,
  "id": "cmpl-4yB2lW98yU4SNOSv3vtZ9k4xKNm8l",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:05:12.429879 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    # Read the number of problems\n    N = int(input())\n\n    # Read the difficulty of each problem\n    problems = [int(x) for x in input().split()]\n\n    # Sort the problems in ascending order\n    problems.sort()\n\n    # Calculate the number of problems for each difficulty\n    problems_by_difficulty = {}\n    for problem in problems:\n        if problem not in problems_by_difficulty:\n            problems_by_difficulty[problem] = 0\n        problems_by_difficulty[problem] += 1\n\n    # Calculate the number of choices of the integer K\n    count = 0\n    for difficulty in problems_by_difficulty:\n        if difficulty in problems_by_difficulty:\n            count += problems_by_difficulty[difficulty] * problems_by_difficulty[N//2-difficulty]\n\n    # Print the answer\n    print(count)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:05:12.429920 REASON stop
2022-04-18 02:05:12.755423 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nd = list(map(int, sys.stdin.readline().rstrip().split()))\n\n# print(N)\n# print(d)\n\ncount = 0\nfor i in range(1, N):\n    if sum(d[:i]) == sum(d[i:]):\n        count += 1\n\nprint(count)"
}
2022-04-18 02:05:12.755546 REASON stop
2022-04-18 02:05:12.839272 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef solve(N, d):\n    d.sort()\n    d_median = d[N // 2]\n\n    l, r = 0, 0\n    for i in range(N // 2):\n        l += d[i]\n    for i in range(N // 2, N):\n        r += d[i]\n\n    K_min = d[0]\n    K_max = d[-1]\n\n    if l == r:\n        return K_max - K_min + 1\n\n    return 0\n\n\ndef main():\n    N = int(input())\n    d = list(map(int, input().split()))\n\n    print(solve(N, d))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:05:12.839419 REASON stop
