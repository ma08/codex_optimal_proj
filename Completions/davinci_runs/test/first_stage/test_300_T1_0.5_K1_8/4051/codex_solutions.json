["\n\ndef main():\n    nums = [int(x) for x in input().split()]\n    stacks = [Stack() for x in range(len(nums))]\n    for i in range(len(nums)):\n        stacks[i].push(nums[i])\n    for i in range(len(nums)):\n        if stacks[i].size() >= 2:\n            if stacks[i].top() > stacks[i+1].top() + 1:\n                print(\"NO\")\n                return\n            elif stacks[i].top() == stacks[i+1].top() + 1:\n                stacks[i+1].push(stacks[i].pop())\n    print(\"YES\")\n\nclass Stack:\n    def __init__(self):\n        self.items = []\n    def isEmpty(self):\n        return self.items == []\n    def push(self, item):\n        self.items.append(item)\n    def pop(self):\n        return self.items.pop()\n    def peek(self):\n        return self.items[len(self.items)-1]\n    def size(self):\n        return len(self.items)\n\nmain()", "\n\n# --- Solution 1 ---\n\ndef ravioli_sort(n,a):\n\t# If there is only one element, it is already sorted\n\tif n == 1:\n\t\treturn \"YES\"\n\t# If there are two elements, check if they are sorted\n\tif n == 2:\n\t\tif a[0] > a[1]:\n\t\t\treturn \"NO\"\n\t\telse:\n\t\t\treturn \"YES\"\n\t# If there are more than two elements, check if they are sorted\n\tif n > 2:\n\t\tfor i in range(n-1):\n\t\t\tif a[i] > a[i+1]:\n\t\t\t\treturn \"NO\"\n\t\treturn \"YES\"\n\n# Get number of elements\nn = int(input())\n\n# Get elements\na = [int(i) for i in input().split()]\n\n# Check if array is sorted\nprint(ravioli_sort(n,a))", "\n\ninput_list = input().split(' ')\ninput_list = [int(i) for i in input_list]\n\nfor i in range(len(input_list)):\n    if i == len(input_list) - 1:\n        break\n    if input_list[i] + 2 <= input_list[i+1]:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")", "\n\n#Solution\n\nn = int(input())\na = list(map(int,input().split()))\n\nfor i in range(n):\n    for j in range(i+1,n):\n        if abs(a[i]-a[j])>=2:\n            print(\"NO\")\n            exit()\nprint(\"YES\")", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int,input().split()))\n    for i in range(n):\n        if arr[i] > 1:\n            if i == 0:\n                if arr[i+1] == arr[i]-1:\n                    arr[i+1] += 1\n                    arr[i] -= 1\n                    break\n            elif i == n-1:\n                if arr[i-1] == arr[i]-1:\n                    arr[i-1] += 1\n                    arr[i] -= 1\n                    break\n            else:\n                if arr[i-1] == arr[i]-1:\n                    arr[i-1] += 1\n                    arr[i] -= 1\n                    break\n                elif arr[i+1] == arr[i]-1:\n                    arr[i+1] += 1\n                    arr[i] -= 1\n                    break\n    if arr == sorted(arr):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\n#input\nn = int(input())\nravioli = input().split()\nravioli = [int(x) for x in ravioli]\n\n#calculate\n\n#output\nprint(\"YES\")", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # If the array is already sorted, it can be sorted correctly.\n    if sorted(a) == a:\n        print('YES')\n        return\n\n    # If there is a number that is 2 or more greater than the number before it,\n    # the algorithm will not sort correctly.\n    for i in range(1, n):\n        if a[i] >= a[i-1] + 2:\n            print('NO')\n            return\n\n    print('YES')\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    for i in range(len(arr)-1):\n        if abs(arr[i]-arr[i+1]) > 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n\nmain()"]