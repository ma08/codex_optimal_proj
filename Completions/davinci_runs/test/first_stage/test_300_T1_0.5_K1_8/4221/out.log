2022-04-19 23:10:00.868904 """
In the Kingdom of AtCoder, people use a language called Taknese, which uses lowercase English letters.
In Taknese, the plural form of a noun is spelled based on the following rules:
 - If a noun's singular form does not end with s, append s to the end of the singular form.
 - If a noun's singular form ends with s, append es to the end of the singular form.
You are given the singular form S of a Taknese noun. Output its plural form.

-----Constraints-----
 - S is a string of length 1 between 1000, inclusive.
 - S contains only lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the plural form of the given Taknese word.

-----Sample Input-----
apple

-----Sample Output-----
apples

apple ends with e, so its plural form is apples.
"""
2022-04-19 23:10:00.868922 --------------------------
2022-04-19 23:10:00.869023 using api key derek
2022-04-19 23:10:09.909455 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Get input\nnoun = input()\n\n# Check if noun ends with s\nif noun[-1] == 's':\n    # If it does, add es\n    print(noun + 'es')\nelse:\n    # Otherwise, add s\n    print(noun + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Get the input string\ns = input()\n\n# If it ends with 's' then print out the plural form, else just add 's' to the end\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')\n\n\"\"\"\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')\n\"\"\""
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n#import sys\n#s = sys.stdin.readline()\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nS = input()\n\nif S[-1] == \"s\":\n    print(S + \"es\")\nelse:\n    print(S + \"s\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[-1] == \"s\":\n    print(s + \"es\")\nelse:\n    print(s + \"s\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[-1] == \"s\":\n    print(s + \"es\")\nelse:\n    print(s + \"s\")"
    }
  ],
  "created": 1650409801,
  "id": "cmpl-4yrGrEFABVAJMUeLJkuLPTQbBtSsV",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:10:09.909774 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Get input\nnoun = input()\n\n# Check if noun ends with s\nif noun[-1] == 's':\n    # If it does, add es\n    print(noun + 'es')\nelse:\n    # Otherwise, add s\n    print(noun + 's')"
}
2022-04-19 23:10:09.909810 REASON stop
2022-04-19 23:10:09.910419 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-19 23:10:09.910504 REASON stop
2022-04-19 23:10:09.910930 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Get the input string\ns = input()\n\n# If it ends with 's' then print out the plural form, else just add 's' to the end\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-19 23:10:09.910986 REASON stop
2022-04-19 23:10:09.912196 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')\n\n\"\"\"\ns = input()\n\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')\n\"\"\""
}
2022-04-19 23:10:09.912261 REASON stop
2022-04-19 23:10:09.926927 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n#import sys\n#s = sys.stdin.readline()\ns = input()\nif s[-1] == 's':\n    print(s + 'es')\nelse:\n    print(s + 's')"
}
2022-04-19 23:10:09.927044 REASON stop
2022-04-19 23:10:09.927931 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nS = input()\n\nif S[-1] == \"s\":\n    print(S + \"es\")\nelse:\n    print(S + \"s\")"
}
2022-04-19 23:10:09.928006 REASON stop
2022-04-19 23:10:09.928934 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[-1] == \"s\":\n    print(s + \"es\")\nelse:\n    print(s + \"s\")"
}
2022-04-19 23:10:09.929012 REASON stop
2022-04-19 23:10:09.929651 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[-1] == \"s\":\n    print(s + \"es\")\nelse:\n    print(s + \"s\")"
}
2022-04-19 23:10:09.929827 REASON stop
