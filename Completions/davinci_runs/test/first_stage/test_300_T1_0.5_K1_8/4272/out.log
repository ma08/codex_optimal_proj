2022-04-19 23:31:10.007295 """
We have a string S of length N consisting of uppercase English letters.
How many times does ABC occur in S as contiguous subsequences (see Sample Inputs and Outputs)?

-----Constraints-----
 - 3 \leq N \leq 50
 - S consists of uppercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print number of occurrences of ABC in S as contiguous subsequences.

-----Sample Input-----
10
ZABCDBABCQ

-----Sample Output-----
2

Two contiguous subsequences of S are equal to ABC: the 2-nd through 4-th characters, and the 7-th through 9-th characters.
"""
2022-04-19 23:31:10.007306 --------------------------
2022-04-19 23:31:10.007424 using api key gabby
2022-04-19 23:31:22.766143 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(0, N - 2):\n    if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == \"A\":\n        for j in range(i + 1, n):\n            if s[j] == \"B\":\n                for k in range(j + 1, n):\n                    if s[k] == \"C\":\n                        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N-2):\n    if S[i] == \"A\" and S[i+1] == \"B\" and S[i+2] == \"C\":\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n-2):\n    if s[i:i+3] == \"ABC\":\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# input\nN = int(input())\nS = input()\n\n# initialization\ncount = 0\n\n# count\nfor i in range(N):\n    if S[i:i+3] == \"ABC\":\n        count += 1\n\n# output\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n#S = input().strip()\nS = \"ZABCDBABCQ\"\n\ncount = 0\nfor i in range(len(S)-2):\n    if S[i] == \"A\" and S[i+1] == \"B\" and S[i+2] == \"C\":\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    # print(s)\n    count = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N):\n    if S[i] == 'A':\n        for j in range(i + 1, N):\n            if S[j] == 'B':\n                for k in range(j + 1, N):\n                    if S[k] == 'C':\n                        count += 1\n\nprint(count)"
    }
  ],
  "created": 1650411070,
  "id": "cmpl-4yrbKqcfFDtmhoZ2frJScf3C8YE6u",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:31:22.766474 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(0, N - 2):\n    if S[i] == 'A' and S[i+1] == 'B' and S[i+2] == 'C':\n        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.766513 REASON stop
2022-04-19 23:31:22.767210 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == \"A\":\n        for j in range(i + 1, n):\n            if s[j] == \"B\":\n                for k in range(j + 1, n):\n                    if s[k] == \"C\":\n                        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.767278 REASON stop
2022-04-19 23:31:22.767700 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N-2):\n    if S[i] == \"A\" and S[i+1] == \"B\" and S[i+2] == \"C\":\n        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.767749 REASON stop
2022-04-19 23:31:22.793804 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n-2):\n    if s[i:i+3] == \"ABC\":\n        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.793960 REASON stop
2022-04-19 23:31:22.803693 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# input\nN = int(input())\nS = input()\n\n# initialization\ncount = 0\n\n# count\nfor i in range(N):\n    if S[i:i+3] == \"ABC\":\n        count += 1\n\n# output\nprint(count)"
}
2022-04-19 23:31:22.803816 REASON stop
2022-04-19 23:31:22.804542 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n#S = input().strip()\nS = \"ZABCDBABCQ\"\n\ncount = 0\nfor i in range(len(S)-2):\n    if S[i] == \"A\" and S[i+1] == \"B\" and S[i+2] == \"C\":\n        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.804617 REASON stop
2022-04-19 23:31:22.809648 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    # print(s)\n    count = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:31:22.809746 REASON stop
2022-04-19 23:31:22.810724 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N):\n    if S[i] == 'A':\n        for j in range(i + 1, N):\n            if S[j] == 'B':\n                for k in range(j + 1, N):\n                    if S[k] == 'C':\n                        count += 1\n\nprint(count)"
}
2022-04-19 23:31:22.810929 REASON stop
