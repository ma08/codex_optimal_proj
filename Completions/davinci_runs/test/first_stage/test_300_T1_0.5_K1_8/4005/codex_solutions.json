["", "\n\ndef check_intersection(rect1, rect2):\n    if rect1[0] > rect2[2] or rect1[2] < rect2[0]:\n        return False\n    if rect1[1] > rect2[3] or rect1[3] < rect2[1]:\n        return False\n    return True\n\ndef main():\n    rect1 = [int(i) for i in input().split()]\n    rect2 = [int(i) for i in input().split()]\n    rect3 = [int(i) for i in input().split()]\n    if check_intersection(rect1, rect2) or check_intersection(rect1, rect3) or check_intersection(rect2, rect3):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    x1, y1, x2, y2 = [int(x) for x in input().split()]\n    x3, y3, x4, y4 = [int(x) for x in input().split()]\n    x5, y5, x6, y6 = [int(x) for x in input().split()]\n\n    if x1 < x3 and x2 > x4 and y1 < y3 and y2 > y4 and x1 < x5 and x2 > x6 and y1 < y5 and y2 > y6:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"\n    1. read input\n    2. check if white sheet is fully covered\n    3. check if any point of white sheet lies outside of black sheets\n    \"\"\"\n    white_sheet = [int(x) for x in input().split()]\n    black_sheet_1 = [int(x) for x in input().split()]\n    black_sheet_2 = [int(x) for x in input().split()]\n\n    def check_if_fully_covered(white_sheet, black_sheet):\n        if white_sheet[0] >= black_sheet[0] and \\\n           white_sheet[1] >= black_sheet[1] and \\\n           white_sheet[2] <= black_sheet[2] and \\\n           white_sheet[3] <= black_sheet[3]:\n            return True\n        else:\n            return False\n\n    def check_if_partially_covered(white_sheet, black_sheet):\n        if white_sheet[0] < black_sheet[0] and \\\n           white_sheet[1] < black_sheet[1] and \\\n           white_sheet[2] > black_sheet[2] and \\\n           white_sheet[3] > black_sheet[3]:\n            return True\n        else:\n            return False\n\n    if check_if_fully_covered(white_sheet, black_sheet_1) and \\\n       check_if_fully_covered(white_sheet, black_sheet_2):\n        print(\"NO\")\n        return\n    elif check_if_partially_covered(white_sheet, black_sheet_1) or \\\n         check_if_partially_covered(white_sheet, black_sheet_2):\n        print(\"YES\")\n        return\n    else:\n        print(\"NO\")\n        return\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if x1 >= x4 or x2 <= x3 or y1 >= y4 or y2 <= y3 or x1 >= x6 or x2 <= x5 or y1 >= y6 or y2 <= y5:\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\ndef solve():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x1 >= x4 or x2 <= x3) and (y1 >= y4 or y2 <= y3):\n        if (x1 >= x6 or x2 <= x5) and (y1 >= y6 or y2 <= y5):\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('YES')\n\nsolve()", "\n\ndef main():\n    white_x1, white_y1, white_x2, white_y2 = map(int, input().split())\n    black1_x1, black1_y1, black1_x2, black1_y2 = map(int, input().split())\n    black2_x1, black2_y1, black2_x2, black2_y2 = map(int, input().split())\n    # print(white_x1, white_y1, white_x2, white_y2)\n    # print(black1_x1, black1_y1, black1_x2, black1_y2)\n    # print(black2_x1, black2_y1, black2_x2, black2_y2)\n\n    if white_x1 >= black1_x2 or white_x2 <= black1_x1:\n        if white_y1 >= black1_y2 or white_y2 <= black1_y1:\n            if white_x1 >= black2_x2 or white_x2 <= black2_x1:\n                if white_y1 >= black2_y2 or white_y2 <= black2_y1:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()"]