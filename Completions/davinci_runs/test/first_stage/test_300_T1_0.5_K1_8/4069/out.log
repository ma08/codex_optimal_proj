2022-04-19 21:36:22.293695 """
Takahashi, who lives on the number line, is now at coordinate X. He will make exactly K moves of distance D in the positive or negative direction.
More specifically, in one move, he can go from coordinate x to x + D or x - D.
He wants to make K moves so that the absolute value of the coordinate of the destination will be the smallest possible.
Find the minimum possible absolute value of the coordinate of the destination.

-----Constraints-----
 - -10^{15} \leq X \leq 10^{15}
 - 1 \leq K \leq 10^{15}
 - 1Â \leq D \leq 10^{15}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
X K D

-----Output-----
Print the minimum possible absolute value of the coordinate of the destination.

-----Sample Input-----
6 2 4

-----Sample Output-----
2

Takahashi is now at coordinate 6. It is optimal to make the following moves:
 - Move from coordinate 6 to (6 - 4 =) 2.
 - Move from coordinate 2 to (2 - 4 =) -2.
Here, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.
"""
2022-04-19 21:36:22.293706 --------------------------
2022-04-19 21:36:22.293812 using api key gabby
2022-04-19 21:36:48.772795 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef solve(x, k, d):\n    return max(0, abs(x) - k * d)\n\ndef main():\n    x, k, d = [int(x) for x in input().split()]\n    print(solve(x, k, d))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport math\n\nx, k, d = map(int, input().split())\n\nif k * d < abs(x):\n    print(abs(x) - k * d)\nelse:\n    if math.ceil(abs(x) / d) % 2 == k % 2:\n        print(abs(x) % d)\n    else:\n        print(d - (abs(x) % d))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    if k <= abs(x) // d:\n        print(abs(x) - k * d)\n    else:\n        print(abs(x - (k - abs(x) // d) * d * math.copysign(1, x)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n#import numpy as np\n\n#X, K, D = map(int, input().split())\n#X = int(input())\n#K = int(input())\n#D = int(input())\n\nX = 6\nK = 2\nD = 4\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\nif (X >= 0):\n    if (K*D <= X):\n        print(X-K*D)\n    elif (K*D > X):\n        print(abs(X-K*D)%D)\nelif (X < 0):\n    if (K*D <= abs(X)):\n        print(abs(X+K*D))\n    elif (K*D > abs(X)):\n        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# x, k, d = map(int, input().split())\nx, k, d = 6, 2, 4\n\n# 1. x >= 0\nif x >= 0:\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)\n# 2. x < 0\nelse:\n    x = -x\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline()\n\ninput = input.split(\" \")\n\nX = int(input[0])\nK = int(input[1])\nD = int(input[2])\n\nif X < 0:\n    X = -X\n\nif K <= X / D:\n    print(X - K * D)\nelse:\n    K -= X / D\n    K %= 2\n    if K == 0:\n        print(X % D)\n    else:\n        print(D - X % D)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    x = abs(x)\n    if x//d <= k:\n        print(x - (x//d)*d)\n    else:\n        k -= x//d\n        if k%2 == 0:\n            print((x - (x//d)*d) - k*d)\n        else:\n            print((x - (x//d)*d) + (k-1)*d)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nx, k, d = map(int, input().split())\n\nif abs(x) >= k * d:\n    print(abs(x) - k * d)\nelse:\n    k -= abs(x) // d\n    x = abs(x) % d\n    if k % 2 == 0:\n        print(x)\n    else:\n        print(abs(x - d))"
    }
  ],
  "created": 1650404182,
  "id": "cmpl-4ypoE4q6OkdhDrRvt8cy6nB8NiMML",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:36:48.773111 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef solve(x, k, d):\n    return max(0, abs(x) - k * d)\n\ndef main():\n    x, k, d = [int(x) for x in input().split()]\n    print(solve(x, k, d))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:36:48.773147 REASON stop
2022-04-19 21:36:48.773792 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport math\n\nx, k, d = map(int, input().split())\n\nif k * d < abs(x):\n    print(abs(x) - k * d)\nelse:\n    if math.ceil(abs(x) / d) % 2 == k % 2:\n        print(abs(x) % d)\n    else:\n        print(d - (abs(x) % d))"
}
2022-04-19 21:36:48.773875 REASON stop
2022-04-19 21:36:48.774321 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    if k <= abs(x) // d:\n        print(abs(x) - k * d)\n    else:\n        print(abs(x - (k - abs(x) // d) * d * math.copysign(1, x)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:36:48.774382 REASON stop
2022-04-19 21:36:48.796238 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n#import numpy as np\n\n#X, K, D = map(int, input().split())\n#X = int(input())\n#K = int(input())\n#D = int(input())\n\nX = 6\nK = 2\nD = 4\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\nif (X >= 0):\n    if (K*D <= X):\n        print(X-K*D)\n    elif (K*D > X):\n        print(abs(X-K*D)%D)\nelif (X < 0):\n    if (K*D <= abs(X)):\n        print(abs(X+K*D))\n    elif (K*D > abs(X)):\n        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)"
}
2022-04-19 21:36:48.796405 REASON stop
2022-04-19 21:36:48.817275 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# x, k, d = map(int, input().split())\nx, k, d = 6, 2, 4\n\n# 1. x >= 0\nif x >= 0:\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)\n# 2. x < 0\nelse:\n    x = -x\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)"
}
2022-04-19 21:36:48.817440 REASON stop
2022-04-19 21:36:48.818534 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline()\n\ninput = input.split(\" \")\n\nX = int(input[0])\nK = int(input[1])\nD = int(input[2])\n\nif X < 0:\n    X = -X\n\nif K <= X / D:\n    print(X - K * D)\nelse:\n    K -= X / D\n    K %= 2\n    if K == 0:\n        print(X % D)\n    else:\n        print(D - X % D)"
}
2022-04-19 21:36:48.818621 REASON stop
2022-04-19 21:36:48.825027 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    x = abs(x)\n    if x//d <= k:\n        print(x - (x//d)*d)\n    else:\n        k -= x//d\n        if k%2 == 0:\n            print((x - (x//d)*d) - k*d)\n        else:\n            print((x - (x//d)*d) + (k-1)*d)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:36:48.825137 REASON stop
2022-04-19 21:36:48.826448 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nx, k, d = map(int, input().split())\n\nif abs(x) >= k * d:\n    print(abs(x) - k * d)\nelse:\n    k -= abs(x) // d\n    x = abs(x) % d\n    if k % 2 == 0:\n        print(x)\n    else:\n        print(abs(x - d))"
}
2022-04-19 21:36:48.826633 REASON stop
