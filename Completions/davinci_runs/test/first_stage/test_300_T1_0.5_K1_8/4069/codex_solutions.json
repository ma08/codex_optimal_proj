["\n\ndef solve(x, k, d):\n    return max(0, abs(x) - k * d)\n\ndef main():\n    x, k, d = [int(x) for x in input().split()]\n    print(solve(x, k, d))\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    x = abs(x)\n    if x//d <= k:\n        print(x - (x//d)*d)\n    else:\n        k -= x//d\n        if k%2 == 0:\n            print((x - (x//d)*d) - k*d)\n        else:\n            print((x - (x//d)*d) + (k-1)*d)\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef main():\n    x, k, d = map(int, input().split())\n    if k <= abs(x) // d:\n        print(abs(x) - k * d)\n    else:\n        print(abs(x - (k - abs(x) // d) * d * math.copysign(1, x)))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ninput = sys.stdin.readline()\n\ninput = input.split(\" \")\n\nX = int(input[0])\nK = int(input[1])\nD = int(input[2])\n\nif X < 0:\n    X = -X\n\nif K <= X / D:\n    print(X - K * D)\nelse:\n    K -= X / D\n    K %= 2\n    if K == 0:\n        print(X % D)\n    else:\n        print(D - X % D)", "\nimport math\n\nx, k, d = map(int, input().split())\n\nif k * d < abs(x):\n    print(abs(x) - k * d)\nelse:\n    if math.ceil(abs(x) / d) % 2 == k % 2:\n        print(abs(x) % d)\n    else:\n        print(d - (abs(x) % d))", "\n\nx, k, d = map(int, input().split())\n\nif abs(x) >= k * d:\n    print(abs(x) - k * d)\nelse:\n    k -= abs(x) // d\n    x = abs(x) % d\n    if k % 2 == 0:\n        print(x)\n    else:\n        print(abs(x - d))", "\n\n# x, k, d = map(int, input().split())\nx, k, d = 6, 2, 4\n\n# 1. x >= 0\nif x >= 0:\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)\n# 2. x < 0\nelse:\n    x = -x\n    if x >= k * d:\n        print(x - k * d)\n    else:\n        k -= x // d\n        x %= d\n        if k % 2 == 0:\n            print(x)\n        else:\n            print(d - x)", "\n\n#import numpy as np\n\n#X, K, D = map(int, input().split())\n#X = int(input())\n#K = int(input())\n#D = int(input())\n\nX = 6\nK = 2\nD = 4\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)\n\nif (X >= 0):\n    if (K*D <= X):\n        print(X-K*D)\n    elif (K*D > X):\n        print(abs(X-K*D)%D)\nelif (X < 0):\n    if (K*D <= abs(X)):\n        print(abs(X+K*D))\n    elif (K*D > abs(X)):\n        print(abs(X+K*D)%D)\n\n#if (X >= 0):\n#    if (K*D <= X):\n#        print(X-K*D)\n#    elif (K*D > X):\n#        print(abs(X-K*D)%D)\n#elif (X < 0):\n#    if (K*D <= abs(X)):\n#        print(abs(X+K*D))\n#    elif (K*D > abs(X)):\n#        print(abs(X+K*D)%D)"]