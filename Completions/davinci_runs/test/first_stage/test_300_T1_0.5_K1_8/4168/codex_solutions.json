["\n\n# N = -9\nN = int(input())\n\nif N == 0:\n    print(0)\nelse:\n    ans = \"\"\n    while N != 0:\n        if N % 2 == 0:\n            ans += \"0\"\n            N //= -2\n        else:\n            ans += \"1\"\n            N = (N - 1) // -2\n    print(ans[::-1])", "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\n# The base -2 representation of 0 is 0, so just print 0.\nif n == 0:\n    print(\"0\")\n\n# The base -2 representation of a positive number is the same as the base 2 representation of the negative of that number.\nelif n > 0:\n    b = bin(n * -1)[2:]\n    print(b)\n\n# The base -2 representation of a negative number is the same as the base 2 representation of the negative of that number, with the first digit changed from 0 to 1 and vice versa.\nelse:\n    b = bin(n)[3:]\n    print(\"1\" + b)", "\n\n\ndef main():\n    n = int(input())\n    ans = \"\"\n    if n == 0:\n        ans = \"0\"\n    else:\n        while n != 0:\n            if n % 2 == 0:\n                ans = \"0\" + ans\n                n = n // (-2)\n            else:\n                ans = \"1\" + ans\n                n = (n - 1) // (-2)\n        ans = ans[1:] if ans[0] == \"0\" else ans\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nN = int(input())\n\nif N == 0:\n    print(0)\nelif N == 1:\n    print(1)\nelse:\n    ans = \"\"\n    while N != 0:\n        if N % 2 == -1:\n            ans += \"1\"\n            N += 1\n        else:\n            ans += \"0\"\n        N //= 2\n    print(ans[::-1])", "\n\nN = int(input())\n\nres = []\nwhile True:\n    if N == 0:\n        break\n    elif N % 2 == 0:\n        res.append(0)\n        N //= -2\n    else:\n        res.append(1)\n        N = (N-1) // -2\n\nprint(''.join(map(str, res[::-1])))", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 0:\n        print('0')\n        return\n    ans = ''\n    while n != 0:\n        if n % 2 == 0:\n            ans = '0' + ans\n            n //= -2\n        else:\n            ans = '1' + ans\n            if n > 0:\n                n = (n - 1) // -2\n            else:\n                n = (n + 1) // -2\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef solve(n):\n    if n == 0:\n        return '0'\n    ans = ''\n    while n != 0:\n        ans = str(n % 2) + ans\n        n = -(n // 2)\n    return ans\n\nn = int(input())\nprint(solve(n))", "\n\nimport sys\n\nN = int(input())\n\nif N == 0:\n    print(0)\n    sys.exit()\n\nresult = []\n\nwhile True:\n    if N == 0:\n        break\n    elif N % 2 == 0:\n        result.append(0)\n        N = N // 2\n    elif N % 2 == 1:\n        result.append(1)\n        N = N // 2\n    elif N % 2 == -1:\n        result.append(1)\n        N = (N - 1) // 2\n    else:\n        result.append(0)\n        N = (N + 1) // 2\n\nprint(\"\".join(map(str, result[::-1])))"]