["\n\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if l[i] + l[j] > l[k]:\n                ans += 1\n\nprint(ans)", "\n\nimport sys\n\ninput = sys.stdin.readline\n\nn = int(input())\nl = list(map(int, input().split()))\n\nl.sort()\n\nans = 0\n\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if (l[i] != l[j]) and (l[j] != l[k]) and (l[k] != l[i]) and (l[i] + l[j] > l[k]):\n                ans += 1\n\nprint(ans)", "\n\nimport sys\nread = sys.stdin.readline\n\nN = int(read())\nL = list(map(int, read().split()))\n\ncount = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i] and L[i] + L[j] > L[k] and L[j] + L[k] > L[i] and L[k] + L[i] > L[j]:\n                count += 1\n\nprint(count)", "\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    l = list(map(int, readline().rstrip().split()))\n    l.sort()\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] + l[j] > l[k]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    c = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] != l[j] and l[j] != l[k] and l[k] != l[i] and l[i] + l[j] > l[k] and l[j] + l[k] > l[i] and l[k] + l[i] > l[j]:\n                    c += 1\n\n    print(c)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\nl = list(map(int, input().split()))\n\n# 1. (i, j, k)\u306b\u3064\u3044\u3066\u3001i < j < k\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n# 2. (i, j, k)\u306b\u3064\u3044\u3066\u3001L[i] < L[j] < L[k]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n# 3. (i, j, k)\u306b\u3064\u3044\u3066\u30012.\u3067\u6c42\u3081\u305f\u7d44\u307f\u5408\u308f\u305b\u306b\u3064\u3044\u3066\u3001L[i] + L[j] > L[k]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n\n# 1.\n# (i, j, k)\u306b\u3064\u3044\u3066\u3001i < j < k\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n# i < j < k < l\n# \u3068\u3059\u308b\u3068\u3001\n# i = 1, 2, 3, ..., n-3\n# j = 2, 3, 4, ..., n-2\n# k = 3, 4, 5, ..., n-1\n# l = 4, 5, 6, ..., n\n# \u3068\u306a\u308b\n# \u3088\u3063\u3066\u3001(n-3) * (n-2) * (n-1) / 3! = nC3\n\n# 2.\n# (i, j, k)\u306b\u3064\u3044\u3066\u3001L[i] < L[j] < L[k]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n# l[i] < l[j] < l[k]\n# \u3068\u3059\u308b\u3068\u3001\n# l[i] < l[j] < l[k] < l[l]\n# \u3068\u306a\u308b\n# \u3088\u3063\u3066\u3001\n# l[i] < l[j] < l[k] < l[l]\n# l[i] < l[j] < l[k] < l[l]\n# l[i] < l[j] < l[k] < l[l]\n# \u306e\u4e2d\u3067\u3001l[i] < l[j] < l[k] < l[l]\u304c\u6210\u7acb\u3059\u308b\u7d44\u307f\u5408\u308f\u305b\u306e\u6570\u3092\u6c42\u3081\u308b\n# l[i] < l[j] < l[k] < l[l]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u306e\u6570\u306f\u3001\n# (n-3) * (n-2) * (n-1) / 3! = nC3\n# \u3067\u3042\u308b\n\n# 3.\n# (i, j, k)\u306b\u3064\u3044\u3066\u30012.\u3067\u6c42\u3081\u305f\u7d44\u307f\u5408\u308f\u305b\u306b\u3064\u3044\u3066\u3001L[i] + L[j] > L[k]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n# l[i] + l[j] > l[k]\n# \u3068\u3059\u308b\u3068\u3001\n# l[i] + l[j] > l[k] > l[l]\n# \u3068\u306a\u308b\n# \u3088\u3063\u3066\u3001\n# l[i] + l[j] > l[k] > l[l]\n# l[i] + l[j] > l[k] > l[l]\n# l[i] + l[j] > l[k] > l[l]\n# \u306e\u4e2d\u3067\u3001l[i] + l[j] > l[k] > l[l]\u304c\u6210\u7acb\u3059\u308b\u7d44\u307f\u5408\u308f\u305b\u306e\u6570\u3092\u6c42\u3081\u308b\n# l[i] + l[j] > l[k] > l[l]\u3092\u6e80\u305f\u3059\u7d44\u307f\u5408\u308f\u305b\u306e\u6570\u306f\u3001\n# (n-3) * (n-2) * (n-1) / 3! = nC3\n# \u3067\u3042\u308b\n\n# \u3088\u3063\u3066\u3001(1) - (2) + (3) = nC3 - nC3 + nC3 = nC3\n\nprint(int(n * (n-1) * (n-2) / 6))", "\n\nimport sys\n\ndef main():\n    \"\"\"\n    1. \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n    2. \u4e09\u89d2\u5f62\u3092\u4f5c\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    3. \u4e09\u89d2\u5f62\u3092\u4f5c\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\n    4. \u7d44\u307f\u5408\u308f\u305b\u3092\u6570\u3048\u308b\n    \"\"\"\n    num_of_sticks = int(input())\n    sticks = list(map(int, input().split()))\n    # print(num_of_sticks)\n    # print(sticks)\n\n    # for i in range(num_of_sticks):\n    #     print(sticks[i])\n\n    count = 0\n    for i in range(num_of_sticks - 2):\n        for j in range(i + 1, num_of_sticks - 1):\n            for k in range(j + 1, num_of_sticks):\n                if sticks[i] != sticks[j] and sticks[j] != sticks[k] and sticks[k] != sticks[i]:\n                    if is_triangle(sticks[i], sticks[j], sticks[k]):\n                        count += 1\n    print(count)\n\ndef is_triangle(a, b, c):\n    if a + b > c and b + c > a and c + a > b:\n        return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[j] + l[k] > l[i] and l[k] + l[i] > l[j]:\n                cnt += 1\n\nprint(cnt)"]