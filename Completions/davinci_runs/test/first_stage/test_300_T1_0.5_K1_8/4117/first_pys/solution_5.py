

n = int(input())
l = list(map(int, input().split()))

# 1. (i, j, k)について、i < j < kを満たす組み合わせを求める
# 2. (i, j, k)について、L[i] < L[j] < L[k]を満たす組み合わせを求める
# 3. (i, j, k)について、2.で求めた組み合わせについて、L[i] + L[j] > L[k]を満たす組み合わせを求める

# 1.
# (i, j, k)について、i < j < kを満たす組み合わせを求める
# i < j < k < l
# とすると、
# i = 1, 2, 3, ..., n-3
# j = 2, 3, 4, ..., n-2
# k = 3, 4, 5, ..., n-1
# l = 4, 5, 6, ..., n
# となる
# よって、(n-3) * (n-2) * (n-1) / 3! = nC3

# 2.
# (i, j, k)について、L[i] < L[j] < L[k]を満たす組み合わせを求める
# l[i] < l[j] < l[k]
# とすると、
# l[i] < l[j] < l[k] < l[l]
# となる
# よって、
# l[i] < l[j] < l[k] < l[l]
# l[i] < l[j] < l[k] < l[l]
# l[i] < l[j] < l[k] < l[l]
# の中で、l[i] < l[j] < l[k] < l[l]が成立する組み合わせの数を求める
# l[i] < l[j] < l[k] < l[l]を満たす組み合わせの数は、
# (n-3) * (n-2) * (n-1) / 3! = nC3
# である

# 3.
# (i, j, k)について、2.で求めた組み合わせについて、L[i] + L[j] > L[k]を満たす組み合わせを求める
# l[i] + l[j] > l[k]
# とすると、
# l[i] + l[j] > l[k] > l[l]
# となる
# よって、
# l[i] + l[j] > l[k] > l[l]
# l[i] + l[j] > l[k] > l[l]
# l[i] + l[j] > l[k] > l[l]
# の中で、l[i] + l[j] > l[k] > l[l]が成立する組み合わせの数を求める
# l[i] + l[j] > l[k] > l[l]を満たす組み合わせの数は、
# (n-3) * (n-2) * (n-1) / 3! = nC3
# である

# よって、(1) - (2) + (3) = nC3 - nC3 + nC3 = nC3

print(int(n * (n-1) * (n-2) / 6))