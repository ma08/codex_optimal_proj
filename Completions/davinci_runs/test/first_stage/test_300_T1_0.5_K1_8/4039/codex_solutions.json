["\n\ndef main():\n    n,r = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    a.sort(key=lambda x: x[1])\n    for i in a:\n        if r < i[0]:\n            print(\"NO\")\n            return\n        r += i[1]\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\nn, r = map(int, input().split())\n\nprojects = [list(map(int, input().split())) for i in range(n)]\n\ndef check(r):\n    for a, b in projects:\n        if r < a:\n            return False\n        r += b\n        if r < 0:\n            return False\n    return True\n\nprint(\"YES\" if check(r) else \"NO\")", "\n\ndef main():\n    n, r = map(int, input().split())\n    for _ in range(n):\n        a, b = map(int, input().split())\n        if r < a:\n            print(\"NO\")\n            return\n        r += b\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\nn, r = map(int, input().split())\na, b = [], []\nfor i in range(n):\n    ai, bi = map(int, input().split())\n    a.append(ai)\n    b.append(bi)\n\ndef is_possible(r, a, b):\n    for i in range(n):\n        if r < a[i]:\n            return False\n        r += b[i]\n        if r < 0:\n            return False\n    return True\n\nprint(\"YES\" if is_possible(r, a, b) else \"NO\")", "\n\nimport sys\n\ndef main():\n    n, r = [int(x) for x in raw_input().split()]\n    projects = []\n    for i in range(n):\n        a, b = [int(x) for x in raw_input().split()]\n        projects.append((a, b))\n    projects.sort(key=lambda x: x[1])\n    for p in projects:\n        r += p[1]\n        if r < p[0]:\n            print \"NO\"\n            return\n    print \"YES\"\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    projects.reverse()\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n, r = [int(x) for x in input().split()]\n    projects = []\n    for i in range(n):\n        a, b = [int(x) for x in input().split()]\n        projects.append((a, b))\n    projects.sort(reverse=True)\n    for a, b in projects:\n        if r < a:\n            print(\"NO\")\n            return\n        r += b\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\n\nif __name__ == '__main__':\n    main()", "\n\nn, r = map(int, input().split())\nprojects = []\n\nfor i in range(n):\n    projects.append(list(map(int, input().split())))\n\ndef canComplete(r, projects):\n    for project in projects:\n        if project[0] > r:\n            return False\n        r += project[1]\n        if r < 0:\n            return False\n    return True\n\nprint(\"YES\" if canComplete(r, projects) else \"NO\")"]