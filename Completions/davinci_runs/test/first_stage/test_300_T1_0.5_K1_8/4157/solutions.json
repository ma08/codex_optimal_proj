["def powof3(x):\n    ans=0\n    while(x%3==0):\n        x=x//3\n        ans+=1\n    return ans\n\n\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n    a[i]=[-1*powof3(a[i]),a[i]]\na.sort()\nfor i in range(n):\n    a[i]=a[i][1]\nprint(*a)", "n = int(input())\na = list(map(int, input().split()))\ndef md(x, d):\n    res = 0\n    dd = 1\n    while x % (dd * d) == 0:\n        dd *= d\n        res += 1\n    return res\n\ndef cmp(a, b):\n    d3a = md(a, 3)\n    d2a = md(a, 2)\n    d3b = md(b, 3)\n    d2b = md(b, 2)\n    if d3a == d3b:\n        return d2a < d2b\n    return d3a > d3b\nfor i in range(n):\n    for j in range(i, n):\n        if cmp(a[j], a[i]):\n            a[i], a[j] = a[j], a[i]\nprint(\" \".join(map(str, a)))", "n = int(input())\na = list(map(int, input().split()))\ndef md(x, d):\n    res = 0\n    dd = 1\n    while x % (dd * d) == 0:\n        dd *= d\n        res += 1\n    return res\n \ndef cmp(a, b):\n    d3a = md(a, 3)\n    d2a = md(a, 2)\n    d3b = md(b, 3)\n    d2b = md(b, 2)\n    if d3a == d3b:\n        return d2a < d2b\n    return d3a > d3b\nfor i in range(n):\n    for j in range(i, n):\n        if cmp(a[j], a[i]):\n            a[i], a[j] = a[j], a[i]\nprint(\" \".join(map(str, a)))", "def key(v):\n    r = 0\n    while v % 3 == 0:\n        v //= 3\n        r -= 1\n    while v % 2 == 0:\n        v //= 2\n        r += 1\n    return r\ninput()\nprint(*sorted(map(int, input().split()), key=key))\n", "n = int(input())\na = list(map(int, input().split()))\ncount = []\nfor i in range(n):\n    x = 1\n    c = 0\n    while (a[i] % x == 0):\n        x *= 3\n        c += 1\n    c -= 1\n    count.append([-c, a[i]])\ncount.sort()\nfor i in range(n):\n    print(count[i][1], end=' ')", "#!/usr/bin/env python3\n\nimport collections\n\n\ndef solve(n, xs):\n    ys = set(xs)\n    zs = collections.deque()\n    zs.append(ys.pop())\n    while ys:\n        x = zs[len(zs) - 1]\n        if x // 3 in ys:\n            ys.remove(x // 3)\n            zs.append(x // 3)\n        elif 2 * x in ys:\n            ys.remove(2 * x)\n            zs.append(2 * x)\n        else:\n            break\n    while ys:\n        x = zs[0]\n        if x // 2 in ys:\n            ys.remove(x // 2)\n            zs.appendleft(x // 2)\n        elif 3 * x in ys:\n            ys.remove(3 * x)\n            zs.appendleft(3 * x)\n        else:\n            break\n    return zs\n\ndef main():\n    n = int(input())\n    xs = [int(x) for x in input().split()]\n    print(*solve(n, xs))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\nt=[*map(int,input().split())]\nx=[]\nfor i in t:\n  twoCnt,threeCnt=0,0\n  tt=i\n  while tt%2==0:\n    tt//=2\n    twoCnt+=1\n  tt=i\n  while tt%3==0:\n    tt//=3\n    threeCnt+=1\n  x.append([i,twoCnt,threeCnt])\nx.sort(key=lambda x:(-x[2],x[1]))\nfor i in x:\n  print(i[0],end=' ')", "n = int(input())\n\ndef k(x):\n    twos = 0\n    while x % 2 == 0:\n        x //= 2\n        twos += 1\n    threes = 0\n    while x % 3 == 0:\n        x //= 3\n        threes += 1\n    return (twos, -threes)\nA = sorted(map(int, input().split()), key=k)\nprint(' '.join(map(str, A)))\n", "n = int(input())\na = list(map(int, input().split()))\nl = [a[0]]\nfor i in range(1, n):\n    for j in range(i, n):\n        if l[-1] * 2 == a[j]:\n            l += [a[j]]\n            a[i], a[j] = a[j], a[i]\n            break\n        if (l[-1] // 3 == a[j]) and (l[-1] % 3 == 0):\n            l += [a[j]]\n            a[i], a[j] = a[j], a[i]\n            break\n        if l[0] * 3 == a[j]:\n            l = [a[j]] + l\n            a[i], a[j] = a[j], a[i]\n            break\n        if (l[0] // 2 == a[j]) and (l[0] % 2 == 0):\n            l = [a[j]] + l\n            a[i], a[j] = a[j], a[i]\n            break\nprint(*l)", "from collections import Counter\n\n\ndef read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef solve(res, num, c, n):\n    res.append(num)\n    c[num] -= 1\n    if n == 0:\n        print(' '.join([str(x) for x in res]))\n        return\n\n    if num % 3 == 0 and (num // 3) in c:\n        solve(res, num//3, c, n - 1)\n        res.pop()\n        c[num // 3] += 1\n\n    if (num * 2) in c:\n        solve(res, num*2, c, n - 1)\n        res.pop()\n        c[num*2] += 1\n\n\ndef main():\n    n = int(input())\n    nums = read_nums()\n    c = Counter(nums)\n    res = []\n    for num in nums:\n        solve(res, num, c, n - 1)\n        res.pop()\n        c[num] += 1\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nn=int(input())\nlis=list(map(int,input().split()))\nfor j in range(n):\n    ans=[]\n    curr=lis[j]\n    cnt=0\n    while cnt<n:\n        ans.append(curr)\n        cnt+=1\n        if curr*2 in lis:\n            curr*=2\n        elif curr//3 in lis and curr%3==0:\n            curr=curr//3\n        else:\n            break\n    if cnt==n:\n        ans=[str(p) for p in ans]\n        print(\" \".join(ans))\n        return\nprint(-1)\n", "n=int(input())\na=list(map(int,input().split()))\nd={}\nfor i in a:\n    if i in d:\n        d[i]+=1\n    else:\n        d[i]=1\nmi=min(a)\narr=[mi]\nprev=[mi]\nwhile True:\n    if (3*prev[-1] in d) and d[3*prev[-1]]>0:\n        d[3*prev[-1]]-=1\n        prev.append(3*prev[-1])\n    elif prev[-1]&1==0 and prev[-1]//2 in d and d[prev[-1]//2]>0:\n        d[prev[-1]//2]-=1\n        prev.append(prev[-1]//2)\n    else:\n        break\nwhile True:\n    if 2*arr[-1] in d and d[2*arr[-1]]>0:\n        d[2*arr[-1]]-=1\n        arr.append(2*arr[-1])\n    elif arr[-1]%3==0 and arr[-1]//3 in d and d[arr[-1]//3]>0:\n        d[arr[-1]//3]-=1\n        arr.append(arr[-1]//3)\n    else:\n        break\n#print(prev,arr)\nfor i in range(len(prev)-1,0,-1):\n    print(prev[i],end=\" \")\nprint(*arr)\n", "def f(x):\n    nonlocal a\n    if len(ans) == n:\n        print(' '.join(map(str, ans)))\n        return\n    if x % 3 == 0 and x // 3 in a:\n        ans.append(x // 3)\n        f(x // 3)\n        ans.pop()\n    if x * 2 in a:\n        ans.append(x * 2)\n        f(x * 2)\n        ans.pop()\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n    ans.append(a[i])\n    f(a[i])\n    ans.pop()\n", "n = int(input())\ns = [int(x) for x in input().split()]\nd = {}\n\nfor i in range(n):\n    q = s[i]\n    t2 = 0\n    while q % 2 == 0:\n        q //= 2\n        t2 += 1\n    q = s[i]\n    t3 = 0\n    while q % 3 == 0:\n        q //= 3\n        t3 += 1\n    d[(t3, -t2)] = s[i]\n\nw = [i for i in d]\nw.sort(reverse=1)\n# print(w)\nfor i in range(n):\n    print(d[w[i]], end=' ')\n", "n = int(input())\ninputlist = list(map(int,input().split()))\noutputlist = [inputlist.pop(0)]\nwhile len(inputlist) > 0:\n\tfor i in range(len(inputlist)):\n\t\tif outputlist[0]*3 == inputlist[i]:\n\t\t\toutputlist = [inputlist.pop(i)] + outputlist\n\t\t\tbreak\n\t\telif inputlist[i]*3 == outputlist[-1]:\n\t\t\toutputlist = outputlist + [inputlist.pop(i)]\n\t\t\tbreak\n\t\telif outputlist[-1]*2 == inputlist[i]:\n\t\t\toutputlist = outputlist + [inputlist.pop(i)]\n\t\t\tbreak\n\t\telif inputlist[i]*2 == outputlist[0]:\n\t\t\toutputlist = [inputlist.pop(i)] + outputlist \n\t\t\tbreak\nprint(' '.join(list(map(str,outputlist))))", "n = int(input())\na = list(map(int, input().split()))\nb = []\n\nfor i in range(n):\n    for k in a:\n        if k*2 in a or k // 3 in a and k % 3 == 0:\n             pass\n        else:\n            a.remove(k)\n            b.append(k)\nprint(*reversed(b))\n\n", "n = int(input())\na = input().split()\nans = []\nfor i in range(n):\n    a[i] = int(a[i])\na.sort()\nj = 0\nwhile (len(a)>0):\n    temp = []\n    i = 0\n    while(i<len(a)):\n        if (a[i]%3!=0):\n            temp.append(a[i]*pow(3,j))\n            a.remove(a[i])\n        else:\n            a[i]//=3\n            i+=1\n    j+=1    \n    ans.append(temp)\nk = len(ans)\nfor i in range(k):\n    for j in range(len(ans[k-i-1])):\n        print(ans[k-i-1][j],end = ' ')\n    \n    \n    \n    \n        \n    \n    \n    \n\n    \n    \n   \n\n", "#Codeforces Round #479\n#Problem D\n\nfrom sys import stdin, stdout\n\ndef main():\n    n = int(stdin.readline())\n    a = [int(i) for i in stdin.readline().split()]\n    d = dict()\n    for v in a:\n        v3 = 0\n        vc = v\n        while vc%3 == 0:\n            vc = vc//3\n            v3 += 1\n        temp = d.get(v3, [])\n        temp.append(v)\n        d[v3] = temp\n    k = list(d.keys())\n    k.sort()\n    k.reverse()\n    out = []\n    for i in k:\n        temp = d[i]\n        temp.sort()\n        out += temp\n    stdout.write(\" \".join([str(i) for i in out]) + \"\\n\")\n\nmain()\n        \n", "def to(a):\n    s = 0\n    while a % 2 == 0 and a != 0:\n        s += 1\n        a = a // 2\n    return s\n\ndef tr(a):\n    s = 0\n    while a % 3 == 0 and a != 0:\n        s += 1\n        a = a // 3\n    return s\n    \n         \nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    for j in range(i + 1, n):\n        if to(a[i]) > to(a[j]):\n            a[i], a[j] = a[j], a[i]\n        if tr(a[i]) < tr(a[j]):\n            a[i], a[j] = a[j], a[i]\nprint(*a)", "from heapq import heappop,heappush\nn=int(input())\na=[]\nc=input().split()\nfor i in c:\n    i=int(i)\n    p=0\n    while not i%3:\n        i//=3\n        p+=1\n    a+=[[] for j in range(p-len(a)+1)]\n    heappush(a[p],i*3**p)\no=''\nn=len(a)\nfor i in range(1,n+1):\n    while a[n-i]:\n        o+=str(heappop(a[n-i]))+' '\nprint(o)\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nS = list(map(int,input().split()))\n\ndef neighbours(node,s=S):\n\tout = [node<<1]\n\tif node % 3 == 0:\n\t\tout.append(node//3)\n\treturn set(x for x in out if x in s)\n\nG = {}\nfor x in S:\n\tG[x] = neighbours(x)\n\n\ndef hamilton(G, size, pt, path=None):\n\tif path == None:\n\t\tpath = []\n\tif pt not in set(path):\n\t\tpath.append(pt)\n\t\tif len(path)==size:\n\t\t\treturn path\n\t\tfor pt_next in G.get(pt, []):\n\t\t\tres_path = [i for i in path]\n\t\t\tcandidate = hamilton(G, size, pt_next, res_path)\n\t\t\tif candidate is not None:\n\t\t\t\treturn candidate\nfor x in S:\n\tP = hamilton(G,N,x)\n\tif P:\n\t\tprint(\" \".join(map(str,P)))\n\t\tbreak", "def p3(n):\n    res = 0\n    while n % 3 == 0:\n        n //= 3\n        res += 1\n    return res\ndef p2(n):\n    res = 0\n    while n % 2 == 0:\n        n //= 2\n        res += 1\n    return res\ndef cmp_to_key(mycmp):\n    'Convert a cmp= function into a key= function'\n    class K:\n        def __init__(self, obj, *args):\n            self.obj = obj\n        def __lt__(self, other):\n            return mycmp(self.obj, other.obj) < 0\n        def __gt__(self, other):\n            return mycmp(self.obj, other.obj) > 0\n        def __eq__(self, other):\n            return mycmp(self.obj, other.obj) == 0\n        def __le__(self, other):\n            return mycmp(self.obj, other.obj) <= 0\n        def __ge__(self, other):\n            return mycmp(self.obj, other.obj) >= 0\n        def __ne__(self, other):\n            return mycmp(self.obj, other.obj) != 0\n    return K\ndef comp(x, y):\n    return (p2(x) - p3(x)) - (p2(y) - p3(y))\nn = int(input())\narr = list(map(int,input().split()))\narr = sorted(arr, key=cmp_to_key(comp))\ns = str(arr[0])\nfor c in arr[1:]:\n    s += f\" {c}\"\nprint(s)", "# Project name: CF-479-D\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef func(x):\n    b = list(a)\n    r=[]\n    for i in range(n):\n\n        if x%3==0 and x//3 in b:\n            x//=3\n            b.remove(x)\n            r+=[x]\n        if x*2 in b:\n            x*=2\n            b.remove(x)\n            r+=[x]\n    return r\n\n\nfor i in a:\n    if sorted( [i]+func(i)) == sorted(a):\n        print (' '.join(map(str, [i]+func(i))))", "n = int(input())\na = [int(i) for i in input().split()]\np = []\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] == a[j] * 2:\n            p.append([a[i], a[j]])\n        if a[j] == a[i] * 2:\n            p.append([a[j], a[i]])\n        if a[i] == a[j] * 3:\n            p.append([a[j], a[i]])\n        if a[j] == a[i] * 3:\n            p.append([a[i], a[j]])\nd = dict()\nd[p[0][0]] = 0\nfor j in range(n - 1):\n    for i in range(n - 1):\n        if d.get(p[i][0]) != None:\n            d[p[i][1]] = d[p[i][0]] - 1\n        if d.get(p[i][1]) != None:\n            d[p[i][0]] = d[p[i][1]] + 1\nans = []\nans_p = []\nfor i, j in d.items():\n    ans.append(i)\n    ans_p.append(j)\nprov = []\nfor i in range(len(ans_p)):\n    prov.append(ans_p[i])\nprov.sort()\n\nwhile ans_p != prov:\n    for i in range(n - 1):\n        if ans_p[i] > ans_p[i + 1]:\n            ans_p[i], ans_p[i + 1] = ans_p[i + 1], ans_p[i]\n            ans[i], ans[i + 1] = ans[i + 1], ans[i]\nfor i in range(len(ans)):\n    print(ans[i], end=' ')", "def three_num(n):\n\tresult = 0\n\twhile n % 3 == 0:\n\t\tn //= 3\n\t\tresult += 1\n\treturn result\n\nn = int(input())\nx = list(map(int, input().split()))\ny = set(x)\nfirst = x[0]\nmax_num = three_num(x[0])\nfor i in range(1, n):\n\ttemp = three_num(x[i])\n\tif temp > max_num:\n\t\tmax_num = temp\n\t\tfirst = x[i]\n\telif temp == max_num and first > x[i]:\n\t\tfirst = x[i]\nres = []\nres.append(first)\ny.remove(first)\nfor i in range(n - 1):\n\tif res[i] * 2 in y:\n\t\ty.remove(res[i] * 2)\n\t\tres.append(res[i] * 2)\n\telse:\n\t\ty.remove(res[i] // 3)\n\t\tres.append(res[i] // 3)\nprint(\" \".join(map(str, res)))"]