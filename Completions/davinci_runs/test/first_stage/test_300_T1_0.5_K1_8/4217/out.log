2022-04-19 23:06:34.541734 """
Katsusando loves omelette rice.
Besides, he loves crème brûlée, tenderloin steak and so on, and believes that these foods are all loved by everyone.
To prove that hypothesis, he conducted a survey on M kinds of foods and asked N people whether they like these foods or not.
The i-th person answered that he/she only likes the A_{i1}-th, A_{i2}-th, ..., A_{iK_i}-th food.
Find the number of the foods liked by all the N people.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 30
 - 1 \leq K_i \leq M
 - 1 \leq A_{ij} \leq M
 - For each i (1 \leq i \leq N), A_{i1}, A_{i2}, ..., A_{iK_i} are distinct.

-----Constraints-----
Input is given from Standard Input in the following format:
N M
K_1 A_{11} A_{12} ... A_{1K_1}
K_2 A_{21} A_{22} ... A_{2K_2}
:
K_N A_{N1} A_{N2} ... A_{NK_N}

-----Output-----
Print the number of the foods liked by all the N people.

-----Sample Input-----
3 4
2 1 3
3 1 2 3
2 3 2

-----Sample Output-----
1

As only the third food is liked by all the three people, 1 should be printed.
"""
2022-04-19 23:06:34.541747 --------------------------
2022-04-19 23:06:34.541863 using api key derek
2022-04-19 23:06:56.050098 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# get the inputs\nn, m = map(int, input().split())\n\n# create a list of lists that contains the foods the person likes\nfoods = []\nfor _ in range(n):\n    foods.append(list(map(int, input().split())))\n\n# remove the first element from each list\nfor i in range(n):\n    foods[i].pop(0)\n\n# get the foods that are liked by all the n people\ncommon_foods = set(foods[0])\nfor i in range(1, n):\n    common_foods = common_foods & set(foods[i])\n\n# print the number of common foods\nprint(len(common_foods))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#import sys\n\n#n, m = map(int, sys.stdin.readline().split())\n#a = []\n\n#for i in range(n):\n#    a.append(list(map(int, sys.stdin.readline().split())))\n\n#for i in range(1, m+1):\n#    for j in range(n):\n#        if i in a[j]:\n#            continue\n#        else:\n#            break\n#    else:\n#        print(i)\n\n#print(a)\n\n#n, m = map(int, input().split())\n#a = []\n#for i in range(n):\n#    a.append(list(map(int, input().split())))\n#print(a)\n\n#for i in range(1, m+1):\n#    for j in range(n):\n#        if i in a[j]:\n#            continue\n#        else:\n#            break\n#    else:\n#        print(i)\n\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\n#print(a)\n\nfor i in range(1, m+1):\n    for j in range(n):\n        if i in a[j]:\n            continue\n        else:\n            break\n    else:\n        print(i)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\nfrom collections import defaultdict\n\nN, M = map(int, sys.stdin.readline().split())\n\nlikes = defaultdict(int)\n\nfor _ in range(N):\n    K = list(map(int, sys.stdin.readline().split()))\n    for k in K[1:]:\n        likes[k] += 1\n\nprint(len([l for l in likes if likes[l] == N]))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nfoods = [0] * M\n\nfor i in range(N):\n    K = int(sys.stdin.readline().split()[0])\n    for j in range(K):\n        foods[int(sys.stdin.readline().split()[j])-1] += 1\n\nprint(foods.count(N))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nlikes = [0] * M\nfor _ in range(N):\n    K = list(map(int, input().split()))\n    for i in K[1:]:\n        likes[i-1] += 1\nprint(likes.count(N))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u3092\u53d6\u5f97\n    \"\"\"\n    num_list = []\n    num_list = input().split(\" \")\n    num_n = int(num_list[0])\n    num_m = int(num_list[1])\n\n    \"\"\"\n    \u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    \"\"\"\n    data_list = []\n    for i in range(num_n):\n        data_list.append(input().split(\" \"))\n\n    \"\"\"\n    \u30c7\u30fc\u30bf\u3092\u6574\u7406\n    \"\"\"\n    for i in range(num_n):\n        data_list[i][0] = int(data_list[i][0])\n        for j in range(data_list[i][0]):\n            data_list[i][j+1] = int(data_list[i][j+1])\n\n    \"\"\"\n    \u5168\u54e1\u304c\u597d\u304d\u306a\u98df\u3079\u7269\u306e\u6570\u3092\u6570\u3048\u308b\n    \"\"\"\n    count = 0\n    for i in range(num_m):\n        food_check = 0\n        for j in range(num_n):\n            for k in range(data_list[j][0]):\n                if i+1 == data_list[j][k+1]:\n                    food_check += 1\n                    break\n        if food_check == num_n:\n            count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0 for i in range(m)]\n\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in range(k):\n            foods[int(input().split()[0]) - 1] += 1\n\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nnm = input().split()\nn = int(nm[0])\nm = int(nm[1])\n\nfoods = [0] * m\n\nfor i in range(n):\n    k = input().split()\n    k = k[1:]\n    for j in range(len(k)):\n        foods[int(k[j]) - 1] += 1\n\nans = 0\nfor i in range(m):\n    if foods[i] == n:\n        ans += 1\n\nprint(ans)"
    }
  ],
  "created": 1650409594,
  "id": "cmpl-4yrDWjlVCQrtyvPZVh94tp5rFg59M",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:06:56.050484 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# get the inputs\nn, m = map(int, input().split())\n\n# create a list of lists that contains the foods the person likes\nfoods = []\nfor _ in range(n):\n    foods.append(list(map(int, input().split())))\n\n# remove the first element from each list\nfor i in range(n):\n    foods[i].pop(0)\n\n# get the foods that are liked by all the n people\ncommon_foods = set(foods[0])\nfor i in range(1, n):\n    common_foods = common_foods & set(foods[i])\n\n# print the number of common foods\nprint(len(common_foods))"
}
2022-04-19 23:06:56.050524 REASON stop
2022-04-19 23:06:56.051418 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#import sys\n\n#n, m = map(int, sys.stdin.readline().split())\n#a = []\n\n#for i in range(n):\n#    a.append(list(map(int, sys.stdin.readline().split())))\n\n#for i in range(1, m+1):\n#    for j in range(n):\n#        if i in a[j]:\n#            continue\n#        else:\n#            break\n#    else:\n#        print(i)\n\n#print(a)\n\n#n, m = map(int, input().split())\n#a = []\n#for i in range(n):\n#    a.append(list(map(int, input().split())))\n#print(a)\n\n#for i in range(1, m+1):\n#    for j in range(n):\n#        if i in a[j]:\n#            continue\n#        else:\n#            break\n#    else:\n#        print(i)\n\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\n#print(a)\n\nfor i in range(1, m+1):\n    for j in range(n):\n        if i in a[j]:\n            continue\n        else:\n            break\n    else:\n        print(i)"
}
2022-04-19 23:06:56.051504 REASON stop
2022-04-19 23:06:56.051963 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\nfrom collections import defaultdict\n\nN, M = map(int, sys.stdin.readline().split())\n\nlikes = defaultdict(int)\n\nfor _ in range(N):\n    K = list(map(int, sys.stdin.readline().split()))\n    for k in K[1:]:\n        likes[k] += 1\n\nprint(len([l for l in likes if likes[l] == N]))"
}
2022-04-19 23:06:56.052046 REASON stop
2022-04-19 23:06:56.064846 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nfoods = [0] * M\n\nfor i in range(N):\n    K = int(sys.stdin.readline().split()[0])\n    for j in range(K):\n        foods[int(sys.stdin.readline().split()[j])-1] += 1\n\nprint(foods.count(N))"
}
2022-04-19 23:06:56.065000 REASON stop
2022-04-19 23:06:56.092301 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nlikes = [0] * M\nfor _ in range(N):\n    K = list(map(int, input().split()))\n    for i in K[1:]:\n        likes[i-1] += 1\nprint(likes.count(N))"
}
2022-04-19 23:06:56.092434 REASON stop
2022-04-19 23:06:56.093312 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    \u5165\u529b\u3055\u308c\u305f\u6570\u5b57\u3092\u53d6\u5f97\n    \"\"\"\n    num_list = []\n    num_list = input().split(\" \")\n    num_n = int(num_list[0])\n    num_m = int(num_list[1])\n\n    \"\"\"\n    \u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n    \"\"\"\n    data_list = []\n    for i in range(num_n):\n        data_list.append(input().split(\" \"))\n\n    \"\"\"\n    \u30c7\u30fc\u30bf\u3092\u6574\u7406\n    \"\"\"\n    for i in range(num_n):\n        data_list[i][0] = int(data_list[i][0])\n        for j in range(data_list[i][0]):\n            data_list[i][j+1] = int(data_list[i][j+1])\n\n    \"\"\"\n    \u5168\u54e1\u304c\u597d\u304d\u306a\u98df\u3079\u7269\u306e\u6570\u3092\u6570\u3048\u308b\n    \"\"\"\n    count = 0\n    for i in range(num_m):\n        food_check = 0\n        for j in range(num_n):\n            for k in range(data_list[j][0]):\n                if i+1 == data_list[j][k+1]:\n                    food_check += 1\n                    break\n        if food_check == num_n:\n            count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 23:06:56.093411 REASON stop
2022-04-19 23:06:56.095528 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0 for i in range(m)]\n\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in range(k):\n            foods[int(input().split()[0]) - 1] += 1\n\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:56.095618 REASON stop
2022-04-19 23:06:56.096681 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nnm = input().split()\nn = int(nm[0])\nm = int(nm[1])\n\nfoods = [0] * m\n\nfor i in range(n):\n    k = input().split()\n    k = k[1:]\n    for j in range(len(k)):\n        foods[int(k[j]) - 1] += 1\n\nans = 0\nfor i in range(m):\n    if foods[i] == n:\n        ans += 1\n\nprint(ans)"
}
2022-04-19 23:06:56.096915 REASON stop
