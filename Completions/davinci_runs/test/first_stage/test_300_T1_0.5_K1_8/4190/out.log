2022-04-19 22:48:26.812175 """
You are given two arrays $a$ and $b$, both of length $n$. All elements of both arrays are from $0$ to $n-1$.

You can reorder elements of the array $b$ (if you want, you may leave the order of elements as it is). After that, let array $c$ be the array of length $n$, the $i$-th element of this array is $c_i = (a_i + b_i) \% n$, where $x \% y$ is $x$ modulo $y$.

Your task is to reorder elements of the array $b$ to obtain the lexicographically minimum possible array $c$.

Array $x$ of length $n$ is lexicographically less than array $y$ of length $n$, if there exists such $i$ ($1 \le i \le n$), that $x_i < y_i$, and for any $j$ ($1 \le j < i$) $x_j = y_j$.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) â€” the number of elements in $a$, $b$ and $c$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($0 \le a_i < n$), where $a_i$ is the $i$-th element of $a$.

The third line of the input contains $n$ integers $b_1, b_2, \dots, b_n$ ($0 \le b_i < n$), where $b_i$ is the $i$-th element of $b$.


-----Output-----

Print the lexicographically minimum possible array $c$. Recall that your task is to reorder elements of the array $b$ and obtain the lexicographically minimum possible array $c$, where the $i$-th element of $c$ is $c_i = (a_i + b_i) \% n$.


-----Examples-----
Input
4
0 1 2 1
3 2 1 1

Output
1 0 0 2 

Input
7
2 5 1 5 3 4 3
2 4 3 5 6 5 1

Output
0 0 0 1 0 2 4
"""
2022-04-19 22:48:26.812194 --------------------------
2022-04-19 22:48:26.812305 using api key gabby
2022-04-19 22:48:39.301293 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = [(a[i] + b[i]) % n for i in range(n)]\n    d = {i:[] for i in range(n)}\n    for i in range(n):\n        d[c[i]].append(b[i])\n    for i in range(n):\n        d[i].sort()\n    for i in range(n):\n        for j in range(len(d[i])):\n            print(d[i][j], end=\" \")\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    answer = [0] * n\n    for i in range(n):\n        answer[(a[i] - b[i]) % n] += 1\n    print(' '.join(map(str, answer)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef get_min_c_array(a,b):\n    n = len(a)\n    c = [0] * n\n    for i in range(n):\n        c[(a[i]+b[i])%n] += 1\n    for i in range(1,n):\n        c[i] += c[i-1]\n    for i in range(n-1,-1,-1):\n        c[i] = c[i-1] if i > 0 else 0\n    for i in range(n):\n        c[(a[i]+b[i])%n] += 1\n    return c\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(*get_min_c_array(a,b))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef function(n, a, b):\n\tc = []\n\tfor i in range(n):\n\t\tc.append((a[i] + b[i]) % n)\n\tc.sort()\n\treturn c\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = function(n, a, b)\nprint(*c)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    c = []\n\n    for i in range(n):\n        c.append(a[i] + b[i])\n\n    c.sort()\n    for i in range(n):\n        print(c[i] % n, end=\" \")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [0]*n\n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\n\nif c[0] > 1:\n    print(\"-1\")\nelse:\n    for i in range(n):\n        if c[i] == 0:\n            print(\"-1\")\n            break\n    else:\n        for i in range(n):\n            print(c[i], end=\" \")\n        print()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nfor i in range(n):\n    print((a[i]+b[i])%n, end=' ')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na_dict = defaultdict(list)\nfor i, x in enumerate(a):\n    a_dict[x].append(i)\n\nb_dict = defaultdict(list)\nfor i, x in enumerate(b):\n    b_dict[x].append(i)\n\nc = [0] * n\nfor i in range(n):\n    for j in a_dict[i]:\n        for k in b_dict[n - i]:\n            c[j] = k\n            b_dict[n - i].remove(k)\n            break\nprint(*c)"
    }
  ],
  "created": 1650408506,
  "id": "cmpl-4yqvycAhwsznaA4Bx7YcBRmJXKgI2",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:48:39.301648 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = [(a[i] + b[i]) % n for i in range(n)]\n    d = {i:[] for i in range(n)}\n    for i in range(n):\n        d[c[i]].append(b[i])\n    for i in range(n):\n        d[i].sort()\n    for i in range(n):\n        for j in range(len(d[i])):\n            print(d[i][j], end=\" \")\n\nmain()"
}
2022-04-19 22:48:39.301683 REASON stop
2022-04-19 22:48:39.302888 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    answer = [0] * n\n    for i in range(n):\n        answer[(a[i] - b[i]) % n] += 1\n    print(' '.join(map(str, answer)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:48:39.303000 REASON stop
2022-04-19 22:48:39.303499 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef get_min_c_array(a,b):\n    n = len(a)\n    c = [0] * n\n    for i in range(n):\n        c[(a[i]+b[i])%n] += 1\n    for i in range(1,n):\n        c[i] += c[i-1]\n    for i in range(n-1,-1,-1):\n        c[i] = c[i-1] if i > 0 else 0\n    for i in range(n):\n        c[(a[i]+b[i])%n] += 1\n    return c\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(*get_min_c_array(a,b))"
}
2022-04-19 22:48:39.303565 REASON stop
2022-04-19 22:48:39.320413 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef function(n, a, b):\n\tc = []\n\tfor i in range(n):\n\t\tc.append((a[i] + b[i]) % n)\n\tc.sort()\n\treturn c\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = function(n, a, b)\nprint(*c)"
}
2022-04-19 22:48:39.320549 REASON stop
2022-04-19 22:48:39.342664 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    c = []\n\n    for i in range(n):\n        c.append(a[i] + b[i])\n\n    c.sort()\n    for i in range(n):\n        print(c[i] % n, end=\" \")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 22:48:39.342801 REASON stop
2022-04-19 22:48:39.343462 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [0]*n\n\nfor i in range(n):\n    c[(a[i]+b[i])%n] += 1\n\nif c[0] > 1:\n    print(\"-1\")\nelse:\n    for i in range(n):\n        if c[i] == 0:\n            print(\"-1\")\n            break\n    else:\n        for i in range(n):\n            print(c[i], end=\" \")\n        print()"
}
2022-04-19 22:48:39.343604 REASON stop
2022-04-19 22:48:39.345029 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nfor i in range(n):\n    print((a[i]+b[i])%n, end=' ')"
}
2022-04-19 22:48:39.345109 REASON stop
2022-04-19 22:48:39.346730 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nfrom collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na_dict = defaultdict(list)\nfor i, x in enumerate(a):\n    a_dict[x].append(i)\n\nb_dict = defaultdict(list)\nfor i, x in enumerate(b):\n    b_dict[x].append(i)\n\nc = [0] * n\nfor i in range(n):\n    for j in a_dict[i]:\n        for k in b_dict[n - i]:\n            c[j] = k\n            b_dict[n - i].remove(k)\n            break\nprint(*c)"
}
2022-04-19 22:48:39.346932 REASON stop
