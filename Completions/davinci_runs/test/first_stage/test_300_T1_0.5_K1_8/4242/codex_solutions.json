["\n\nimport math\nimport sys\n\n# get input\ninputList = sys.stdin.readline().rstrip('\\n').split()\n\n# convert to integer\nA = int(inputList[0])\nB = int(inputList[1])\nK = int(inputList[2])\n\n# get the number of common divisors\ncommonDivisors = math.gcd(A, B)\n\n# get the list of common divisors\ndivisorsList = []\nfor i in range(1, commonDivisors+1):\n    if commonDivisors % i == 0:\n        divisorsList.append(i)\n\n# print the K-th largest common divisor\nprint(divisorsList[K-1])", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    divisors = sorted(set(divisor(a) + divisor(b)))\n    print(divisors[-k])\n\ndef divisor(num):\n    i = 1\n    divisors = []\n    while i * i <= num:\n        if num % i == 0:\n            divisors.append(i)\n            if i != num // i:\n                divisors.append(num//i)\n        i += 1\n    return divisors\n\nif __name__ == '__main__':\n    main()", "\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    a, b, k = map(int, input().split())\n    l = lcm(a, b)\n    c = 0\n    for i in range(1, l + 1):\n        if l % i == 0:\n            c += 1\n            if c == k:\n                print(i)\n                break\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    l = lcm(a, b)\n    for i in xrange(l, 0, -1):\n        if i % a == 0 and i % b == 0:\n            k -= 1\n        if k == 0:\n            print i\n            break\n\nif __name__ == \"__main__\":\n    main()", "\nfrom fractions import gcd\n\ninp = input().split()\n\na = int(inp[0])\nb = int(inp[1])\nk = int(inp[2])\n\ndivisor = gcd(a,b)\n\ndivisor_list = []\n\nfor i in range(1,divisor+1):\n    if divisor % i == 0:\n        divisor_list.append(i)\n\nprint(divisor_list[-k])", "\n\n# Get input\na, b, k = map(int, input().split())\n\n# Find the greatest common divisor\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# Find the least common multiple\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n# Find the K-th largest positive integer that divides both A and B\ndef find_kth(a, b, k):\n    l = lcm(a, b)\n    # Find the number of divisors of lcm(a, b)\n    divisors = []\n    for i in range(1, int(l**0.5) + 1):\n        if l % i == 0:\n            divisors.append(i)\n            divisors.append(l // i)\n    divisors.sort(reverse=True)\n    # Find the K-th largest positive integer that divides both A and B\n    return divisors[k-1]\n\nprint(find_kth(a, b, k))", "\n\nimport math\n\nA, B, K = map(int, input().split())\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ngcd_val = gcd(A, B)\n\nfor i in range(K):\n    if gcd_val % 2 == 0:\n        gcd_val /= 2\n    else:\n        break\n\nprint(int(gcd_val))", "\n\nimport sys\n\na, b, k = map(int, sys.stdin.readline().split())\n\nif a > b:\n    a, b = b, a\n\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break"]