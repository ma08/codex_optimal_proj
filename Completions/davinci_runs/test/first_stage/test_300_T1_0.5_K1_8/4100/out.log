2022-04-19 21:59:08.865252 """
Takahashi has decided to hold fastest-finger-fast quiz games. Kizahashi, who is in charge of making the scoreboard, is struggling to write the program that manages the players' scores in a game, which proceeds as follows.
A game is played by N players, numbered 1 to N. At the beginning of a game, each player has K points.
When a player correctly answers a question, each of the other N-1 players receives minus one (-1) point. There is no other factor that affects the players' scores.
At the end of a game, the players with 0 points or lower are eliminated, and the remaining players survive.
In the last game, the players gave a total of Q correct answers, the i-th of which was given by Player A_i.
For Kizahashi, write a program that determines whether each of the N players survived this game.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 10^5
 - 1 \leq K \leq 10^9
 - 1 \leq Q \leq 10^5
 - 1 \leq A_i \leq N\ (1 \leq i \leq Q)

-----Input-----
Input is given from Standard Input in the following format:
N K Q
A_1
A_2
.
.
.
A_Q

-----Output-----
Print N lines. The i-th line should contain Yes if Player i survived the game, and No otherwise.

-----Sample Input-----
6 3 4
3
1
3
2

-----Sample Output-----
No
No
Yes
No
No
No

In the beginning, the players' scores are (3, 3, 3, 3, 3, 3).
 - Player 3 correctly answers a question. The players' scores are now (2, 2, 3, 2, 2, 2).
 - Player 1 correctly answers a question. The players' scores are now (2, 1, 2, 1, 1, 1).
 - Player 3 correctly answers a question. The players' scores are now (1, 0, 2, 0, 0, 0).
 - Player 2 correctly answers a question. The players' scores are now (0, 0, 1, -1, -1, -1).
Players 1, 2, 4, 5 and 6, who have 0 points or lower, are eliminated, and Player 3 survives this game.
"""
2022-04-19 21:59:08.865263 --------------------------
2022-04-19 21:59:08.865373 using api key derek
2022-04-19 21:59:08.994700 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-19 21:59:14.000088 """
Takahashi has decided to hold fastest-finger-fast quiz games. Kizahashi, who is in charge of making the scoreboard, is struggling to write the program that manages the players' scores in a game, which proceeds as follows.
A game is played by N players, numbered 1 to N. At the beginning of a game, each player has K points.
When a player correctly answers a question, each of the other N-1 players receives minus one (-1) point. There is no other factor that affects the players' scores.
At the end of a game, the players with 0 points or lower are eliminated, and the remaining players survive.
In the last game, the players gave a total of Q correct answers, the i-th of which was given by Player A_i.
For Kizahashi, write a program that determines whether each of the N players survived this game.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 10^5
 - 1 \leq K \leq 10^9
 - 1 \leq Q \leq 10^5
 - 1 \leq A_i \leq N\ (1 \leq i \leq Q)

-----Input-----
Input is given from Standard Input in the following format:
N K Q
A_1
A_2
.
.
.
A_Q

-----Output-----
Print N lines. The i-th line should contain Yes if Player i survived the game, and No otherwise.

-----Sample Input-----
6 3 4
3
1
3
2

-----Sample Output-----
No
No
Yes
No
No
No

In the beginning, the players' scores are (3, 3, 3, 3, 3, 3).
 - Player 3 correctly answers a question. The players' scores are now (2, 2, 3, 2, 2, 2).
 - Player 1 correctly answers a question. The players' scores are now (2, 1, 2, 1, 1, 1).
 - Player 3 correctly answers a question. The players' scores are now (1, 0, 2, 0, 0, 0).
 - Player 2 correctly answers a question. The players' scores are now (0, 0, 1, -1, -1, -1).
Players 1, 2, 4, 5 and 6, who have 0 points or lower, are eliminated, and Player 3 survives this game.
"""
2022-04-19 21:59:14.000128 --------------------------
2022-04-19 21:59:14.000248 using api key sourya
2022-04-19 21:59:27.268944 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k, q = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(q):\n    a[int(input()) - 1] += 1\n\nfor i in range(n):\n    if k - q + a[i] > 0:\n        print('Yes')\n    else:\n        print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# ---- solution ----\n\nn, k, q = map(int, input().split())\na = [int(input()) for i in range(q)]\n\nl = [k] * n\nfor i in a:\n    l[i-1] += 1\n\nfor i in l:\n    if i > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# input\nN, K, Q = map(int,sys.stdin.readline().split())\nA = []\nfor i in range(Q):\n    A.append(int(sys.stdin.readline()))\n\n# initialization\nscores = [K] * N\n\n# main\nfor i in range(Q):\n    scores[A[i]-1] -= 1\n    if scores[A[i]-1] <= 0:\n        scores[A[i]-1] = 0\n\n# output\nfor i in range(N):\n    if scores[i] > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K] * N\nfor a in A:\n    for i in range(N):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(N):\n    if points[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, K, Q = map(int, input().split())\n\naliveList = [K for i in range(N)]\n\nfor i in range(Q):\n    num = int(input())\n    for j in range(N):\n        if j+1 == num:\n            continue\n        aliveList[j] -= 1\n\nfor i in range(N):\n    if aliveList[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k, q = map(int, input().split())\nA = []\nfor i in range(q):\n    a = int(input())\n    A.append(a)\n\npoints = [k] * n\nfor a in A:\n    points[a - 1] += 1\n    for i in range(n):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(n):\n    if points[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K]*N\n\nfor a in A:\n    points[a-1] += 1\n    for i in range(N):\n        if i == a-1:\n            continue\n        points[i] -= 1\n\nfor p in points:\n    if p > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#import sys\n#sys.setrecursionlimit(10**6)\n\ndef main():\n    n, k, q = map(int, input().split())\n    a = [int(input()) for i in range(q)]\n    p = [k] * n\n    for i in range(q):\n        for j in range(n):\n            if j + 1 != a[i]:\n                p[j] -= 1\n    for i in range(n):\n        if p[i] > 0:\n            print('Yes')\n        else:\n            print('No')\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650405554,
  "id": "cmpl-4yqAMGphYXQNhqjopuZzJdI09dAa1",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:59:27.269280 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k, q = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(q):\n    a[int(input()) - 1] += 1\n\nfor i in range(n):\n    if k - q + a[i] > 0:\n        print('Yes')\n    else:\n        print('No')"
}
2022-04-19 21:59:27.269315 REASON stop
2022-04-19 21:59:27.322633 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# ---- solution ----\n\nn, k, q = map(int, input().split())\na = [int(input()) for i in range(q)]\n\nl = [k] * n\nfor i in a:\n    l[i-1] += 1\n\nfor i in l:\n    if i > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-19 21:59:27.322810 REASON stop
2022-04-19 21:59:27.424963 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# input\nN, K, Q = map(int,sys.stdin.readline().split())\nA = []\nfor i in range(Q):\n    A.append(int(sys.stdin.readline()))\n\n# initialization\nscores = [K] * N\n\n# main\nfor i in range(Q):\n    scores[A[i]-1] -= 1\n    if scores[A[i]-1] <= 0:\n        scores[A[i]-1] = 0\n\n# output\nfor i in range(N):\n    if scores[i] > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-19 21:59:27.425105 REASON stop
2022-04-19 21:59:27.519766 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K] * N\nfor a in A:\n    for i in range(N):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(N):\n    if points[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
}
2022-04-19 21:59:27.519933 REASON stop
2022-04-19 21:59:27.608679 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, K, Q = map(int, input().split())\n\naliveList = [K for i in range(N)]\n\nfor i in range(Q):\n    num = int(input())\n    for j in range(N):\n        if j+1 == num:\n            continue\n        aliveList[j] -= 1\n\nfor i in range(N):\n    if aliveList[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
}
2022-04-19 21:59:27.608878 REASON stop
2022-04-19 21:59:27.736993 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k, q = map(int, input().split())\nA = []\nfor i in range(q):\n    a = int(input())\n    A.append(a)\n\npoints = [k] * n\nfor a in A:\n    points[a - 1] += 1\n    for i in range(n):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(n):\n    if points[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")"
}
2022-04-19 21:59:27.737154 REASON stop
2022-04-19 21:59:27.777111 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K]*N\n\nfor a in A:\n    points[a-1] += 1\n    for i in range(N):\n        if i == a-1:\n            continue\n        points[i] -= 1\n\nfor p in points:\n    if p > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-19 21:59:27.777359 REASON stop
2022-04-19 21:59:27.913562 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#import sys\n#sys.setrecursionlimit(10**6)\n\ndef main():\n    n, k, q = map(int, input().split())\n    a = [int(input()) for i in range(q)]\n    p = [k] * n\n    for i in range(q):\n        for j in range(n):\n            if j + 1 != a[i]:\n                p[j] -= 1\n    for i in range(n):\n        if p[i] > 0:\n            print('Yes')\n        else:\n            print('No')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:59:27.913711 REASON stop
