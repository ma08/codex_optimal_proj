["\n\n#import sys\n#sys.setrecursionlimit(10**6)\n\ndef main():\n    n, k, q = map(int, input().split())\n    a = [int(input()) for i in range(q)]\n    p = [k] * n\n    for i in range(q):\n        for j in range(n):\n            if j + 1 != a[i]:\n                p[j] -= 1\n    for i in range(n):\n        if p[i] > 0:\n            print('Yes')\n        else:\n            print('No')\n\nif __name__ == '__main__':\n    main()", "\n\nn, k, q = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(q):\n    a[int(input()) - 1] += 1\n\nfor i in range(n):\n    if k - q + a[i] > 0:\n        print('Yes')\n    else:\n        print('No')", "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K] * N\nfor a in A:\n    for i in range(N):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(N):\n    if points[i] <= 0:\n        print('No')\n    else:\n        print('Yes')", "\n\nN, K, Q = map(int, input().split())\n\naliveList = [K for i in range(N)]\n\nfor i in range(Q):\n    num = int(input())\n    for j in range(N):\n        if j+1 == num:\n            continue\n        aliveList[j] -= 1\n\nfor i in range(N):\n    if aliveList[i] <= 0:\n        print('No')\n    else:\n        print('Yes')", "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\npoints = [K]*N\n\nfor a in A:\n    points[a-1] += 1\n    for i in range(N):\n        if i == a-1:\n            continue\n        points[i] -= 1\n\nfor p in points:\n    if p > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "\n\n# ---- solution ----\n\nn, k, q = map(int, input().split())\na = [int(input()) for i in range(q)]\n\nl = [k] * n\nfor i in a:\n    l[i-1] += 1\n\nfor i in l:\n    if i > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "\n\nimport sys\n\n# input\nN, K, Q = map(int,sys.stdin.readline().split())\nA = []\nfor i in range(Q):\n    A.append(int(sys.stdin.readline()))\n\n# initialization\nscores = [K] * N\n\n# main\nfor i in range(Q):\n    scores[A[i]-1] -= 1\n    if scores[A[i]-1] <= 0:\n        scores[A[i]-1] = 0\n\n# output\nfor i in range(N):\n    if scores[i] > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "\n\nn, k, q = map(int, input().split())\nA = []\nfor i in range(q):\n    a = int(input())\n    A.append(a)\n\npoints = [k] * n\nfor a in A:\n    points[a - 1] += 1\n    for i in range(n):\n        if i != a - 1:\n            points[i] -= 1\n\nfor i in range(n):\n    if points[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")"]