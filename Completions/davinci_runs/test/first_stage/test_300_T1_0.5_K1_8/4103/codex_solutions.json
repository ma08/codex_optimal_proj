["\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if s[i] == 1:\n            if a < 1:\n                if b < 1:\n                    break\n                b -= 1\n            else:\n                a -= 1\n                b += 1\n        else:\n            if a < 1:\n                if b < 1:\n                    break\n                b -= 1\n            else:\n                a -= 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef solve(n, b, a, s):\n    count = 0\n    while n > 0:\n        if s[n-1] == 1:\n            if b > 0:\n                b -= 1\n                a += 1\n            elif a > 0:\n                a -= 1\n            else:\n                break\n        else:\n            if a > 0:\n                a -= 1\n            elif b > 0:\n                b -= 1\n            else:\n                break\n        count += 1\n        n -= 1\n    return count\n\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    print(solve(n, b, a, s))\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    max_charge = b + a\n    charge = b\n    max_charge_used = 0\n    for i in range(n):\n        if s[i] == 1:\n            if charge < max_charge:\n                charge += 1\n        if charge > 0:\n            charge -= 1\n            max_charge_used += 1\n        else:\n            break\n    print(max_charge_used)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nans = 0\n\n# (b, a)\n# b: battery\n# a: accumulator\n\nbattery = b\naccumulator = a\n\nfor si in s:\n    if si == 1:\n        if battery < b:\n            battery += 1\n            accumulator -= 1\n        elif accumulator < a:\n            accumulator += 1\n        else:\n            battery = b\n            accumulator = a\n    else:\n        if battery > 0:\n            battery -= 1\n        elif accumulator > 0:\n            accumulator -= 1\n        else:\n            break\n    ans += 1\n\nprint(ans)", "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, b, a = map(int, stdin.readline().split())\ns = list(map(int, stdin.readline().split()))\n\nif a == 0:\n    print(b)\n\nelif a == 1:\n    a_ = 0\n    b_ = 0\n    for i in s:\n        if i == 1:\n            a_ += 1\n        else:\n            b_ += 1\n\n    if b_ == 0:\n        print(a_)\n    else:\n        print(1 + min(a_, b_))\n\nelse:\n    z = a + b\n    a_ = 0\n    b_ = 0\n    for i in s:\n        if i == 1:\n            a_ += 1\n        else:\n            b_ += 1\n\n    if b_ == 0:\n        print(a_)\n    else:\n        if a_ <= b:\n            print(a_ + b_)\n        else:\n            a_ -= b\n            b_ -= a_\n            print(a + b_)", "\n\n\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n\n    b_charge = b\n    a_charge = a\n    max_count = 0\n    for i in range(n):\n        if s[i] == 1:\n            if b_charge > 0:\n                b_charge -= 1\n                a_charge += 1\n            elif a_charge > 0:\n                a_charge -= 1\n        else:\n            if b_charge > 0:\n                b_charge -= 1\n            elif a_charge > 0:\n                a_charge -= 1\n            else:\n                break\n        max_count += 1\n\n    print(max_count)\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, b, a = map(int, sys.stdin.readline().split())\n    s = map(int, sys.stdin.readline().split())\n    l = 0\n    for i in range(n):\n        if s[i] == 1:\n            if b < a:\n                b += 1\n            else:\n                a -= 1\n        if a > 0:\n            a -= 1\n        elif b > 0:\n            b -= 1\n        else:\n            break\n        l += 1\n    print l\n\nif __name__ == '__main__':\n    main()", "\n\ndef rob_battery_solar(n, b, a, s):\n    i = 0\n    charge = [b, a]\n    while i < n:\n        if s[i] == 1:\n            if charge[0] > 0:\n                charge[0] -= 1\n                charge[1] += 1\n                if charge[1] > a:\n                    charge[1] -= 1\n            elif charge[1] > 0:\n                charge[1] -= 1\n        else:\n            if charge[0] > 0:\n                charge[0] -= 1\n            else:\n                charge[1] -= 1\n        i += 1\n        if charge[0] < 0 or charge[1] < 0:\n            break\n    return i\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\nprint(rob_battery_solar(n, b, a, s))"]