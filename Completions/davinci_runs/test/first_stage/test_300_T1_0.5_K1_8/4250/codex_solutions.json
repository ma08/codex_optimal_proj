["\n\ndef main():\n    n, k = map(int, input().split())\n    s = list(map(int, input().split()))\n\n    t = [0 for _ in range(k)]\n    for i in range(k):\n        t[i] = max(s)\n        s.remove(t[i])\n\n    print(\" \".join(map(str, t)))\n\n\nmain()", "\n\nimport numpy as np\n\ndef solution(n, k, s):\n    d = {}\n    for i in range(n):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n    d = sorted(d.items(), key = lambda x: x[1], reverse = True)\n    t = []\n    for i in range(k):\n        t.append(d[i][0])\n    return t\n\nn, k = [int(x) for x in input().split()]\ns = [int(x) for x in input().split()]\n\nt = solution(n, k, s)\nprint(*t)", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    d = dict()\n    for x in s:\n        if x in d:\n            d[x] += 1\n        else:\n            d[x] = 1\n    t = []\n    for i in range(k):\n        m = 0\n        for x in d:\n            if d[x] > m:\n                m = d[x]\n                y = x\n        t.append(y)\n        d[y] = 0\n    print(' '.join([str(x) for x in t]))\n\nmain()", "\n\n# Solution\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\ncounts = {}\nfor x in s:\n    if x in counts:\n        counts[x] += 1\n    else:\n        counts[x] = 1\n\nsorted_counts = sorted(counts.items(), key=lambda kv: kv[1], reverse=True)\n\nfor i in range(k):\n    print(sorted_counts[i][0], end=' ')", "\n\n#https://codeforces.com/gym/101958/problem/C\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nfrom collections import Counter\n\nc = Counter(s)\n\nfor i in range(k):\n    print(c.most_common()[0][0])\n    c[c.most_common()[0][0]] -= 1", "\n\nimport sys\n\ndef main():\n    input_list = sys.stdin.readlines()\n    #input_list = [\"15 2\\n\", \"1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\"]\n    #input_list = [\"10 4\\n\", \"1 3 1 3 10 3 7 7 12 3\\n\"]\n    #input_list = [\"7 3\\n\", \"1 2 3 2 4 3 1\\n\"]\n    input_list = [x.strip() for x in input_list]\n    input_list = [[int(y) for y in x.split()] for x in input_list]\n    print(input_list)\n    #print(input_list)\n    n = input_list[0][0]\n    k = input_list[0][1]\n    s = input_list[1]\n    #print(n, k, s)\n    #print(s)\n    d = {}\n    for i in s:\n        if i in d: d[i] += 1\n        else: d[i] = 1\n    #print(d)\n    d = sorted(d.items(), key = lambda x: x[1], reverse = True)\n    #print(d)\n    answer = [d[i][0] for i in range(k)]\n    print(' '.join(str(x) for x in answer))\n\nmain()", "\n\ndef find_max_indices(l, max_size):\n    l_size = len(l)\n    indices = []\n    for i in range(l_size):\n        if len(indices) < max_size:\n            indices.append(i)\n        else:\n            min_index = min(indices)\n            if l[i] > l[min_index]:\n                indices.remove(min_index)\n                indices.append(i)\n    return indices\n\n\ndef find_max_indices_dict(l, max_size):\n    l_size = len(l)\n    indices = {}\n    for i in range(l_size):\n        if len(indices) < max_size:\n            indices[i] = l[i]\n        else:\n            min_index = min(indices, key=indices.get)\n            if l[i] > indices[min_index]:\n                del indices[min_index]\n                indices[i] = l[i]\n    return indices\n\n\ndef find_max_indices_dict_sorted(l, max_size):\n    l_size = len(l)\n    indices = {}\n    for i in range(l_size):\n        if len(indices) < max_size:\n            indices[i] = l[i]\n        else:\n            for j in sorted(indices, key=indices.get):\n                if l[i] > indices[j]:\n                    del indices[j]\n                    indices[i] = l[i]\n                    break\n    return indices\n\n\ndef find_max_indices_dict_sorted_bisect(l, max_size):\n    l_size = len(l)\n    indices = {}\n    for i in range(l_size):\n        if len(indices) < max_size:\n            indices[i] = l[i]\n        else:\n            for j in sorted(indices, key=indices.get):\n                if l[i] > indices[j]:\n                    del indices[j]\n                    indices[i] = l[i]\n                    break\n    return indices\n\n\ndef find_max_indices_dict_sorted_bisect_bis(l, max_size):\n    l_size = len(l)\n    indices = {}\n    for i in range(l_size):\n        if len(indices) < max_size:\n            indices[i] = l[i]\n        else:\n            for j in sorted(indices, key=indices.get):\n                if l[i] > indices[j]:\n                    del indices[j]\n                    indices[i] = l[i]\n                    break\n    return indices\n\nif __name__ == \"__main__\":\n    n, k = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_count = Counter(s)\n    s_max = max(s_count.values())\n    s_max_indices = find_max_indices(s_count.values(), k)\n    s_max_indices_dict = find_max_indices_dict(s_count.values(), k)\n    s_max_indices_dict_sorted = find_max_indices_dict_sorted(s_count.values(), k)\n    s_max_indices_dict_sorted_bisect = find_max_indices_dict_sorted_bisect(s_count.values(), k)\n    s_max_indices_dict_sorted_bisect_bis = find_max_indices_dict_sorted_bisect_bis(s_count.values(), k)\n    print(s_max_indices_dict_sorted_bisect_bis)", "\n\n\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    dp = [0 for i in range(200001)]\n    for i in range(n):\n        dp[a[i]] += 1\n    for i in range(1, 200001):\n        dp[i] += dp[i-1]\n    ans = []\n    for i in range(k):\n        if dp[a[n-i-1]] - dp[a[n-i-1]-1] > 0:\n            ans.append(a[n-i-1])\n            dp[a[n-i-1]] -= 1\n        else:\n            j = n-i-1\n            while j >= 0 and dp[a[j]] - dp[a[j]-1] == 0:\n                j -= 1\n            ans.append(a[j])\n            dp[a[j]] -= 1\n    print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()"]