["", "\n\ndef main():\n\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    ans = 0\n    suma = 0\n    s = set()\n\n    for i in range(n):\n        suma += a[i]\n        if suma == 0:\n            ans += 1\n            suma = 1\n        elif suma in s:\n            ans += 1\n            suma = 1\n            s.clear()\n        s.add(suma)\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    res = 0\n    for i in range(1, n):\n        if a[i] * a[i - 1] < 0:\n            res += 1\n    print(res)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    \"\"\"\n    This is a template. You can write code here.\n    \"\"\"\n\n    pass\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve():\n    l = 0\n    r = 1\n    s = a[l]\n    count = 0\n    while r < n:\n        if s == 0:\n            count += 1\n            l = r\n            r += 1\n            s = a[l]\n        elif s > 0:\n            if a[r] < 0:\n                r += 1\n                s += a[r - 1]\n            else:\n                while s > 0:\n                    s -= a[l]\n                    l += 1\n        else:\n            if a[r] > 0:\n                r += 1\n                s += a[r - 1]\n            else:\n                while s < 0:\n                    s -= a[l]\n                    l += 1\n    return count\n\nprint(solve())", "\nn = int(input())\na = list(map(int, input().split(' ')))\n\ndef get_sum(l, r):\n    return sum(a[l:r])\n\ndef get_sum_to(i):\n    return sum(a[:i+1])\n\ndef get_sum_from(i):\n    return sum(a[i:])\n\ndef get_sum_from_to(l, r):\n    return sum(a[l:r])\n\ndef get_index_of_first_zero_sum_subsegment(l, r):\n    if l >= r:\n        return None\n    if l == r - 1:\n        return None\n    if get_sum(l, r) == 0:\n        return (l, r)\n    else:\n        mid = (l + r) // 2\n        left = get_index_of_first_zero_sum_subsegment(l, mid)\n        right = get_index_of_first_zero_sum_subsegment(mid, r)\n        if left is not None:\n            return left\n        elif right is not None:\n            return right\n        else:\n            return None\n\ndef get_index_of_last_zero_sum_subsegment(l, r):\n    if l >= r:\n        return None\n    if l == r - 1:\n        return None\n    if get_sum(l, r) == 0:\n        return (l, r)\n    else:\n        mid = (l + r) // 2\n        left = get_index_of_last_zero_sum_subsegment(l, mid)\n        right = get_index_of_last_zero_sum_subsegment(mid, r)\n        if right is not None:\n            return right\n        elif left is not None:\n            return left\n        else:\n            return None\n\ndef get_index_of_first_zero_sum_subsegment_to(i):\n    return get_index_of_first_zero_sum_subsegment(0, i+1)\n\ndef get_index_of_last_zero_sum_subsegment_from(i):\n    return get_index_of_last_zero_sum_subsegment(i, n)\n\ndef get_index_of_first_zero_sum_subsegment_from_to(l, r):\n    return get_index_of_first_zero_sum_subsegment(l, r)\n\ndef get_index_of_last_zero_sum_subsegment_from_to(l, r):\n    return get_index_of_last_zero_sum_subsegment(l, r)\n\ndef get_result(i):\n    if get_sum_to(i) == 0:\n        return get_result(i-1)\n    if get_sum_from(i) == 0:\n        return get_result(i+1)\n    return i\n\ndef get_result_from_to(l, r):\n    if get_sum_from_to(l, r) == 0:\n        a = get_index_of_first_zero_sum_subsegment_from_to(l, r)\n        b = get_index_of_last_zero_sum_subsegment_from_to(l, r)\n        if a is None or b is None:\n            return None\n        if a[0] == 0 and b[1] == n:\n            return 0\n        else:\n            return 1 + get_result_from_to(a[0], b[1])\n    else:\n        return 0\n\n\nresult = get_result_from_to(0, n)\n\nprint(result)", "\n\ndef main():\n    \"\"\"\n    1. Read the first line, which is the length of the array.\n    2. Read the second line, which is the array.\n    3. For each element in the array, check if it has a subarray sum of zero.\n    4. If so, add 1 to the count\n    5. Return the count.\n    \"\"\"\n    n = int(input())\n    array = list(map(int, input().split()))\n    count = 0\n    for i in range(len(array)):\n        for j in range(i+1, len(array)+1):\n            if sum(array[i:j]) == 0:\n                count += 1\n                break\n    print(count)\n\nif __name__ == '__main__':\n    main()"]