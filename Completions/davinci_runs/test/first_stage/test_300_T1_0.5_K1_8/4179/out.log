2022-04-19 22:44:55.444005 """
There are N pieces of source code. The characteristics of the i-th code is represented by M integers A_{i1}, A_{i2}, ..., A_{iM}.
Additionally, you are given integers B_1, B_2, ..., B_M and C.
The i-th code correctly solves this problem if and only if A_{i1} B_1 + A_{i2} B_2 + ... + A_{iM} B_M + C > 0.
Among the N codes, find the number of codes that correctly solve this problem.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N, M \leq 20
 - -100 \leq A_{ij} \leq 100
 - -100 \leq B_i \leq 100
 - -100 \leq C \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N M C
B_1 B_2 ... B_M
A_{11} A_{12} ... A_{1M}
A_{21} A_{22} ... A_{2M}
\vdots
A_{N1} A_{N2} ... A_{NM}

-----Output-----
Print the number of codes among the given N codes that correctly solve this problem.

-----Sample Input-----
2 3 -10
1 2 3
3 2 1
1 2 2

-----Sample Output-----
1

Only the second code correctly solves this problem, as follows:
 - Since 3 \times 1 + 2 \times 2 + 1 \times 3 + (-10) = 0 \leq 0, the first code does not solve this problem.
 - 1 \times 1 + 2 \times 2 + 2 \times 3 + (-10) = 1 > 0, the second code solves this problem.
"""
2022-04-19 22:44:55.444018 --------------------------
2022-04-19 22:44:55.444130 using api key sourya
2022-04-19 22:45:08.745814 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(n)]\nans = 0\nfor i in range(n):\n    if sum(map(lambda x, y: x * y, a[i], b)) + c > 0:\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# output the number of codes that correctly solve this problem\n\n# input\nn, m, c = map(int, input().split())\nb_list = list(map(int, input().split()))\na_list = []\nfor i in range(n):\n    a_list.append(list(map(int, input().split())))\n\n# calc\ncount = 0\nfor a in a_list:\n    if sum([a[i]*b_list[i] for i in range(m)]) + c > 0:\n        count += 1\n\n# output\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = []\n    for i in range(n):\n        a.append(list(map(int, sys.stdin.readline().split())))\n\n    count = 0\n    for i in range(n):\n        s = 0\n        for j in range(m):\n            s += a[i][j] * b[j]\n        if s + c > 0:\n            count += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, m, c = map(int, sys.stdin.readline().split())\nb = list(map(int, sys.stdin.readline().split()))\n\ncount = 0\nfor i in range(n):\n    a = list(map(int, sys.stdin.readline().split()))\n    sum = c\n    for j in range(m):\n        sum += a[j] * b[j]\n    if sum > 0:\n        count += 1\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    n, m, c = [int(x) for x in sys.stdin.readline().split()]\n    b_list = [int(x) for x in sys.stdin.readline().split()]\n    a_list = []\n    for i in range(n):\n        a_list.append([int(x) for x in sys.stdin.readline().split()])\n    # Solve\n    ans = 0\n    for i in range(n):\n        ai_dot_b = 0\n        for j in range(m):\n            ai_dot_b += a_list[i][j] * b_list[j]\n        if ai_dot_b + c > 0:\n            ans += 1\n    # Print\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(N):\n    result = 0\n    for j in range(M):\n        result += A[i][j] * B[j]\n    result += C\n    if result > 0:\n        count += 1\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(N):\n    if sum([A[i][j]*B[j] for j in range(M)]) + C > 0:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n\n    ans = 0\n    for i in range(n):\n        if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650408295,
  "id": "cmpl-4yqsZ0GayPOY3NjNYLnqqGAI9LEzZ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:45:08.746175 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(n)]\nans = 0\nfor i in range(n):\n    if sum(map(lambda x, y: x * y, a[i], b)) + c > 0:\n        ans += 1\nprint(ans)"
}
2022-04-19 22:45:08.746213 REASON stop
2022-04-19 22:45:08.749245 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# output the number of codes that correctly solve this problem\n\n# input\nn, m, c = map(int, input().split())\nb_list = list(map(int, input().split()))\na_list = []\nfor i in range(n):\n    a_list.append(list(map(int, input().split())))\n\n# calc\ncount = 0\nfor a in a_list:\n    if sum([a[i]*b_list[i] for i in range(m)]) + c > 0:\n        count += 1\n\n# output\nprint(count)"
}
2022-04-19 22:45:08.749374 REASON stop
2022-04-19 22:45:08.749945 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = []\n    for i in range(n):\n        a.append(list(map(int, sys.stdin.readline().split())))\n\n    count = 0\n    for i in range(n):\n        s = 0\n        for j in range(m):\n            s += a[i][j] * b[j]\n        if s + c > 0:\n            count += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:45:08.750028 REASON stop
2022-04-19 22:45:08.779522 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, m, c = map(int, sys.stdin.readline().split())\nb = list(map(int, sys.stdin.readline().split()))\n\ncount = 0\nfor i in range(n):\n    a = list(map(int, sys.stdin.readline().split()))\n    sum = c\n    for j in range(m):\n        sum += a[j] * b[j]\n    if sum > 0:\n        count += 1\nprint(count)"
}
2022-04-19 22:45:08.779666 REASON stop
2022-04-19 22:45:08.780801 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    n, m, c = [int(x) for x in sys.stdin.readline().split()]\n    b_list = [int(x) for x in sys.stdin.readline().split()]\n    a_list = []\n    for i in range(n):\n        a_list.append([int(x) for x in sys.stdin.readline().split()])\n    # Solve\n    ans = 0\n    for i in range(n):\n        ai_dot_b = 0\n        for j in range(m):\n            ai_dot_b += a_list[i][j] * b_list[j]\n        if ai_dot_b + c > 0:\n            ans += 1\n    # Print\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:45:08.780901 REASON stop
2022-04-19 22:45:08.804925 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(N):\n    result = 0\n    for j in range(M):\n        result += A[i][j] * B[j]\n    result += C\n    if result > 0:\n        count += 1\nprint(count)"
}
2022-04-19 22:45:08.805103 REASON stop
2022-04-19 22:45:08.811026 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(N):\n    if sum([A[i][j]*B[j] for j in range(M)]) + C > 0:\n        count += 1\n\nprint(count)"
}
2022-04-19 22:45:08.811144 REASON stop
2022-04-19 22:45:08.812171 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n\n    ans = 0\n    for i in range(n):\n        if sum([a[i][j] * b[j] for j in range(m)]) + c > 0:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:45:08.812381 REASON stop
