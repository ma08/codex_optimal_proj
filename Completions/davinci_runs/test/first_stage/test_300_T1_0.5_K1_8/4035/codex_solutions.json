["\n\na, b = map(int, input().split())\n\nif a == b:\n    print(a)\nelse:\n    print(-1)", "\n\ndef main():\n    a, b = list(map(int, input().split()))\n    for i in range(1, 101):\n        if int(i*0.08) == a and int(i*0.1) == b:\n            print(i)\n            exit()\n    print(-1)\n\nif __name__ == '__main__':\n    main()", "\n\n#1\ndef main():\n    a, b = map(int, input().split())\n    for i in range(1, 101):\n        if int(i * 0.08) == a and int(i * 0.1) == b:\n            print(i)\n            exit()\n    print(-1)\n\nif __name__ == '__main__':\n    main()\n\n#2\ndef main():\n    a, b = map(int, input().split())\n    ans = -1\n    for i in range(1, 101):\n        if int(i * 0.08) == a and int(i * 0.1) == b:\n            ans = i\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    a, b = map(int, input().split())\n    for i in range(1, 101):\n        if int(i * 0.08) == a and int(i * 0.1) == b:\n            print(i)\n            sys.exit()\n    print(-1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    if a == b:\n        print(a * math.ceil(a / 0.08))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, 100):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\n\nprint(-1)", "\n\n#-----main()-----\ndef main():\n    #get input\n    a, b = map(int, input().split())\n\n    #to find the price, divide A and B by 0.08 and 0.1, respectively.\n    #to find the minimum price, divide A and B by 0.08 and 0.1, respectively, and find the maximum of these values.\n    #if the maximum is less than or equal to 0, there is no answer.\n    #if the maximum is greater than 0, the minimum price is the maximum value.\n    max_price = max(a / 0.08, b / 0.1)\n    if max_price <= 0:\n        print(-1)\n    else:\n        print(int(max_price))\n\nif __name__ == '__main__':\n    main()"]