["\n\nfrom collections import Counter\n\ns = input()\nt = input()\n\ns_count = Counter(s)\nt_count = Counter(t)\n\nfor k, v in t_count.items():\n    if k not in s_count:\n        print(len(t))\n        exit()\n    else:\n        s_count[k] -= v\n\nprint(sum(map(abs, s_count.values())))", "\n\ndef main():\n    s = input()\n    t = input()\n    n = len(s)\n    m = len(t)\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n    for i in range(n+1):\n        for j in range(m+1):\n            if i == 0:\n                dp[i][j] = j\n            elif j == 0:\n                dp[i][j] = i\n            elif s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = 1 + min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1])\n    print(dp[n][m])\n\nif __name__ == \"__main__\":\n    main()", "\n\n# \u6587\u5b57\u5217\u3092\u6bd4\u8f03\u3057\u3066\u3001\u9055\u3046\u6587\u5b57\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n# \u305d\u306e\u5f8c\u3001\u6587\u5b57\u6570\u304c\u9055\u3046\u5834\u5408\u306f\u3001\u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3001\u6700\u5f8c\u306b\u8db3\u3059\n\n# \u5165\u529b\nS = input()\nT = input()\n\n# \u6587\u5b57\u5217\u306e\u9577\u3055\nS_len = len(S)\nT_len = len(T)\n\n# \u6587\u5b57\u5217\u306e\u6bd4\u8f03\ncount = 0\nfor i in range(S_len):\n    if S[i] != T[i]:\n        count += 1\n\n# \u6587\u5b57\u5217\u306e\u9577\u3055\u304c\u9055\u3046\u5834\u5408\nif S_len != T_len:\n    count += S_len - T_len\n\n# \u51fa\u529b\nprint(count)", "\n\ndef main():\n  S = input()\n  T = input()\n  s_len = len(S)\n  t_len = len(T)\n  dp = [[0 for _ in range(s_len+1)] for _ in range(t_len+1)]\n  for i in range(1, t_len+1):\n    for j in range(1, s_len+1):\n      if T[i-1] == S[j-1]:\n        dp[i][j] = dp[i-1][j-1] + 1\n      else:\n        dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n  print(t_len - dp[t_len][s_len])\n\nif __name__ == \"__main__\":\n  main()", "\n\nif __name__ == \"__main__\":\n    S = input()\n    T = input()\n    count = 0\n    for i in range(len(S)):\n        if S[i] != T[i]:\n            count += 1\n    print(count)", "\n\nS = input()\nT = input()\n\nfor i in range(len(S) - len(T) + 1):\n    if T == S[i:i + len(T)]:\n        print(len(S) - len(T))\n        exit()\n\nprint(len(S))", "\n\n# My Answer\ndef minimum_change_number(s, t):\n    s_len = len(s)\n    t_len = len(t)\n    dp = [[0 for _ in range(t_len+1)] for _ in range(s_len+1)]\n    for i in range(s_len+1):\n        for j in range(t_len+1):\n            if i == 0:\n                dp[i][j] = j\n            elif j == 0:\n                dp[i][j] = i\n            elif s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1\n    return dp[s_len][t_len]\n\nif __name__ == \"__main__\":\n    s = input()\n    t = input()\n    print(minimum_change_number(s, t))", "\n\nimport sys\n\ndef main():\n\ts = sys.stdin.readline().strip()\n\tt = sys.stdin.readline().strip()\n\t\n\tcount = 0\n\t\n\tfor i in range(len(t)):\n\t\tif s[i] != t[i]:\n\t\t\tcount += 1\n\t\t\t\n\tprint(count)\n\t\nif __name__ == '__main__':\n\tmain()"]