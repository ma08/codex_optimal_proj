["\n\nn, k = map(int, input().split())\nprices = list(map(int, input().split()))\n\nprices.sort()\n\nprint(sum(prices[:k]))", "\n\n\ndef main():\n    n, k = map(int, input().split())\n    prices = [int(x) for x in input().split()]\n    prices.sort()\n    print(sum(prices[:k]))\n\n\nif __name__ == '__main__':\n    main()", "\n\nN, K = map(int, input().split())\nprices = sorted(list(map(int, input().split())))\n\nprint(sum(prices[:K]))", "\n\nimport sys\n\ndef main():\n    # Read the number of items and the number of items to choose\n    N, K = sys.stdin.readline().split()\n    N = int(N)\n    K = int(K)\n\n    # Read the price of each item\n    prices = sys.stdin.readline().split()\n    prices = [int(p) for p in prices]\n\n    # Sort the prices in ascending order\n    prices.sort()\n\n    # The minimum total price is the sum of the K cheapest items\n    print(sum(prices[:K]))\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\n\nnum_fruits, num_kinds = map(int, stdin.readline().split())\nprices = list(map(int, stdin.readline().split()))\n\nprices.sort()\nprint(sum(prices[:num_kinds]))", "\n\ndef main():\n    n, k = map(int, input().split())\n    p = list(map(int, input().split()))\n    p.sort()\n    print(sum(p[:k]))\n\nif __name__ == '__main__':\n    main()", "\n\n# read the input\nn, k = map(int, input().split())\np = list(map(int, input().split()))\n\n# sort the prices\np.sort()\n\n# get the first k prices\nminimum = sum(p[:k])\n\n# print the result\nprint(minimum)", "\n\ndef main():\n    N, K = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    p.sort()\n    print(sum(p[:K]))\n\nif __name__ == '__main__':\n    main()"]