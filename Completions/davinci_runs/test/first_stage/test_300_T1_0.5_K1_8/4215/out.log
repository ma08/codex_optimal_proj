2022-04-19 23:03:24.387872 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:03:24.387885 --------------------------
2022-04-19 23:03:24.387991 using api key sourya
2022-04-19 23:03:24.529394 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-19 23:03:29.534799 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:03:29.534834 --------------------------
2022-04-19 23:03:29.534954 using api key sourya
2022-04-19 23:03:29.571579 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-19 23:03:39.576910 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:03:39.576948 --------------------------
2022-04-19 23:03:39.577069 using api key derek
2022-04-19 23:03:39.614396 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-19 23:03:59.634791 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:03:59.634829 --------------------------
2022-04-19 23:03:59.634952 using api key sourya
2022-04-19 23:03:59.671700 in retry 3 40 <class 'Exception'>, Retrying in 40 seconds...
2022-04-19 23:04:39.712117 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:04:39.712154 --------------------------
2022-04-19 23:04:39.712304 using api key sourya
2022-04-19 23:04:39.749330 in retry 2 80 <class 'Exception'>, Retrying in 80 seconds...
2022-04-19 23:05:59.782494 """
The window of Takahashi's room has a width of A. There are two curtains hung over the window, each of which has a horizontal length of B. (Vertically, the curtains are long enough to cover the whole window.)
We will close the window so as to minimize the total horizontal length of the uncovered part of the window.
Find the total horizontal length of the uncovered parts of the window then.

-----Constraints-----
 - 1 \leq A \leq 100
 - 1 \leq B \leq 100
 - A and B are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the total horizontal length of the uncovered parts of the window.

-----Sample Input-----
12 4

-----Sample Output-----
4

We have a window with a horizontal length of 12, and two curtains, each of length 4, that cover both ends of the window, for example. The uncovered part has a horizontal length of 4.
"""
2022-04-19 23:05:59.782534 --------------------------
2022-04-19 23:05:59.782692 using api key gabby
2022-04-19 23:06:16.063206 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u3001\u30c6\u30b9\u30c8\u7528\u306e\u6a19\u6e96\u51fa\u529b\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n# \u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3001\u6a19\u6e96\u5165\u529b\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u63d0\u51fa\u6642\u306b\u306f\u3001\u6a19\u6e96\u5165\u529b\u3092\u5916\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u3001\u6a19\u6e96\u51fa\u529b\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n# \u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3001\u6a19\u6e96\u5165\u529b\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u63d0\u51fa\u6642\u306b\u306f\u3001\u6a19\u6e96\u5165\u529b\u3092\u5916\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\na, b = map(int, input().split())\n\n# Write your code here\nprint(a - b)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\na, b = map(int, input().split())\nprint(a - b) if a >= 2 * b else print(0)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nA, B = map(int, input().split())\nprint(A - B if A >= B * 2 else A)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef solve(a, b):\n    return abs(a-b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(solve(a, b))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\na, b = input().split(\" \")\nprint(int(a) - int(b))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().split())\nprint(a - b)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# read input\na, b = list(map(int, input().split()))\n\n# check if any part of the window is uncovered\nif a <= b:\n    print(0)\nelse:\n    print(a-b)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().split())\n\nprint(A - B)"
    }
  ],
  "created": 1650409559,
  "id": "cmpl-4yrCxXLWZ2ufeO1RvHoEdEi2MS4rl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:06:16.063664 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u3001\u30c6\u30b9\u30c8\u7528\u306e\u6a19\u6e96\u51fa\u529b\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n# \u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3001\u6a19\u6e96\u5165\u529b\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u63d0\u51fa\u6642\u306b\u306f\u3001\u6a19\u6e96\u5165\u529b\u3092\u5916\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u308a\u3001\u6a19\u6e96\u51fa\u529b\u3092\u51fa\u529b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n# \u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3001\u6a19\u6e96\u5165\u529b\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# \u63d0\u51fa\u6642\u306b\u306f\u3001\u6a19\u6e96\u5165\u529b\u3092\u5916\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\na, b = map(int, input().split())\n\n# Write your code here\nprint(a - b)"
}
2022-04-19 23:06:16.063713 REASON stop
2022-04-19 23:06:16.064457 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\na, b = map(int, input().split())\nprint(a - b) if a >= 2 * b else print(0)"
}
2022-04-19 23:06:16.064528 REASON stop
2022-04-19 23:06:16.065109 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nA, B = map(int, input().split())\nprint(A - B if A >= B * 2 else A)"
}
2022-04-19 23:06:16.065175 REASON stop
2022-04-19 23:06:16.082237 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef solve(a, b):\n    return abs(a-b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(solve(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:16.082388 REASON stop
2022-04-19 23:06:16.090651 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\na, b = input().split(\" \")\nprint(int(a) - int(b))"
}
2022-04-19 23:06:16.090770 REASON stop
2022-04-19 23:06:16.095238 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().split())\nprint(a - b)"
}
2022-04-19 23:06:16.095398 REASON stop
2022-04-19 23:06:16.096136 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# read input\na, b = list(map(int, input().split()))\n\n# check if any part of the window is uncovered\nif a <= b:\n    print(0)\nelse:\n    print(a-b)"
}
2022-04-19 23:06:16.096327 REASON stop
2022-04-19 23:06:16.099388 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().split())\n\nprint(A - B)"
}
2022-04-19 23:06:16.099481 REASON stop
