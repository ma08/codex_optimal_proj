["\nn,m = map(int,input().split())\na = [0]*m\nfor i in range(m):\n    a[i] = int(input())\n\n# \u521d\u671f\u5024\ndp = [0]*(n+1)\ndp[0] = 1\n\nfor i in range(1,n+1):\n    if i in a:\n        dp[i] = 0\n    else:\n        if i == 1:\n            dp[i] = 1\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[n])", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = set(map(int, [input() for _ in range(m)]))\n    dp = [1] + [0] * (n)\n    for i in range(n):\n        if i + 1 not in a:\n            dp[i + 1] += dp[i]\n        if i + 2 not in a:\n            dp[i + 2] += dp[i]\n    print(dp[-1] % 1000000007)\n\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(m)]\n\n    # initialize\n    dp = [0] * (n + 1)\n    dp[0] = 1\n\n    for i in range(1, n + 1):\n        if i in broken_steps:\n            continue\n        dp[i] = dp[i - 1] + dp[i - 2]\n\n    print(dp[n] % 1000000007)\n\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\na = list(map(int, [input() for _ in range(M)]))\n\n# 0-origin\u306b\u3059\u308b\na = [i-1 for i in a]\n\ndp = [0 for _ in range(N+1)]\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N+1):\n    if i in a:\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])", "\nn,m=map(int,input().split())\na=list(map(int,input().split()))\ndp=[0]*(n+1)\ndp[0]=1\ndp[1]=1\nfor i in range(2,n+1):\n    if i not in a:\n        dp[i]=(dp[i-1]+dp[i-2])%1000000007\nprint(dp[n])", "\n\nimport sys\n\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    broken_steps = set(map(int, sys.stdin.read().split()))\n    dp = [0] * (N + 1)\n    dp[0] = 1\n    for i in range(1, N + 1):\n        if i - 1 not in broken_steps:\n            dp[i] += dp[i - 1]\n        if i - 2 not in broken_steps:\n            dp[i] += dp[i - 2]\n        dp[i] %= 1000000007\n    print(dp[-1])\n\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\na = list(map(int, (input() for _ in range(M))))\n\ndp = [0] * (N+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, N+1):\n    if i in a:\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])", "\n\nN, M = map(int, input().split())\n\n# a_1, a_2, a_3, ..., a_M \u3092\u8aad\u307f\u8fbc\u3080\n# \u6ce8\u610f\uff1aa_1, a_2, a_3, ..., a_M \u306f\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\nbroken_steps = sorted(int(input()) for _ in range(M))\n\n# dp[n]: n\u968e\u76ee\u307e\u3067\u306e\u79fb\u52d5\u65b9\u6cd5\u306e\u7dcf\u6570\n# dp[0] = 1\n# dp[1] = 1\n# dp[2] = 2\n# dp[3] = 3\n# dp[4] = 5\n# dp[5] = 8\n# dp[6] = 13\ndp = [0] * (N + 1)\ndp[0] = 1\n\nfor i in range(0, N):\n    if i + 1 <= N:\n        dp[i + 1] += dp[i]\n    if i + 2 <= N:\n        dp[i + 2] += dp[i]\n\n# broken_steps \u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30b9\u30c6\u30c3\u30d7\u3092dp\u304b\u3089\u5f15\u304f\nfor step in broken_steps:\n    dp[step] = 0\n\n# dp[N]\u3092\u51fa\u529b\nprint(dp[N] % (10 ** 9 + 7))"]