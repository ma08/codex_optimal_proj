["\n\nfrom collections import defaultdict\n\nn       = int(input())\nstrings = [input() for _ in range(n)]\n\n# sort strings by length\nstrings.sort(key=lambda x: len(x))\n\n# sort strings by lexicographical order\nstrings.sort()\n\n# check if strings can be reordered\nfor i in range(n - 1):\n    if strings[i] not in strings[i + 1]:\n        print(\"NO\")\n        quit()\n\nprint(\"YES\")\nprint(\"\\n\".join(strings))", "\n\nn = int(input())\nstrings = []\nfor i in range(n):\n    strings.append(input())\nstrings.sort()\n\nfor i in range(n-1):\n    if not strings[i] in strings[i+1]:\n        print(\"NO\")\n        exit()\n\nprint(\"YES\")\nprint(\"\\n\".join(strings))", "\n\n# SOLUTION\n\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nif n == 1:\n    print('YES')\n    print(s[0])\nelse:\n    s = sorted(s, key = len)\n    for i in range(n-1):\n        if s[i] not in s[i+1]:\n            print('NO')\n            break\n    else:\n        print('YES')\n        for i in s:\n            print(i)", "\n\ndef main():\n    n = int(input())\n    s = []\n    for _ in range(n):\n        s.append(input())\n    s.sort(key=len)\n    for i in range(n):\n        for j in range(i+1, n):\n            if s[i] not in s[j]:\n                print('NO')\n                return\n    print('YES')\n    for i in s:\n        print(i)\n\nmain()", "\n\n# Solution\n\ndef solve(n, arr):\n    arr.sort(key=len)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[i] not in arr[j]:\n                return 'NO'\n    return 'YES\\n' + '\\n'.join(arr)\n\n\nn = int(input())\narr = [input() for _ in range(n)]\nprint(solve(n, arr))", "\n\n\ndef main():\n    n = int(input())\n    strings = [input() for _ in range(n)]\n    strings.sort(key=lambda s: len(s), reverse=True)\n    for i in range(1, n):\n        if not strings[i].startswith(strings[i - 1]):\n            return print(\"NO\")\n    print(\"YES\")\n    print(\"\\n\".join(strings))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution 1\n# def is_substring(string1, string2):\n#     if len(string1) > len(string2):\n#         return False\n#     for i in range(len(string2) - len(string1) + 1):\n#         if string1 == string2[i:i+len(string1)]:\n#             return True\n#     return False\n#\n#\n# def is_substring_2(string1, string2):\n#     if len(string1) > len(string2):\n#         return False\n#     return string1 in string2\n#\n#\n# if __name__ == \"__main__\":\n#     n = int(input())\n#     strings = []\n#     for _ in range(n):\n#         strings.append(input())\n#\n#     for i in range(n):\n#         for j in range(i+1, n):\n#             if is_substring(strings[i], strings[j]):\n#                 strings[i], strings[j] = strings[j], strings[i]\n#\n#     for i in range(n):\n#         for j in range(i+1, n):\n#             if not is_substring(strings[i], strings[j]):\n#                 print(\"NO\")\n#                 exit()\n#     print(\"YES\")\n#     for s in strings:\n#         print(s)\n\n# Solution 2\n# def is_substring(string1, string2):\n#     if len(string1) > len(string2):\n#         return False\n#     for i in range(len(string2) - len(string1) + 1):\n#         if string1 == string2[i:i+len(string1)]:\n#             return True\n#     return False\n#\n#\n# if __name__ == \"__main__\":\n#     n = int(input())\n#     strings = []\n#     for _ in range(n):\n#         strings.append(input())\n#\n#     for i in range(n):\n#         for j in range(i+1, n):\n#             if is_substring(strings[i], strings[j]):\n#                 strings[i], strings[j] = strings[j], strings[i]\n#\n#     for i in range(n):\n#         for j in range(i+1, n):\n#             if not is_substring(strings[i], strings[j]):\n#                 print(\"NO\")\n#                 exit()\n#     print(\"YES\")\n#     for s in strings:\n#         print(s)\n\n# Solution 3\ndef is_substring(string1, string2):\n    if len(string1) > len(string2):\n        return False\n    for i in range(len(string2) - len(string1) + 1):\n        if string1 == string2[i:i+len(string1)]:\n            return True\n    return False\n\n\ndef is_substring_2(string1, string2):\n    if len(string1) > len(string2):\n        return False\n    return string1 in string2\n\n\ndef is_substring_3(string1, string2):\n    if len(string1) > len(string2):\n        return False\n    return string2.startswith(string1)\n\n\ndef is_substring_4(string1, string2):\n    if len(string1) > len(string2):\n        return False\n    return string2.endswith(string1)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    strings = []\n    for _ in range(n):\n        strings.append(input())\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if is_substring_4(strings[i], strings[j]):\n                strings[i], strings[j] = strings[j], strings[i]\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if not is_substring_3(strings[i], strings[j]):\n                print(\"NO\")\n                exit()\n    print(\"YES\")\n    for s in strings:\n        print(s)", "\n\n\ndef main():\n    n = int(input())\n    strings = []\n    for x in range(n):\n        strings.append(input())\n    strings.sort(key=lambda s: len(s))\n\n    for i in range(n):\n        for j in range(i):\n            if strings[i].find(strings[j]) != 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n\n\nif __name__ == \"__main__\":\n    main()"]