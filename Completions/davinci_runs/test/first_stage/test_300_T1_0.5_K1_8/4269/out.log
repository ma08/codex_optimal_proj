2022-04-19 23:29:47.319534 """
The door of Snuke's laboratory is locked with a security code.
The security code is a 4-digit number. We say the security code is hard to enter when it contains two consecutive digits that are the same.
You are given the current security code S. If S is hard to enter, print Bad; otherwise, print Good.

-----Constraints-----
 - S is a 4-character string consisting of digits.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
If S is hard to enter, print Bad; otherwise, print Good.

-----Sample Input-----
3776

-----Sample Output-----
Bad

The second and third digits are the same, so 3776 is hard to enter.
"""
2022-04-19 23:29:47.319544 --------------------------
2022-04-19 23:29:47.319646 using api key derek
2022-04-19 23:30:05.353291 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print('Bad')\nelse:\n    print('Good')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Get input from user\nS = input()\n\n# Compare adjacent digits\nfor i in range(0, 3):\n    if S[i] == S[i+1]:\n        print(\"Bad\")\n        sys.exit()\n\nprint(\"Good\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nS = sys.stdin.readline().rstrip()\n\nif S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline()\n    S = S.strip()\n    if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    code = input()\n    if code[0] == code[1] or code[1] == code[2] or code[2] == code[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#1\nS = input()\nif S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n\n#2\nS = input()\nprint(\"Bad\" if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] else \"Good\")\n\n#3\nS = input()\nif (S[0] == S[1] or S[1] == S[2] or S[2] == S[3]) == True:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n\n#4\nS = input()\nif (S[0] == S[1] or S[1] == S[2] or S[2] == S[3]) == False:\n    print(\"Good\")\nelse:\n    print(\"Bad\")\n\n#5\nS = input()\nprint(\"Bad\" if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] else \"Good\")"
    }
  ],
  "created": 1650410987,
  "id": "cmpl-4yrZzp2R0KaqSbUgOEPAXwcE0DHmL",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:30:05.353611 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print('Bad')\nelse:\n    print('Good')"
}
2022-04-19 23:30:05.353644 REASON stop
2022-04-19 23:30:05.354327 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:30:05.354394 REASON stop
2022-04-19 23:30:05.354856 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Get input from user\nS = input()\n\n# Compare adjacent digits\nfor i in range(0, 3):\n    if S[i] == S[i+1]:\n        print(\"Bad\")\n        sys.exit()\n\nprint(\"Good\")"
}
2022-04-19 23:30:05.354910 REASON stop
2022-04-19 23:30:05.372463 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")"
}
2022-04-19 23:30:05.372597 REASON stop
2022-04-19 23:30:05.378043 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nS = sys.stdin.readline().rstrip()\n\nif S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")"
}
2022-04-19 23:30:05.378161 REASON stop
2022-04-19 23:30:05.379021 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline()\n    S = S.strip()\n    if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:30:05.379102 REASON stop
2022-04-19 23:30:05.379966 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    code = input()\n    if code[0] == code[1] or code[1] == code[2] or code[2] == code[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 23:30:05.380057 REASON stop
2022-04-19 23:30:05.382953 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#1\nS = input()\nif S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n\n#2\nS = input()\nprint(\"Bad\" if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] else \"Good\")\n\n#3\nS = input()\nif (S[0] == S[1] or S[1] == S[2] or S[2] == S[3]) == True:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n\n#4\nS = input()\nif (S[0] == S[1] or S[1] == S[2] or S[2] == S[3]) == False:\n    print(\"Good\")\nelse:\n    print(\"Bad\")\n\n#5\nS = input()\nprint(\"Bad\" if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] else \"Good\")"
}
2022-04-19 23:30:05.383145 REASON stop
