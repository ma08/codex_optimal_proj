2022-04-19 21:59:28.605958 """
You are given a binary matrix $a$ of size $n \times m$. A binary matrix is a matrix where each element is either $0$ or $1$.

You may perform some (possibly zero) operations with this matrix. During each operation you can inverse the row of this matrix or a column of this matrix. Formally, inverting a row is changing all values in this row to the opposite ($0$ to $1$, $1$ to $0$). Inverting a column is changing all values in this column to the opposite.

Your task is to sort the initial matrix by some sequence of such operations. The matrix is considered sorted if the array $[a_{1, 1}, a_{1, 2}, \dots, a_{1, m}, a_{2, 1}, a_{2, 2}, \dots, a_{2, m}, \dots, a_{n, m - 1}, a_{n, m}]$ is sorted in non-descending order.


-----Input-----

The first line of the input contains two integers $n$ and $m$ ($1 \le n, m \le 200$) — the number of rows and the number of columns in the matrix.

The next $n$ lines contain $m$ integers each. The $j$-th element in the $i$-th line is $a_{i, j}$ ($0 \le a_{i, j} \le 1$) — the element of $a$ at position $(i, j)$.


-----Output-----

If it is impossible to obtain a sorted matrix, print "NO" in the first line.

Otherwise print "YES" in the first line. In the second line print a string $r$ of length $n$. The $i$-th character $r_i$ of this string should be '1' if the $i$-th row of the matrix is inverted and '0' otherwise. In the third line print a string $c$ of length $m$. The $j$-th character $c_j$ of this string should be '1' if the $j$-th column of the matrix is inverted and '0' otherwise. If there are multiple answers, you can print any.


-----Examples-----
Input
2 2
1 1
0 1

Output
YES
00
10

Input
3 4
0 0 0 1
0 0 0 0
1 1 1 1

Output
YES
010
0000

Input
3 3
0 0 0
1 0 1
1 1 0

Output
NO
"""
2022-04-19 21:59:28.605983 --------------------------
2022-04-19 21:59:28.606091 using api key gabby
2022-04-19 21:59:28.783201 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-19 21:59:33.788661 """
You are given a binary matrix $a$ of size $n \times m$. A binary matrix is a matrix where each element is either $0$ or $1$.

You may perform some (possibly zero) operations with this matrix. During each operation you can inverse the row of this matrix or a column of this matrix. Formally, inverting a row is changing all values in this row to the opposite ($0$ to $1$, $1$ to $0$). Inverting a column is changing all values in this column to the opposite.

Your task is to sort the initial matrix by some sequence of such operations. The matrix is considered sorted if the array $[a_{1, 1}, a_{1, 2}, \dots, a_{1, m}, a_{2, 1}, a_{2, 2}, \dots, a_{2, m}, \dots, a_{n, m - 1}, a_{n, m}]$ is sorted in non-descending order.


-----Input-----

The first line of the input contains two integers $n$ and $m$ ($1 \le n, m \le 200$) — the number of rows and the number of columns in the matrix.

The next $n$ lines contain $m$ integers each. The $j$-th element in the $i$-th line is $a_{i, j}$ ($0 \le a_{i, j} \le 1$) — the element of $a$ at position $(i, j)$.


-----Output-----

If it is impossible to obtain a sorted matrix, print "NO" in the first line.

Otherwise print "YES" in the first line. In the second line print a string $r$ of length $n$. The $i$-th character $r_i$ of this string should be '1' if the $i$-th row of the matrix is inverted and '0' otherwise. In the third line print a string $c$ of length $m$. The $j$-th character $c_j$ of this string should be '1' if the $j$-th column of the matrix is inverted and '0' otherwise. If there are multiple answers, you can print any.


-----Examples-----
Input
2 2
1 1
0 1

Output
YES
00
10

Input
3 4
0 0 0 1
0 0 0 0
1 1 1 1

Output
YES
010
0000

Input
3 3
0 0 0
1 0 1
1 1 0

Output
NO
"""
2022-04-19 21:59:33.788781 --------------------------
2022-04-19 21:59:33.788946 using api key derek
2022-04-19 22:00:01.090885 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn,m=[int(i) for i in input().split()]\nmat=[]\nfor i in range(n):\n    mat.append([int(j) for j in input().split()])\n\ndef check(mat):\n    for i in range(n):\n        for j in range(m-1):\n            if mat[i][j]>mat[i][j+1]:\n                return False\n    return True\n\ndef row(mat,n):\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j]==1:\n                mat[i][j]=0\n            else:\n                mat[i][j]=1\n    return mat\n\ndef col(mat,m):\n    for i in range(n):\n        for j in range(m):\n            if mat[j][i]==1:\n                mat[j][i]=0\n            else:\n                mat[j][i]=1\n    return mat\n\ndef solve(mat,n,m):\n    for i in range(n):\n        if mat[i][0]==1:\n            mat=row(mat,i)\n    for i in range(m):\n        if mat[0][i]==1:\n            mat=col(mat,i)\n    return mat\n\nif check(mat):\n    print(\"YES\")\n    mat=solve(mat,n,m)\n    ans_row=\"\"\n    ans_col=\"\"\n    for i in range(n):\n        if mat[i][0]==1:\n            ans_row+=\"1\"\n        else:\n            ans_row+=\"0\"\n    for i in range(m):\n        if mat[0][i]==1:\n            ans_col+=\"1\"\n        else:\n            ans_col+=\"0\"\n    print(ans_row)\n    print(ans_col)\nelse:\n    print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#This is an implementation of the solution to the problem: https://codeforces.com/contest/1360/problem/D\n\ndef check_sorted(a):\n    for i in range(len(a)-1):\n        if a[i] > a[i+1]:\n            return False\n    return True\n\ndef find_row_column(a):\n    for i in range(len(a)):\n        if a[i] == 1:\n            return i\n    return -1\n\ndef print_ans(r, c):\n    print(\"YES\")\n    print(r)\n    print(c)\n\ndef find_solution(a):\n    r = [\"0\" for i in range(len(a))]\n    c = [\"0\" for i in range(len(a[0]))]\n    for i in range(len(a)):\n        if a[i][0] == 1:\n            r[i] = \"1\"\n            for j in range(len(a[0])):\n                a[i][j] ^= 1\n    for i in range(len(a[0])):\n        if a[0][i] == 1:\n            c[i] = \"1\"\n            for j in range(len(a)):\n                a[j][i] ^= 1\n    for i in range(len(a)):\n        if not check_sorted(a[i]):\n            return False\n    for i in range(len(a[0])):\n        if not check_sorted([a[j][i] for j in range(len(a))]):\n            return False\n    print_ans(\"\".join(r), \"\".join(c))\n    return True\n\ndef main():\n    n, m = [int(i) for i in input().split(\" \")]\n    a = []\n    for i in range(n):\n        a.append([int(i) for i in input().split(\" \")])\n    if not find_solution(a):\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    r = ''\n    c = ''\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                r += '0'\n                c += '0'\n            else:\n                if i % 2 == 0:\n                    r += '1'\n                    c += '0'\n                else:\n                    r += '0'\n                    c += '1'\n    print('YES')\n    print(r)\n    print(c)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\nrows = [0]*n\ncols = [0]*m\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            rows[i] += 1\n            cols[j] += 1\n\nif max(rows) > n//2 or max(cols) > m//2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        if rows[i] > n//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()\n    for j in range(m):\n        if cols[j] > m//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        if a[i][0] == 1:\n            r[i] = 1\n    for j in range(1, m):\n        if a[0][j] == 1:\n            c[j] = 1\n    for i in range(1, n):\n        for j in range(1, m):\n            if a[i][j] == 1:\n                if r[i] == 1 and c[j] == 1:\n                    print(\"NO\")\n                    return\n                if r[i] == 0 and c[j] == 0:\n                    print(\"NO\")\n                    return\n                if r[i] == 0:\n                    c[j] = 1\n                else:\n                    r[i] = 1\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    #print(a)\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r[i] += 1\n                c[j] += 1\n    #print(r)\n    #print(c)\n    for i in range(n):\n        for j in range(m):\n            if r[i] + c[j] == n + m - 1:\n                r[i] = 1 - r[i] % 2\n                c[j] = 1 - c[j] % 2\n                a[i][j] = 1 - a[i][j]\n    #print(r)\n    #print(c)\n    #print(a)\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != 1:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, r)))\n    print(''.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nfrom typing import List\n\ndef sort_binary_matrix(matrix: List[List[int]]) -> bool:\n    n = len(matrix)\n    m = len(matrix[0])\n    row_inverted = [False] * n\n    col_inverted = [False] * m\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                row_inverted[i] = not row_inverted[i]\n                break\n    for j in range(m):\n        for i in range(1, n):\n            if matrix[i][j] < matrix[i - 1][j]:\n                col_inverted[j] = not col_inverted[j]\n                break\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                return False\n    return True\n\nn, m = map(int, input().split())\nmatrix = [list(map(int, input().split())) for _ in range(n)]\n\nif sort_binary_matrix(matrix):\n    print(\"YES\")\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", row_inverted)))\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", col_inverted)))\nelse:\n    print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\nr = [0] * n\nc = [0] * m\n\nfor i in range(n):\n    if sum(a[i]) % 2 == 1:\n        r[i] = 1\n\nfor j in range(m):\n    if sum(a[i][j] for i in range(n)) % 2 == 1:\n        c[j] = 1\n\nif sum(r) % 2 == 1 and sum(c) % 2 == 1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))"
    }
  ],
  "created": 1650405573,
  "id": "cmpl-4yqAfT1aETA3pe3zUn6gF9eOzb4Rp",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:00:01.091325 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn,m=[int(i) for i in input().split()]\nmat=[]\nfor i in range(n):\n    mat.append([int(j) for j in input().split()])\n\ndef check(mat):\n    for i in range(n):\n        for j in range(m-1):\n            if mat[i][j]>mat[i][j+1]:\n                return False\n    return True\n\ndef row(mat,n):\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j]==1:\n                mat[i][j]=0\n            else:\n                mat[i][j]=1\n    return mat\n\ndef col(mat,m):\n    for i in range(n):\n        for j in range(m):\n            if mat[j][i]==1:\n                mat[j][i]=0\n            else:\n                mat[j][i]=1\n    return mat\n\ndef solve(mat,n,m):\n    for i in range(n):\n        if mat[i][0]==1:\n            mat=row(mat,i)\n    for i in range(m):\n        if mat[0][i]==1:\n            mat=col(mat,i)\n    return mat\n\nif check(mat):\n    print(\"YES\")\n    mat=solve(mat,n,m)\n    ans_row=\"\"\n    ans_col=\"\"\n    for i in range(n):\n        if mat[i][0]==1:\n            ans_row+=\"1\"\n        else:\n            ans_row+=\"0\"\n    for i in range(m):\n        if mat[0][i]==1:\n            ans_col+=\"1\"\n        else:\n            ans_col+=\"0\"\n    print(ans_row)\n    print(ans_col)\nelse:\n    print(\"NO\")"
}
2022-04-19 22:00:01.091397 REASON stop
2022-04-19 22:00:01.091875 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#This is an implementation of the solution to the problem: https://codeforces.com/contest/1360/problem/D\n\ndef check_sorted(a):\n    for i in range(len(a)-1):\n        if a[i] > a[i+1]:\n            return False\n    return True\n\ndef find_row_column(a):\n    for i in range(len(a)):\n        if a[i] == 1:\n            return i\n    return -1\n\ndef print_ans(r, c):\n    print(\"YES\")\n    print(r)\n    print(c)\n\ndef find_solution(a):\n    r = [\"0\" for i in range(len(a))]\n    c = [\"0\" for i in range(len(a[0]))]\n    for i in range(len(a)):\n        if a[i][0] == 1:\n            r[i] = \"1\"\n            for j in range(len(a[0])):\n                a[i][j] ^= 1\n    for i in range(len(a[0])):\n        if a[0][i] == 1:\n            c[i] = \"1\"\n            for j in range(len(a)):\n                a[j][i] ^= 1\n    for i in range(len(a)):\n        if not check_sorted(a[i]):\n            return False\n    for i in range(len(a[0])):\n        if not check_sorted([a[j][i] for j in range(len(a))]):\n            return False\n    print_ans(\"\".join(r), \"\".join(c))\n    return True\n\ndef main():\n    n, m = [int(i) for i in input().split(\" \")]\n    a = []\n    for i in range(n):\n        a.append([int(i) for i in input().split(\" \")])\n    if not find_solution(a):\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 22:00:01.091953 REASON stop
2022-04-19 22:00:01.092343 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    r = ''\n    c = ''\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                r += '0'\n                c += '0'\n            else:\n                if i % 2 == 0:\n                    r += '1'\n                    c += '0'\n                else:\n                    r += '0'\n                    c += '1'\n    print('YES')\n    print(r)\n    print(c)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 22:00:01.092421 REASON stop
2022-04-19 22:00:01.105953 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\nrows = [0]*n\ncols = [0]*m\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            rows[i] += 1\n            cols[j] += 1\n\nif max(rows) > n//2 or max(cols) > m//2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        if rows[i] > n//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()\n    for j in range(m):\n        if cols[j] > m//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()"
}
2022-04-19 22:00:01.106096 REASON stop
2022-04-19 22:00:01.107133 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        if a[i][0] == 1:\n            r[i] = 1\n    for j in range(1, m):\n        if a[0][j] == 1:\n            c[j] = 1\n    for i in range(1, n):\n        for j in range(1, m):\n            if a[i][j] == 1:\n                if r[i] == 1 and c[j] == 1:\n                    print(\"NO\")\n                    return\n                if r[i] == 0 and c[j] == 0:\n                    print(\"NO\")\n                    return\n                if r[i] == 0:\n                    c[j] = 1\n                else:\n                    r[i] = 1\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))\n\nmain()"
}
2022-04-19 22:00:01.107246 REASON stop
2022-04-19 22:00:01.120537 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    #print(a)\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r[i] += 1\n                c[j] += 1\n    #print(r)\n    #print(c)\n    for i in range(n):\n        for j in range(m):\n            if r[i] + c[j] == n + m - 1:\n                r[i] = 1 - r[i] % 2\n                c[j] = 1 - c[j] % 2\n                a[i][j] = 1 - a[i][j]\n    #print(r)\n    #print(c)\n    #print(a)\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != 1:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, r)))\n    print(''.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:00:01.120680 REASON stop
2022-04-19 22:00:01.121706 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nfrom typing import List\n\ndef sort_binary_matrix(matrix: List[List[int]]) -> bool:\n    n = len(matrix)\n    m = len(matrix[0])\n    row_inverted = [False] * n\n    col_inverted = [False] * m\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                row_inverted[i] = not row_inverted[i]\n                break\n    for j in range(m):\n        for i in range(1, n):\n            if matrix[i][j] < matrix[i - 1][j]:\n                col_inverted[j] = not col_inverted[j]\n                break\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                return False\n    return True\n\nn, m = map(int, input().split())\nmatrix = [list(map(int, input().split())) for _ in range(n)]\n\nif sort_binary_matrix(matrix):\n    print(\"YES\")\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", row_inverted)))\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", col_inverted)))\nelse:\n    print(\"NO\")"
}
2022-04-19 22:00:01.121910 REASON stop
2022-04-19 22:00:01.122527 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\nr = [0] * n\nc = [0] * m\n\nfor i in range(n):\n    if sum(a[i]) % 2 == 1:\n        r[i] = 1\n\nfor j in range(m):\n    if sum(a[i][j] for i in range(n)) % 2 == 1:\n        c[j] = 1\n\nif sum(r) % 2 == 1 and sum(c) % 2 == 1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))"
}
2022-04-19 22:00:01.122632 REASON stop
