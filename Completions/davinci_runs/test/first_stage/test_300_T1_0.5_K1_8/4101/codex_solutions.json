["\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        if a[i][0] == 1:\n            r[i] = 1\n    for j in range(1, m):\n        if a[0][j] == 1:\n            c[j] = 1\n    for i in range(1, n):\n        for j in range(1, m):\n            if a[i][j] == 1:\n                if r[i] == 1 and c[j] == 1:\n                    print(\"NO\")\n                    return\n                if r[i] == 0 and c[j] == 0:\n                    print(\"NO\")\n                    return\n                if r[i] == 0:\n                    c[j] = 1\n                else:\n                    r[i] = 1\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))\n\nmain()", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    r = ''\n    c = ''\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                r += '0'\n                c += '0'\n            else:\n                if i % 2 == 0:\n                    r += '1'\n                    c += '0'\n                else:\n                    r += '0'\n                    c += '1'\n    print('YES')\n    print(r)\n    print(c)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\nrows = [0]*n\ncols = [0]*m\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 1:\n            rows[i] += 1\n            cols[j] += 1\n\nif max(rows) > n//2 or max(cols) > m//2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        if rows[i] > n//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()\n    for j in range(m):\n        if cols[j] > m//2:\n            print(\"1\", end=\"\")\n        else:\n            print(\"0\", end=\"\")\n    print()", "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\nr = [0] * n\nc = [0] * m\n\nfor i in range(n):\n    if sum(a[i]) % 2 == 1:\n        r[i] = 1\n\nfor j in range(m):\n    if sum(a[i][j] for i in range(n)) % 2 == 1:\n        c[j] = 1\n\nif sum(r) % 2 == 1 and sum(c) % 2 == 1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(\"\".join(map(str, r)))\n    print(\"\".join(map(str, c)))", "\n\n#This is an implementation of the solution to the problem: https://codeforces.com/contest/1360/problem/D\n\ndef check_sorted(a):\n    for i in range(len(a)-1):\n        if a[i] > a[i+1]:\n            return False\n    return True\n\ndef find_row_column(a):\n    for i in range(len(a)):\n        if a[i] == 1:\n            return i\n    return -1\n\ndef print_ans(r, c):\n    print(\"YES\")\n    print(r)\n    print(c)\n\ndef find_solution(a):\n    r = [\"0\" for i in range(len(a))]\n    c = [\"0\" for i in range(len(a[0]))]\n    for i in range(len(a)):\n        if a[i][0] == 1:\n            r[i] = \"1\"\n            for j in range(len(a[0])):\n                a[i][j] ^= 1\n    for i in range(len(a[0])):\n        if a[0][i] == 1:\n            c[i] = \"1\"\n            for j in range(len(a)):\n                a[j][i] ^= 1\n    for i in range(len(a)):\n        if not check_sorted(a[i]):\n            return False\n    for i in range(len(a[0])):\n        if not check_sorted([a[j][i] for j in range(len(a))]):\n            return False\n    print_ans(\"\".join(r), \"\".join(c))\n    return True\n\ndef main():\n    n, m = [int(i) for i in input().split(\" \")]\n    a = []\n    for i in range(n):\n        a.append([int(i) for i in input().split(\" \")])\n    if not find_solution(a):\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nn,m=[int(i) for i in input().split()]\nmat=[]\nfor i in range(n):\n    mat.append([int(j) for j in input().split()])\n\ndef check(mat):\n    for i in range(n):\n        for j in range(m-1):\n            if mat[i][j]>mat[i][j+1]:\n                return False\n    return True\n\ndef row(mat,n):\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j]==1:\n                mat[i][j]=0\n            else:\n                mat[i][j]=1\n    return mat\n\ndef col(mat,m):\n    for i in range(n):\n        for j in range(m):\n            if mat[j][i]==1:\n                mat[j][i]=0\n            else:\n                mat[j][i]=1\n    return mat\n\ndef solve(mat,n,m):\n    for i in range(n):\n        if mat[i][0]==1:\n            mat=row(mat,i)\n    for i in range(m):\n        if mat[0][i]==1:\n            mat=col(mat,i)\n    return mat\n\nif check(mat):\n    print(\"YES\")\n    mat=solve(mat,n,m)\n    ans_row=\"\"\n    ans_col=\"\"\n    for i in range(n):\n        if mat[i][0]==1:\n            ans_row+=\"1\"\n        else:\n            ans_row+=\"0\"\n    for i in range(m):\n        if mat[0][i]==1:\n            ans_col+=\"1\"\n        else:\n            ans_col+=\"0\"\n    print(ans_row)\n    print(ans_col)\nelse:\n    print(\"NO\")", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    #print(a)\n    r = [0] * n\n    c = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r[i] += 1\n                c[j] += 1\n    #print(r)\n    #print(c)\n    for i in range(n):\n        for j in range(m):\n            if r[i] + c[j] == n + m - 1:\n                r[i] = 1 - r[i] % 2\n                c[j] = 1 - c[j] % 2\n                a[i][j] = 1 - a[i][j]\n    #print(r)\n    #print(c)\n    #print(a)\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] != 1:\n                print('NO')\n                return\n    print('YES')\n    print(''.join(map(str, r)))\n    print(''.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()", "\n\nfrom typing import List\n\ndef sort_binary_matrix(matrix: List[List[int]]) -> bool:\n    n = len(matrix)\n    m = len(matrix[0])\n    row_inverted = [False] * n\n    col_inverted = [False] * m\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                row_inverted[i] = not row_inverted[i]\n                break\n    for j in range(m):\n        for i in range(1, n):\n            if matrix[i][j] < matrix[i - 1][j]:\n                col_inverted[j] = not col_inverted[j]\n                break\n    for i in range(n):\n        for j in range(1, m):\n            if matrix[i][j] < matrix[i][j - 1]:\n                return False\n    return True\n\nn, m = map(int, input().split())\nmatrix = [list(map(int, input().split())) for _ in range(n)]\n\nif sort_binary_matrix(matrix):\n    print(\"YES\")\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", row_inverted)))\n    print(\"\".join(map(lambda x: \"1\" if x else \"0\", col_inverted)))\nelse:\n    print(\"NO\")"]