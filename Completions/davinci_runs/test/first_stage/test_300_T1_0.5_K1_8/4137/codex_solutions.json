["", "\n\ndef bf_calc():\n    expr = list(input())\n    stack = []\n    result = []\n    for char in expr:\n        if char.isdigit():\n            stack.append(int(char))\n        elif char == '+':\n            result.append(sum(stack))\n            stack = []\n        else:\n            result.append(stack[0] - stack[1])\n            stack = []\n    result = result[0]\n    bf = ''\n    while result > 0:\n        bf += '+'\n        result -= 1\n    bf += '>++++++++++++++++++++++++++++++++++++++++++++++++.<'\n    print(bf)\n\nbf_calc()", "\n\nimport sys\n\ndef main():\n    expr = input()\n    tokens = expr.split(\"+\")\n    for i in range(len(tokens)):\n        token = tokens[i]\n        if \"-\" in token:\n            tokens[i] = token.split(\"-\")\n\n    print(\"\".join(\"+\" * int(t) for t in tokens[0]))\n    for token in tokens[1:]:\n        print(\"\".join(\"+\" * int(t) for t in token[:-1]))\n        print(\"\".join(\"-\" * int(t) for t in token[-1:]))\n    print(\"<[<+>-]<\" * len(tokens))\n    print(\"+\" * 255)\n    print(\".\")\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef bf(x):\n    if x==0:\n        return \"\"\n    if x>0:\n        return \"+\"*x\n    else:\n        return \"-\"*(-x)\n\ndef main():\n    s = sys.stdin.readline().strip().split(\"+\")\n    n = len(s)\n    for i in range(n):\n        s[i] = int(s[i])\n    if n==1:\n        print(bf(s[0]))\n    elif n==2:\n        print(bf(s[0])+\">\"+bf(s[1])+\"<\"+bf(s[0]-s[1]))\n    else:\n        print(bf(s[0])+\">\"+bf(s[1])+\"<\")\n        for i in range(2,n):\n            print(bf(s[i])+\"<\")\n        print(bf(s[0]-s[1])+\"<\"*(n-2)+bf(s[0]-s[1]-sum(s[2:]))+\".\")\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport re\n\ndef brainfuck(s):\n    s = s.split('+')\n    for i in range(len(s)):\n        s[i] = s[i].split('-')\n    #print(s)\n    res = ''\n    for i in range(len(s)):\n        if len(s[i]) > 1:\n            res += '>'*int(s[i][0]) + '<'*int(s[i][1])\n        else:\n            res += '>'*int(s[i][0])\n    res += '<'*len(s)\n    res += '[<+>-]<'\n    res += '>'\n    res += '.'\n    return res\n\ns = sys.stdin.readline().strip()\nprint(brainfuck(s))", "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    tokens = line.split('+')\n    tokens = [int(t) if t.isdigit() else -int(t[1:]) for t in tokens]\n    print(tokens)\n    print(gen_bf(tokens))\n\ndef gen_bf(tokens):\n    bf = ''\n    for i, t in enumerate(tokens):\n        if i == 0:\n            bf += '+'*t\n            bf += '>'\n        else:\n            bf += '+'*t\n            bf += '>'\n            bf += '['\n            bf += '<'\n            if t >= 0:\n                bf += '+'\n            else:\n                bf += '-'\n            bf += '>'\n            bf += '-'\n            bf += ']'\n            bf += '<'\n    bf += '.'\n    return bf\n\nif __name__ == '__main__':\n    main()", "\n\ndef brainfuck_calculator(expression):\n\t# TODO: implement\n\treturn \"\"\n\nif __name__ == '__main__':\n\texpression = input()\n\tprint(brainfuck_calculator(expression))"]