2022-04-19 23:10:26.731176 """
There are N slimes lining up from left to right. The colors of these slimes will be given as a string S of length N consisting of lowercase English letters. The i-th slime from the left has the color that corresponds to the i-th character of S.
Adjacent slimes with the same color will fuse into one larger slime without changing the color. If there were a slime adjacent to this group of slimes before fusion, that slime is now adjacent to the new larger slime.
Ultimately, how many slimes will be there?

-----Constraints-----
 - 1 \leq N \leq 10^5
 - |S| = N
 - S consists of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print the final number of slimes.

-----Sample Input-----
10
aabbbbaaca

-----Sample Output-----
5

Ultimately, these slimes will fuse into abaca.
"""
2022-04-19 23:10:26.731187 --------------------------
2022-04-19 23:10:26.731301 using api key derek
2022-04-19 23:10:37.800898 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = list(input())\n\n#print(N)\n#print(S)\n\nans = 1\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\ndef get_num_slimes(N, S):\n    count = 1\n    for i in range(1, N):\n        if S[i] != S[i - 1]:\n            count += 1\n    return count\n\nprint(get_num_slimes(N, S))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input().rstrip())\n    s = list(input().rstrip())\n\n    ans = 0\n    prev = s[0]\n    for i in range(1, n):\n        if prev == s[i]:\n            continue\n        else:\n            ans += 1\n            prev = s[i]\n    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\nc = S[0]\ncount = 1\n\nfor i in range(1, N):\n    if c != S[i]:\n        c = S[i]\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nc = 1\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        c += 1\nprint(c)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\nans = 1\nfor i in range(1, N):\n    if S[i-1] != S[i]:\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    # print(s)\n    count = 1\n    for i in range(num - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n        else:\n            count = 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = input()\n\nprint(len(set(S)))"
    }
  ],
  "created": 1650409826,
  "id": "cmpl-4yrHGrD0XqqfDY77BXf5IwCHx1RZo",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:10:37.801214 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = list(input())\n\n#print(N)\n#print(S)\n\nans = 1\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        ans += 1\n\nprint(ans)"
}
2022-04-19 23:10:37.801250 REASON stop
2022-04-19 23:10:37.806466 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\ndef get_num_slimes(N, S):\n    count = 1\n    for i in range(1, N):\n        if S[i] != S[i - 1]:\n            count += 1\n    return count\n\nprint(get_num_slimes(N, S))"
}
2022-04-19 23:10:37.806584 REASON stop
2022-04-19 23:10:37.808725 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input().rstrip())\n    s = list(input().rstrip())\n\n    ans = 0\n    prev = s[0]\n    for i in range(1, n):\n        if prev == s[i]:\n            continue\n        else:\n            ans += 1\n            prev = s[i]\n    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:37.808821 REASON stop
2022-04-19 23:10:37.831744 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\nc = S[0]\ncount = 1\n\nfor i in range(1, N):\n    if c != S[i]:\n        c = S[i]\n        count += 1\n\nprint(count)"
}
2022-04-19 23:10:37.831886 REASON stop
2022-04-19 23:10:37.856991 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nc = 1\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        c += 1\nprint(c)"
}
2022-04-19 23:10:37.857122 REASON stop
2022-04-19 23:10:37.863065 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\nans = 1\nfor i in range(1, N):\n    if S[i-1] != S[i]:\n        ans += 1\n\nprint(ans)"
}
2022-04-19 23:10:37.863192 REASON stop
2022-04-19 23:10:37.871571 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    # print(s)\n    count = 1\n    for i in range(num - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n        else:\n            count = 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:37.871701 REASON stop
2022-04-19 23:10:37.887494 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = input()\n\nprint(len(set(S)))"
}
2022-04-19 23:10:37.887750 REASON stop
