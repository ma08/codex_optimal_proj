["\nn = int(input())\na = list(map(int, input().split()))\n\noddSum = [0]\nevenSum = [0]\n\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        evenSum.append(evenSum[-1]+a[i-1])\n        oddSum.append(oddSum[-1])\n    else:\n        oddSum.append(oddSum[-1]+a[i-1])\n        evenSum.append(evenSum[-1])\n\ncount = 0\n\nfor i in range(1, n+1):\n    if i % 2 == 0:\n        if evenSum[i-1] == oddSum[-1]-oddSum[i]:\n            count += 1\n    else:\n        if oddSum[i-1] == evenSum[-1]-evenSum[i]:\n            count += 1\n\nprint(count)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    s = sum(a)\n    cur = 0\n    ans = 0\n    for i in range(n):\n        cur += a[i]\n        if cur == (s - cur + a[i]):\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nodd_sum = 0\neven_sum = 0\ngood_candy = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        even_sum += a[i]\n    else:\n        odd_sum += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        even_sum -= a[i]\n    else:\n        odd_sum -= a[i]\n\n    if even_sum == odd_sum:\n        good_candy += 1\n\n    if i % 2 == 0:\n        even_sum += a[i]\n    else:\n        odd_sum += a[i]\n\nprint(good_candy)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\neven = 0\nodd = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        even += a[i]\n    else:\n        odd += a[i]\n\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        even -= a[i]\n    else:\n        odd -= a[i]\n    if even == odd:\n        count += 1\n    if i % 2 == 0:\n        even += a[i]\n    else:\n        odd += a[i]\n\nprint(count)", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = {}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]].append(i)\n        else:\n            d[a[i]] = [i]\n    res = 0\n    for k in d:\n        if len(d[k]) == 1:\n            res += 1\n        else:\n            res += len(d[k]) // 2\n    print(res)\n\nif __name__ == '__main__':\n    main()", "\n\ndef solve(a, n):\n    l = 1\n    r = n\n    while l <= r:\n        mid = (l + r) // 2\n        if mid == 1:\n            return 1\n        if mid == n:\n            return n\n        if a[mid] == a[mid - 1] and a[mid] == a[mid + 1]:\n            return mid\n        if a[mid] < a[mid - 1]:\n            r = mid - 1\n        elif a[mid] > a[mid - 1]:\n            l = mid + 1\n        else:\n            l = mid + 1\n            r = mid - 1\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(a, n))", "\n\n#Solution\n\nn = int(input())\na = list(map(int, input().split()))\n\nodd = 0\neven = 0\n\nfor i in range(n-1):\n    if i%2==0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\n\nfor i in range(n):\n    if i%2==0:\n        if odd-a[i] == even:\n            ans += 1\n    else:\n        if even-a[i] == odd:\n            ans += 1\n\nprint(ans)"]