["", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 1:\n        print(\"YES\")\n        return\n\n    # Check if the wall is already complete\n    if all(x == a[0] for x in a):\n        print(\"YES\")\n        return\n\n    # Check if there are any gaps in the wall\n    if any(a[i] + 1 != a[i + 1] for i in range(n - 1)):\n        print(\"NO\")\n        return\n\n    # Check if the wall can be completed using horizontal bricks\n    if any(a[i] == a[i + 1] for i in range(n - 1)):\n        print(\"YES\")\n        return\n\n    # Check if the wall can be completed using vertical bricks\n    if any(a[i] == a[i + 1] + 2 for i in range(n - 1)):\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if max(a) - min(a) > 1:\n        print(\"NO\")\n        return\n    if max(a) - min(a) == 1:\n        if a.count(max(a)) > 1 and a.count(min(a)) > 1:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\nh = list(map(int, input().split()))\n\n# Fill in the gaps\nfor i in range(n - 1):\n    if h[i] == h[i + 1]:\n        h[i + 1] += 1\n\n# Check if all equal\nif len(set(h)) == 1:\n    print('YES')\nelse:\n    print('NO')", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = [*map(int, sys.stdin.readline().strip().split())]\n    a.sort()\n    print(a)\n    if a[0] == a[-1]:\n        print('YES')\n        return\n    if a[0] + 1 == a[1] and a[-2] + 1 == a[-1]:\n        print('YES')\n        return\n    print('NO')\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef solve(n, a):\n    a = list(map(int, a))\n    if len(set(a)) == 1:\n        return 'YES'\n    if n == 2:\n        return 'NO'\n    if max(a) - min(a) > 2:\n        return 'NO'\n    if max(a) - min(a) == 2:\n        if a.count(max(a)) > 1 and a.count(min(a)) > 1:\n            return 'NO'\n        return 'YES'\n    if max(a) - min(a) == 1:\n        if a.count(max(a)) > 1 or a.count(min(a)) > 1:\n            return 'NO'\n        return 'YES'\n\n\n\ndef main():\n    n = int(input())\n    a = input().split()\n    print(solve(n, a))\n\n\nif __name__ == '__main__':\n    main()"]