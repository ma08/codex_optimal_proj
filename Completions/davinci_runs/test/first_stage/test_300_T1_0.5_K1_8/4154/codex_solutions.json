["\n\nimport sys\n\n# define input\nN, M = map(int, input().split())\nL = [0] * M\nR = [0] * M\nfor i in range(M):\n    L[i], R[i] = map(int, input().split())\n\n# calculate\npass_num = [0] * (N + 1)\nfor i in range(M):\n    pass_num[L[i]] += 1\n    pass_num[R[i] + 1] -= 1\nfor i in range(1, N + 1):\n    pass_num[i] += pass_num[i - 1]\n\nprint(pass_num.count(M))", "\n\ninput_data = input().split()\nn = int(input_data[0])\nm = int(input_data[1])\nl_r_list = []\nfor i in range(m):\n    l_r_list.append(input().split())\n\nl_r_list.sort(key=lambda x: int(x[1]))\n\nlast_r = 0\nans = 0\nfor i in range(m):\n    if int(l_r_list[i][0]) > last_r:\n        last_r = int(l_r_list[i][1])\n        ans += 1\n\nprint(ans)", "\n\nN, M = map(int, input().split())\n\n# \u5404ID\u304c\u3069\u306e\u30b2\u30fc\u30c8\u3092\u901a\u308c\u308b\u304b\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\n# \u901a\u308c\u308b\u30b2\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u683c\u7d0d\nid_list = [[] for _ in range(N + 1)]\n\nfor _ in range(M):\n    L, R = map(int, input().split())\n    id_list[L].append(R)\n\n# \u5404ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5927\u5024\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\nmax_list = [0] * (N + 1)\n\nfor i in range(1, N + 1):\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001\u6700\u5927\u5024\u306f0\n    if len(id_list[i]) == 0:\n        continue\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5927\u5024\u306f\u3001\u305d\u306eID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5927\u5024\u306e\u6700\u5927\u5024\n    max_list[i] = max(id_list[i])\n\n# \u5404ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5c0f\u5024\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\nmin_list = [M + 1] * (N + 1)\n\nfor i in range(N, 0, -1):\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001\u6700\u5c0f\u5024\u306fM + 1\n    if len(id_list[i]) == 0:\n        continue\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5c0f\u5024\u306f\u3001\u305d\u306eID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5c0f\u5024\u306e\u6700\u5c0f\u5024\n    min_list[i] = min(id_list[i])\n\n# \u5168\u3066\u306e\u30b2\u30fc\u30c8\u3092\u901a\u308c\u308bID\u306e\u6570\ncount = 0\n\n# \u5404ID\u306b\u3064\u3044\u3066\u8abf\u3079\u308b\nfor i in range(1, N + 1):\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001\u305d\u306eID\u306f\u5168\u3066\u306e\u30b2\u30fc\u30c8\u3092\u901a\u308c\u306a\u3044\n    if len(id_list[i]) == 0:\n        continue\n    # ID\u304c\u901a\u308c\u308b\u30b2\u30fc\u30c8\u306e\u6700\u5c0f\u5024\u304c\u3001ID\u3088\u308a\u3082\u5c0f\u3055\u3044\u30b2\u30fc\u30c8\u306e\u6700\u5927\u5024\u3088\u308a\u3082\u5927\u304d\u3044\u5834\u5408\u3001\u305d\u306eID\u306f\u5168\u3066\u306e\u30b2\u30fc\u30c8\u3092\u901a\u308c\u308b\n    if min_list[i] > max_list[i - 1]:\n        count += 1\n\nprint(count)", "\n\nN, M = map(int, input().split())\nL, R = [], []\nfor i in range(M):\n    l, r = map(int, input().split())\n    L.append(l)\n    R.append(r)\n\nmax_l = max(L)\nmin_r = min(R)\n\nif min_r < max_l:\n    print(0)\nelse:\n    print(min_r - max_l + 1)", "\n\nN, M = map(int, input().split())\n\nl = [0] * (N + 1)\nr = [0] * (N + 1)\n\nfor i in range(M):\n    L, R = map(int, input().split())\n    l[L] += 1\n    r[R] += 1\n\ncnt = 0\ns = 0\nfor i in range(1, N + 1):\n    s += l[i]\n    if s == 0:\n        cnt += 1\n    s -= r[i]\n\nprint(cnt)", "\n\nimport sys\n\nn, m = map(int, input().split())\n\nl_r = []\nfor _ in range(m):\n    l, r = map(int, input().split())\n    l_r.append((l, r))\n\nl_r = sorted(l_r)\nprint(l_r)\n\n# \u5168\u3066\u306e\u30b2\u30fc\u30c8\u3092\u901a\u308c\u308bID\u30ab\u30fc\u30c9\u306e\u5019\u88dc\u3092\u30ea\u30b9\u30c8\u306b\u4fdd\u5b58\ncandidate_id_cards = list(range(1, n+1))\nfor l, r in l_r:\n    for i in range(l, r+1):\n        if i in candidate_id_cards:\n            candidate_id_cards.remove(i)\n\nprint(len(candidate_id_cards))", "\n\nN, M = map(int, input().split())\n\nleft = [0] * (N+1)\nright = [0] * (N+1)\n\nfor _ in range(M):\n    L, R = map(int, input().split())\n    left[L] += 1\n    right[R] += 1\n\nfor i in range(1, N+1):\n    left[i] += left[i-1]\n\nfor i in range(N-1, -1, -1):\n    right[i] += right[i+1]\n\nans = 0\nfor i in range(1, N+1):\n    if left[i] == right[i]:\n        ans += 1\n\nprint(ans)", "\n\n\ndef main():\n    N, M = map(int, input().split())\n    L = []\n    R = []\n    for i in range(M):\n        l, r = map(int, input().split())\n        L.append(l)\n        R.append(r)\n\n    ans = 0\n    for i in range(N):\n        can_pass = True\n        for j in range(M):\n            if not (L[j] <= i <= R[j]):\n                can_pass = False\n                break\n        if can_pass:\n            ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"]