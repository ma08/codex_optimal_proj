2022-04-19 20:57:39.979429 """
You are given a string $t$ consisting of $n$ lowercase Latin letters and an integer number $k$.

Let's define a substring of some string $s$ with indices from $l$ to $r$ as $s[l \dots r]$.

Your task is to construct such string $s$ of minimum possible length that there are exactly $k$ positions $i$ such that $s[i \dots i + n - 1] = t$. In other words, your task is to construct such string $s$ of minimum possible length that there are exactly $k$ substrings of $s$ equal to $t$.

It is guaranteed that the answer is always unique.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le n, k \le 50$) â€” the length of the string $t$ and the number of substrings.

The second line of the input contains the string $t$ consisting of exactly $n$ lowercase Latin letters.


-----Output-----

Print such string $s$ of minimum possible length that there are exactly $k$ substrings of $s$ equal to $t$.

It is guaranteed that the answer is always unique.


-----Examples-----
Input
3 4
aba

Output
ababababa

Input
3 2
cat

Output
catcat
"""
2022-04-19 20:57:39.979449 --------------------------
2022-04-19 20:57:39.979554 using api key gabby
2022-04-19 20:59:00.496985 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    s = []\n    for i in range(k):\n        s.append(t)\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "length",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    if n == 1:\n        print(t * k)\n        return\n    if n == 2:\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 3:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 4:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 5:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 6:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 7:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 8:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 9:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 10:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 11:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 11:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 12:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 11:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 12:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 13:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    s = t\n    while len(s) < n * k:\n        s += t\n    print(s[:n * k])\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport fileinput\n\ndef main():\n    n, k = map(int, fileinput.input()[0].split())\n    t = fileinput.input()[0]\n    print(t * (k // n) + t[:k % n])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\nt = input()\n\nif k < n:\n    print(t[:k])\nelse:\n    k -= n\n    print(t + t[:k])"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\nt = input()\n\ns = ''\n\nfor i in range(k):\n    s += t\n\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    t = sys.stdin.readline().strip()\n    if k == 1:\n        print(t)\n    else:\n        print(t * (k - 1) + t[:n - (k - 2)])\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    n, k = map(int, input().split())\n    t = input().strip()\n    s = t\n    for _ in range(k-1):\n        s += t[1:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650401860,
  "id": "cmpl-4ypCm7s8OqB2wceIv9cDg86EQyhbs",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 20:59:00.497434 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    s = []\n    for i in range(k):\n        s.append(t)\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 20:59:00.497480 REASON stop
2022-04-19 20:59:00.498001 1 {
  "finish_reason": "length",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    if n == 1:\n        print(t * k)\n        return\n    if n == 2:\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 3:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 4:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 5:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 6:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 7:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 8:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 9:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 10:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 11:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 11:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 12:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 9:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 10:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 11:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 12:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t + t[::-1] + t)\n            return\n        if k % 2 == 0:\n            print(t * (k // 2))\n        else:\n            print(t + t[::-1] * (k // 2))\n        return\n    if n == 13:\n        if k == 2:\n            print(t)\n            return\n        if k == 3:\n            print(t + t[::-1])\n            return\n        if k == 4:\n            print(t + t[::-1] + t)\n            return\n        if k == 5:\n            print(t + t[::-1] + t + t[::-1])\n            return\n        if k == 6:\n            print(t + t[::-1] + t + t[::-1] + t)\n            return\n        if k == 7:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-1])\n            return\n        if k == 8:\n            print(t + t[::-1] + t + t[::-1] + t + t[::-"
}
2022-04-19 20:59:00.498114 REASON length
2022-04-19 20:59:00.498122 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    s = t\n    while len(s) < n * k:\n        s += t\n    print(s[:n * k])\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 20:59:00.498156 REASON stop
2022-04-19 20:59:00.498709 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport fileinput\n\ndef main():\n    n, k = map(int, fileinput.input()[0].split())\n    t = fileinput.input()[0]\n    print(t * (k // n) + t[:k % n])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 20:59:00.498771 REASON stop
2022-04-19 20:59:00.526319 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\nt = input()\n\nif k < n:\n    print(t[:k])\nelse:\n    k -= n\n    print(t + t[:k])"
}
2022-04-19 20:59:00.526473 REASON stop
2022-04-19 20:59:00.527227 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\nt = input()\n\ns = ''\n\nfor i in range(k):\n    s += t\n\nprint(s)"
}
2022-04-19 20:59:00.527316 REASON stop
2022-04-19 20:59:00.530897 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    t = sys.stdin.readline().strip()\n    if k == 1:\n        print(t)\n    else:\n        print(t * (k - 1) + t[:n - (k - 2)])\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 20:59:00.530989 REASON stop
2022-04-19 20:59:00.533634 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    n, k = map(int, input().split())\n    t = input().strip()\n    s = t\n    for _ in range(k-1):\n        s += t[1:]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 20:59:00.533845 REASON stop
