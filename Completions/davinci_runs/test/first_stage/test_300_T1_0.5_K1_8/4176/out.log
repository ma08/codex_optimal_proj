2022-04-19 22:44:17.825396 """
Takahashi is organizing a party.
At the party, each guest will receive one or more snack pieces.
Takahashi predicts that the number of guests at this party will be A or B.
Find the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted.
We assume that a piece cannot be divided and distributed to multiple guests.

-----Constraints-----
 - 1 \leq A, B \leq 10^5
 - A \neq B
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
A B

-----Output-----
Print the minimum number of pieces that can be evenly distributed to the guests in both of the cases with A guests and B guests.

-----Sample Input-----
2 3

-----Sample Output-----
6

When we have six snack pieces, each guest can take three pieces if we have two guests, and each guest can take two if we have three guests.
"""
2022-04-19 22:44:17.825407 --------------------------
2022-04-19 22:44:17.825517 using api key derek
2022-04-19 22:44:29.056102 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    if a == b:\n        print(1)\n    else:\n        print(a * b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport math\n\na, b = map(int, input().split())\n\nprint(math.gcd(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\n\nif a > b:\n    a, b = b, a\n\nfor i in range(1, b+1):\n    if a * i % b == 0:\n        print(a * i)\n        exit(0)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    inputs = input().split()\n    a = int(inputs[0])\n    b = int(inputs[1])\n    print(math.gcd(a,b) * 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline().split()\na = int(input[0])\nb = int(input[1])\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nprint(lcm(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\na, b = map(int, sys.stdin.readline().split())\n\nprint(a*b // gcd(a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650408258,
  "id": "cmpl-4yqryrkmevJ2mLEdOzxtIOSJM9YEb",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:44:29.056569 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    if a == b:\n        print(1)\n    else:\n        print(a * b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:44:29.056630 REASON stop
2022-04-19 22:44:29.057507 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport math\n\na, b = map(int, input().split())\n\nprint(math.gcd(a, b))"
}
2022-04-19 22:44:29.057594 REASON stop
2022-04-19 22:44:29.058194 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\n\nif a > b:\n    a, b = b, a\n\nfor i in range(1, b+1):\n    if a * i % b == 0:\n        print(a * i)\n        exit(0)"
}
2022-04-19 22:44:29.058276 REASON stop
2022-04-19 22:44:29.075290 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    inputs = input().split()\n    a = int(inputs[0])\n    b = int(inputs[1])\n    print(math.gcd(a,b) * 2)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:44:29.075436 REASON stop
2022-04-19 22:44:29.076244 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:44:29.076339 REASON stop
2022-04-19 22:44:29.085248 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline().split()\na = int(input[0])\nb = int(input[1])\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nprint(lcm(a, b))"
}
2022-04-19 22:44:29.085372 REASON stop
2022-04-19 22:44:29.086130 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\na, b = map(int, sys.stdin.readline().split())\n\nprint(a*b // gcd(a, b))"
}
2022-04-19 22:44:29.086204 REASON stop
2022-04-19 22:44:29.087582 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, input().split())\n    print(lcm(a, b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:44:29.087746 REASON stop
