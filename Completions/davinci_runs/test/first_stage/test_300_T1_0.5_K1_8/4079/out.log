2022-04-19 21:42:59.462487 """
A string is called diverse if it contains consecutive (adjacent) letters of the Latin alphabet and each letter occurs exactly once. For example, the following strings are diverse: "fced", "xyz", "r" and "dabcef". The following string are not diverse: "az", "aa", "bad" and "babc". Note that the letters 'a' and 'z' are not adjacent.

Formally, consider positions of all letters in the string in the alphabet. These positions should form contiguous segment, i.e. they should come one by one without any gaps. And all letters in the string should be distinct (duplicates are not allowed).

You are given a sequence of strings. For each string, if it is diverse, print "Yes". Otherwise, print "No".


-----Input-----

The first line contains integer $n$ ($1 \le n \le 100$), denoting the number of strings to process. The following $n$ lines contains strings, one string per line. Each string contains only lowercase Latin letters, its length is between $1$ and $100$, inclusive.


-----Output-----

Print $n$ lines, one line per a string in the input. The line should contain "Yes" if the corresponding string is diverse and "No" if the corresponding string is not diverse. You can print each letter in any case (upper or lower). For example, "YeS", "no" and "yES" are all acceptable.


-----Example-----
Input
8
fced
xyz
r
dabcef
az
aa
bad
babc

Output
Yes
Yes
Yes
Yes
No
No
No
No
"""
2022-04-19 21:42:59.462496 --------------------------
2022-04-19 21:42:59.462609 using api key sourya
2022-04-19 21:43:21.837968 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef diverse(s):\n    s = list(s)\n    s.sort()\n    for i in range(0, len(s) - 1):\n        if ord(s[i]) + 1 != ord(s[i+1]):\n            return False\n    return True\n\nn = int(input())\nfor i in range(0, n):\n    s = input()\n    if diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# TODO: write a solution"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    if len(s) != 26:\n        print(\"No\")\n        continue\n    else:\n        s = sorted(s)\n        if s == list(\"abcdefghijklmnopqrstuvwxyz\"):\n            print(\"Yes\")\n        else:\n            print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    s = input()\n    if len(s)==1:\n        print(\"Yes\")\n    else:\n        for j in range(len(s)-1):\n            if ord(s[j])+1!=ord(s[j+1]) and ord(s[j])-1!=ord(s[j+1]):\n                print(\"No\")\n                break\n            elif j==len(s)-2:\n                print(\"Yes\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        s = input()\n        if len(s) == len(set(s)) and len(set(s)) == max(map(ord,s))-min(map(ord,s))+1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef is_diverse(string):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    letters = [letter for letter in string]\n    letters = ''.join(sorted(set(letters)))\n    if len(letters) == 1:\n        return True\n    elif len(letters) == 2:\n        if letters in alphabet:\n            return True\n        else:\n            return False\n    else:\n        for i in range(len(letters)-1):\n            if letters[i+1] != alphabet[alphabet.index(letters[i])+1]:\n                return False\n        return True\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        string = input()\n        if is_diverse(string):\n            print('Yes')\n        else:\n            print('No')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    s = input()\n    check = [False] * 26\n    flag = True\n    for j in range(len(s) - 1):\n        if ord(s[j]) + 1 == ord(s[j + 1]):\n            check[ord(s[j]) - ord('a')] = True\n            if check[ord(s[j + 1]) - ord('a')]:\n                flag = False\n                break\n        else:\n            flag = False\n            break\n    if flag:\n        print('Yes')\n    else:\n        print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# number of strings\nn = int(input())\n\n# dictionary of letters\nletters = {'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\n\nfor i in range(n):\n    # input string\n    string = input()\n    \n    # list of letters in string\n    letters_in_string = []\n    \n    # check if all letters are unique\n    for j in range(len(string)):\n        if string[j] not in letters_in_string:\n            letters_in_string.append(string[j])\n        else:\n            print(\"No\")\n            break\n    else:\n        # check if letters are consecutive\n        for j in range(len(letters_in_string) - 1):\n            if letters[letters_in_string[j]] + 1 != letters[letters_in_string[j + 1]]:\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")"
    }
  ],
  "created": 1650404579,
  "id": "cmpl-4ypudLKveFUeUnibhZQKXWAVXModG",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:43:21.838342 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef diverse(s):\n    s = list(s)\n    s.sort()\n    for i in range(0, len(s) - 1):\n        if ord(s[i]) + 1 != ord(s[i+1]):\n            return False\n    return True\n\nn = int(input())\nfor i in range(0, n):\n    s = input()\n    if diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-19 21:43:21.838388 REASON stop
2022-04-19 21:43:21.839062 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# TODO: write a solution"
}
2022-04-19 21:43:21.839129 REASON stop
2022-04-19 21:43:21.839597 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    if len(s) != 26:\n        print(\"No\")\n        continue\n    else:\n        s = sorted(s)\n        if s == list(\"abcdefghijklmnopqrstuvwxyz\"):\n            print(\"Yes\")\n        else:\n            print(\"No\")"
}
2022-04-19 21:43:21.839660 REASON stop
2022-04-19 21:43:21.860592 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nfor i in range(n):\n    s = input()\n    if len(s)==1:\n        print(\"Yes\")\n    else:\n        for j in range(len(s)-1):\n            if ord(s[j])+1!=ord(s[j+1]) and ord(s[j])-1!=ord(s[j+1]):\n                print(\"No\")\n                break\n            elif j==len(s)-2:\n                print(\"Yes\")"
}
2022-04-19 21:43:21.860754 REASON stop
2022-04-19 21:43:21.874283 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        s = input()\n        if len(s) == len(set(s)) and len(set(s)) == max(map(ord,s))-min(map(ord,s))+1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 21:43:21.874439 REASON stop
2022-04-19 21:43:21.877334 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef is_diverse(string):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    letters = [letter for letter in string]\n    letters = ''.join(sorted(set(letters)))\n    if len(letters) == 1:\n        return True\n    elif len(letters) == 2:\n        if letters in alphabet:\n            return True\n        else:\n            return False\n    else:\n        for i in range(len(letters)-1):\n            if letters[i+1] != alphabet[alphabet.index(letters[i])+1]:\n                return False\n        return True\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        string = input()\n        if is_diverse(string):\n            print('Yes')\n        else:\n            print('No')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:43:21.877479 REASON stop
2022-04-19 21:43:21.878075 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nfor i in range(n):\n    s = input()\n    check = [False] * 26\n    flag = True\n    for j in range(len(s) - 1):\n        if ord(s[j]) + 1 == ord(s[j + 1]):\n            check[ord(s[j]) - ord('a')] = True\n            if check[ord(s[j + 1]) - ord('a')]:\n                flag = False\n                break\n        else:\n            flag = False\n            break\n    if flag:\n        print('Yes')\n    else:\n        print('No')"
}
2022-04-19 21:43:21.878143 REASON stop
2022-04-19 21:43:21.879035 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# number of strings\nn = int(input())\n\n# dictionary of letters\nletters = {'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\n\nfor i in range(n):\n    # input string\n    string = input()\n    \n    # list of letters in string\n    letters_in_string = []\n    \n    # check if all letters are unique\n    for j in range(len(string)):\n        if string[j] not in letters_in_string:\n            letters_in_string.append(string[j])\n        else:\n            print(\"No\")\n            break\n    else:\n        # check if letters are consecutive\n        for j in range(len(letters_in_string) - 1):\n            if letters[letters_in_string[j]] + 1 != letters[letters_in_string[j + 1]]:\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")"
}
2022-04-19 21:43:21.879194 REASON stop
