["\n\ndef input():\n    return int(input())\n\ndef input_list():\n    return list(map(int, input().split()))\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    N = input()\n    A = input_list()\n    print(max(gcd(a, b) for a in A for b in A))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    if A[0] == A[-1]:\n        print(A[0])\n    else:\n        print(A[-1] - A[0])\n\nif __name__ == '__main__':\n    main()", "\n\n# n = int(input())\n# a = list(map(int, input().split()))\nn = 3\na = [7, 6, 8]\n\ngcd_a = a[0]\nfor i in range(1, n):\n    gcd_a = math.gcd(gcd_a, a[i])\n\nmax_gcd = 0\nfor i in range(n):\n    max_gcd = max(max_gcd, math.gcd(gcd_a, a[i]))\n\nprint(max_gcd)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. \u7d04\u6570\u3092\u5217\u6319\u3059\u308b\ndef divisor(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    # divisors.sort(reverse=True)  # \u30bd\u30fc\u30c8\n    return divisors\n\na_divisors = [divisor(a_i) for a_i in a]\n\n# 2. \u5171\u901a\u7d04\u6570\u3092\u63a2\u3059\ndef common_divisor(a, b):\n    c = []\n    for a_i in a:\n        if a_i in b:\n            c.append(a_i)\n    return c\n\ncommon_divisors = []\nfor i in range(len(a_divisors)):\n    if i == 0:\n        common_divisors = a_divisors[i]\n    else:\n        common_divisors = common_divisor(common_divisors, a_divisors[i])\n\nprint(max(common_divisors))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ngcd = 0\nfor i in range(n):\n    if gcd == 1:\n        break\n    for j in range(i+1, n):\n        if gcd == 1:\n            break\n        gcd = max(gcd, a[i]*a[j]//math.gcd(a[i], a[j]))\n\nprint(gcd)", "\n\n# Get input\nN = int(input())\nA = list(map(int, input().split()))\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\n# If the greatest common divisor of A_1, A_2, ..., A_N is x, then the maximum possible greatest common divisor of the N integers on the blackboard after your move is x.\n# Therefore, we print the greatest common divisor of A_1, A_2, ..., A_N.\n# The greatest common divisor of A_1, A_2, ..., A_N can be calculated using the following formula:\n#   Let x be the greatest common divisor of A_1, A_2, ..., A_N\n#   x = gcd(A_1, A_2, ..., A_N)\n#   x = gcd(gcd(A_1, A_2), A_3, ..., A_N)\n#   x = gcd(gcd(gcd(A_1, A_2), A_3), A_4, ..., A_N)\n#   ...\n#   x = gcd(gcd(gcd(..., A_{N-1}), A_N))\n#\n# The greatest common divisor of two integers a and b can be calculated using the Euclidean algorithm:\n#   Let x be the greatest common divisor of a and b\n#   x = gcd(a, b)\n#   x = gcd(a, b % a)\n#   x = gcd(b % a, a % (b % a))\n#   ...\n#   x = gcd(a % b, b % (a % b))\n#   x = gcd(a % b, 0)\n#   x = a % b\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nprint(gcd(A[0], gcd(A[1], gcd(A[2], A[3]))))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ngcd_a = a[0]\nfor i in range(1, n):\n    gcd_a = gcd(gcd_a, a[i])\n\nprint(gcd_a)", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef solve(A):\n    # A \u3092\u30bd\u30fc\u30c8\u3059\u308b\n    A.sort()\n    # \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\n    gcd_val = A[0]\n    for i in range(1, len(A)):\n        gcd_val = gcd(gcd_val, A[i])\n    # \u53d6\u308a\u9664\u304f\u6570\u3092\u6c42\u3081\u308b\n    if gcd_val == 1:\n        return 1\n    remove_num = 1\n    while remove_num * gcd_val <= 10**9:\n        remove_num += 1\n    remove_num -= 1\n    return remove_num * gcd_val\n\nif __name__ == \"__main__\":\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(solve(A))"]