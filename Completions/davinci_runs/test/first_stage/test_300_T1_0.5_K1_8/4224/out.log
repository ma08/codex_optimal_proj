2022-04-19 23:10:38.332479 """
As AtCoder Beginner Contest 100 is taking place, the office of AtCoder, Inc. is decorated with a sequence of length N, a = {a_1, a_2, a_3, ..., a_N}.

Snuke, an employee, would like to play with this sequence.
Specifically, he would like to repeat the following operation as many times as possible:
For every i satisfying 1 \leq i \leq N, perform one of the following: "divide a_i by 2" and "multiply a_i by 3".  
Here, choosing "multiply a_i by 3" for every i is not allowed, and the value of a_i after the operation must be an integer.

At most how many operations can be performed?

-----Constraints-----
 - N is an integer between 1 and 10 \ 000 (inclusive).
 - a_i is an integer between 1 and 1 \ 000 \ 000 \ 000 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
N
a_1 a_2 a_3 ... a_N

-----Output-----
Print the maximum number of operations that Snuke can perform.

-----Sample Input-----
3
5 2 4

-----Sample Output-----
3

The sequence is initially {5, 2, 4}. Three operations can be performed as follows:
 - First, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {15, 6, 2}.
 - Next, multiply a_1 by 3, divide a_2 by 2 and multiply a_3 by 3. The sequence is now {45, 3, 6}.
 - Finally, multiply a_1 by 3, multiply a_2 by 3 and divide a_3 by 2. The sequence is now {135, 9, 3}.
"""
2022-04-19 23:10:38.332493 --------------------------
2022-04-19 23:10:38.332602 using api key derek
2022-04-19 23:10:54.696774 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    while a[i] % 2 == 0:\n        a[i] /= 2\n        ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#N = int(input())\n#A = list(map(int, input().split()))\nN = 3\nA = [5, 2, 4]\n\nans = 0\nfor i in range(N):\n    if A[i] % 2 == 0:\n        A[i] /= 2\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# N = int(input())\n# a = list(map(int, input().split()))\n\nN = 3\na = [5, 2, 4]\n\ndef divide(x):\n    return x // 2\n\ndef multiply(x):\n    return x * 3\n\ndef count_even(a):\n    return len([x for x in a if x % 2 == 0])\n\ndef count_odd(a):\n    return len([x for x in a if x % 2 != 0])\n\ndef count_three(a):\n    return len([x for x in a if x % 3 == 0])\n\ndef main():\n    print('count_even:', count_even(a))\n    print('count_odd:', count_odd(a))\n    print('count_three:', count_three(a))\n    if count_even(a) == N:\n        print(N//2)\n    else:\n        if count_three(a) > count_odd(a):\n            print(count_three(a) + (N - count_three(a))//2)\n        else:\n            print(count_odd(a))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    # Check if any element is divisible by 2\n    while(any(x%2 == 0 for x in a)):\n        # Check if any element is divisible by 4\n        if(any(x%4 == 0 for x in a)):\n            # Divide all elements by 2\n            a = list(map(lambda x: x/2, a))\n            count += 1\n        else:\n            # Divide all elements by 2 except for the first one\n            for i in range(1, N):\n                a[i] = a[i]/2\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ncounter = 0\n\ndef div2(n):\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\ndef div3(n):\n    if n % 3 == 0:\n        return True\n    else:\n        return False\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    global counter\n    for i in range(n):\n        if div2(l[i]):\n            l[i] = l[i] // 2\n            counter += 1\n        elif div3(l[i]):\n            l[i] = l[i] // 3\n            counter += 1\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# N = 3\n# A = [5, 2, 4]\n\nN = 10 ** 4\nA = [10 ** 9] * N\n\ndef check_ans(A, n):\n    while len(A) > 0:\n        if A[0] % 2 == 0:\n            A = [a // 2 for a in A]\n            n += 1\n        else:\n            break\n    return n\n\nans = 0\n\nfor i in range(N):\n    a = A[i]\n    if a % 2 == 0:\n        A[i] = a // 2\n        ans += 1\n    elif a % 3 == 0:\n        A[i] = a // 3\n        ans += 1\n\nans = check_ans(A, ans)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n\n    ans = 0\n\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] /= 2\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nwhile all(i % 2 == 0 for i in a):\n    a = [i / 2 for i in a]\n    count += 1\n\nprint(count)"
    }
  ],
  "created": 1650409838,
  "id": "cmpl-4yrHSA297afa4L44BI8lzfHdTTCaV",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:10:54.697214 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    while a[i] % 2 == 0:\n        a[i] /= 2\n        ans += 1\nprint(ans)"
}
2022-04-19 23:10:54.697267 REASON stop
2022-04-19 23:10:54.703350 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#N = int(input())\n#A = list(map(int, input().split()))\nN = 3\nA = [5, 2, 4]\n\nans = 0\nfor i in range(N):\n    if A[i] % 2 == 0:\n        A[i] /= 2\n        ans += 1\n\nprint(ans)"
}
2022-04-19 23:10:54.703505 REASON stop
2022-04-19 23:10:54.706525 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# N = int(input())\n# a = list(map(int, input().split()))\n\nN = 3\na = [5, 2, 4]\n\ndef divide(x):\n    return x // 2\n\ndef multiply(x):\n    return x * 3\n\ndef count_even(a):\n    return len([x for x in a if x % 2 == 0])\n\ndef count_odd(a):\n    return len([x for x in a if x % 2 != 0])\n\ndef count_three(a):\n    return len([x for x in a if x % 3 == 0])\n\ndef main():\n    print('count_even:', count_even(a))\n    print('count_odd:', count_odd(a))\n    print('count_three:', count_three(a))\n    if count_even(a) == N:\n        print(N//2)\n    else:\n        if count_three(a) > count_odd(a):\n            print(count_three(a) + (N - count_three(a))//2)\n        else:\n            print(count_odd(a))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:54.706660 REASON stop
2022-04-19 23:10:54.735519 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    # Check if any element is divisible by 2\n    while(any(x%2 == 0 for x in a)):\n        # Check if any element is divisible by 4\n        if(any(x%4 == 0 for x in a)):\n            # Divide all elements by 2\n            a = list(map(lambda x: x/2, a))\n            count += 1\n        else:\n            # Divide all elements by 2 except for the first one\n            for i in range(1, N):\n                a[i] = a[i]/2\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:54.735675 REASON stop
2022-04-19 23:10:54.765347 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ncounter = 0\n\ndef div2(n):\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\ndef div3(n):\n    if n % 3 == 0:\n        return True\n    else:\n        return False\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    global counter\n    for i in range(n):\n        if div2(l[i]):\n            l[i] = l[i] // 2\n            counter += 1\n        elif div3(l[i]):\n            l[i] = l[i] // 3\n            counter += 1\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 23:10:54.765544 REASON stop
2022-04-19 23:10:54.774510 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# N = int(input())\n# A = list(map(int, input().split()))\n\n# N = 3\n# A = [5, 2, 4]\n\nN = 10 ** 4\nA = [10 ** 9] * N\n\ndef check_ans(A, n):\n    while len(A) > 0:\n        if A[0] % 2 == 0:\n            A = [a // 2 for a in A]\n            n += 1\n        else:\n            break\n    return n\n\nans = 0\n\nfor i in range(N):\n    a = A[i]\n    if a % 2 == 0:\n        A[i] = a // 2\n        ans += 1\n    elif a % 3 == 0:\n        A[i] = a // 3\n        ans += 1\n\nans = check_ans(A, ans)\n\nprint(ans)"
}
2022-04-19 23:10:54.774634 REASON stop
2022-04-19 23:10:54.784411 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n\n    ans = 0\n\n    for i in range(N):\n        if a[i] % 2 == 0:\n            a[i] /= 2\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:54.784562 REASON stop
2022-04-19 23:10:54.797664 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nwhile all(i % 2 == 0 for i in a):\n    a = [i / 2 for i in a]\n    count += 1\n\nprint(count)"
}
2022-04-19 23:10:54.797910 REASON stop
