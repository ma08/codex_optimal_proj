["\n\n# Solution\n\nn, r = map(int, input().split())\n\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\na.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if r >= a[i][0]:\n        ans += 1\n        r += a[i][1]\n\nprint(ans)", "\n\n# SOLUTION\nn,r = map(int,input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\na = sorted(a,key = lambda x:x[1])\nfor i in range(n):\n    r+=a[i][1]\n    if r<0:\n        print(i)\n        break\nelse:\n    print(n)", "\n\nn, r = map(int, input().split())\n\nprojects = []\n\nfor _ in range(n):\n    a, b = map(int, input().split())\n    projects.append([a, b])\n\nprojects.sort()\n\nfor i in range(n):\n    projects[i][0] = projects[i][0] - r\n    if i > 0:\n        projects[i][0] = projects[i][0] + projects[i-1][1]\n\nprojects.sort()\n\nans = 0\n\nfor i in range(n):\n    if projects[i][0] > 0:\n        break\n    ans += 1\n\nprint(ans)", "\n\ndef main():\n    n, r = [int(x) for x in input().split()]\n    projects = []\n    for i in range(n):\n        a, b = [int(x) for x in input().split()]\n        projects.append((a, b))\n    projects.sort()\n    ans = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nraw_input()\nr = int(raw_input())\n\nprojects = []\nfor i in range(int(raw_input())):\n    projects.append(map(int, raw_input().split()))\n\nprojects.sort(key=lambda x: x[1])\n\nans = 0\nfor x in projects:\n    if r >= x[0]:\n        ans += 1\n        r += x[1]\n\nprint ans", "\n\n# Solution\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort(key=lambda x: x[0])\n\n# print(projects)\n\ncount = 0\nfor a, b in projects:\n    if a <= r:\n        r += b\n        count += 1\n    else:\n        break\n\nprint(count)", "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    # Read input\n    n, r = [int(x) for x in sys.stdin.readline().split()]\n    projects = []\n    for _ in range(n):\n        projects.append([int(x) for x in sys.stdin.readline().split()])\n    # Sort the projects by the amount of rating required\n    projects.sort(key=lambda x: x[0])\n    # Start with the first project\n    current_rating = r\n    current_index = 0\n    # Iterate through projects\n    while current_index < n:\n        # If we have enough rating for the current project, mark it as completed\n        if current_rating >= projects[current_index][0]:\n            current_rating += projects[current_index][1]\n            current_index += 1\n        # Otherwise, move on to the next project\n        else:\n            current_index += 1\n    # Print the number of completed projects\n    print(current_index)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, r = map(int,input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n\na.sort(key=lambda x:x[0])\n\ndp = [0 for i in range(n)]\n\nfor i in range(n):\n    if r < a[i][0]:\n        break\n    r = r + a[i][1]\n    if r < 0:\n        break\n    dp[i] = 1\n\nfor i in range(1,n):\n    dp[i] = dp[i] + dp[i-1]\n\nprint(max(dp))"]