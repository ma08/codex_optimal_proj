2022-04-19 22:51:40.060338 """
Takahashi is a teacher responsible for a class of N students.
The students are given distinct student numbers from 1 to N.
Today, all the students entered the classroom at different times.
According to Takahashi's record, there were A_i students in the classroom when student number i entered the classroom (including student number i).
From these records, reconstruct the order in which the students entered the classroom.

-----Constraints-----
 -  1 \le N \le 10^5 
 -  1 \le A_i \le N 
 -  A_i \neq A_j  (i \neq j)
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
A_1 A_2 \ldots A_N

-----Output-----
Print the student numbers of the students in the order the students entered the classroom.

-----Sample Input-----
3
2 3 1

-----Sample Output-----
3 1 2

First, student number 3 entered the classroom.
Then, student number 1 entered the classroom.
Finally, student number 2 entered the classroom.
"""
2022-04-19 22:51:40.060350 --------------------------
2022-04-19 22:51:40.060455 using api key gabby
2022-04-19 22:52:03.420790 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    print(a.index(i+1)+1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# A is the number of students in the classroom when each student entered the classroom, including themselves\n# So, we can use A as a key to sort the students\n# The student with the smallest number of students when they entered the classroom must have entered first\n# (because they have the smallest number of students when they entered the classroom)\n# The student with the second smallest number of students when they entered the classroom must have entered second\n# (because they have the second smallest number of students when they entered the classroom)\n# And so on...\n\n# We can use the value of A as the key to sort the students\n# We can use the index of A as the student number\n# So, we can zip the two lists together and sort by A\n\n# We can then unzip the lists and print the student numbers\n\n# Create a list of tuples where each tuple is (A, index)\n# Sort by A\n# Unzip the list of tuples into two lists\n# Print the student numbers\nprint(*[b for a, b in sorted(zip(A, range(1, N + 1)))])\n\n\"\"\"\n-----Test Cases-----\n\n(Test Case 1)\nInput:\n3\n2 3 1\n\nOutput:\n3 1 2\n\n(Test Case 2)\nInput:\n5\n5 3 2 4 1\n\nOutput:\n1 4 2 5 3\n\n(Test Case 3)\nInput:\n6\n3 5 6 1 2 4\n\nOutput:\n4 2 6 1 5 3\n\n(Test Case 4)\nInput:\n10\n1 2 3 4 5 6 7 8 9 10\n\nOutput:\n1 2 3 4 5 6 7 8 9 10\n\"\"\""
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u30ea\u30b9\u30c8\u3092\u4f5c\u308b\nl = [0] * N\n\nfor i in range(N):\n    l[A[i]-1] = i+1\n\nfor i in range(N):\n    sys.stdout.write(str(l[i]) + \" \")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\nB = [0] * n\nfor i in range(n):\n    B[A[i] - 1] = i + 1\n\nprint(*B)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nstudent_number = []\nfor i in range(N):\n    student_number.append(0)\n\nfor i in range(N):\n    student_number[A[i]-1] = i+1\n\nprint(*student_number)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    b = [0]*n\n    for i in range(n):\n        b[a[i]-1] = str(i+1)\n    print(' '.join(b))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n\t\"\"\"\n\tRead N, A_i and print the student numbers of the students in the order the students entered the classroom.\n\t\"\"\"\n\tn = int(input())\n\ta_i = list(map(int, input().split()))\n\t\n\ta_i.sort(key=lambda x: x)\n\t\n\tprint(*a_i)\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    \n    d = {}\n    for i in range(n):\n        d[a[i]] = i+1\n    d = sorted(d.items())\n    \n    for k, v in d:\n        print(v)\n        \nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650408700,
  "id": "cmpl-4yqz6CNheX1rS9FG3wjDOoY7cDmrg",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:52:03.421159 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    print(a.index(i+1)+1)"
}
2022-04-19 22:52:03.421217 REASON stop
2022-04-19 22:52:03.462501 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# A is the number of students in the classroom when each student entered the classroom, including themselves\n# So, we can use A as a key to sort the students\n# The student with the smallest number of students when they entered the classroom must have entered first\n# (because they have the smallest number of students when they entered the classroom)\n# The student with the second smallest number of students when they entered the classroom must have entered second\n# (because they have the second smallest number of students when they entered the classroom)\n# And so on...\n\n# We can use the value of A as the key to sort the students\n# We can use the index of A as the student number\n# So, we can zip the two lists together and sort by A\n\n# We can then unzip the lists and print the student numbers\n\n# Create a list of tuples where each tuple is (A, index)\n# Sort by A\n# Unzip the list of tuples into two lists\n# Print the student numbers\nprint(*[b for a, b in sorted(zip(A, range(1, N + 1)))])\n\n\"\"\"\n-----Test Cases-----\n\n(Test Case 1)\nInput:\n3\n2 3 1\n\nOutput:\n3 1 2\n\n(Test Case 2)\nInput:\n5\n5 3 2 4 1\n\nOutput:\n1 4 2 5 3\n\n(Test Case 3)\nInput:\n6\n3 5 6 1 2 4\n\nOutput:\n4 2 6 1 5 3\n\n(Test Case 4)\nInput:\n10\n1 2 3 4 5 6 7 8 9 10\n\nOutput:\n1 2 3 4 5 6 7 8 9 10\n\"\"\""
}
2022-04-19 22:52:03.462654 REASON stop
2022-04-19 22:52:03.533038 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# \u30ea\u30b9\u30c8\u3092\u4f5c\u308b\nl = [0] * N\n\nfor i in range(N):\n    l[A[i]-1] = i+1\n\nfor i in range(N):\n    sys.stdout.write(str(l[i]) + \" \")"
}
2022-04-19 22:52:03.533211 REASON stop
2022-04-19 22:52:03.610453 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\nB = [0] * n\nfor i in range(n):\n    B[A[i] - 1] = i + 1\n\nprint(*B)"
}
2022-04-19 22:52:03.610637 REASON stop
2022-04-19 22:52:03.640687 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nstudent_number = []\nfor i in range(N):\n    student_number.append(0)\n\nfor i in range(N):\n    student_number[A[i]-1] = i+1\n\nprint(*student_number)"
}
2022-04-19 22:52:03.640879 REASON stop
2022-04-19 22:52:03.698404 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    b = [0]*n\n    for i in range(n):\n        b[a[i]-1] = str(i+1)\n    print(' '.join(b))\n\nmain()"
}
2022-04-19 22:52:03.698572 REASON stop
2022-04-19 22:52:03.753284 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n\t\"\"\"\n\tRead N, A_i and print the student numbers of the students in the order the students entered the classroom.\n\t\"\"\"\n\tn = int(input())\n\ta_i = list(map(int, input().split()))\n\t\n\ta_i.sort(key=lambda x: x)\n\t\n\tprint(*a_i)\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-19 22:52:03.753478 REASON stop
2022-04-19 22:52:03.791979 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    \n    d = {}\n    for i in range(n):\n        d[a[i]] = i+1\n    d = sorted(d.items())\n    \n    for k, v in d:\n        print(v)\n        \nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:52:03.792286 REASON stop
