2022-04-19 23:41:47.043273 """
Given any integer x, Aoki can do the operation below.
Operation: Replace x with the absolute difference of x and K.
You are given the initial value of an integer N. Find the minimum possible value taken by N after Aoki does the operation zero or more times.

-----Constraints-----
 - 0 ≤ N ≤ 10^{18}
 - 1 ≤ K ≤ 10^{18}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N K

-----Output-----
Print the minimum possible value taken by N after Aoki does the operation zero or more times.

-----Sample Input-----
7 4

-----Sample Output-----
1

Initially, N=7.
After one operation, N becomes |7-4| = 3.
After two operations, N becomes |3-4| = 1, which is the minimum value taken by N.
"""
2022-04-19 23:41:47.043289 --------------------------
2022-04-19 23:41:47.043453 using api key derek
2022-04-19 23:41:58.327656 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Process\n# 1. Input N and K\n# 2. If N % K == 0 -> N = N - K\n# 3. Else -> N = N % K\n\n# 1. Input N and K\nN, K = map(int, input().split())\n\n# 2. If N % K == 0 -> N = N - K\nif N % K == 0:\n    N = N - K\n\n# 3. Else -> N = N % K\nelse:\n    N = N % K\n\n# 4. Output N\nprint(N)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, k = list(map(int, input().split()))\n\nif n % k == 0:\n    print(0)\nelse:\n    print(n % k)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(K - (N % K))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, K = [int(i) for i in input().split()]\n\nif N % K == 0:\n    print(0)\nelse:\n    print(1)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport math\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(abs(N % K - K))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# n = int(input())\n# a = list(map(int, input().split()))\n# a = [int(input()) for _ in range(n)]\n# s = input()\n# s = input().rstrip().split(' ')\n# n = int(sys.stdin.readline())\nn, k = map(int, sys.stdin.readline().split())\n\nif n % k == 0:\n    ans = 0\nelse:\n    ans = 1\nprint(ans)"
    }
  ],
  "created": 1650411707,
  "id": "cmpl-4yrlbEbnnXqfuODdEHaX901WkGpmX",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:41:58.327982 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(1)"
}
2022-04-19 23:41:58.328016 REASON stop
2022-04-19 23:41:58.328767 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    if n % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:41:58.328851 REASON stop
2022-04-19 23:41:58.329290 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Process\n# 1. Input N and K\n# 2. If N % K == 0 -> N = N - K\n# 3. Else -> N = N % K\n\n# 1. Input N and K\nN, K = map(int, input().split())\n\n# 2. If N % K == 0 -> N = N - K\nif N % K == 0:\n    N = N - K\n\n# 3. Else -> N = N % K\nelse:\n    N = N % K\n\n# 4. Output N\nprint(N)"
}
2022-04-19 23:41:58.329350 REASON stop
2022-04-19 23:41:58.342360 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, k = list(map(int, input().split()))\n\nif n % k == 0:\n    print(0)\nelse:\n    print(n % k)"
}
2022-04-19 23:41:58.342496 REASON stop
2022-04-19 23:41:58.358844 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(K - (N % K))"
}
2022-04-19 23:41:58.358971 REASON stop
2022-04-19 23:41:58.367872 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, K = [int(i) for i in input().split()]\n\nif N % K == 0:\n    print(0)\nelse:\n    print(1)"
}
2022-04-19 23:41:58.367986 REASON stop
2022-04-19 23:41:58.369404 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport math\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(abs(N % K - K))"
}
2022-04-19 23:41:58.369500 REASON stop
2022-04-19 23:41:58.370095 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# n = int(input())\n# a = list(map(int, input().split()))\n# a = [int(input()) for _ in range(n)]\n# s = input()\n# s = input().rstrip().split(' ')\n# n = int(sys.stdin.readline())\nn, k = map(int, sys.stdin.readline().split())\n\nif n % k == 0:\n    ans = 0\nelse:\n    ans = 1\nprint(ans)"
}
2022-04-19 23:41:58.370277 REASON stop
