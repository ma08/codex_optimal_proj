["\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        if a[i] > m:\n            break\n        elif a[i] == m:\n            count += 1\n\n    for i in range(n):\n        if a[i] > m:\n            break\n        elif a[i] == m:\n            count += 1\n        else:\n            for j in range(i+1, n):\n                if a[j] > m:\n                    break\n                elif a[j] == m:\n                    count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\ndef get_median(numbers):\n    numbers = sorted(numbers)\n    if len(numbers) % 2 == 0:\n        return numbers[int(math.floor(len(numbers) / 2))]\n    else:\n        return numbers[int(math.floor(len(numbers) / 2))]\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if get_median(a[i:j+1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n,m = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    counts = {}\n    for i in arr:\n        if i not in counts:\n            counts[i] = 0\n        counts[i] += 1\n    keys = sorted(counts.keys())\n    left = 0\n    right = len(keys) - 1\n    res = 0\n    while left <= right:\n        if keys[left] + keys[right] == m:\n            if keys[left] == keys[right]:\n                res += counts[keys[left]] * (counts[keys[left]] - 1)\n            else:\n                res += counts[keys[left]] * counts[keys[right]]\n            left += 1\n            right -= 1\n        elif keys[left] + keys[right] < m:\n            left += 1\n        else:\n            right -= 1\n    print(res)\n\nif __name__ == '__main__':\n    main()", "\n\ndef readInput():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, m, a\n\ndef solve(n, m, a):\n    pass\n\nn, m, a = readInput()\nprint(solve(n, m, a))", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    # print(n, m, a)\n    \n    # create a list of tuples (a[i], i)\n    a_i = []\n    for i in range(n):\n        a_i.append((a[i], i))\n    # print(a_i)\n    \n    # sort the list of tuples\n    a_i.sort()\n    # print(a_i)\n    \n    # create a list of tuples (a[i], i, a[i] - m)\n    a_i_m = []\n    for i in range(n):\n        a_i_m.append((a[i], i, a[i] - m))\n    # print(a_i_m)\n    \n    # sort the list of tuples\n    a_i_m.sort()\n    # print(a_i_m)\n    \n    # create a list of tuples (a[i], i, a[i] - m, a[i] - m + 1)\n    a_i_m_1 = []\n    for i in range(n):\n        a_i_m_1.append((a[i], i, a[i] - m, a[i] - m + 1))\n    # print(a_i_m_1)\n    \n    # sort the list of tuples\n    a_i_m_1.sort()\n    # print(a_i_m_1)\n    \n    # create a list of tuples (a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1)\n    a_i_m_1_m1 = []\n    for i in range(n):\n        a_i_m_1_m1.append((a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1))\n    # print(a_i_m_1_m1)\n    \n    # sort the list of tuples\n    a_i_m_1_m1.sort()\n    # print(a_i_m_1_m1)\n    \n    # create a list of tuples (a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1, a[i] - m + 2)\n    a_i_m_1_m1_2 = []\n    for i in range(n):\n        a_i_m_1_m1_2.append((a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1, a[i] - m + 2))\n    # print(a_i_m_1_m1_2)\n    \n    # sort the list of tuples\n    a_i_m_1_m1_2.sort()\n    # print(a_i_m_1_m1_2)\n    \n    # create a list of tuples (a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1, a[i] - m + 2, a[i] - m - 2)\n    a_i_m_1_m1_2_m2 = []\n    for i in range(n):\n        a_i_m_1_m1_2_m2.append((a[i], i, a[i] - m, a[i] - m + 1, a[i] - m - 1, a[i] - m + 2, a[i] - m - 2))\n    # print(a_i_m_1_m1_2_m2)\n    \n    # sort the list of tuples\n    a_i_m_1_m1_2_m2.sort()\n    # print(a_i_m_1_m1_2_m2)\n    \n    # count the pairs\n    count = 0\n    for i in range(n):\n        if a[i] == m:\n            count += 1\n    \n    # m < a[i]\n    for i in range(n):\n        # m + 1 < a[i]\n        if a[i] - m > 1:\n            # find the number of elements greater than a[i] - m - 1\n            count += i - a_i_m_1_m1_2_m2.index(a[i] - m - 1, i)\n        # m + 1 = a[i]\n        elif a[i] - m == 1:\n            # find the number of elements greater than a[i] - m - 1\n            count += i - a_i_m_1_m1_2.index(a[i] - m - 1, i)\n    # m > a[i]\n    for i in range(n):\n        # m - 1 > a[i]\n        if a[i] - m < -1:\n            # find the number of elements less than a[i] - m + 1\n            count += a_i_m_1_m1_2_m2.index(a[i] - m + 1, i) - i\n        # m - 1 = a[i]\n        elif a[i] - m == -1:\n            # find the number of elements less than a[i] - m + 1\n            count += a_i_m_1_m1_2.index(a[i] - m + 1, i) - i\n    \n    print(count)\n    \n    \nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n\n    # \u524d\u7f00\u548c\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n\n    # \u524d\u7f00\u548c\u4e2d\u662f\u5426\u5b58\u5728m\uff0c\u5b58\u5728\u5219\u8bb0\u5f55\u51fa\u73b0\u7684\u6b21\u6570\n    tmp = {}\n    for i in range(1, n + 1):\n        if a[i] - m in tmp:\n            tmp[a[i] - m] += 1\n        else:\n            tmp[a[i] - m] = 1\n\n    # \u6b21\u6570\u7d2f\u52a0\n    for i in range(n):\n        if a[i] in tmp:\n            tmp[a[i]] += 1\n        else:\n            tmp[a[i]] = 1\n\n    res = 0\n    for i in range(1, n + 1):\n        if a[i] - m in tmp:\n            res += tmp[a[i] - m]\n\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n,m = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        for j in range(i,n):\n            if (j-i+1)%2 == 0:\n                if a[(j+i)//2] == m:\n                    s += 1\n            else:\n                if a[(j+i)//2] == m or a[(j+i)//2+1] == m:\n                    s += 1\n    print(s)\n\nif __name__ == '__main__':\n    main()"]