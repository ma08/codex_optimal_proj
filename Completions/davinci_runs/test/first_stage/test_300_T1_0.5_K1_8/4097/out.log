2022-04-19 21:57:10.222416 """
Polycarp likes arithmetic progressions. A sequence $[a_1, a_2, \dots, a_n]$ is called an arithmetic progression if for each $i$ ($1 \le i < n$) the value $a_{i+1} - a_i$ is the same. For example, the sequences $[42]$, $[5, 5, 5]$, $[2, 11, 20, 29]$ and $[3, 2, 1, 0]$ are arithmetic progressions, but $[1, 0, 1]$, $[1, 3, 9]$ and $[2, 3, 1]$ are not.

It follows from the definition that any sequence of length one or two is an arithmetic progression.

Polycarp found some sequence of positive integers $[b_1, b_2, \dots, b_n]$. He agrees to change each element by at most one. In the other words, for each element there are exactly three options: an element can be decreased by $1$, an element can be increased by $1$, an element can be left unchanged.

Determine a minimum possible number of elements in $b$ which can be changed (by exactly one), so that the sequence $b$ becomes an arithmetic progression, or report that it is impossible.

It is possible that the resulting sequence contains element equals $0$.


-----Input-----

The first line contains a single integer $n$ $(1 \le n \le 100\,000)$ — the number of elements in $b$.

The second line contains a sequence $b_1, b_2, \dots, b_n$ $(1 \le b_i \le 10^{9})$.


-----Output-----

If it is impossible to make an arithmetic progression with described operations, print -1. In the other case, print non-negative integer — the minimum number of elements to change to make the given sequence becomes an arithmetic progression. The only allowed operation is to add/to subtract one from an element (can't use operation twice to the same position).


-----Examples-----
Input
4
24 21 14 10

Output
3

Input
2
500 500

Output
0

Input
3
14 5 1

Output
-1

Input
5
1 3 6 9 12

Output
1



-----Note-----

In the first example Polycarp should increase the first number on $1$, decrease the second number on $1$, increase the third number on $1$, and the fourth number should left unchanged. So, after Polycarp changed three elements by one, his sequence became equals to $[25, 20, 15, 10]$, which is an arithmetic progression.

In the second example Polycarp should not change anything, because his sequence is an arithmetic progression.

In the third example it is impossible to make an arithmetic progression.

In the fourth example Polycarp should change only the first element, he should decrease it on one. After that his sequence will looks like $[0, 3, 6, 9, 12]$, which is an arithmetic progression.
"""
2022-04-19 21:57:10.222437 --------------------------
2022-04-19 21:57:10.222537 using api key derek
2022-04-19 21:58:34.946516 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef check(a):\n    if a[0] == a[-1]:\n        return True\n    return False\n\ndef check2(a):\n    if a[0] > a[-1]:\n        a[0], a[-1] = a[-1], a[0]\n    if a[1] > a[0] + 1:\n        a[1] = a[0] + 1\n    elif a[1] < a[0] - 1:\n        a[1] = a[0] - 1\n    if a[1] == a[0]:\n        return True\n    if a[1] > a[-1]:\n        return False\n    d = a[1] - a[0]\n    for i in range(2, n):\n        if a[i] > a[i-1] + d:\n            a[i] = a[i-1] + d\n        elif a[i] < a[i-1] - d:\n            a[i] = a[i-1] - d\n        if a[i] == a[i-1]:\n            return True\n    return False\n\nif n == 1:\n    print(0)\nelif n == 2:\n    print(0)\nelse:\n    if check(a):\n        print(0)\n    else:\n        if check2(a):\n            print(1)\n        else:\n            print(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nb = list(map(int, input().split()))\n\n# check if already arithmetic progression\nif len(set(b)) <= 2:\n    print(0)\n    exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 3:\n    print(1)\n    exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 4:\n    if b[0] == b[1] and b[0] != b[2]:\n        print(1)\n        exit()\n    if b[3] == b[4] and b[3] != b[2]:\n        print(1)\n        exit()\n    if b[1] == b[2] and b[0] != b[1]:\n        print(1)\n        exit()\n    if b[2] == b[3] and b[3] != b[4]:\n        print(1)\n        exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 5:\n    if b[0] == b[1] and b[0] != b[2] and b[3] == b[4]:\n        print(2)\n        exit()\n    if b[0] == b[1] and b[0] != b[2] and b[2] == b[3]:\n        print(2)\n        exit()\n    if b[1] == b[2] and b[0] != b[1] and b[3] == b[4]:\n        print(2)\n        exit()\n    if b[1] == b[2] and b[0] != b[1] and b[2] == b[3]:\n        print(2)\n        exit()\n    if b[2] == b[3] and b[3] != b[4] and b[0] == b[1]:\n        print(2)\n        exit()\n    if b[2] == b[3] and b[3] != b[4] and b[1] == b[2]:\n        print(2)\n        exit()\n    if b[3] == b[4] and b[3] != b[2] and b[0] == b[1]:\n        print(2)\n        exit()\n    if b[3] == b[4] and b[3] != b[2] and b[1] == b[2]:\n        print(2)\n        exit()\n\nprint(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    if n <= 2:\n        print(0)\n        return\n    b = list(map(int, input().split()))\n    diff = b[1] - b[0]\n    for i in range(2, n):\n        if b[i] - b[i-1] != diff:\n            if b[i-1] - b[i-2] == diff:\n                b[i] = b[i-1] + diff\n            elif b[i-2] - b[i-1] == diff:\n                b[i-1] = b[i-2] + diff\n            else:\n                print(-1)\n                return\n    print(b.count(b[0]) + b.count(b[-1]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\narr = list(map(int, sys.stdin.readline().split()))\n\nif n <= 2:\n    print 0\nelif n == 3:\n    if arr[1] - arr[0] == arr[2] - arr[1]:\n        print 0\n    else:\n        print -1\nelse:\n    d1 = arr[1] - arr[0]\n    d2 = arr[2] - arr[1]\n    if d1 == d2:\n        print 0\n    else:\n        if arr[3] - arr[2] == d1:\n            print 1\n        elif arr[3] - arr[2] == d2:\n            print 1\n        else:\n            print -1"
    },
    {
      "finish_reason": "length",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\nb = [int(x) for x in input().split()]\n\nif n == 1:\n    print(0)\nelif n == 2:\n    print(0)\nelse:\n    # b[1] - b[0] = d\n    d = b[1] - b[0]\n    # b[2] - b[1] = 2d\n    # b[2] - b[0] = 3d\n    # b[3] - b[0] = 4d\n    # b[3] - b[1] = 3d\n    # b[3] - b[2] = d\n    # b[4] - b[0] = 5d\n    # b[4] - b[1] = 4d\n    # b[4] - b[2] = 2d\n    # b[4] - b[3] = d\n    # b[5] - b[0] = 6d\n    # b[5] - b[1] = 5d\n    # b[5] - b[2] = 3d\n    # b[5] - b[3] = 2d\n    # b[5] - b[4] = d\n    # b[6] - b[0] = 7d\n    # b[6] - b[1] = 6d\n    # b[6] - b[2] = 4d\n    # b[6] - b[3] = 3d\n    # b[6] - b[4] = 2d\n    # b[6] - b[5] = d\n    # b[7] - b[0] = 8d\n    # b[7] - b[1] = 7d\n    # b[7] - b[2] = 5d\n    # b[7] - b[3] = 4d\n    # b[7] - b[4] = 3d\n    # b[7] - b[5] = 2d\n    # b[7] - b[6] = d\n    # b[8] - b[0] = 9d\n    # b[8] - b[1] = 8d\n    # b[8] - b[2] = 6d\n    # b[8] - b[3] = 5d\n    # b[8] - b[4] = 4d\n    # b[8] - b[5] = 3d\n    # b[8] - b[6] = 2d\n    # b[8] - b[7] = d\n    # b[9] - b[0] = 10d\n    # b[9] - b[1] = 9d\n    # b[9] - b[2] = 7d\n    # b[9] - b[3] = 6d\n    # b[9] - b[4] = 5d\n    # b[9] - b[5] = 4d\n    # b[9] - b[6] = 3d\n    # b[9] - b[7] = 2d\n    # b[9] - b[8] = d\n    # b[10] - b[0] = 11d\n    # b[10] - b[1] = 10d\n    # b[10] - b[2] = 8d\n    # b[10] - b[3] = 7d\n    # b[10] - b[4] = 6d\n    # b[10] - b[5] = 5d\n    # b[10] - b[6] = 4d\n    # b[10] - b[7] = 3d\n    # b[10] - b[8] = 2d\n    # b[10] - b[9] = d\n    # b[11] - b[0] = 12d\n    # b[11] - b[1] = 11d\n    # b[11] - b[2] = 9d\n    # b[11] - b[3] = 8d\n    # b[11] - b[4] = 7d\n    # b[11] - b[5] = 6d\n    # b[11] - b[6] = 5d\n    # b[11] - b[7] = 4d\n    # b[11] - b[8] = 3d\n    # b[11] - b[9] = 2d\n    # b[11] - b[10] = d\n    # b[12] - b[0] = 13d\n    # b[12] - b[1] = 12d\n    # b[12] - b[2] = 10d\n    # b[12] - b[3] = 9d\n    # b[12] - b[4] = 8d\n    # b[12] - b[5] = 7d\n    # b[12] - b[6] = 6d\n    # b[12] - b[7] = 5d\n    # b[12] - b[8] = 4d\n    # b[12] - b[9] = 3d\n    # b[12] - b[10] = 2d\n    # b[12] - b[11] = d\n    # b[13] - b[0] = 14d\n    # b[13] - b[1] = 13d\n    # b[13] - b[2] = 11d\n    # b[13] - b[3] = 10d\n    # b[13] - b[4] = 9d\n    # b[13] - b[5] = 8d\n    # b[13] - b[6] = 7d\n    # b[13] - b[7] = 6d\n    # b[13] - b[8] = 5d\n    # b[13] - b[9] = 4d\n    # b[13] - b[10] = 3d\n    # b[13] - b[11] = 2d\n    # b[13] - b[12] = d\n    # b[14] - b[0] = 15d\n    # b[14] - b[1] = 14d\n    # b[14] - b[2] = 12d\n    # b[14] - b[3] = 11d\n    # b[14] - b[4] = 10d\n    # b[14] - b[5] = 9d\n    # b[14] - b[6] = 8d\n    # b[14] - b[7] = 7d\n    # b[14] - b[8] = 6d\n    # b[14] - b[9] = 5d\n    # b[14] - b[10] = 4d\n    # b[14] - b[11] = 3d\n    # b[14] - b[12] = 2d\n    # b[14] - b[13] = d\n    # b[15] - b[0] = 16d\n    # b[15] - b[1] = 15d\n    # b[15] - b[2] = 13d\n    # b[15] - b[3] = 12d\n    # b[15] - b[4] = 11d\n    # b[15] - b[5] = 10d\n    # b[15] - b[6] = 9d\n    # b[15] - b[7] = 8d\n    # b[15] - b[8] = 7d\n    # b[15] - b[9] = 6d\n    # b[15] - b[10] = 5d\n    # b[15] - b[11] = 4d\n    # b[15] - b[12] = 3d\n    # b[15] - b[13] = 2d\n    # b[15] - b[14] = d\n    # b[16] - b[0] = 17d\n    # b[16] - b[1] = 16d\n    # b[16] - b[2] = 14d\n    # b[16] - b[3] = 13d\n    # b[16] - b[4] = 12d\n    # b[16] - b[5] = 11d\n    # b[16] - b[6] = 10d\n    # b[16] - b[7] = 9d\n    # b[16] - b[8] = 8d\n    # b[16] - b[9] = 7d\n    # b[16] - b[10] = 6d\n    # b[16] - b[11] = 5d\n    # b[16] - b[12] = 4d\n    # b[16] - b[13] = 3d\n    # b[16] - b[14] = 2d\n    # b[16] - b[15] = d\n    # b[17] - b[0] = 18d\n    # b[17] - b[1] = 17d\n    # b[17] - b[2] = 15d\n    # b[17] - b[3] = 14d\n    # b[17] - b[4] = 13d\n    # b[17] - b[5] = 12d\n    # b[17] - b[6] = 11d\n    # b[17] - b[7] = 10d\n    # b[17] - b[8] = 9d\n    # b[17] - b[9] = 8d\n    # b[17] - b[10] = 7d\n    # b[17] - b[11] = 6d\n    # b[17] - b[12] = 5d\n    # b[17] - b[13] = 4d\n    # b[17] - b[14] = 3d\n    # b[17] - b[15] = 2d\n    # b[17] - b[16] = d\n    # b[18] - b[0] = 19d\n    # b[18] - b[1] = 18d\n    # b[18] - b[2] = 16d\n    # b[18] - b[3] = 15d\n    # b[18] - b[4] = 14d\n    # b[18] - b[5] = 13d\n    # b[18] - b[6] = 12d\n    # b[18] - b[7] = 11d\n    # b[18] - b[8] = 10d\n    # b[18] - b[9] = 9d\n    # b[18] - b[10] = 8d\n    # b[18] - b[11] = 7d\n    # b[18] - b[12] = 6d\n    # b[18] - b[13] = 5d\n    # b[18] - b[14] = 4d\n    # b[18] - b[15] = 3d\n    # b[18] - b[16] = 2d\n    # b[18] - b[17] = d\n    # b[19] - b[0] = 20d\n    # b[19] - b[1] = 19d\n    # b[19] - b[2] = 17d\n    # b[19] - b[3] = 16d\n    # b[19] - b[4] = 15d\n    # b[19] - b[5] = 14d\n    # b[19] - b[6] = 13d\n    # b[19] - b[7] = 12d\n    # b[19] - b[8] = 11d\n    # b[19] - b[9] = 10d\n    # b[19] - b[10] = 9d\n    # b[19] - b[11] = 8d\n    # b[19] - b[12] = 7d\n    # b[19] - b[13] = 6d\n    # b[19] - b[14] = 5d\n    # b[19] - b[15] = 4d\n    # b[19] - b[16] = 3d\n    # b[19] - b[17] = 2d\n    # b[19] - b[18] = d\n\n   "
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_arithmetic_progression(a):\n    return len(set(a[i+1] - a[i] for i in range(len(a) - 1))) == 1\n\nif is_arithmetic_progression(a):\n    print(0)\nelse:\n    ans = n\n    for i in range(n):\n        for j in range(2):\n            for k in range(2):\n                for l in range(2):\n                    for m in range(2):\n                        if i + j + k + l + m == 0:\n                            continue\n                        b = a[:]\n                        if j == 1:\n                            b[i] += 1\n                        else:\n                            b[i] -= 1\n                        if k == 1:\n                            b[i+1] += 1\n                        else:\n                            b[i+1] -= 1\n                        if l == 1:\n                            b[i+2] += 1\n                        else:\n                            b[i+2] -= 1\n                        if m == 1:\n                            b[i+3] += 1\n                        else:\n                            b[i+3] -= 1\n                        if is_arithmetic_progression(b):\n                            ans = min(ans, j + k + l + m)\n    if ans == n:\n        print(-1)\n    else:\n        print(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tseq = list(map(int, sys.stdin.readline().split()))\n\tif n <= 2:\n\t\tprint(0)\n\t\treturn\n\td = seq[1] - seq[0]\n\tfor i in range(2, n):\n\t\tif seq[i] - seq[i-1] != d:\n\t\t\tif seq[i-1] - seq[i-2] == d:\n\t\t\t\tif seq[i] - seq[i-1] == d - 1:\n\t\t\t\t\tseq[i] += 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d + 1:\n\t\t\t\t\tseq[i] -= 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telif seq[i-1] - seq[i-2] == d - 1:\n\t\t\t\tif seq[i] - seq[i-1] == d:\n\t\t\t\t\tseq[i-1] += 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d - 1:\n\t\t\t\t\tseq[i] += 1\n\t\t\t\t\tseq[i-1] += 1\n\t\t\t\t\tprint(2)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telif seq[i-1] - seq[i-2] == d + 1:\n\t\t\t\tif seq[i] - seq[i-1] == d:\n\t\t\t\t\tseq[i-1] -= 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d + 1:\n\t\t\t\t\tseq[i] -= 1\n\t\t\t\t\tseq[i-1] -= 1\n\t\t\t\t\tprint(2)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tprint(-1)\n\t\t\t\treturn\n\tprint(0)\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\nb = list(map(int, input().split()))\n\nif b[1] - b[0] == b[2] - b[1]:\n    print(0)\nelif b[1] - b[0] < b[2] - b[1]:\n    if b[0] + b[2] - b[1] <= 0:\n        print(-1)\n    else:\n        print(1)\nelse:\n    if b[0] + b[1] - b[2] <= 0:\n        print(-1)\n    else:\n        print(1)"
    }
  ],
  "created": 1650405430,
  "id": "cmpl-4yq8MQa8CjXH8yvuTGZMfzqvVncds",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:58:34.947001 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef check(a):\n    if a[0] == a[-1]:\n        return True\n    return False\n\ndef check2(a):\n    if a[0] > a[-1]:\n        a[0], a[-1] = a[-1], a[0]\n    if a[1] > a[0] + 1:\n        a[1] = a[0] + 1\n    elif a[1] < a[0] - 1:\n        a[1] = a[0] - 1\n    if a[1] == a[0]:\n        return True\n    if a[1] > a[-1]:\n        return False\n    d = a[1] - a[0]\n    for i in range(2, n):\n        if a[i] > a[i-1] + d:\n            a[i] = a[i-1] + d\n        elif a[i] < a[i-1] - d:\n            a[i] = a[i-1] - d\n        if a[i] == a[i-1]:\n            return True\n    return False\n\nif n == 1:\n    print(0)\nelif n == 2:\n    print(0)\nelse:\n    if check(a):\n        print(0)\n    else:\n        if check2(a):\n            print(1)\n        else:\n            print(-1)"
}
2022-04-19 21:58:34.947050 REASON stop
2022-04-19 21:58:34.947748 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nb = list(map(int, input().split()))\n\n# check if already arithmetic progression\nif len(set(b)) <= 2:\n    print(0)\n    exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 3:\n    print(1)\n    exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 4:\n    if b[0] == b[1] and b[0] != b[2]:\n        print(1)\n        exit()\n    if b[3] == b[4] and b[3] != b[2]:\n        print(1)\n        exit()\n    if b[1] == b[2] and b[0] != b[1]:\n        print(1)\n        exit()\n    if b[2] == b[3] and b[3] != b[4]:\n        print(1)\n        exit()\n\n# check if already arithmetic progression\nif len(set(b)) == 5:\n    if b[0] == b[1] and b[0] != b[2] and b[3] == b[4]:\n        print(2)\n        exit()\n    if b[0] == b[1] and b[0] != b[2] and b[2] == b[3]:\n        print(2)\n        exit()\n    if b[1] == b[2] and b[0] != b[1] and b[3] == b[4]:\n        print(2)\n        exit()\n    if b[1] == b[2] and b[0] != b[1] and b[2] == b[3]:\n        print(2)\n        exit()\n    if b[2] == b[3] and b[3] != b[4] and b[0] == b[1]:\n        print(2)\n        exit()\n    if b[2] == b[3] and b[3] != b[4] and b[1] == b[2]:\n        print(2)\n        exit()\n    if b[3] == b[4] and b[3] != b[2] and b[0] == b[1]:\n        print(2)\n        exit()\n    if b[3] == b[4] and b[3] != b[2] and b[1] == b[2]:\n        print(2)\n        exit()\n\nprint(-1)"
}
2022-04-19 21:58:34.947823 REASON stop
2022-04-19 21:58:34.948226 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    if n <= 2:\n        print(0)\n        return\n    b = list(map(int, input().split()))\n    diff = b[1] - b[0]\n    for i in range(2, n):\n        if b[i] - b[i-1] != diff:\n            if b[i-1] - b[i-2] == diff:\n                b[i] = b[i-1] + diff\n            elif b[i-2] - b[i-1] == diff:\n                b[i-1] = b[i-2] + diff\n            else:\n                print(-1)\n                return\n    print(b.count(b[0]) + b.count(b[-1]))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:58:34.948283 REASON stop
2022-04-19 21:58:34.966154 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\narr = list(map(int, sys.stdin.readline().split()))\n\nif n <= 2:\n    print 0\nelif n == 3:\n    if arr[1] - arr[0] == arr[2] - arr[1]:\n        print 0\n    else:\n        print -1\nelse:\n    d1 = arr[1] - arr[0]\n    d2 = arr[2] - arr[1]\n    if d1 == d2:\n        print 0\n    else:\n        if arr[3] - arr[2] == d1:\n            print 1\n        elif arr[3] - arr[2] == d2:\n            print 1\n        else:\n            print -1"
}
2022-04-19 21:58:34.966271 REASON stop
2022-04-19 21:58:34.982479 4 {
  "finish_reason": "length",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\nb = [int(x) for x in input().split()]\n\nif n == 1:\n    print(0)\nelif n == 2:\n    print(0)\nelse:\n    # b[1] - b[0] = d\n    d = b[1] - b[0]\n    # b[2] - b[1] = 2d\n    # b[2] - b[0] = 3d\n    # b[3] - b[0] = 4d\n    # b[3] - b[1] = 3d\n    # b[3] - b[2] = d\n    # b[4] - b[0] = 5d\n    # b[4] - b[1] = 4d\n    # b[4] - b[2] = 2d\n    # b[4] - b[3] = d\n    # b[5] - b[0] = 6d\n    # b[5] - b[1] = 5d\n    # b[5] - b[2] = 3d\n    # b[5] - b[3] = 2d\n    # b[5] - b[4] = d\n    # b[6] - b[0] = 7d\n    # b[6] - b[1] = 6d\n    # b[6] - b[2] = 4d\n    # b[6] - b[3] = 3d\n    # b[6] - b[4] = 2d\n    # b[6] - b[5] = d\n    # b[7] - b[0] = 8d\n    # b[7] - b[1] = 7d\n    # b[7] - b[2] = 5d\n    # b[7] - b[3] = 4d\n    # b[7] - b[4] = 3d\n    # b[7] - b[5] = 2d\n    # b[7] - b[6] = d\n    # b[8] - b[0] = 9d\n    # b[8] - b[1] = 8d\n    # b[8] - b[2] = 6d\n    # b[8] - b[3] = 5d\n    # b[8] - b[4] = 4d\n    # b[8] - b[5] = 3d\n    # b[8] - b[6] = 2d\n    # b[8] - b[7] = d\n    # b[9] - b[0] = 10d\n    # b[9] - b[1] = 9d\n    # b[9] - b[2] = 7d\n    # b[9] - b[3] = 6d\n    # b[9] - b[4] = 5d\n    # b[9] - b[5] = 4d\n    # b[9] - b[6] = 3d\n    # b[9] - b[7] = 2d\n    # b[9] - b[8] = d\n    # b[10] - b[0] = 11d\n    # b[10] - b[1] = 10d\n    # b[10] - b[2] = 8d\n    # b[10] - b[3] = 7d\n    # b[10] - b[4] = 6d\n    # b[10] - b[5] = 5d\n    # b[10] - b[6] = 4d\n    # b[10] - b[7] = 3d\n    # b[10] - b[8] = 2d\n    # b[10] - b[9] = d\n    # b[11] - b[0] = 12d\n    # b[11] - b[1] = 11d\n    # b[11] - b[2] = 9d\n    # b[11] - b[3] = 8d\n    # b[11] - b[4] = 7d\n    # b[11] - b[5] = 6d\n    # b[11] - b[6] = 5d\n    # b[11] - b[7] = 4d\n    # b[11] - b[8] = 3d\n    # b[11] - b[9] = 2d\n    # b[11] - b[10] = d\n    # b[12] - b[0] = 13d\n    # b[12] - b[1] = 12d\n    # b[12] - b[2] = 10d\n    # b[12] - b[3] = 9d\n    # b[12] - b[4] = 8d\n    # b[12] - b[5] = 7d\n    # b[12] - b[6] = 6d\n    # b[12] - b[7] = 5d\n    # b[12] - b[8] = 4d\n    # b[12] - b[9] = 3d\n    # b[12] - b[10] = 2d\n    # b[12] - b[11] = d\n    # b[13] - b[0] = 14d\n    # b[13] - b[1] = 13d\n    # b[13] - b[2] = 11d\n    # b[13] - b[3] = 10d\n    # b[13] - b[4] = 9d\n    # b[13] - b[5] = 8d\n    # b[13] - b[6] = 7d\n    # b[13] - b[7] = 6d\n    # b[13] - b[8] = 5d\n    # b[13] - b[9] = 4d\n    # b[13] - b[10] = 3d\n    # b[13] - b[11] = 2d\n    # b[13] - b[12] = d\n    # b[14] - b[0] = 15d\n    # b[14] - b[1] = 14d\n    # b[14] - b[2] = 12d\n    # b[14] - b[3] = 11d\n    # b[14] - b[4] = 10d\n    # b[14] - b[5] = 9d\n    # b[14] - b[6] = 8d\n    # b[14] - b[7] = 7d\n    # b[14] - b[8] = 6d\n    # b[14] - b[9] = 5d\n    # b[14] - b[10] = 4d\n    # b[14] - b[11] = 3d\n    # b[14] - b[12] = 2d\n    # b[14] - b[13] = d\n    # b[15] - b[0] = 16d\n    # b[15] - b[1] = 15d\n    # b[15] - b[2] = 13d\n    # b[15] - b[3] = 12d\n    # b[15] - b[4] = 11d\n    # b[15] - b[5] = 10d\n    # b[15] - b[6] = 9d\n    # b[15] - b[7] = 8d\n    # b[15] - b[8] = 7d\n    # b[15] - b[9] = 6d\n    # b[15] - b[10] = 5d\n    # b[15] - b[11] = 4d\n    # b[15] - b[12] = 3d\n    # b[15] - b[13] = 2d\n    # b[15] - b[14] = d\n    # b[16] - b[0] = 17d\n    # b[16] - b[1] = 16d\n    # b[16] - b[2] = 14d\n    # b[16] - b[3] = 13d\n    # b[16] - b[4] = 12d\n    # b[16] - b[5] = 11d\n    # b[16] - b[6] = 10d\n    # b[16] - b[7] = 9d\n    # b[16] - b[8] = 8d\n    # b[16] - b[9] = 7d\n    # b[16] - b[10] = 6d\n    # b[16] - b[11] = 5d\n    # b[16] - b[12] = 4d\n    # b[16] - b[13] = 3d\n    # b[16] - b[14] = 2d\n    # b[16] - b[15] = d\n    # b[17] - b[0] = 18d\n    # b[17] - b[1] = 17d\n    # b[17] - b[2] = 15d\n    # b[17] - b[3] = 14d\n    # b[17] - b[4] = 13d\n    # b[17] - b[5] = 12d\n    # b[17] - b[6] = 11d\n    # b[17] - b[7] = 10d\n    # b[17] - b[8] = 9d\n    # b[17] - b[9] = 8d\n    # b[17] - b[10] = 7d\n    # b[17] - b[11] = 6d\n    # b[17] - b[12] = 5d\n    # b[17] - b[13] = 4d\n    # b[17] - b[14] = 3d\n    # b[17] - b[15] = 2d\n    # b[17] - b[16] = d\n    # b[18] - b[0] = 19d\n    # b[18] - b[1] = 18d\n    # b[18] - b[2] = 16d\n    # b[18] - b[3] = 15d\n    # b[18] - b[4] = 14d\n    # b[18] - b[5] = 13d\n    # b[18] - b[6] = 12d\n    # b[18] - b[7] = 11d\n    # b[18] - b[8] = 10d\n    # b[18] - b[9] = 9d\n    # b[18] - b[10] = 8d\n    # b[18] - b[11] = 7d\n    # b[18] - b[12] = 6d\n    # b[18] - b[13] = 5d\n    # b[18] - b[14] = 4d\n    # b[18] - b[15] = 3d\n    # b[18] - b[16] = 2d\n    # b[18] - b[17] = d\n    # b[19] - b[0] = 20d\n    # b[19] - b[1] = 19d\n    # b[19] - b[2] = 17d\n    # b[19] - b[3] = 16d\n    # b[19] - b[4] = 15d\n    # b[19] - b[5] = 14d\n    # b[19] - b[6] = 13d\n    # b[19] - b[7] = 12d\n    # b[19] - b[8] = 11d\n    # b[19] - b[9] = 10d\n    # b[19] - b[10] = 9d\n    # b[19] - b[11] = 8d\n    # b[19] - b[12] = 7d\n    # b[19] - b[13] = 6d\n    # b[19] - b[14] = 5d\n    # b[19] - b[15] = 4d\n    # b[19] - b[16] = 3d\n    # b[19] - b[17] = 2d\n    # b[19] - b[18] = d\n\n   "
}
2022-04-19 21:58:34.982653 REASON length
2022-04-19 21:58:34.982661 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_arithmetic_progression(a):\n    return len(set(a[i+1] - a[i] for i in range(len(a) - 1))) == 1\n\nif is_arithmetic_progression(a):\n    print(0)\nelse:\n    ans = n\n    for i in range(n):\n        for j in range(2):\n            for k in range(2):\n                for l in range(2):\n                    for m in range(2):\n                        if i + j + k + l + m == 0:\n                            continue\n                        b = a[:]\n                        if j == 1:\n                            b[i] += 1\n                        else:\n                            b[i] -= 1\n                        if k == 1:\n                            b[i+1] += 1\n                        else:\n                            b[i+1] -= 1\n                        if l == 1:\n                            b[i+2] += 1\n                        else:\n                            b[i+2] -= 1\n                        if m == 1:\n                            b[i+3] += 1\n                        else:\n                            b[i+3] -= 1\n                        if is_arithmetic_progression(b):\n                            ans = min(ans, j + k + l + m)\n    if ans == n:\n        print(-1)\n    else:\n        print(ans)"
}
2022-04-19 21:58:34.982707 REASON stop
2022-04-19 21:58:34.983891 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tseq = list(map(int, sys.stdin.readline().split()))\n\tif n <= 2:\n\t\tprint(0)\n\t\treturn\n\td = seq[1] - seq[0]\n\tfor i in range(2, n):\n\t\tif seq[i] - seq[i-1] != d:\n\t\t\tif seq[i-1] - seq[i-2] == d:\n\t\t\t\tif seq[i] - seq[i-1] == d - 1:\n\t\t\t\t\tseq[i] += 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d + 1:\n\t\t\t\t\tseq[i] -= 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telif seq[i-1] - seq[i-2] == d - 1:\n\t\t\t\tif seq[i] - seq[i-1] == d:\n\t\t\t\t\tseq[i-1] += 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d - 1:\n\t\t\t\t\tseq[i] += 1\n\t\t\t\t\tseq[i-1] += 1\n\t\t\t\t\tprint(2)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telif seq[i-1] - seq[i-2] == d + 1:\n\t\t\t\tif seq[i] - seq[i-1] == d:\n\t\t\t\t\tseq[i-1] -= 1\n\t\t\t\t\tprint(1)\n\t\t\t\t\treturn\n\t\t\t\telif seq[i] - seq[i-1] == d + 1:\n\t\t\t\t\tseq[i] -= 1\n\t\t\t\t\tseq[i-1] -= 1\n\t\t\t\t\tprint(2)\n\t\t\t\t\treturn\n\t\t\t\telse:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tprint(-1)\n\t\t\t\treturn\n\tprint(0)\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-19 21:58:34.983999 REASON stop
2022-04-19 21:58:34.985517 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\nb = list(map(int, input().split()))\n\nif b[1] - b[0] == b[2] - b[1]:\n    print(0)\nelif b[1] - b[0] < b[2] - b[1]:\n    if b[0] + b[2] - b[1] <= 0:\n        print(-1)\n    else:\n        print(1)\nelse:\n    if b[0] + b[1] - b[2] <= 0:\n        print(-1)\n    else:\n        print(1)"
}
2022-04-19 21:58:34.985695 REASON stop
