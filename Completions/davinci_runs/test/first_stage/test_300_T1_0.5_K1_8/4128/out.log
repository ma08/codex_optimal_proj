2022-04-19 22:13:36.865818 """
There are two sisters Alice and Betty. You have $n$ candies. You want to distribute these $n$ candies between two sisters in such a way that:  Alice will get $a$ ($a > 0$) candies;  Betty will get $b$ ($b > 0$) candies;  each sister will get some integer number of candies;  Alice will get a greater amount of candies than Betty (i.e. $a > b$);  all the candies will be given to one of two sisters (i.e. $a+b=n$). 

Your task is to calculate the number of ways to distribute exactly $n$ candies between sisters in a way described above. Candies are indistinguishable.

Formally, find the number of ways to represent $n$ as the sum of $n=a+b$, where $a$ and $b$ are positive integers and $a>b$.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — the number of test cases. Then $t$ test cases follow.

The only line of a test case contains one integer $n$ ($1 \le n \le 2 \cdot 10^9$) — the number of candies you have.


-----Output-----

For each test case, print the answer — the number of ways to distribute exactly $n$ candies between two sisters in a way described in the problem statement. If there is no way to satisfy all the conditions, print $0$.


-----Example-----
Input
6
7
1
2
3
2000000000
763243547

Output
3
0
0
1
999999999
381621773



-----Note-----

For the test case of the example, the $3$ possible ways to distribute candies are:  $a=6$, $b=1$;  $a=5$, $b=2$;  $a=4$, $b=3$.
"""
2022-04-19 22:13:36.865835 --------------------------
2022-04-19 22:13:36.865944 using api key derek
2022-04-19 22:13:55.400200 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        n = int(sys.stdin.readline().strip())\n        print(int(math.floor(n/2)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n# This is a mathematical problem.\n# We need to find the number of ways to represent n as the sum of a+b where a and b are positive integers and a>b.\n# This is simply the number of pairs of integers (a,b) such that a+b=n and a>b.\n# This can be found by counting the number of pairs (a,b) such that a+b=n and a>=b and subtracting the number of pairs (a,b) such that a+b=n and a<b.\n# The number of pairs (a,b) such that a+b=n and a>=b is simply the number of ways to represent n as the sum of two positive integers, which is floor(n/2).\n# The number of pairs (a,b) such that a+b=n and a<b is simply the number of ways to represent n as the sum of two positive integers, which is floor(n/2).\n# Thus, the number of ways to represent n as the sum of a+b where a and b are positive integers and a>b is floor(n/2)-floor(n/2).\n# This can be simplified to 0 for all n.\n\nfrom sys import stdin, stdout\n\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    stdout.write(str(0)+'\\n')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print((n-1)//2)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(n):\n    # find the number of ways to represent n as the sum of n=a+b, where a and b are positive integers and a>b\n    # the number of ways to represent n as the sum of n=a+b, where a and b are positive integers and a>=b is\n    # the number of ways to represent n as the sum of n=a+b, where a and b are non-negative integers\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are non-negative integers\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are positive integers and a>=b\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are positive integers and a>b\n    return solve(n-1) if n > 1 else 0\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        n = int(sys.stdin.readline())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        if n == 1:\n            print(0)\n        else:\n            print(n//2)\n        t -= 1\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(n):\n    return (n-1)//2\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        print(solve(n))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(int(n / 2))\n        else:\n            print(0)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n# This is a classic example of a problem that can be solved using a binary search\n# The idea is to find the smallest number a such that a^2 > n\n# Then, the answer is a - 1\n# This is because we know that the answer is less than a, and it is greater than a - 2\n# So, we have to check a - 1 and a - 2, and then we have the answer\n# The complexity is O(log n)\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    \n    low = 1\n    high = n\n    while low < high:\n        mid = (low + high) // 2\n        if mid ** 2 <= n:\n            low = mid + 1\n        else:\n            high = mid\n    print(low - 1)"
    }
  ],
  "created": 1650406417,
  "id": "cmpl-4yqOHwnSJxIwOZ5sxtPDOVltxjqfS",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:13:55.400540 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        n = int(sys.stdin.readline().strip())\n        print(int(math.floor(n/2)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:13:55.400574 REASON stop
2022-04-19 22:13:55.401271 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n# This is a mathematical problem.\n# We need to find the number of ways to represent n as the sum of a+b where a and b are positive integers and a>b.\n# This is simply the number of pairs of integers (a,b) such that a+b=n and a>b.\n# This can be found by counting the number of pairs (a,b) such that a+b=n and a>=b and subtracting the number of pairs (a,b) such that a+b=n and a<b.\n# The number of pairs (a,b) such that a+b=n and a>=b is simply the number of ways to represent n as the sum of two positive integers, which is floor(n/2).\n# The number of pairs (a,b) such that a+b=n and a<b is simply the number of ways to represent n as the sum of two positive integers, which is floor(n/2).\n# Thus, the number of ways to represent n as the sum of a+b where a and b are positive integers and a>b is floor(n/2)-floor(n/2).\n# This can be simplified to 0 for all n.\n\nfrom sys import stdin, stdout\n\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    stdout.write(str(0)+'\\n')"
}
2022-04-19 22:13:55.401385 REASON stop
2022-04-19 22:13:55.401800 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print((n-1)//2)"
}
2022-04-19 22:13:55.401859 REASON stop
2022-04-19 22:13:55.424539 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(n):\n    # find the number of ways to represent n as the sum of n=a+b, where a and b are positive integers and a>b\n    # the number of ways to represent n as the sum of n=a+b, where a and b are positive integers and a>=b is\n    # the number of ways to represent n as the sum of n=a+b, where a and b are non-negative integers\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are non-negative integers\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are positive integers and a>=b\n    # which is the number of ways to represent n-1 as the sum of n-1=a+b, where a and b are positive integers and a>b\n    return solve(n-1) if n > 1 else 0\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        n = int(sys.stdin.readline())\n        print(solve(n))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:13:55.424673 REASON stop
2022-04-19 22:13:55.438295 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        if n == 1:\n            print(0)\n        else:\n            print(n//2)\n        t -= 1\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:13:55.438457 REASON stop
2022-04-19 22:13:55.440040 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(n):\n    return (n-1)//2\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        print(solve(n))"
}
2022-04-19 22:13:55.440139 REASON stop
2022-04-19 22:13:55.441067 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(int(n / 2))\n        else:\n            print(0)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 22:13:55.441164 REASON stop
2022-04-19 22:13:55.441761 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n# This is a classic example of a problem that can be solved using a binary search\n# The idea is to find the smallest number a such that a^2 > n\n# Then, the answer is a - 1\n# This is because we know that the answer is less than a, and it is greater than a - 2\n# So, we have to check a - 1 and a - 2, and then we have the answer\n# The complexity is O(log n)\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    \n    low = 1\n    high = n\n    while low < high:\n        mid = (low + high) // 2\n        if mid ** 2 <= n:\n            low = mid + 1\n        else:\n            high = mid\n    print(low - 1)"
}
2022-04-19 22:13:55.441951 REASON stop
