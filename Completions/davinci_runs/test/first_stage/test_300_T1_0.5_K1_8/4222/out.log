2022-04-19 23:10:10.364662 """
N Snukes called Snuke 1, Snuke 2, ..., Snuke N live in a town.
There are K kinds of snacks sold in this town, called Snack 1, Snack 2, ..., Snack K. The following d_i Snukes have Snack i: Snuke A_{i, 1}, A_{i, 2}, \cdots, A_{i, {d_i}}.
Takahashi will walk around this town and make mischief on the Snukes who have no snacks. How many Snukes will fall victim to Takahashi's mischief?

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 1 \leq K \leq 100
 - 1 \leq d_i \leq N
 - 1 \leq A_{i, 1} < \cdots < A_{i, d_i} \leq N

-----Input-----
Input is given from Standard Input in the following format:
N K
d_1
A_{1, 1} \cdots A_{1, d_1}
\vdots
d_K
A_{K, 1} \cdots A_{K, d_K}

-----Output-----
Print the answer.

-----Sample Input-----
3 2
2
1 3
1
3

-----Sample Output-----
1

 - Snuke 1 has Snack 1.
 - Snuke 2 has no snacks.
 - Snuke 3 has Snack 1 and 2.
Thus, there will be one victim: Snuke 2.
"""
2022-04-19 23:10:10.364674 --------------------------
2022-04-19 23:10:10.364818 using api key sourya
2022-04-19 23:10:26.253777 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# input\nN, K = map(int, input().split())\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\n# initialize\nvictim = [0]*N\n\n# main\nfor i in range(K):\n    for j in range(d):\n        victim[A[i][j]-1] += 1\n\n# output\nprint(victim.count(0))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\n\n# Initialize a list of length N+1, with each element being a set of length 0.\nsnuke_snacks = [set() for _ in range(N+1)]\n\nfor i in range(K):\n    d = int(input())\n    for snack in map(int, input().split()):\n        snuke_snacks[snack].add(i)\n\nprint(sum(1 for snuke in snuke_snacks[1:] if len(snuke) == 0))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# \u521d\u671f\u5316\nnum_snukes = int(input())\nnum_snacks = int(input())\nsnack_list = []\nfor i in range(num_snacks):\n    snack_list.append(list(map(int, input().split())))\n\n# \u5168\u30b9\u30ca\u30c3\u30af\u3092\u6301\u3064\u30b9\u30ca\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\nsnack_check = [0] * num_snukes\nfor snack in snack_list:\n    for i in range(1, len(snack)):\n        snack_check[snack[i] - 1] += 1\n\n# \u30b9\u30ca\u30c3\u30af\u3092\u6301\u305f\u306a\u3044\u30b9\u30ca\u30c3\u30af\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\nfor i in range(num_snukes):\n    if snack_check[i] == 0:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, k = map(int, stdin.readline().split())\n    a = [0] * n\n    for i in range(k):\n        d = int(stdin.readline())\n        for j in map(int, stdin.readline().split()):\n            a[j - 1] += 1\n    print(a.count(0))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, K = list(map(int, input().split()))\nsnacks = []\nfor _ in range(K):\n    snacks.append(list(map(int, input().split()))[1:])\n\n# print(N, K)\n# print(snacks)\n\nsnacks = [snack - 1 for snacks in snacks for snack in snacks]\n# print(snacks)\n\nprint(N - len(set(snacks)))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\n\nsnacks = [0] * n\n\nfor i in range(k):\n    d = int(input())\n    for a in map(int, input().split()):\n        snacks[a-1] += 1\n\nprint(snacks.count(0))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN, K = map(int, input().split())\nA = [[] for i in range(K)]\nfor i in range(K):\n    d = int(input())\n    A[i] = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N+1):\n    for j in range(K):\n        if i in A[j]:\n            break\n    else:\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# Read input\nN, K = map(int, input().split())\nsnack_counts = [0]*N\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snack_counts[j-1] += 1\n\n# Count victims\nvictims = 0\nfor n in snack_counts:\n    if n == 0:\n        victims += 1\nprint(victims)"
    }
  ],
  "created": 1650409810,
  "id": "cmpl-4yrH0jNURzj7Ct6SriXuXqR7Etylg",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:10:26.254179 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# input\nN, K = map(int, input().split())\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\n# initialize\nvictim = [0]*N\n\n# main\nfor i in range(K):\n    for j in range(d):\n        victim[A[i][j]-1] += 1\n\n# output\nprint(victim.count(0))"
}
2022-04-19 23:10:26.254225 REASON stop
2022-04-19 23:10:26.255522 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\n\n# Initialize a list of length N+1, with each element being a set of length 0.\nsnuke_snacks = [set() for _ in range(N+1)]\n\nfor i in range(K):\n    d = int(input())\n    for snack in map(int, input().split()):\n        snuke_snacks[snack].add(i)\n\nprint(sum(1 for snuke in snuke_snacks[1:] if len(snuke) == 0))"
}
2022-04-19 23:10:26.255616 REASON stop
2022-04-19 23:10:26.256125 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# \u521d\u671f\u5316\nnum_snukes = int(input())\nnum_snacks = int(input())\nsnack_list = []\nfor i in range(num_snacks):\n    snack_list.append(list(map(int, input().split())))\n\n# \u5168\u30b9\u30ca\u30c3\u30af\u3092\u6301\u3064\u30b9\u30ca\u30c3\u30af\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\nsnack_check = [0] * num_snukes\nfor snack in snack_list:\n    for i in range(1, len(snack)):\n        snack_check[snack[i] - 1] += 1\n\n# \u30b9\u30ca\u30c3\u30af\u3092\u6301\u305f\u306a\u3044\u30b9\u30ca\u30c3\u30af\u3092\u30ab\u30a6\u30f3\u30c8\ncount = 0\nfor i in range(num_snukes):\n    if snack_check[i] == 0:\n        count += 1\n\nprint(count)"
}
2022-04-19 23:10:26.256190 REASON stop
2022-04-19 23:10:26.272367 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, k = map(int, stdin.readline().split())\n    a = [0] * n\n    for i in range(k):\n        d = int(stdin.readline())\n        for j in map(int, stdin.readline().split()):\n            a[j - 1] += 1\n    print(a.count(0))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:10:26.272487 REASON stop
2022-04-19 23:10:26.298170 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, K = list(map(int, input().split()))\nsnacks = []\nfor _ in range(K):\n    snacks.append(list(map(int, input().split()))[1:])\n\n# print(N, K)\n# print(snacks)\n\nsnacks = [snack - 1 for snacks in snacks for snack in snacks]\n# print(snacks)\n\nprint(N - len(set(snacks)))"
}
2022-04-19 23:10:26.298330 REASON stop
2022-04-19 23:10:26.299385 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\n\nsnacks = [0] * n\n\nfor i in range(k):\n    d = int(input())\n    for a in map(int, input().split()):\n        snacks[a-1] += 1\n\nprint(snacks.count(0))"
}
2022-04-19 23:10:26.299481 REASON stop
2022-04-19 23:10:26.300373 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN, K = map(int, input().split())\nA = [[] for i in range(K)]\nfor i in range(K):\n    d = int(input())\n    A[i] = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N+1):\n    for j in range(K):\n        if i in A[j]:\n            break\n    else:\n        ans += 1\n\nprint(ans)"
}
2022-04-19 23:10:26.300459 REASON stop
2022-04-19 23:10:26.301657 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# Read input\nN, K = map(int, input().split())\nsnack_counts = [0]*N\nfor i in range(K):\n    d = int(input())\n    for j in map(int, input().split()):\n        snack_counts[j-1] += 1\n\n# Count victims\nvictims = 0\nfor n in snack_counts:\n    if n == 0:\n        victims += 1\nprint(victims)"
}
2022-04-19 23:10:26.301877 REASON stop
