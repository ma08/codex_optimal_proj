["\n\ndef main():\n\tn = int(input())\n\n\tprint(len(set(next(n) for _ in range(20))))\n\ndef next(n):\n\tn += 1\n\n\twhile n % 10 == 0:\n\t\tn //= 10\n\n\treturn n\n\nif __name__ == '__main__':\n\tmain()", "\n\n# Solution\n\nimport sys\n\ndef f(x):\n    if x % 10 == 0:\n        return f(x // 10)\n    else:\n        return x % 10\n\nn = int(sys.stdin.readline())\n\nf_n = f(n)\n\nif f_n == 1:\n    print(19)\nelse:\n    print(20)", "\n\n# cook your dish here\nn = int(input())\n\ndef f(x):\n    x = str(x)\n    x = x.replace('0', '')\n    x = int(x)\n    x += 1\n    return x\n\nreachable = [n]\nfor i in range(1,10):\n    reachable.append(f(reachable[-1]))\nprint(len(set(reachable)))", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = int(input())\n    print(count(num))\n\ndef count(num):\n    \"\"\"count\"\"\"\n    if num < 10:\n        return num\n    else:\n        return count(num//10) + count(num//10 - 1)\n\nmain()", "\n\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(n-1)\n\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\n\ndef solve(n):\n    s = set()\n    for i in range(1, 10):\n        s.add(i)\n        if i == n:\n            return len(s)\n    while True:\n        s2 = set()\n        for i in s:\n            if i % 10 != 0:\n                s2.add(i + 1)\n            s2.add(i * 10 + 1)\n        s = s2\n        if n in s:\n            return len(s)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\n\ndef f(n):\n    while n % 10 == 0:\n        n //= 10\n    return n + 1\n\ndef reachable(n):\n    reachable = set()\n    reachable.add(n)\n    while True:\n        n = f(n)\n        if n in reachable:\n            break\n        reachable.add(n)\n    return reachable\n\nprint(len(reachable(n)))", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 1:\n        print(2)\n        return\n    if n % 10 == 0:\n        print(19)\n        return\n    print(20)\n\nif __name__ == '__main__':\n    main()"]