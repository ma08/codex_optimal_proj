2022-04-19 20:52:47.918956 """
Let's denote a function $f(x)$ in such a way: we add $1$ to $x$, then, while there is at least one trailing zero in the resulting number, we remove that zero. For example,   $f(599) = 6$: $599 + 1 = 600 \rightarrow 60 \rightarrow 6$;  $f(7) = 8$: $7 + 1 = 8$;  $f(9) = 1$: $9 + 1 = 10 \rightarrow 1$;  $f(10099) = 101$: $10099 + 1 = 10100 \rightarrow 1010 \rightarrow 101$. 

We say that some number $y$ is reachable from $x$ if we can apply function $f$ to $x$ some (possibly zero) times so that we get $y$ as a result. For example, $102$ is reachable from $10098$ because $f(f(f(10098))) = f(f(10099)) = f(101) = 102$; and any number is reachable from itself.

You are given a number $n$; your task is to count how many different numbers are reachable from $n$.


-----Input-----

The first line contains one integer $n$ ($1 \le n \le 10^9$).


-----Output-----

Print one integer: the number of different numbers that are reachable from $n$.


-----Examples-----
Input
1098

Output
20

Input
10

Output
19



-----Note-----

The numbers that are reachable from $1098$ are:

$1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1098, 1099$.
"""
2022-04-19 20:52:47.918966 --------------------------
2022-04-19 20:52:47.919065 using api key gabby
2022-04-19 20:53:01.129273 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Solution\n\nimport sys\n\ndef f(x):\n    if x % 10 == 0:\n        return f(x // 10)\n    else:\n        return x % 10\n\nn = int(sys.stdin.readline())\n\nf_n = f(n)\n\nif f_n == 1:\n    print(19)\nelse:\n    print(20)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = int(input())\n    print(count(num))\n\ndef count(num):\n    \"\"\"count\"\"\"\n    if num < 10:\n        return num\n    else:\n        return count(num//10) + count(num//10 - 1)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\n\ndef solve(n):\n    s = set()\n    for i in range(1, 10):\n        s.add(i)\n        if i == n:\n            return len(s)\n    while True:\n        s2 = set()\n        for i in s:\n            if i % 10 != 0:\n                s2.add(i + 1)\n            s2.add(i * 10 + 1)\n        s = s2\n        if n in s:\n            return len(s)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n\tn = int(input())\n\n\tprint(len(set(next(n) for _ in range(20))))\n\ndef next(n):\n\tn += 1\n\n\twhile n % 10 == 0:\n\t\tn //= 10\n\n\treturn n\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nn = int(input())\n\ndef f(x):\n    x = str(x)\n    x = x.replace('0', '')\n    x = int(x)\n    x += 1\n    return x\n\nreachable = [n]\nfor i in range(1,10):\n    reachable.append(f(reachable[-1]))\nprint(len(set(reachable)))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 1:\n        print(2)\n        return\n    if n % 10 == 0:\n        print(19)\n        return\n    print(20)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\ndef f(n):\n    while n % 10 == 0:\n        n //= 10\n    return n + 1\n\ndef reachable(n):\n    reachable = set()\n    reachable.add(n)\n    while True:\n        n = f(n)\n        if n in reachable:\n            break\n        reachable.add(n)\n    return reachable\n\nprint(len(reachable(n)))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(n-1)\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650401568,
  "id": "cmpl-4yp84MIp3uwDJNUWbYiJNVq0cab31",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 20:53:01.129602 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Solution\n\nimport sys\n\ndef f(x):\n    if x % 10 == 0:\n        return f(x // 10)\n    else:\n        return x % 10\n\nn = int(sys.stdin.readline())\n\nf_n = f(n)\n\nif f_n == 1:\n    print(19)\nelse:\n    print(20)"
}
2022-04-19 20:53:01.129640 REASON stop
2022-04-19 20:53:01.130112 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = int(input())\n    print(count(num))\n\ndef count(num):\n    \"\"\"count\"\"\"\n    if num < 10:\n        return num\n    else:\n        return count(num//10) + count(num//10 - 1)\n\nmain()"
}
2022-04-19 20:53:01.130178 REASON stop
2022-04-19 20:53:01.130575 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\n\ndef solve(n):\n    s = set()\n    for i in range(1, 10):\n        s.add(i)\n        if i == n:\n            return len(s)\n    while True:\n        s2 = set()\n        for i in s:\n            if i % 10 != 0:\n                s2.add(i + 1)\n            s2.add(i * 10 + 1)\n        s = s2\n        if n in s:\n            return len(s)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 20:53:01.130636 REASON stop
2022-04-19 20:53:01.152299 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n\tn = int(input())\n\n\tprint(len(set(next(n) for _ in range(20))))\n\ndef next(n):\n\tn += 1\n\n\twhile n % 10 == 0:\n\t\tn //= 10\n\n\treturn n\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-19 20:53:01.152419 REASON stop
2022-04-19 20:53:01.166112 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nn = int(input())\n\ndef f(x):\n    x = str(x)\n    x = x.replace('0', '')\n    x = int(x)\n    x += 1\n    return x\n\nreachable = [n]\nfor i in range(1,10):\n    reachable.append(f(reachable[-1]))\nprint(len(set(reachable)))"
}
2022-04-19 20:53:01.166232 REASON stop
2022-04-19 20:53:01.172723 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n == 1:\n        print(2)\n        return\n    if n % 10 == 0:\n        print(19)\n        return\n    print(20)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 20:53:01.172837 REASON stop
2022-04-19 20:53:01.173837 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\ndef f(n):\n    while n % 10 == 0:\n        n //= 10\n    return n + 1\n\ndef reachable(n):\n    reachable = set()\n    reachable.add(n)\n    while True:\n        n = f(n)\n        if n in reachable:\n            break\n        reachable.add(n)\n    return reachable\n\nprint(len(reachable(n)))"
}
2022-04-19 20:53:01.173935 REASON stop
2022-04-19 20:53:01.177838 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(n-1)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 20:53:01.178029 REASON stop
