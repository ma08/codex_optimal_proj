2022-04-19 23:06:16.532917 """
You are given an integer N.

For two positive integers A and B, we will define F(A,B) as the larger of the following: the number of digits in the decimal notation of A, and the number of digits in the decimal notation of B.

For example, F(3,11) = 2 since 3 has one digit and 11 has two digits.

Find the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \times B.

-----Constraints-----
 - 1 \leq N \leq 10^{10}
 - N is an integer.

-----Input-----
The input is given from Standard Input in the following format:
N

-----Output-----
Print the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \times B.

-----Sample Input-----
10000

-----Sample Output-----
3

F(A,B) has a minimum value of 3 at (A,B)=(100,100).
"""
2022-04-19 23:06:16.532929 --------------------------
2022-04-19 23:06:16.533032 using api key sourya
2022-04-19 23:06:34.064462 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\ndef main():\n    N = int(input())\n    for i in range(1, int(N**0.5) + 1):\n        if N % i == 0:\n            print(len(str(i)))\n            break\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    ans = len(str(n))\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            ans = min(ans, len(str(i)))\n            ans = min(ans, len(str(n // i)))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    n = int(input())\n    min_val = math.ceil(math.log(n,10))\n    print(min_val)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport math\nn = int(input())\n\nans = 10**10\nfor i in range(1,int(math.sqrt(n))+1):\n\tif n % i == 0:\n\t\ta = i\n\t\tb = n // i\n\t\tans = min(ans,len(str(a)),len(str(b)))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\ndef is_prime(n):\n    if n < 2: return False\n    if n == 2: return True\n    if n % 2 == 0: return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0: return False\n    return True\n\ndef digit_count(n):\n    c = 0\n    while n > 0:\n        c += 1\n        n //= 10\n    return c\n\ndef prime_factorize(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n //= 2\n    f = 3\n    while f * f <= n:\n        if n % f == 0:\n            a.append(f)\n            n //= f\n        else:\n            f += 2\n    if n != 1:\n        a.append(n)\n    return a\n\ndef main():\n    if is_prime(N):\n        print(digit_count(N))\n    else:\n        a = prime_factorize(N)\n        b = []\n        for n in a:\n            b.append(digit_count(n))\n        print(max(b))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    N = int(input())\n    ans = 1e10\n    for i in range(1, int(N**0.5)+1):\n        if N % i == 0:\n            ans = min(ans, len(str(i)) + len(str(N//i)))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\n# Since the number of digits of A and B are the same, we can assume N has the form A^2.\n# So we have to find the largest perfect square that is less than or equal to N.\n# This can be done by taking the square root of the number and rounding down to the nearest integer.\n\nA = int(N**0.5)\n\n# The number of digits of A is the same as the number of digits of A^2.\n# The number of digits of A^2 can be found by taking the log base 10 of the number and rounding up to the nearest integer.\n\nprint(int(math.log10(A**2)+1))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nfrom math import log10, ceil\n\nN = int(input())\n\nmin_fb = ceil(log10(N))\nfor i in range(1, int(N ** 0.5) + 1):\n    if N % i == 0:\n        min_fb = min(min_fb, ceil(log10(i)) + ceil(log10(N // i)))\n\nprint(min_fb)"
    }
  ],
  "created": 1650409576,
  "id": "cmpl-4yrDEWMZHClHhVO0OylStGK18EpQi",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:06:34.064825 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\ndef main():\n    N = int(input())\n    for i in range(1, int(N**0.5) + 1):\n        if N % i == 0:\n            print(len(str(i)))\n            break\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:34.064879 REASON stop
2022-04-19 23:06:34.065719 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    ans = len(str(n))\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            ans = min(ans, len(str(i)))\n            ans = min(ans, len(str(n // i)))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:34.065792 REASON stop
2022-04-19 23:06:34.066267 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    n = int(input())\n    min_val = math.ceil(math.log(n,10))\n    print(min_val)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:34.066322 REASON stop
2022-04-19 23:06:34.081228 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport math\nn = int(input())\n\nans = 10**10\nfor i in range(1,int(math.sqrt(n))+1):\n\tif n % i == 0:\n\t\ta = i\n\t\tb = n // i\n\t\tans = min(ans,len(str(a)),len(str(b)))\n\nprint(ans)"
}
2022-04-19 23:06:34.081355 REASON stop
2022-04-19 23:06:34.102973 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\ndef is_prime(n):\n    if n < 2: return False\n    if n == 2: return True\n    if n % 2 == 0: return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0: return False\n    return True\n\ndef digit_count(n):\n    c = 0\n    while n > 0:\n        c += 1\n        n //= 10\n    return c\n\ndef prime_factorize(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n //= 2\n    f = 3\n    while f * f <= n:\n        if n % f == 0:\n            a.append(f)\n            n //= f\n        else:\n            f += 2\n    if n != 1:\n        a.append(n)\n    return a\n\ndef main():\n    if is_prime(N):\n        print(digit_count(N))\n    else:\n        a = prime_factorize(N)\n        b = []\n        for n in a:\n            b.append(digit_count(n))\n        print(max(b))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:34.103103 REASON stop
2022-04-19 23:06:34.104165 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    N = int(input())\n    ans = 1e10\n    for i in range(1, int(N**0.5)+1):\n        if N % i == 0:\n            ans = min(ans, len(str(i)) + len(str(N//i)))\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:06:34.104261 REASON stop
2022-04-19 23:06:34.105395 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\n# Since the number of digits of A and B are the same, we can assume N has the form A^2.\n# So we have to find the largest perfect square that is less than or equal to N.\n# This can be done by taking the square root of the number and rounding down to the nearest integer.\n\nA = int(N**0.5)\n\n# The number of digits of A is the same as the number of digits of A^2.\n# The number of digits of A^2 can be found by taking the log base 10 of the number and rounding up to the nearest integer.\n\nprint(int(math.log10(A**2)+1))"
}
2022-04-19 23:06:34.105484 REASON stop
2022-04-19 23:06:34.107216 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nfrom math import log10, ceil\n\nN = int(input())\n\nmin_fb = ceil(log10(N))\nfor i in range(1, int(N ** 0.5) + 1):\n    if N % i == 0:\n        min_fb = min(min_fb, ceil(log10(i)) + ceil(log10(N // i)))\n\nprint(min_fb)"
}
2022-04-19 23:06:34.107423 REASON stop
