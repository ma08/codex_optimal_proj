["\n\nN = int(input())\nX = list(map(int, input().split()))\n\nsum_x = sum(X)\nsum_x_square = sum([x ** 2 for x in X])\n\nans = min([(sum_x_square - sum_x * p + N * p ** 2) for p in range(1, 101)])\n\nprint(ans)", "\n\nN = int(input())\nX = [int(i) for i in input().split()]\n\nmin_stamina = 10**10\nfor i in range(1,101):\n    total = 0\n    for j in X:\n        total += (j - i)**2\n    if total < min_stamina:\n        min_stamina = total\nprint(min_stamina)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    x = [int(x) for x in sys.stdin.readline().strip().split()]\n    x.sort()\n    m = (x[-1] - x[0]) / 2\n    if m.is_integer():\n        print(int(sum([(x_i - x[0] - m)**2 for x_i in x])))\n    else:\n        print(int(min(sum([(x_i - x[0] - m)**2 for x_i in x]), sum([(x_i - x[0] - m - 1)**2 for x_i in x]))))\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\nX = list(map(int, input().split()))\n\ndef calculate_stamina(coordinate, X):\n    return sum([(x - coordinate)**2 for x in X])\n\nminimum_stamina = float(\"inf\")\nfor i in range(min(X), max(X) + 1):\n    stamina = calculate_stamina(i, X)\n    if stamina < minimum_stamina:\n        minimum_stamina = stamina\n\nprint(minimum_stamina)", "\n\nN = int(input())\nX = [int(x) for x in input().split()]\n\nans = sum([(x-X[0])**2 for x in X])\n\nfor i in range(1, 101):\n    temp = sum([(x-i)**2 for x in X])\n    if ans > temp:\n        ans = temp\n\nprint(ans)", "\n\nnum_people = int(input())\npositions = list(map(int, input().split()))\n\n# sum(positions) / len(positions) is the mean of all the positions\n# The meeting can only be held at an integer coordinate, so floor(mean) is the meeting point\nmin_stamina = sum([(position - floor(sum(positions) / len(positions))) ** 2 for position in positions])\nprint(min_stamina)", "\n\nimport sys\n\ndef get_min_stamina(locations):\n    \"\"\"\n    returns the minimum total stamina the N people have to spend\n    :param locations: list of locations of N people\n    :return: minimum total stamina the N people have to spend\n    \"\"\"\n    locations.sort()\n    return sum([(locations[i+1] - locations[i])**2 for i in range(len(locations) - 1)])\n\ndef main():\n    n = int(sys.stdin.readline())\n    locations = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_stamina(locations))\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\nX = list(map(int, input().split()))\n\nans = 0\nfor x in X:\n    ans += x**2\nans -= sum(X)**2 / N\nprint(int(ans))"]