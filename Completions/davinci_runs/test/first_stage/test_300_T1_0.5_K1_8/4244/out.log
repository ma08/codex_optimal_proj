2022-04-19 23:19:21.847859 """
There are N people living on a number line.
The i-th person lives at coordinate X_i.
You are going to hold a meeting that all N people have to attend.
The meeting can be held at any integer coordinate. If you choose to hold the meeting at coordinate P, the i-th person will spend (X_i - P)^2 points of stamina to attend the meeting.
Find the minimum total points of stamina the N people have to spend.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 1 \leq X_i \leq 100

-----Input-----
Input is given from Standard Input in the following format:
N
X_1 X_2 ... X_N

-----Output-----
Print the minimum total stamina the N people have to spend.

-----Sample Input-----
2
1 4

-----Sample Output-----
5

Assume the meeting is held at coordinate 2. In this case, the first person will spend (1 - 2)^2 points of stamina, and the second person will spend (4 - 2)^2 = 4 points of stamina, for a total of 5 points of stamina. This is the minimum total stamina that the 2 people have to spend.
Note that you can hold the meeting only at an integer coordinate.
"""
2022-04-19 23:19:21.847874 --------------------------
2022-04-19 23:19:21.847985 using api key sourya
2022-04-19 23:19:36.919016 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nX = [int(x) for x in input().split()]\n\nans = sum([(x-X[0])**2 for x in X])\n\nfor i in range(1, 101):\n    temp = sum([(x-i)**2 for x in X])\n    if ans > temp:\n        ans = temp\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nX = [int(i) for i in input().split()]\n\nmin_stamina = 10**10\nfor i in range(1,101):\n    total = 0\n    for j in X:\n        total += (j - i)**2\n    if total < min_stamina:\n        min_stamina = total\nprint(min_stamina)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\ndef calculate_stamina(coordinate, X):\n    return sum([(x - coordinate)**2 for x in X])\n\nminimum_stamina = float(\"inf\")\nfor i in range(min(X), max(X) + 1):\n    stamina = calculate_stamina(i, X)\n    if stamina < minimum_stamina:\n        minimum_stamina = stamina\n\nprint(minimum_stamina)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_min_stamina(locations):\n    \"\"\"\n    returns the minimum total stamina the N people have to spend\n    :param locations: list of locations of N people\n    :return: minimum total stamina the N people have to spend\n    \"\"\"\n    locations.sort()\n    return sum([(locations[i+1] - locations[i])**2 for i in range(len(locations) - 1)])\n\ndef main():\n    n = int(sys.stdin.readline())\n    locations = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_stamina(locations))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    x = [int(x) for x in sys.stdin.readline().strip().split()]\n    x.sort()\n    m = (x[-1] - x[0]) / 2\n    if m.is_integer():\n        print(int(sum([(x_i - x[0] - m)**2 for x_i in x])))\n    else:\n        print(int(min(sum([(x_i - x[0] - m)**2 for x_i in x]), sum([(x_i - x[0] - m - 1)**2 for x_i in x]))))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nnum_people = int(input())\npositions = list(map(int, input().split()))\n\n# sum(positions) / len(positions) is the mean of all the positions\n# The meeting can only be held at an integer coordinate, so floor(mean) is the meeting point\nmin_stamina = sum([(position - floor(sum(positions) / len(positions))) ** 2 for position in positions])\nprint(min_stamina)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\nsum_x = sum(X)\nsum_x_square = sum([x ** 2 for x in X])\n\nans = min([(sum_x_square - sum_x * p + N * p ** 2) for p in range(1, 101)])\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\nans = 0\nfor x in X:\n    ans += x**2\nans -= sum(X)**2 / N\nprint(int(ans))"
    }
  ],
  "created": 1650410362,
  "id": "cmpl-4yrPuF49ZCd8bwW8Mm8IUH3p9UluW",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:19:36.919345 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nX = [int(x) for x in input().split()]\n\nans = sum([(x-X[0])**2 for x in X])\n\nfor i in range(1, 101):\n    temp = sum([(x-i)**2 for x in X])\n    if ans > temp:\n        ans = temp\n\nprint(ans)"
}
2022-04-19 23:19:36.919381 REASON stop
2022-04-19 23:19:36.920144 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nX = [int(i) for i in input().split()]\n\nmin_stamina = 10**10\nfor i in range(1,101):\n    total = 0\n    for j in X:\n        total += (j - i)**2\n    if total < min_stamina:\n        min_stamina = total\nprint(min_stamina)"
}
2022-04-19 23:19:36.920220 REASON stop
2022-04-19 23:19:36.920660 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\ndef calculate_stamina(coordinate, X):\n    return sum([(x - coordinate)**2 for x in X])\n\nminimum_stamina = float(\"inf\")\nfor i in range(min(X), max(X) + 1):\n    stamina = calculate_stamina(i, X)\n    if stamina < minimum_stamina:\n        minimum_stamina = stamina\n\nprint(minimum_stamina)"
}
2022-04-19 23:19:36.920803 REASON stop
2022-04-19 23:19:36.922121 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_min_stamina(locations):\n    \"\"\"\n    returns the minimum total stamina the N people have to spend\n    :param locations: list of locations of N people\n    :return: minimum total stamina the N people have to spend\n    \"\"\"\n    locations.sort()\n    return sum([(locations[i+1] - locations[i])**2 for i in range(len(locations) - 1)])\n\ndef main():\n    n = int(sys.stdin.readline())\n    locations = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_stamina(locations))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:19:36.922195 REASON stop
2022-04-19 23:19:36.941687 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    x = [int(x) for x in sys.stdin.readline().strip().split()]\n    x.sort()\n    m = (x[-1] - x[0]) / 2\n    if m.is_integer():\n        print(int(sum([(x_i - x[0] - m)**2 for x_i in x])))\n    else:\n        print(int(min(sum([(x_i - x[0] - m)**2 for x_i in x]), sum([(x_i - x[0] - m - 1)**2 for x_i in x]))))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:19:36.941813 REASON stop
2022-04-19 23:19:36.942553 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nnum_people = int(input())\npositions = list(map(int, input().split()))\n\n# sum(positions) / len(positions) is the mean of all the positions\n# The meeting can only be held at an integer coordinate, so floor(mean) is the meeting point\nmin_stamina = sum([(position - floor(sum(positions) / len(positions))) ** 2 for position in positions])\nprint(min_stamina)"
}
2022-04-19 23:19:36.942648 REASON stop
2022-04-19 23:19:36.943397 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\nsum_x = sum(X)\nsum_x_square = sum([x ** 2 for x in X])\n\nans = min([(sum_x_square - sum_x * p + N * p ** 2) for p in range(1, 101)])\n\nprint(ans)"
}
2022-04-19 23:19:36.943464 REASON stop
2022-04-19 23:19:36.945201 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nX = list(map(int, input().split()))\n\nans = 0\nfor x in X:\n    ans += x**2\nans -= sum(X)**2 / N\nprint(int(ans))"
}
2022-04-19 23:19:36.945407 REASON stop
