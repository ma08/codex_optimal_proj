["\n\n#-----Solution-----\n\nn, m = [int(i) for i in input().split()]\n\nnums = [False for i in range(m + 1)]\n\nfor i in range(n):\n    l, r = [int(i) for i in input().split()]\n    for j in range(l, r + 1):\n        nums[j] = True\n\nc = 0\n\nfor i in range(1, m + 1):\n    if not nums[i]:\n        c += 1\n\nprint(c)\n\nfor i in range(1, m + 1):\n    if not nums[i]:\n        print(i, end=\" \")", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Get the input\n    n, m = map(int, input().split())\n    segments = []\n    for i in range(n):\n        segments.append(tuple(map(int, input().split())))\n\n    # Convert the segments to a set of numbers\n    numbers = set()\n    for segment in segments:\n        for i in range(segment[0], segment[1] + 1):\n            numbers.add(i)\n\n    # Get the numbers that aren't in the set\n    numbers = list(set(range(1, m + 1)) - numbers)\n    numbers.sort()\n\n    # Print the output\n    print(len(numbers))\n    print(\" \".join(map(str, numbers)))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, m = map(int, input().split())\n\npoints = [1] * (m+1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        points[j] = 0\n\nprint(sum(points))\nfor i in range(len(points)):\n    if points[i]:\n        print(i, end=' ')\nprint()", "\n\n# SOLUTION\nn, m = map(int, input().split())\na = [0] * (m+1)\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        a[j] = 1\n\nprint(m - sum(a))\nfor i in range(1, m+1):\n    if a[i] == 0:\n        print(i, end=' ')", "\n\n\ndef main():\n    n, m = map(int, input().split())\n    # n, m = 100, 100\n    segments = []\n    for i in range(n):\n        # l, r = map(int, input().split())\n        l, r = 1, 7\n        segments.append((l, r))\n\n    # print(segments)\n    points = []\n    for i in range(1, m+1):\n        for segment in segments:\n            if i >= segment[0] and i <= segment[1]:\n                break\n        else:\n            points.append(i)\n\n    print(len(points))\n    print(' '.join(map(str, points)))\n\n\nif __name__ == '__main__':\n    main()", "\n\n# SOLUTION\nn, m = [int(i) for i in input().split()]\n\nsegments = []\nfor i in range(n):\n    l, r = [int(i) for i in input().split()]\n    segments.append([l, r])\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nresult = []\nfor i in range(m):\n    for j in range(len(segments)):\n        if i + 1 >= segments[j][0] and i + 1 <= segments[j][1]:\n            break\n        elif j == len(segments) - 1:\n            result.append(i + 1)\n\nprint(len(result))\nprint(*result)", "\n\n\ndef get_input():\n    n, m = map(int, input().split())\n    lr = [list(map(int, input().split())) for _ in range(n)]\n    return n, m, lr\n\n\ndef get_points(n, m, lr):\n    points = set(range(m+1))\n    for l, r in lr:\n        points -= set(range(l, r+1))\n    return points\n\n\ndef print_points(points):\n    print(len(points))\n    print(*sorted(points))\n\n\ndef main():\n    n, m, lr = get_input()\n    points = get_points(n, m, lr)\n    print_points(points)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    segments = []\n    for i in range(n):\n        segments.append([int(x) for x in input().split()])\n    #print(segments)\n    points = []\n    for i in range(1,m+1):\n        for j in range(n):\n            if i in range(segments[j][0], segments[j][1]+1):\n                break\n            if j == n-1:\n                points.append(i)\n    print(len(points))\n    print(*points)\n    return 0\n\nmain()"]