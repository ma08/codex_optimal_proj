2022-04-19 22:54:31.959764 """
You are given a string S. Each character of S is uppercase or lowercase English letter.
Determine if S satisfies all of the following conditions:
 - The initial character of S is an uppercase A.
 - There is exactly one occurrence of C between the third character from the beginning and the second to last character (inclusive).
 - All letters except the A and C mentioned above are lowercase.

-----Constraints-----
 - 4 ≤ |S| ≤ 10 (|S| is the length of the string S.)
 - Each character of S is uppercase or lowercase English letter.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
If S satisfies all of the conditions in the problem statement, print AC; otherwise, print WA.

-----Sample Input-----
AtCoder

-----Sample Output-----
AC

The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.
"""
2022-04-19 22:54:31.959793 --------------------------
2022-04-19 22:54:31.959941 using api key gabby
2022-04-19 22:54:45.496475 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and 'C' in s[2:-1] and s[2:-1].count('C') == 1:\n    print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\nif s[0].isupper() and s[2] == \"C\" and s[1:].islower():\n    print(\"AC\")\nelse:\n    print(\"WA\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Get the input string\ns = input()\n\n# Check if the first letter is uppercase 'A'\nif s[0] == \"A\":\n    # Check if there is exactly one occurrence of 'C' between the third character from the beginning and the second to last character (inclusive)\n    if s.count('C') == 1:\n        # Check if all letters except the 'A' and 'C' are lowercase\n        if s[1:s.index('C')] + s[s.index('C')+1:].islower():\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\nelse:\n    print(\"WA\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:len(s)-1].count('C') == 1:\n  for i in range(1,len(s)):\n    if s[i] == 'C':\n      continue\n    if s[i].islower():\n      continue\n    else:\n      print(\"WA\")\n      exit()\n  print(\"AC\")\nelse:\n  print(\"WA\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif len(s) < 4 or len(s) > 10:\n    print(\"WA\")\n    exit()\n\nif s[0] != \"A\":\n    print(\"WA\")\n    exit()\n\nc_count = 0\n\nfor i in range(2, len(s) - 1):\n    if s[i] == \"C\":\n        c_count += 1\n    elif s[i].islower() == False:\n        print(\"WA\")\n        exit()\n\nif c_count != 1:\n    print(\"WA\")\n    exit()\n\nif s[-1].islower() == False:\n    print(\"WA\")\n    exit()\n\nprint(\"AC\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:len(s)-1].count('C') == 1:\n    for i in range(len(s)):\n        if i != 0 and i != 2 and s[i] != s[i].lower():\n            print('WA')\n            break\n    else:\n        print('AC')\nelse:\n    print('WA')"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n#S = input()\nS = \"AtCoder\"\n\nflag = 1\n\nif S[0] == \"A\":\n    if S[2:len(S)-1].count(\"C\") == 1:\n        for i in range(len(S)):\n            if i == 0 or i == 2:\n                continue\n            if S[i].islower():\n                continue\n            else:\n                flag = 0\n                break\n    else:\n        flag = 0\nelse:\n    flag = 0\n\nif flag == 1:\n    print(\"AC\")\nelse:\n    print(\"WA\")"
    }
  ],
  "created": 1650408872,
  "id": "cmpl-4yr1skEXngTQbrPnz26KityLTZSO8",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:54:45.496873 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and 'C' in s[2:-1] and s[2:-1].count('C') == 1:\n    print('AC')\nelse:\n    print('WA')"
}
2022-04-19 22:54:45.496928 REASON stop
2022-04-19 22:54:45.497860 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\nif s[0].isupper() and s[2] == \"C\" and s[1:].islower():\n    print(\"AC\")\nelse:\n    print(\"WA\")"
}
2022-04-19 22:54:45.497941 REASON stop
2022-04-19 22:54:45.498490 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Get the input string\ns = input()\n\n# Check if the first letter is uppercase 'A'\nif s[0] == \"A\":\n    # Check if there is exactly one occurrence of 'C' between the third character from the beginning and the second to last character (inclusive)\n    if s.count('C') == 1:\n        # Check if all letters except the 'A' and 'C' are lowercase\n        if s[1:s.index('C')] + s[s.index('C')+1:].islower():\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\nelse:\n    print(\"WA\")"
}
2022-04-19 22:54:45.498557 REASON stop
2022-04-19 22:54:45.520453 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[1:].islower():\n    print('AC')\nelse:\n    print('WA')"
}
2022-04-19 22:54:45.520590 REASON stop
2022-04-19 22:54:45.534025 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:len(s)-1].count('C') == 1:\n  for i in range(1,len(s)):\n    if s[i] == 'C':\n      continue\n    if s[i].islower():\n      continue\n    else:\n      print(\"WA\")\n      exit()\n  print(\"AC\")\nelse:\n  print(\"WA\")"
}
2022-04-19 22:54:45.534164 REASON stop
2022-04-19 22:54:45.538581 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif len(s) < 4 or len(s) > 10:\n    print(\"WA\")\n    exit()\n\nif s[0] != \"A\":\n    print(\"WA\")\n    exit()\n\nc_count = 0\n\nfor i in range(2, len(s) - 1):\n    if s[i] == \"C\":\n        c_count += 1\n    elif s[i].islower() == False:\n        print(\"WA\")\n        exit()\n\nif c_count != 1:\n    print(\"WA\")\n    exit()\n\nif s[-1].islower() == False:\n    print(\"WA\")\n    exit()\n\nprint(\"AC\")"
}
2022-04-19 22:54:45.538696 REASON stop
2022-04-19 22:54:45.539646 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ns = input()\n\nif s[0] == 'A' and s[2:len(s)-1].count('C') == 1:\n    for i in range(len(s)):\n        if i != 0 and i != 2 and s[i] != s[i].lower():\n            print('WA')\n            break\n    else:\n        print('AC')\nelse:\n    print('WA')"
}
2022-04-19 22:54:45.539740 REASON stop
2022-04-19 22:54:45.544188 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n#S = input()\nS = \"AtCoder\"\n\nflag = 1\n\nif S[0] == \"A\":\n    if S[2:len(S)-1].count(\"C\") == 1:\n        for i in range(len(S)):\n            if i == 0 or i == 2:\n                continue\n            if S[i].islower():\n                continue\n            else:\n                flag = 0\n                break\n    else:\n        flag = 0\nelse:\n    flag = 0\n\nif flag == 1:\n    print(\"AC\")\nelse:\n    print(\"WA\")"
}
2022-04-19 22:54:45.544407 REASON stop
