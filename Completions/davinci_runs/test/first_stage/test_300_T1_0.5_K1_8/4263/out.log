2022-04-19 23:27:30.588864 """
You are given a string S consisting of uppercase English letters. Find the length of the longest ACGT string that is a substring (see Notes) of S.
Here, a ACGT string is a string that contains no characters other than A, C, G and T.

-----Notes-----
A substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T.
For example, the substrings of ATCODER include TCO, AT, CODER, ATCODER and  (the empty string), but not AC.

-----Constraints-----
 - S is a string of length between 1 and 10 (inclusive).
 - Each character in S is an uppercase English letter.

-----Input-----
Input is given from Standard Input in the following format:
S

-----Output-----
Print the length of the longest ACGT string that is a substring of S.

-----Sample Input-----
ATCODER

-----Sample Output-----
3

Among the ACGT strings that are substrings of ATCODER, the longest one is ATC.
"""
2022-04-19 23:27:30.588875 --------------------------
2022-04-19 23:27:30.588992 using api key derek
2022-04-19 23:28:23.313989 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nprint(max(len(s) for s in input().split('AGCT')))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    for i in range(len(S)):\n        for j in range(i, len(S)):\n            if is_ACGT(S[i:j+1]):\n                if max_len < j - i + 1:\n                    max_len = j - i + 1\n    print(max_len)\n\ndef is_ACGT(s):\n    for i in range(len(s)):\n        if s[i] == 'A' or s[i] == 'C' or s[i] == 'G' or s[i] == 'T':\n            continue\n        else:\n            return False\n    return True\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\nacgt = \"ACGT\"\n\nmax_length = 0\nstart = 0\nend = 0\n\nwhile start < len(s):\n    if s[start] not in acgt:\n        start += 1\n        continue\n    end = start\n    while end < len(s) and s[end] in acgt:\n        end += 1\n    max_length = max(max_length, end - start)\n    start = end\n\nprint(max_length)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ns = input()\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]):\n#             max_len = max(max_len, len(s[i:j+1]))\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ns = input()\n\nans = 0\n\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        if len(set(s[i:j+1]) - set('ACGT')) == 0:\n            ans = max(ans, j-i+1)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nS = input()\nlength = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == \"A\" or S[j] == \"C\" or S[j] == \"G\" or S[j] == \"T\":\n            if j - i + 1 > length:\n                length = j - i + 1\n        else:\n            break\n\nprint(length)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    s = s.replace(\"A\", \"\").replace(\"C\", \"\").replace(\"G\", \"\").replace(\"T\", \"\")\n    print(len(s))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650410850,
  "id": "cmpl-4yrXmt2O2Dq2ZowJ0NJNoNwRMTIYc",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 23:28:23.314387 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nprint(max(len(s) for s in input().split('AGCT')))"
}
2022-04-19 23:28:23.314430 REASON stop
2022-04-19 23:28:23.315370 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    for i in range(len(S)):\n        for j in range(i, len(S)):\n            if is_ACGT(S[i:j+1]):\n                if max_len < j - i + 1:\n                    max_len = j - i + 1\n    print(max_len)\n\ndef is_ACGT(s):\n    for i in range(len(s)):\n        if s[i] == 'A' or s[i] == 'C' or s[i] == 'G' or s[i] == 'T':\n            continue\n        else:\n            return False\n    return True\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:28:23.315455 REASON stop
2022-04-19 23:28:23.315955 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ns = sys.stdin.readline().strip()\nacgt = \"ACGT\"\n\nmax_length = 0\nstart = 0\nend = 0\n\nwhile start < len(s):\n    if s[start] not in acgt:\n        start += 1\n        continue\n    end = start\n    while end < len(s) and s[end] in acgt:\n        end += 1\n    max_length = max(max_length, end - start)\n    start = end\n\nprint(max_length)"
}
2022-04-19 23:28:23.316021 REASON stop
2022-04-19 23:28:23.334112 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": ""
}
2022-04-19 23:28:23.334251 REASON stop
2022-04-19 23:28:23.352845 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ns = input()\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]):\n#             max_len = max(max_len, len(s[i:j+1]))\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)\n\n# ACGT = ['A', 'C', 'G', 'T']\n#\n# max_len = 0\n# for i in range(len(s)):\n#     for j in range(i, len(s)):\n#         if all(x in ACGT for x in s[i:j+1]) and len(s[i:j+1]) > max_len:\n#             max_len = len(s[i:j+1])\n# print(max_len)"
}
2022-04-19 23:28:23.353022 REASON stop
2022-04-19 23:28:23.371539 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ns = input()\n\nans = 0\n\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        if len(set(s[i:j+1]) - set('ACGT')) == 0:\n            ans = max(ans, j-i+1)\n\nprint(ans)"
}
2022-04-19 23:28:23.371691 REASON stop
2022-04-19 23:28:23.372185 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nS = input()\nlength = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == \"A\" or S[j] == \"C\" or S[j] == \"G\" or S[j] == \"T\":\n            if j - i + 1 > length:\n                length = j - i + 1\n        else:\n            break\n\nprint(length)"
}
2022-04-19 23:28:23.372255 REASON stop
2022-04-19 23:28:23.373649 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    s = s.replace(\"A\", \"\").replace(\"C\", \"\").replace(\"G\", \"\").replace(\"T\", \"\")\n    print(len(s))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 23:28:23.373822 REASON stop
