["\n\nfrom sys import stdin\n\ndef main():\n    s = stdin.readline().strip()\n    t = stdin.readline().strip()\n    print(sum(s[i] != t[i] for i in range(len(s))))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\n# Read the input\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\n# Count the number of differences\ncount = 0\nfor i in range(0, len(s)):\n    if s[i] != t[i]:\n        count += 1\n\n# Print the result\nprint(count)", "\ndef min_edit_distance(s, t):\n    n = len(s)\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(n + 1):\n        dp[i][0] = i\n    for j in range(n + 1):\n        dp[0][j] = j\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            dp[i][j] = min(dp[i - 1][j] + 1, dp[i][j - 1] + 1, dp[i - 1][j - 1] + (s[i - 1] != t[j - 1]))\n    return dp[n][n]\n\ndef main():\n    s = input()\n    t = input()\n    print(min_edit_distance(s, t))\n\nif __name__ == '__main__':\n    main()", "\n\n#===============================================================================\n#                               Main Process\n#===============================================================================\n\ndef main():\n    # input\n    s = input()\n    t = input()\n    \n    # process\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    print(count)\n    \nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().strip()\n    T = sys.stdin.readline().strip()\n    count = 0\n    for i in range(len(S)):\n        if S[i] != T[i]:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\nS = input()\nT = input()\n\noperations = 0\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        operations += 1\nprint(operations)", "\n\ns = input()\nt = input()\n\ncount = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        count += 1\n\nprint(count)"]