2022-04-19 21:48:12.681477 """
Petya has an array $a$ consisting of $n$ integers. He wants to remove duplicate (equal) elements.

Petya wants to leave only the rightmost entry (occurrence) for each element of the array. The relative order of the remaining unique elements should not be changed.


-----Input-----

The first line contains a single integer $n$ ($1 \le n \le 50$) — the number of elements in Petya's array.

The following line contains a sequence $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 1\,000$) — the Petya's array.


-----Output-----

In the first line print integer $x$ — the number of elements which will be left in Petya's array after he removed the duplicates.

In the second line print $x$ integers separated with a space — Petya's array after he removed the duplicates. For each unique element only the rightmost entry should be left.


-----Examples-----
Input
6
1 5 5 1 6 1

Output
3
5 6 1 

Input
5
2 4 2 4 4

Output
2
2 4 

Input
5
6 6 6 6 6

Output
1
6 



-----Note-----

In the first example you should remove two integers $1$, which are in the positions $1$ and $4$. Also you should remove the integer $5$, which is in the position $2$.

In the second example you should remove integer $2$, which is in the position $1$, and two integers $4$, which are in the positions $2$ and $4$.

In the third example you should remove four integers $6$, which are in the positions $1$, $2$, $3$ and $4$.
"""
2022-04-19 21:48:12.681494 --------------------------
2022-04-19 21:48:12.681596 using api key gabby
2022-04-19 21:48:43.562452 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    for x in range(n-1, -1, -1):\n        if a[x] not in b:\n            b.append(a[x])\n    print(len(b))\n    print(*b[::-1])\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = []\nfor i in range(n):\n    if a[n - i - 1] not in b:\n        b.append(a[n - i - 1])\n        \nprint(len(b))\nprint(*b[::-1])"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    seen = set()\n    for i in range(n-1, -1, -1):\n        if a[i] in seen:\n            a.pop(i)\n        else:\n            seen.add(a[i])\n    \n    print(len(a))\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.reverse()\n    b = []\n    for i in range(n):\n        if a[i] not in b:\n            b.append(a[i])\n    b.reverse()\n    print(len(b))\n    print(\" \".join(map(str, b)))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# \u0425\u043e\u0442\u044f \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0442\u0440\u043e\u043a \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u0435\u0442, \u043e\u0434\u043d\u0430\u043a\u043e \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u0438, \u0442.\u043a. \u0432 \u0437\u0430\u0434\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438, \u0447\u0442\u043e \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0442\u0440\u043e\u043a \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e.\n\nn = int(input())\na = [int(i) for i in input().split()]\n\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .count() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .index() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\u0438\u043d\u0434\u0435\u043a\u0441) \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a.\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .pop() \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u043a\u0440\u043e\u043c\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e.\nfor i in a:\n    for j in range(a.count(i)-1):\n        a.pop(a.index(i))\n\nprint(len(a))\nprint(*a)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in range(n-1, -1, -1):\n        if a[i] in s:\n            a.pop(i)\n        else:\n            s.add(a[i])\n    print(len(a))\n    print(*a)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the last index of each element in the list\n# The elements in the list should be unique\n# So we can use a dictionary to store the last index of each element\n# And then we can sort the dictionary by the values\n# Finally, we use the keys of the dictionary to print the result\n\n# Create a dictionary to store the last index of each element\nlast_index_of_element = {}\n\n# Find the last index of each element in the list\n# If the element is already in the dictionary\n# Update the index\nfor i in range(n):\n    if a[i] in last_index_of_element:\n        last_index_of_element[a[i]] = i\n    else:\n        last_index_of_element[a[i]] = i\n\n# Sort the dictionary by the values\nsorted_dictionary = sorted(last_index_of_element.items(), key=lambda x: x[1])\n\n# Print the result\nprint(len(sorted_dictionary))\nfor i in range(len(sorted_dictionary)):\n    print(sorted_dictionary[i][0], end=\" \")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_rightmost_index(array, value):\n\tindex = -1\n\tfor i in range(len(array)):\n\t\tif array[i] == value:\n\t\t\tindex = i\n\treturn index\n\ndef remove_duplicates(array):\n\tunique_array = []\n\tfor i in range(len(array)):\n\t\tif array[i] not in unique_array:\n\t\t\tunique_array.append(array[i])\n\treturn unique_array\n\ndef main():\n\tarray_size = int(sys.stdin.readline())\n\tarray = sys.stdin.readline().split(\" \")\n\n\tunique_array = remove_duplicates(array)\n\n\tprint(len(unique_array))\n\tfor i in range(len(unique_array)):\n\t\tsys.stdout.write(unique_array[i] + \" \")\n\nif __name__ == \"__main__\":\n\tmain()"
    }
  ],
  "created": 1650404892,
  "id": "cmpl-4ypzgxZgiYLb8jWPKPYsLxuqFVadn",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:48:43.562763 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    for x in range(n-1, -1, -1):\n        if a[x] not in b:\n            b.append(a[x])\n    print(len(b))\n    print(*b[::-1])\n\nmain()"
}
2022-04-19 21:48:43.562878 REASON stop
2022-04-19 21:48:43.563308 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = []\nfor i in range(n):\n    if a[n - i - 1] not in b:\n        b.append(a[n - i - 1])\n        \nprint(len(b))\nprint(*b[::-1])"
}
2022-04-19 21:48:43.563368 REASON stop
2022-04-19 21:48:43.563758 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    seen = set()\n    for i in range(n-1, -1, -1):\n        if a[i] in seen:\n            a.pop(i)\n        else:\n            seen.add(a[i])\n    \n    print(len(a))\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 21:48:43.563810 REASON stop
2022-04-19 21:48:43.582994 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.reverse()\n    b = []\n    for i in range(n):\n        if a[i] not in b:\n            b.append(a[i])\n    b.reverse()\n    print(len(b))\n    print(\" \".join(map(str, b)))\n\nmain()"
}
2022-04-19 21:48:43.583136 REASON stop
2022-04-19 21:48:43.589883 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# \u0425\u043e\u0442\u044f \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441\u0442\u0440\u043e\u043a \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u0435\u0442, \u043e\u0434\u043d\u0430\u043a\u043e \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u0438, \u0442.\u043a. \u0432 \u0437\u0430\u0434\u0430\u0447\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438, \u0447\u0442\u043e \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441\u0442\u0440\u043e\u043a \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e.\n\nn = int(input())\na = [int(i) for i in input().split()]\n\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .count() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .index() \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\u0438\u043d\u0434\u0435\u043a\u0441) \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a.\n# \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .pop() \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u043a\u0440\u043e\u043c\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e.\nfor i in a:\n    for j in range(a.count(i)-1):\n        a.pop(a.index(i))\n\nprint(len(a))\nprint(*a)"
}
2022-04-19 21:48:43.590004 REASON stop
2022-04-19 21:48:43.591421 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in range(n-1, -1, -1):\n        if a[i] in s:\n            a.pop(i)\n        else:\n            s.add(a[i])\n    print(len(a))\n    print(*a)\n\nmain()"
}
2022-04-19 21:48:43.591527 REASON stop
2022-04-19 21:48:43.592277 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the last index of each element in the list\n# The elements in the list should be unique\n# So we can use a dictionary to store the last index of each element\n# And then we can sort the dictionary by the values\n# Finally, we use the keys of the dictionary to print the result\n\n# Create a dictionary to store the last index of each element\nlast_index_of_element = {}\n\n# Find the last index of each element in the list\n# If the element is already in the dictionary\n# Update the index\nfor i in range(n):\n    if a[i] in last_index_of_element:\n        last_index_of_element[a[i]] = i\n    else:\n        last_index_of_element[a[i]] = i\n\n# Sort the dictionary by the values\nsorted_dictionary = sorted(last_index_of_element.items(), key=lambda x: x[1])\n\n# Print the result\nprint(len(sorted_dictionary))\nfor i in range(len(sorted_dictionary)):\n    print(sorted_dictionary[i][0], end=\" \")"
}
2022-04-19 21:48:43.592353 REASON stop
2022-04-19 21:48:43.593091 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_rightmost_index(array, value):\n\tindex = -1\n\tfor i in range(len(array)):\n\t\tif array[i] == value:\n\t\t\tindex = i\n\treturn index\n\ndef remove_duplicates(array):\n\tunique_array = []\n\tfor i in range(len(array)):\n\t\tif array[i] not in unique_array:\n\t\t\tunique_array.append(array[i])\n\treturn unique_array\n\ndef main():\n\tarray_size = int(sys.stdin.readline())\n\tarray = sys.stdin.readline().split(\" \")\n\n\tunique_array = remove_duplicates(array)\n\n\tprint(len(unique_array))\n\tfor i in range(len(unique_array)):\n\t\tsys.stdout.write(unique_array[i] + \" \")\n\nif __name__ == \"__main__\":\n\tmain()"
}
2022-04-19 21:48:43.593254 REASON stop
