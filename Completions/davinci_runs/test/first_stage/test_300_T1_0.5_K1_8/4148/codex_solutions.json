["\n\nimport sys\n\n\ndef main():\n    num = int(sys.stdin.readline())\n    string = sys.stdin.readline()\n    for letter in string:\n        print(chr(ord(letter) + num), end='')\n\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef shift_alphabet(word, shift):\n    alphabet = [chr(i) for i in range(65, 91)]\n    shifted_alphabet = alphabet[shift:] + alphabet[:shift]\n    shifted_word = ''\n    for letter in word:\n        shifted_word += shifted_alphabet[alphabet.index(letter)]\n    return shifted_word\n\n\ndef main():\n    shift = int(input())\n    word = input()\n    print(shift_alphabet(word, shift))\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport string\n\nn = int(input())\ns = input()\n\nalphabet = string.ascii_uppercase\n\nfor c in s:\n    print(alphabet[(alphabet.index(c) + n) % len(alphabet)], end=\"\")\nprint()", "\n\nimport sys\n\nn = int(input())\ns = input()\n\ndef shift_character(char, shift):\n    \"\"\"\n    :param char: a single character\n    :param shift: number of shifts to make\n    :return: the shifted character\n    \"\"\"\n    return chr(ord(char) + shift)\n\ndef shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: the shifted string\n    \"\"\"\n    return ''.join([shift_character(char, shift) for char in string])\n\ndef wrap_around(string):\n    \"\"\"\n    :param string: a string of characters\n    :return: a string of characters with the last character wrapped around to the front\n    \"\"\"\n    return string[-1] + string[:-1]\n\ndef wrap_around_shift(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with the last character wrapped around to the front, then shifted\n    \"\"\"\n    return shift_string(wrap_around(string), shift)\n\ndef wrap_around_shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with each character wrapped around to the front, then shifted\n    \"\"\"\n    return ''.join([wrap_around_shift(char, shift) for char in string])\n\nsys.stdout.write(wrap_around_shift_string(s, n))", "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nans = \"\"\n\nfor s in S:\n    ans += chr(ord(s)+N) if ord(s)+N <= ord('Z') else chr(ord(s)+N-26)\n\nprint(ans)", "\n\nn = int(input())\ns = input()\n\nans = ''\nfor i in range(len(s)):\n    ans += chr((ord(s[i]) - 65 + n) % 26 + 65)\n\nprint(ans)", "\n\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    print(chr((ord(s[i]) - ord('A') + n) % 26 + ord('A')), end = '')", "\n\n#import sys\n\ndef shift(n, s):\n    s = list(s)\n    for i in range(len(s)):\n        s[i] = chr(((ord(s[i]) - 65 + n) % 26) + 65)\n    return \"\".join(s)\n\n#n = int(sys.stdin.readline())\n#s = sys.stdin.readline().rstrip()\n\nn = 2\ns = \"ABCXYZ\"\n\nprint(shift(n, s))"]