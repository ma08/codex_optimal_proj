2022-04-19 22:27:23.131587 """
We have a string S consisting of uppercase English letters. Additionally, an integer N will be given.
Shift each character of S by N in alphabetical order (see below), and print the resulting string.
We assume that A follows Z. For example, shifting A by 2 results in C (A \to B \to C), and shifting Y by 3 results in B (Y \to Z \to A \to B).

-----Constraints-----
 - 0 \leq N \leq 26
 - 1 \leq |S| \leq 10^4
 - S consists of uppercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
N
S

-----Output-----
Print the string resulting from shifting each character of S by N in alphabetical order.

-----Sample Input-----
2
ABCXYZ

-----Sample Output-----
CDEZAB

Note that A follows Z.
"""
2022-04-19 22:27:23.131598 --------------------------
2022-04-19 22:27:23.131712 using api key sourya
2022-04-19 22:27:45.506428 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#import sys\n\ndef shift(n, s):\n    s = list(s)\n    for i in range(len(s)):\n        s[i] = chr(((ord(s[i]) - 65 + n) % 26) + 65)\n    return \"\".join(s)\n\n#n = int(sys.stdin.readline())\n#s = sys.stdin.readline().rstrip()\n\nn = 2\ns = \"ABCXYZ\"\n\nprint(shift(n, s))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nans = ''\nfor i in range(len(s)):\n    ans += chr((ord(s[i]) - 65 + n) % 26 + 65)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef shift_alphabet(word, shift):\n    alphabet = [chr(i) for i in range(65, 91)]\n    shifted_alphabet = alphabet[shift:] + alphabet[:shift]\n    shifted_word = ''\n    for letter in word:\n        shifted_word += shifted_alphabet[alphabet.index(letter)]\n    return shifted_word\n\n\ndef main():\n    shift = int(input())\n    word = input()\n    print(shift_alphabet(word, shift))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    print(chr((ord(s[i]) - ord('A') + n) % 26 + ord('A')), end = '')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nans = \"\"\n\nfor s in S:\n    ans += chr(ord(s)+N) if ord(s)+N <= ord('Z') else chr(ord(s)+N-26)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport string\n\nn = int(input())\ns = input()\n\nalphabet = string.ascii_uppercase\n\nfor c in s:\n    print(alphabet[(alphabet.index(c) + n) % len(alphabet)], end=\"\")\nprint()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\n\ndef main():\n    num = int(sys.stdin.readline())\n    string = sys.stdin.readline()\n    for letter in string:\n        print(chr(ord(letter) + num), end='')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(input())\ns = input()\n\ndef shift_character(char, shift):\n    \"\"\"\n    :param char: a single character\n    :param shift: number of shifts to make\n    :return: the shifted character\n    \"\"\"\n    return chr(ord(char) + shift)\n\ndef shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: the shifted string\n    \"\"\"\n    return ''.join([shift_character(char, shift) for char in string])\n\ndef wrap_around(string):\n    \"\"\"\n    :param string: a string of characters\n    :return: a string of characters with the last character wrapped around to the front\n    \"\"\"\n    return string[-1] + string[:-1]\n\ndef wrap_around_shift(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with the last character wrapped around to the front, then shifted\n    \"\"\"\n    return shift_string(wrap_around(string), shift)\n\ndef wrap_around_shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with each character wrapped around to the front, then shifted\n    \"\"\"\n    return ''.join([wrap_around_shift(char, shift) for char in string])\n\nsys.stdout.write(wrap_around_shift_string(s, n))"
    }
  ],
  "created": 1650407243,
  "id": "cmpl-4yqbbjWUX0tqdjXnxNvu6WMqLtRWI",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:27:45.506804 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#import sys\n\ndef shift(n, s):\n    s = list(s)\n    for i in range(len(s)):\n        s[i] = chr(((ord(s[i]) - 65 + n) % 26) + 65)\n    return \"\".join(s)\n\n#n = int(sys.stdin.readline())\n#s = sys.stdin.readline().rstrip()\n\nn = 2\ns = \"ABCXYZ\"\n\nprint(shift(n, s))"
}
2022-04-19 22:27:45.506856 REASON stop
2022-04-19 22:27:45.507990 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nans = ''\nfor i in range(len(s)):\n    ans += chr((ord(s[i]) - 65 + n) % 26 + 65)\n\nprint(ans)"
}
2022-04-19 22:27:45.508075 REASON stop
2022-04-19 22:27:45.508850 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef shift_alphabet(word, shift):\n    alphabet = [chr(i) for i in range(65, 91)]\n    shifted_alphabet = alphabet[shift:] + alphabet[:shift]\n    shifted_word = ''\n    for letter in word:\n        shifted_word += shifted_alphabet[alphabet.index(letter)]\n    return shifted_word\n\n\ndef main():\n    shift = int(input())\n    word = input()\n    print(shift_alphabet(word, shift))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:27:45.508930 REASON stop
2022-04-19 22:27:45.532103 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    print(chr((ord(s[i]) - ord('A') + n) % 26 + ord('A')), end = '')"
}
2022-04-19 22:27:45.532253 REASON stop
2022-04-19 22:27:45.567890 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nans = \"\"\n\nfor s in S:\n    ans += chr(ord(s)+N) if ord(s)+N <= ord('Z') else chr(ord(s)+N-26)\n\nprint(ans)"
}
2022-04-19 22:27:45.568033 REASON stop
2022-04-19 22:27:45.571549 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport string\n\nn = int(input())\ns = input()\n\nalphabet = string.ascii_uppercase\n\nfor c in s:\n    print(alphabet[(alphabet.index(c) + n) % len(alphabet)], end=\"\")\nprint()"
}
2022-04-19 22:27:45.571685 REASON stop
2022-04-19 22:27:45.574109 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\n\ndef main():\n    num = int(sys.stdin.readline())\n    string = sys.stdin.readline()\n    for letter in string:\n        print(chr(ord(letter) + num), end='')\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:27:45.574233 REASON stop
2022-04-19 22:27:45.576848 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(input())\ns = input()\n\ndef shift_character(char, shift):\n    \"\"\"\n    :param char: a single character\n    :param shift: number of shifts to make\n    :return: the shifted character\n    \"\"\"\n    return chr(ord(char) + shift)\n\ndef shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: the shifted string\n    \"\"\"\n    return ''.join([shift_character(char, shift) for char in string])\n\ndef wrap_around(string):\n    \"\"\"\n    :param string: a string of characters\n    :return: a string of characters with the last character wrapped around to the front\n    \"\"\"\n    return string[-1] + string[:-1]\n\ndef wrap_around_shift(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with the last character wrapped around to the front, then shifted\n    \"\"\"\n    return shift_string(wrap_around(string), shift)\n\ndef wrap_around_shift_string(string, shift):\n    \"\"\"\n    :param string: a string of characters\n    :param shift: number of shifts to make\n    :return: a string of characters with each character wrapped around to the front, then shifted\n    \"\"\"\n    return ''.join([wrap_around_shift(char, shift) for char in string])\n\nsys.stdout.write(wrap_around_shift_string(s, n))"
}
2022-04-19 22:27:45.577090 REASON stop
