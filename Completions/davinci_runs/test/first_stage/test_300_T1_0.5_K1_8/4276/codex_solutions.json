["\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    from operator import itemgetter\n\n    routes = []\n    route_count = int(input())\n    time = int(input())\n\n    for i in range(route_count):\n        route = list(map(int, input().split()))\n        routes.append(route)\n\n    routes = sorted(routes, key=itemgetter(1))\n\n    for route in routes:\n        if route[1] <= time:\n            print(route[0])\n            exit()\n\n    print('TLE')", "\n\nn, t = map(int, input().split())\nclist = []\nfor i in range(n):\n    c, l = map(int, input().split())\n    clist.append((c, l))\n\nclist.sort()\n\nfor i in clist:\n    if i[1] <= t:\n        print(i[0])\n        exit()\nelse:\n    print(\"TLE\")", "\n\nN, T = map(int, input().split())\n\ncost = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    cost.append([c, t])\n\ncost.sort(key=lambda x: x[0])\n\nans = \"TLE\"\nfor i in range(len(cost)):\n    if cost[i][1] <= T:\n        ans = cost[i][0]\n        break\n\nprint(ans)", "\n\n#-----main-----\nn, t = map(int, input().split())\ncost = []\ntime = []\n\nfor i in range(n):\n    c, ti = map(int, input().split())\n    cost.append(c)\n    time.append(ti)\n\nif min(time) > t:\n    print('TLE')\nelse:\n    min_cost = 1000\n    for i in range(n):\n        if time[i] <= t:\n            if min_cost > cost[i]:\n                min_cost = cost[i]\n    print(min_cost)", "\n\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\n\nroute_list = []\nfor i in range(n):\n    c, t = map(int, sys.stdin.readline().split())\n    route_list.append([c, t])\n\nroute_list = sorted(route_list, key=lambda x: x[1])\n\nfor route in route_list:\n    if route[1] <= t:\n        print(route[0])\n        sys.exit()\n\nprint('TLE')", "\n\nn, t = map(int, input().split())\n\nfor i in range(n):\n    c, ti = map(int, input().split())\n    if ti <= t:\n        print(c)\n        break\nelse:\n    print('TLE')", "\n\nn, t = map(int, input().split())\nc = []\nfor _ in range(n):\n    c.append(list(map(int, input().split())))\n\nc.sort(key=lambda x: x[0])\n\nfor i in range(n):\n    if c[i][1] <= t:\n        print(c[i][0])\n        exit()\nprint('TLE')", "\n\n# N = int(input())\n# T = int(input())\n#\n# for i in range(N):\n#     c, t = map(int, input().split())\n#\n#     if t <= T:\n#         if i == 0:\n#             min_cost = c\n#         else:\n#             min_cost = min(min_cost, c)\n#\n# if i != 0:\n#     print(min_cost)\n# else:\n#     print(\"TLE\")\n\nN = int(input())\nT = int(input())\n\nmin_cost = T + 1\n\nfor i in range(N):\n    c, t = map(int, input().split())\n\n    if t <= T:\n        min_cost = min(min_cost, c)\n\nif min_cost <= T:\n    print(min_cost)\nelse:\n    print(\"TLE\")"]