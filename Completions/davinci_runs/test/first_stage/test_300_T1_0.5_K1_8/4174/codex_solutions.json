["\n\nn,x = map(int,input().split())\nl = list(map(int,input().split()))\n\ncount = 0\nfor i in range(n):\n    if x - l[i] >= 0:\n        count += 1\n        x -= l[i]\n    else:\n        break\n\nprint(count)", "\n\nn, x = map(int, input().split())\nl = map(int, input().split())\n\nbounce = 0\nd = 0\n\nfor i in range(n):\n    if d <= x:\n        bounce += 1\n    d += l[i]\n\nif d <= x:\n    bounce += 1\n\nprint(bounce)", "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncurrent = 0\ncount = 0\nfor i in range(N):\n    current += L[i]\n    if current <= X:\n        count += 1\nprint(count)", "\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = 0\n    count = 0\n    for i in range(n):\n        d += l[i]\n        if d <= x:\n            count += 1\n        else:\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = 0\ncount = 0\nfor i in l:\n    d += i\n    if d <= x:\n        count += 1\n\nprint(count + 1)", "\n\n# get inputs\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\n# create list of coordinates\ncoordinates = [0]\nfor i in range(n):\n    coordinates.append(coordinates[i] + l[i])\n\n# count the number of bounces where the coordinate is at most x\ncount = 0\nfor coordinate in coordinates:\n    if coordinate <= x:\n        count += 1\n\nprint(count)", "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncnt = 1\nfor i in range(n):\n    if cnt > x:\n        break\n    cnt += l[i]\n\nprint(i+1)", "\n\nfrom sys import stdin\n\nn, x = map(int, stdin.readline().split())\nli = list(map(int, stdin.readline().split()))\n\nans = 0\nfor i, l in enumerate(li):\n    if x - l >= 0:\n        ans += 1\n        x -= l\n    else:\n        break\nprint(ans)"]