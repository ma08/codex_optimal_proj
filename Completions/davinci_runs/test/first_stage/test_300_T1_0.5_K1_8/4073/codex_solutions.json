["\n\ndef solve(n, arr):\n    arr.sort()\n    return arr[-1] - arr[0]\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(n, arr))", "\n\n# Solution\n\nn = int(input())\n\narr = list(map(int, input().split()))\n\narr.sort()\n\nprint(arr[-1] + arr[-2])", "\n\n# Main\nn = int(input())\na = [int(x) for x in input().split()]\n\n# Solution\nprint(sum(a) - max(a))", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n\n    # sort the array\n    a.sort()\n\n    # find the maximum possible number of pairs\n    # this is the maximum number of elements that can be paired\n    # with the first element\n    pairs = 0\n    for i in range(1, n):\n        if a[i] - a[0] > 4:\n            break\n        pairs += 1\n\n    # find the maximum possible number of pairs\n    # this is the maximum number of elements that can be paired\n    # with the last element\n    for i in range(n-2, -1, -1):\n        if a[n-1] - a[i] > 4:\n            break\n        pairs = max(pairs, n-1-i)\n\n    print(n - pairs)\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Constants\nMAX_N = 10\nMAX_A_I = 11\n\n# Input\nn = int(input())\nif not 1 <= n <= MAX_N:\n    raise ValueError(\"Constraint error: 1 <= n <= \" + str(MAX_N))\n\na_i = [int(x) for x in input().split()]\nfor a in a_i:\n    if not 1 <= a <= MAX_A_I:\n        raise ValueError(\"Constraint error: 1 <= a_i <= \" + str(MAX_A_I))\n\n# Solve\nprint(sum(a_i) - min(a_i))", "\n\nn = int(input())\narr = list(map(int, input().split(' ')))\n\n# arr = [2, 5, 3, 1]\n\ndef find_gcd(a, b):\n    if a == 0:\n        return b\n    return find_gcd(b % a, a)\n\ngcd = arr[0]\nfor i in range(1, n):\n    gcd = find_gcd(gcd, arr[i])\n\nprint(gcd)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = sys.stdin.readline().strip().split()\n    a = [int(i) for i in a]\n    a.sort()\n    if n == 1:\n        print(1)\n        return\n    if a[0] == 1:\n        print(1)\n        return\n    # print(a)\n    max = a[-1]\n    for i in range(n):\n        if a[i] > i + 1:\n            print(i + 2)\n            return\n    print(max + 1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dp = [0] * n\n    dp[0] = 1\n    for i in range(1, n):\n        for j in range(0, i):\n            if a[i] > a[j] and dp[j] + 1 > dp[i]:\n                dp[i] = dp[j] + 1\n    print(max(dp))\n\n\nif __name__ == \"__main__\":\n    main()"]