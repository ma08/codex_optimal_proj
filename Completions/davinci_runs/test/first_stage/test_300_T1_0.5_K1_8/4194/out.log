2022-04-19 22:49:27.342368 """
Takahashi has N days of summer vacation.
His teacher gave him M summer assignments. It will take A_i days for him to do the i-th assignment.
He cannot do multiple assignments on the same day, or hang out on a day he does an assignment.
What is the maximum number of days Takahashi can hang out during the vacation if he finishes all the assignments during this vacation?
If Takahashi cannot finish all the assignments during the vacation, print -1 instead.

-----Constraints-----
 - 1 \leq N \leq 10^6
 - 1 \leq M \leq 10^4
 - 1 \leq A_i \leq 10^4

-----Input-----
Input is given from Standard Input in the following format:
N M
A_1 ... A_M

-----Output-----
Print the maximum number of days Takahashi can hang out during the vacation, or -1.

-----Sample Input-----
41 2
5 6

-----Sample Output-----
30

For example, he can do the first assignment on the first 5 days, hang out on the next 30 days, and do the second assignment on the last 6 days of the vacation. In this way, he can safely spend 30 days hanging out.
"""
2022-04-19 22:49:27.342380 --------------------------
2022-04-19 22:49:27.342485 using api key sourya
2022-04-19 22:50:49.621862 {
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# N days of vacation, M assignments\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# sort assignments by descending order\nA.sort(reverse=True)\n\n# can he finish all assignments?\nif sum(A) > N:\n    print(-1)\n    exit()\n\n# answer: N - sum(A)\nprint(N - sum(A))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort()\n\nif N < sum(A):\n    print(-1)\nelse:\n    print(N - sum(A))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    N,M = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    sum_A = sum(A)\n    if sum_A > N:\n        print(-1)\n        exit()\n    ans = N - sum_A\n    for a in A:\n        if ans > 0:\n            ans -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u8ab2\u984c\u3092\u3053\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u65e5\u6570\ndays_needed = sum(A)\n\nif days_needed > N:\n    print(-1)\nelse:\n    print(N - days_needed)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport sys\n\n# Read from standard input\nN, M = list(map(int, sys.stdin.readline().split()))\nA = list(map(int, sys.stdin.readline().split()))\n\n# Sort the list of assignments in decreasing order\nA.sort(reverse=True)\n\n# Count the number of days that Takahashi can hang out\nhang_out_days = 0\nfor i in range(M):\n    # If the number of days he can hang out is less than the number of days he needs to finish the assignment,\n    # he cannot finish all the assignments during the vacation\n    if hang_out_days < A[i]:\n        print(-1)\n        sys.exit()\n    hang_out_days += 1\n    hang_out_days -= A[i]\n\n# Print the result\nprint(N - M)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nfor i in range(m):\n  if a[i] >= n:\n    ans = -1\n    break\n  n -= a[i]\n\nif ans != -1:\n  ans = n\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\nimport heapq\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    assignments = list(map(int, sys.stdin.readline().split()))\n    assignments.sort()\n    days_hanging_out = 0\n    for a in assignments:\n        if n < a:\n            print(-1)\n            sys.exit()\n        days_hanging_out += n - a\n        n -= a\n    print(days_hanging_out)\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650408567,
  "id": "cmpl-4yqwxt2goU0q80LmppqnUbKVgF5OS",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 22:50:49.622281 0 {
  "finish_reason": "length",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c\u696d\u306f\u3067\u304d\u306a\u3044\n# \u5168\u3066\u306e\u4f5c\u696d\u3092\u7d42\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306f\u3001\n# \u305d\u306e\u65e5\u6570\u3067\u4f5c\u696d\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u308c\u3070\u826f\u3044\n\n# \u4f5c\u696d\u65e5\u6570\u306e\u6700\u5927\u5024\nmax_a = max(a)\n\n# \u9023\u7d9a\u3057\u3066\u4f5c\u696d\u3067\u304d\u308b\u65e5\u6570\u306e\u6700\u5927\u5024\u3092\u8abf\u3079\u308b\n# \u305d\u306e\u65e5\u6570\u3092\u8d85\u3048\u308b\u4f5c"
}
2022-04-19 22:50:49.622399 REASON length
2022-04-19 22:50:49.622407 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# N days of vacation, M assignments\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# sort assignments by descending order\nA.sort(reverse=True)\n\n# can he finish all assignments?\nif sum(A) > N:\n    print(-1)\n    exit()\n\n# answer: N - sum(A)\nprint(N - sum(A))"
}
2022-04-19 22:50:49.622435 REASON stop
2022-04-19 22:50:49.623981 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort()\n\nif N < sum(A):\n    print(-1)\nelse:\n    print(N - sum(A))"
}
2022-04-19 22:50:49.624072 REASON stop
2022-04-19 22:50:49.624862 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    N,M = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    sum_A = sum(A)\n    if sum_A > N:\n        print(-1)\n        exit()\n    ans = N - sum_A\n    for a in A:\n        if ans > 0:\n            ans -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:50:49.624933 REASON stop
2022-04-19 22:50:49.650206 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u8ab2\u984c\u3092\u3053\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u65e5\u6570\ndays_needed = sum(A)\n\nif days_needed > N:\n    print(-1)\nelse:\n    print(N - days_needed)"
}
2022-04-19 22:50:49.650338 REASON stop
2022-04-19 22:50:49.671573 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport sys\n\n# Read from standard input\nN, M = list(map(int, sys.stdin.readline().split()))\nA = list(map(int, sys.stdin.readline().split()))\n\n# Sort the list of assignments in decreasing order\nA.sort(reverse=True)\n\n# Count the number of days that Takahashi can hang out\nhang_out_days = 0\nfor i in range(M):\n    # If the number of days he can hang out is less than the number of days he needs to finish the assignment,\n    # he cannot finish all the assignments during the vacation\n    if hang_out_days < A[i]:\n        print(-1)\n        sys.exit()\n    hang_out_days += 1\n    hang_out_days -= A[i]\n\n# Print the result\nprint(N - M)"
}
2022-04-19 22:50:49.671722 REASON stop
2022-04-19 22:50:49.697916 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nfor i in range(m):\n  if a[i] >= n:\n    ans = -1\n    break\n  n -= a[i]\n\nif ans != -1:\n  ans = n\n\nprint(ans)"
}
2022-04-19 22:50:49.698049 REASON stop
2022-04-19 22:50:49.702119 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\nimport heapq\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    assignments = list(map(int, sys.stdin.readline().split()))\n    assignments.sort()\n    days_hanging_out = 0\n    for a in assignments:\n        if n < a:\n            print(-1)\n            sys.exit()\n        days_hanging_out += n - a\n        n -= a\n    print(days_hanging_out)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 22:50:49.702350 REASON stop
