["\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\nfor i in range(m):\n  if a[i] >= n:\n    ans = -1\n    break\n  n -= a[i]\n\nif ans != -1:\n  ans = n\n\nprint(ans)", "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u8ab2\u984c\u3092\u3053\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u65e5\u6570\ndays_needed = sum(A)\n\nif days_needed > N:\n    print(-1)\nelse:\n    print(N - days_needed)", "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort()\n\nif N < sum(A):\n    print(-1)\nelse:\n    print(N - sum(A))", "\n\ndef main():\n    N,M = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    sum_A = sum(A)\n    if sum_A > N:\n        print(-1)\n        exit()\n    ans = N - sum_A\n    for a in A:\n        if ans > 0:\n            ans -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\n# N days of vacation, M assignments\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# sort assignments by descending order\nA.sort(reverse=True)\n\n# can he finish all assignments?\nif sum(A) > N:\n    print(-1)\n    exit()\n\n# answer: N - sum(A)\nprint(N - sum(A))", "\n\nimport sys\nimport heapq\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    assignments = list(map(int, sys.stdin.readline().split()))\n    assignments.sort()\n    days_hanging_out = 0\n    for a in assignments:\n        if n < a:\n            print(-1)\n            sys.exit()\n        days_hanging_out += n - a\n        n -= a\n    print(days_hanging_out)\n\n\nif __name__ == '__main__':\n    main()", "\nimport sys\n\n# Read from standard input\nN, M = list(map(int, sys.stdin.readline().split()))\nA = list(map(int, sys.stdin.readline().split()))\n\n# Sort the list of assignments in decreasing order\nA.sort(reverse=True)\n\n# Count the number of days that Takahashi can hang out\nhang_out_days = 0\nfor i in range(M):\n    # If the number of days he can hang out is less than the number of days he needs to finish the assignment,\n    # he cannot finish all the assignments during the vacation\n    if hang_out_days < A[i]:\n        print(-1)\n        sys.exit()\n    hang_out_days += 1\n    hang_out_days -= A[i]\n\n# Print the result\nprint(N - M)"]