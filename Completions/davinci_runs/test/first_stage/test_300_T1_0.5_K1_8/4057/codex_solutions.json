["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # count number of unique values\n    unique_values = len(set(a))\n\n    # print number of pockets needed\n    print(unique_values)\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\na.sort()\ngroups = []\n\nfor i in range(n):\n    if i == 0 or a[i] != a[i-1]:\n        groups.append([a[i]])\n    else:\n        groups[-1].append(a[i])\n\nprint(len(groups))", "\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# n = 1\n# a = [100]\n\na = set(a)\n\nprint(len(a))", "\n\n\ndef main():\n    input()\n    print(len(set(map(int, input().split()))))\n\n\nif __name__ == '__main__':\n    main()", "\n\n#inputs\nn = int(input())\na = [int(x) for x in input().split()]\n\n#create a list of the number of occurrences of each value\ncounts = [0] * 101\nfor i in range(n):\n    counts[a[i]] += 1\n\n#count the number of different values\nnum_different = 0\nfor i in range(1, 101):\n    if counts[i] != 0:\n        num_different += 1\n\n#print the answer\nprint(num_different)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n#print(n)\n#print(a)\n\na.sort()\n\nprint(a)\n\n#print(len(set(a)))\n\n#print(a.count(a[0]))\n#print(a.count(a[-1]))\n\n#print(a.count(a[0])+a.count(a[-1]))\n\nprint(max(a.count(a[0]), a.count(a[-1])) + len(set(a)) - 1)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a list of the number of occurrences of each number in the list\n# The length of this list is the number of pockets needed\n\noccurrences = [0] * 101\n\nfor i in a:\n    occurrences[i] += 1\n\ncount = 0\n\nfor i in range(1, 101):\n    if occurrences[i] > 0:\n        count += 1\n\nprint(count)", "\n\nimport sys\n\ndef min_pockets(coins):\n    coins.sort()\n    n = len(coins)\n    pockets = 0\n    i = 0\n    while i < n:\n        pockets += 1\n        j = i + 1\n        while j < n and coins[j] == coins[i]:\n            j += 1\n        i = j\n    return pockets\n\nn = int(sys.stdin.readline())\ncoins = [int(x) for x in sys.stdin.readline().split()]\nprint(min_pockets(coins))"]