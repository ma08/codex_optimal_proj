2022-04-19 21:28:49.910676 """
Polycarp has $n$ coins, the value of the $i$-th coin is $a_i$. Polycarp wants to distribute all the coins between his pockets, but he cannot put two coins with the same value into the same pocket.

For example, if Polycarp has got six coins represented as an array $a = [1, 2, 4, 3, 3, 2]$, he can distribute the coins into two pockets as follows: $[1, 2, 3], [2, 3, 4]$.

Polycarp wants to distribute all the coins with the minimum number of used pockets. Help him to do that.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 100$) — the number of coins.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 100$) — values of coins.


-----Output-----

Print only one integer — the minimum number of pockets Polycarp needs to distribute all the coins so no two coins with the same value are put into the same pocket.


-----Examples-----
Input
6
1 2 4 3 3 2

Output
2

Input
1
100

Output
1
"""
2022-04-19 21:28:49.910690 --------------------------
2022-04-19 21:28:49.910793 using api key derek
2022-04-19 21:29:04.008762 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#inputs\nn = int(input())\na = [int(x) for x in input().split()]\n\n#create a list of the number of occurrences of each value\ncounts = [0] * 101\nfor i in range(n):\n    counts[a[i]] += 1\n\n#count the number of different values\nnum_different = 0\nfor i in range(1, 101):\n    if counts[i] != 0:\n        num_different += 1\n\n#print the answer\nprint(num_different)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\na.sort()\ngroups = []\n\nfor i in range(n):\n    if i == 0 or a[i] != a[i-1]:\n        groups.append([a[i]])\n    else:\n        groups[-1].append(a[i])\n\nprint(len(groups))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # count number of unique values\n    unique_values = len(set(a))\n\n    # print number of pockets needed\n    print(unique_values)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a list of the number of occurrences of each number in the list\n# The length of this list is the number of pockets needed\n\noccurrences = [0] * 101\n\nfor i in a:\n    occurrences[i] += 1\n\ncount = 0\n\nfor i in range(1, 101):\n    if occurrences[i] > 0:\n        count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n#print(n)\n#print(a)\n\na.sort()\n\nprint(a)\n\n#print(len(set(a)))\n\n#print(a.count(a[0]))\n#print(a.count(a[-1]))\n\n#print(a.count(a[0])+a.count(a[-1]))\n\nprint(max(a.count(a[0]), a.count(a[-1])) + len(set(a)) - 1)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef min_pockets(coins):\n    coins.sort()\n    n = len(coins)\n    pockets = 0\n    i = 0\n    while i < n:\n        pockets += 1\n        j = i + 1\n        while j < n and coins[j] == coins[i]:\n            j += 1\n        i = j\n    return pockets\n\nn = int(sys.stdin.readline())\ncoins = [int(x) for x in sys.stdin.readline().split()]\nprint(min_pockets(coins))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# n = 1\n# a = [100]\n\na = set(a)\n\nprint(len(a))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    input()\n    print(len(set(map(int, input().split()))))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650403730,
  "id": "cmpl-4ypgwBtmsoBUBkAP5efXqOUXBAysb",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:29:04.009209 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#inputs\nn = int(input())\na = [int(x) for x in input().split()]\n\n#create a list of the number of occurrences of each value\ncounts = [0] * 101\nfor i in range(n):\n    counts[a[i]] += 1\n\n#count the number of different values\nnum_different = 0\nfor i in range(1, 101):\n    if counts[i] != 0:\n        num_different += 1\n\n#print the answer\nprint(num_different)"
}
2022-04-19 21:29:04.009289 REASON stop
2022-04-19 21:29:04.009895 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\na.sort()\ngroups = []\n\nfor i in range(n):\n    if i == 0 or a[i] != a[i-1]:\n        groups.append([a[i]])\n    else:\n        groups[-1].append(a[i])\n\nprint(len(groups))"
}
2022-04-19 21:29:04.009990 REASON stop
2022-04-19 21:29:04.010566 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # count number of unique values\n    unique_values = len(set(a))\n\n    # print number of pockets needed\n    print(unique_values)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:29:04.010640 REASON stop
2022-04-19 21:29:04.033480 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a list of the number of occurrences of each number in the list\n# The length of this list is the number of pockets needed\n\noccurrences = [0] * 101\n\nfor i in a:\n    occurrences[i] += 1\n\ncount = 0\n\nfor i in range(1, 101):\n    if occurrences[i] > 0:\n        count += 1\n\nprint(count)"
}
2022-04-19 21:29:04.033663 REASON stop
2022-04-19 21:29:04.034739 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n#print(n)\n#print(a)\n\na.sort()\n\nprint(a)\n\n#print(len(set(a)))\n\n#print(a.count(a[0]))\n#print(a.count(a[-1]))\n\n#print(a.count(a[0])+a.count(a[-1]))\n\nprint(max(a.count(a[0]), a.count(a[-1])) + len(set(a)) - 1)"
}
2022-04-19 21:29:04.034881 REASON stop
2022-04-19 21:29:04.041464 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef min_pockets(coins):\n    coins.sort()\n    n = len(coins)\n    pockets = 0\n    i = 0\n    while i < n:\n        pockets += 1\n        j = i + 1\n        while j < n and coins[j] == coins[i]:\n            j += 1\n        i = j\n    return pockets\n\nn = int(sys.stdin.readline())\ncoins = [int(x) for x in sys.stdin.readline().split()]\nprint(min_pockets(coins))"
}
2022-04-19 21:29:04.041603 REASON stop
2022-04-19 21:29:04.046372 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# n = 1\n# a = [100]\n\na = set(a)\n\nprint(len(a))"
}
2022-04-19 21:29:04.046512 REASON stop
2022-04-19 21:29:04.048010 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    input()\n    print(len(set(map(int, input().split()))))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:29:04.048266 REASON stop
