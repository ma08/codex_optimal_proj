["\n\nimport sys\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if s[i][0] != s[j][0] and s[j][0] != s[k][0] and s[k][0] != s[i][0] and \\\n                    s[i][0] in 'MARCH' and s[j][0] in 'MARCH' and s[k][0] in 'MARCH':\n                ans += 1\nprint(ans)", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    words = [input() for i in range(n)]\n    count = {}\n    for word in words:\n        if word[0] in [\"M\", \"A\", \"R\", \"C\", \"H\"]:\n            if word[0] in count:\n                count[word[0]] += 1\n            else:\n                count[word[0]] = 1\n    count_list = list(count.values())\n    count_list.sort()\n    print(count_list[0] * count_list[1] * count_list[2])\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nfrom collections import Counter\nfrom itertools import combinations\n\nN = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\n\n# print(S)\n\n# \u30ab\u30a6\u30f3\u30c8\ncnt = Counter(S)\n# print(cnt)\n\n# MARCH\ncnt_march = Counter()\nfor s in S:\n    if s[0] in ['M', 'A', 'R', 'C', 'H']:\n        cnt_march[s[0]] += 1\n# print(cnt_march)\n\n# 3\u4eba\u7d44\u307f\u5408\u308f\u305b\ncnt_comb = Counter()\nfor k, v in cnt_march.items():\n    if v >= 3:\n        cnt_comb[k] += v * (v - 1) * (v - 2) // 6\n    elif v == 2:\n        cnt_comb[k] += v * (v - 1) // 2\n    else:\n        cnt_comb[k] += v\n# print(cnt_comb)\n\n# print(cnt_comb['M'] + cnt_comb['A'] + cnt_comb['R'] + cnt_comb['C'] + cnt_comb['H'])\n\n# 3\u4eba\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u6210\ncomb = combinations(cnt_march.keys(), 3)\n# print(comb)\n\n# MARCH\u4ee5\u5916\u306e3\u4eba\u7d44\u307f\u5408\u308f\u305b\ncnt_comb_other = Counter()\nfor c in comb:\n    cnt_comb_other[c] = cnt_comb[c[0]] * cnt_comb[c[1]] * cnt_comb[c[2]]\n# print(cnt_comb_other)\n# print(sum(cnt_comb_other.values()))\n\n# MARCH\u306e3\u4eba\u7d44\u307f\u5408\u308f\u305b\ncnt_comb_march = Counter()\nfor c in comb:\n    if 'M' in c and 'A' in c and 'R' in c and 'C' in c and 'H' in c:\n        cnt_comb_march[c] = cnt_comb[c[0]] * cnt_comb[c[1]] * cnt_comb[c[2]]\n# print(cnt_comb_march)\n# print(sum(cnt_comb_march.values()))\n\n# MARCH\u306e3\u4eba\u7d44\u307f\u5408\u308f\u305b\u3092\u9664\u304f\nprint(sum(cnt_comb_other.values()) - sum(cnt_comb_march.values()))", "\n\nN = int(input())\n\nS = []\n\nfor i in range(N):\n    S.append(input())\n\ncnt = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if S[i][0] == \"M\" or S[i][0] == \"A\" or S[i][0] == \"R\" or S[i][0] == \"C\" or S[i][0] == \"H\":\n                if S[j][0] == \"M\" or S[j][0] == \"A\" or S[j][0] == \"R\" or S[j][0] == \"C\" or S[j][0] == \"H\":\n                    if S[k][0] == \"M\" or S[k][0] == \"A\" or S[k][0] == \"R\" or S[k][0] == \"C\" or S[k][0] == \"H\":\n                        if S[i][0] != S[j][0] and S[j][0] != S[k][0] and S[k][0] != S[i][0]:\n                            cnt += 1\n\nprint(cnt)", "\n\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    m = 0\n    a = 0\n    r = 0\n    c = 0\n    h = 0\n    for i in range(n):\n        if s[i][0] == 'M':\n            m += 1\n        elif s[i][0] == 'A':\n            a += 1\n        elif s[i][0] == 'R':\n            r += 1\n        elif s[i][0] == 'C':\n            c += 1\n        elif s[i][0] == 'H':\n            h += 1\n    print(m*a*r + m*a*c + m*a*h + m*r*c + m*r*h + m*c*h + a*r*c + a*r*h + a*c*h + r*c*h)\n\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\nnames = [input() for _ in range(N)]\n\ndef solve(N, names):\n    d = {}\n    for name in names:\n        first_letter = name[0]\n        if first_letter == 'M' or first_letter == 'A' or first_letter == 'R' or first_letter == 'C' or first_letter == 'H':\n            if first_letter not in d:\n                d[first_letter] = 0\n            d[first_letter] += 1\n\n    cnt = 0\n    for key1 in d:\n        for key2 in d:\n            for key3 in d:\n                if key1 != key2 and key2 != key3 and key1 != key3:\n                    cnt += d[key1] * d[key2] * d[key3]\n    return cnt\n\nprint(solve(N, names))", "\n\nimport sys\nfrom collections import Counter\n\nn = int(input())\n\nnames = []\nfor i in range(n):\n    names.append(input())\n\n#print(names)\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304cM, A, R, C, H\u306e\u3069\u308c\u304b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\ndef is_start_with_march(s):\n    if s[0] == 'M' or s[0] == 'A' or s[0] == 'R' or s[0] == 'C' or s[0] == 'H':\n        return True\n    else:\n        return False\n\n# \u5148\u982d\u6587\u5b57\u304cM, A, R, C, H\u306e\u3069\u308c\u304b\u306e\u6587\u5b57\u5217\u3092\u62bd\u51fa\u3059\u308b\nmarch_names = []\nfor name in names:\n    if is_start_with_march(name):\n        march_names.append(name)\n\n#print(march_names)\n\n# \u5148\u982d\u6587\u5b57\u304cM, A, R, C, H\u306e\u3069\u308c\u304b\u306e\u6587\u5b57\u5217\u306e\u305d\u308c\u305e\u308c\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\nmarch_names_counter = Counter(march_names)\n#print(march_names_counter)\n\n# \u51fa\u73fe\u56de\u6570\u304c3\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\nmarch_names_counter_3_or_more = []\nfor key, value in march_names_counter.items():\n    if value >= 3:\n        march_names_counter_3_or_more.append(key)\n\n#print(march_names_counter_3_or_more)\n\n# \u5148\u982d\u6587\u5b57\u304cM, A, R, C, H\u306e\u3069\u308c\u304b\u306e\u6587\u5b57\u5217\u306e\u305d\u308c\u305e\u308c\u306e\u51fa\u73fe\u56de\u6570\u304c3\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\n# \u5148\u982d\u6587\u5b57\u304c\u540c\u3058\u3082\u306e\u3092\u62bd\u51fa\u3059\u308b\nmarch_names_counter_3_or_more_same_start_letter = []\nfor name in march_names_counter_3_or_more:\n    for name2 in march_names_counter_3_or_more:\n        if name[0] == name2[0]:\n            march_names_counter_3_or_more_same_start_letter.append(name2)\n\n#print(march_names_counter_3_or_more_same_start_letter)\n\n# \u5148\u982d\u6587\u5b57\u304cM, A, R, C, H\u306e\u3069\u308c\u304b\u306e\u6587\u5b57\u5217\u306e\u305d\u308c\u305e\u308c\u306e\u51fa\u73fe\u56de\u6570\u304c3\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\n# \u5148\u982d\u6587\u5b57\u304c\u540c\u3058\u3082\u306e\u3092\u62bd\u51fa\u3057\u305f\u3082\u306e\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\nmarch_names_counter_3_or_more_same_start_letter_counter = Counter(march_names_counter_3_or_more_same_start_letter)\n#print(march_names_counter_3_or_more_same_start_letter_counter)\n\n# \u51fa\u73fe\u56de\u6570\u304c3\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\n# \u5148\u982d\u6587\u5b57\u304c\u540c\u3058\u3082\u306e\u3092\u62bd\u51fa\u3057\u305f\u3082\u306e\u306e\u51fa\u73fe\u56de\u6570\u304c3\u4ee5\u4e0a\u306e\u3082\u306e\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u3001\n# \u305d\u308c\u305e\u308c\u306e\u51fa\u73fe\u56de\u6570\u304b\u30893\u3092\u5f15\u3044\u305f\u5024\u3092\u639b\u3051\u5408\u308f\u305b\u308b\nans = 1\nfor key, value in march_names_counter_3_or_more_same_start_letter_counter.items():\n    ans *= value - 2\n\nprint(ans)", "\n\nimport sys\n\n# read the input\nN = int(sys.stdin.readline())\nS = []\nfor _ in range(N):\n    S.append(sys.stdin.readline().strip())\n\n# initialize the counter\nc = 0\n\n# count the number of ways\nfor i in range(N):\n    if S[i][0] != 'M' and S[i][0] != 'A' and S[i][0] != 'R' and S[i][0] != 'C' and S[i][0] != 'H':\n        continue\n    for j in range(N):\n        if S[j][0] == S[i][0]:\n            continue\n        if S[j][0] != 'M' and S[j][0] != 'A' and S[j][0] != 'R' and S[j][0] != 'C' and S[j][0] != 'H':\n            continue\n        for k in range(N):\n            if S[k][0] == S[i][0] or S[k][0] == S[j][0]:\n                continue\n            if S[k][0] != 'M' and S[k][0] != 'A' and S[k][0] != 'R' and S[k][0] != 'C' and S[k][0] != 'H':\n                continue\n            c += 1\n\n# print the answer\nprint(c)"]