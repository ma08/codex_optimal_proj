["\n\nfrom collections import deque\n\nN = int(input())\nh = deque(map(int, input().split()))\n\ncount = 0\n\nwhile h:\n    if h[0] >= h[-1]:\n        h.popleft()\n    else:\n        h.pop()\n    count += 1\n\nprint(count)", "\n\ndef main():\n    N = int(input())\n    h = list(map(int, input().split()))\n\n    count = 0\n    while True:\n        max_h = max(h)\n        if max_h == 0:\n            break\n        for i in range(N):\n            if h[i] == max_h:\n                h[i] = 0\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    h = list(map(int,sys.stdin.readline().split()))\n    ans = 0\n    for i in range(N):\n        if h[i] == 0:\n            continue\n        ans += 1\n        for j in range(i,N):\n            if h[j] == 0:\n                break\n            h[j] -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    N = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, N - 1):\n        if h[i - 1] < h[i] and h[i + 1] < h[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\n# Read input\nN = int(sys.stdin.readline())\nh = [int(x) for x in sys.stdin.readline().split()]\n\n# Find the maximum value in the h array\nmax_h = max(h)\n\n# Initialize the number of watering operations\nwatering_ops = 0\n\n# Keep watering until the maximum value is 0\nwhile max_h > 0:\n    # Initialize the start and end points of a watering operation\n    start_point = -1\n    end_point = -1\n\n    # Iterate through the h array\n    for i in range(N):\n        # If the height of a flower is not 0\n        if h[i] != 0:\n            # If the start point is not initialized\n            if start_point == -1:\n                # Initialize the start point\n                start_point = i\n            # If the end point is not initialized\n            if end_point == -1:\n                # Initialize the end point\n                end_point = i\n            else:\n                # If the height of the next flower is 0\n                if h[i+1] == 0:\n                    # Update the end point\n                    end_point = i\n                    # Water the flowers between the start point and end point\n                    for j in range(start_point, end_point+1):\n                        h[j] -= 1\n                    # Update the number of watering operations\n                    watering_ops += 1\n                    # Reset the start and end points\n                    start_point = -1\n                    end_point = -1\n\n    # If there is only one flower left\n    if h[N-1] != 0:\n        # Water the flower\n        h[N-1] -= 1\n        # Update the number of watering operations\n        watering_ops += 1\n\n    # Update the maximum value in the h array\n    max_h = max(h)\n\n# Print the result\nprint(watering_ops)", "\n\nN = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    for j in range(i, N):\n        if h[j] == 0:\n            continue\n        if h[j] == h[i]:\n            cnt += 1\n            for k in range(i, j+1):\n                h[k] -= 1\n            break\n        elif h[j] < h[i]:\n            cnt += 1\n            for k in range(i, j+1):\n                h[k] -= 1\n            break\n\nprint(cnt)", "\n\nN = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(1, N + 1):\n    if h[i - 1] > cnt:\n        cnt = h[i - 1]\n    if h[i - 1] >= cnt:\n        cnt += 1\nprint(cnt)", "\n\nN = input()\nh = list(map(int, input().split()))\n\nwatering_operation = 0\nfor i in range(N):\n    if h[i] == 0:\n        continue\n    watering_operation += 1\n    for j in range(i, N):\n        if h[j] > 0:\n            h[j] -= 1\n        else:\n            break\n\nprint(watering_operation)"]