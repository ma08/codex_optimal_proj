2022-04-19 21:23:26.842071 """
You are given $n$ chips on a number line. The $i$-th chip is placed at the integer coordinate $x_i$. Some chips can have equal coordinates.

You can perform each of the two following types of moves any (possibly, zero) number of times on any chip:

  Move the chip $i$ by $2$ to the left or $2$ to the right for free (i.e. replace the current coordinate $x_i$ with $x_i - 2$ or with $x_i + 2$);  move the chip $i$ by $1$ to the left or $1$ to the right and pay one coin for this move (i.e. replace the current coordinate $x_i$ with $x_i - 1$ or with $x_i + 1$). 

Note that it's allowed to move chips to any integer coordinate, including negative and zero.

Your task is to find the minimum total number of coins required to move all $n$ chips to the same coordinate (i.e. all $x_i$ should be equal after some sequence of moves).


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 100$) — the number of chips.

The second line of the input contains $n$ integers $x_1, x_2, \dots, x_n$ ($1 \le x_i \le 10^9$), where $x_i$ is the coordinate of the $i$-th chip.


-----Output-----

Print one integer — the minimum total number of coins required to move all $n$ chips to the same coordinate.


-----Examples-----
Input
3
1 2 3

Output
1

Input
5
2 2 2 3 3

Output
2



-----Note-----

In the first example you need to move the first chip by $2$ to the right and the second chip by $1$ to the right or move the third chip by $2$ to the left and the second chip by $1$ to the left so the answer is $1$.

In the second example you need to move two chips with coordinate $3$ by $1$ to the left so the answer is $2$.
"""
2022-04-19 21:23:26.842087 --------------------------
2022-04-19 21:23:26.842190 using api key derek
2022-04-19 21:23:46.195165 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# SOLUTION\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nif x[-1] - x[0] == 0:\n    print(0)\nelif x[-1] - x[0] == 1:\n    print(1)\nelif x[-1] - x[0] == 2:\n    print(1)\nelse:\n    print(2)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    ans = 0\n    for i in range(n):\n        if x[i] < x[0]:\n            ans += x[0] - x[i]\n        elif x[i] > x[0]:\n            ans += x[i] - x[0] - 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nans = 10**9\nfor i in range(min(x), max(x) + 1):\n    ans = min(ans, sum(abs(i - j) for j in x))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    num_chips = int(input())\n    chip_pos = [int(x) for x in input().split()]\n    min_pos = min(chip_pos)\n    max_pos = max(chip_pos)\n    min_cost = 0\n    for pos in chip_pos:\n        if pos > min_pos:\n            min_cost += pos - min_pos\n    max_cost = 0\n    for pos in chip_pos:\n        if pos < max_pos:\n            max_cost += max_pos - pos\n    print(min(min_cost, max_cost))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\nmx = max(x)\nmn = min(x)\n\nif mx == mn:\n    print(0)\nelse:\n    print(mx-mn-n)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\nx = sorted(list(map(int,input().split())))\n\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\nchips = list(map(int, input().split()))\n\n# print(chips)\n\nans = 0\n\nif (n == 1):\n    print(0)\nelse:\n    chips.sort()\n    # print(chips)\n    mid = chips[n//2]\n    # print(mid)\n\n    for i in range(n):\n        ans += abs(chips[i] - mid)\n\n    print(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# -*- coding: utf-8 -*-\n# @Date    : 2018-09-06 15:11:49\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nimport os\nfrom sys import stdin\n\nmax_val=int(10e12)\nmin_val=int(-10e12)\n\ndef read_int()     : return int(stdin.readline())\ndef read_ints()    : return [int(x) for x in stdin.readline().split()]\ndef read_str()     : return input()\ndef read_strs()    : return [x for x in stdin.readline().split()]\n\nnb_chips = read_int()\nchips    = read_ints()\nchips.sort()\nmid = chips[nb_chips//2]\nans = 0\nfor i in chips:\n    ans += abs(mid-i)\nprint(ans)"
    }
  ],
  "created": 1650403406,
  "id": "cmpl-4ypbiuC6QSfNZp11RXr60UAloAvRr",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:23:46.195506 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# SOLUTION\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nif x[-1] - x[0] == 0:\n    print(0)\nelif x[-1] - x[0] == 1:\n    print(1)\nelif x[-1] - x[0] == 2:\n    print(1)\nelse:\n    print(2)"
}
2022-04-19 21:23:46.195545 REASON stop
2022-04-19 21:23:46.196097 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    ans = 0\n    for i in range(n):\n        if x[i] < x[0]:\n            ans += x[0] - x[i]\n        elif x[i] > x[0]:\n            ans += x[i] - x[0] - 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 21:23:46.196166 REASON stop
2022-04-19 21:23:46.196585 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nans = 10**9\nfor i in range(min(x), max(x) + 1):\n    ans = min(ans, sum(abs(i - j) for j in x))\n\nprint(ans)"
}
2022-04-19 21:23:46.196643 REASON stop
2022-04-19 21:23:46.198500 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    num_chips = int(input())\n    chip_pos = [int(x) for x in input().split()]\n    min_pos = min(chip_pos)\n    max_pos = max(chip_pos)\n    min_cost = 0\n    for pos in chip_pos:\n        if pos > min_pos:\n            min_cost += pos - min_pos\n    max_cost = 0\n    for pos in chip_pos:\n        if pos < max_pos:\n            max_cost += max_pos - pos\n    print(min(min_cost, max_cost))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 21:23:46.198577 REASON stop
2022-04-19 21:23:46.199353 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\nmx = max(x)\nmn = min(x)\n\nif mx == mn:\n    print(0)\nelse:\n    print(mx-mn-n)"
}
2022-04-19 21:23:46.199410 REASON stop
2022-04-19 21:23:46.222883 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\nx = sorted(list(map(int,input().split())))\n\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1\n\nprint(ans)"
}
2022-04-19 21:23:46.223000 REASON stop
2022-04-19 21:23:46.223688 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\nchips = list(map(int, input().split()))\n\n# print(chips)\n\nans = 0\n\nif (n == 1):\n    print(0)\nelse:\n    chips.sort()\n    # print(chips)\n    mid = chips[n//2]\n    # print(mid)\n\n    for i in range(n):\n        ans += abs(chips[i] - mid)\n\n    print(ans)"
}
2022-04-19 21:23:46.223780 REASON stop
2022-04-19 21:23:46.225641 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# -*- coding: utf-8 -*-\n# @Date    : 2018-09-06 15:11:49\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nimport os\nfrom sys import stdin\n\nmax_val=int(10e12)\nmin_val=int(-10e12)\n\ndef read_int()     : return int(stdin.readline())\ndef read_ints()    : return [int(x) for x in stdin.readline().split()]\ndef read_str()     : return input()\ndef read_strs()    : return [x for x in stdin.readline().split()]\n\nnb_chips = read_int()\nchips    = read_ints()\nchips.sort()\nmid = chips[nb_chips//2]\nans = 0\nfor i in chips:\n    ans += abs(mid-i)\nprint(ans)"
}
2022-04-19 21:23:46.225854 REASON stop
