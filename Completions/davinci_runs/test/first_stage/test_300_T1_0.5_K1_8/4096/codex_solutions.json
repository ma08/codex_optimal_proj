["\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort(reverse=True)\n    if sum(a) < m:\n        print(-1)\n        return\n    d = 0\n    for i in range(n):\n        if a[i] >= m:\n            d += 1\n            m = 0\n            break\n        m -= a[i]\n        d += 1\n    if m > 0:\n        d += (m + d - 1) // d\n    print(d)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncurr = 0\ni = 0\nwhile i < n:\n    if curr >= m:\n        break\n    if a[i] <= curr + 1:\n        curr += a[i]\n        i += 1\n    else:\n        break\n\nif curr >= m:\n    print(i)\nelse:\n    print(-1)", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncoffee = sorted(a, reverse=True)\n\ndef check(k):\n    total = 0\n    for i in range(k):\n        total += coffee[i] - i\n        if total < 0:\n            return False\n    return True\n\nlo, hi = 1, len(coffee)\nwhile lo < hi:\n    mid = (lo + hi) // 2\n    if check(mid):\n        hi = mid\n    else:\n        lo = mid + 1\n\nif check(lo):\n    print(lo)\nelse:\n    print(-1)", "\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nif m > n * 100:\n    print(-1)\n    sys.exit(0)\n\na.sort(reverse=True)\n\ndays = 0\npages_written = 0\n\nfor i in range(len(a)):\n    days += 1\n    pages_written += max(0, a[i] - i)\n    if pages_written >= m:\n        print(days)\n        sys.exit(0)\n\nprint(-1)", "\n\ndef caffeine_dosage(arr, m):\n    n = len(arr)\n    days = 0\n    pages_written = 0\n    while pages_written < m and days < n:\n        pages_written += arr[days]\n        for i in range(1, n):\n            if days - i >= 0:\n                pages_written += max(0, arr[days - i] - i)\n        days += 1\n    if pages_written < m:\n        return -1\n    return days\n\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\nprint(caffeine_dosage(arr, m))", "\n\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\na.reverse()\nans=0\ni=0\nwhile m>0:\n    m-=a[i]\n    i+=1\n    ans+=1\n    if m<0:\n        ans=-1\n        break\n    if i==n:\n        i=0\nprint(ans)", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    a = map(int, sys.stdin.readline().strip().split())\n    a.sort()\n    a.reverse()\n    for i in range(1, n+1):\n        a[i-1] -= i-1\n    a.sort()\n    a.reverse()\n    if a[0] < m:\n        print -1\n    else:\n        print (m + a[0] - 1) / a[0]\n\nif __name__ == \"__main__\":\n    main()", "\n\n#------------------------------------------------------------------------------#\n\ndef minDays(n,m,a):\n    \"\"\"\n    Calculate the minimum number of days to complete the coursework, given\n    the number of drinks, the number of pages, and the caffeine in each drink.\n    \"\"\"\n    # Sort the caffeine levels, high to low\n    a.sort(reverse=True)\n    # Take the sum of the first m elements, since these are the ones that will\n    # contribute to the coursework\n    a = sum(a[:m])\n    # If the sum is less than m, then the work cannot be completed\n    if a < m:\n        return -1\n    # Else, the number of days is equal to the rounded-up quotient of the sum\n    # and the number of pages\n    return (a + m - 1) // m\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    print(minDays(n,m,a))\n\nif __name__ == '__main__':\n    main()"]