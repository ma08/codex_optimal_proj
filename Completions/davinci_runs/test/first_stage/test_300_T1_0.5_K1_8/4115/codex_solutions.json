["\n\nimport sys\n\n\ndef main():\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406\n    \"\"\"\n    s = sys.stdin.readline().rstrip()\n    if s == s[::-1]:\n        print(0)\n    else:\n        print(1)\n\n\nif __name__ == '__main__':\n    main()", "\n\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(1)", "\n\ndef main():\n    s = input()\n    length = len(s)\n    if length % 2 == 0:\n        print(length - 1)\n    else:\n        print(length)\n\nif __name__ == '__main__':\n    main()", "\n\ns = list(input())\nn = len(s)\nans = 0\n\nfor i in range(n//2):\n    if s[i] != s[n-1-i]:\n        ans += 1\n\nprint(ans)", "\n\ns = input()\n\nif len(s) == 1:\n    print(0)\n    exit()\n\nans = 0\nfor i in range(int(len(s) / 2)):\n    if s[i] != s[-i - 1]:\n        ans += 1\n\nprint(ans)", "\n\nS = input()\n\ndef isPalindrome(S):\n    for i in range(int(len(S)/2)):\n        if S[i] != S[len(S)-i-1]:\n            return False\n    return True\n\ndef minHugs(S):\n    if isPalindrome(S):\n        return 0\n    else:\n        for i in range(int(len(S)/2)):\n            if S[i] != S[len(S)-i-1]:\n                return min(minHugs(S[:i]+S[len(S)-i-1]+S[i+1:]), minHugs(S[:len(S)-i-1]+S[i]+S[len(S)-i:]))+1\n        return 1\n\nprint(minHugs(S))", "\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\ndef main():\n    S = input()\n    if isPalindrome(S):\n        print(0)\n    else:\n        if S[0] == S[-1]:\n            print(1)\n        else:\n            print(2)\n\nif __name__ == '__main__':\n    main()", "\n\ns = input()\n\ndef palindrome(s):\n    if len(s) == 1:\n        return 0\n    elif len(s) == 2:\n        if s[0] == s[1]:\n            return 0\n        else:\n            return 1\n    else:\n        if s[0] == s[-1]:\n            return palindrome(s[1:-1])\n        else:\n            return min(palindrome(s[1:]), palindrome(s[:-1])) + 1\n\nprint(palindrome(s))"]