["\n\ndef main():\n    N = int(input())\n    ans = 0\n    while N > 0:\n        ans += 1\n        if N & 1:\n            N -= 1\n        else:\n            N //= 2\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nnum = int(sys.stdin.readline())\n\ndef min_moves(num):\n    moves = 0\n\n    while num > 1:\n        if num % 2 == 0:\n            num = num / 2\n        else:\n            num -= 1\n        moves += 1\n    return moves\n\nprint(min_moves(num))", "\n\nN=int(input())\n\ni=1\nj=1\nc=1\n\nwhile(i*j<N):\n    if(i==j):\n        j+=1\n    else:\n        i+=1\n    c+=1\n\nprint(c)", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    i = 1\n    j = 1\n    count = 0\n    while True:\n        if i == n or j == n:\n            print(count)\n            break\n        if i < j:\n            i += 1\n        else:\n            j += 1\n        count += 1\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\n# Functions\n\ndef find_min_moves(n):\n    \"\"\"Determine the minimum number of moves needed to reach a square that contains n.\"\"\"\n    # Find the square root of n, rounded down to the nearest integer\n    sqrt = math.floor(math.sqrt(n))\n    # Find the sum of the first sqrt natural numbers\n    sum_of_nats = (sqrt * (sqrt + 1)) // 2\n    # If the sum equals n, return sqrt\n    if sum_of_nats == n:\n        return sqrt\n    # If the sum is less than n, return sqrt + (n - sum_of_nats)\n    elif sum_of_nats < n:\n        return sqrt + (n - sum_of_nats)\n    # If the sum is greater than n, return sqrt + (sum_of_nats - n)\n    else:\n        return sqrt + (sum_of_nats - n)\n\n# Main program\n\nn = int(input())\nprint(find_min_moves(n))", "\n\nn = int(input())\n\nans = 0\n# N\u304c1\u4ee5\u4e0b\u306e\u6642\u306f0\u3092\u51fa\u529b\u3059\u308b\nif n <= 1:\n    print(ans)\nelse:\n    # \u5e73\u65b9\u6839\u3092\u3068\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u6570\u3088\u308a\u5c0f\u3055\u3044\u6570\u3067\u3001\u6700\u5927\u306e\u5e73\u65b9\u6570\u3092\u6c42\u3081\u308b\n    # \u305d\u306e\u5e73\u65b9\u6570\u3092\u57fa\u6e96\u306b\u3057\u3066\u3001N\u3068\u306e\u5dee\u5206\u3092\u6c42\u3081\u308b\n    # \u305d\u306e\u5dee\u5206\u304c\u3001\u305d\u306e\u5e73\u65b9\u6570\u306e\u5e73\u65b9\u6839\u306e\u5024\u3088\u308a\u5927\u304d\u3044\u304b\u3069\u3046\u304b\u3067\u3001\u79fb\u52d5\u3059\u308b\u65b9\u5411\u304c\u6c7a\u307e\u308b\n    # \u5927\u304d\u3044\u5834\u5408\u306f\u3001(\u5e73\u65b9\u6570,N)\u3078\u79fb\u52d5\u3059\u308b\n    # \u5c0f\u3055\u3044\u5834\u5408\u306f\u3001(N,\u5e73\u65b9\u6570)\u3078\u79fb\u52d5\u3059\u308b\n    # \u3069\u3061\u3089\u306e\u5834\u5408\u3082\u79fb\u52d5\u56de\u6570\u306f\u3001\u5e73\u65b9\u6570\u306e\u5e73\u65b9\u6839\u3068\u3001\u5dee\u5206\u306e\u5dee\u5206\u3092\u8db3\u3057\u305f\u3082\u306e\n    # \u305d\u308c\u304c\u7b54\u3048\u306b\u306a\u308b\n    ans = int(n ** 0.5)\n    diff = n - ans ** 2\n    if diff > ans:\n        ans += diff - ans\n    else:\n        ans += ans - diff\n    print(ans)", "\n\nimport sys\n\ndef main():\n    N = int(input())\n    count = 0\n    i = 1\n    while True:\n        if N == 1:\n            break\n        if N%2 == 0:\n            N = N // 2\n        else:\n            N = N - 1\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"]