["\n\nfrom collections import Counter\nfrom math import log\n\ndef is_good(a):\n    a = sorted(a)\n    n = len(a)\n    s = 0\n    for i in range(n):\n        if a[i] != 0:\n            s += log(a[i], 2)\n            if s % 1 == 0:\n                return True\n    return False\n\ndef solve(a):\n    n = len(a)\n    if is_good(a):\n        return 0\n    for i in range(1, n+1):\n        if is_good(a[:i]):\n            return n - i\n    return n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a))\n\nif __name__ == \"__main__\":\n    main()", "\n\n#-----Solution-----\n\n#This is a very simple problem.\n#First we take the input, and we make a list of all the powers of two up to $10^9$.\n#Then we check if each element in the input list is in the list of powers of two.\n#If it is, we don't have to delete it. Otherwise, we have to delete it.\n\n#We make a list of all the powers of two up to $10^9$.\npowers_of_two = []\nfor i in range(30):\n    powers_of_two.append(2**i)\n\n#We take the input.\nn = int(input())\na = list(map(int, input().split()))\n\n#We check how many elements we have to delete.\nans = 0\nfor i in range(n):\n    if a[i] not in powers_of_two:\n        ans += 1\n\n#We print the answer.\nprint(ans)", "\n\ndef main():\n    \"\"\"\n    \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0439\u0442\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u0441\u0443\u043c\u043c\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0434\u0432\u043e\u0439\u043a\u0438.\n    \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0442\u043e, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u044c\u0441\u044f.\n    \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430\u0434\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0432 \u0432\u0438\u0434\u0435 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432 \u0432\u0438\u0434\u0435 \u043a\u043e\u0440\u0442\u0435\u0436\u0430\n    (\u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439).\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u0434\u043e \u043d\u0430\u0439\u0442\u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u0441\u0443\u043c\u043c\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0434\u0432\u043e\u0439\u043a\u0438.\n    \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0434\u0432\u043e\u0439\u043a\u0438 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n    \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0435\u0441\u0442\u044c, \u0442\u043e \u043e\u043d \u0438 \u0431\u0443\u0434\u0435\u0442 \u043d\u0443\u0436\u043d\u044b\u043c.\n    \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043d\u0435\u0442, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u0441\u0443\u043c\u043c\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0434\u0432\u043e\u0439\u043a\u0438 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n    \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0435\u0441\u0442\u044c, \u0442\u043e \u043e\u043d \u0438 \u0431\u0443\u0434\u0435\u0442 \u043d\u0443\u0436\u043d\u044b\u043c.\n    \u0415\u0441\u043b\u0438 \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0430\u043a\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043d\u0435\u0442, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0434\u043d\u0438\u043c \u0438 \u0442\u0435\u043c \u0436\u0435.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043f\u0438\u044e \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435 \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0434\u043d\u0443 \u043a\u043e\u043f\u0438\u044e \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u043e\u0434\u043d\u0443 \u043a\u043e\u043f\u0438\u044e \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u0434\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043f\u0438\u0439 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 1.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f \u043a\u043e\u043f\u0438\u0438.\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435 \u043d\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0431\u0430\u0432\u0438\u0442\u044c 1 \u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u0434\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435 \u043e\u0441\u0442\u0430\u043b\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u044c\u044e \u0434\u0432\u043e\u0439\u043a\u0438.\n    \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0431\u0430\u0432\u0438\u0442\u044c 1 \u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n    \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430\u0434\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n    \"\"\"\n    n = int(input())\n    sequence = list(map(int, input().split()))\n    elements = set()\n    for element in sequence:\n        elements.add((element, sequence.count(element)))\n    removed_elements = 0\n    for element, element_count in elements:\n        if element in elements:\n            for i in range(30):\n                power_of_two = 2 ** i\n                if power_of_two - element in elements:\n                    if element == power_of_two - element:\n                        if element_count > 1:\n                            elements.remove((element, element_count))\n                            removed_elements += 1\n                        break\n                    else:\n                        if element_count > 1:\n                            elements.remove((element, element_count))\n                            element_count -= 1\n                        if elements.count((power_of_two - element, elements.count((power_of_two - element, 0)))) > 1:\n                            elements.remove((power_of_two - element, elements.count((power_of_two - element, 0))))\n                            elements.add((power_of_two - element, elements.count((power_of_two - element, 0)) - 1))\n                        break\n                elif power_of_two + element in elements:\n                    if element == power_of_two + element:\n                        if element_count > 1:\n                            elements.remove((element, element_count))\n                            removed_elements += 1\n                        break\n                    else:\n                        if element_count > 1:\n                            elements.remove((element, element_count))\n                            element_count -= 1\n                        if elements.count((power_of_two + element, elements.count((power_of_two + element, 0)))) > 1:\n                            elements.remove((power_of_two + element, elements.count((power_of_two + element, 0))))\n                            elements.add((power_of_two + element, elements.count((power_of_two + element, 0)) - 1))\n                        break\n            else:\n                removed_elements += 1\n                elements.remove((element, element_count))\n    if len(elements) == 0:\n        removed_elements += 1\n    elif len(elements) == 1:\n        element, element_count = elements.pop()\n        if element_count == 1:\n            for i in range(30):\n                if element == 2 ** i:\n                    removed_elements += 1\n    print(removed_elements)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_power_of_two(n):\n    return n != 0 and ((n & (n - 1)) == 0)\n\ndef is_good(a):\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if i != j and is_power_of_two(a[i] + a[j]):\n                return True\n    return False\n\ndef get_min_bad(a):\n    if is_good(a):\n        return 0\n    else:\n        min_bad = len(a)\n        for i in range(len(a)):\n            if not is_good(a[:i] + a[i+1:]):\n                min_bad = min(min_bad, 1 + get_min_bad(a[:i] + a[i+1:]))\n        return min_bad\n\nprint(get_min_bad(a))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# sum of the powers of 2 from 0 to 30\npow_sum = [0]\nfor i in range(1, 31):\n    pow_sum.append(2**i + pow_sum[i-1])\n\n# iterate over all possible subsets of the array\n# and check whether the sum of the elements of the subset\n# is a power of 2, i.e. is in the array pow_sum\n# if so, then the current subset is good\n# and we can delete the remaining elements\nans = n\nfor i in range(1, 2**n):\n    s = 0\n    for j in range(n):\n        if (i >> j) & 1:\n            s += a[j]\n    if s in pow_sum:\n        ans = min(ans, n-bin(i).count('1'))\n\nprint(ans)", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    res = 0\n    while len(arr) > 0:\n        tmp = arr[-1]\n        arr.pop()\n        if tmp == 0:\n            break\n        while tmp > 0:\n            tmp = tmp & (tmp - 1)\n            res += 1\n    print(res)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef isGood(a):\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            if a[i] + a[j] in powers:\n                return True\n    return False\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if isGood(a):\n        print(0)\n        return\n    for i in range(n):\n        if isGood(a[:i]+a[i+1:]):\n            print(1)\n            return\n    print(n)\n\npowers = set()\nfor i in range(32):\n    powers.add(2**i)\n\nmain()"]