["\n\nfrom collections import defaultdict\n\ndef main():\n    # Get the string and query counts\n    n, q = map(int, input().split())\n\n    # Get the string\n    s = input()\n\n    # Get the queries\n    queries = [list(map(int, input().split())) for _ in range(q)]\n\n    # Create a dictionary to store the number of ACs in each substring\n    ac_count = defaultdict(int)\n\n    # Loop through the string\n    for i in range(n-1):\n        # If the current 2 characters are AC, increase the count\n        if s[i:i+2] == 'AC':\n            ac_count[i+1] += 1\n\n    # Create a prefix sum array\n    prefix_sums = [0]\n    for i in range(1, n):\n        prefix_sums.append(prefix_sums[i-1] + ac_count[i])\n\n    # Loop through the queries\n    for query in queries:\n        # Get the start and end index\n        l, r = query[0]-1, query[1]-1\n\n        # Print the answer\n        print(prefix_sums[r] - prefix_sums[l])\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n, q = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().rstrip()\n    for _ in range(q):\n        l, r = map(int, sys.stdin.readline().split())\n        print(s[l-1:r].count(\"AC\"))\n\nif __name__ == '__main__':\n    main()", "\n\nN, Q = map(int, input().split())\nS = input()\n\n# \u7d2f\u7a4d\u548c\u3092\u4f5c\u308b\nac_count = [0] * (N + 1)\nfor i in range(N):\n    if S[i:i + 2] == \"AC\":\n        ac_count[i + 1] = ac_count[i] + 1\n    else:\n        ac_count[i + 1] = ac_count[i]\n\nfor _ in range(Q):\n    l, r = map(int, input().split())\n    print(ac_count[r - 1] - ac_count[l - 1])", "\n\nN, Q = map(int, input().split())\nS = input()\n\nsubstrings = []\nfor i in range(N-1):\n    if S[i:i+2] == \"AC\":\n        substrings.append(i)\n\nfor i in range(Q):\n    l, r = map(int, input().split())\n    count = 0\n    for s in substrings:\n        if l-1 <= s <= r-2:\n            count += 1\n    print(count)", "\n\nn, q = map(int, input().split())\ns = input()\nfor _ in range(q):\n    l, r = map(int, input().split())\n    print(s[l-1:r].count(\"AC\"))", "\n\nN, Q = map(int, input().split())\nS = input()\n\nfor i in range(Q):\n    l, r = map(int, input().split())\n    print(S[l-1:r-1].count('AC'))", "\n\n# AC\nn, q = map(int, input().split())\ns = input()\n\nac_dict = {}\n\nfor i in range(n):\n    if s[i:i+2] == 'AC':\n        ac_dict[i] = 1\n\nfor _ in range(q):\n    l, r = map(int, input().split())\n    l -= 1\n    r -= 1\n    cnt = 0\n    for i in ac_dict:\n        if i >= l and i < r:\n            cnt += 1\n    print(cnt)", "\n\nN, Q = map(int, input().split())\nS = input()\n\nfor _ in range(Q):\n    l, r = map(int, input().split())\n    print(S[l-1:r].count(\"AC\"))"]