["\n\n#-----main-----\nn = int(input())\nt = [int(input()) for _ in range(n)]\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# \u6700\u5c0f\u516c\u500d\u6570\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nans = 1\nfor i in range(n):\n    ans = lcm(ans, t[i])\n    \nprint(ans)", "\n\nimport math\n\ndef gcd(a, b):\n    \"\"\"\n    \u6700\u5927\u516c\u7d04\u6570\n    \"\"\"\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\n    \u6700\u5c0f\u516c\u500d\u6570\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef lcm_list(numbers):\n    \"\"\"\n    \u30ea\u30b9\u30c8\u5185\u306e\u6700\u5c0f\u516c\u500d\u6570\n    \"\"\"\n    return reduce(lcm, numbers)\n\ndef main():\n    n = int(input())\n    t = [int(input()) for i in range(n)]\n    print(lcm_list(t))\n\nif __name__ == '__main__':\n    main()", "\n\nimport fractions\n\ndef lcm(a, b):\n    return a * b // fractions.gcd(a, b)\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\n\nans = T[0]\nfor i in range(1, N):\n    ans = lcm(ans, T[i])\n\nprint(ans)", "\n\nimport sys\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef main():\n    N = input()\n    T = [int(input()) for i in range(N)]\n    ans = T[0]\n    for i in range(1, N):\n        ans = lcm(ans, T[i])\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef gcd(a, b):\n    if b:\n        return gcd(b, a % b)\n    else:\n        return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    ans = a[0]\n    for i in range(n-1):\n        ans = lcm(ans, a[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\ndef gcd(m, n):\n    if m % n == 0:\n        return n\n    return gcd(n, m % n)\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef lcm_list(l):\n    if len(l) == 1:\n        return l[0]\n    return lcm(l[0], lcm_list(l[1:]))\n\nprint(lcm_list(T))", "\n\nimport math\n\ndef gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\nt = [int(input()) for i in range(n)]\n\nprint(lcm(t[0], t[1]))\nfor i in range(2, n):\n    print(lcm(lcm(t[0], t[1]), t[i]))", "\n\nfrom math import gcd\n\nN = int(input())\nT = [int(input()) for _ in range(N)]\n\nprint(int(T[0] * T[1] / gcd(T[0], T[1])))"]