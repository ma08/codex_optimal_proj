["\n\na, b, c = [int(x) for x in input().split()]\n\nif a <= b and a <= c:\n    print(a + min(b, c))\nelif b <= a and b <= c:\n    print(b + min(a, c))\nelse:\n    print(c + min(a, b))", "\n\nimport math\n\ndef main():\n    a,b,c = map(int, input().split())\n    print(min(a,b,c) + math.ceil((a+b+c)/5))\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom sys import stdin\n\na,b,c = [int(x) for x in stdin.readline().split()]\n\nprint(min(a,b,c)*7)", "\n\ndef main():\n    a, b, c = map(int, input().strip().split())\n    print(min(a, b, c) * 7 + 3)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef solve(a, b, c):\n    n = a + b + c\n    a /= n\n    b /= n\n    c /= n\n    return max(a + (b + c) * 2, b + (a + c) * 2, c + (a + b) * 2)\n\nif __name__ == '__main__':\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(solve(a, b, c))", "\n\na, b, c = (int(x) for x in input().split())\n\nprint(min(a+b+c, a+2*b+2*c, 2*a+b+2*c, 2*a+2*b+3*c))", "\n\ndef solve(a, b, c):\n    days = 7\n    return min(days, 1 + a + min(b, c))\n\na, b, c = map(int, input().split())\nprint(solve(a, b, c))", "\n\nimport math\n\ndef main():\n    a, b, c = map(int, input().split())\n    days = [a, b, c]\n    days.sort()\n    days_eaten = 0\n    for i in range(3):\n        days_eaten += math.floor(days[i]/3)\n        days[i] -= math.floor(days[i]/3)*3\n    days.sort()\n    if days[0] == 0:\n        days_eaten += days[1]+days[2]\n    else:\n        days_eaten += days[0] + math.floor((days[1]+days[2]-days[0])/2)\n    print(days_eaten)\n\nif __name__ == \"__main__\":\n    main()"]