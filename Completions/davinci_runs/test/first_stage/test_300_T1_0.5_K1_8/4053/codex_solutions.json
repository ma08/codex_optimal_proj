["", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()", "\n\n\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()", "\n\n\n# Solution\n\n#include <bits/stdc++.h>\n#define rep(i, n) for (int i = 0; i < (n); ++i)\n#define rep1(i, n) for (int i = 1; i < (n); ++i)\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 1LL << 60;\n\nint main() {\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n\n    int n;\n    cin >> n;\n\n    vector<string> vec(2*n-2);\n    rep(i, 2*n-2) cin >> vec[i];\n\n    vector<string> s;\n    vector<string> t;\n\n    rep(i, 2*n-2){\n        if(vec[i].size() == n-1){\n            s.push_back(vec[i]);\n        }\n        else t.push_back(vec[i]);\n    }\n\n    rep(i, 2*n-2){\n        if(i < n-1) cout << 'P';\n        else cout << 'S';\n    }\n    cout << endl;\n\n    return 0;\n}", "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(2*n-2):\n        s = input()\n        if s in prefixes:\n            suffixes.append(s)\n        else:\n            prefixes.append(s)\n    prefixes.sort(key=len)\n    suffixes.sort(key=len)\n    print(''.join(['P' if i in prefixes else 'S' for i in prefixes+suffixes]))\n\nmain()", "\n\nn = int(input())\n\ndef get_prefixes(s):\n    return [s[:i] for i in range(1,len(s)+1)]\n\ndef get_suffixes(s):\n    return [s[i:] for i in range(len(s))]\n\nprefixes = []\nsuffixes = []\n\nfor _ in range(2*n-2):\n    s = input()\n    if len(s) == n:\n        prefixes = get_prefixes(s)\n        suffixes = get_suffixes(s)\n    else:\n        if len(s) in [len(p) for p in prefixes]:\n            prefixes.remove(s)\n        else:\n            suffixes.remove(s)\n\nfor p in prefixes:\n    print(\"P\", end=\"\")\nfor s in suffixes:\n    print(\"S\", end=\"\")", "\n\ndef main():\n    n = int(input())\n    prefixes = set()\n    suffixes = set()\n    for _ in range(n-1):\n        prefixes.add(input())\n    for _ in range(n-1):\n        suffixes.add(input())\n    answer = \"\"\n    for i in range(2*n-2):\n        if prefixes:\n            answer += \"P\"\n            prefixes.remove(prefixes.pop())\n        else:\n            answer += \"S\"\n            suffixes.remove(suffixes.pop())\n    print(answer)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nprefixes.sort()\nsuffixes.sort()\n\nans = []\nfor i in range(n-1):\n    if prefixes[i][0] == suffixes[i][0]:\n        ans.append(\"P\")\n    else:\n        ans.append(\"S\")\n\nfor i in ans:\n    print(i, end=\"\")"]