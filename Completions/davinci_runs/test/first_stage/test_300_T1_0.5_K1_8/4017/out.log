2022-04-19 20:59:00.964349 """
Let's call an array good if there is an element in the array that equals to the sum of all other elements. For example, the array $a=[1, 3, 3, 7]$ is good because there is the element $a_4=7$ which equals to the sum $1 + 3 + 3$.

You are given an array $a$ consisting of $n$ integers. Your task is to print all indices $j$ of this array such that after removing the $j$-th element from the array it will be good (let's call such indices nice).

For example, if $a=[8, 3, 5, 2]$, the nice indices are $1$ and $4$:   if you remove $a_1$, the array will look like $[3, 5, 2]$ and it is good;  if you remove $a_4$, the array will look like $[8, 3, 5]$ and it is good. 

You have to consider all removals independently, i. e. remove the element, check if the resulting array is good, and return the element into the array.


-----Input-----

The first line of the input contains one integer $n$ ($2 \le n \le 2 \cdot 10^5$) — the number of elements in the array $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^6$) — elements of the array $a$.


-----Output-----

In the first line print one integer $k$ — the number of indices $j$ of the array $a$ such that after removing the $j$-th element from the array it will be good (i.e. print the number of the nice indices).

In the second line print $k$ distinct integers $j_1, j_2, \dots, j_k$ in any order — nice indices of the array $a$.

If there are no such indices in the array $a$, just print $0$ in the first line and leave the second line empty or do not print it at all.


-----Examples-----
Input
5
2 5 1 2 2

Output
3
4 1 5
Input
4
8 3 5 2

Output
2
1 4 

Input
5
2 1 2 4 3

Output
0




-----Note-----

In the first example you can remove any element with the value $2$ so the array will look like $[5, 1, 2, 2]$. The sum of this array is $10$ and there is an element equals to the sum of remaining elements ($5 = 1 + 2 + 2$).

In the second example you can remove $8$ so the array will look like $[3, 5, 2]$. The sum of this array is $10$ and there is an element equals to the sum of remaining elements ($5 = 3 + 2$). You can also remove $2$ so the array will look like $[8, 3, 5]$. The sum of this array is $16$ and there is an element equals to the sum of remaining elements ($8 = 3 + 5$).

In the third example you cannot make the given array good by removing exactly one element.
"""
2022-04-19 20:59:00.964364 --------------------------
2022-04-19 20:59:00.964465 using api key derek
2022-04-19 21:00:24.872797 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ns = sum(a)\n\ncount = 0\nfor i in range(n):\n    if a[i]*(n-1) == s-a[i]:\n        count+=1\n\nprint(count)\nfor i in range(n):\n    if a[i]*(n-1) == s-a[i]:\n        print(i+1,end=' ')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef solve(a):\n    n = len(a)\n    s = sum(a)\n    ans = []\n    for i in range(n):\n        if a[i] == s - a[i]:\n            ans.append(i + 1)\n    return ans\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = solve(a)\n    print(len(ans))\n    if len(ans) > 0:\n        print(*ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    total = sum(a)\n    nice = []\n    for i, a_i in enumerate(a):\n        if a_i == total - a_i:\n            nice.append(i + 1)\n    print(len(nice))\n    print(*nice)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n    s = sum(a)\n    if s % 2 == 1:\n        print(0)\n        return\n    s //= 2\n    b = [0] * (n + 1)\n    for i in range(1, n + 1):\n        b[i] = b[i - 1] + a[i - 1]\n    c = [0] * (n + 1)\n    for i in range(n, 0, -1):\n        c[i] = c[i + 1] + a[i - 1]\n    ans = []\n    for i in range(1, n + 1):\n        if b[i] == s or c[i] == s:\n            ans.append(i)\n    print(len(ans))\n    print(*ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    Solution\n    \"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 2:\n        if a[0] == a[1]:\n            print(1)\n            print(2)\n        else:\n            print(0)\n            print()\n    else:\n        s = sum(a)\n        k = 0\n        for i in range(n):\n            if a[i] == s - a[i]:\n                k += 1\n        print(k)\n        for i in range(n):\n            if a[i] == s - a[i]:\n                print(i + 1, end=' ')\n        print()\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# SOLUTION\ndef is_good(arr):\n    return len(arr) == 1 or sum(arr[1:]) == arr[0]\n\nn = int(input())\narr = list(map(int, input().split()))\n\nres = []\nfor i in range(n):\n    if is_good(arr[:i] + arr[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)"
    },
    {
      "finish_reason": "length",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# n = int(input())\n# arr = list(map(int, input().split()))\n\n# n = 5\n# arr = [2, 5, 1, 2, 2]\n\nn = 4\narr = [8, 3, 5, 2]\n\n# n = 5\n# arr = [2, 1, 2, 4, 3]\n\n# n = 2\n# arr = [2, 2]\n\n# n = 2\n# arr = [1, 1]\n\n# n = 4\n# arr = [1, 1, 1, 1]\n\n# n = 1\n# arr = [1]\n\n# n = 3\n# arr = [1, 1, 1]\n\n# n = 2\n# arr = [1, 2]\n\n# n = 3\n# arr = [1, 2, 1]\n\n# n = 3\n# arr = [2, 2, 1]\n\n# n = 3\n# arr = [1, 2, 2]\n\n# n = 3\n# arr = [2, 1, 2]\n\n# n = 3\n# arr = [2, 2, 2]\n\n# n = 4\n# arr = [1, 2, 1, 2]\n\n# n = 4\n# arr = [2, 1, 2, 1]\n\n# n = 5\n# arr = [1, 2, 1, 2, 1]\n\n# n = 5\n# arr = [1, 2, 1, 2, 2]\n\n# n = 5\n# arr = [1, 2, 2, 1, 2]\n\n# n = 5\n# arr = [2, 1, 2, 1, 2]\n\n# n = 5\n# arr = [2, 1, 2, 2, 1]\n\n# n = 5\n# arr = [2, 2, 1, 2, 1]\n\n# n = 5\n# arr = [2, 2, 1, 1, 2]\n\n# n = 5\n# arr = [2, 2, 2, 1, 1]\n\n# n = 5\n# arr = [2, 2, 2, 2, 1]\n\n# n = 5\n# arr = [2, 2, 2, 2, 2]\n\n# n = 6\n# arr = [1, 2, 1, 2, 1, 1]\n\n# n = 6\n# arr = [1, 1, 2, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 1, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 1, 2, 1, 2]\n\n# n = 6\n# arr = [1, 2, 2, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 2, 1, 1, 2]\n\n# n = 6\n# arr = [1, 2, 2, 2, 1, 1]\n\n# n = 6\n# arr = [1, 2, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 1, 2, 1, 2, 1]\n\n# n = 6\n# arr = [2, 1, 1, 2, 1, 2]\n\n# n = 6\n# arr = [2, 1, 2, 1, 1, 2]\n\n# n = 6\n# arr = [2, 1, 2, 2, 1, 1]\n\n# n = 6\n# arr = [2, 1, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 2, 1, 2, 1, 1]\n\n# n = 6\n# arr = [2, 2, 1, 1, 2, 1]\n\n# n = 6\n# arr = [2, 2, 1, 2, 1, 2]\n\n# n = 6\n# arr = [2, 2, 2, 1, 2, 1]\n\n# n = 6\n# arr = [2, 2, 2, 1, 1, 2]\n\n# n = 6\n# arr = [2, 2, 2, 2, 1, 1]\n\n# n = 6\n# arr = [2, 2, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 2, 2, 2, 2, 2]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 1, 2]\n\n# n = 7\n# arr = [1, 2, 1, 1, 2, 1, 2]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 2, 2]\n\n# n = 7\n# arr = [1, 2, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [1, 2, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [1, 2, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [1, 2, 2, 2, 2, 1, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 1, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 1, 2, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 1, 2, 2, 2, 1, 1]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 2, 1, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 2, 2]\n\n# n = 7\n# arr = [2, 2, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 2, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [2, 2, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 2, 2, 2, 2, 1, 1]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 8\n# arr = [1, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 8\n# arr = [2, 1, 2, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 2, 2, 1, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 8\n# arr = [2, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 9\n# arr = [1, 2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 9\n# arr = [2, 2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 2,"
    }
  ],
  "created": 1650401941,
  "id": "cmpl-4ypE5KOWqa7P8xaoXoaqTBL3y4D1N",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-19 21:00:24.873351 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ns = sum(a)\n\ncount = 0\nfor i in range(n):\n    if a[i]*(n-1) == s-a[i]:\n        count+=1\n\nprint(count)\nfor i in range(n):\n    if a[i]*(n-1) == s-a[i]:\n        print(i+1,end=' ')"
}
2022-04-19 21:00:24.873421 REASON stop
2022-04-19 21:00:24.874025 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef solve(a):\n    n = len(a)\n    s = sum(a)\n    ans = []\n    for i in range(n):\n        if a[i] == s - a[i]:\n            ans.append(i + 1)\n    return ans\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = solve(a)\n    print(len(ans))\n    if len(ans) > 0:\n        print(*ans)"
}
2022-04-19 21:00:24.874110 REASON stop
2022-04-19 21:00:24.874718 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    total = sum(a)\n    nice = []\n    for i, a_i in enumerate(a):\n        if a_i == total - a_i:\n            nice.append(i + 1)\n    print(len(nice))\n    print(*nice)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:00:24.874814 REASON stop
2022-04-19 21:00:24.904471 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n    s = sum(a)\n    if s % 2 == 1:\n        print(0)\n        return\n    s //= 2\n    b = [0] * (n + 1)\n    for i in range(1, n + 1):\n        b[i] = b[i - 1] + a[i - 1]\n    c = [0] * (n + 1)\n    for i in range(n, 0, -1):\n        c[i] = c[i + 1] + a[i - 1]\n    ans = []\n    for i in range(1, n + 1):\n        if b[i] == s or c[i] == s:\n            ans.append(i)\n    print(len(ans))\n    print(*ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-19 21:00:24.904606 REASON stop
2022-04-19 21:00:24.905480 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    Solution\n    \"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 2:\n        if a[0] == a[1]:\n            print(1)\n            print(2)\n        else:\n            print(0)\n            print()\n    else:\n        s = sum(a)\n        k = 0\n        for i in range(n):\n            if a[i] == s - a[i]:\n                k += 1\n        print(k)\n        for i in range(n):\n            if a[i] == s - a[i]:\n                print(i + 1, end=' ')\n        print()\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-19 21:00:24.905586 REASON stop
2022-04-19 21:00:24.909745 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": ""
}
2022-04-19 21:00:24.909839 REASON stop
2022-04-19 21:00:24.910650 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# SOLUTION\ndef is_good(arr):\n    return len(arr) == 1 or sum(arr[1:]) == arr[0]\n\nn = int(input())\narr = list(map(int, input().split()))\n\nres = []\nfor i in range(n):\n    if is_good(arr[:i] + arr[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)"
}
2022-04-19 21:00:24.910734 REASON stop
2022-04-19 21:00:24.912106 7 {
  "finish_reason": "length",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# n = int(input())\n# arr = list(map(int, input().split()))\n\n# n = 5\n# arr = [2, 5, 1, 2, 2]\n\nn = 4\narr = [8, 3, 5, 2]\n\n# n = 5\n# arr = [2, 1, 2, 4, 3]\n\n# n = 2\n# arr = [2, 2]\n\n# n = 2\n# arr = [1, 1]\n\n# n = 4\n# arr = [1, 1, 1, 1]\n\n# n = 1\n# arr = [1]\n\n# n = 3\n# arr = [1, 1, 1]\n\n# n = 2\n# arr = [1, 2]\n\n# n = 3\n# arr = [1, 2, 1]\n\n# n = 3\n# arr = [2, 2, 1]\n\n# n = 3\n# arr = [1, 2, 2]\n\n# n = 3\n# arr = [2, 1, 2]\n\n# n = 3\n# arr = [2, 2, 2]\n\n# n = 4\n# arr = [1, 2, 1, 2]\n\n# n = 4\n# arr = [2, 1, 2, 1]\n\n# n = 5\n# arr = [1, 2, 1, 2, 1]\n\n# n = 5\n# arr = [1, 2, 1, 2, 2]\n\n# n = 5\n# arr = [1, 2, 2, 1, 2]\n\n# n = 5\n# arr = [2, 1, 2, 1, 2]\n\n# n = 5\n# arr = [2, 1, 2, 2, 1]\n\n# n = 5\n# arr = [2, 2, 1, 2, 1]\n\n# n = 5\n# arr = [2, 2, 1, 1, 2]\n\n# n = 5\n# arr = [2, 2, 2, 1, 1]\n\n# n = 5\n# arr = [2, 2, 2, 2, 1]\n\n# n = 5\n# arr = [2, 2, 2, 2, 2]\n\n# n = 6\n# arr = [1, 2, 1, 2, 1, 1]\n\n# n = 6\n# arr = [1, 1, 2, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 1, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 1, 2, 1, 2]\n\n# n = 6\n# arr = [1, 2, 2, 1, 2, 1]\n\n# n = 6\n# arr = [1, 2, 2, 1, 1, 2]\n\n# n = 6\n# arr = [1, 2, 2, 2, 1, 1]\n\n# n = 6\n# arr = [1, 2, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 1, 2, 1, 2, 1]\n\n# n = 6\n# arr = [2, 1, 1, 2, 1, 2]\n\n# n = 6\n# arr = [2, 1, 2, 1, 1, 2]\n\n# n = 6\n# arr = [2, 1, 2, 2, 1, 1]\n\n# n = 6\n# arr = [2, 1, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 2, 1, 2, 1, 1]\n\n# n = 6\n# arr = [2, 2, 1, 1, 2, 1]\n\n# n = 6\n# arr = [2, 2, 1, 2, 1, 2]\n\n# n = 6\n# arr = [2, 2, 2, 1, 2, 1]\n\n# n = 6\n# arr = [2, 2, 2, 1, 1, 2]\n\n# n = 6\n# arr = [2, 2, 2, 2, 1, 1]\n\n# n = 6\n# arr = [2, 2, 2, 2, 2, 1]\n\n# n = 6\n# arr = [2, 2, 2, 2, 2, 2]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 1, 2]\n\n# n = 7\n# arr = [1, 2, 1, 1, 2, 1, 2]\n\n# n = 7\n# arr = [1, 2, 1, 2, 1, 2, 2]\n\n# n = 7\n# arr = [1, 2, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [1, 2, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [1, 2, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [1, 2, 2, 2, 2, 1, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 1, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 1, 2, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 1, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 1, 2, 2, 2, 1, 1]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 2, 1]\n\n# n = 7\n# arr = [2, 2, 1, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 2, 1, 2, 1, 2, 2]\n\n# n = 7\n# arr = [2, 2, 2, 1, 2, 1, 2]\n\n# n = 7\n# arr = [2, 2, 2, 1, 1, 2, 1]\n\n# n = 7\n# arr = [2, 2, 2, 2, 1, 1, 2]\n\n# n = 7\n# arr = [2, 2, 2, 2, 2, 1, 1]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 8\n# arr = [1, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [1, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [1, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 8\n# arr = [2, 1, 2, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 1, 2, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 1, 2, 2, 2, 1, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 8\n# arr = [2, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 8\n# arr = [2, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 8\n# arr = [2, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 9\n# arr = [1, 2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [1, 2, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [1, 2, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 1, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 1, 2, 1, 2, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 1, 2, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 1, 2, 2, 2, 1, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 1]\n\n# n = 9\n# arr = [2, 2, 1, 2, 1, 2, 1, 2, 2]\n\n# n = 9\n# arr = [2, 2, 2, 1, 2, 1, 2, 1, 2]\n\n# n = 9\n# arr = [2, 2, 2,"
}
2022-04-19 21:00:24.912340 REASON length
