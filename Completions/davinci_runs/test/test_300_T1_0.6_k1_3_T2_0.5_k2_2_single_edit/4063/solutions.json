["n = int(input())\ndn = list(map(int, input().split()))\ndn.sort()\na = dn[n // 2 - 1]\nb = dn[n // 2]\n\nprint((b-a))\n", "n=int(input())\nd=list(map(int,input().split()))\n \nd.sort()\n \nprint(d[n//2]-d[n//2-1])", "N = int(input())\nD = list(map(int, input().split()))\nD.sort()\n\nprint(D[N//2] - D[N//2-1])", "N = int(input())\nd = list(map(int, input().split()))\n\n\n# N/2\u756a\u76ee\u306b\u96e3\u3057\u3044\u554f\u984c\u304c\u300cARC\u7528\u306e\u554f\u984c\u300d\u304b\u3064\u3001\n# N/2\u22121\u756a\u76ee\u306b\u96e3\u3057\u3044\u554f\u984c\u304c\u300cABC\u7528\u306e\u554f\u984c\u300d\u3067\u3042\u308c\u3070\u3088\u3044\n# \u96e3\u6613\u5ea6\u9806\u306b\u6607\u9806\u3067\u30bd\u30fc\u30c8\n# N/2\u756a\u76ee\u306e\u8981\u7d20\u304b\u3089\u3001N/2\u22121\u756a\u76ee\u306e\u8981\u7d20\u3092\u5f15\u304f\n\n# \u4f8bd=[1,5,9,11,13,15,19,20]\u306a\u3089\u3001\u7b54\u3048\u306f12,13\u306e2\u3064\nd = sorted(d)\nprint(d[N//2] - d[(N//2)-1])", "n = int(input())\nD = list(map(int, input().split()))\nD.sort()\n\nd = {}\nc = 0\nfor i in range(n):\n    d[D[i]] = d.get(D[i],0)+1\na1 = -1\na2 = -1\nfor i in d:\n    c += d[i]\n    if c==n//2:\n        a1 = i\n    if c>n//2:\n        a2 = i\n        break\nif a1==-1 or a2==-1:\n    print(0)\nelse:\n    print(a2-a1)", "# coding: utf-8\n\ndef main():\n    N = int(input())\n    d = sorted(list(map(int, input().split())))\n    ans = 0\n    if d[N // 2] != d[N // 2 - 1]:\n        ans = d[N // 2] - d[N // 2 - 1]\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep 10 14:46:16 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\nans = d[N//2] - d[N//2 - 1 ]\nprint(ans)", "N  = int(input())\nnums = list(map(int,input().split()))\nnums.sort()\ncnt = nums[N//2] - nums[N//2-1] \nprint(cnt)", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\n\ns = int(len(d)/2)\n\nif d[s] != d[s-1] :\n    print(d[s]-d[s-1])\nelif d[s] == d[s-1] :\n    print(0)", "n = int(input())\nd = sorted(list(map(int, input().split())))\nprint(d[n//2]-d[n//2-1])", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = LI()\n    L.sort()\n    n = N //2\n    \n    l = L[n-1]\n    r = L[n]\n    print(r-l)\n    \ndef __starting_point():\n    main()\n__starting_point()", "# C\nimport math\nN = int(input())\nD = sorted(list(map(int, input().split())))\nprint((D[math.ceil((N)/2)] - D[math.ceil((N)/2)-1]))\n", "N=int(input())\nD=sorted(list(map(int, input().split())))\n\nleft=D[N//2-1]\nright=D[N//2]\n\nprint(right-left)", "N=int(input())\nd=list(map(int,input().split()))\n\nd.sort()\nans=d[N//2]-d[N//2-1]\nprint(ans)\n", "n=int(input())\nd=list(map(int,input().split()))\nd.sort()\nmins=d[int(n/2)-1]\nmaxs=d[int(n/2)]\nprint(maxs-mins)", "N, *D = map(int, open(0).read().split())\n\nD.sort()\nn = N // 2\nprint(D[n] - D[n-1])", "N = int(input())\nD = list(map(int, input().split()))\nsort = sorted(D)\nleft = sort[(N//2) -1]\nright = sort[N//2]\nprint((right - left))\n", "N = int(input())\nd = sorted(list(map(int,input().split())))\n\nprint(d[N//2] - d[N//2 - 1])", "N = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\nc = int(len(d) / 2)\nl = d[:c]\nr = d[c:]\nprint((r[0] - l[-1]))\n", "N = int(input())\nd = list(map(int, input().split()))\n\nd = sorted(d)\nmid = N // 2\ns = d[mid-1]\nf = d[mid]\nprint(f-s)", "N = int(input())\nP = int(N/2)\nA = list(map(int, input().split()))\nA.sort()\n\nS = A[P] - A[P-1]\n\nprint(S)\n", "n = int(input())\ndlist = list(map(int, input().split()))\n\ndlist_sorted = sorted(dlist)\n\nkiwa_upper = dlist_sorted[n//2]\nkiwa_low = dlist_sorted[(n//2)-1]\n\n# \u540c\u3058\u6570\u306e\u9078\u3073\u65b9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\nif len(dlist_sorted[n//2:]) != n//2:\n    print(0)\n# \u5b58\u5728\u3059\u308b\u5834\u5408\nelse:\n    print(kiwa_upper - kiwa_low)", "N=int(input())\ndlist=list(map(int,input().split()))\ndlist.sort()\nprint(dlist[(N+1)//2]-dlist[(N-1)//2])", "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\nprint(len(range(d[n//2-1],d[n//2])))", "N = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\nprint((d[N // 2] - d[N // 2 - 1]))\n", "n = int(input())\ndif = list(map(int,input().split()))\nnew_dif = list(sorted(dif))\nif new_dif[n//2-1] == new_dif[n//2]:\n  print(0)\n  \nelse:\n  print(new_dif[n//2]-new_dif[n//2-1])", "input_num = int(input())\ninput_line = input().split()\ninput_line = [int(s) for s in input_line]\ninput_line.sort()\n\nif(input_line[int(len(input_line)/2-1)] == input_line[int(len(input_line)/2)]):\n    print((0))\nelse:\n    print((input_line[int(len(input_line)/2)] - input_line[int(len(input_line)/2)-1]))\n", "n=int(input())\narr=list(map(int, input().rstrip().split()))\narr.sort()\n\nif arr[n//2-1] == arr[n//2]:\n  print((0))\nelse:\n  print((arr[n//2]-arr[n//2-1]))\n", "n = int(input())\nd_l = list(map(int, input().split()))\nd_l = sorted(d_l)\nif len(d_l) %2 != 0:\n    print(0)\nelse:\n    idx = int(len(d_l)/2)\n    abc = d_l[idx-1]\n    agc = d_l[idx]\n    print(agc-abc)", "N = int(input())\nd = list(map(int, input().split()))\n\nd = sorted(d)\nprint(d[N//2] - d[(N//2)-1])", "N = int(input())\nd = sorted([int(i) for i in input().split()])\nprint(d[N//2] - d[(N//2)-1])", "N = int(input())\na = list(map(int,input().split()))\na.sort()\nhalf = int(len(a)/2)\nif a[half-1] == a[half]:\n  print(0)\nelse:\n  print(a[half]-a[half-1])", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\nabc = d[n//2-1]\narc = d[n//2]\nif abc == arc:\n    ans = 0\nelse:\n    ans = arc - abc\nprint(ans)", "N=int(input())\nd=list(map(int,input().split()))\nd.sort()\nl=d[:N//2]\nr=d[N//2:]\n\nprint(r[0]-l[-1])", "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\nprint((d[n//2] - d[n//2 - 1]))\n", "n = int(input())\nd = list(map(int, input().split()))\n\nd = sorted(d, reverse=True)\ncent_index = int(n/2)-1\n\nprint(d[cent_index] - d[cent_index+1])", "n = int(input())\nd = list(map(int, input().split()))\nl = sorted(d)\nu = int(n/2)\nprint(l[u]-l[u-1])", "# ABC 132 C\nN = int(input())\nd = [int(i) for i in input().split()]\ne = sorted(d)\nprint(e[int(N/2)] - e[int(N/2) - 1])", "#ABC132 C\n\nN = int(input())\nD = list(map(int,input().split()))\nD.sort()\nA = list(range(D[int(N/2)-1]+1,D[int(N/2)]+1))\n\nprint(len(A))", "n = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\n\n# Odd pattern\nif n % 2 == 1:\n    print((0))\n# Even pattern\nelse:\n    ml = int(n / 2) - 1\n    mr = int(n / 2)\n    if d[ml] == d[mr]:\n        print((0))\n    else:\n        print((d[mr] - d[ml]))\n", "#import sys\n#import numpy as np\nimport math\n#from fractions import Fraction\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport heapq\nfrom fractions  import gcd\n#input=sys.stdin.readline\n#import bisect\nn=int(input())\nd=list(map(int,input().split()))\nd.sort()\nif d[n//2]-d[n//2-1]==0:\n    print(0)\nelse:\n    print(d[n//2]-d[n//2-1])", "N=int(input())\nd=list(map(int,input().split()))\nd.sort()\nprint((d[N//2]-d[N//2-1]))\n", "n = int(input())\nL = sorted(list(map(int,input().split())))\nc = n // 2\nprint(L[c]-L[c-1])", "N = int(input())\nd = [int(c) for c in input().split()]\nd.sort()\nprint(d[int(N/2)]-d[int(N/2)-1])", "N = int(input())\nls = list(map(int, input().split(' ')))\nls.sort()\nfirst_half = ls[: N // 2]\nsecond_half = ls[N // 2 :]\nif first_half[-1] == second_half[0]:\n    print(0)\nelse:\n    print(second_half[0] - first_half[-1])", "n = int(input())\nd = sorted(map(int, input().split()))\nk1 = d[int(n/2)-1]+1\nk2 = d[int(n/2)]\nprint(k2-k1+1)", "a = input()\nN = int(a)\nd = list(map(int,input().split()))\n\nd.sort()\nprint((d[N//2]-d[N//2-1]))\n", "import sys\nN = int(input())\nd = list(map(int, input().split()))\n\nK_cnt = 0\ndsort = sorted(d)\n\nd_left = dsort[int(N/2)-1]\nd_right = dsort[int(N/2)]\n\n# \u30bd\u30fc\u30c8\u3057\u3066\u4e2d\u592e\u5024\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408\n# \u3074\u3063\u305f\u308a\u540c\u3058\u306b\u306a\u3089\u306a\u3044\nif d_left == d_right:\n    print(0)\nelse:\n    print(d_right-d_left)", "# AtCoder Beginner Contest 132\n# C - Divide the Problems\n\nN=int(input())\nd=list(map(int,input().split()))\n\nd.sort()\n\nl=d[(N//2)-1]\nr=d[(N//2)]\nif l==r:\n    print((0))\n    return\n\nprint((r-l))\n\n# print(d)\n# print(l,r)\n\n", "n=int(input())\nd=list(map(int,input().split()))\nd.sort()\ns=d[n//2]-d[n//2-1]\nprint(s)", "N = int(input())\nD = list(map(int, input().split()))\nD.sort()\n\nleft = D[N // 2 - 1]\nright = D[N // 2]\n\nprint(right - left)", "n = int(input())\nd = sorted(list(map(int, input().split())))\nprint(d[n//2] - d[n//2 - 1])", "N = int(input())\nd = list(map(int,input().split()))\nd.sort()\ndmed1 = N//2 - 1\ndmed2 = N//2\nans = d[dmed2]-d[dmed1]\nprint(ans)", "n = int(input())\nd = sorted(list(map(int,input().split())))\n\nleft = d[n//2-1]\nright = d[n//2]\nif left==right:\n    ans = 0\nelse:\n    ans = right-left\nprint(ans)", "N=int(input())\nD=list(map(int,input().split()))\nD=sorted(D)\nc=(N//2)-1\nA=D[N//2]-D[c]\nprint(A)", "N = int(input())\nD = sorted(list(map(int, input().split())))\n\nprint(D[N//2] - D[N//2-1])", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\nprint(d[int(n / 2)] - d[int(n / 2 - 1)])", "n=int(input())\nL=sorted(list(map(int,input().split())))\nprint(L[n//2]-L[n//2-1])", "N = int(input())\nd = list(map(int,input().split()))\nd.sort()\na = N // 2\nprint(d[a] - d[a - 1])", "n = int(input())\nd = sorted(list(map(int, input().split())))\n\nx = d[n//2-1]\ny = d[n//2]\nprint(y-x)", "import math\nimport statistics\na=int(input())\n#b=int(input())\n# c=[]\n# for i in b:\n#     c.append(i)\n# e1,e2 = map(int,input().split())\nf = list(map(int,input().split()))\n#j = [input() for _ in range(3)]\n# h = []\n# for i in range(e1):\n#     h.append(list(map(int,input().split())))\nf.sort()\ntyu = statistics.median(f)\nif f[len(f)//2]==f[len(f)//2-1]:\n    print(0)\nelse:\n    print(f[len(f)//2]-f[len(f)//2-1])", "n = int(input())\nd = list(map(int,input().split()))\ns = sorted(d)\nt = n//2\nprint(s[t]- (s[t-1]+1)+1)", "n = int(input())\nd = sorted(list(map(int, input().split())))\n\nn = n // 2\nprint(d[n] - d[n-1])", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\nx = d[n//2 - 1]\ny = d[n//2]\nprint((y - x))\n", "n=int(input())\nd=sorted(list(map(int,input().split())))\nans=d[n//2]-d[n//2-1]\nprint(ans)\n", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#MOD = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n=INT()\n    A=LIST()\n    A=sorted(A)\n    print(A[n//2]-A[n//2-1])\ndef __starting_point():\n    do()\n__starting_point()", "n = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\nprint((d[n//2]-d[n//2-1]))\n", "n = int(input())\nd = sorted(list(map(int,input().split())))\nprint(d[n//2] - d[n//2-1])", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nd = list(map(int,input().split()))\nd.sort()\na = d[n//2] - d[n//2-1]\nif a > 0: print(a)\nelse: print(0)", "n = int(input())\nd = [int(x.strip()) for x in input().split()]\nd_sorted = sorted(d)\nm = int(n/2)\nabc_fin = d_sorted[m-1]\narc_start = d_sorted[m]\nif abc_fin == arc_start:\n  ans = 0\nelse:\n  ans = arc_start - abc_fin\nprint(ans)", "from bisect import bisect_left\n\nn=int(input())\nd=list(map(int,input().split()))\nd=sorted(d)\nans=0\n\nfor i in range(1,10**5+1):\n  p=bisect_left(d,i)\n  ans+=1 if p==(n-p) else 0\n\nprint(ans)", "N =int(input())\n\nA = list(map(int, input().split()))\nA.sort()\ndivide = len(A)//2\n\nans = A[divide] - A[divide-1]\nprint(ans)", "n = int(input())\nd = list(map(int,input().split()))\nc = 0\nd.sort()\nn = int(n/2)\n\nprint(d[n]-d[n-1])", "N = int(input())\nd = list(map(int, input().split()))\nd = sorted(d)\nif N % 2 != 0:\n  print(0)\nelse:\n  x = N // 2\n  ans = d[x] - d[x-1]\n  print(ans)", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\na = d[n//2] - d[n//2-1]\nif a > 0: print(a)\nelse: print(0)", "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\n\nhalf = n//2\nfirst = d[half - 1]\nsecond = d[half]\n\nprint(second - first)", "N = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\ni1 = N // 2\ni2 = N // 2 - 1\n\nresult = d[i1] - d[i2]\nprint(result)", "N = int(input()) // 2\nd = sorted(list(map(int, input().split())))\nprint(d[N]-d[N-1])", "a = int(input())\nb = list(map(int,input().split()))\nb.sort()\nif b[(a//2)] == b[(a//2-1)]:\n    print((0))\nelse:print((b[(a//2)] - b[(a//2-1)]))\n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    exams=[]\n    sorted_exams=[]\n    n = int(input())\n    exams=list(map(int,input().split()))\n    sorted_exams=sorted(exams)\n    half=n//2\n\n    start=sorted_exams[half-1]\n    end=sorted_exams[half]\n\n    print(end-start)\n\ndef __starting_point():\n    main()\n__starting_point()", "\ndef main():\n\n    N = int(input())\n    d = [int(i) for i in input().split()]\n    d.sort()\n    n = N // 2\n    print((d[n] - d[n-1]))\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\np = list(map(int, input().split()))\nnn = int(n/2)\np.sort()\nans = p[nn] - p[nn-1]\n\nprint(ans)", "n = int(input())\ndn = list(map(int, input().split()))\n\n\nclass Solution:\n    def __init__(self,n,dn):\n        self.n = n\n        self.dn = dn\n    \n    def __reverse(self):\n        self.dn.sort()\n        return self.dn\n    \n    def answer(self):\n        self.dn = self.__reverse()\n        a = self.dn[self.n // 2 - 1]\n        b = self.dn[self.n // 2]\n        print((b - a))\n\n\nconditions = Solution(n,dn)\nconditions.answer()\n", "N = int(input())\nd = list(map(int, input().split()))\nd.sort()\nprint(d[N//2] - d[N//2-1])", "n=int(input())\nd=list(map(int,input().split()))\n\nd.sort()\n\nprint(d[n//2]-d[n//2-1])", "n=int(input())\nd =list(map(int,input().split()))\nd.sort()\nans = 0\nfor i in range(1,10**5+1):\n        if d[n//2-1] <i and d[n//2] >=i:\n                ans +=1\n\nprint(ans)", "N=int(input())\nD=list(map(int,input().split()))\nD.sort()\n\nif D[N//2-1] != D[N//2]:\n  print(D[N//2]-D[N//2-1])\nelse:\n  print(0)", "N=int(input())\nd=list(map(int,input().split()))\nd.sort()\nans=d[N//2]-d[N//2-1]\nprint(ans)", "N = int(input())\nls = list(map(int, input().split(' ')))\nls.sort()\nfirst_half = ls[: N // 2]\nsecond_half = ls[N // 2 :]\nif first_half[-1] == second_half[0]:\n    print(0)\nelse:\n    print(second_half[0] - first_half[-1])", "n = int(input())\ndn = list(map(int, input().split()))\ndn.sort()\na = dn[n // 2 - 1]\nb = dn[n // 2]\n\ncnt = 0\nfor i in range(a, b):\n    cnt += 1\n\nprint(cnt)\n", "n = int(input())\nd = list(map(int,input().split()))\nd.sort()\nx,y = n//2-1,n//2\nprint(d[y]-d[x])", "# -*- coding:utf-8 -*-\nN = int(input())\nd = list(map(int,input().split()))\n\nhalf = N//2\nd.sort()\n\nprint(d[half] - d[half-1] )", "N = int(input())\nary = list(map(int, input().split()))\nary.sort()\n\nans = ary[int(len(ary)/2)] - ary[int(len(ary)/2) -1]\nprint(ans)\n", "n = int(input())\nd = list(map(int, input().split()))\nd.sort()\ncnt = 0\n\nif n % 2 != 0:\n    print((0))\nelse:\n    n = int(n/2)\n    print((d[n]-d[n-1]))\n", "N = int(input())\nd = list(map(int, input().split()))\np = [0] * N\nfor i in range(N):\n    p[i] = (d[i], i)\np.sort()\nresult = abs(p[N//2][0] - p[N//2-1][0])\n# print(p)\nprint(result)", "n = int(input())\nline = list(map(int, input().split()))\nline.sort()\nprint(line[n//2] - line[n//2 - 1])", "n =int(input())\nx = sorted(map(int,input().split()))\nprint(x[len(x)//2]-x[len(x)//2-1])", "n = int(input());\narr = list(map(int, input().split()));\narr.sort();\nprint((arr[n//2] - arr[n//2 -1]));\n  \n", "n = int(input())\nd = list(map(int,input().split()))\nd = sorted(d)\nn2 = int(n/2)\nif d[n2] == d[n2 - 1]:\n    print((0))\nelse:\n    print((d[n2] -d[n2 - 1]))\n"]