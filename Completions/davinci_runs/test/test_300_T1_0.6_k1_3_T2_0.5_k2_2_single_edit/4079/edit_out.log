2022-04-20 19:11:15.105756 num operations 1
2022-04-20 19:11:15.105772 size on input set 1
2022-04-20 19:11:15.105960 using api key sunu
2022-04-20 19:11:19.314163 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(\n            string[-1]) - ord(string[0]) + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    }
  ],
  "created": 1650481875,
  "object": "edit"
}
2022-04-20 19:11:19.314413 fix syntax errors 2 ['\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(\n            string[-1]) - ord(string[0]) + 1:\n        return "Yes"\n    else:\n        return "No"\n\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n']
2022-04-20 19:11:19.314463 size on output set 2
2022-04-20 19:11:19.314474 num operations 1
2022-04-20 19:11:19.314480 size on input set 1
2022-04-20 19:11:19.314631 using api key soukgp
2022-04-20 19:11:25.652028 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        else:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                else:\n                    if ord(string[i]) + 1 == ord(string[i + 1]):\n                        if i == len(string) - 2:\n                            print(\"Yes\")\n                    else:\n                        print(\"No\")\n                        break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[i + 1]) - ord(string[i]) == 1:\n                    if i == len(string) - 2:  # check if last element\n                        print(\"Yes\")  # if last element print yes\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650481879,
  "object": "edit"
}
2022-04-20 19:11:25.652243 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        else:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                else:\n                    if ord(string[i]) + 1 == ord(string[i + 1]):\n                        if i == len(string) - 2:\n                            print("Yes")\n                    else:\n                        print("No")\n                        break\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif ord(string[i + 1]) - ord(string[i]) == 1:\n                    if i == len(string) - 2:  # check if last element\n                        print("Yes")  # if last element print yes\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:11:25.652277 size on output set 2
2022-04-20 19:11:25.652288 num operations 1
2022-04-20 19:11:25.652294 size on input set 1
2022-04-20 19:11:25.652457 using api key soukgp
2022-04-20 19:11:29.859604 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)) or ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650481885,
  "object": "edit"
}
2022-04-20 19:11:29.859815 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)) or ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:11:29.859842 size on output set 2
