2022-04-20 19:28:59.124459 num operations 1
2022-04-20 19:28:59.124476 size on input set 1
2022-04-20 19:28:59.124677 using api key soukgp
2022-04-20 19:29:02.424175 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))\n"
    },
    {
      "index": 1,
      "text": "\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2)) \n"
    }
  ],
  "created": 1650482939,
  "object": "edit"
}
2022-04-20 19:29:02.424419 fix syntax errors 2 ['#!/usr/bin/env python3\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))\n', '\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2)) \n']
2022-04-20 19:29:02.424450 size on output set 2
2022-04-20 19:29:02.424465 num operations 1
2022-04-20 19:29:02.424474 size on input set 1
2022-04-20 19:29:02.424742 using api key kouti
2022-04-20 19:29:04.931057 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650482942,
  "object": "edit"
}
2022-04-20 19:29:04.931269 fix syntax errors 2 ["import sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:29:04.931295 size on output set 2
2022-04-20 19:29:04.931307 num operations 1
2022-04-20 19:29:04.931313 size on input set 1
2022-04-20 19:29:04.931491 using api key sourya
2022-04-20 19:29:13.138507 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip()) #strip removes the newline character\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip()) #strip removes the newline character\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom collections import Counter\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_strings = int(input_lines[0].strip())\n    return input_lines[1:num_strings + 1]\n\n\ndef solve(s):\n    s_counter = Counter(s)\n    for key in s_counter:\n        if s_counter[key] > 1:\n            return \"no\"\n    return \"yes\"\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for string in cases:\n        result = solve(string)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650482944,
  "object": "edit"
}
2022-04-20 19:29:13.138737 fix syntax errors 2 ['import sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip()) #strip removes the newline character\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip()) #strip removes the newline character\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nfrom collections import Counter\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_strings = int(input_lines[0].strip())\n    return input_lines[1:num_strings + 1]\n\n\ndef solve(s):\n    s_counter = Counter(s)\n    for key in s_counter:\n        if s_counter[key] > 1:\n            return "no"\n    return "yes"\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for string in cases:\n        result = solve(string)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:29:13.138781 size on output set 2
