2022-04-20 20:33:46.139956 num operations 1
2022-04-20 20:33:46.139969 size on input set 1
2022-04-20 20:33:46.140116 using api key jaanu
2022-04-20 20:33:48.657118 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650486826,
  "object": "edit"
}
2022-04-20 20:33:48.657359 fix syntax errors 2 ['import math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 20:33:48.657384 size on output set 2
2022-04-20 20:33:48.657394 num operations 1
2022-04-20 20:33:48.657400 size on input set 1
2022-04-20 20:33:48.657559 using api key soukgp
2022-04-20 20:33:51.565460 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N-D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650486828,
  "object": "edit"
}
2022-04-20 20:33:51.565695 fix syntax errors 2 ['\n#!/usr/bin/env python3\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n', '\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N-D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 20:33:51.565727 size on output set 2
2022-04-20 20:33:51.565740 num operations 1
2022-04-20 20:33:51.565746 size on input set 1
2022-04-20 20:33:51.565904 using api key sourya
2022-04-20 20:33:51.602715 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:33:53.104644 using api key kouti
2022-04-20 20:34:00.866197 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\nnum_inspectors = 0\nstart = 1\nwhile start <= n:\n    num_inspectors += 1\n    start += 2 * d + 1\nprint(num_inspectors)\n\n# assert (main(6, 2) == 2)\n# assert (main(15, 4) == 4)\n# assert (main(20, 5) == 4)\n# assert (main(1, 1) == 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\n\nprint(main(n, d))\nassert (main(1, 1) == 1)\n"
    }
  ],
  "created": 1650486833,
  "object": "edit"
}
2022-04-20 20:34:00.866454 fix syntax errors 2 ['\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\nnum_inspectors = 0\nstart = 1\nwhile start <= n:\n    num_inspectors += 1\n    start += 2 * d + 1\nprint(num_inspectors)\n\n# assert (main(6, 2) == 2)\n# assert (main(15, 4) == 4)\n# assert (main(20, 5) == 4)\n# assert (main(1, 1) == 1)\n', '\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\n\nprint(main(n, d))\nassert (main(1, 1) == 1)\n']
2022-04-20 20:34:00.866484 size on output set 2
