2022-04-20 19:16:53.973347 num operations 1
2022-04-20 19:16:53.973364 size on input set 1
2022-04-20 19:16:53.973561 using api key jaanu
2022-04-20 19:16:59.020363 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5) # to avoid out of range\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    }
  ],
  "created": 1650482214,
  "object": "edit"
}
2022-04-20 19:16:59.020618 fix syntax errors 2 ['\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5) # to avoid out of range\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n']
2022-04-20 19:16:59.020646 size on output set 2
2022-04-20 19:16:59.020658 num operations 1
2022-04-20 19:16:59.020663 size on input set 1
2022-04-20 19:16:59.020884 using api key gabby
2022-04-20 19:16:59.057177 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:17:00.559093 using api key sunu
2022-04-20 19:17:04.804759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\n\n\nn, k = map(int, stdin.readline().split())\na = sorted(list(map(int, stdin.readline().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    }
  ],
  "created": 1650482220,
  "object": "edit"
}
2022-04-20 19:17:04.804976 fix syntax errors 2 ['\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', 'from sys import stdin\n\n\nn, k = map(int, stdin.readline().split())\na = sorted(list(map(int, stdin.readline().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n']
2022-04-20 19:17:04.805005 size on output set 2
2022-04-20 19:17:04.805017 num operations 1
2022-04-20 19:17:04.805023 size on input set 1
2022-04-20 19:17:04.805181 using api key gabby
2022-04-20 19:17:04.839809 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:17:06.341730 using api key sourya
2022-04-20 19:17:22.674585 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort(key=lambda x: x[1])\n\nskills = defaultdict(int)\nfor i in range(n):\n    skills[a[i]] += 1\n\ndef get_skill(skills):\n    for skill in skills:\n        if skills[skill] > 0:\n            return skill\n\ndef get_team(skills):\n    skill = get_skill(skills)\n    if not skill:\n        return []\n    skills[skill] -= 1\n    if skills[skill] == 0:\n        del skills[skill]\n    team = [skill]\n    for skill in skills:\n        if skill - team[0] <= 5:\n            team.append(skill)\n            skills[skill] -= 1\n            if skills[skill] == 0:\n                del skills[skill]\n    return team\n\ndef get_teams(skills, k):\n    teams = []\n    while get_skill(skills):\n        teams.append(get_team(skills))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nstdout.write(str(sum(map(len, teams))) + '\\n')\nstdout.flush()\n"
    }
  ],
  "created": 1650482226,
  "object": "edit"
}
2022-04-20 19:17:22.674810 fix syntax errors 2 ['\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', "\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort(key=lambda x: x[1])\n\nskills = defaultdict(int)\nfor i in range(n):\n    skills[a[i]] += 1\n\ndef get_skill(skills):\n    for skill in skills:\n        if skills[skill] > 0:\n            return skill\n\ndef get_team(skills):\n    skill = get_skill(skills)\n    if not skill:\n        return []\n    skills[skill] -= 1\n    if skills[skill] == 0:\n        del skills[skill]\n    team = [skill]\n    for skill in skills:\n        if skill - team[0] <= 5:\n            team.append(skill)\n            skills[skill] -= 1\n            if skills[skill] == 0:\n                del skills[skill]\n    return team\n\ndef get_teams(skills, k):\n    teams = []\n    while get_skill(skills):\n        teams.append(get_team(skills))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nstdout.write(str(sum(map(len, teams))) + '\\n')\nstdout.flush()\n"]
2022-04-20 19:17:22.674942 size on output set 2
