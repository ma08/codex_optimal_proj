["n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(len(a)):\n    b.append(a[i])\nfor i in range(len(a)):\n    b.append(a[i])\nq = 0\nr = set()\nfor i in b:\n    if i:\n        q += 1\n    else:\n        r.add(q)\n        q = 0\nprint(max(r))", "n = int(input())\na=list(map(int, input().split()))\ns=set(a)\nif len(s)==1 and 1 in s:\n    print(n)\n    return\nk = 0\nma = 0\nfor i in range(n):\n    if a[i]:\n        k+=1\n    else:\n        ma=max(ma, k)\n        k = 0\nfor i in range(n):\n    if a[i]:\n        k+=1\n    else:\n        ma=max(ma, k)\n        k = 0\nprint(max(ma, k))", "n = int(input())\nS = list(map(int, input().split()))\nS.extend(S)\nans = 0\ncnt = 0\nfor i in S:\n    if i:\n        cnt += 1\n    else:\n        ans = max(ans, cnt)\n        cnt = 0\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nt = 0\nans = 0\nfor i in a + a:\n  t = t + 1 if i else 0\n  ans = max(ans, t)\nprint(ans)\n  \n", "def main():\n  n=int(input())\n  arr=input().split()\n  for x in range(n):\n    arr[x]=int(arr[x])\n    arr.append(arr[x])\n  count=0\n  current=0\n  current_count=0\n  for x in range(len(arr)):\n    if arr[x]==0 and current==1:\n      count=max(count,current_count)\n      current=0\n      current_count=0\n    elif arr[x]==1 and current==0:\n      current=1\n      current_count=1\n    elif arr[x]==1 and current==1:\n      current_count+=1\n  print(count)\nmain()\n", "n = int(input())\nl = list(map(int, input().split())) * 2\ncb = 0\ncl = 0\nfor i in l:\n    if i == 1:\n        cl += 1\n    else:\n        cb = max(cb, cl)\n        cl = 0\ncb = max(cb, cl)\nprint(cb)\n", "n = int(input())\na = list(map(int, input().split()))\na += a\nt = 0\nmaxt = 0\nfor e in a:\n    if e == 1:\n        t += 1\n        if t > maxt:\n            maxt = t\n    else:\n        t = 0\nprint(maxt)\n", "n=int(input())\nans=0\ncurr=0\nl=list(map(int,input().split()))\nfor i in range(2*n):\n         if(l[i%n]==1):\n                  curr+=1\n         else:\n                  curr=0\n         ans=max(ans,curr)\nprint(ans)", "import itertools\n\nn = int(input())\na = list(map(int, input().split()))\n\ni = a.index(0)\na = a[i:]+a[:i]\n\nresult = max(len(list(g))*k for k, g in itertools.groupby(a))\n\nprint(result)", "# # Soru 1\n#\n# nm = list(map(int, input().split()))\n# n = nm[0]\n# m = nm[1]\n#\n# if int(m/n) != m/n:\n#     print(-1)\n# elif m/n == 1:\n#     print(0)\n# else:\n#     x = m//n\n#     count = 0\n#     while x%2 == 0:\n#         x = x//2\n#         count += 1\n#     while x%3 == 0:\n#         x = x//3\n#         count += 1\n#     if x != 1:\n#         print(-1)\n#     else:\n#         print(count)\n# Soru 2\nn = int(input())\nlst = list(map(int, input().split()))\nlst = lst + lst\ncount = 0\nlarge = 0\nfor i in lst:\n    if i == 1:\n        count += 1\n    else:\n        if count > large:\n            large = count\n        count = 0\nprint(large)\n\n\n", "n = int(input())\na = [int(t) for t in input().split(' ')]\na.extend(a)\nmax_ones = 0\nones = 0\nfor ai in a:\n    if ai == 1:\n        ones += 1\n    else:\n        max_ones = max(max_ones, ones)\n        ones = 0\n\nprint(max_ones)\n", "import sys\ninput = sys.stdin.readline\n\n\nn=int(input())\nA=list(map(int,input().split()))\n\nA+=A\nA+=A\n\nANS=0\nREST=0\n\nfor a in A:\n    if a==1:\n        REST+=1\n    else:\n        if ANS<REST:\n            ANS=REST\n        REST=0\n\nprint(ANS)\n", "n = int(input())\nai = list(map(int,input().split()))\nnum = 0\nnum2 = 0\nfor i in range(n):\n    if ai[i] == 0:\n        break\n    num += 1\nfor i in range(n-1,-1,-1):\n    if ai[i] == 0:\n        break\n    num2 += 1\nans = num + num2\nnum3 = 0\nfor i in range(n):\n    if ai[i] == 0:\n        num3 = 0\n    else:\n        num3 += 1\n        ans = max(ans,num3)\nprint(ans)\n        \n", "n = int(input())\na = list(map(int, input().split()))\no = []\nfor i in range(2 * n):\n    o.append(a[i % n])\nm = 0\nt = 0\nfor i in range(2 * n):\n    if o[i] == 1:\n        t += 1\n    else:\n        if t > m:\n            m = t\n        t = 0\nprint(m)", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\n\nisdebug = False\ntry :\n    #raise ModuleNotFoundError\n    import pylint\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\n    isdebug = True\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\ndef red_inout():\n    inId = 0\n    outId = 0\n    if not isdebug:\n        inId = 0\n        outId = 0\n    if inId>0:\n        dprint('use input', inId)\n        try:\n            f = open('input'+ str(inId) + '.txt', 'r')\n            sys.stdin = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid input file')\n    if outId>0:\n        dprint('use output', outId)\n        try:\n            f = open('stdout'+ str(outId) + '.txt', 'w')\n            sys.stdout = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid output file')\n            \n        atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n\nif isdebug and len(sys.argv) == 1:\n    red_inout()\n\ndef getIntList():\n    return list(map(int, input().split()))            \n\ndef solve(): \n    pass\n    \nT_ = 1    \n#T_, = getIntList()\n\nfor iii_ in range(T_):\n    #solve()\n    N,  = getIntList()\n    za = getIntList()\n    la = 0\n    big = 0\n    for i in range(N):\n        if za[i] ==1:\n            la+=1\n            big = max(la,big)\n        else:\n            la = 0\n    r = big\n    tot = 0\n    for x in za:\n        if x:\n            tot+=1\n        else:\n            break\n    for x in reversed(za):\n        if x:\n            tot+=1\n        else:\n            break\n    r = max(tot,big)\n    print(r)\n    \n\n", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    n=int(input())\n    #n,k,s= map(int, sys.stdin.readline().split(' '))\n    a=list(map(int,sys.stdin.readline().split(' ')))\n    b=2*a\n    #print(b)\n    ans=0\n    curr=0\n    for i in range(len(b)):\n        if(b[i]==1):\n            curr+=1\n        else:\n            ans=max(ans,curr)\n            curr=0\n    print(ans)\n\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n = int(input())\nnums = [int(x) for x in input().split()]\nnums += nums\na = 0\nres = 0\nfor i in nums:\n\tif i ==1:\n\t\ta += 1\n\t\tres = max(res, a)\n\telse:\n\t\ta = 0\nprint(res)", "def mp():\n    return map(int, input().split())\n\nn = int(input())\na = list(mp())\na = a[:] + a[:]\ncnt = 0\nans = cnt\nfor i in range(2 * n):\n    if a[i] == 0:\n        ans = max(ans, cnt)\n        cnt = 0\n    else:\n        cnt += 1\nans = max(ans, cnt)\nprint(ans)            ", "n = int(input())\na = [int(i) for i in input().split()]\na.extend(a)\ni, j = 0, 0\nm = 0\nwhile i < len(a):\n    while j < len(a) and a[j] == 1:\n        j += 1\n    j += 1\n    m = max(m, j - i - 1)\n    i = j\nprint(m)\n\n", "n = int(input())\narr = input()\narr = arr + ' ' + arr\nk = 0\nmaxx = 0\nfor i in arr.split():\n    if i == '1':\n        k += 1\n        maxx = max(k, maxx)\n    else:\n        k = 0\nprint(maxx)", "n=int(input())\na=list(map(int,input().split()))\nb=a+a\n# print(b)\nc=0\nk=0\nfor i in range(2*n):\n    if(b[i]==1):\n        k+=1\n    else:\n        k=0\n    c=max(c,k)\nprint(c)", "n = int(input())\na = [int(x) for x in input().split()]\na[n:] = a\ncnt = 0\nbest = 0\nfor x in a:\n  if x:\n    cnt += 1\n    best = max(best, cnt)\n  else:\n    cnt = 0\n\nprint(best)\n", "n = int(input())\narr = [int(x) for x in input().split()]\narr = arr + arr\nm, cur = 0, 0\nfor i in range(len(arr)):\n    if arr[i] == 1:\n        m += 1\n        cur = max(m, cur)\n    else:\n        m = 0\nprint(cur)", "from math import *\n\nn=int(input())\n\na=list(map(int,input().split(\" \")))\n\ntmp=0\n\nmx=0\n\nfor i in a:\n\tif(i==1):\n\t\tif(tmp==0):\n\t\t\ttmp=1\n\t\telse:\n\t\t\ttmp+=1\n\telse:\n\t\ttmp=0\n\tmx=max(mx,tmp)\nmx2=0\n\ni=n-1\n\nwhile(a[i]!=0):\n\tmx2+=1\n\ti-=1\ni=0\nwhile(a[i]!=0):\n\tmx2+=1\n\ti+=1\nprint(max(mx2,mx))\n\n", "n=int(input())\narr=list(map(int,input().split()))\narr.extend(arr)\nmaxi=0\ncur=0\nfor i in range(len(arr)):\n\tif arr[i]==1:\n\t\tcur+=1\n\telse:\n\t\tif cur>maxi:\n\t\t\tmaxi=cur\n\t\tcur=0\nprint(maxi)"]