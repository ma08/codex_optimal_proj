2022-04-20 20:19:49.763625 num operations 1
2022-04-20 20:19:49.763644 size on input set 1
2022-04-20 20:19:49.763820 using api key soukgp
2022-04-20 20:19:52.325660 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nans = 0\nfor i in range(1, n+1):\n    num = len(str(i))\n    if num % 2 != 0:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nans = 0\nfor i in range(1, n+1):\n    num = len(str(i))\n    if num % 2 != 0:\n        ans += 1\n\nprint(ans)\n"
    }
  ],
  "created": 1650485989,
  "object": "edit"
}
2022-04-20 20:19:52.325908 fix syntax errors 2 ['\nn = int(input())\n\nans = 0\nfor i in range(1, n+1):\n    num = len(str(i))\n    if num % 2 != 0:\n        ans += 1\n\nprint(ans)\n', '\nn = int(input())\n\nans = 0\nfor i in range(1, n+1):\n    num = len(str(i))\n    if num % 2 != 0:\n        ans += 1\n\nprint(ans)\n']
2022-04-20 20:19:52.325933 size on output set 1
2022-04-20 20:19:52.325944 num operations 1
2022-04-20 20:19:52.325950 size on input set 1
2022-04-20 20:19:52.326119 using api key soukgp
2022-04-20 20:19:58.898964 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\nif N < 10:\n    print(N, end='')\nelif N < 100:\n    print(N - 9, end='')\nelif N < 1000:\n    print(N - 189, end='')\nelif N < 10000:\n    print(N - 2889, end='')\nelif N < 100000:\n    print(N - 38889, end='')\nelse:\n    print(N - 488889, end='')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nif n < 100:\n    print(n)\nelse:    \n    count = 99\n    for i in range(100, n+1):\n        if i == int(str(i)[0]) * int(str(i)[0]) * int(str(i)[0]) + int(str(i)[1]) * int(str(i)[1]) * int(str(i)[1]) + int(str(i)[2]) * int(str(i)[2]) * int(str(i)[2]):\n            count += 1\n    print(count)\n"
    }
  ],
  "created": 1650485992,
  "object": "edit"
}
2022-04-20 20:19:58.899173 fix syntax errors 2 ["\nN = int(input())\n\nif N < 10:\n    print(N, end='')\nelif N < 100:\n    print(N - 9, end='')\nelif N < 1000:\n    print(N - 189, end='')\nelif N < 10000:\n    print(N - 2889, end='')\nelif N < 100000:\n    print(N - 38889, end='')\nelse:\n    print(N - 488889, end='')\n", '\nn = int(input())\nif n < 100:\n    print(n)\nelse:    \n    count = 99\n    for i in range(100, n+1):\n        if i == int(str(i)[0]) * int(str(i)[0]) * int(str(i)[0]) + int(str(i)[1]) * int(str(i)[1]) * int(str(i)[1]) + int(str(i)[2]) * int(str(i)[2]) * int(str(i)[2]):\n            count += 1\n    print(count)\n']
2022-04-20 20:19:58.899199 size on output set 2
2022-04-20 20:19:58.899210 num operations 1
2022-04-20 20:19:58.899216 size on input set 1
2022-04-20 20:19:58.899405 using api key derek
2022-04-20 20:19:58.935002 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:20:00.436935 using api key derek
2022-04-20 20:20:00.471877 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 20:20:03.473112 using api key jaanu
2022-04-20 20:20:07.020420 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/12/10\n# @Author  : Edrain\nN = int(input())\n\nif N < 1 or N > 10**5:\n    print(\"invalid input\")\n\n# 9, 99, 999, 9999, 99999\nlength = len(str(N))\n\n# 1\nif length % 2 == 1:\n    ans = 10 ** (length // 2) - 1\nelse:\n    ans = 10 ** (length // 2) - 1 + N - 10 ** (length - 1) + 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\n\nif N < 1 or N > 10**5:\n    print(\"invalid input\")\n\n# 1, 11, 111, 1111, 11111\nlength = len(str(N))\n\n# 9\nif length % 2 == 1:\n    ans = 10 ** (length // 2) - 1\nelse:\n    ans = 10 ** (length // 2) - 1 + N - 10 ** (length - 1) + 1\n\nprint(ans)\n"
    }
  ],
  "created": 1650486003,
  "object": "edit"
}
2022-04-20 20:20:07.020641 fix syntax errors 2 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/12/10\n# @Author  : Edrain\nN = int(input())\n\nif N < 1 or N > 10**5:\n    print("invalid input")\n\n# 9, 99, 999, 9999, 99999\nlength = len(str(N))\n\n# 1\nif length % 2 == 1:\n    ans = 10 ** (length // 2) - 1\nelse:\n    ans = 10 ** (length // 2) - 1 + N - 10 ** (length - 1) + 1\n\nprint(ans)\n', '\n\nN = int(input())\n\nif N < 1 or N > 10**5:\n    print("invalid input")\n\n# 1, 11, 111, 1111, 11111\nlength = len(str(N))\n\n# 9\nif length % 2 == 1:\n    ans = 10 ** (length // 2) - 1\nelse:\n    ans = 10 ** (length // 2) - 1 + N - 10 ** (length - 1) + 1\n\nprint(ans)\n']
2022-04-20 20:20:07.020667 size on output set 2
