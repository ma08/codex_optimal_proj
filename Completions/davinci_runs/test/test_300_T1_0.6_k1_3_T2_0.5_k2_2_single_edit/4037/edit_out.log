2022-04-20 18:54:57.975859 num operations 1
2022-04-20 18:54:57.975879 size on input set 1
2022-04-20 18:54:57.976087 using api key sourya
2022-04-20 18:55:06.181101 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [r]\n    for line in sys.stdin:\n        a, b = map(int, line.split()) \n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(len(r) - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n \n def main():\n     n, r = map(int, sys.stdin.readline().split())\n     r = [r]\n     for line in sys.stdin:\n         a, b = map(int, line.split())\n         if a > r[-1]:\n             r.append(r[-1])\n         else:\n             r.append(max(r[-1] - b, 0))\n     print(len(r) - 1)\n \n if __name__ == \"__main__\":\n     main()\n"
    }
  ],
  "created": 1650480898,
  "object": "edit"
}
2022-04-20 18:55:06.181388 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [r]\n    for line in sys.stdin:\n        a, b = map(int, line.split()) \n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(len(r) - 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n \n def main():\n     n, r = map(int, sys.stdin.readline().split())\n     r = [r]\n     for line in sys.stdin:\n         a, b = map(int, line.split())\n         if a > r[-1]:\n             r.append(r[-1])\n         else:\n             r.append(max(r[-1] - b, 0))\n     print(len(r) - 1)\n \n if __name__ == "__main__":\n     main()\n']
2022-04-20 18:55:06.181419 size on output set 2
2022-04-20 18:55:06.181431 num operations 1
2022-04-20 18:55:06.181436 size on input set 1
2022-04-20 18:55:06.181608 using api key gabby
2022-04-20 18:55:06.221345 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 18:55:07.723247 using api key gabby
2022-04-20 18:55:07.763777 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 18:55:10.767185 using api key jaanu
2022-04-20 18:55:15.914736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:  # noqa: E501\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:  # noqa: E501\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650480910,
  "object": "edit"
}
2022-04-20 18:55:15.914967 fix syntax errors 2 ["\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:  # noqa: E501\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:  # noqa: E501\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 18:55:15.915005 size on output set 2
2022-04-20 18:55:15.915020 num operations 1
2022-04-20 18:55:15.915026 size on input set 1
2022-04-20 18:55:15.915204 using api key sourya
2022-04-20 18:55:39.028272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# # Not my solution, but I understand it and it's so damn clever and fast\n# # https://codeforces.com/contest/1206/submission/59559046\n#\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# # My solution\n#\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# # It's the same solution as above, but the code is a bit more compact\n# # https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Not my solution, but I understand it and it's so damn clever and fast\n# https://codeforces.com/contest/1206/submission/59559046\n\nn, r = map(int, input().split())\np = [list(map(int, input().split())) for _ in range(n)]\np.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i in range(n):\n    r -= p[i][0]\n    if r < 0:\n        print(i)\n        exit()\n    r += p[i][1]\nprint(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i in range(n):\n    r -= a[i][0]\n    if r < 0:\n        print(i)  # number of elements in the bag\n        exit()\n    r += a[i][1]\nelse:\n    print(n)  # number of elements in the bag\n"
    }
  ],
  "created": 1650480915,
  "object": "edit"
}
2022-04-20 18:55:39.028610 fix syntax errors 2 ["\n\n# # Not my solution, but I understand it and it's so damn clever and fast\n# # https://codeforces.com/contest/1206/submission/59559046\n#\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# # My solution\n#\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# # It's the same solution as above, but the code is a bit more compact\n# # https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n", "\n\n# Not my solution, but I understand it and it's so damn clever and fast\n# https://codeforces.com/contest/1206/submission/59559046\n\nn, r = map(int, input().split())\np = [list(map(int, input().split())) for _ in range(n)]\np.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i in range(n):\n    r -= p[i][0]\n    if r < 0:\n        print(i)\n        exit()\n    r += p[i][1]\nprint(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i in range(n):\n    r -= a[i][0]\n    if r < 0:\n        print(i)  # number of elements in the bag\n        exit()\n    r += a[i][1]\nelse:\n    print(n)  # number of elements in the bag\n"]
2022-04-20 18:55:39.028661 size on output set 2
