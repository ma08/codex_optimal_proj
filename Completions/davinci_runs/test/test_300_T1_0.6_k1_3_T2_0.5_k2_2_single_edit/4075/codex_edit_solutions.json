["\nimport os\nos.system('sudo apt-get install python3')\n", "\n\n\nimport sys\ninput = sys.stdin.readline()\nN, M = [int(i) for i in input.split()]\n\nswitches = [[] for _ in range(N)]\nfor _ in range(M):\n    line = [int(i) for i in sys.stdin.readline().split()]\n    k = line[0]\n    for i in range(k):\n        switches[line[i+1]-1].append(_)\n\nlight_states = [int(i) for i in sys.stdin.readline().split()]\n\ndef f(n, ons):\n    if n == N:\n        for i in range(M):\n            if light_states[i] == 1 and sum([1 for j in switches[i] if ons[j] == 1]) % 2 == 0:\n                return 0\n        return 1\n    return f(n+1, ons+[0]) + f(n+1, ons+[1])\n\nprint(f(0, []))\n", "\nimport sys\ninput = sys.stdin.readline()\nN, M = [int(i) for i in input.split()]\n\nswitches = [[] for _ in range(N)]\nfor _ in range(M):\n    line = [int(i) for i in input().split()]\n    k = line[0]\n    for i in range(k):\n        switches[line[i+1]-1].append(_)\n\nlight_states = [int(i) for i in input().split()]\n\ndef f(n, ons):\n    if n == N:\n        for i in range(M):\n            if light_states[i] == 1 and sum([1 for j in switches[i] if ons[j] == 1]) % 2 == 0:\n                return 0\n        return 1\n    return f(n+1, ons+[0]) + f(n+1, ons+[1])\n\nprint(f(0, []))\n", "\nimport sys\n\ndef is_all_bulbs_lighted(bulbs, switches, m):\n    # Check if all bulbs are lighted\n    for i in range(m):\n        if bulbs[i] != switches[i]:\n            return False, 0\n    return True, 1\n\ndef count_switch_status(switches, n):\n    count = 0\n    for i in range(n):\n        count += switches[i]\n    return count\n\ndef light_bulb(bulbs, switches, switch_index):\n    # Change the state of the bulb\n    for i in range(len(bulbs[switch_index])):\n        bulbs[switch_index][i] ^= 1\n\ndef main():\n    # Get the number of switches and bulbs\n    [n, m] = [int(s) for s in sys.stdin.readline().split()]\n    n = int(n)\n    m = int(m)\n    # Get the state of each bulb\n    bulbs = []\n    for i in range(m):\n        bulbs.append([int(s) for s in sys.stdin.readline().split()])\n    # Get the switch that is connected to each bulb\n    switches = [[] for i in range(n)]\n    for i in range(m):\n        [k, *switch_indexes] = [int(s) for s in sys.stdin.readline().split()]\n        for j in range(k):\n            switches[switch_indexes[j] - 1].append(i)\n    # Calculate the minimum number of switches to be turned on\n    count = 0\n    switch_status = [0] * n\n    while True:\n        # Check if all bulbs are lighted\n        all_bulbs_lighted, switch_count = is_all_bulbs_lighted(bulbs, switch_status, m)\n        # If all bulbs are lighted, update the minimum number of switches that are turned on\n        if all_bulbs_lighted:\n            count = min(count, switch_count)\n        # Increase the switch status\n        switch_status[0] += 1\n        for i in range(n - 1):\n            if switch_status[i] == 2:\n                switch_status[i] = 0\n                switch_status[i + 1] += 1\n        if switch_status[n - 1] == 2:\n            break\n    if count == n + 1:\n        print('IMPOSSIBLE')\n    else:\n        print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nN, M = map(int, input().split())\n\nbulbs = []\nfor i in range(M):\n    bulbs.append(list(map(int, input().split())))\n\np = list(map(int, input().split()))\n\nans = 0\nfor i in range(2**N):\n    on = []\n    for j in range(N):\n        if (i >> j) & 1:\n            on.append(j+1)\n    flag = True\n    for j in range(M):\n        cnt = 0\n        for k in range(bulbs[j][0]):\n            if bulbs[j][k+1] in on:\n                cnt += 1\n        if (cnt % 2) != p[j]:\n            flag = False\n            break\n    if flag:\n        ans += 1\n\nprint(ans)\n"]