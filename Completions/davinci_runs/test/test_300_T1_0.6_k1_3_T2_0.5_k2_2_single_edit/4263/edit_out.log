2022-04-20 20:19:31.665759 num operations 1
2022-04-20 20:19:31.665779 size on input set 1
2022-04-20 20:19:31.665937 using api key sunu
2022-04-20 20:19:38.631407 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    for s in string:\n        if s in ['A', 'C', 'G', 'T']:\n            substring += s\n            result = max(result, len(substring))\n        else:\n            substring = ''\n\n    print(result)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    string = str(input())\n    substring = ''\n    result = 0\n\n    for s in string:\n        if s in ['A', 'C', 'G', 'T']:\n            substring += s\n            result = max(result, len(substring))\n        else:\n            substring = ''\n\n    print(result)\n"
    }
  ],
  "created": 1650485971,
  "object": "edit"
}
2022-04-20 20:19:38.631660 fix syntax errors 2 ["\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    for s in string:\n        if s in ['A', 'C', 'G', 'T']:\n            substring += s\n            result = max(result, len(substring))\n        else:\n            substring = ''\n\n    print(result)\n", "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    string = str(input())\n    substring = ''\n    result = 0\n\n    for s in string:\n        if s in ['A', 'C', 'G', 'T']:\n            substring += s\n            result = max(result, len(substring))\n        else:\n            substring = ''\n\n    print(result)\n"]
2022-04-20 20:19:38.631690 size on output set 2
2022-04-20 20:19:38.631702 num operations 1
2022-04-20 20:19:38.631707 size on input set 1
2022-04-20 20:19:38.631870 using api key derek
2022-04-20 20:19:38.673119 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:19:40.174982 using api key kouti
2022-04-20 20:19:43.461814 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\ns = input()\n\n# create a list of substrings of s that are only A, C, G, and T\nacgt_strings = []\nfor i in range(len(s)):\n    for j in range(i + 1, len(s) + 1):\n        acgt_string = s[i:j]\n        if \"A\" in acgt_string and \"C\" in acgt_string and \"G\" in acgt_string and \"T\" in acgt_string:\n            acgt_strings.append(acgt_string)\n\n# print the length of the longest substring\nprint(max([len(acgt_string) for acgt_string in acgt_strings]))\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\n\n# create a list of substrings of s that are only A, C, G, and T\nacgt_strings = []\nfor i in range(len(s)):\n    for j in range(i+1, len(s)+1):\n        acgt_string = s[i:j]\n        if \"A\" in acgt_string and \"C\" in acgt_string and \"G\" in acgt_string and \"T\" in acgt_string:\n            acgt_strings.append(acgt_string)\n\n# print the length of the longest substring\nprint(max([len(acgt_string) for acgt_string in acgt_strings]))\n"
    }
  ],
  "created": 1650485980,
  "object": "edit"
}
2022-04-20 20:19:43.462030 fix syntax errors 2 ['#!/usr/bin/env python3\n\ns = input()\n\n# create a list of substrings of s that are only A, C, G, and T\nacgt_strings = []\nfor i in range(len(s)):\n    for j in range(i + 1, len(s) + 1):\n        acgt_string = s[i:j]\n        if "A" in acgt_string and "C" in acgt_string and "G" in acgt_string and "T" in acgt_string:\n            acgt_strings.append(acgt_string)\n\n# print the length of the longest substring\nprint(max([len(acgt_string) for acgt_string in acgt_strings]))\n', '\ns = input()\n\n# create a list of substrings of s that are only A, C, G, and T\nacgt_strings = []\nfor i in range(len(s)):\n    for j in range(i+1, len(s)+1):\n        acgt_string = s[i:j]\n        if "A" in acgt_string and "C" in acgt_string and "G" in acgt_string and "T" in acgt_string:\n            acgt_strings.append(acgt_string)\n\n# print the length of the longest substring\nprint(max([len(acgt_string) for acgt_string in acgt_strings]))\n']
2022-04-20 20:19:43.462061 size on output set 2
2022-04-20 20:19:43.462072 num operations 1
2022-04-20 20:19:43.462078 size on input set 1
2022-04-20 20:19:43.462234 using api key kouti
2022-04-20 20:19:49.362265 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nans = 0\nfor i in range(len(s)):\n    for j in range(i+1,len(s)+1):\n        if s[i:j] == s[i:j].upper():\n            ans = max(ans,j-i)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    s = input()\n    ans = 0\n    for i in range(len(s)):\n        for j in range(i+1,len(s)+1):\n            if s[i:j].upper() == s[i:j]:\n                ans = max(ans,j-i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650485983,
  "object": "edit"
}
2022-04-20 20:19:49.362536 fix syntax errors 2 ['\ns = input()\nans = 0\nfor i in range(len(s)):\n    for j in range(i+1,len(s)+1):\n        if s[i:j] == s[i:j].upper():\n            ans = max(ans,j-i)\nprint(ans)\n', "\ndef main():\n    s = input()\n    ans = 0\n    for i in range(len(s)):\n        for j in range(i+1,len(s)+1):\n            if s[i:j].upper() == s[i:j]:\n                ans = max(ans,j-i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:19:49.362566 size on output set 2
