2022-04-20 19:12:51.190791 num operations 1
2022-04-20 19:12:51.190808 size on input set 1
2022-04-20 19:12:51.190990 using api key soukgp
2022-04-20 19:12:56.699392 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1\n    return answer\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1  # \u043e\u043a\u0440\u0443\u0433\u043b\u044f\u0435\u043c \u0432 \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443, \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u043c 1, \u0442.\u043a. \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c\n    return answer\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n"
    }
  ],
  "created": 1650481971,
  "object": "edit"
}
2022-04-20 19:12:56.699658 fix syntax errors 2 ['import math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1\n    return answer\n\n\nif __name__ == "__main__":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n', '\nimport math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1  # округляем в большую сторону, вычитаем 1, т.к. минимальный элемент не учитываем\n    return answer\n\n\nif __name__ == "__main__":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n']
2022-04-20 19:12:56.699696 size on output set 2
2022-04-20 19:12:56.699708 num operations 1
2022-04-20 19:12:56.699714 size on input set 1
2022-04-20 19:12:56.699870 using api key derek
2022-04-20 19:12:56.740196 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:12:58.242087 using api key derek
2022-04-20 19:12:58.282072 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:13:01.285072 using api key kouti
2022-04-20 19:13:04.131490 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n    \n    m = min(a)\n    for i in a: \n        m = gcd(m, i)\n\n    moves = 0\n    for i in a:\n        moves += i // m\n\n    if moves >= k:\n        return moves\n    return -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 1,
      "text": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n    \n    m = min(a)\n    for i in a:\n        m = gcd(m, i)\n\n    moves = 0\n    for i in a:\n        moves += i // m\n\n    if moves >= k:\n        return moves\n    return -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    }
  ],
  "created": 1650481981,
  "object": "edit"
}
2022-04-20 19:13:04.131728 fix syntax errors 2 ['\n\n# SOLUTION\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n    \n    m = min(a)\n    for i in a: \n        m = gcd(m, i)\n\n    moves = 0\n    for i in a:\n        moves += i // m\n\n    if moves >= k:\n        return moves\n    return -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', 'def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n    \n    m = min(a)\n    for i in a:\n        m = gcd(m, i)\n\n    moves = 0\n    for i in a:\n        moves += i // m\n\n    if moves >= k:\n        return moves\n    return -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n']
2022-04-20 19:13:04.131765 size on output set 2
2022-04-20 19:13:04.131779 num operations 1
2022-04-20 19:13:04.131787 size on input set 1
2022-04-20 19:13:04.131942 using api key sourya
2022-04-20 19:13:09.299635 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(min_num_operations(n, k, a))\n\n\ndef min_num_operations(n, k, a):\n    return n - k\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    print(min_num_operations())\n\n\ndef min_num_operations():\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650481984,
  "object": "edit"
}
2022-04-20 19:13:09.299863 fix syntax errors 2 ["\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(min_num_operations(n, k, a))\n\n\ndef min_num_operations(n, k, a):\n    return n - k\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(min_num_operations())\n\n\ndef min_num_operations():\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:13:09.299888 size on output set 2
