2022-04-20 19:22:29.995684 num operations 1
2022-04-20 19:22:29.995702 size on input set 1
2022-04-20 19:22:29.995898 using api key jaanu
2022-04-20 19:22:40.554915 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n\ndef solve(d, g, p_c):\n    n = 0\n    p_c = sorted(p_c, key=lambda x: x[1], reverse=True)\n    p_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\n    for p, c, i in p_c:\n        if g >= c:\n            n += p\n            g -= c\n            break\n        else:\n            n += p\n            g -= p * (i + 1) * 100\n\n    if g > 0:\n        n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\n    return n\n\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nprint(solve(d, g, p_c))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n"
    }
  ],
  "created": 1650482550,
  "object": "edit"
}
2022-04-20 19:22:40.555194 fix syntax errors 2 ['\n\n\n\ndef solve(d, g, p_c):\n    n = 0\n    p_c = sorted(p_c, key=lambda x: x[1], reverse=True)\n    p_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\n    for p, c, i in p_c:\n        if g >= c:\n            n += p\n            g -= c\n            break\n        else:\n            n += p\n            g -= p * (i + 1) * 100\n\n    if g > 0:\n        n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\n    return n\n\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nprint(solve(d, g, p_c))\n', '\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n']
2022-04-20 19:22:40.555231 size on output set 2
2022-04-20 19:22:40.555242 num operations 1
2022-04-20 19:22:40.555248 size on input set 1
2022-04-20 19:22:40.555450 using api key gabby
2022-04-20 19:22:40.595890 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:22:42.097769 using api key sunu
2022-04-20 19:22:55.011495 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "# input\nN, M = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(M)]\n\n\n# solve\nans = 'IMPOSSIBLE'\nfor i in range(1 << N):\n    st = [0 for _ in range(N)]\n    for j in range(N):\n        if (i >> j) & 1:\n            st[j] = 1\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"
    }
  ],
  "created": 1650482562,
  "object": "edit"
}
2022-04-20 19:22:55.011724 fix syntax errors 2 ['\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n', "# input\nN, M = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(M)]\n\n\n# solve\nans = 'IMPOSSIBLE'\nfor i in range(1 << N):\n    st = [0 for _ in range(N)]\n    for j in range(N):\n        if (i >> j) & 1:\n            st[j] = 1\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"]
2022-04-20 19:22:55.011766 size on output set 2
2022-04-20 19:22:55.011778 num operations 1
2022-04-20 19:22:55.011784 size on input set 1
2022-04-20 19:22:55.011953 using api key sunu
2022-04-20 19:23:01.708765 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10**7\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1) * 100 * p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1) * 100 * (p_c_list[j][0]-1):\n                        count += remainder // ((j+1) * 100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1) * 100 * p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 1000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650482575,
  "object": "edit"
}
2022-04-20 19:23:01.709186 fix syntax errors 2 ["\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10**7\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1) * 100 * p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1) * 100 * (p_c_list[j][0]-1):\n                        count += remainder // ((j+1) * 100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1) * 100 * p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 1000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:23:01.709255 size on output set 2
