2022-04-20 20:12:40.733107 num operations 1
2022-04-20 20:12:40.733125 size on input set 1
2022-04-20 20:12:40.733325 using api key sunu
2022-04-20 20:12:47.747988 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd = math.gcd(A, B)\ndivisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef main():\n    # Get inputs\n    A, B, K = [int(input()) for _ in range(3)]\n\n    # Get GCD and all divisors\n    gcd = math.gcd(A, B)\n    divisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\n    divisors.sort(reverse=True)\n\n    # Print K-th largest positive integer that divides both A and B.\n    print(divisors[K - 1])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650485560,
  "object": "edit"
}
2022-04-20 20:12:47.748240 fix syntax errors 2 ['\nimport math\n\n# Get inputs\nA, B, K = [int(input()) for _ in range(3)]\n\n# Get GCD and all divisors\ngcd = math.gcd(A, B)\ndivisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\ndivisors.sort(reverse=True)\n\n# Print K-th largest positive integer that divides both A and B.\nprint(divisors[K - 1])\n', "\n\nimport math\n\ndef main():\n    # Get inputs\n    A, B, K = [int(input()) for _ in range(3)]\n\n    # Get GCD and all divisors\n    gcd = math.gcd(A, B)\n    divisors = [d for d in range(1, gcd + 1) if gcd % d == 0]\n    divisors.sort(reverse=True)\n\n    # Print K-th largest positive integer that divides both A and B.\n    print(divisors[K - 1])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:12:47.748269 size on output set 2
2022-04-20 20:12:47.748280 num operations 1
2022-04-20 20:12:47.748285 size on input set 1
2022-04-20 20:12:47.748443 using api key soukgp
2022-04-20 20:12:50.686398 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# ============\n# Solution\n# ============\n\na, b, k = input().split(' ')\na, b, k = int(a), int(b), int(k)\n\n# a_prime = gcd(a, b) # TODO: implement this\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# ============\n# Solution\n# ============\n\na, b, k = input().split(' ')\na, b, k = int(a), int(b), int(k)\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is b_prime / k\nprint(int(b_prime / k))\n"
    }
  ],
  "created": 1650485567,
  "object": "edit"
}
2022-04-20 20:12:50.686612 fix syntax errors 2 ["\n\n# ============\n# Solution\n# ============\n\na, b, k = input().split(' ')\na, b, k = int(a), int(b), int(k)\n\n# a_prime = gcd(a, b) # TODO: implement this\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is a_prime / k\nprint(int(b_prime / k))\n", "\n\n# ============\n# Solution\n# ============\n\na, b, k = input().split(' ')\na, b, k = int(a), int(b), int(k)\n\n# a_prime = gcd(a, b)\na_prime = a if a < b else b\nb_prime = a if a > b else b\n\nwhile a_prime != 0:\n    a_prime, b_prime = b_prime % a_prime, a_prime\n\n# The k-th largest number is b_prime / k\nprint(int(b_prime / k))\n"]
2022-04-20 20:12:50.686639 size on output set 2
2022-04-20 20:12:50.686652 num operations 1
2022-04-20 20:12:50.686658 size on input set 1
2022-04-20 20:12:50.686815 using api key gabby
2022-04-20 20:12:50.722866 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:12:52.224817 using api key sunu
2022-04-20 20:12:55.980587 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a,b)\n    for i in range(k):\n        g = gcd(g, min(a,b))\n        if g == 1:\n            break\n    print(g)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a,b)\n    if k > 1:\n        for i in range(k-1):\n            g = gcd(g, min(a,b))\n            if g == 1:\n                break\n    print(g)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650485572,
  "object": "edit"
}
2022-04-20 20:12:55.980916 fix syntax errors 2 ['\n\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a,b)\n    for i in range(k):\n        g = gcd(g, min(a,b))\n        if g == 1:\n            break\n    print(g)\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom fractions import gcd\n\ndef main():\n    inputstring = input()\n    a, b, k = map(int, inputstring.split())\n    g = gcd(a,b)\n    if k > 1:\n        for i in range(k-1):\n            g = gcd(g, min(a,b))\n            if g == 1:\n                break\n    print(g)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 20:12:55.980957 size on output set 2
