["\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n - 1):\n        instability = array[i] - array[i - 1]\n        if instability < min_instability:\n            min_instability = instability\n        instability = array[i + 1] - array[i]\n        if instability < min_instability:\n            min_instability = instability\n    return min_instability\n\nif __name__ == '__main__':\n    n = int(input())\n    array = list(map(int, input().split()))\n    print(min_instability(n, array))\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nprint(min(a[-1] - a[1], a[-2] - a[0])) \n", "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n", "\nn = int(input())\narray = list(map(int, input().split()))\narray.sort()\nmin_instability = array[-1] - array[0]\nfor i in range(1, n-1):\n    if array[i] - array[i-1] < min_instability:\n        min_instability = array[i] - array[i-1]\n    if array[i+1] - array[i] < min_instability:\n        min_instability = array[i+1] - array[i]\nprint(min_instability)\n"]