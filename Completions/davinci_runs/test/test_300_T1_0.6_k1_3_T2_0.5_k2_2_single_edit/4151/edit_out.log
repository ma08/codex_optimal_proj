2022-04-20 19:36:40.855426 num operations 1
2022-04-20 19:36:40.855446 size on input set 1
2022-04-20 19:36:40.855627 using api key kouti
2022-04-20 19:36:48.184059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    print(m)\n    print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef answer():\n    return 1\n\nif __name__ == '__main__':\n    print(answer())\n"
    }
  ],
  "created": 1650483400,
  "object": "edit"
}
2022-04-20 19:36:48.184316 fix syntax errors 2 ["\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    print(m)\n    print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer():\n    return 1\n\nif __name__ == '__main__':\n    print(answer())\n"]
2022-04-20 19:36:48.184368 size on output set 2
2022-04-20 19:36:48.184380 num operations 1
2022-04-20 19:36:48.184385 size on input set 1
2022-04-20 19:36:48.184536 using api key soukgp
2022-04-20 19:36:53.257933 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().split()]\n\ndef read_int():\n    return int(stdin.readline())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650483408,
  "object": "edit"
}
2022-04-20 19:36:53.258172 fix syntax errors 2 ['\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().split()]\n\ndef read_int():\n    return int(stdin.readline())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:36:53.258219 size on output set 2
2022-04-20 19:36:53.258232 num operations 1
2022-04-20 19:36:53.258239 size on input set 1
2022-04-20 19:36:53.258427 using api key kouti
2022-04-20 19:36:55.998123 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  exit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    }
  ],
  "created": 1650483413,
  "object": "edit"
}
2022-04-20 19:36:55.998357 fix syntax errors 2 ['\n#\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  exit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n']
2022-04-20 19:36:55.998386 size on output set 2
