["\n\nimport sys\nimport numpy as np\nimport math\nimport collections\nimport copy\nimport decimal\nimport itertools\nimport fractions\nimport heapq\nfrom collections import deque\nfrom functools import reduce\nfrom itertools import product\nfrom itertools import combinations\ninput = sys.stdin.readline\n# np.set_printoptions(suppress=True)\n# np.set_printoptions(precision=3)\n# sys.exit()\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LLIL(n): return [LI() for _ in range(n)]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef DP(N, M, first): return [[first] * M for n in range(N)]\ndef DP3(N, M, L, first): return [[[first] * L for n in range(M)] for _ in range(N)]\n\ndef main():\n    d, t, s = LI()\n\n    if d/s <= t:\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n", "\nd, t, s = map(int, input().split())\n\nif d/s <= t:\n    print('Yes')\nelse:\n    print('No')\n", "# -*- coding: utf-8 -*-\n\nd, t, s = map(int, input().split())\nprint('Yes' if d <= t * s else 'No')\n", "\n(D, T, S) = map(int, input().split())\n\nif D / S <= T:\n    print('Yes')\nelse:\n    print('No')\n"]