2022-04-20 19:22:03.521201 num operations 1
2022-04-20 19:22:03.521225 size on input set 1
2022-04-20 19:22:03.521454 using api key derek
2022-04-20 19:22:03.697603 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:22:05.199576 using api key gabby
2022-04-20 19:22:05.240373 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:22:08.243775 using api key jaanu
2022-04-20 19:22:17.433421 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef get_nums_l():\n    return [ int(s) for s in input().split(\" \")]\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef get_all_int():\n    return map(int, open(0).read().split())\n\ndef log(*args):\n    print(\"DEBUG:\", *args, file=sys.stderr)\n\nINF = 999999999999999999999999\n\nN,M,X = get_nums_l()\n\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306e\u3068\u304d\u3001\u305d\u306e\u6642\u306e\u6700\u5c0f\u91d1\u984d\u3092\u5165\u308c\u308b\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u672a\u6e80\u306e\u3068\u304d\u3001INF\u3092\u5165\u308c\u308b\ndp = [INF] * (1 << M)\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306e\u3068\u304d\u306f0\u5186\u3067\u8cb7\u3048\u308b\ndp[(1 << M) -1] = 0\n\nfor n in range(N):\n    A = get_nums_l()\n    # \u3053\u306e\u672c\u3067\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b66\u7fd2\u529b\u304c\u4e0a\u304c\u308b\u304b\n    s = 0\n    for i in range(1,M+1):\n        if A[i] >= X:\n            s += 1 << (i-1)\n\n    # \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306b\u306a\u308b\u72b6\u614b\u304b\u3089\u3001\u672c\u3092\u8cb7\u3046\u3053\u3068\u3067X\u672a\u6e80\u306b\u306a\u308b\u72b6\u614b\u306e\u6700\u5c0f\u91d1\u984d\u3092\u66f4\u65b0\u3059\u308b\n    for j in range(1 << M):\n        if dp[j] != INF:\n            dp[j|s] = min(dp[j|s], dp[j] + A[0])\n\nif dp[(1 << M) -1] == INF:\n    print(-1)\nelse:\n    print(dp[(1 << M) -1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067\u6570\u5024\u30ea\u30b9\u30c8\u306b\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\ndef get_nums_l():\n    return [int(s) for s in input().split(\" \")]\n\n# \u6539\u884c\u307e\u305f\u306f\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u5165\u529b\u3092\u3059\u3079\u3066\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\ndef get_all_int():\n    return map(int, open(0).read().split())\n\ndef log(*args):\n    print(\"DEBUG:\", *args, file=sys.stderr)\n\nINF = 99999999999999999999999999999999999\n\nN, M, X = get_nums_l()\n\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306e\u3068\u304d\u3001\u305d\u306e\u6642\u306e\u6700\u5c0f\u91d1\u984d\u3092\u5165\u308c\u308b\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u672a\u6e80\u306e\u3068\u304d\u3001INF\u3092\u5165\u308c\u308b\ndp = [INF] * (1 << M)\n# \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306e\u3068\u304d\u306f0\u5186\u3067\u8cb7\u3048\u308b\ndp[(1 << M) - 1] = 0\n\nfor n in range(N):\n    A = get_nums_l()\n    # \u3053\u306e\u672c\u3067\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b66\u7fd2\u529b\u304c\u4e0a\u304c\u308b\u304b\n    s = 0\n    for i in range(1, M+1):\n        if A[i] >= X:\n            s += 1 << (i-1)\n\n    # \u5168\u3066\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cX\u4ee5\u4e0a\u306b\u306a\u308b\u72b6\u614b\u304b\u3089\u3001\u672c\u3092\u8cb7\u3046\u3053\u3068\u3067X\u672a\u6e80\u306b\u306a\u308b\u72b6\u614b\u306e\u6700\u5c0f\u91d1\u984d\u3092\u66f4\u65b0\u3059\u308b\n    for j in range(1 << M):\n        if dp[j] != INF:\n            dp[j|s] = min(dp[j|s], dp[j] + A[0])\n\nif dp[(1 << M) - 1] == INF:\n    print(-1)\nelse:\n    print(dp[(1 << M) - 1])\n"
    }
  ],
  "created": 1650482528,
  "object": "edit"
}
2022-04-20 19:22:17.433704 fix syntax errors 2 ['\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\n# スペース区切りの入力を読み込んで数値リストにして返します。\ndef get_nums_l():\n    return [ int(s) for s in input().split(" ")]\n\n# 改行またはスペース区切りの入力をすべて読み込んでイテレータを返します。\ndef get_all_int():\n    return map(int, open(0).read().split())\n\ndef log(*args):\n    print("DEBUG:", *args, file=sys.stderr)\n\nINF = 999999999999999999999999\n\nN,M,X = get_nums_l()\n\n# 全てのアルゴリズムがX以上のとき、その時の最小金額を入れる\n# 全てのアルゴリズムがX未満のとき、INFを入れる\ndp = [INF] * (1 << M)\n# 全てのアルゴリズムがX以上のときは0円で買える\ndp[(1 << M) -1] = 0\n\nfor n in range(N):\n    A = get_nums_l()\n    # この本でどのアルゴリズムの学習力が上がるか\n    s = 0\n    for i in range(1,M+1):\n        if A[i] >= X:\n            s += 1 << (i-1)\n\n    # 全てのアルゴリズムがX以上になる状態から、本を買うことでX未満になる状態の最小金額を更新する\n    for j in range(1 << M):\n        if dp[j] != INF:\n            dp[j|s] = min(dp[j|s], dp[j] + A[0])\n\nif dp[(1 << M) -1] == INF:\n    print(-1)\nelse:\n    print(dp[(1 << M) -1])\n', '\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\n# スペース区切りの入力を読み込んで数値リストにして返します。\ndef get_nums_l():\n    return [int(s) for s in input().split(" ")]\n\n# 改行またはスペース区切りの入力をすべて読み込んでイテレータを返します。\ndef get_all_int():\n    return map(int, open(0).read().split())\n\ndef log(*args):\n    print("DEBUG:", *args, file=sys.stderr)\n\nINF = 99999999999999999999999999999999999\n\nN, M, X = get_nums_l()\n\n# 全てのアルゴリズムがX以上のとき、その時の最小金額を入れる\n# 全てのアルゴリズムがX未満のとき、INFを入れる\ndp = [INF] * (1 << M)\n# 全てのアルゴリズムがX以上のときは0円で買える\ndp[(1 << M) - 1] = 0\n\nfor n in range(N):\n    A = get_nums_l()\n    # この本でどのアルゴリズムの学習力が上がるか\n    s = 0\n    for i in range(1, M+1):\n        if A[i] >= X:\n            s += 1 << (i-1)\n\n    # 全てのアルゴリズムがX以上になる状態から、本を買うことでX未満になる状態の最小金額を更新する\n    for j in range(1 << M):\n        if dp[j] != INF:\n            dp[j|s] = min(dp[j|s], dp[j] + A[0])\n\nif dp[(1 << M) - 1] == INF:\n    print(-1)\nelse:\n    print(dp[(1 << M) - 1])\n']
2022-04-20 19:22:17.433764 size on output set 2
2022-04-20 19:22:17.433775 num operations 1
2022-04-20 19:22:17.433781 size on input set 1
2022-04-20 19:22:17.433938 using api key soukgp
2022-04-20 19:22:22.597051 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    C = []\n    A = []\n    for _ in range(N):\n        c = list(map(int, sys.stdin.readline().split()))\n        C.append(c[0])\n        A.append(c[1:])\n    \n    INF = float(\"inf\")\n    dp = [[INF] * (M+1) for _ in range(N)]\n    dp[0][0] = 0\n    for i in range(N):\n        for j in range(M):\n            dp[i+1][j+1] = min(dp[i+1][j+1], dp[i][j] + C[i])\n            for k in range(M):\n                dp[i+1][k] = min(dp[i+1][k], dp[i][j] + C[i] - A[i][j] + A[i][k])\n    \n    if X in dp[N-1]:\n        print(dp[N-1][X])\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    C = []\n    A = []\n    for _ in range(N):\n        c = list(map(int, sys.stdin.readline().split()))\n        C.append(c[0])\n        A.append(c[1:])\n    \n    INF = float(\"inf\")\n    dp = [[INF] * (M+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(N):\n        for j in range(M):\n            dp[i+1][j+1] = min(dp[i+1][j+1], dp[i][j] + C[i])\n            for k in range(M):\n                dp[i+1][k] = min(dp[i+1][k], dp[i][j] + C[i] - A[i][j] + A[i][k])\n    \n    if X in dp[N]:\n        print(dp[N][X])\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650482537,
  "object": "edit"
}
2022-04-20 19:22:22.597421 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    C = []\n    A = []\n    for _ in range(N):\n        c = list(map(int, sys.stdin.readline().split()))\n        C.append(c[0])\n        A.append(c[1:])\n    \n    INF = float("inf")\n    dp = [[INF] * (M+1) for _ in range(N)]\n    dp[0][0] = 0\n    for i in range(N):\n        for j in range(M):\n            dp[i+1][j+1] = min(dp[i+1][j+1], dp[i][j] + C[i])\n            for k in range(M):\n                dp[i+1][k] = min(dp[i+1][k], dp[i][j] + C[i] - A[i][j] + A[i][k])\n    \n    if X in dp[N-1]:\n        print(dp[N-1][X])\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    N, M, X = map(int, sys.stdin.readline().split())\n    C = []\n    A = []\n    for _ in range(N):\n        c = list(map(int, sys.stdin.readline().split()))\n        C.append(c[0])\n        A.append(c[1:])\n    \n    INF = float("inf")\n    dp = [[INF] * (M+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(N):\n        for j in range(M):\n            dp[i+1][j+1] = min(dp[i+1][j+1], dp[i][j] + C[i])\n            for k in range(M):\n                dp[i+1][k] = min(dp[i+1][k], dp[i][j] + C[i] - A[i][j] + A[i][k])\n    \n    if X in dp[N]:\n        print(dp[N][X])\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:22:22.597462 size on output set 2
2022-04-20 19:22:22.597474 num operations 1
2022-04-20 19:22:22.597481 size on input set 1
2022-04-20 19:22:22.597648 using api key jaanu
2022-04-20 19:22:29.598888 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\n\nn,m = map(int,input().split())\nbooks = [list(map(int,input().split())) for _ in range(n)]\nx = list(map(int,input().split()))\n\nans = 10**9\n\nfor i in range(2**n):\n    cost = 0\n    algo = [0]*m\n    for j in range(n):\n        if(i>>j&1):\n            cost += books[j][0]\n            for k in range(m):\n                algo[k] += books[j][k+1]\n    if(all(a >= x for a in algo)):\n        ans = min(ans,cost)\n\nif(ans == 10**9):\n    print(-1)\nelse:\n    print(ans)\n"
    },
    {
      "index": 1,
      "text": "n,m = map(int,input().split())\n\nbooks = []\nfor _ in range(n):\n    books.append(list(map(int,input().split())))\n\nx = list(map(int,input().split()))\n\nans = 10**9\n\nfor i in range(2**n):\n    cost = 0\n    algo = [0]*m\n    for j in range(n):\n        if(i>>j&1):\n            cost += books[j][0]\n            for k in range(m):\n                algo[k] += books[j][k+1]\n    if(all(a >= x for a in algo)):\n        ans = min(ans,cost)\n\nif(ans == 10**9):\n    print(-1)\nelse:\n    print(ans)\n"
    }
  ],
  "created": 1650482542,
  "object": "edit"
}
2022-04-20 19:22:29.599105 fix syntax errors 2 ['import sys\ninput = sys.stdin.readline\n\nn,m = map(int,input().split())\nbooks = [list(map(int,input().split())) for _ in range(n)]\nx = list(map(int,input().split()))\n\nans = 10**9\n\nfor i in range(2**n):\n    cost = 0\n    algo = [0]*m\n    for j in range(n):\n        if(i>>j&1):\n            cost += books[j][0]\n            for k in range(m):\n                algo[k] += books[j][k+1]\n    if(all(a >= x for a in algo)):\n        ans = min(ans,cost)\n\nif(ans == 10**9):\n    print(-1)\nelse:\n    print(ans)\n', 'n,m = map(int,input().split())\n\nbooks = []\nfor _ in range(n):\n    books.append(list(map(int,input().split())))\n\nx = list(map(int,input().split()))\n\nans = 10**9\n\nfor i in range(2**n):\n    cost = 0\n    algo = [0]*m\n    for j in range(n):\n        if(i>>j&1):\n            cost += books[j][0]\n            for k in range(m):\n                algo[k] += books[j][k+1]\n    if(all(a >= x for a in algo)):\n        ans = min(ans,cost)\n\nif(ans == 10**9):\n    print(-1)\nelse:\n    print(ans)\n']
2022-04-20 19:22:29.599137 size on output set 2
