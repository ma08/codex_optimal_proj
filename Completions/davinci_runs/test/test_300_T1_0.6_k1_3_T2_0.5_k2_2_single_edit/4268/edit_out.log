2022-04-20 20:21:34.079479 num operations 1
2022-04-20 20:21:34.079500 size on input set 1
2022-04-20 20:21:34.079663 using api key derek
2022-04-20 20:21:34.216330 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:21:35.718227 using api key sourya
2022-04-20 20:21:35.755308 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 20:21:38.758733 using api key jaanu
2022-04-20 20:21:41.928786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\nfrom sys import stdin\n\nstdin.readline()\npoints = [tuple(map(int, line.strip().split())) for line in stdin.readlines()]\n\ndef sq(n):\n    return n*n\n\n# This is O(n^2) time and O(n) space.\ndef num_pairs_with_integer_distance(points):\n    num_pairs = 0\n    distances = {}\n    for p1 in points:\n        for p2 in points:\n            if p1 == p2:\n                continue\n            key = tuple(sorted([p1, p2]))\n            if key in distances:\n                continue\n            else:\n                distances[key] = sum(sq(x1 - x2) for x1, x2 in zip(p1, p2))\n            if distances[key] == int(math.sqrt(distances[key])):\n                num_pairs += 1\n    return num_pairs\n\nprint(num_pairs_with_integer_distance(points))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nstdin.readline()\npoints = [tuple(map(int, line.strip().split())) for line in stdin.readlines()]\n\ndef sq(n):\n    return n*n\n\n# This is O(n^2) time and O(n) space.\ndef num_pairs_with_integer_distance(points):\n    num_pairs = 0\n    distances = {}\n    for p1 in points:\n        for p2 in points:\n            if p1 == p2:\n                continue\n            key = tuple(sorted([p1, p2]))\n            if key in distances:\n                continue\n            else:\n                distances[key] = sum(sq(x1 - x2) for x1, x2 in zip(p1, p2))\n            if distances[key] == int(distances[key]):\n                num_pairs += 1\n    return num_pairs\nprint(num_pairs_with_integer_distance(points))\n"
    }
  ],
  "created": 1650486098,
  "object": "edit"
}
2022-04-20 20:21:41.929039 fix syntax errors 2 ['\nimport math\nfrom sys import stdin\n\nstdin.readline()\npoints = [tuple(map(int, line.strip().split())) for line in stdin.readlines()]\n\ndef sq(n):\n    return n*n\n\n# This is O(n^2) time and O(n) space.\ndef num_pairs_with_integer_distance(points):\n    num_pairs = 0\n    distances = {}\n    for p1 in points:\n        for p2 in points:\n            if p1 == p2:\n                continue\n            key = tuple(sorted([p1, p2]))\n            if key in distances:\n                continue\n            else:\n                distances[key] = sum(sq(x1 - x2) for x1, x2 in zip(p1, p2))\n            if distances[key] == int(math.sqrt(distances[key])):\n                num_pairs += 1\n    return num_pairs\n\nprint(num_pairs_with_integer_distance(points))\n', '\n\nfrom sys import stdin\n\nstdin.readline()\npoints = [tuple(map(int, line.strip().split())) for line in stdin.readlines()]\n\ndef sq(n):\n    return n*n\n\n# This is O(n^2) time and O(n) space.\ndef num_pairs_with_integer_distance(points):\n    num_pairs = 0\n    distances = {}\n    for p1 in points:\n        for p2 in points:\n            if p1 == p2:\n                continue\n            key = tuple(sorted([p1, p2]))\n            if key in distances:\n                continue\n            else:\n                distances[key] = sum(sq(x1 - x2) for x1, x2 in zip(p1, p2))\n            if distances[key] == int(distances[key]):\n                num_pairs += 1\n    return num_pairs\nprint(num_pairs_with_integer_distance(points))\n']
2022-04-20 20:21:41.929076 size on output set 2
2022-04-20 20:21:41.929088 num operations 1
2022-04-20 20:21:41.929101 size on input set 1
2022-04-20 20:21:41.929262 using api key sunu
2022-04-20 20:21:44.368934 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\nN, D = list(map(int, input().split()))\npoints = list()\n\nfor i in range(N):\n    points.append(list(map(int, input().split())))\n\nnum_pairs = 0\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        distance = 0\n        for k in range(D):\n            distance += (points[i][k] - points[j][k]) ** 2\n        distance = math.sqrt(distance)\n\n        if distance % 1 == 0:\n            num_pairs += 1\n\nprint(num_pairs)\n"
    },
    {
      "index": 1,
      "text": "import math\n\nN, D = list(map(int, input().split()))\npoints = list()\n\nfor i in range(N):\n    points.append(list(map(int, input().split())))\n\nnum_pairs = 0\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        distance = 0\n        for k in range(D):\n            distance += (points[i][k] - points[j][k]) ** 2\n        distance = math.sqrt(distance)\n\n        if distance % 1 == 0:\n            num_pairs += 1\n\nprint(num_pairs)\n"
    }
  ],
  "created": 1650486101,
  "object": "edit"
}
2022-04-20 20:21:44.369151 fix syntax errors 2 ['\nimport math\n\nN, D = list(map(int, input().split()))\npoints = list()\n\nfor i in range(N):\n    points.append(list(map(int, input().split())))\n\nnum_pairs = 0\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        distance = 0\n        for k in range(D):\n            distance += (points[i][k] - points[j][k]) ** 2\n        distance = math.sqrt(distance)\n\n        if distance % 1 == 0:\n            num_pairs += 1\n\nprint(num_pairs)\n', 'import math\n\nN, D = list(map(int, input().split()))\npoints = list()\n\nfor i in range(N):\n    points.append(list(map(int, input().split())))\n\nnum_pairs = 0\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        distance = 0\n        for k in range(D):\n            distance += (points[i][k] - points[j][k]) ** 2\n        distance = math.sqrt(distance)\n\n        if distance % 1 == 0:\n            num_pairs += 1\n\nprint(num_pairs)\n']
2022-04-20 20:21:44.369181 size on output set 2
2022-04-20 20:21:44.369194 num operations 1
2022-04-20 20:21:44.369200 size on input set 1
2022-04-20 20:21:44.369375 using api key gabby
2022-04-20 20:21:44.406715 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:21:45.908611 using api key soukgp
2022-04-20 20:21:50.999067 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef distance(point1, point2):\n    sum = 0\n    for i in range(len(point1)):\n        sum += (point1[i] - point2[i]) ** 2\n    return int(sum)\n\n\ndef main():\n    num_points, dim = map(int, input().split())\n    points = []\n    for _ in range(num_points):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(num_points):\n        for j in range(i + 1, num_points):\n            if distance(points[i], points[j]) ** 0.5 == int(distance(points[i], points[j]) ** 0.5):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef distance(point1, point2):\n    summ = 0\n    for i in range(len(point1)):\n        summ += (point1[i] - point2[i])**2\n    return summ\n\ndef main():\n    num_points, dim = map(int, input().split())\n    points = []\n    for _ in range(num_points):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(num_points):\n        for j in range(i+1, num_points):\n            if int(distance(points[i], points[j])**0.5) == distance(points[i], points[j])**0.5:\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650486105,
  "object": "edit"
}
2022-04-20 20:21:50.999292 fix syntax errors 2 ["\ndef distance(point1, point2):\n    sum = 0\n    for i in range(len(point1)):\n        sum += (point1[i] - point2[i]) ** 2\n    return int(sum)\n\n\ndef main():\n    num_points, dim = map(int, input().split())\n    points = []\n    for _ in range(num_points):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(num_points):\n        for j in range(i + 1, num_points):\n            if distance(points[i], points[j]) ** 0.5 == int(distance(points[i], points[j]) ** 0.5):\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef distance(point1, point2):\n    summ = 0\n    for i in range(len(point1)):\n        summ += (point1[i] - point2[i])**2\n    return summ\n\ndef main():\n    num_points, dim = map(int, input().split())\n    points = []\n    for _ in range(num_points):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(num_points):\n        for j in range(i+1, num_points):\n            if int(distance(points[i], points[j])**0.5) == distance(points[i], points[j])**0.5:\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:21:50.999447 size on output set 2
