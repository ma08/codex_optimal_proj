["\n#-----Solution-----\n\ndef ravioli_sort(n,a):\n    for i in range(n-1):\n        if a[i] > a[i+1] and a[i] - a[i+1] >= 2:\n            return 'NO'\n    return 'YES'\n\nn = int(input())\na = list(map(int,input().split()))\nprint(ravioli_sort(n,a))\n", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    stack = []\n\n    for i in range(n):\n        stack.append([i+1 for j in range(arr[i])])\n\n    stack = [item for sublist in stack for item in sublist]\n\n    stack.sort()\n\n    for i in range(len(stack) - 1):\n        if stack[i+1] - stack[i] > 1:\n            print(\"NO\")\n            return\n            break\n    else:\n        print(\"YES\")\n\n\nmain()\n", "\n\ndef main():\n    n, k = input().split()\n    n = int(n)\n    k = int(k)\n\n    arr = list(map(int, input().split()))[:n]\n\n    if k == 1:\n        print(max(arr))\n    elif k == 2:\n        print(max(arr[0], arr[n-1]))\n    else:\n        print(max(arr))\n\n\n\nmain()\n", "\n\nimport sys\n\ndef main():\n\tn = int(input().strip())\n\ta = list(map(int,input().strip().split(' ')))\n\tb = [0]*n\n\tfor i in range(n):\n\t\tb[i] = a.count(i+1)\n\tif (b[0] == n):\n\t\tprint(\"NO\")\n\t\tsys.exit(0)\n\tfor i in range(n-1):\n\t\tif (b[i+1] == n and b[i] == 1):\n\t\t\tprint(\"NO\")\n\t\t\tsys.exit(0)\n\tprint(\"YES\")\n\nif __name__ == '__main__':\n\tmain()\n", "\n\n#-----Solution----\n\ndef ravioli_sort(n,a):\n    for i in range(n-1):\n        if a[i] > a[i+1] and a[i] - a[i+1] >= 2:\n            return 'NO'\n    return 'YES'\n\nn = int(input())\na = list(map(int,input().split()))\nprint(ravioli_sort(n,a))\n", "\n\nimport sys\n\ndef main():\n\tn = int(input().strip())\n\ta = list(map(int,input().strip().split(' ')))\n\tb = [0]*n\n\tfor i in range(n):\n\t\tb[i] = a.count(i+1)\n\tif (b[1] == n):\n\t\tprint(\"NO\")\n\t\treturn\n\tfor i in range(n-1):\n\t\tif (b[i+2] == n and b[i+1] == 1):\n\t\t\tprint(\"NO\")\n\t\t\treturn\n\tprint(\"YES\")\n\nif __name__ == '__main__':\n\tmain()\n"]