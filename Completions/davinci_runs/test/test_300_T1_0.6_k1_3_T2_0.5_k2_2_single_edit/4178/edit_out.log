2022-04-20 19:45:44.009596 num operations 1
2022-04-20 19:45:44.009616 size on input set 1
2022-04-20 19:45:44.009966 using api key soukgp
2022-04-20 19:45:48.250879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nheights = map(int, input().split())\nheights = list(heights)\n\nfor i in range(1, n):\n    if heights[i] < heights[i - 1]:\n        heights[i] = heights[i - 1]\n\nprint('Yes')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nheights = list(map(int, input().split()))\n\nfor i in range(n - 1):\n    if heights[i] > heights[i + 1]:\n        heights[i + 1] = heights[i]\n\nprint('Yes')\n"
    }
  ],
  "created": 1650483944,
  "object": "edit"
}
2022-04-20 19:45:48.251133 fix syntax errors 2 ["\n\nn = int(input())\nheights = map(int, input().split())\nheights = list(heights)\n\nfor i in range(1, n):\n    if heights[i] < heights[i - 1]:\n        heights[i] = heights[i - 1]\n\nprint('Yes')\n", "\nn = int(input())\nheights = list(map(int, input().split()))\n\nfor i in range(n - 1):\n    if heights[i] > heights[i + 1]:\n        heights[i + 1] = heights[i]\n\nprint('Yes')\n"]
2022-04-20 19:45:48.251158 size on output set 2
2022-04-20 19:45:48.251170 num operations 1
2022-04-20 19:45:48.251176 size on input set 1
2022-04-20 19:45:48.251329 using api key derek
2022-04-20 19:45:48.292470 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:45:49.794412 using api key sourya
2022-04-20 19:45:49.837080 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:45:52.840494 using api key sourya
2022-04-20 19:45:52.880998 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-20 19:45:58.887398 using api key kouti
2022-04-20 19:46:07.208174 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nh = list(map(int, input().split()))\n\nans = True\nfor i in range(1, n):\n    if h[i - 1] > h[i]:\n        h[i] = h[i - 1]\n    elif h[i - 1] == h[i]:\n        continue\n    elif h[i - 1] + 1 < h[i]:\n        ans = False\n        break\n\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "import sys\nsys.setrecursionlimit(10 ** 7)\n\nn = int(input())\nh = list(map(int, input().split()))\n\ndef dfs(i):\n    if i == n:\n        return True\n    if h[i] == 0:\n        return dfs(i + 1)\n    if i + 1 < n and h[i + 1] > 0:\n        return False\n    if i + 2 < n and h[i + 2] > 0:\n        return False\n    h[i] -= 1\n    if not dfs(i):\n        return False\n    h[i] += 1\n\n    if i + 1 < n and h[i + 1] > 0:\n        h[i + 1] -= 1\n        if not dfs(i + 1):\n            return False\n        h[i + 1] += 1\n\n    if i + 2 < n and h[i + 2] > 0:\n        h[i + 2] -= 1\n        if not dfs(i + 2):\n            return False\n        h[i + 2] += 1\n\n    return True\n\n\nif dfs(0):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650483958,
  "object": "edit"
}
2022-04-20 19:46:07.208413 fix syntax errors 2 ['\nn = int(input())\nh = list(map(int, input().split()))\n\nans = True\nfor i in range(1, n):\n    if h[i - 1] > h[i]:\n        h[i] = h[i - 1]\n    elif h[i - 1] == h[i]:\n        continue\n    elif h[i - 1] + 1 < h[i]:\n        ans = False\n        break\n\nif ans:\n    print("Yes")\nelse:\n    print("No")\n', 'import sys\nsys.setrecursionlimit(10 ** 7)\n\nn = int(input())\nh = list(map(int, input().split()))\n\ndef dfs(i):\n    if i == n:\n        return True\n    if h[i] == 0:\n        return dfs(i + 1)\n    if i + 1 < n and h[i + 1] > 0:\n        return False\n    if i + 2 < n and h[i + 2] > 0:\n        return False\n    h[i] -= 1\n    if not dfs(i):\n        return False\n    h[i] += 1\n\n    if i + 1 < n and h[i + 1] > 0:\n        h[i + 1] -= 1\n        if not dfs(i + 1):\n            return False\n        h[i + 1] += 1\n\n    if i + 2 < n and h[i + 2] > 0:\n        h[i + 2] -= 1\n        if not dfs(i + 2):\n            return False\n        h[i + 2] += 1\n\n    return True\n\n\nif dfs(0):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-20 19:46:07.208448 size on output set 2
2022-04-20 19:46:07.208461 num operations 1
2022-04-20 19:46:07.208468 size on input set 1
2022-04-20 19:46:07.208639 using api key gabby
2022-04-20 19:46:07.249454 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:46:08.751397 using api key sunu
2022-04-20 19:46:39.312098 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n# A - Climbing Stairs\n# https://atcoder.jp/contests/abc055/tasks/abc055_a\n\nn = int(input())\nh = list(map(int, input().split()))\nif n == 1:\n    print('Yes')\nelse:\n    flag = True\n    for i in range(1, n):\n        if h[i] < h[i-1]:\n            if h[i] < h[i-1] - 1:\n                flag = False\n                break\n            else:\n                h[i] = h[i-1]\n    if flag:\n        print('Yes')\n    else:\n        print('No')\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n# Your code here!\n\n\nn = int(input())  # \u5c71\u306e\u6570\nh = list(map(int, input().split()))  # \u5c71\u306e\u9ad8\u3055\n\nif n == 1:  # \u5c71\u304c1\u3064\u306a\u3089\n    print('Yes')  # Yes\nelse:  # \u5c71\u304c2\u3064\u4ee5\u4e0a\u306a\u3089\n    flag = True  # \u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n    for i in range(1, n):  # 2\u756a\u76ee\u306e\u5c71\u304b\u3089\u6700\u5f8c\u306e\u5c71\u307e\u3067\n        if h[i] < h[i-1]:  # \u524d\u306e\u5c71\u3088\u308a\u5c0f\u3055\u3044\u306a\u3089\n            if h[i] < h[i-1] - 1:  # \u524d\u306e\u5c71\u304b\u30891\u4ee5\u4e0a\u5c0f\u3055\u3044\u306a\u3089\n                flag = False  # \u30d5\u30e9\u30b0\u3092\u5012\u3059\n                break  # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n            else:  # \u524d\u306e\u5c71\u304b\u30891\u4ee5\u4e0b\u5c0f\u3055\u3044\u306a\u3089\n                h[i] = h[i-1]  # \u524d\u306e\u5c71\u306e\u9ad8\u3055\u306b\u5408\u308f\u305b\u308b\n    if flag:  # \u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308b\u306a\u3089\n        print('Yes')  # Yes\n    else:  # \u30d5\u30e9\u30b0\u304c\u5012\u308c\u3066\u3044\u308b\u306a\u3089\n        print('No')  # No\n"
    }
  ],
  "created": 1650483968,
  "object": "edit"
}
2022-04-20 19:46:39.312317 fix syntax errors 2 ["# -*- coding: utf-8 -*-\n# A - Climbing Stairs\n# https://atcoder.jp/contests/abc055/tasks/abc055_a\n\nn = int(input())\nh = list(map(int, input().split()))\nif n == 1:\n    print('Yes')\nelse:\n    flag = True\n    for i in range(1, n):\n        if h[i] < h[i-1]:\n            if h[i] < h[i-1] - 1:\n                flag = False\n                break\n            else:\n                h[i] = h[i-1]\n    if flag:\n        print('Yes')\n    else:\n        print('No')\n", "# coding: utf-8\n# Your code here!\n\n\nn = int(input())  # 山の数\nh = list(map(int, input().split()))  # 山の高さ\n\nif n == 1:  # 山が1つなら\n    print('Yes')  # Yes\nelse:  # 山が2つ以上なら\n    flag = True  # フラグを立てる\n    for i in range(1, n):  # 2番目の山から最後の山まで\n        if h[i] < h[i-1]:  # 前の山より小さいなら\n            if h[i] < h[i-1] - 1:  # 前の山から1以上小さいなら\n                flag = False  # フラグを倒す\n                break  # ループを抜ける\n            else:  # 前の山から1以下小さいなら\n                h[i] = h[i-1]  # 前の山の高さに合わせる\n    if flag:  # フラグが立っているなら\n        print('Yes')  # Yes\n    else:  # フラグが倒れているなら\n        print('No')  # No\n"]
2022-04-20 19:46:39.312359 size on output set 2
