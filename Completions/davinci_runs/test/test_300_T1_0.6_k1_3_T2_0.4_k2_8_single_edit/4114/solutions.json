["import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef solve(info):\n    for Cx in range(101):\n        for Cy in range(101):\n            height = abs(Cx - info[0][0]) + abs(Cy - info[0][1]) + info[0][2]\n            flag = True\n            for x,y,h in info[1:]:\n                val = max(height - abs(Cx - x) - abs(Cy - y), 0)\n                if h == val:\n                    continue\n                else:\n                    flag = False\n                    break\n            if flag:\n                return Cx, Cy, height\n\ndef Main():\n    n = read_int()\n    info = [tuple(read_ints()) for _ in range(n)]\n    info.sort(key=lambda x: x[2], reverse=True)\n\n    print(*solve(info))\n\ndef __starting_point():\n    Main()\n__starting_point()", "N = int(input())\nxs, ys, hs = [],[],[]\nfor _ in range(N):\n    x,y,h = map(int,input().split())\n    if h != 0:\n        xx,yy,hh = x,y,h\n    xs.append(x)\n    ys.append(y)\n    hs.append(h)\nfor cx in range(101):\n    for cy in range(101):\n        H = hh+abs(xx-cx)+abs(yy-cy)\n        if all([hs[i] == max(0,H-abs(cx-xs[i])-abs(cy-ys[i])) for i in range(N)]):\n            print(cx,cy,H)\n            return", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[1]:\n\n\nN = int(input())\nxyh = []\nfor _ in range(N):\n    xyh.append(list(map(int, input().split())))\n\n\n# In[4]:\n\n\nxyh.sort(key=lambda x:x[2],reverse=True)\nans = []\nfor cx in range(101):\n    for cy in range(101):\n        x,y,h = xyh[0]\n        ch = h + abs(x-cx) + abs(y-cy)\n        if all([h == max(ch-abs(x-cx)-abs(y-cy),0) for x,y,h in xyh[1:]]):\n            ans = [cx,cy,ch]\n            break\n    else:\n        continue\n    break\nprint((*ans))\n\n\n# In[ ]:\n\n\n\n\n", "n = int(input())\n\nx = [0] * n\ny = [0] * n\nh = [0] * n\n\nfor i in range(n):\n    x[i], y[i], h[i] = map(int, input().split())\n\nfor cx in range(101):\n    for cy in range(101):\n        H = -1\n        for i in range(n):\n            if h[i] == 0:\n                pass\n            else:\n                tmp = h[i] + abs(x[i]-cx) + abs(y[i]-cy)\n                H = tmp\n                break\n        flag = True\n        for i in range(n):\n            if h[i] != max(H-abs(x[i]-cx)-abs(y[i]-cy),0):\n                flag = False\n                break\n        if flag:\n            print(cx,cy,H)", "n=int(input())\nxyh = [list(map(int,input().split())) for i in range(n)]\nxyh.sort(key=lambda x:x[2], reverse=True)\n\nansh=-1\nans=[[]]\nflag=True\nfor cx in range(0,101):\n  if flag==False:\n    break\n    \n  for cy in range(0,101):\n    ansh = 0\n    for pira in xyh:\n      if ansh==0:\n        ansh=pira[2]+(abs(cx-pira[0])+abs(cy-pira[1]))\n        ans[0]=[cx,cy,ansh]\n        \n      elif len(ans[0])>0 and max(ansh -(abs(cx-pira[0])+abs(cy-pira[1])), 0) != pira[2]:\n        ans[0]=[]\n    if len(ans[0])>0:\n      flag=False\n      break\nprint((*ans[0]))\n", "n=int(input())\n\nxl=[]\nyl=[]\nhl=[]\n\n\n\nfor i in range(n):\n    xx,yy,hh=list(map(int,input().split()))\n    xl.append(xx)\n    yl.append(yy)\n    hl.append(hh)\n\nfor cx in range(0,101):\n    for cy in range(0,101):\n        ok=True\n        for i in range(n):\n            x=xl[i]\n            y=yl[i]\n            h=hl[i]\n            if h!=0:\n                high = h + abs(x - cx) + abs(y - cy)\n                break\n\n        for i in range(n):\n            x=xl[i]\n            y=yl[i]\n            h=hl[i]\n            oh=max(high-abs(x-cx)-abs(y-cy),0)\n            if h!=oh:\n                ok=False\n                break\n        if ok:\n            print(cx,cy,high)\n            return", "import sys\nfrom itertools import product\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    X = [0] * N\n    Y = [0] * N\n    H = [0] * N\n    for i in range(N):\n        X[i], Y[i], H[i] = list(map(int, input().split()))\n\n    for Cx, Cy in product(list(range(101)), repeat=2):\n        Ch = set()\n        Ch_upper = float(\"inf\")\n        for x, y, h in zip(X, Y, H):\n            a = abs(x - Cx) + abs(y - Cy)\n            if h == 0:\n                Ch_upper = min(Ch_upper, a)\n            else:\n                Ch.add(h + a)\n        if len(Ch) != 1:\n            continue\n        else:\n            Ch = Ch.pop()\n            if Ch <= Ch_upper:\n                ans = f\"{Cx} {Cy} {Ch}\"\n                break\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nxyh=[list(map(int,input().split()))for _ in range(N)]\nhxy=[[h,x,y]for x,y,h in xyh]\nhxy.sort()\nfor X in range(101):\n    for Y in range(101):\n        h,x,y=hxy[-1]\n        H=h+abs(X-x)+abs(Y-y)\n        if all(h==max(H-abs(X-x)-abs(Y-y),0)for h,x,y in hxy):\n            print(X,Y,H)", "N = int(input())\nXYH_list = [list(map(int, input().split())) for i in range(N)]\nXYH_list = sorted(XYH_list, key=lambda x: x[2], reverse=True)\n\nfor xi in range(0, 101):\n    for yi in range(0, 101):\n        tmpH = 0\n        for k in range(N):\n            x,y,h = XYH_list[k]\n            if k == 0:\n                tmpH =h + abs(x - xi) + abs(y - yi)\n            if h == max((tmpH - abs(x - xi) - abs(y - yi)), 0):\n                if k == N - 1:\n                    ans = [str(xi), str(yi), str(tmpH)]\n                continue\n            else:\n                break\nprint(' '.join(ans))", "n = int(input())\nxyh = []\nfor i in range(n):\n    xyh.append(list(map(int, input().split())))\nxyh.sort(key = lambda x: x[2], reverse = True)\nfor i in range(101):\n    for j in range(101):\n        h = xyh[0][2] + abs(xyh[0][0] - i) + abs(xyh[0][1] - j)\n        flag = True\n        for k in range(1, n):\n            if xyh[k][2] == 0:\n                if abs(xyh[k][0] - i) + abs(xyh[k][1] - j) < h:\n                    flag = False\n                    break\n            else:\n                temp = xyh[k][2] + abs(xyh[k][0] - i) + abs(xyh[k][1] - j)\n                if h != temp:\n                    flag = False\n                    break\n        if flag == True and h >= 1:\n            print(i, j, h)\n            break\n    if flag == True:\n        break", "n = int(input())\nXYH = [list(map(int, input().split())) for _ in range(n)]\n#print(XYH)\n\nfor x1, y1, h1 in XYH:\n    if h1 > 0:\n        for Cx in range(101):\n            for Cy in range(101):\n                H = h1 + abs(x1 - Cx) + abs(y1 - Cy)\n                # print(Cx, Cy, H)\n                if all(h == max(H - abs(x - Cx) - abs(y - Cy), 0) for x, y, h in XYH):\n                  print(Cx, Cy, H)\n                  return", "n = int(input())\nP = []\nfor _ in range(n):\n  x, y, h = map(int, input().split())\n  P.append([h, x, y])\nP.sort(reverse=True)\n\nfor cx in range(101):\n  for cy in range(101):\n    H = P[0][0] + abs(P[0][1]-cx) + abs(P[0][2]-cy)\n    for i in range(1,n):\n      if max(H-abs(P[i][1]-cx)-abs(P[i][2]-cy), 0) != P[i][0]:\n        break\n    else:\n      print(cx, cy, H)\n      return", "n=int(input())\ninfo=[list(map(int,input().split())) for i in range(n)]\nfor cx in range(0,101):\n    for cy in range(0,101):\n        H=-10**20\n        lim=10**20\n        for l in info:\n            x,y,h=l \n            if h==0:\n                 lim=min(lim,abs(x-cx)+abs(y-cy))\n                 \n            else:\n                if H!=-10**20 and H!=abs(x-cx)+abs(y-cy)+h :break\n                H=abs(x-cx)+abs(y-cy)+h \n            if H>lim:break\n        else:\n            print(cx,cy,H);return", "n = int(input())\nhs = [list(map(int, input().split())) for _ in range(n)]\nhs.sort(key= lambda x: x[2], reverse = True)\n\ndef main():\n    for x in range(101):\n        for y in range(101):\n            height = hs[0][2] + abs(x-hs[0][0]) + abs(y-hs[0][1])\n            for i in range(1,n):\n                if max(height-(abs(x-hs[i][0]) + abs(y-hs[i][1])),0)== hs[i][2]:\n                    pass\n                else:\n                    break\n                \n                if i ==n-1:\n                    print(x,y,height)\n                    return x,y,height\nmain()", "n = int(input())\nxyh = [list(map(int, input().split())) for _ in range(n)]\n\ntest = [(x,y,h) for x,y,h in xyh if h > 0]\ntest = test[0]\nfor cx in range(101):\n    for cy in range(101):\n        # h > 0\u3067\u4e2d\u5fc3\u5ea7\u6a19\u306e\u9ad8\u3055\u3092\u898b\u7a4d\u3082\u308b\n        x,y,h = test\n        H = h + abs(x - cx) + abs(y - cy)\n\n        # \u5168\u30c7\u30fc\u30bf\u306b\u9069\u5408\u3059\u308b\u304b        \n        if all([max(H - abs(x - cx) - abs(y - cy), 0) == h for x,y,h in xyh]):\n            print(cx, cy, H)\n            return", "N = int(input())\n\nInfo = [[] for T in range(0,N)]\nfor I in range(0,N):\n    Info[I] = [int(T) for T in input().split()]\nInfo = sorted(Info,reverse=True,key=lambda X:X[2])\nfor CX in range(0,101):\n    for CY in range(0,101):\n        Flag  = True\n        BaseH = abs(Info[0][0]-CX)+abs(Info[0][1]-CY)+Info[0][2]\n        for I in range(1,N):\n            if max(BaseH-abs(Info[I][0]-CX)-abs(Info[I][1]-CY),0)!=Info[I][2]:\n                Flag = False\n                break\n        if Flag:\n            Ans = [str(CX),str(CY),str(BaseH)]\n            break\n    if Flag:\n        break\nprint(' '.join(Ans))", "n,*xyh = map(int,open(0).read().split())\na = sorted([(xyh[i*3],xyh[i*3+1],xyh[i*3+2]) for i in range(n)],key=lambda x:x[2],reverse=True)\nfor i in range(101):\n  for j in range(101):\n    dh = abs(a[0][0]-i)+abs(a[0][1]-j)+a[0][2]\n    for x,y,h in a[1:]:\n      if h != max(dh-abs(x-i)-abs(y-j),0):\n        break\n    else:\n      print(i,j,dh)\n      return", "N = int(input())\nP = [list(map(int,input().split())) for n in range(N)]\nx,y,h = list(filter(lambda x:x[2],P))[0]\n\nfor i in range(101):\n  for j in range(101):\n    H = h+abs(x-i)+abs(y-j)\n    if all(max(H-abs(t[0]-i)-abs(t[1]-j),0)==t[2] for t in P):\n      print(i,j,H)", "# \u521d\u671f\u5165\u529b\nimport sys\ninput = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nN = int(input())\nxyh =[0]*N\nh_list =[0]*N\n\nfor i in range(N):\n    x,y,h= (int(i) for i in input().split())\n    xyh[i] =x,y,h\n    h_list[i] =h\n\nfrom bisect import bisect_right\nxyh.sort(key =lambda x:x[2])\nh_list.sort()\nind =bisect_right(h_list,0)\nfrom collections import defaultdict\nH =defaultdict(set)\n\nfor x,y,h in xyh[ind:]:\n    for cx in range(101):\n        for cy in range(101):\n            xx =x -cx\n            yy =y -cy\n            if cx <=x and cy <=y:\n                H[(cx,cy)].add( (h +xx +yy) )\n            elif cx >x and cy <=y:\n                H[(cx,cy)].add( (h -xx +yy) )\n            elif cx <=x and cy >y:\n                H[(cx,cy)].add( (h +xx -yy) )\n            elif cx >x and cy >y:\n                H[(cx,cy)].add( (h -xx -yy) )\n            \n#print(xyh)\n#H.sort(key =lambda x:x[1])\nif len(xyh[ind:]) ==1:\n    print(*xyh[-1])\nelse:\n    for k,v in H.items():\n    \n        if len(v)==1:\n            vv =v.pop()\n            if 0 <= vv :\n                print(*k,vv)\n            elif vv <0:\n                print(*k,0)", "#\n# abc112 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\"\"\"\n        output = \"\"\"2 2 6\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"2\n0 0 100\n1 1 98\"\"\"\n        output = \"\"\"0 0 100\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"3\n99 1 191\n100 1 192\n99 0 192\"\"\"\n        output = \"\"\"100 0 193\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_4(self):\n        input = \"\"\"4\n59 3 0\n64 94 56\n5 62 11\n3 93 14\"\"\"\n        output = \"\"\"55 80 79\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N = int(input())\n    XYH = [list(map(int, input().split())) for _ in range(N)]\n    XYH.sort(key=lambda x: x[2], reverse=True)\n\n    CX = CY = H = 0\n    flag = False\n    for cx in range(101):\n        if flag == True:\n            break\n        for cy in range(101):\n            H = XYH[0][2]+abs(XYH[0][0]-cx)+abs(XYH[0][1]-cy)\n            for xyh in XYH[1:]:\n                x, y, h = xyh\n                if h != max(H - abs(x-cx) - abs(y-cy), 0):\n                    break\n            else:\n                flag = True\n                CX = cx\n                CY = cy\n                break\n\n    print(f\"{CX} {CY} {H}\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "N = int(input())\nl = []\nfor i in range(N):\n  l.append(list(map(int, input().split())))\n  \nfor x in range(101):\n  for y in range(101):\n    flag = True\n    for i in range(N):\n      if l[i][2]>0:\n        tmp = abs(x-l[i][0])+abs(y-l[i][1])+l[i][2]\n        break\n    for i in range(N):\n      if l[i][2] != max(tmp-abs(x-l[i][0])-abs(y-l[i][1]), 0):\n        flag = False\n        break\n    if flag:\n      print(x, y, tmp)\n      return", "def resolve():\n    n=int(input())\n    xyh=[list(map(int,input().split())) for _ in range(n)]\n    xyh.sort(key=lambda x:x[2],reverse=True)\n    ans=[]\n    for cx in range(101):\n        for cy in range(101):\n            x,y,h=xyh[0]\n            ch=h+abs(x-cx)+abs(y-cy)\n            if all([h==max(ch-abs(x-cx)-abs(y-cy),0) for x,y,h in xyh[1:]]):\n                ans=[cx,cy,ch]\n                break\n    print(*ans)\nresolve()", "N = int(input())\np = [0] * N\nfor i in range(N):\n    p[i] = list(map(int, input().split()))\n\nfor i in range(N):\n    if p[i][2] > 0:\n        pp = p[i]\n\nf = 0\n\nfor i in range(101):\n    for j in range(101):\n        H = pp[2] + abs(i - pp[0]) + abs(j - pp[1])\n        for k in range(N):\n            #print(i, j ,k)\n            if p[k][2] != max(H - abs(i - p[k][0]) - abs(j - p[k][1]), 0):\n                break\n            if k == (N - 1):\n                xa = i\n                ya = j\n                Ha = H\n                f = 1\n                break\n        if f == 1:\n            break\n    if f == 1:\n        break\n\n\nprint(xa, ya, Ha)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\ndef main():\n    n = i_input()\n    l = [i_list() for i in range(n)]\n\n    L = []\n\n    for i in l:\n        if i[2] != 0:\n            L.append(i)\n    if len(L) == 1:\n        print((\" \".join(map(str, L[0]))))\n        return\n\n    for x in range(101):\n        for y in range(101):\n            H = L[0][2] + abs(x-L[0][0]) + abs(y-L[0][1])\n            flg = True\n            for x1, y1, h1 in L[1:]:\n                if h1 == 0:\n                    pass\n                if H != h1 + abs(x-x1) + abs(y-y1):\n                    flg = False\n                    break\n            if flg == True:\n                ans = [x,y]\n    H = L[0][2] + abs(ans[0]-L[0][0]) + abs(ans[1]-L[0][1])\n    print((\" \".join(map(str, ans)) +\" \"+str(H)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nxyh = [list(map(int, input().split())) for _ in range(n)]\nxyh.sort(key=lambda x: x[2], reverse=True)\nans = []\n\nfor cx in range(101):\n    for cy in range(101):\n        x, y, h = xyh[0]\n        ch = h + abs(x - cx) + abs(y - cy)\n        if all([h == max(ch - abs(x - cx) - abs(y - cy), 0) for x, y, h in xyh[1:]]):\n            ans = [cx, cy, ch]\n            break\nprint(*ans, sep=' ')", "n = int(input())\nx_list = []\ny_list = []\nh_list = []\n\nfor i in range(n):\n    a, b, c = list(map(int, input().split()))\n    x_list.append(a)\n    y_list.append(b)\n    h_list.append(c)\n\nk = h_list.index(max(h_list))\n\nfor x in range(101):\n    for y in range(101):\n        h_max = h_list[k] + abs(x_list[k] - x) + abs(y_list[k] - y)\n        \n        for j in range(n):\n            if h_list[j] == 0 :\n                if h_max - (abs(x_list[j] - x) + abs(y_list[j] - y)) > 0 :\n                    h_max = -1\n            else:\n                if h_max != abs(x_list[j] - x) + abs(y_list[j] - y) + h_list[j]:\n                    h_max = -1\n        \n        if h_max != -1:\n            print((str(x)+' '+str(y)+ ' '+ str(h_max)))\n            break\n", "n = int(input())\nif n == 1:\n    x, y, h = map(int, input().split())\n    print(x, y, h)\n    return\ns = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(101):\n    for j in range(101):\n        h = -1\n        ok = 1\n        for t in s:\n            if t[2] == 0:\n                ok += 1\n            elif h == -1:\n                h = abs(t[0] - i) + abs(t[1] - j) + t[2]\n            else:\n                h0 = abs(t[0] - i) + abs(t[1] - j) + t[2]\n                if h == h0:\n                    ok += 1\n        if ok == n:\n            for t in s:\n                if abs(t[0] - i) + abs(t[1] - j) <= h:\n                    if not h == abs(t[0] - i) + abs(t[1] - j) + t[2]:\n                        ok = 0\n                else:\n                    if not t[2] == 0:\n                        ok = 0\n            if ok == n:\n                print(i, j, h)\n                return", "n = int(input())\nab = [list(map(int, input().split())) for _ in range(n)]\n\nfor _ in range(0,n):\n    if ab[_][2] !=0:\n        x = ab[_][0]\n        y = ab[_][1]\n        h = ab[_][2]\n        break\n\nfor i in range(101):\n    for j in range(101):\n        f = True\n        l = abs(i-x)+abs(j-y)+h\n        for k in range(0,n):\n            dx = ab[k][0]\n            dy = ab[k][1]\n            dh = ab[k][2]\n            if max(l-abs(i-dx)-abs(j-dy),0) ==dh:\n                pass\n            else:\n                f = False\n        if f:\n            ansx =i\n            ansy =j\n            ansr = l\n            break\nprint(str(ansx)+\" \"+str(ansy)+\" \"+str(ansr))", "N=int(input())\nhyx=[list(map(int,input().split()))[::-1]for _ in range(N)]\nR=range(101)\nfor X in R:\n    for Y in R:\n        h,y,x=max(hyx)\n        H=h+abs(X-x)+abs(Y-y)\n        if all(h==max(H-abs(X-x)-abs(Y-y),0)for h,y,x in hyx):\n            print(X,Y,H)", "#!/usr/bin/env python3\n\n\n\ndef solve(n,queries):\n    def calcTopHeight(h,x,y,cx,cy):\n        return h + abs(x-cx) + abs(y-cy)\n    def calcHeight(h,x,y,cx,cy):\n        return max(h - abs(x-cx) - abs(y-cy), 0)\n    cand = [query for query in queries if query[2] != 0][0]\n    for cx in range(101):\n        for cy in range(101):\n            cnt = 0\n            probHeight = calcTopHeight(cand[2],cand[0],cand[1],cx,cy)\n            for query in queries:\n                x,y,h = query\n                if calcHeight(probHeight,x,y,cx,cy) == h:\n                    cnt += 1\n            if cnt == n:\n                return cx,cy,probHeight\n    return -1,-1,-1\n\n\ndef main():\n    N = int(int(input()))\n    queries = [list(map(int,input().split())) for _ in range(N)]\n    print((*solve(N,queries)))\n    return\n    # write c\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n\tN = int(input())\n\tinfo = []\n\tfor i in range(N):\n\t\tx, y, h = [int(a) for a in input().split(\" \")]\n\t\tinfo.append({\"x\": x, \"y\": y, \"h\": h})\n\tinfo.sort(key=lambda f: -f[\"h\"])\n\tfor cx in range(101):\n\t\tfor cy in range(101):\n\t\t\tH = 0\n\t\t\tfor i in range(len(info)):\n\t\t\t\th = info[i][\"h\"] + abs(info[i][\"x\"] - cx) + abs(info[i][\"y\"] - cy)\n\t\t\t\tif i == 0:\n\t\t\t\t\tH = h\n\t\t\t\telse:\n\t\t\t\t\tif h != H:\n\t\t\t\t\t\tif (info[i][\"h\"] == 0 and h < H) or (info[i][\"h\"] > 0):\n\t\t\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tprint(cx, cy, H)\n\t\t\t\treturn 0\n\tif info[0][\"x\"] in [0, 100] and info[0][\"y\"] in [0, 100]:\n\t\tprint(info[0][\"x\"], info[0][\"y\"], info[0][\"h\"])\n\t\treturn 0\n\nmain()", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = [LI() for i in range(N)]\n    \n    for x in range(101):\n        for y in range(101):\n            max_num = float('inf')\n            ans = 0\n            res = True\n            for xn, yn, hn in L:\n                if hn == 0:\n                    max_num = min(max_num, abs(x-xn)+abs(y-yn))\n                    if max_num == 0:\n                        res = False\n                        break\n                else:\n                    temp = abs(x-xn)+abs(y-yn)+hn\n                    if ans != 0 and ans != temp:\n                        res = False\n                        break\n                    else:\n                        ans = temp\n            if (max_num >= 2 and ans == 0) or ans > max_num:\n                res = False\n\n            if res:\n                if ans != 0:\n                    print(x,y,ans)\n                else:\n                    print(x,y,1)\n                return\n    \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "import sys\nN = int(input())\nls = []\nfor i in range(N):\n    x,y,h = map(int,input().split())\n    ls.append([x,y,h])\nls.sort(key=lambda x: -x[2])\n\nfor i in range(0,101):\n    for j in range(0,101):\n        f = True\n        H = ls[0][2]+abs(i-ls[0][0])+abs(j-ls[0][1])\n        for k in range(1,N):\n            if ls[k][2] != 0:\n                H1 = ls[k][2]+abs(i-ls[k][0])+abs(j-ls[k][1])\n                if H1 != H:\n                    f = False\n                    break\n            else:\n                if H > abs(i-ls[k][0])+abs(j-ls[k][1]):\n                    f = False\n                    break\n        if f:\n            print(i,j,H)\n            return", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\n\nn = INT()\nx = [0]*n\ny = [0]*n\nh = [0]*n\n\nfor i in range(n):\n    x[i], y[i], h[i] = MAP()\n\nfor i in range(101):\n    for j in range(101):\n        H = 0\n        for k in range(n):\n            if h[k] != 0:\n                if H == 0 or H == h[k] + abs(x[k]-i) + abs(y[k]-j):\n                    H = h[k] + abs(x[k]-i) + abs(y[k]-j)\n                else:\n                    break\n        else:\n            for k in range(n):\n                if h[k] == 0:\n                    if H - abs(x[k]-i) - abs(y[k]-j) <= 0:\n                        continue\n                    else:\n                        break\n            else:\n                print(i,j,H)", "n = int(input())\n\nxy = [[-1 for i in range(101)] for j in range(101)]\n\nx = []\ny = []\nh = []\nfor i in range(n):\n  xx, yy, hh = map(int, input().split())\n  x.append(xx)\n  y.append(yy)\n  h.append(hh)\n  if hh > 0:\n    x0, y0, h0, = xx, yy, hh\n\nfor i in range(101):\n  for j in range(101):\n    flg = 0\n    tmp = h0 + abs(x0-i) + abs(y0-j)\n    for k in range(n):\n      if h[k] != max(tmp - abs(x[k]-i) - abs(y[k]-j),0):\n        flg = 1\n        break\n    if flg == 0:\n      print (i,j,tmp)\n      return", "n = int(input())\nxyh = []\nx0, y0, h0 = None, None, None\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    if h > 0 and x0 is None:\n        x0, y0, h0 = x, y, h\n    xyh.append([x, y, h])\n\nfor cx in range(101):\n    for cy in range(101):\n        h = h0 + abs(x0 - cx) + abs(y0 - cy)\n        done = True\n        for xk, yk, hk in xyh:\n            h_ = max(h - abs(xk - cx) - abs(yk - cy), 0)\n            if h_ != hk:\n                done = False\n                break\n        if done:\n            print(f'{cx} {cy} {h}')", "N=int(input())\nhyx=[list(map(int,input().split()))[::-1]for _ in range(N)]\nR=range(101)\nfor X in R:\n    for Y in R:\n        h,y,x=max(hyx)\n        H=h+abs(X-x)+abs(Y-y)\n        if all(h==max(H-abs(X-x)-abs(Y-y),0)for h,y,x in hyx):\n            print(X,Y,H)", "import sys\nfrom heapq import heappush, heappop\ndef input(): return sys.stdin.readline().rstrip()\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(mi())\n\n\ndef main():\n    n = ii()\n    x = [0]*n\n    y = [0]*n\n    h = [0]*n\n    for i in range(n):\n        x[i], y[i], h[i] = mi()\n    idx = h.index(max(h))\n    for cx in range(101):\n        for cy in range(101):\n            flag = True\n            H = abs(cx-x[idx])+abs(cy-y[idx])+h[idx]\n            for i in range(n):\n                tmp = abs(cx-x[i])+abs(cy-y[i])\n                if h[i] == 0:\n                    flag &= (tmp >= H)\n                else:\n                    tmp += h[i]\n                    flag &= (tmp==H)\n            if flag:\n                print(cx, cy, H)\n                return\n            \n            \n        \n        \n\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\n\nans = [[cx, cy, -1] for cx in range(101) for cy in range(101)]\nzeroes = []\n\nfor i in range(n):\n    x, y, h = list(map(int, input().split()))\n\n    if h > 0:\n        delete = []\n\n        for j in range(len(ans)):\n            cx, cy, ch = ans[j]\n\n            calcH = h + abs(x-cx) + abs(y-cy)\n            if ch == -1:\n                ans[j][2] = calcH\n            else:\n                if ch != calcH:\n                    delete.append(j)\n\n        while len(delete) > 0:\n            del ans[delete.pop()]\n    else:\n        zeroes.append([x, y])\n\nfor x, y in zeroes:\n    delete = []\n\n    for j in range(len(ans)):\n        cx, cy, ch = ans[j]\n\n        if ch - abs(x-cx) - abs(y-cy) > 0:\n            delete.append(j)\n\n    while len(delete) > 0:\n        del ans[delete.pop()]\n\nprint(\" \".join(map(str, ans[0])))", "N = int(input())\nxyh = [list(map(int,input().split())) for n in range(N)]\nxyh.sort(key=lambda x:x[2],reverse=True)#\u9ad8\u5ea6\uff11\u3067\u306a\u3044\u60c5\u5831\u304b\u3089\u9ad8\u3055\u5b9a\u3081\u308b\u305f\u3081\nfor X in range(0,101):\n    for Y in range(0,101):\n        H = xyh[0][2] + abs(xyh[0][0]-X) + abs(xyh[0][1]-Y)\n        for i in range(1,N):\n            x,y,h = xyh[i]\n            if h != max(H - abs(x-X) -abs(y-Y),0):\n                break\n        else:\n            print(X,Y,H)\n            break", "# -*- coding: utf-8 -*-\n\ndef getH(x, cx, y, cy, h):\n    return h + abs(x-cx) + abs(y-cy)\n\nN = int(input())\nconditions = []\nfor i in range(N):\n    x,y,h = map(int, input().split())\n    if h > 0:\n        conditions.append([x,y,h])\n\nnum_cnd = len(conditions)\nif num_cnd==1:\n    print(conditions[0][0],conditions[0][1],conditions[0][2])\n    return\n\nfor cx in range(101):\n    for cy in range(101):\n        cnt = 0\n        h = 0\n        for i,cnd in enumerate(conditions):\n            h_tmp = getH(cnd[0], cx, cnd[1], cy, cnd[2])\n            if h_tmp >= 1:\n                if i==0:\n                    h = h_tmp\n                    cnt += 1\n                elif h == h_tmp:\n                    cnt += 1\n                    if cnt == num_cnd:\n                        print(cx,cy,h)\n                        return\n                else:\n                    break\n            else:\n                break\n        \n\nprint('No')", "import sys\n\ninput = sys.stdin.readline\nN = int(input())\npiramids = []\nfor _ in range(N):\n    x, y, h = map(int, input().split())\n    piramids.append((x, y, h))\n\nfor cx in range(101):\n    for cy in range(101):\n        h_cands = set()\n        for x, y, h in piramids:\n            if h == 0:\n                continue\n            cand = h + abs(x - cx) + abs(y - cy)\n            h_cands.add(cand)\n\n        # \u5236\u7d04\u3068\u3057\u3066\u5fc5\u305a\u7279\u5b9a\u3067\u304d\u308b\n        if len(h_cands) == 1:\n            for x, y, h in piramids:\n                if h != max(cand - abs(x - cx) - abs(y -cy), 0):\n                    break\n            else:\n                print(cx, cy, cand)\n                return", "n = int(input())\nXYH = sorted([list(map(int, input().split())) for _ in range(n)], key=lambda x: -x[2])\n\nfor x in range(101):\n    for y in range(101):\n        hmax = XYH[0][2] + abs(x-XYH[0][0]) + abs(y-XYH[0][1])\n        for i in range(n):\n            if max(hmax-abs(x-XYH[i][0])-abs(y-XYH[i][1]), 0) != XYH[i][2]:\n                break\n            if i==n-1:\n                print(x, y, hmax)\n                return", "N=int(input())\nL=[list(map(int,input().split())) for i in range(N)]\nL.sort(key=lambda x:x[2],reverse=True)\nfor i in range(101):\n  for j in range(101):\n    s=L[0][2]+abs(i-L[0][0])+abs(j-L[0][1])\n    for l in L[1:]:\n      h=l[2]+abs(i-l[0])+abs(j-l[1])\n      if s==h:\n        continue\n      elif l[2]==0 and s<h:\n        continue\n      else:\n        break\n    else:\n      print(i,j,s)\n      return", "n = int(input())\nxyh = [list(map(int, input().split())) for _ in range(n)]\n\nfor i in range(101):\n    for j in range(101):\n        s = -1\n        flag = True\n        limit = float('inf')\n        for x, y, h in xyh:\n            if h != 0:\n                H = h + abs(x-i) + abs(y-j)\n                if s != -1:\n                    if s != H:\n                        flag = False\n                        break\n                s = H\n            else:\n                limit = min(limit, abs(x-i) + abs(y-j))\n        if flag:\n            if s != -1 and s <= limit:\n                print(i, j, s)\n                return\n            elif s <= limit and limit == 1:\n                print(i, j, 1)\n                return", "import sys\nn = int(input())\nxyh = [list(map(int, input().split())) for i in range(n)]\ncnt = 0\nfor i in range(n):\n  if xyh[i][2] != 0:\n    cnt += 1\nif cnt == 1:\n  for i in range(n):\n    if xyh[i][2] != 0:\n      print(\" \".join(list(map(str, xyh[i]))))\n      return\nfor i in range(101):\n  for j in range(101):\n    x = []\n    for k in range(n):\n      if xyh[k][2] != 0:\n        x.append(abs(xyh[k][0]-i)+abs(xyh[k][1]-j)+xyh[k][2])\n    if len(set(x)) == 1:\n      print(i, j, x[0])", "N=int(input())\ninfo=[]\nfor i in range(N):\n  info.append(list(map(int,input().split())))\ninfo=list(filter(lambda x:x[2]!=0,info))\nxy_00=max(map(lambda x:x[2]-(x[0]+x[1]),info))\nxy_10=max(map(lambda x:x[2]-((100-x[0])+x[1]),info))\nxy_01=max(map(lambda x:x[2]-(x[0]+(100-x[1])),info))\nxy_11=max(map(lambda x:x[2]-((100-x[0])+(100-x[1])),info))\n\ncx1=(-xy_00+xy_10+100)//2\ncx2=(-xy_01+xy_11+100)//2\ncy1=(-xy_00+xy_01+100)//2\ncy2=(-xy_10+xy_11+100)//2\nflag=False\nfor cx in [cx1,cx2]:\n  for cy in [cy1,cy2]:\n    ch=info[0][2]+(abs(info[0][0]-cx)+abs(info[0][1]-cy))\n    for i in info:\n      if not ch==i[2]+abs(cx-i[0])+abs(cy-i[1]):\n        break\n    else:\n      print(f\"{cx} {cy} {ch}\")\n      flag=True\n      break\n  if flag==True:\n    break", "N = int(input())\n\nxyh = []\nfor i in range(N):\n    xyh.append(list(map(int,input().split())))\n\nxyh_sorted = sorted(xyh, key=lambda x: x[2], reverse=True)\n\nanswer = [0, 0, 0]\nfor cy in range(0, 101):\n    for cx in range(0, 101):\n        H = xyh_sorted[0][2] + abs(xyh_sorted[0][0] - cx) + abs(xyh_sorted[0][1] - cy)\n        flag = True\n        for i in range(1,N):\n            h2 = max(H - abs(xyh_sorted[i][0] - cx) - abs(xyh_sorted[i][1] - cy), 0)\n            if h2 != xyh_sorted[i][2]:\n                flag = False\n                break\n        if flag:\n            answer = [cx, cy, H]\n            break\n    if flag:\n        break\n\nanswerString = str(answer[0]) + \" \" + str(answer[1]) + \" \" + str(answer[2])\nprint(answerString)", "def dist(h,xi, yi, cx, cy):\n    return h + abs(xi - cx) + abs(yi - cy)\n\nN = int(input())\nP = []\nfor i in range(N):\n    xi, yi, h= map(int, input().split())\n    P.append([h, xi, yi])\nP.sort(reverse = True)\n\nfor i in range(101):\n    for j in range(101):\n        H = dist(P[0][0], P[0][1], P[0][2],i, j)\n        for p in P[1:]:\n            if max(H - abs(p[1]-i)-abs(p[2]-j), 0) != p[0]:\n                break\n        else:\n            print(i, j, H)\n            break", "N = int(input())\n\nXYs = []\nfor _ in range(N):\n  XYs.append(list(map(int, input().split())))\n  \nfor i in range(101):\n  for j in range(101):\n    f = 1\n    for k in range(N):\n      if XYs[k][2] > 0:\n        h = XYs[k][2] + abs(XYs[k][0]-i) + abs(XYs[k][1]-j)\n        break\n    for k in range(N):\n      if max(h - abs(XYs[k][0]-i) - abs(XYs[k][1]-j), 0) != XYs[k][2]:\n        f = 0\n        break\n    if f == 1:\n      print(i,j,h)\n      return", "n = int(input())\na = []\nfor i in range(n):\n    _ = list(map(int, input().split()))\n    a.append(_)\na = sorted(a, key=lambda x:x[2],reverse = True)\n\ncheck = False\n    \nfor i in range(101):\n    for j in range(101):\n        b = 0\n        while b < n:\n            if b == 0:\n                h = abs(i - a[b][0]) + abs(j - a[b][1]) + a[b][2]\n                b +=1\n            else:\n                de = max(h - abs(i - a[b][0]) - abs(j - a[b][1]),0)\n                if de == a[b][2]:\n                    b+=1\n                else:\n                    break\n        if b == n:\n            ans = str(i) + ' ' + str(j) + ' ' +str(h)\n            check = True\n        if check:\n            break\n    if check:\n        break\nprint(ans)\n", "n=int(input())\nxyh=[]\nfor i in range(n):\n  x,y,h=map(int,input().split())\n  xyh.append([h,x,y])\nxyh.sort(reverse=True)\nans=0\n\nfor cx in range(101):\n  for cy in range(101):\n    for N in range(n):\n      if abs(xyh[0][1]-cx)+abs(xyh[0][2]-cy)+xyh[0][0]>0:\n        H=abs(xyh[0][1]-cx)+abs(xyh[0][2]-cy)+xyh[0][0]\n      else:\n        break\n      if xyh[N][0]!=max(H-abs(xyh[N][1]-cx)-abs(xyh[N][2]-cy),0):\n        break\n      if N == n-1:\n        ans=[cx,cy,H]\nprint(*ans)", "n=int(input())\nalist=[list(map(int, input().split())) for i in range(n)]\nalist.sort(key=lambda x:x[2],reverse=True)\nfor i in range(101):\n  for j in range(101):\n    h=abs(alist[0][0]-i)+abs(alist[0][1]-j)+alist[0][2]\n    ans=True\n    for k in range(n):\n      if max((h-abs(alist[k][0]-i)-abs(alist[k][1]-j)),0)!=alist[k][2]:\n        ans=False \n    if ans:\n      ansx=i\n      ansy=j\n      ansh=h\nprint(ansx,ansy,ansh)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N = I()\n\n    # max\u306e\u9006\u6f14\u7b97\u306e\u305f\u3081\u3001h\u304c0\u306a\u3082\u306e\u3068\u305d\u3046\u3067\u306a\u3044\u3082\u306e\u306b\u5206\u985e\n    xyh_0 = []\n    xyh_not0 = []\n    for _ in range(N):\n        xyh = LI()\n        if xyh[2] == 0:\n            xyh_0.append(xyh)\n        else:\n            xyh_not0.append(xyh)\n\n    for cx, cy in itertools.product(list(range(101)), list(range(101))):\n        H = []\n        for x, y, h in xyh_not0:\n            H.append(h + abs(x - cx) + abs(y - cy))\n        # h\u304c0\u3067\u306a\u3044\u3082\u306e\u3067OK\u3060\u3063\u305f\u3089\u3001h\u304c0\u306e\u3082\u306e\u3067\u8fbb\u8904\u304c\u4f1a\u3046\u304b\u3069\u3046\u304b\u898b\u308b\n        if len(set(H)) == 1:\n            is_ok = True\n            for x, y, h in xyh_0:\n                if max(H[0] - abs(x - cx) - abs(y - cy), 0) != 0:\n                    is_ok = False\n            if is_ok:\n                ans = (cx, cy, H[0])\n\n    print((*ans))\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "N=int(input())\nl=[list(map(int,input().split())) for i in range(N)]\nfor i,j,k in l:\n   if k>0:\n      fx,fy,fh=i,j,k\nfor i in range(0,101):#x\n   for j in range(0,101):#y\n      sw=0\n      cer_h=fh+abs(fx-i)+abs(fy-j)\n      for x,y,h in l:\n         if max(cer_h-abs(i-x)-abs(j-y),0)!=h:\n            sw=1\n            break\n      if sw==0:\n         print(i,j,cer_h)\n         return", "def dist(a, b, x, y, h):\n    return h + abs(a - x) + abs(b - y)\n\nN = int(input())\nP = []\nfor i in range(N):\n    x, y, h = map(int, input().split())\n    P.append([h, x, y])\nP.sort(reverse = True)\n\nfor i in range(101):\n    for j in range(101):\n        H = dist(i, j, P[0][1], P[0][2], P[0][0])\n        for p in P[1:]:\n            if max(H - abs(p[1]-i)-abs(p[2]-j), 0) != p[0]:\n                break\n        else:\n            print(i, j, H)\n            break", "n = int(input())\ncoords = [tuple(map(int, input().split())) for i in range(n)]\nfor xt, yt, ht in coords:\n    if ht != 0:\n        break\nx, y, h = -1, -1, -1\nfor px in range(101):\n    for py in range(101):\n        flag = True\n        htmp = ht + abs(px-xt) + abs(py-yt)\n        dxdy = [(abs(px-x1)+abs(py-y1), htmp-h1) for x1, y1, h1 in coords]\n        dxdy.sort()\n        for i in range(n-1):\n            if dxdy[i][0] < dxdy[i+1][0] and dxdy[i][1] > dxdy[i+1][1]:\n                flag = False\n                break\n        for x1, y1, h1 in coords:\n            #print (px, py, htmp, x1, y1, h1)\n            if h1 == 0:\n                continue\n            if abs(htmp-h1) != abs(px-x1) + abs(py-y1):\n                flag = False\n                break\n        if flag:\n            if htmp > h:\n                h = htmp\n                x = px\n                y = py\nprint (x, y, h)", "N = int(input())\nxyh = [list(map(int,input().split())) for i in range(N)]\nf = False\nfor x in range(101):\n    for y in range(101):\n        for i in range(N):\n            if xyh[i][2] != 0:\n                H = abs(xyh[i][0]-x) + abs(xyh[i][1]-y) + xyh[i][2]\n                break\n        for i in range(N):\n            if xyh[i][2] == 0 and H - abs(xyh[i][0]-x) - abs(xyh[i][1]-y) > 0:\n                break\n            if xyh[i][2] != 0 and H != abs(xyh[i][0]-x) + abs(xyh[i][1]-y) + xyh[i][2]:\n                break\n        else:\n            f = True\n            break\n    if f:\n        break\nprint(x,y,H)", "N = int(input())\nl = [list(map(int, input().split())) for i in range(N)]\nl.sort(key=lambda x: x[2], reverse=True)\n\nfor i in range(101):\n    for j in range(101):\n        h = l[0][2] + abs(i - l[0][0]) + abs(j - l[0][1])\n        for k in range(N):\n            tmp = max(h - abs(i - l[k][0]) - abs(j - l[k][1]), 0)\n            if tmp != l[k][2]:\n                break\n            elif k == N-1:\n                X = i\n                Y = j\n                H = h\nprint(X,Y,H)", "N=int(input())\nxyh=[list(map(int,input().strip().split())) for _ in range(N)]\n\ndp=[[-1 for i in range(101)] for j in range(101)]\nfor n in range(N):\n    dp[xyh[n][0]][xyh[n][1]]=xyh[n][2]\n\ndef find_top(x,y,N,xyh):\n    find=True\n    prev=-1\n    for n in range(N):\n        if xyh[n][2]!=0:\n            top=xyh[n][2]+abs(xyh[n][0]-x)+abs(xyh[n][1]-y)\n            if prev==-1:\n                prev=top\n            else:\n                if prev!=top:\n                    find=False\n                    break\n    return find,top\n\ndef check_top(x,y,top,N,xyh):\n    check=True\n    for n in range(N):\n        if xyh[n][2]==0:\n            if top-abs(xyh[n][0]-x)-abs(xyh[n][1]-y)>0:\n                check=False\n                break\n    return check\n\nfin=False\nfor x in range(101):\n    if fin==True:\n        break\n    for y in range(101):\n        find=find_top(x,y,N,xyh)[0]\n        height=find_top(x,y,N,xyh)[1]\n        if find and height>=1 and check_top(x,y,height,N,xyh):\n            print(\"{} {} {}\".format(x,y,height))\n            fin=True"]