2022-04-20 19:20:18.684391 num operations 1
2022-04-20 19:20:18.684420 size on input set 1
2022-04-20 19:20:18.684585 using api key jaanu
2022-04-20 19:20:26.262635 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n, m):\n    return n * m + 1\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n\ndef solve(n, m):\n\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n\ndef test_solve():\n    assert solve(2, 3) == 6\n    assert solve(100, 100) == 10000\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python\n\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650482418,
  "object": "edit"
}
2022-04-20 19:20:26.262946 fix syntax errors 8 ["\n\nimport sys\n\ndef solve(n, m):\n    return n * m + 1\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef solve(n, m):\n\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n\ndef test_solve():\n    assert solve(2, 3) == 6\n    assert solve(100, 100) == 10000\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:20:26.262992 size on output set 7
2022-04-20 19:20:26.263005 num operations 1
2022-04-20 19:20:26.263010 size on input set 1
2022-04-20 19:20:26.263167 using api key soukgp
2022-04-20 19:20:32.848769 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\nprint(2 ** (n + m) - 2 ** ((n + m) // 2)) if (n + m) % 2 == 0 else print(2 ** (n + m))\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\n\nif n % 2 == 0:\n    print(2 ** n - 2 ** (n // 2))\nelse:\n    print(2 ** n)\n"
    },
    {
      "index": 4,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 7,
      "text": "\nn, m = map(int, input().split())\n\nprint(2 ** (n + m) - 2 ** ((n + m) // 2) if (n + m) % 2 == 0 else 2 ** (n + m))\n"
    }
  ],
  "created": 1650482426,
  "object": "edit"
}
2022-04-20 19:20:32.849095 fix syntax errors 8 ['\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\n\nn, m = map(int, input().split())\n\nprint(2 ** (n + m) - 2 ** ((n + m) // 2)) if (n + m) % 2 == 0 else print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\n\nn = int(input())\n\nif n % 2 == 0:\n    print(2 ** n - 2 ** (n // 2))\nelse:\n    print(2 ** n)\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nprint(2 ** (n + m) - 2 ** ((n + m) // 2) if (n + m) % 2 == 0 else 2 ** (n + m))\n']
2022-04-20 19:20:32.849139 size on output set 4
2022-04-20 19:20:32.849155 num operations 1
2022-04-20 19:20:32.849164 size on input set 1
2022-04-20 19:20:32.849387 using api key gabby
2022-04-20 19:20:32.889550 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:20:34.391442 using api key soukgp
2022-04-20 19:20:38.969671 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 4,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 7,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    }
  ],
  "created": 1650482434,
  "object": "edit"
}
2022-04-20 19:20:38.970057 fix syntax errors 8 ['\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n']
2022-04-20 19:20:38.970098 size on output set 1
