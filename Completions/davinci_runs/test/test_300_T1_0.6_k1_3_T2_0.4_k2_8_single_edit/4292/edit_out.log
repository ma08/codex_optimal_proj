2022-04-20 19:21:41.470660 num operations 1
2022-04-20 19:21:41.470676 size on input set 1
2022-04-20 19:21:41.470857 using api key gabby
2022-04-20 19:21:41.596911 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:21:43.098775 using api key jaanu
2022-04-20 19:22:34.413617 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 3,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 4,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 5,
      "text": "\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\nprint(sum(A[:K]))\n"
    },
    {
      "index": 6,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    },
    {
      "index": 7,
      "text": "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n"
    }
  ],
  "created": 1650482503,
  "object": "edit"
}
2022-04-20 19:22:34.413947 fix syntax errors 8 ['\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n', '\n\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(sum(fruits[:K]))\n', '\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n', '\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n', '\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n', '\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\nprint(sum(A[:K]))\n', '\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n', '\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n']
2022-04-20 19:22:34.413984 size on output set 3
2022-04-20 19:22:34.413996 num operations 1
2022-04-20 19:22:34.414002 size on input set 1
2022-04-20 19:22:34.414165 using api key derek
2022-04-20 19:22:34.452980 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:22:35.954864 using api key sunu
2022-04-20 19:22:43.271054 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K])) \n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n"
    },
    {
      "index": 3,
      "text": "N, K = map(int, input().split())\nfruit = list(map(int, input().split()))\n\n\nfruit.sort() # \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3079\u66ff\u3048\u308b\nprint(sum(fruit[:K])) # \u5c0f\u3055\u3044\u9806\u306b\u4e26\u3079\u66ff\u3048\u305f\u30ea\u30b9\u30c8\u306e\u4e0a\u4f4dK\u500b\u3092\u5408\u8a08\u3059\u308b\n"
    },
    {
      "index": 4,
      "text": "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nprint(sum(sorted(fruit)[:K]))\n"
    },
    {
      "index": 5,
      "text": "\n#\n# N, K = map(int, input().split())\n#\n# fruit = list(map(int, input().split()))\n# fruit.sort()\n#\n# print(sum(fruit[:K]))\n"
    },
    {
      "index": 6,
      "text": "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n"
    },
    {
      "index": 7,
      "text": "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n"
    }
  ],
  "created": 1650482555,
  "object": "edit"
}
2022-04-20 19:22:43.271461 fix syntax errors 8 ['\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n', '\n\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K])) \n', '\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n', 'N, K = map(int, input().split())\nfruit = list(map(int, input().split()))\n\n\nfruit.sort() # リストの要素を小さい順に並べ替える\nprint(sum(fruit[:K])) # 小さい順に並べ替えたリストの上位K個を合計する\n', '\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nprint(sum(sorted(fruit)[:K]))\n', '\n#\n# N, K = map(int, input().split())\n#\n# fruit = list(map(int, input().split()))\n# fruit.sort()\n#\n# print(sum(fruit[:K]))\n', '\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n', '\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n']
2022-04-20 19:22:43.271504 size on output set 5
2022-04-20 19:22:43.271517 num operations 1
2022-04-20 19:22:43.271523 size on input set 1
2022-04-20 19:22:43.271694 using api key kouti
2022-04-20 19:22:48.728656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 4,
      "text": "import sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 5,
      "text": "import sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"
    }
  ],
  "created": 1650482563,
  "object": "edit"
}
2022-04-20 19:22:48.728976 fix syntax errors 8 ['\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\nprint(total)\n', '\n\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', '\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', '\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', 'import sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', 'import sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', '\nimport sys\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n', '\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n']
2022-04-20 19:22:48.729015 size on output set 6
