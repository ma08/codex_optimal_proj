2022-04-20 18:25:41.899328 num operations 1
2022-04-20 18:25:41.899344 size on input set 1
2022-04-20 18:25:41.899533 using api key jaanu
2022-04-20 18:25:50.434542 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\na, b = map(int, input().split())\nprint(a+b)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nP = list(map(int, input().split()))\n\nP_sorted = sorted(P)\n\nfor i in range(N):\n    if P[i] == P_sorted[i]:\n        continue\n    else:\n        P[i], P[P.index(P_sorted[i])] = P[P.index(P_sorted[i])], P[i]\n        if P == P_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nP = list(map(int, input().split()))\n\nP_sorted = sorted(P)\n\nfor i in range(N):\n    if P[i] == P_sorted[i]:\n        continue\n    else:\n        P[i], P[P.index(P_sorted[i])] = P[P.index(P_sorted[i])], P[i]\n        if P == P_sorted:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1650479142,
  "object": "edit"
}
2022-04-20 18:25:50.434860 fix syntax errors 8 ['\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '# coding: utf-8\n\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\na, b = map(int, input().split())\nprint(a+b)\n', '\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\nP = list(map(int, input().split()))\n\nP_sorted = sorted(P)\n\nfor i in range(N):\n    if P[i] == P_sorted[i]:\n        continue\n    else:\n        P[i], P[P.index(P_sorted[i])] = P[P.index(P_sorted[i])], P[i]\n        if P == P_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\nfor i in range(N):\n    if p[i] == p_sorted[i]:\n        continue\n    else:\n        p[i], p[p.index(p_sorted[i])] = p[p.index(p_sorted[i])], p[i]\n        if p == p_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\nP = list(map(int, input().split()))\n\nP_sorted = sorted(P)\n\nfor i in range(N):\n    if P[i] == P_sorted[i]:\n        continue\n    else:\n        P[i], P[P.index(P_sorted[i])] = P[P.index(P_sorted[i])], P[i]\n        if P == P_sorted:\n            print("YES")\n            exit()\n\nprint("NO")\n']
2022-04-20 18:25:50.434920 size on output set 4
2022-04-20 18:25:50.434936 num operations 1
2022-04-20 18:25:50.434942 size on input set 1
2022-04-20 18:25:50.435120 using api key kouti
2022-04-20 18:26:04.220751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 3,
      "text": "\n#\n\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 4,
      "text": "import sys\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\n\nMOD = 10 ** 9 + 7\n\n# \u524d\u8a08\u7b97\nF = [1] * (N + 1)\nfor i in range(1, N + 1):\n    F[i] = F[i - 1] * i % MOD\n\n# \u968e\u4e57\u306e\u9006\u5143\nINV = [1] * (N + 1)\nINV[N] = pow(F[N], MOD - 2, MOD)\nfor i in range(N, 0, -1):\n    INV[i - 1] = INV[i] * i % MOD\n\n\ndef cmb(n, r):\n    if n < r:\n        return 0\n    r = min(r, n - r)\n    return F[n] * INV[r] * INV[n - r] % MOD\n\n\nans = 0\nfor i in range(N):\n    ans += (M - A[i]) * cmb(N - i - 1, 2)\n    ans %= MOD\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print(\"YES\")\n            exit()\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1650479150,
  "object": "edit"
}
2022-04-20 18:26:04.221218 fix syntax errors 8 ['N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\n#\n\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', 'import sys\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\n\nMOD = 10 ** 9 + 7\n\n# 前計算\nF = [1] * (N + 1)\nfor i in range(1, N + 1):\n    F[i] = F[i - 1] * i % MOD\n\n# 階乗の逆元\nINV = [1] * (N + 1)\nINV[N] = pow(F[N], MOD - 2, MOD)\nfor i in range(N, 0, -1):\n    INV[i - 1] = INV[i] * i % MOD\n\n\ndef cmb(n, r):\n    if n < r:\n        return 0\n    r = min(r, n - r)\n    return F[n] * INV[r] * INV[n - r] % MOD\n\n\nans = 0\nfor i in range(N):\n    ans += (M - A[i]) * cmb(N - i - 1, 2)\n    ans %= MOD\n\nprint(ans)\n', 'N = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n', '\nN = int(input())\np = list(map(int, input().split()))\n\nfor i in range(N):\n    if i + 1 == p[i]:\n        continue\n    else:\n        if i + 1 == p[p[i] - 1]:\n            print("YES")\n            exit()\n\nprint("NO")\n']
2022-04-20 18:26:04.221302 size on output set 4
2022-04-20 18:26:04.221320 num operations 1
2022-04-20 18:26:04.221329 size on input set 1
2022-04-20 18:26:04.221584 using api key sourya
2022-04-20 18:26:11.136414 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport itertools\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if all(p[i] <= p[i+1] for i in range(N-1)):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split())) \n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i - 1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(input())\n    p = list(map(int, input().split()))\n    for i, j in itertools.combinations(range(N), 2): \n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print(\"YES\")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650479164,
  "object": "edit"
}
2022-04-20 18:26:11.136751 fix syntax errors 8 ['\nimport sys\nimport itertools\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if all(p[i] <= p[i+1] for i in range(N-1)):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split())) \n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i - 1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    for i, j in itertools.combinations(range(N), 2):\n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport itertools\n\ndef is_sorted(p):\n    for i in range(1, len(p)):\n        if p[i-1] > p[i]:\n            return False\n    return True\n\ndef main():\n    N = int(input())\n    p = list(map(int, input().split()))\n    for i, j in itertools.combinations(range(N), 2): \n        if p[i] > p[j]:\n            p[i], p[j] = p[j], p[i]\n            if is_sorted(p):\n                print("YES")\n                sys.exit()\n            p[i], p[j] = p[j], p[i]\n    print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 18:26:11.136903 size on output set 6
