2022-04-20 17:15:41.596090 num operations 1
2022-04-20 17:15:41.596107 size on input set 1
2022-04-20 17:15:41.596289 using api key sourya
2022-04-20 17:15:49.116216 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and string[0] == \"a\":\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) >= 2:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == 26:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) != 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 4,
      "text": "\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == 26:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1: \n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650474941,
  "object": "edit"
}
2022-04-20 17:15:49.116522 fix syntax errors 8 ['\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and string[0] == "a":\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) >= 2:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == 26:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) != 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == 26:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1: \n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 17:15:49.116566 size on output set 8
2022-04-20 17:15:49.116579 num operations 1
2022-04-20 17:15:49.116585 size on input set 1
2022-04-20 17:15:49.116774 using api key sourya
2022-04-20 17:16:01.103440 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    l = []\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            l.append(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    l.append(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        l.append(\"Yes\")\n                else:\n                    l.append(\"No\")\n                    break\n    for i in l:\n        print(i)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = list(input())\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) == len(set(string)):\n            print(\"yes\")\n        else:\n            print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) < 3:\n            print(\"Dynamic\")\n        else:\n            string = list(string)\n            string.sort()\n            if len(string) == 1:\n                print(\"Dynamic\")\n            elif len(string) > 1:\n                for i in range(len(string) - 1):\n                    if string[i] == string[i + 1]:\n                        print(\"Not\")\n                        break\n                    elif ord(string[i]) + 1 == ord(string[i + 1]):\n                        if i == len(string) - 2:\n                            print(\"Dynamic\")\n                    else:\n                        print(\"Not\")\n                        break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        break\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        s = input()\n        s = list(s)\n        s.sort()\n        if len(s) == 1:\n            print(\"Yes\")\n        elif len(s) > 1:\n            for i in range(len(s) - 1):\n                if s[i] == s[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(s[i]) + 1 == ord(s[i + 1]):\n                    if i == len(s) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    # n = int(input())\n    # for i in range(n):\n    #     string = input()\n    #     string = list(string)\n    #     string.sort()\n    #     if len(string) == 1:\n    #         print(\"Yes\")\n    #     elif len(string) > 1:\n    #         for i in range(len(string) - 1):\n    #             if string[i] == string[i + 1]:\n    #                 print(\"No\")\n    #                 break\n    #             elif ord(string[i]) + 1 == ord(string[i + 1]):\n    #                 if i == len(string) - 2:\n    #                     print(\"Yes\")\n    #             else:\n    #                 print(\"No\")\n    #                 break\n    print(ord('a'))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650474949,
  "object": "edit"
}
2022-04-20 17:16:01.103873 fix syntax errors 8 ['\n\ndef main():\n    l = []\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            l.append("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    l.append("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        l.append("Yes")\n                else:\n                    l.append("No")\n                    break\n    for i in l:\n        print(i)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = list(input())\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) == len(set(string)):\n            print("yes")\n        else:\n            print("no")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) < 3:\n            print("Dynamic")\n        else:\n            string = list(string)\n            string.sort()\n            if len(string) == 1:\n                print("Dynamic")\n            elif len(string) > 1:\n                for i in range(len(string) - 1):\n                    if string[i] == string[i + 1]:\n                        print("Not")\n                        break\n                    elif ord(string[i]) + 1 == ord(string[i + 1]):\n                        if i == len(string) - 2:\n                            print("Dynamic")\n                    else:\n                        print("Not")\n                        break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        break\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        s = input()\n        s = list(s)\n        s.sort()\n        if len(s) == 1:\n            print("Yes")\n        elif len(s) > 1:\n            for i in range(len(s) - 1):\n                if s[i] == s[i + 1]:\n                    print("No")\n                    break\n                elif ord(s[i]) + 1 == ord(s[i + 1]):\n                    if i == len(s) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # n = int(input())\n    # for i in range(n):\n    #     string = input()\n    #     string = list(string)\n    #     string.sort()\n    #     if len(string) == 1:\n    #         print("Yes")\n    #     elif len(string) > 1:\n    #         for i in range(len(string) - 1):\n    #             if string[i] == string[i + 1]:\n    #                 print("No")\n    #                 break\n    #             elif ord(string[i]) + 1 == ord(string[i + 1]):\n    #                 if i == len(string) - 2:\n    #                     print("Yes")\n    #             else:\n    #                 print("No")\n    #                 break\n    print(ord(\'a\'))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 17:16:01.103943 size on output set 8
2022-04-20 17:16:01.103956 num operations 1
2022-04-20 17:16:01.103962 size on input set 1
2022-04-20 17:16:01.104123 using api key soukgp
2022-04-20 17:16:07.730827 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test_string = input()\n        if len(test_string) != len(set(test_string)):\n            print('No')\n        elif ord(test_string[-1]) - ord(test_string[0]) != len(test_string)-1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650474961,
  "object": "edit"
}
2022-04-20 17:16:07.731150 fix syntax errors 8 ['\n\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test_string = input()\n        if len(test_string) != len(set(test_string)):\n            print(\'No\')\n        elif ord(test_string[-1]) - ord(test_string[0]) != len(test_string)-1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 17:16:07.731265 size on output set 3
