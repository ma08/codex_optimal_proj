2022-04-20 18:26:34.479704 num operations 1
2022-04-20 18:26:34.479721 size on input set 1
2022-04-20 18:26:34.479895 using api key gabby
2022-04-20 18:26:34.607359 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 18:26:36.109247 using api key soukgp
2022-04-20 18:26:50.515005 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // (a[0] - 1)\n    return max(n - (b[-1] - b[0]) // (a[0] - 1), n - (b[-1] - b[0]) // (a[n-1] - 1))\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 2,
      "text": "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 3,
      "text": "\nimport random\n\n#for i in range(100):\n    # n = random.randint(1, 200000)\n    # a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    # b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    # print(n)\n    # print(' '.join(map(str, a)))\n    # print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\ndef solve(n: int, a: list, b: list) -> int:\n    a.sort()\n    b.sort()\n    # print(a)\n    # print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n - 1] < 0:\n        return n\n    if a[0] == a[n - 1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 4,
      "text": "\nimport random\n\n# for i in range(100):\n#     n = random.randint(1, 200000)\n#     a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     print(n)\n#     print(' '.join(map(str, a)))\n#     print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    # print(a)\n    # print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n - 1] < 0:\n        return n\n    if a[0] == a[n - 1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 5,
      "text": "\nimport random\n\n# for i in range(100):\n#     n = random.randint(1, 200000)\n#     a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     print(n)\n#     print(' '.join(map(str, a)))\n#     print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport random\n\nfor i in range(100):\n    n = random.randint(1, 200000)\n    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    print(n)\n    print(' '.join(map(str, a)))\n    print(' '.join(map(str, b)))\n\n#n = int(input())\n#a = list(map(int, input().split()))\n#b = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\n#print(solve(n, a, b))\n"
    },
    {
      "index": 7,
      "text": "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\nprint(solve(n, a, b))\n"
    }
  ],
  "created": 1650479196,
  "object": "edit"
}
2022-04-20 18:26:50.515382 fix syntax errors 8 ["\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\nprint(solve(n, a, b))\n", "\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // (a[0] - 1)\n    return max(n - (b[-1] - b[0]) // (a[0] - 1), n - (b[-1] - b[0]) // (a[n-1] - 1))\n\nprint(solve(n, a, b))\n", "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\nimport random\n\n#for i in range(100):\n    # n = random.randint(1, 200000)\n    # a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    # b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    # print(n)\n    # print(' '.join(map(str, a)))\n    # print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\ndef solve(n: int, a: list, b: list) -> int:\n    a.sort()\n    b.sort()\n    # print(a)\n    # print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n - 1] < 0:\n        return n\n    if a[0] == a[n - 1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\n\nprint(solve(n, a, b))\n", "\nimport random\n\n# for i in range(100):\n#     n = random.randint(1, 200000)\n#     a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     print(n)\n#     print(' '.join(map(str, a)))\n#     print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    # print(a)\n    # print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n - 1] < 0:\n        return n\n    if a[0] == a[n - 1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\n\nprint(solve(n, a, b))\n", "\nimport random\n\n# for i in range(100):\n#     n = random.randint(1, 200000)\n#     a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     print(n)\n#     print(' '.join(map(str, a)))\n#     print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport random\n\nfor i in range(100):\n    n = random.randint(1, 200000)\n    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    print(n)\n    print(' '.join(map(str, a)))\n    print(' '.join(map(str, b)))\n\n#n = int(input())\n#a = list(map(int, input().split()))\n#b = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\n#print(solve(n, a, b))\n", "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\nprint(solve(n, a, b))\n"]
2022-04-20 18:26:50.515570 size on output set 8
2022-04-20 18:26:50.515584 num operations 1
2022-04-20 18:26:50.515590 size on input set 1
2022-04-20 18:26:50.515750 using api key kouti
2022-04-20 18:27:33.509008 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == [2, 4, 5]\nassert s.solve([13, 37, 39], [1, 2, 3]) == [13, 37, 39]\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == [0, 0, 0, 0]\nassert s.solve([1, 2, -1], [-6, -12, 6]) == [-1, 1, 2]\n"
    },
    {
      "index": 1,
      "text": "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here.\n        return 0\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    },
    {
      "index": 2,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        n = len(a)\n        m = len(b)\n        if n != m:\n            return -1\n        if n == 1:\n            if a[0] == b[0]:\n                return 1\n            return -1\n        if n == 2:\n            if a[0] == b[0] and a[1] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0]:\n                return 1\n            return -1\n        if n == 3:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n                return 1\n            return -1\n        if n == 4:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1] and a[3] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[3] and a[3] == b[1]:\n                return 1\n            if a[0] == b[0] and a[1] == b[3] and a[2] == b[1] and a[3] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[3] and a[2] == b[2] and a[3] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[2] and a[3] == b[3]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[3] and a[3] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[0] and a[3] == b[3]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[3] and a[3] == b[0]:\n                return 1\n            if a[0] == b[1] and a[1] == b[3] and a[2] == b[0] and a[3] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[3] and a[2] == b[2] and a[3] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[1] and a[3] == b[3]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[3] and a[3] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[0] and a[3] == b[3]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[3] and a[3] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[3] and a[2] == b[0] and a[3] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[3] and a[2] == b[1] and a[3] == b[0]:\n                return 1\n            if a[0] == b[3] and a[1] == b[0] and a[2] == b[1] and a[3] == b[2]:\n                return 1\n            if a[0] == b[3] and a[1] == b[0] and a[2] == b[2] and a[3] == b[1]:\n                return 1\n            if a[0] == b[3] and a[1] == b[1] and a[2] == b[0] and a[3] == b[2]:\n                return 1\n            if a[0] == b[3] and a[1] == b[1] and a[2] == b[2] and a[3] == b[0]:\n                return 1\n            if a[0] == b[3] and a[1] == b[2] and a[2] == b[0] and a[3] == b[1]:\n                return 1\n            if a[0] == b[3] and a[1] == b[2] and a[2] == b[1] and a[3] == b[0]:\n                return 1\n            return -1\n        if n == 5:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[3] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[4] and a[4] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[2] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[4] and a[4] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[4] and a[3] == b[2] and a[4] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[4] and a[3] == b[3] and a[4] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1] and a[3] == b[3] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    },
    {
      "index": 3,
      "text": "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\n# assert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n# assert s.solve([13, 37, 39], [1, 2, 3]) == 2\n# assert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\n# assert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    },
    {
      "index": 4,
      "text": "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    },
    {
      "index": 5,
      "text": "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\n# assert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n# assert s.solve([13, 37, 39], [1, 2, 3]) == 2\n# assert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\n# assert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    },
    {
      "index": 6,
      "text": "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2, \"Test 1 Failed\"\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2, \"Test 2 Failed\"\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0, \"Test 3 Failed\"\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3, \"Test 4 Failed\"\nprint(\"All Tests Passed\")\n"
    },
    {
      "index": 7,
      "text": "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        return 0\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"
    }
  ],
  "created": 1650479210,
  "object": "edit"
}
2022-04-20 18:27:33.509361 fix syntax errors 8 ['\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == [2, 4, 5]\nassert s.solve([13, 37, 39], [1, 2, 3]) == [13, 37, 39]\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == [0, 0, 0, 0]\nassert s.solve([1, 2, -1], [-6, -12, 6]) == [-1, 1, 2]\n', '\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here.\n        return 0\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n', '\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        n = len(a)\n        m = len(b)\n        if n != m:\n            return -1\n        if n == 1:\n            if a[0] == b[0]:\n                return 1\n            return -1\n        if n == 2:\n            if a[0] == b[0] and a[1] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0]:\n                return 1\n            return -1\n        if n == 3:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n                return 1\n            return -1\n        if n == 4:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1] and a[3] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[3] and a[3] == b[1]:\n                return 1\n            if a[0] == b[0] and a[1] == b[3] and a[2] == b[1] and a[3] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[3] and a[2] == b[2] and a[3] == b[1]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[2] and a[3] == b[3]:\n                return 1\n            if a[0] == b[1] and a[1] == b[0] and a[2] == b[3] and a[3] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[0] and a[3] == b[3]:\n                return 1\n            if a[0] == b[1] and a[1] == b[2] and a[2] == b[3] and a[3] == b[0]:\n                return 1\n            if a[0] == b[1] and a[1] == b[3] and a[2] == b[0] and a[3] == b[2]:\n                return 1\n            if a[0] == b[1] and a[1] == b[3] and a[2] == b[2] and a[3] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[1] and a[3] == b[3]:\n                return 1\n            if a[0] == b[2] and a[1] == b[0] and a[2] == b[3] and a[3] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[0] and a[3] == b[3]:\n                return 1\n            if a[0] == b[2] and a[1] == b[1] and a[2] == b[3] and a[3] == b[0]:\n                return 1\n            if a[0] == b[2] and a[1] == b[3] and a[2] == b[0] and a[3] == b[1]:\n                return 1\n            if a[0] == b[2] and a[1] == b[3] and a[2] == b[1] and a[3] == b[0]:\n                return 1\n            if a[0] == b[3] and a[1] == b[0] and a[2] == b[1] and a[3] == b[2]:\n                return 1\n            if a[0] == b[3] and a[1] == b[0] and a[2] == b[2] and a[3] == b[1]:\n                return 1\n            if a[0] == b[3] and a[1] == b[1] and a[2] == b[0] and a[3] == b[2]:\n                return 1\n            if a[0] == b[3] and a[1] == b[1] and a[2] == b[2] and a[3] == b[0]:\n                return 1\n            if a[0] == b[3] and a[1] == b[2] and a[2] == b[0] and a[3] == b[1]:\n                return 1\n            if a[0] == b[3] and a[1] == b[2] and a[2] == b[1] and a[3] == b[0]:\n                return 1\n            return -1\n        if n == 5:\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[3] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[2] and a[3] == b[4] and a[4] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[2] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[3] and a[3] == b[4] and a[4] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[4] and a[3] == b[2] and a[4] == b[3]:\n                return 1\n            if a[0] == b[0] and a[1] == b[1] and a[2] == b[4] and a[3] == b[3] and a[4] == b[2]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[1] and a[3] == b[3] and a[4] == b[4]:\n                return 1\n            if a[0] == b[0] and a[1] == b[2] and a[2] == b[\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n', '\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\n# assert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n# assert s.solve([13, 37, 39], [1, 2, 3]) == 2\n# assert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\n# assert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n', '\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n', '\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\n# assert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n# assert s.solve([13, 37, 39], [1, 2, 3]) == 2\n# assert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\n# assert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n', '\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2, "Test 1 Failed"\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2, "Test 2 Failed"\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0, "Test 3 Failed"\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3, "Test 4 Failed"\nprint("All Tests Passed")\n', '\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        return 0\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n']
2022-04-20 18:27:33.509561 size on output set 7
2022-04-20 18:27:33.509577 num operations 1
2022-04-20 18:27:33.509584 size on input set 1
2022-04-20 18:27:33.509748 using api key jaanu
2022-04-20 18:27:46.957504 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, a, b, c):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef solve(n, a, b):\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef solve(n, a, b):\n    # pos = []\n    # neg = []\n    # zero = []\n    # for i in range(n):\n    #     if b[i] > 0:\n    #         pos.append(b[i] / a[i])\n    #     elif b[i] < 0:\n    #         neg.append(b[i] / a[i])\n    #     else:\n    #         zero.append(i)\n\n    # pos.sort()\n    # neg.sort()\n\n    # res = 0\n    # for i in range(len(pos)):\n    #     for j in range(len(neg)):\n    #         if pos[i] > neg[j]:\n    #             res += 1\n    #         else:\n    #             break\n\n    # if len(zero) > 0:\n    #     res += len(zero) - 1\n\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef solve(n, a, b):\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650479253,
  "object": "edit"
}
2022-04-20 18:27:46.957798 fix syntax errors 8 ['\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef solve(n, a, b, c):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef solve(n, a, b):\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef solve(n, a, b):\n    # pos = []\n    # neg = []\n    # zero = []\n    # for i in range(n):\n    #     if b[i] > 0:\n    #         pos.append(b[i] / a[i])\n    #     elif b[i] < 0:\n    #         neg.append(b[i] / a[i])\n    #     else:\n    #         zero.append(i)\n\n    # pos.sort()\n    # neg.sort()\n\n    # res = 0\n    # for i in range(len(pos)):\n    #     for j in range(len(neg)):\n    #         if pos[i] > neg[j]:\n    #             res += 1\n    #         else:\n    #             break\n\n    # if len(zero) > 0:\n    #     res += len(zero) - 1\n\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef solve(n, a, b):\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 18:27:46.957949 size on output set 4
