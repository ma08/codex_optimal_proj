["n,k=map(int,input().split())\nprint(min(n%k,k-n%k))", "N, K = map(int, input().split())\ns = N//K\ns1 = abs(N - K*s)\ns2 = abs(N - K*(s+1))\nprint(min(s1, s2))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, K = MI()\n    num = N // K\n    ans = min(abs(N-K*(num)), abs(N-K*(num+1)))\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\nm = n % k\nprint(min(m, abs(k - m)))", "N, K = list(map(int, input().split()))\n\nans = 0\nif N % K == 0:\n    ans = 0\nelse:\n    a = N % K\n    b = abs(a - K)\n    ans = min(a, b)\nprint(ans)", "[N, K]  = list(map(int, input().split(' ')))\n\nN = N % K\nnN = abs(N - K)\nwhile(nN < N):\n    N = nN\n    nN = abs(N-K)\n\nprint(N)\n", "N, K = map(int,input().split())\na = N % K\n\nif a <= abs(a-K):\n    print(a)\nelse:\n    print(abs(a-K))", "N,K = map(int,input().split())\nif(N >= K):\n    print(min(N%K,K-(N%K)))\nelse:\n    print(min(N,K-N))", "n, k = map(int, input().split( ))\na = n%k\nb = (-n)%k\nprint(min(a, b))", "n, k  = map(int, input().split())\nif n % k == 0:\n    print(0)\nelse:\n    nx = n % k\n    if nx < abs(nx -k):\n        print(nx)\n    else:\n        print(abs(nx - k))", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n\n#import numpy as np\nimport sys\nimport math\nimport collections\n\nn,m = L()\nprint(min(n%m,-n%m))", "n,k=map(int,input().split())\nprint(min(n%k,k-n%k))", "n,k = map(int,input().split())\nprint(min(n%k,k-n%k))", "N, K = map(int, input().split())\nminCandidate1 = N % K\nminCandidate2 = K - minCandidate1\nif minCandidate1 <= minCandidate2:\n  print(minCandidate1)\nelse:\n  print(minCandidate2)", "N,K = map(int,input().split())\nprint(min(N%K,K-N%K))", "n, k =map(int,input().split())\nans1 = n%k\nans2 = k-ans1\nprint(min(ans1,ans2))", "#!/usr/local/bin/python3\n# https://atcoder.jp/contests/abc161/tasks/abc161_c\n\nN, K = list(map(int, input().split()))\n\ncand1 = N % K\ncand2 = K - cand1\nprint((min(N, cand1, cand2)))\n", "n,k = map(int,input().split())\na = abs(n-k*(n//k))\nb = abs(n-k*(-(-n//k)))\nprint(min(a,b))", "import sys\n\nn, k = list(map(int ,input().split()))\n\nama = n % k\nama_k =abs(ama - k)\n\nif n % k == 0:\n    print('0')\n    return\n\n    \nelif ama >= ama_k:\n    print(ama_k)\n    return\n    \nelif ama <= ama_k:\n    print(ama)\n    return\n", "N,K = map(int,input().split())\nn = N - K * (N//K)\nn = min(n, abs(n-K))\nprint(n)", "n, k = map(int, input().split())\nif n >= k:\n    ans = min(n % k, k - (n % k))\nelse:\n    ans = min(n, k - n)\nprint(ans)", "N, K = map(int, input().split())\nans = N\na = ans // K\nb = ans % K\n\nif a > 0:\n    ans = N - K * a\n    a = ans // K\n    b = ans % K\n\nif a  == 0:\n    if ans > abs(ans - K):\n        print(abs(ans - K))\n    else:\n        print(ans)", "n, k = map(int, input().split())\n\nans = min(n%k, abs(n%k - k))\nprint(ans)", "# -*- coding:utf-8 -*-\nN,K = map(int,input().split())\n\nans = N % K\nif abs(ans - K) < ans:\n    ans = abs(ans - K)\n\nprint(ans)", "N,K=map(int,input().split())\nN=N-K*(N//K)\nN=min(N,abs(N-K))\nprint(N)", "def i_input(): return int(input())\n\n\ndef i_map(): return map(int, input().split())\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\n\nn, k = i_map()\nprint(min(n%k,k-n%k))", "import numpy\n\nn, m = input().split()\nn = numpy.int64(n)\nm = numpy.int64(m)\nn = n % m\nprint(min(n, m-n))", "def __starting_point():\n\n    n,k = list(map(int,input().split()))\n    s = set()\n    n = n % k\n    while True:\n        tmp = abs(n-k)\n        if tmp in s:\n            break\n        s.add(tmp)\n        n = min(n,tmp)\n    print(n)\n\n__starting_point()", "N,K = map(int, input().split())\n\ny = N%K\nz = abs(K-y)\n\nans = min(y,z)\n\nprint(ans)", "from sys import stdin,stdout\nfor _ in range(1):#int(stdin.readline())):\n    # n=int(stdin.readline())\n    n,k=list(map(int,stdin.readline().split()))\n    if n%k==0:print(0)\n    else:\n        rem=n%k\n        print(min(rem,abs(k-rem)))", "x,y = map(int,input().split())\n\nz = x % y\np = y - z\nif(z < p):\n    print(z)\nelse:\n    print(p)", "n, k = list(map(int, input().split()))\n\nn = n % k\nabs_n_minus_k = abs(n - k)\nans = n\n\nif n % k == 0:\n    ans = 0\nelse:\n    while abs_n_minus_k < n:\n        n = abs_n_minus_k\n        abs_n_minus_k = abs(n - k)\n        ans = n\n\nprint(ans)\n", "N, K = map(int, input().split())\n\nresult = N % K\nif result <= abs(result-K):\n  print(result)\nelif result > abs(result-K):\n  result = abs(result-K)\n  print(result)", "n, k = list(map(int, input().split()))\n\n\nclass Solution:\n    def __init__(self, n, k):\n        self.n = n\n        self.k = k\n\n    def answer(self):\n        self.n = self.n % self.k\n        abs_n_minus_k = abs(self.n - self.k)\n        ans = self.n\n        if self.n % self.k == 0:\n            ans = 0\n        else:\n            while abs_n_minus_k < self.n:\n                self.n = abs_n_minus_k\n                abs_n_minus_k = abs(self.n - self.k)\n                ans = self.n\n        print(ans)\n\n\nconditions = Solution(n, k)\nconditions.answer()\n", "n, k = list(map(int, input().split()))\nr = n % k\nl = []\nwhile(not l.count(r)):\n    l.append(r)\n    r = abs(r - k)\nl = sorted(l)\nprint((str(l[0])))\n", "N, K = list(map(int, input().split()))\n\nx = N\npre_x = x\n\nif x // K > 0:\n    x = abs(x - K * (x // K))\n    pre_x = x\n\nwhile True:\n    pre_x = x\n    x = abs(x - K)\n\n    if pre_x < x:\n        print(pre_x)\n        return\n", "# coding=utf-8\nimport sys\n\ndef __starting_point():\n    N, K = map(int, input().split())\n\n    if N % K == 0:\n        print('0')\n        return\n\n    N = N % K\n\n    while(N > abs(N-K)):\n        N = abs(N-K)\n\n    print(N)\n__starting_point()", "def main() -> None:\n    n, k = list(map(int, input().split()))\n\n    print((min(n%k, abs(n%k-k))))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = map(int, input().split())\nif n > k:\n    n = n % k\nprint (min(n, abs(n-k)))", "n,k=map(int,input().split())\na=n%k\nif abs(a-k)<=a:\n    print(abs(a-k))\nelse:\n    print(a)", "n,k = map(int,input().split())\nprint(min(n%k,abs(n%k-k)))", "N, K = list(map(int, input().split()))\nP = N % K\nA = [P, K-P]\n\nif A[0]<=A[1]:\n    print((A[0]))\nelif A[0]>A[1]:\n    print((A[1]))\n", "N,K=map(int,input().split())\nr=N%K\nprint(min(r,abs(r-K)))", "N,K=list(map(int,input().split()))\nN%=K\nprint((min(N,K-N)))\n", "\nN, Y = map(int, input().split())\nans = min(N%Y, Y-(N%Y))\nprint(ans)", "N,K=map(int,input().split());print(min(N%K,K-N%K))", "# import math\n# import statistics\n# import itertools\n# a=int(input())\n# b=input()\n# c=[]\n# for i in a:\n#     c.append(int(i))\nN,K= map(int,input().split())\n# f = list(map(int,input().split()))\n# g = [int(input()) for _ in range(N)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\n\nif N%K==0:\n    print(0)\nelse:\n    et=N//K\n    a1=et*K\n    a2=(et+1)*K\n    mi = min(abs(a1-N),abs(a2-N))\n    print(mi)", "n, k = list(map(int, input().split()))\n\na = n % k\nif (a <= int(k/2)):\n  print(a)\nelse:\n  print((k-a))\n", "N, K = map(int, input().split())\n\nmodK = N % K\n\nif modK <= K//2:\n    print(modK)\nelse:\n    print(K - modK)", "N, K = map(int, input().split())\nans = N % K\nans = min(ans, abs(ans-K))\nprint(ans)", "n,k=list(map(int,input().split()))\n\nprint((min(n-k*(n//k),-n+k*(n//k+1))))\n", "def resolve():\n    n,k = map(int,input().split())\n    print(min(n-k*(n//k),abs(n-k*(n//k)-k)))\nresolve()", "N,K = map(int,input().split())\n\ntem = N // K\n\nprint(min(abs(N - K*tem),abs(N - K*(tem+1))))", "a,b=[int(s) for s in input().split()]\nprint(min([a%b,(b-a)%b]))", "N,K=map(int,input().split())\nr=N%K\nprint(min(r,abs(r-K)))", "N, K = list(map(int, input().split()))\n\nif N > K:\n    N %= K\n\nif (K / 2) >= N:\n    print(N)\nelse:\n    print(K - N)", "n,k = map(int,input().split())\ncheck = []\ncheck.append(n%k)\ncheck.append(k-check[0])\nprint(min(check))", "n, k = map(int, input().split())\n\nprint(min(n % k, k - n % k))", "a,b=map(int,input().split());print(min(a%b,b-a%b))", "n,k = map(int, input().split())\ni=n//k\na = abs(n-k*i)\nb = abs(n-k*(i+1))\nprint(min(a,b))", "#ABC161\nN,K=map(int,input().split())\nN_new=N%K\nprint(min(N_new,K-N_new))", "n,k = map(int,input().split())\nprint(min(n%k,k-n%k))", "a,b=map(int,input().split());print(min(a%b,-a%b))", "a, b = map(int, input().split()); print(min(a%b, b - a%b))", "N, K = list(map(int, input().split()))\n\nt = N % K\nprint((min(abs(t-K), t)))\n", "n, k = map(int, input().split())\nif n < k:\n    ans = min(n, k - n)\nelif n == k:\n    ans = 0\nelse:\n    ans = min(n % k, abs(n % k - k))\nprint(ans)", "a,b=map(int,input().split());print(min(a%b,-a%b))", "n, k = map(int,input().split())\nnk = n % k\nprint(min(nk,abs(nk - k)))", "n, k = list(map(int, input().split()))\nprint((min(n % k, k - n % k)))\n", "N, K = list(map(int, input().split()))\n\nif N == 0:\n\tprint(N)\nelse:\n\tdiv = N // K\n\tprint((min(N - div * K, (div + 1) * K - N)))\n", "n, k = list(map(int, input().split()))\n\nif n == k:\n    print((0))\n    return\nelif n > k:\n    n = n % k\n\n# n < k\n\nm = k - n\nprint((min(n, m)))\n", "def main():\n    n, k = list(map(int, input().split()))\n    ans = [n % k, abs((n % k) - k)]\n    return min(ans)\n\n\ndef __starting_point():\n    print((main()))\n\n__starting_point()", "n, k = map(int,input().split())\na = n % k\nif abs(a) < abs(a-k):\n    print(abs(a))\nelse:\n    print(abs(a-k))", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn, k = [int(i) for i in input().split()]\n\ntmp = 0\nres = 0\n\nn = n % k\nres = min(n, abs(n - k))\n\nprint(res)\n", "n,k=map(int,input().split())\nprint(min(n%k,-n%k))", "n,k = list(map(int, input().split()))\na = n % k\nprint((min(a, k-a)))\n", "n,k = list(map(int,input().split()))\n\na = n%k\nprint((min(a,k-a)))\n", "n, m = map(int, input().split())\ntmp = n % m\nprint(min(tmp, abs(tmp-m)))", "N,K = map(int,input().split())\n\nprint(min(N % K,K-N % K))", "n,k = list(map(int,input().split()))\n\n\na = n%k\nb = k-a\nprint((min(a,b)))\n", "N,K=list(map(int,input().split()))\n\nif N==K:\n  print((0))\n\nelif N<K:\n  lis1=[N,abs(N-K)]\n  print((min(lis1)))\n  \nelse:\n  lis2=[N%K,abs(N%K-K)]\n  print((min(lis2)))\n  \n", "n,k=map(int,input().split())\nprint(min(n%k,abs(n%((-1)*k))))", "n,k=map(int,input().split())\nx1=n%k\nx2=abs(n%k-k)\nif x1<x2:\n    print(x1)\nelse:\n    print(x2)", "N,K=list(map(int, input().split()))\n\ndef absolute(x):\n    x=x-K\n    if x<0:\n        x=-x\n    return x\n\nif N<K:\n    while N>abs(N-K):\n        N=absolute(N)\n    print(N)\n\nelif N%K==0:\n    print((0))\nelse:\n    b=1\n    s=K\n    while b>0 and N>abs(N-s):\n        b=N%K\n        N=K\n        a=K\n        K=b\n    print(a)\n", "n,k=map(int,input().split())\nprint(min(n%k,-n%k))", "N, K = map(int, input().split())\nresidue = N%K\nif residue*2 < K:\n    print(residue)\nelse:\n    print(K-residue)", "import math\nn,k = list(map(int,input().split()))\nprint((min(n % k, k-n%k)))\n", "N, K = list(map(int, input().split()))\n\ndef Aoki(x, K):\n        x = abs(x - K)\n        return x\n\n\nif N % K == 0:\n        ans = 0\n        print(ans)\n        return\nlis = []\nlis.append(N)\nx = N % K \nfor i in range(10000):\n        lis.append(x)\n        x = Aoki(x, K)\nprint((min(lis)))\n", "n,k = map(int,input().split())\nans = n\nprint(min(n%k,k-n%k))", "n,k=map(int,input().split())\na=n%k\nprint(min(a,abs(a-k)))", "n, k = list(map(int, input().split()))\n\nx = n % k\ny = abs(x - k)\n\nif x  < y:\n    print(x)\nelse:\n    print(y)\n\n\n", "N, K = map(int, input().split())\n\nans = min(N - K*(N//K), K - (N - K*(N//K)))\n\nprint(ans)", "N, K = map(int, input().split())\n\nL = []\n\n\n\nfor i in range(10**5):\n    M = N // K\n    if i == 0:\n        N = abs(N - K)\n        L.append(N)\n    else:\n        if N > K:\n            N = N - (K * M)\n            L.append(N)\n        else:\n            N = abs(L[i-1] - K)\n            L.append(N)\n\n\nprint(min(L))", "n, k = list(map(int, input().split()))\n\n\nx = n % k\n\ny = abs(x - k)\n\nif x >= y:\n    print(y)\nelse:\n    print(x)\n", "n,k = map(int,input().split())\n\nprint((n%k) if (n%k) < (k-(n%k)) else (k-(n%k)))", "N,K=map(int,input().split())\nprint(min(N%K,K-N%K))", "n,k = map(int, input().split())\na = n // k\nans = min(abs(n - a*k),abs(n - (a+1)*k))\nprint(ans)", "import numpy\n\nn, m = input().split()\nn = numpy.int64(n)\nm = numpy.int64(m)\nn = n % m\nprint((min(n, m-n)))\n", "N, K = list(map(int, input().split()))\n\nmod1 = N % K\nmod2 = (K - mod1)\n\nprint((mod1 if mod1 < mod2 else mod2))\n", "N, K = map(int, input().split())\n\nprint(min(N%K, K - N%K))"]