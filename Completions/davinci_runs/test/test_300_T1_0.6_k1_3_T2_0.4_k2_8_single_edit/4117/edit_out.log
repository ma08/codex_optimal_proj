2022-04-20 17:34:05.084862 num operations 1
2022-04-20 17:34:05.084883 size on input set 1
2022-04-20 17:34:05.085063 using api key sunu
2022-04-20 17:34:14.893214 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]: \n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:  # \u4e09\u89d2\u5f62\u304c\u6210\u7acb\u3059\u308b\u304b\u306e\u5224\u5b9a\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] + i[2] > i[1] and i[1] + i[2] > i[0]:\n        ans += 1\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j] and l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if l[i] < l[j] + l[k] \\\n                        and l[j] < l[i] + l[k] \\\n                        and l[k] < l[i] + l[j]:\n                    ans += 1 \n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    s = input()\n    t = input()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] + l[j] > l[k] and l[j] + l[k] > l[i] and l[k] + l[i] > l[j]:\n                    ans = ans + 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650476045,
  "object": "edit"
}
2022-04-20 17:34:14.893564 fix syntax errors 8 ["\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]: \n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:  # 三角形が成立するかの判定\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", '\n\nfrom itertools import combinations\n\nn = int(input())\nl = list(map(int, input().split()))\nans = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] + i[2] > i[1] and i[1] + i[2] > i[0]:\n        ans += 1\nprint(ans)\n', "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j] and l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if l[i] < l[j] + l[k] \\\n                        and l[j] < l[i] + l[k] \\\n                        and l[k] < l[i] + l[j]:\n                    ans += 1 \n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    t = input()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] + l[j] > l[k] and l[j] + l[k] > l[i] and l[k] + l[i] > l[j]:\n                    ans = ans + 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 17:34:14.893629 size on output set 8
2022-04-20 17:34:14.893643 num operations 1
2022-04-20 17:34:14.893649 size on input set 1
2022-04-20 17:34:14.893802 using api key gabby
2022-04-20 17:34:27.114148 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n\n\"\"\"\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n\"\"\"\n"
    }
  ],
  "created": 1650476054,
  "object": "edit"
}
2022-04-20 17:34:27.114577 fix syntax errors 8 ["\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\n\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", "\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n", '\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float(\'inf\')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n\n"""\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float(\'inf\')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n"""\n']
2022-04-20 17:34:27.114661 size on output set 6
2022-04-20 17:34:27.114677 num operations 1
2022-04-20 17:34:27.114684 size on input set 1
2022-04-20 17:34:27.114842 using api key sunu
2022-04-20 17:34:35.092187 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n\nn = int(sys.stdin.readline())\nl = list(map(int, sys.stdin.readline().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i] and l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n                cnt += 1\n\nsys.stdout.write(str(cnt))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n"
    }
  ],
  "created": 1650476067,
  "object": "edit"
}
2022-04-20 17:34:35.092579 fix syntax errors 8 ['\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', 'import sys\n\n\nn = int(sys.stdin.readline())\nl = list(map(int, sys.stdin.readline().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i] and l[i] != l[j] and l[j] != l[k] and l[k] != l[i]:\n                cnt += 1\n\nsys.stdout.write(str(cnt))\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n', '\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)\n']
2022-04-20 17:34:35.092623 size on output set 2
