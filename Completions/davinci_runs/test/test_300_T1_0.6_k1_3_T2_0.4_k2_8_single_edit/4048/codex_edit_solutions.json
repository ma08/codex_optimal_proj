["import sys\nimport math\n\nN = int(input())\n\nmoves = 0\n\nfor i in range(1,N+1):\n    if(i*i >= N):\n        moves = i\n        break\n\nprint(2*moves-2)\n", "\nimport sys\n\nN = int(input())\n\nprint(2*int(math.sqrt(N))-2)\n", "\nimport sys\nimport math\nN = int(input())\n\nmoves = 0\n\nfor i in range(1,N+1):\n    if(i*i >= N):\n        moves = i\n        break\n\nprint(2*moves-2)\n", "\nn = int(input())\n\nans = 0\n\nwhile n > 1:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    ans += 1\nprint(ans)\n", "\nimport sys\nimport math\n\nN = int(input())\n\nmoves = 0\n\nfor i in range(1,N+1):\n    if(i*i >= N):\n        moves = i\n        break\n\nprint(2*moves-2)\n", "\nimport sys\nimport os\nimport re\nimport shutil\nimport subprocess\nimport time\nimport json\nimport requests\nimport urllib.request\nfrom bs4 import BeautifulSoup\nimport urllib.parse\nfrom urllib.parse import urlparse\nimport urllib.robotparser\nimport urllib.error\nfrom urllib.error import HTTPError\nfrom urllib.error import URLError\nfrom urllib.request import urlopen\nfrom urllib.request import Request\nfrom urllib.request import urlretrieve\nimport socket\nfrom socket import timeout\nimport http.client\nfrom http.client import BadStatusLine\nfrom http.client import IncompleteRead\nimport http.cookiejar\nfrom http.cookiejar import CookieJar\nimport http.server\nfrom http.server import BaseHTTPRequestHandler\nfrom http.server import HTTPServer\nimport http.client\nfrom http.client import CannotSendRequest\nfrom http.client import CannotSendHeader\nfrom http.client import ResponseNotReady\nfrom http.client import BadStatusLine\nfrom http.client import IncompleteRead\nfrom http.client import ImproperConnectionState\nfrom http.client import InvalidURL\nimport ssl\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.base import MIMEBase\nfrom email import encoders\nimport zipfile\nimport gzip\nimport bz2\nimport tarfile\nimport rarfile\nimport csv\nimport sqlite3\nimport mysql.connector\nfrom mysql.connector import Error\nfrom mysql.connector import errorcode\n", "n = int(input())\nmove_count = 0\nwhile n > 1:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    move_count += 1\nprint(move_count)\n", "\nn = int(input())\nans = 0\n\nwhile n > 1:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    ans += 1\nprint(ans)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn = int(input())\n\nans = 0\n\nwhile n > 1:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    ans += 1\nprint(ans)\n", "\n\n\n\ndef main():\n    n = int(input())\n    move_count = 0\n    while n > 1:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            n -= 1\n        move_count += 1\n    print(move_count)\n\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nmove_count = 0\nwhile n > 1:\n    if n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    move_count += 1\nprint(move_count)\n", "\nprint(1)\n", "#!/usr/bin/python3\n\nimport sys\n\nN = int(input())\n\ndef count_moves(n):\n    moves = 0\n\n    for i in range(1,n+1):\n        if(i*i >= n):\n            moves = i\n            break\n\n    return 2*moves-2\n\nprint(count_moves(N))\n"]