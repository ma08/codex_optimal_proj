2022-04-20 18:17:45.502775 num operations 1
2022-04-20 18:17:45.502794 size on input set 1
2022-04-20 18:17:45.503017 using api key sunu
2022-04-20 18:17:52.831665 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or (f)\n\nh = not (c)\ni = not (d)\n\nj = h or (i)\n\nk = g and (j)\n\nprint(int(k))\n"
    },
    {
      "index": 1,
      "text": "\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    },
    {
      "index": 2,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a or b\n\nk = e and not c or not d\n\nprint(int(k))\n"
    },
    {
      "index": 3,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    },
    {
      "index": 4,
      "text": "\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = not a\nf = not b\ng = e or f\nh = not c\ni = not d\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    },
    {
      "index": 5,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    },
    {
      "index": 6,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a or b)\n\ng = not (c or d)\n\nprint(int(e and g))\n"
    },
    {
      "index": 7,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    }
  ],
  "created": 1650478665,
  "object": "edit"
}
2022-04-20 18:17:52.831980 fix syntax errors 8 ['\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or (f)\n\nh = not (c)\ni = not (d)\n\nj = h or (i)\n\nk = g and (j)\n\nprint(int(k))\n', '\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a or b\n\nk = e and not c or not d\n\nprint(int(k))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n', '\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = not a\nf = not b\ng = e or f\nh = not c\ni = not d\nj = h or i\n\nk = g and j\n\nprint(int(k))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a or b)\n\ng = not (c or d)\n\nprint(int(e and g))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n']
2022-04-20 18:17:52.832020 size on output set 6
2022-04-20 18:17:52.832031 num operations 1
2022-04-20 18:17:52.832036 size on input set 1
2022-04-20 18:17:52.832193 using api key kouti
2022-04-20 18:17:58.743683 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 2,
      "text": "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main(inp):\n    if (inp[0] == inp[2] and inp[1] == inp[3]) or (inp[0] == inp[3] and inp[1] == inp[2]):\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 4,
      "text": "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    }
  ],
  "created": 1650478672,
  "object": "edit"
}
2022-04-20 18:17:58.744001 fix syntax errors 8 ["\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if (inp[0] == inp[2] and inp[1] == inp[3]) or (inp[0] == inp[3] and inp[1] == inp[2]):\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"]
2022-04-20 18:17:58.744041 size on output set 5
2022-04-20 18:17:58.744053 num operations 1
2022-04-20 18:17:58.744060 size on input set 1
2022-04-20 18:17:58.744225 using api key sunu
2022-04-20 18:18:05.951656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 1,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 2,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 3,
      "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0 # \u0445\u043e\u0440\u043e\u0448\u043e\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 4,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 5,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 6,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 7,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    }
  ],
  "created": 1650478678,
  "object": "edit"
}
2022-04-20 18:18:05.952086 fix syntax errors 8 ['\n\n# first solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0 # хорошо\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n']
2022-04-20 18:18:05.952174 size on output set 4
