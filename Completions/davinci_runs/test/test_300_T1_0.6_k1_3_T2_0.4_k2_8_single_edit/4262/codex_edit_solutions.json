["\n\ndef main():\n    n = int(input())\n    p = list(map(int,input().split()))\n    q = list(map(int,input().split()))\n    print(abs(p.index(1)-q.index(1)) + abs(p.index(2)-q.index(2)) + abs(p.index(3)-q.index(3)) + abs(p.index(4)-q.index(4)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i] - 1\n        q_order += q[i] - 1\n        for j in range(i+1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1\n            if q[i] > q[j]:\n                q_order += 1\n    print(abs(p_order - q_order))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    print(abs(p.index(1)-q.index(1)) + abs(p.index(2)-q.index(2)) + abs(p.index(3)-q.index(3)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int,input().split()))\n    q = list(map(int,input().split()))\n    print(abs(p.index(1)-q.index(1)) + abs(p.index(2)-q.index(2)) + abs(p.index(3)-q.index(3)) + abs(p.index(4)-q.index(4)) + abs(p.index(5)-q.index(5)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\n# \u5168\u90e8\u66f8\u304d\u51fa\u3057\u3066\u3001\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\uff08\u305f\u3060\u3057\u3001\u8f9e\u66f8\u9806\u3068\u306f\u9650\u3089\u306a\u3044\uff09\nall_permutations = [i for i in range(1, N + 1)]\n\n# P, Q \u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nP_index = all_permutations.index(P)\nQ_index = all_permutations.index(Q)\n\n# \u5dee\u3092\u6c42\u3081\u308b\ndiff = abs(P_index - Q_index)\n\n# \u7d50\u679c\u3092\u51fa\u529b\nprint(diff)\n", "\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\n# \u5168\u90e8\u66f8\u304d\u51fa\u3057\u3066\u3001\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nall_permutations = [i for i in range(1, N+1)]\n\n# P, Q \u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nP_index = all_permutations.index(P)+1\nQ_index = all_permutations.index(Q)+1\n\n# \u5dee\u3092\u6c42\u3081\u308b\ndiff = abs(P_index - Q_index)\n\n# \u7d50\u679c\u3092\u51fa\u529b\nprint(diff)\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i] - 1\n        q_order += q[i] - 1\n        for j in range(i+1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1\n            if q[i] > q[j]:\n                q_order += 1\n    print(abs(p_order - q_order))\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\n# \u5168\u90e8\u66f8\u304d\u51fa\u3057\u3066\u3001\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b.\nall_permutations = [i for i in range(1, N+1)]\n\n# P, Q \u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b.\nP_index = all_permutations.index(P)\nQ_index = all_permutations.index(Q)\n\n# \u5dee\u3092\u6c42\u3081\u308b.\ndiff = abs(P_index - Q_index)\n\n# \u7d50\u679c\u3092\u51fa\u529b.\nprint(diff)\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int,input().split()))\n    q = list(map(int,input().split()))\n    print(abs(p.index(1)-q.index(1)) + abs(p.index(2)-q.index(2)) + abs(p.index(3)-q.index(3)) + abs(p.index(4)-q.index(4)) + abs(p.index(5)-q.index(5)) + abs(p.index(6)-q.index(6)) + abs(p.index(7)-q.index(7)) + abs(p.index(8)-q.index(8)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i]-1\n        q_order += q[i]-1\n        for j in range(i+1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1/2\n            if q[i] > q[j]:\n                q_order += 1/2\n    print(abs(p_order-q_order))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i] - 1\n        q_order += q[i] - 1\n        for j in range(i+1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1\n            if q[i] > q[j]:\n                q_order += 1\n    print(abs(p_order - q_order))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\n# \u5168\u90e8\u66f8\u304d\u51fa\u3057\u3066\u3001\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nall_permutations = [i for i in range(1, N+1)]\n\n# P, Q \u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nP_index = all_permutations.index(P) + 1\nQ_index = all_permutations.index(Q) + 1\n\n# \u5dee\u3092\u6c42\u3081\u308b\ndiff = abs(P_index - Q_index)\n\n# \u7d50\u679c\u3092\u51fa\u529b\nprint(diff)\n", "\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))[1:]\n    q = list(map(int, input().split()))[1:]\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i] - 1\n        q_order += q[i] - 1\n        for j in range(i + 1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1\n            if q[i] > q[j]:\n                q_order += 1\n    print(abs(p_order-q_order))\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nP = list(map(int, input().split())) # P \u306e\u9806\u5217\nQ = list(map(int, input().split())) # Q \u306e\u9806\u5217\n\n# \u5168\u90e8\u66f8\u304d\u51fa\u3057\u3066\u3001\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nall_permutations = [i for i in range(1, N+1)] # \u5168\u90e8\u306e\u6570\u5b57\u3092\u66f8\u304d\u51fa\u3059\n\n# P, Q \u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nP_index = all_permutations.index(P) # P \u306e\u9806\u5217\u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\nQ_index = all_permutations.index(Q) # Q \u306e\u9806\u5217\u304c\u4f55\u756a\u76ee\u306b\u6765\u308b\u304b\n\n# \u5dee\u3092\u6c42\u3081\u308b\ndiff = abs(P_index - Q_index)\n\n# \u7d50\u679c\u3092\u51fa\u529b\nprint(diff)\n", "\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    p_order = 0\n    q_order = 0\n    for i in range(len(p)):\n        p_order += p[i]-1\n        q_order += q[i]-1\n        for j in range(i+1, len(p)):\n            if p[i] > p[j]:\n                p_order += 1\n            if q[i] > q[j]:\n                q_order += 1\n    print(abs(p_order-q_order))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    print(abs(p.index(1) - q.index(1)) + abs(p.index(2) - q.index(2)) + abs(p.index(3) - q.index(3)))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a, b = map(int, input().split())\n    if a <= 8 and b <= 8:\n        print('Yay!')\n    else:\n        print(':(')\n\nif __name__ == '__main__':\n    main()\n"]