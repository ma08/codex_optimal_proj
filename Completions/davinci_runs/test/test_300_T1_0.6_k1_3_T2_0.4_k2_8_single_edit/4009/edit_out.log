2022-04-20 16:36:46.570245 num operations 1
2022-04-20 16:36:46.570264 size on input set 1
2022-04-20 16:36:46.570456 using api key jaanu
2022-04-20 16:36:52.748106 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x - y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    num = num[:x] + \"0\"*(x-y)\n    return num.count(\"0\")\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x - y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x - y)\n\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x - y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    }
  ],
  "created": 1650472606,
  "object": "edit"
}
2022-04-20 16:36:52.748470 fix syntax errors 8 ['#!/usr/bin/env python3\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', 'import sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x - y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0"*(x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    num = num[:x] + "0"*(x-y)\n    return num.count("0")\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x - y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', 'import sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x - y)\n\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0"*(x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x - y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n']
2022-04-20 16:36:52.748520 size on output set 6
2022-04-20 16:36:52.748532 num operations 1
2022-04-20 16:36:52.748538 size on input set 1
2022-04-20 16:36:52.748751 using api key kouti
2022-04-20 16:36:58.939376 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in range(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in range(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650472612,
  "object": "edit"
}
2022-04-20 16:36:58.939772 fix syntax errors 8 ["\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in range(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in range(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 16:36:58.939836 size on output set 3
2022-04-20 16:36:58.939850 num operations 1
2022-04-20 16:36:58.939856 size on input set 1
2022-04-20 16:36:58.940027 using api key derek
2022-04-20 16:36:59.324462 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 16:37:00.826362 using api key soukgp
2022-04-20 16:37:06.703840 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 1:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 3,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 4,
      "text": "\nn, x, y = map(int, input().split())\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 5,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 6,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 7,
      "text": "n, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1650472620,
  "object": "edit"
}
2022-04-20 16:37:06.704149 fix syntax errors 8 ['\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 1:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\nn, x, y = map(int, input().split())\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n', 'n, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)\n']
2022-04-20 16:37:06.704189 size on output set 5
