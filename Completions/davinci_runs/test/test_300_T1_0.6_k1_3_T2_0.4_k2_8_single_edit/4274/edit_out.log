2022-04-20 19:08:43.959668 num operations 1
2022-04-20 19:08:43.959686 size on input set 1
2022-04-20 19:08:43.959878 using api key soukgp
2022-04-20 19:09:21.635216 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        if a[i] > a[j]:\n            count += 1\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "n, m = map(int, input().split())\nprint('Yes' if n == m else 'No')\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "\n\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print('No')\n"
    }
  ],
  "created": 1650481724,
  "object": "edit"
}
2022-04-20 19:09:21.635578 fix syntax errors 8 ["n, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", '\n\nn = int(input())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        if a[i] > a[j]:\n            count += 1\nprint(count)\n', "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", "n, m = map(int, input().split())\nprint('Yes' if n == m else 'No')\n", "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", "\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n    print('No')\n", "\n\nn, m = map(int, input().split())\nif n == m:\n    print('Yes')\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print('No')\n"]
2022-04-20 19:09:21.635621 size on output set 5
2022-04-20 19:09:21.635633 num operations 1
2022-04-20 19:09:21.635638 size on input set 1
2022-04-20 19:09:21.635815 using api key sunu
2022-04-20 19:09:27.638272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\nif n == m:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nN, M = map(int, input().split())\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\n\nA, B = map(int, input().split())\nif A == B:\n    print(\"a == b\")\nelse:\n    print(\"a != b\")\n"
    },
    {
      "index": 3,
      "text": "import sys\nsys.setrecursionlimit(10 ** 6)\n\nN, M = map(int, input().split())\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 4,
      "text": "\nN, M = map(int, input().split())\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nprint(A)\n"
    },
    {
      "index": 6,
      "text": "\na, b, c = map(int, input().split())\nprint(c // min(a, b))\n"
    },
    {
      "index": 7,
      "text": "\nN, M = map(int, input().split())\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650481761,
  "object": "edit"
}
2022-04-20 19:09:27.638599 fix syntax errors 8 ['\n\nn, m = map(int, input().split())\nif n == m:\n    print("Yes")\nelse:\n    print("No")\n', '# coding: utf-8\n\nN, M = map(int, input().split())\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nA, B = map(int, input().split())\nif A == B:\n    print("a == b")\nelse:\n    print("a != b")\n', 'import sys\nsys.setrecursionlimit(10 ** 6)\n\nN, M = map(int, input().split())\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\nN, M = map(int, input().split())\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\nprint(A)\n', '\na, b, c = map(int, input().split())\nprint(c // min(a, b))\n', '\nN, M = map(int, input().split())\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-20 19:09:27.638712 size on output set 7
2022-04-20 19:09:27.638725 num operations 1
2022-04-20 19:09:27.638731 size on input set 1
2022-04-20 19:09:27.638893 using api key gabby
2022-04-20 19:09:27.675215 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:09:29.177060 using api key sourya
2022-04-20 19:09:36.591622 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split())) # N, M\ub97c \ubc1b\uc544\uc11c\n\nif N == M: # N, M\uc774 \uac19\uc73c\uba74\n    print(\"Yes\")\nelse: # \uac19\uc9c0 \uc54a\uc73c\uba74\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print(\"Yes\")\nelse:\n\n# \uc774\ub807\uac8c \ud558\uba74 \uc548\ub418\ub294\uac70 \uc54c\uc544\ub450\uae30\n    print(\"No\")\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N):\n    print(i+1)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\nif N == M: \n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650481769,
  "object": "edit"
}
2022-04-20 19:09:36.591920 fix syntax errors 8 ['\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split())) # N, M를 받아서\n\nif N == M: # N, M이 같으면\n    print("Yes")\nelse: # 같지 않으면\n    print("No")\n', '\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print("Yes")\nelse:\n\n# 이렇게 하면 안되는거 알아두기\n    print("No")\n', '\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n', '\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N):\n    print(i+1)\n', '\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\n\nif N == M:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nimport sys\n\nN, M = list(map(int, sys.stdin.readline().split()))\nif N == M: \n    print("Yes")\nelse:\n    print("No")\n']
2022-04-20 19:09:36.591962 size on output set 7
