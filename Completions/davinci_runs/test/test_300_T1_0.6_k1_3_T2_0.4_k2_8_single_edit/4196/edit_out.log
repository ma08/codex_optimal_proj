2022-04-20 18:20:17.802938 num operations 1
2022-04-20 18:20:17.802959 size on input set 1
2022-04-20 18:20:17.803122 using api key sunu
2022-04-20 18:20:29.249509 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\n\n\"\"\"\n\nimport sys\n\n\ndef gcd(a, b): return a if b == 0 else gcd(b, a % b)\n\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"
    }
  ],
  "created": 1650478817,
  "object": "edit"
}
2022-04-20 18:20:29.249832 fix syntax errors 8 ['import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n"""\n\n"""\n\nimport sys\n\n\ndef gcd(a, b): return a if b == 0 else gcd(b, a % b)\n\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n', 'import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n']
2022-04-20 18:20:29.249982 size on output set 4
2022-04-20 18:20:29.249994 num operations 1
2022-04-20 18:20:29.250000 size on input set 1
2022-04-20 18:20:29.250156 using api key gabby
2022-04-20 18:20:29.287273 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 18:20:30.789174 using api key gabby
2022-04-20 18:20:30.825929 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 18:20:33.829338 using api key gabby
2022-04-20 18:20:33.866063 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-20 18:20:39.872524 using api key soukgp
2022-04-20 18:20:45.816836 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 1,
      "text": "import math\n\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nprint(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 2,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 3,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 4,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 5,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 6,
      "text": "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na = list(map(int, input().split())) \n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n"
    }
  ],
  "created": 1650478839,
  "object": "edit"
}
2022-04-20 18:20:45.817131 fix syntax errors 8 ['import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nprint(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', 'import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n', '\n\nn = int(input())\na = list(map(int, input().split())) \n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n']
2022-04-20 18:20:45.817168 size on output set 3
2022-04-20 18:20:45.817182 num operations 1
2022-04-20 18:20:45.817189 size on input set 1
2022-04-20 18:20:45.817382 using api key sunu
2022-04-20 18:20:50.341017 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 4,
      "text": "import math\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 5,
      "text": "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 6,
      "text": "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    },
    {
      "index": 7,
      "text": "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"
    }
  ],
  "created": 1650478845,
  "object": "edit"
}
2022-04-20 18:20:50.341295 fix syntax errors 8 ["\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "\nimport math\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n"]
2022-04-20 18:20:50.341331 size on output set 4
