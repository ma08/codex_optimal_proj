2022-04-20 19:09:36.984113 num operations 1
2022-04-20 19:09:36.984133 size on input set 1
2022-04-20 19:09:36.984316 using api key jaanu
2022-04-20 19:09:46.858079 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    # Get Input\n    s = sys.stdin.readline().rstrip()\n\n    # Split Input\n    s1 = s[0:3]\n    s2 = s[3:6]\n\n    # Check if coffee-like\n    if s1[1] == s1[2] and s2[0] == s2[1]:\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 5,
      "text": "import sys\n\n# Get Input and split\ns = sys.stdin.readline().rstrip().split()\n\n# Check if coffee-like\nif s[0][1] == s[0][2] and s[1][0] == s[1][1]:\n    print('Yes')\nelse:\n    print('No')\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\n# Get Inputs\ns1 = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\n# Check if coffee-like and print\nif s1[1] == s1[2] and s2[0] == s2[1]: \n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650481777,
  "object": "edit"
}
2022-04-20 19:09:46.858467 fix syntax errors 8 ["#!/usr/bin/env python3\n\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef main():\n    # Get Input\n    s = sys.stdin.readline().rstrip()\n\n    # Split Input\n    s1 = s[0:3]\n    s2 = s[3:6]\n\n    # Check if coffee-like\n    if s1[1] == s1[2] and s2[0] == s2[1]:\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\n# Get Input and split\ns = sys.stdin.readline().rstrip().split()\n\n# Check if coffee-like\nif s[0][1] == s[0][2] and s[1][0] == s[1][1]:\n    print('Yes')\nelse:\n    print('No')\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\n# Get Inputs\ns1 = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\n# Check if coffee-like and print\nif s1[1] == s1[2] and s2[0] == s2[1]: \n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-20 19:09:46.858513 size on output set 6
2022-04-20 19:09:46.858527 num operations 1
2022-04-20 19:09:46.858534 size on input set 1
2022-04-20 19:09:46.858728 using api key gabby
2022-04-20 19:09:46.898296 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:09:48.400197 using api key sunu
2022-04-20 19:09:56.405584 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 3,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 4,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 5,
      "text": "\n\nS = input()\nif S[0] == S[1] and S[2] == S[3] and S[1] != S[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 6,
      "text": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 10 22:32:03 2020\n\n\n@author: user\n\"\"\"\n\n\ndef main():\n    S = input()\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650481788,
  "object": "edit"
}
2022-04-20 19:09:56.405913 fix syntax errors 8 ['\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nS = input()\nif S[0] == S[1] and S[2] == S[3] and S[1] != S[2]:\n    print("Yes")\nelse:\n    print("No")\n', '# -*- coding: utf-8 -*-\n"""\nCreated on Sun May 10 22:32:03 2020\n\n\n@author: user\n"""\n\n\ndef main():\n    S = input()\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-20 19:09:56.405944 size on output set 3
2022-04-20 19:09:56.405958 num operations 1
2022-04-20 19:09:56.405964 size on input set 1
2022-04-20 19:09:56.406126 using api key derek
2022-04-20 19:09:56.446317 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:09:57.948205 using api key derek
2022-04-20 19:09:57.987277 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:10:00.990696 using api key kouti
2022-04-20 19:10:06.511906 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[0] == S[1] and S[2] == S[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n# AtCoder Beginner Contest 096\n# Problem A\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650481801,
  "object": "edit"
}
2022-04-20 19:10:06.512286 fix syntax errors 8 ['\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[0] == S[1] and S[2] == S[3]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\n# AtCoder Beginner Contest 096\n# Problem A\n\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:10:06.512326 size on output set 5
