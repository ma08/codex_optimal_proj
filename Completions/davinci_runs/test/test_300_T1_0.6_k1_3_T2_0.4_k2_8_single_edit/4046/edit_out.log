2022-04-20 16:58:23.161760 num operations 1
2022-04-20 16:58:23.161780 size on input set 1
2022-04-20 16:58:23.161939 using api key sunu
2022-04-20 16:58:32.288373 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1,]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    sys.exit(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        sys.exit(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef get_permutation(q):\n    n = len(q)\n    p = [0] * n\n    for i in range(n):\n        p[q[i]] = i + 1\n    return p\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(n - 1):\n        p.append(p[i] + q[i])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    }
  ],
  "created": 1650473903,
  "object": "edit"
}
2022-04-20 16:58:32.288737 fix syntax errors 8 ["\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1,]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "import sys\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    sys.exit(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        sys.exit(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\n\ndef get_permutation(q):\n    n = len(q)\n    p = [0] * n\n    for i in range(n):\n        p[q[i]] = i + 1\n    return p\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(n - 1):\n        p.append(p[i] + q[i])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"]
2022-04-20 16:58:32.288792 size on output set 5
2022-04-20 16:58:32.288804 num operations 1
2022-04-20 16:58:32.288810 size on input set 1
2022-04-20 16:58:32.288971 using api key sunu
2022-04-20 16:59:01.484760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) > n - 1:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n-1):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-2):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 3
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in range(n):\n    if p[i] > n or p[i] < 1:\n        print(-1)\n        exit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# check if possible\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\nfor i in p:\n    if i > n or i < 1:\n        print(-1)\n        exit()\n\nprint(*p)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input()) # length of p\nq = [int(i) for i in input().split()] # q\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible - abs(i) < n\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible - q[i] != q[i-1]\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible - p[i] > p_last or p[i] < p_first\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    }
  ],
  "created": 1650473912,
  "object": "edit"
}
2022-04-20 16:59:01.485206 NO RESULT
2022-04-20 16:59:01.485225 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 3
}
2022-04-20 16:59:01.485306 fix syntax errors 7 ['\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) > n - 1:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n-1):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-2):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in range(n):\n    if p[i] > n or p[i] < 1:\n        print(-1)\n        exit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# check if possible\nif sum(q) != 0:\n    print(-1)\n    exit()\n\n# check if possible\nfor i in q:\n    if abs(i) >= n:\n        print(-1)\n        exit()\n\n# check if possible\nfor i in range(1, n):\n    if q[i] == q[i-1]:\n        print(-1)\n        exit()\n\n# check if possible\np = [0 for i in range(n)]\nfor i in range(n-1):\n    p[i+1] = p[i] + q[i]\n\nfor i in p:\n    if i > n or i < 1:\n        print(-1)\n        exit()\n\nprint(*p)\n', '\n\nn = int(input()) # length of p\nq = [int(i) for i in input().split()] # q\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible - abs(i) < n\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible - q[i] != q[i-1]\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible - p[i] > p_last or p[i] < p_first\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n']
2022-04-20 16:59:01.485393 size on output set 7
2022-04-20 16:59:01.485412 num operations 1
2022-04-20 16:59:01.485421 size on input set 1
2022-04-20 16:59:01.485668 using api key soukgp
2022-04-20 16:59:11.685520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0] * n\np[0] = q[0]\n\nfor i in range(1, n - 1):\n    p[i] = q[i] + p[i - 1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1] + 1\n\np[n-1] = q[n-2] + p[n-2] + 1\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 0:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\nprint(*p)\n"
    }
  ],
  "created": 1650473941,
  "object": "edit"
}
2022-04-20 16:59:11.685792 fix syntax errors 8 ['\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0] * n\np[0] = q[0]\n\nfor i in range(1, n - 1):\n    p[i] = q[i] + p[i - 1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1] + 1\n\np[n-1] = q[n-2] + p[n-2] + 1\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 0:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\nprint(*p)\n']
2022-04-20 16:59:11.685939 size on output set 8
