["\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n    \n    N = 5\n    H = [10, 4, 8, 7, 3]\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    \"\"\"\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n\n    N = 5\n    H = [10, 4, 8, 7, 3]\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\n    \"\"\"\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n", "\n# read input\nN = int(input())\nH = list(map(int, input().split()))\n\n# count the number of moves\n# the number of moves is the maximum number of consecutive steps where the height decreases.\ncount = 0\nmax_count = 0\nfor i in range(N-1):\n    if H[i] >= H[i+1]:\n        count += 1\n    elif H[i] < H[i+1]:\n        max_count = max(max_count, count)\n        count = 0\nmax_count = max(max_count, count)\n\n# output\nprint(max_count)\n", "\nn = int(input())\nh = list(map(int, input().split()))\n\ncount = 0\nc = 0\nfor i in range(n-1):\n    if h[i] >= h[i+1]:\n        c += 1\n    else:\n        if c > count:\n            count = c\n        c = 0\n\nprint(max(count, c))\n", "\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n    N = 5\n    H = [10, 4, 8, 7, 3]\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import curve_fit\nfrom scipy.stats import linregress\n\n# \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\ndata = np.loadtxt(\"data.txt\", comments=\"#\", delimiter=\"\\t\", unpack=False)\n\nx = data[:,0]\ny = data[:,1]\n\n# \u7dda\u5f62\u56de\u5e30\nslope, intercept, r_value, p_value, std_err = linregress(x,y)\n\n# \u4fc2\u6570\na = slope\nb = intercept\n\n# \u56de\u5e30\u76f4\u7dda\ny_fit = a * x + b\n\n# \u6a19\u6e96\u504f\u5dee\ns = np.sqrt(np.sum((y - y_fit)**2) / (len(x) - 2))\n\n# \u504f\u5dee\u5e73\u65b9\u548c\ns_s = np.sum((y - y_fit)**2)\n\n# \u6c7a\u5b9a\u4fc2\u6570\nr2 = r_value**2\n\n# \u81ea\u7531\u5ea6\ndf = len(x) - 2\n\n# \u76f8\u95a2\u4fc2\u6570\nr = np.sqrt(r2)\n\n# \u56de\u5e30\u76f4\u7dda\u306e\u8868\u793a\nplt.plot(x, y_fit, color=\"red\", linewidth=1)\n\n# \u6563\u5e03\u56f3\u306e\u8868\u793a\nplt.scatter(x, y, color=\"blue\", marker=\"o\", linewidth=1)\n\n# \u30b0\u30e9\u30d5\u306e\u8868\u793a\nplt.show()\n", "\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n    \"\"\"\n    N = 3\n    H = [10, 4, 8]\n\n    count = 0\n    for i in range(N - 1):\n        if H[i] < H[i + 1]:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n    \n    N = 5\n    H = [10, 4, 8, 7, 3]\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\n    \"\"\"\n    print(\"Hello World!\")\n\nif __name__ == '__main__':\n    main()\n", "# read input\nN = int(input())\nH = list(map(int, input().split()))\n\n# count the number of moves\n# the number of moves is the maximum number of consecutive steps where the height decreases.\ncount = 0\nmax_count = 0\nfor i in range(N-1):\n    if H[i] >= H[i+1]:\n        count += 1\n    elif H[i] < H[i+1]:\n        max_count = max(max_count, count)\n        count = 0\nmax_count = max(max_count, count)\n\n# output\nprint(max_count)\n", "import sys\n\n# read input\nN = int(input())\nH = list(map(int, input().split()))\n\n# count the number of moves\n# the number of moves is the maximum number of consecutive steps where the height decreases.\ncount = 0\nmax_count = 0\nfor i in range(N-1):\n    if H[i] >= H[i+1]:\n        count += 1\n    elif H[i] < H[i+1]:\n        max_count = max(max_count, count)\n        count = 0\nmax_count = max(max_count, count)\n\n# output\nprint(max_count)\n", "\n\ndef main():\n    \n    N = int(input())\n    H = list(map(int,input().split()))\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] <= H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn = int(input())\nh = list(map(int, input().split()))\n\ncount = 0\nc = 0\nfor i in range(n-1):\n    if h[i] >= h[i+1]:\n        c += 1\n    else:\n        if c > count:\n            count = c\n        c = 0\n\nprint(max(count, c))\n", "\n\ndef main():\n    \"\"\"\n    N = int(input())\n    H = list(map(int,input().split()))\n\n    N = 5\n    H = [10, 4, 8, 7, 3]\n\n    count = 0\n    for i in range(N):\n        if i == N - 1:\n            break\n        elif H[i] < H[i + 1]:\n            break\n        else:\n            count += 1\n    print(count)\"\"\"\n\nif __name__ == '__main__':\n    main()\n"]