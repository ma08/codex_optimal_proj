["\n#Python 2.7.12\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef main():\n    a, b = map(int, raw_input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\nmain()\n", "#!/usr/bin/env python\n\n#Python 2.7.12\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n# from math import sqrt\n# from sys import stdin, stdout\n\n# def solve(a, b):\n#     m = min(a, b)\n#     n = max(a, b)\n#     if n % m == 0:\n#         return n + (n / m) + (n / m)\n#     else:\n#         s = int(sqrt(m))\n#         while s > 0:\n#             if m % s == 0:\n#                 return n + (m / s) + (n * s)\n#             s -= 1\n#         return n + 2 * m\n\n# a, b = map(int, stdin.readline().split())\n# stdout.write(str(solve(a, b)))\n\nfrom math import sqrt\nfrom sys import stdin, stdout\n\ndef solve(a, b):\n    m = min(a, b)\n    n = max(a, b)\n    if n % m == 0:\n        return n + (n / m) + (n / m)\n    else:\n        s = int(sqrt(m))\n        while s > 0:\n            if m % s == 0:\n                return n + (m / s) + (n * s)\n            s -= 1\n        return n + 2 * m\n\na, b = map(int, stdin.readline().split())\nstdout.write(str(solve(a, b)))\n", "\n\ndef main():\n    import sys\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in d:\n            return d[(n,a,b)]\n        else:\n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1)) \n            return d[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    d={}\n    print(f(n,a,b))\nmain()\n", "\n\ndef main():\n    import sys\n    import math\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in d:\n            return d[(n,a,b)]\n        else:\n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1)) # recurrence relation\n            return d[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    d={}\n    print(f(n,a,b)) # output\nmain()\n", "\n\n#Python 2.7.14\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, raw_input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n\n# from math import sqrt\n# from sys import stdin, stdout\n#\n# def solve(a, b):\n#     m = min(a, b)\n#     n = max(a, b)\n#     if n % m == 0:\n#         return n + (n / m) + (n / m)\n#     else:\n#         s = int(sqrt(m))\n#         while s > 0:\n#             if m % s == 0:\n#                 return n + (m / s) + (n * s)\n#             s -= 1\n#         return n + 2 * m\n#\n# a, b = map(int, stdin.readline().split())\n# stdout.write(str(solve(a, b)))\n#\nfrom math import sqrt\nfrom sys import stdin, stdout\n\ndef solve(a, b):\n    m = min(a, b)\n    n = max(a, b)\n    if n % m == 0:\n        return n + (n / m) + (n / m)\n    else:\n        s = int(sqrt(m))\n        while s > 0:\n            if m % s == 0:\n                return n + (m / s) + (n * s)\n            s -= 1\n        return n + 2 * m\n\na, b = map(int, stdin.readline().split())\nstdout.write(str(solve(a, b)))\n", "\n\n# Python 2.7.12\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, raw_input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\n\nmain()\n", "\n\n#Python 2.7.12\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, raw_input().split())\n    g = gcd(a, b)\n    a //= g\n    b //= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n\ndef main():\n    import sys\n    import math\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in d:\n            return d[(n,a,b)]\n        else:\n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1),a*b+f(n-1,a-1,b-1))\n            return d[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    d={}\n    print(f(n,a,b))\nmain()\n", "\n\ndef main():\n    import sys\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in d:\n            return d[(n,a,b)]\n        else:\n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1)) #recurrence relation\n            return d[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    d={}\n    print(f(n,a,b))\nmain()\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n\ndef main():\n    import sys\n    import math\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in d:\n            return d[(n,a,b)]\n        else:\n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1),a*b+f(n-1,a,b-1),a*b+f(n-1,a-1,b))\n            return d[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    d={}\n    print(f(n,a,b))\nmain()\n", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, raw_input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n\ndef main():\n    import sys\n    import math\n    # define the recurrence relation \n    def f(n,a,b): \n        if n==0: \n            return 0 \n        if (n,a,b) in d: \n            return d[(n,a,b)] \n        else: \n            d[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1)) \n            return d[(n,a,b)] \n    a,b=map(int,sys.stdin.readline().split()) \n    n=(a+b)//2 \n    d={} \n    print(f(n,a,b)) \nmain()\n", "\n\ndef main():\n    import sys\n    # define the recurrence relation\n    def f(n,a,b):\n        if n==0:\n            return 0\n        if (n,a,b) in dic:\n            return dic[(n,a,b)]\n        else:\n            dic[(n,a,b)]=min(a*n+f(n-1,a,b),b*n+f(n-1,a,b),a*b+f(n-1,a-1,b-1))\n            return dic[(n,a,b)]\n    a,b=map(int,sys.stdin.readline().split())\n    n=(a+b)//2\n    dic={}\n    print(f(n,a,b))\nmain()\n", "\n\n#Python 3.6.4\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    a, b = map(int, input().split())\n    g = gcd(a, b)\n    a /= g\n    b /= g\n    if a == b:\n        print 4 * a\n    else:\n        print 2 * (a + b)\n\nmain()\n", "\n\nfrom math import sqrt\nfrom sys import stdin, stdout\n\ndef solve(a, b):\n    m = min(a, b)\n    n = max(a, b)\n    if n % m == 0:\n        return n + (n / m) + (n / m)\n    else:\n        s = int(sqrt(m))\n        while s > 0:\n            if m % s == 0:\n                return n + (m / s) + (n * s)\n            s -= 1\n        return n + 2 * m\n\na, b = map(int, stdin.readline().split())\nstdout.write(str(solve(a, b)))\n"]