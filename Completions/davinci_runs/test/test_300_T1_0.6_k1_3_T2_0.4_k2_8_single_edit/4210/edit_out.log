2022-04-20 18:30:07.827653 num operations 1
2022-04-20 18:30:07.827673 size on input set 1
2022-04-20 18:30:07.827825 using api key sourya
2022-04-20 18:30:15.645858 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    a, b = map(int, input().split())\n    print(a * b)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split().split()))\n    a.sort()\n    print(a[n//2])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650479407,
  "object": "edit"
}
2022-04-20 18:30:15.646155 fix syntax errors 8 ['\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    a, b = map(int, input().split())\n    print(a * b)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            num = int(str(a[i]) + str(a[j]))\n            if num % k == 0:\n                count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split().split()))\n    a.sort()\n    print(a[n//2])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 18:30:15.646201 size on output set 5
2022-04-20 18:30:15.646212 num operations 1
2022-04-20 18:30:15.646218 size on input set 1
2022-04-20 18:30:15.646400 using api key soukgp
2022-04-20 18:30:28.605686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\n\ndef main():\n    print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, k, a):\n    ans = 0 \n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) % k == 0:\n                ans += 1\n    return ans\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2 and k % 2 == 0:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2 and k % 2 == 0:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n#\n# def solve():\n#     n, k = map(int, input().split())\n#     a = list(map(int, input().split()))\n#     ans = 0\n#     nums = [0] * k\n#     for i in range(n):\n#         nums[a[i] % k] += 1\n#     for i in range(k):\n#         if i == 0:\n#             ans += nums[0] * (nums[0] - 1) // 2\n#         elif i == k // 2:\n#             ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n#         elif i < k // 2:\n#             ans += nums[i] * nums[k - i]\n#     return ans\n#\n# def main():\n#     print(solve())\n#\n# if __name__ == '__main__':\n#     main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef solve():\n    n, k = map(int, input().split())  # n:\u500b\u6570, k:mod\u5024\n    a = list(map(int, input().split()))  # a:\u5024\u306e\u914d\u5217\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "# -*- coding: utf-8 -*-\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650479415,
  "object": "edit"
}
2022-04-20 18:30:28.606072 fix syntax errors 8 ["\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\n\ndef main():\n    print(solve())\n\n\nif __name__ == '__main__':\n    main()\n", '\ndef solve(n, k, a):\n    ans = 0 \n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) % k == 0:\n                ans += 1\n    return ans\n', "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2 and k % 2 == 0:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n", "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2 and k % 2 == 0:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n", "\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n", "\n#\n# def solve():\n#     n, k = map(int, input().split())\n#     a = list(map(int, input().split()))\n#     ans = 0\n#     nums = [0] * k\n#     for i in range(n):\n#         nums[a[i] % k] += 1\n#     for i in range(k):\n#         if i == 0:\n#             ans += nums[0] * (nums[0] - 1) // 2\n#         elif i == k // 2:\n#             ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n#         elif i < k // 2:\n#             ans += nums[i] * nums[k - i]\n#     return ans\n#\n# def main():\n#     print(solve())\n#\n# if __name__ == '__main__':\n#     main()\n", "\n\ndef solve():\n    n, k = map(int, input().split())  # n:個数, k:mod値\n    a = list(map(int, input().split()))  # a:値の配列\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    nums = [0] * k\n    for i in range(n):\n        nums[a[i] % k] += 1\n    for i in range(k):\n        if i == 0:\n            ans += nums[0] * (nums[0] - 1) // 2\n        elif i == k // 2:\n            ans += nums[k // 2] * (nums[k // 2] - 1) // 2\n        elif i < k // 2:\n            ans += nums[i] * nums[k - i]\n    return ans\n\ndef main():\n    print(solve())\n    \nif __name__ == '__main__':\n    main()\n"]
2022-04-20 18:30:28.606183 size on output set 7
2022-04-20 18:30:28.606196 num operations 1
2022-04-20 18:30:28.606202 size on input set 1
2022-04-20 18:30:28.606367 using api key sourya
2022-04-20 18:30:45.435294 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef concat(a, b):\n    length = len(str(a))\n    return a*10**length + b\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(arr, k):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if is_divisible(arr[i], arr[j], k): count += 1\n    return count\n\ndef main():\n    k = int(input())\n    arr = list(map(int, input().split()))[1:]\n    print(solve(arr, k))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef concat(a, b):\n    return a*10**len(str(b)) + b\n\ndef kaprekar(n):\n    n1 = int(''.join(sorted(str(n))))\n    n2 = int(''.join(sorted(str(n))[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#\n# def concat(a, b):\n#     length = len(str(a))\n#     return a*10**length + b\n#\n# def kaprekar(n):\n#     n = str(n)\n#     n1 = int(''.join(sorted(n)))\n#     n2 = int(''.join(sorted(n)[::-1]))\n#     return n2 - n1\n#\n# def is_divisible(a, b, k):\n#     return concat(a, b) % k == 0\n#\n# def solve(n, k, arr):\n#     count = 0\n#     i = 0\n#     while i < n:\n#         j = i + 1\n#         while j < n:\n#             if is_divisible(arr[i], arr[j], k):\n#                 count += 1\n#             j += 1\n#         i += 1\n#     return count\n#\n# def main():\n#     n, k = map(int, input().split())\n#     arr = list(map(int, input().split()))\n#     print(solve(n, k, arr))\n#\n# if __name__ == \"__main__\":\n#     main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10 ** length + b\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(''.join(sorted(n)))\n    n2 = int(''.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef concat(a, b):\n    length = len(str(b))\n    return a*10**length + b \n\ndef kaprekar(n):\n    n = str(n) \n    n1 = int(''.join(sorted(n))) \n    n2 = int(''.join(sorted(n)[::-1])) \n    return n2 - n1 \n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0 \n\ndef solve(n, k, arr):\n    count = 0 \n    i = 0 \n    while i < n:\n        j = i + 1 \n        while j < n:\n            if is_divisible(arr[i], arr[j], k): \n                count += 1 \n            j += 1 \n        i += 1 \n    return count \n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef concat(a, b):\n    return a*10**len(str(a)) + b\n\ndef kaprekar(n):\n    n1 = int(''.join(sorted(str(n))))\n    n2 = int(''.join(sorted(str(n))[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if is_divisible(arr[i], arr[j], k) and kaprekar(arr[i]) == arr[j]:\n                count += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10**length + b\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(''.join(sorted(n)))\n    n2 = int(''.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10 ** length + b\n\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(''.join(sorted(n)))\n    n2 = int(''.join(sorted(n)[::-1]))\n    return n2 - n1\n\n\ndef is_divisible(a, b, k):\n\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650479428,
  "object": "edit"
}
2022-04-20 18:30:45.435653 fix syntax errors 8 ['\n\ndef concat(a, b):\n    length = len(str(a))\n    return a*10**length + b\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(arr, k):\n    count = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if is_divisible(arr[i], arr[j], k): count += 1\n    return count\n\ndef main():\n    k = int(input())\n    arr = list(map(int, input().split()))[1:]\n    print(solve(arr, k))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef concat(a, b):\n    return a*10**len(str(b)) + b\n\ndef kaprekar(n):\n    n1 = int(\'\'.join(sorted(str(n))))\n    n2 = int(\'\'.join(sorted(str(n))[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\n#\n# def concat(a, b):\n#     length = len(str(a))\n#     return a*10**length + b\n#\n# def kaprekar(n):\n#     n = str(n)\n#     n1 = int(\'\'.join(sorted(n)))\n#     n2 = int(\'\'.join(sorted(n)[::-1]))\n#     return n2 - n1\n#\n# def is_divisible(a, b, k):\n#     return concat(a, b) % k == 0\n#\n# def solve(n, k, arr):\n#     count = 0\n#     i = 0\n#     while i < n:\n#         j = i + 1\n#         while j < n:\n#             if is_divisible(arr[i], arr[j], k):\n#                 count += 1\n#             j += 1\n#         i += 1\n#     return count\n#\n# def main():\n#     n, k = map(int, input().split())\n#     arr = list(map(int, input().split()))\n#     print(solve(n, k, arr))\n#\n# if __name__ == "__main__":\n#     main()\n', '\n\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10 ** length + b\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(\'\'.join(sorted(n)))\n    n2 = int(\'\'.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef concat(a, b):\n    length = len(str(b))\n    return a*10**length + b \n\ndef kaprekar(n):\n    n = str(n) \n    n1 = int(\'\'.join(sorted(n))) \n    n2 = int(\'\'.join(sorted(n)[::-1])) \n    return n2 - n1 \n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0 \n\ndef solve(n, k, arr):\n    count = 0 \n    i = 0 \n    while i < n:\n        j = i + 1 \n        while j < n:\n            if is_divisible(arr[i], arr[j], k): \n                count += 1 \n            j += 1 \n        i += 1 \n    return count \n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef concat(a, b):\n    return a*10**len(str(a)) + b\n\ndef kaprekar(n):\n    n1 = int(\'\'.join(sorted(str(n))))\n    n2 = int(\'\'.join(sorted(str(n))[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if is_divisible(arr[i], arr[j], k) and kaprekar(arr[i]) == arr[j]:\n                count += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10**length + b\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(\'\'.join(sorted(n)))\n    n2 = int(\'\'.join(sorted(n)[::-1]))\n    return n2 - n1\n\ndef is_divisible(a, b, k):\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\nif __name__ == "__main__":\n    main()\n', '\ndef concat(a, b):\n    length = len(str(a))\n    return a * 10 ** length + b\n\n\ndef kaprekar(n):\n    n = str(n)\n    n1 = int(\'\'.join(sorted(n)))\n    n2 = int(\'\'.join(sorted(n)[::-1]))\n    return n2 - n1\n\n\ndef is_divisible(a, b, k):\n\n    return concat(a, b) % k == 0\n\ndef solve(n, k, arr):\n    count = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if is_divisible(arr[i], arr[j], k):\n                count += 1\n            j += 1\n        i += 1\n    return count\n\n\ndef main():\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 18:30:45.435726 size on output set 8
