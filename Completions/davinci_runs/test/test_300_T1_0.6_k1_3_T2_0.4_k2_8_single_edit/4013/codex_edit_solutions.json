["\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(array))\n", "\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n", "\nn = int(input('Enter the number of elements in the array: '))\narray = list(map(int, input().split()))\n\n\n    \"\"\"\n    Find the minimum instability of an array\n    :param n: number of elements in the array\n    :param array: list of integers\n    :return: minimum instability\n    \"\"\"\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n - 1):\n        if array[i] - array[i - 1] < min_instability:\n            min_instability = array[i] - array[i - 1]\n        if array[i + 1] - array[i] < min_instability:\n            min_instability = array[i + 1] - array[i]\n    return min_instability\n\n\nprint('Minimum instability:', min_instability(n, array))\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n", "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n", "\nn = int(input())\narray = list(map(int, input().split()))\n\n\ndef min_instability(n, array):  # O(nlogn)\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n - 1):\n        if array[i] - array[i - 1] < min_instability:\n            min_instability = array[i] - array[i - 1]\n        if array[i + 1] - array[i] < min_instability:\n\n            min_instability = array[i + 1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n", "\n\nn = int(input())  # number of elements in the array\narray = list(map(int, input().split()))  # array of n elements\n\ndef min_instability(n, array):\n    array.sort()  # sort the array\n    min_instability = array[-1] - array[0]  # initialize min instability to the difference between the first and last elements\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:  # if the difference between the current element and the previous element is less than the current min instability\n            min_instability = array[i] - array[i-1]  # set the min instability to that difference\n        if array[i+1] - array[i] < min_instability:  # if the difference between the next element and the current element is less than the current min instability\n            min_instability = array[i+1] - array[i]  # set the min instability to that difference\n    return min_instability  # return the min instability\n\nprint(min_instability(n, array))\n", "#coding:utf-8\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n-2]-a[0], a[n-1]-a[1]))\n", "\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n", "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n", "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"]