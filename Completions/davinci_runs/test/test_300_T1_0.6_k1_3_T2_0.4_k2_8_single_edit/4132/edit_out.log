2022-04-20 17:43:01.068166 num operations 1
2022-04-20 17:43:01.068185 size on input set 1
2022-04-20 17:43:01.068365 using api key soukgp
2022-04-20 17:43:11.614813 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ttry:\n\t\ta[q] -= a[p]\n\texcept IndexError:\n\t\tpass\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 4,
      "text": "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 5,
      "text": "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 6,
      "text": "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 7,
      "text": "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1650476581,
  "object": "edit"
}
2022-04-20 17:43:11.615173 fix syntax errors 8 ["\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "#!/usr/bin/env python3\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ttry:\n\t\ta[q] -= a[p]\n\texcept IndexError:\n\t\tpass\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "#!/usr/bin/env python3\n\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport random\n\ndef resolve(n, a):\n\tp = random.randint(0, n-1)\n\tq = random.randint(0, n-1)\n\twhile p == q:\n\t\tq = random.randint(0, n-1)\n\ta[q] -= a[p]\n\treturn a\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\twhile True:\n\t\ta = resolve(n, a)\n\t\tif a.count(0) == n-1:\n\t\t\tprint(a[a.index(max(a))])\n\t\t\tbreak\n\nif __name__ == '__main__':\n\tmain()\n"]
2022-04-20 17:43:11.615221 size on output set 3
2022-04-20 17:43:11.615232 num operations 1
2022-04-20 17:43:11.615238 size on input set 1
2022-04-20 17:43:11.615398 using api key sourya
2022-04-20 17:43:20.023375 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 1,
      "text": "\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 2,
      "text": "\n\n# input\nN, K = map(int, input().split())\nA = list(map(int, input().split()))[:N]\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    if A[-1] - A[-2] > K:\n        A = A[:-2] + [A[-1] - A[-2] - K]\n    else:\n        A = A[:-2]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # input\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    # sort\n    A.sort()\n\n    # compute\n    while len(A) > 1:\n        A = A[:-2] + [A[-1] - A[-2]]\n\n    # output\n    print(A[0])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 5,
      "text": "\n\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [abs(A[-1] - A[-2])]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 6,
      "text": "\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n"
    },
    {
      "index": 7,
      "text": "\n\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\n\nprint(A[0])\n"
    }
  ],
  "created": 1650476591,
  "object": "edit"
}
2022-04-20 17:43:20.023790 fix syntax errors 8 ['\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n', '\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n', '\n\n# input\nN, K = map(int, input().split())\nA = list(map(int, input().split()))[:N]\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    if A[-1] - A[-2] > K:\n        A = A[:-2] + [A[-1] - A[-2] - K]\n    else:\n        A = A[:-2]\n\n# output\nprint(A[0])\n', "\n\ndef main():\n    # input\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    # sort\n    A.sort()\n\n    # compute\n    while len(A) > 1:\n        A = A[:-2] + [A[-1] - A[-2]]\n\n    # output\n    print(A[0])\n\n\nif __name__ == '__main__':\n    main()\n", '\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n', '\n\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [abs(A[-1] - A[-2])]\n\n# output\nprint(A[0])\n', '\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\nprint(A[0])\n', '\n\n# input\nN = int(input())\nA = list(map(int, input().split()))\n\n# sort\nA.sort()\n\n# compute\nwhile len(A) > 1:\n    A = A[:-2] + [A[-1] - A[-2]]\n\n# output\n\nprint(A[0])\n']
2022-04-20 17:43:20.023837 size on output set 5
2022-04-20 17:43:20.023854 num operations 1
2022-04-20 17:43:20.023865 size on input set 1
2022-04-20 17:43:20.024039 using api key gabby
2022-04-20 17:43:25.314349 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n#\n\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "def main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()), reverse=True)\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650476600,
  "object": "edit"
}
2022-04-20 17:43:25.314612 fix syntax errors 8 ['\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\n#\n\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n = int(input())\n    values = sorted(map(int, input().split()))\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    n = int(input())\n    values = sorted(map(int, input().split()), reverse=True)\n    last = values.pop()\n    while len(values) > 0:\n        last = max(last - values.pop(), 1)\n    print(last)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 17:43:25.314650 size on output set 4
