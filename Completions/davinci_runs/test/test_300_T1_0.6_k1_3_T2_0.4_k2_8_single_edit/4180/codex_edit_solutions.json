["\n\nN = int(input())\nchange = 1000 - (N % 1000) if N % 1000 != 0 else 0\n\nprint(change)\n", "\nimport sys\n\nN = int(input())\n\n# get the number of 1000-yen bills\nnum_of_bills = N // 1000\n\n# get the amount of change (in yen)\nchange = 1000 * num_of_bills - N\n\nprint(change)\n", "# coding: utf-8\n\nN = int(input())\nchange = 1000 - N % 1000\nprint(change)\n", "\nN = int(input())\n\n# get the number of 1000-yen bills.\nnum_of_bills = N // 1000\n\n# get the amount of change.\nchange = 1000 * num_of_bills - N\n\nprint(change)\n", "\nN = int(input())\nchange = 1000 - N % 1000\nprint(change)\n", "\n\nN = int(input())\n\nchange = 1000 - (N % 1000) if N % 1000 != 0 else 0\n\nprint(change)\n", "\nN = int(input())\nchange = 1000 - (N % 1000)\n\nprint(change)\n", "\n\nN = int(input())\nchange = 1000 - N % 1000 if N % 1000 != 0 else 0\nprint(change)\n", "\na, b, c = map(int, input().split())\nprint(a + b + c)\n", "\n\nN = int(input())\nprint(1000 - (N % 1000))\n", "\nN = int(input())\n\n# get the number of 1000-yen bills\nnum_of_bills = N // 1000\n\n# get the amount of change\nchange = 1000 * num_of_bills - N\n\nprint(change)\n", "N = int(input())\n\n# get the number of 1000-yen bills\nnum_of_bills = N // 1000\n\n# get the amount of change\nchange = 1000 * num_of_bills - N\n\nprint(change)\n", "\nN = int(input())\nchange = 1000 - N % 1000 if N % 1000 != 0 else 0\nprint(change)\n", "\n\nN = int(input())\n\n# get the number of 1000-yen bills\nnum_of_bills = N // 1000\n\n# get the amount of change\nchange = 1000 * num_of_bills - N\n\nprint(change)\n", "\n\na, b = map(int, input().split())\nprint(a * b)\n", "\nimport sys\n\nN = int(input())\n\n# get the number of 500-yen bills\nnum_of_bills = N // 500\n\n# get the amount of change\nchange = 1000 * num_of_bills - N\n\nprint(change)\n"]