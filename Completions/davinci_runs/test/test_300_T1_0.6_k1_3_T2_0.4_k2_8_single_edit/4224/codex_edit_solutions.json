["\nimport math\n\nN = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if(a[i] in count):\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\n\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if(k % 2 == 0):\n        ans += v\n    # if the element is odd and the number of it is even\n    elif(k % 2 == 1 and v % 2 == 0):\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif(k % 2 == 1 and v % 2 == 1):\n        ans += v - 1\n\nprint(ans)\n", "\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    while True:\n        cnt = 0\n        for i in range(N):\n            if A[i] % 2 == 0:\n                A[i] //= 2\n                cnt += 1\n        if cnt == 0:\n            break\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n\n    main()\n", "\nN = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(N):\n    if a[i] % 2 == 0:\n        count += 1\n\nprint(count)\n", "\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    while True:\n        cnt = 0\n        for i in range(N):\n            if A[i] % 2 == 0:\n                A[i] //= 2\n                cnt += 1\n        if cnt == 0:\n            break\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "N = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if a[i] in count:\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\n\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if k % 2 == 0:\n        ans += v\n    # if the element is odd and the number of it is even\n    elif k % 2 == 1 and v % 2 == 0:\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif k % 2 == 1 and v % 2 == 1:\n        ans += v - 1\n\nprint(ans)\n", "import sys\nsys.setrecursionlimit(10**6)\n\n\nN, M = map(int, input().split())\n\n\ndef dfs(i, depth, l):\n    if depth == M:\n        print(*l)\n        return\n    for j in range(i, N):\n        dfs(j, depth+1, l+[j+1])\n\n\ndef main(): \n    dfs(0, 0, [])\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n\n    count = 0\n    for i in range(N):\n        if a[i] % 2 == 0:\n            count += 1\n\nprint(count)\n", "\ndef main():\n    N = int(input())\n    A = list(map(int, input().split())) # list(map(int, input().split()))\n    ans = 0\n    while True:\n        cnt = 0 # cnt = 0\n        for i in range(N):\n            if A[i] % 2 == 0:\n                A[i] //= 2 # A[i] //= 2\n                cnt += 1\n        if cnt == 0:\n            break\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if(a[i] in count):\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\n\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if(k % 2 == 0):\n        ans += v\n    # if the element is odd and the number of it is even\n    elif(k % 2 == 1 and v % 2 == 0):\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif(k % 2 == 1 and v % 2 == 1):\n        ans += v - 1\n\nprint(ans)\n", "\n\nN = int(input())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(N):\n    if a[i] % 2 == 0:\n        count += 1\n\nprint(count)\n", "\n\nN = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if(a[i] in count):\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\n\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if(k % 2 == 0):\n        ans += v\n    # if the element is odd and the number of it is even\n    elif(k % 2 == 1 and v % 2 == 0):\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif(k % 2 == 1 and v % 2 == 1):\n        ans += v - 1\n\nprint(ans)\n", "\n\nimport math\n\nN = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if a[i] in count:\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\n\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if k % 2 == 0:\n        ans += v\n    # if the element is odd and the number of it is even\n    elif k % 2 == 1 and v % 2 == 0:\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif k % 2 == 1 and v % 2 == 1:\n        ans += v - 1\n\nprint(ans)\n", "\nimport math\n\nN = int(input())\na = list(map(int, input().split()))\n\n# count the number of each element\ncount = {}\nfor i in range(N):\n    if(a[i] in count):\n        count[a[i]] += 1\n    else:\n        count[a[i]] = 1\nans = 0\nfor k, v in count.items():\n    # if the element is even\n    if(k % 2 == 0):\n        ans += v\n    # if the element is odd and the number of it is even\n    elif(k % 2 == 1 and v % 2 == 0):\n        ans += v\n        # if the element is odd and the number of it is odd\n    elif(k % 2 == 1 and v % 2 == 1):\n        ans += v - 1\nprint(ans)\n", "\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    while True:\n        cnt = 0\n        for i in range(N):\n            if A[i] % 2 == 0:\n                A[i] //= 2\n                cnt += 1\n        if cnt == 0:\n            break\n        ans += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    while True:\n        cnt = 0\n        for i in range(n):\n            if A[i] % 2 == 0:\n                A[i] //= 2\n                cnt += 1\n        if cnt == 0:\n            break\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]