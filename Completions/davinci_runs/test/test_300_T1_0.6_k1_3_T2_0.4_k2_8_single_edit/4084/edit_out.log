2022-04-20 17:17:47.094865 num operations 1
2022-04-20 17:17:47.094881 size on input set 1
2022-04-20 17:17:47.095092 using api key sunu
2022-04-20 17:17:52.734693 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 1,
      "text": "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 2,
      "text": "import fileinput\n\n\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport fileinput\n\nif __name__ == '__main__':\n    for line in sys.stdin:\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 4,
      "text": "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 5,
      "text": "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)) + 1)\n"
    },
    {
      "index": 6,
      "text": "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    },
    {
      "index": 7,
      "text": "\n\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.rstrip().split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"
    }
  ],
  "created": 1650475067,
  "object": "edit"
}
2022-04-20 17:17:52.735006 fix syntax errors 8 ["\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "import fileinput\n\n\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "\nimport sys\nimport fileinput\n\nif __name__ == '__main__':\n    for line in sys.stdin:\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)) + 1)\n", "\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n", "\n\nimport fileinput\n\nif __name__ == '__main__':\n    for line in fileinput.input():\n        n, a, b = map(int, line.rstrip().split())\n\n        if n <= a:\n            print(n)\n        else:\n            print(a + b * ((n - a) // (a + b)))\n"]
2022-04-20 17:17:52.735049 size on output set 5
2022-04-20 17:17:52.735077 num operations 1
2022-04-20 17:17:52.735084 size on input set 1
2022-04-20 17:17:52.735240 using api key sourya
2022-04-20 17:18:09.738421 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# coding: utf-8\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import gcd\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 12, A = 5, B = 7\n\n# b_div_a = N // A\n# b_mod_a = N % A\n\n# if  b_mod_a < A - B:\n#     ans = b_div_a * A + b_mod_a\n# else:\n#     ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nimport math\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\n\n# N, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\n# b_div_a = N // A\n# b_mod_a = N % A\n\n# if  b_mod_a < A - B:\n#     ans = b_div_a * A + b_mod_a\n# else:\n#     ans = b_div_a * A + A - B\n\n# print(ans)\n"
    },
    {
      "index": 4,
      "text": "\n# A = 3, B = 4\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\n#\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\n#\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n"
    }
  ],
  "created": 1650475072,
  "object": "edit"
}
2022-04-20 17:18:09.738727 fix syntax errors 8 ['\n# coding: utf-8\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n', '\nfrom math import gcd\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 12, A = 5, B = 7\n\n# b_div_a = N // A\n# b_mod_a = N % A\n\n# if  b_mod_a < A - B:\n#     ans = b_div_a * A + b_mod_a\n# else:\n#     ans = b_div_a * A + A - B\n\nprint(ans)\n', '\nimport math\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n', '\n\n# N, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\n# b_div_a = N // A\n# b_mod_a = N % A\n\n# if  b_mod_a < A - B:\n#     ans = b_div_a * A + b_mod_a\n# else:\n#     ans = b_div_a * A + A - B\n\n# print(ans)\n', '\n# A = 3, B = 4\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n', '\n#\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n', '\n#\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif  b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n', '\nN, A, B = map(int, input().split())\n\n# c = gcd(A, B)\n# lcm = A * B / c\n# k = N // lcm\n# ans = A * k + min(N % lcm, A)\n\n# print(ans)\n\n# N = 8, A = 3, B = 4\n\nb_div_a = N // A\nb_mod_a = N % A\n\nif b_mod_a < A - B:\n    ans = b_div_a * A + b_mod_a\nelse:\n    ans = b_div_a * A + A - B\n\nprint(ans)\n']
2022-04-20 17:18:09.738861 size on output set 7
2022-04-20 17:18:09.738875 num operations 1
2022-04-20 17:18:09.738881 size on input set 1
2022-04-20 17:18:09.739041 using api key gabby
2022-04-20 17:18:19.700104 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, a, b = map(int, input().split())\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nlcm = a * b // gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 1,
      "text": "\nn, a, b = map(int, input().split())\nn -= 1\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nn, a, b = map(int, input().split())\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 3,
      "text": "\n\nn, a, b = map(int, input().split()) - 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 4,
      "text": "\n\nn, m = map(int, input().split())\na = [int(input()) for _ in range(m)]\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 5,
      "text": "\n\nn, a, b = map(int, input().split())\n\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 6,
      "text": "\nn, a, b = map(int, input().split())\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    },
    {
      "index": 7,
      "text": "\nn, a, b = map(int, input().split())\nn -= 1\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n"
    }
  ],
  "created": 1650475089,
  "object": "edit"
}
2022-04-20 17:18:19.700379 fix syntax errors 8 ['\nn, a, b = map(int, input().split())\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nlcm = a * b // gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\nn, a, b = map(int, input().split())\nn -= 1\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '# coding: utf-8\n\nn, a, b = map(int, input().split())\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\n\nn, a, b = map(int, input().split()) - 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\n\nn, m = map(int, input().split())\na = [int(input()) for _ in range(m)]\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\n\nn, a, b = map(int, input().split())\n\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\nn, a, b = map(int, input().split())\nn -= 1\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ngcd = gcd(a, b)\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n', '\nn, a, b = map(int, input().split())\nn -= 1\n\nprint(n // (a + b) * a + min(n % (a + b), a))\n']
2022-04-20 17:18:19.700416 size on output set 8
