2022-04-20 17:53:09.053152 num operations 1
2022-04-20 17:53:09.053179 size on input set 1
2022-04-20 17:53:09.053360 using api key gabby
2022-04-20 17:53:09.214679 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 17:53:10.716580 using api key derek
2022-04-20 17:53:10.752120 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 17:53:13.755528 using api key sunu
2022-04-20 17:53:20.212759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ns = input()\n\nfor i in range(len(s)): s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\ns = input()\n\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i+1:]\n\nprint(s)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i+1:]\n\nprint(s)\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\ns = input().strip()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n % 26) + s[i + 1:]\n\nprint(s)\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n"
    }
  ],
  "created": 1650477193,
  "object": "edit"
}
2022-04-20 17:53:20.213057 fix syntax errors 8 ['import sys\n\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n', '\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n', '\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n', '\nn = int(input())\ns = input()\n\nfor i in range(len(s)): s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n', '\nn = int(input())\ns = input()\n\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i+1:]\n\nprint(s)\n', '\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i+1:]\n\nprint(s)\n', '#!/usr/bin/env python3\n\nn = int(input())\ns = input().strip()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n % 26) + s[i + 1:]\n\nprint(s)\n', '#!/usr/bin/env python3\n\nn = int(input())\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + chr(ord(s[i]) + n) + s[i + 1:]\n\nprint(s)\n']
2022-04-20 17:53:20.213090 size on output set 7
2022-04-20 17:53:20.213102 num operations 1
2022-04-20 17:53:20.213110 size on input set 1
2022-04-20 17:53:20.213275 using api key kouti
2022-04-20 17:53:27.513011 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\ns = input()\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfor si in s:\n    print(alphabet[(alphabet.index(si) + n) % 26], end=\"\")\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nN = int(input())\nS = input()\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end='')\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end=\"\")\n"
    }
  ],
  "created": 1650477200,
  "object": "edit"
}
2022-04-20 17:53:27.513297 fix syntax errors 8 ['import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\ns = input()\n\nalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n\nfor si in s:\n    print(alphabet[(alphabet.index(si) + n) % 26], end="")\n', '# coding: utf-8\n\nN = int(input())\nS = input()\n\nalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n', "\nN = int(input())\nS = input()\n\nalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end='')\n", '\nN = int(input())\nS = input()\n\nalphabet = \'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n', '\nN = int(input())\nS = input()\n\nalphabet = \'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n', '\nN = int(input())\nS = input()\n\nalphabet = \'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n', '\nN = int(input())\nS = input()\n\nalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n', '\nN = int(input())\nS = input()\n\nalphabet = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'\n\nfor s in S:\n    print(alphabet[(alphabet.index(s) + N) % 26], end="")\n']
2022-04-20 17:53:27.513332 size on output set 6
2022-04-20 17:53:27.513353 num operations 1
2022-04-20 17:53:27.513360 size on input set 1
2022-04-20 17:53:27.513514 using api key soukgp
2022-04-20 17:53:38.483504 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nargs = sys.argv\nf = open(args[1], 'r')\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nA = ord(string.ascii_uppercase[0])\n\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 1,
      "text": "\nimport string\n\nN = int(input())  # \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nS = input()  # \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\n\nA = ord(string.ascii_uppercase[0])\n\nfor ch in S:\n    pos = ord(ch) - A\n    pos = (pos + N) % 26\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 2,
      "text": "\nimport string\n\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\u3002\nA = ord(string.ascii_uppercase[0])\n\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\u3002\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\u3002\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\u3002\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\u3002\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 3,
      "text": "\nimport string\n\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nA = ord(string.ascii_lowercase[0])\n\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 4,
      "text": "import string\n\n\n\nN = int(input())\nS = input()\n\nA = ord(string.ascii_uppercase[0])\n\nfor ch in S:\n    pos = ord(ch) - A\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 5,
      "text": "\nimport string\n\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nA = ord(string.ascii_uppercase[0])\n\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\n\nprint()\n"
    },
    {
      "index": 6,
      "text": "\nimport string\nN = int(input())\nS = input()\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nA = ord(string.ascii_uppercase[0])\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\nprint()\n"
    },
    {
      "index": 7,
      "text": "import string\n\nN = int(input())\nS = input()\n\n# \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089A\u3092\u5dee\u3057\u5f15\u3044\u305f\u6570\u3092\u6c42\u3081\u308b\nA = ord(string.ascii_uppercase[0])\n\n# \u5168\u90e8\u306e\u6587\u5b57\u30921\u6587\u5b57\u305a\u3064\u51e6\u7406\u3059\u308b\nfor ch in S:\n    # \u6587\u5b57ch\u304c\u4f55\u6587\u5b57\u76ee\u304b\u8abf\u3079\u308b\n    pos = ord(ch) - A\n    # N\u3092\u8db3\u3059\n    pos = (pos + N) % 26\n    # 1\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\n    print(chr(pos + A), end='')\n\nprint()\n"
    }
  ],
  "created": 1650477207,
  "object": "edit"
}
2022-04-20 17:53:38.483908 fix syntax errors 8 ["\n\nimport sys\n\nargs = sys.argv\nf = open(args[1], 'r')\n\n# 文字列の先頭からAを差し引いた数を求める\nA = ord(string.ascii_uppercase[0])\n\n# 全部の文字を1文字ずつ処理する\nfor ch in S:\n    # 文字chが何文字目か調べる\n    pos = ord(ch) - A\n    # Nを足す\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\n\nprint()\n", "\nimport string\n\nN = int(input())  # 文字列の先頭からAを差し引いた数を求める\nS = input()  # 全部の文字を1文字ずつ処理する\n\nA = ord(string.ascii_uppercase[0])\n\nfor ch in S:\n    pos = ord(ch) - A\n    pos = (pos + N) % 26\n    print(chr(pos + A), end='')\n\nprint()\n", "\nimport string\n\nN = int(input())\nS = input()\n\n# 文字列の先頭からAを差し引いた数を求める。\nA = ord(string.ascii_uppercase[0])\n\n# 全部の文字を1文字ずつ処理する。\nfor ch in S:\n    # 文字chが何文字目か調べる。\n    pos = ord(ch) - A\n    # Nを足す。\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する。\n    print(chr(pos + A), end='')\n\nprint()\n", "\nimport string\n\nN = int(input())\nS = input()\n\n# 文字列の先頭からAを差し引いた数を求める\nA = ord(string.ascii_lowercase[0])\n\n# 全部の文字を1文字ずつ処理する\nfor ch in S:\n    # 文字chが何文字目か調べる\n    pos = ord(ch) - A\n    # Nを足す\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\n\nprint()\n", "import string\n\n\n\nN = int(input())\nS = input()\n\nA = ord(string.ascii_uppercase[0])\n\nfor ch in S:\n    pos = ord(ch) - A\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\n\nprint()\n", "\nimport string\n\nN = int(input())\nS = input()\n\n# 文字列の先頭からAを差し引いた数を求める\nA = ord(string.ascii_uppercase[0])\n\n# 全部の文字を1文字ずつ処理する\nfor ch in S:\n    # 文字chが何文字目か調べる\n    pos = ord(ch) - A\n    # Nを足す\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\n\nprint()\n", "\nimport string\nN = int(input())\nS = input()\n# 文字列の先頭からAを差し引いた数を求める\nA = ord(string.ascii_uppercase[0])\n# 全部の文字を1文字ずつ処理する\nfor ch in S:\n    # 文字chが何文字目か調べる\n    pos = ord(ch) - A\n    # Nを足す\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\nprint()\n", "import string\n\nN = int(input())\nS = input()\n\n# 文字列の先頭からAを差し引いた数を求める\nA = ord(string.ascii_uppercase[0])\n\n# 全部の文字を1文字ずつ処理する\nfor ch in S:\n    # 文字chが何文字目か調べる\n    pos = ord(ch) - A\n    # Nを足す\n    pos = (pos + N) % 26\n    # 1文字ずつ出力する\n    print(chr(pos + A), end='')\n\nprint()\n"]
2022-04-20 17:53:38.483971 size on output set 8
