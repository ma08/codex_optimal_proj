2022-04-20 17:50:34.614980 num operations 1
2022-04-20 17:50:34.615000 size on input set 1
2022-04-20 17:50:34.615178 using api key sunu
2022-04-20 17:51:18.946526 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\ninput = sys.stdin.readline\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 5,
      "text": "import sys\ninput = sys.stdin.readline().rstrip()\n\nn = int(input())\n\n# dp[i][j] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\ndp = [[0]*(n+1) for _ in range(n+1)]\ndp[0][0] = 1\ndp[0][1] = 0\n\nfor i in range(1, n+1):\n    for j in range(n):\n        if j == 0:\n            dp[i][j] = dp[i-1][j] * 8 + dp[i-1][j+1]\n        elif j == n-1:\n            dp[i][j] = dp[i-1][j] * 9 + dp[i-1][j-1]\n        else:\n            dp[i][j] = dp[i-1][j] * 8 + dp[i-1][j+1] + dp[i-1][j-1]\nans = sum(dp[n][j] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1  # 0\u6841\u76ee\u307e\u3067\u30670\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u30010\u6841\u76ee\u304c0\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\ndp[0][0][1] = 0  # 0\u6841\u76ee\u307e\u3067\u30670\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u30010\u6841\u76ee\u304c1\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\ndp[0][1][0] = 0  # 0\u6841\u76ee\u307e\u3067\u30671\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u30010\u6841\u76ee\u304c0\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\ndp[0][1][1] = 1  # 0\u6841\u76ee\u307e\u3067\u30671\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u30010\u6841\u76ee\u304c1\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]  # 0\u6841\u76ee\u304c0\u306e\u3068\u304d\n            dp[i][j][1] = dp[i-1][j][1]  # 1\u6841\u76ee\u304c0\u306e\u3068\u304d\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570 k = 0: 0, 1: 1\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\u306fj\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u304cj-1\u306b\u306a\u308b\n# i\u6841\u76ee\u304c9\u306e\u3068\u304d\u306fj\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u304cj+1\u306b\u306a\u308b\n# \u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306fj\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u306fj-1, j, j+1\u306e\u3044\u305a\u308c\u304b\u306b\u306a\u308b\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\n# 1\u6841\u76ee\u306f0\u306e\u3068\u304d\u3057\u304b\u306a\u3044\ndp[0][0][0] = 1\ndp[0][0][1] = 0\n# 1\u6841\u76ee\u306f1\u306e\u3068\u304d\u3057\u304b\u306a\u3044\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n            # 0\u306e\u6642\u306fj-1\u56de\n        if j == 0:\n            # 1\u306e\u6642\u306fj\u56de\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            # 0\u306e\u6642\u306fj\u56de\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            # 1\u306e\u6642\u306fj\u56de\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            # 0\u306e\u6642\u306fj-1\u56de\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            # 1\u306e\u6642\u306fj\u56de\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    }
  ],
  "created": 1650477034,
  "object": "edit"
}
2022-04-20 17:51:18.946969 fix syntax errors 8 ['\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', '\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\n\n\nimport sys\ninput = sys.stdin.readline\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', 'import sys\ninput = sys.stdin.readline().rstrip()\n\nn = int(input())\n\n# dp[i][j] i桁目まででjが出てきた回数であるものの個数\ndp = [[0]*(n+1) for _ in range(n+1)]\ndp[0][0] = 1\ndp[0][1] = 0\n\nfor i in range(1, n+1):\n    for j in range(n):\n        if j == 0:\n            dp[i][j] = dp[i-1][j] * 8 + dp[i-1][j+1]\n        elif j == n-1:\n            dp[i][j] = dp[i-1][j] * 9 + dp[i-1][j-1]\n        else:\n            dp[i][j] = dp[i-1][j] * 8 + dp[i-1][j+1] + dp[i-1][j-1]\nans = sum(dp[n][j] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1  # 0桁目までで0が出てきた回数で、0桁目が0であるものの個数\ndp[0][0][1] = 0  # 0桁目までで0が出てきた回数で、0桁目が1であるものの個数\ndp[0][1][0] = 0  # 0桁目までで1が出てきた回数で、0桁目が0であるものの個数\ndp[0][1][1] = 1  # 0桁目までで1が出てきた回数で、0桁目が1であるものの個数\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]  # 0桁目が0のとき\n            dp[i][j][1] = dp[i-1][j][1]  # 1桁目が0のとき\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数 k = 0: 0, 1: 1\n# i桁目が0のときはjが出てきた回数がj-1になる\n# i桁目が9のときはjが出てきた回数がj+1になる\n# それ以外のときはjが出てきた回数はj-1, j, j+1のいずれかになる\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\n# 1桁目は0のときしかない\ndp[0][0][0] = 1\ndp[0][0][1] = 0\n# 1桁目は1のときしかない\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n            # 0の時はj-1回\n        if j == 0:\n            # 1の時はj回\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            # 0の時はj回\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            # 1の時はj回\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            # 0の時はj-1回\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            # 1の時はj回\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n']
2022-04-20 17:51:18.947128 size on output set 6
2022-04-20 17:51:18.947150 num operations 1
2022-04-20 17:51:18.947159 size on input set 1
2022-04-20 17:51:18.947369 using api key soukgp
2022-04-20 17:51:29.403504 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    # dp = [0] * (N + 1)\n    # dp[1] = 10\n    # # dp[i] = dp[i-1] * 9 + dp[i-2] * 10\n    # for i in range(2, N + 1):\n    #     dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    #     dp[i] %= mod\n    # print(dp[N])\n    dp = [0] * (N + 1)\n    dp[1] = 9\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 9\n        dp[i] %= mod\n    print(dp[N])    \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\nimport math\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    if N == 1 and M == 1:\n        print(1)\n    elif N == 1 and M != 1:\n        print(M - 2)\n    elif N != 1 and M == 1:\n        print(N - 2)\n    else:\n        print((N - 2) * (M - 2))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    for i in range(2, N + 1):\n        dp[i] = (dp[i - 1] * 9 + dp[i - 2] * 10) % mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650477078,
  "object": "edit"
}
2022-04-20 17:51:29.403792 fix syntax errors 8 ['\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    # dp = [0] * (N + 1)\n    # dp[1] = 10\n    # # dp[i] = dp[i-1] * 9 + dp[i-2] * 10\n    # for i in range(2, N + 1):\n    #     dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    #     dp[i] %= mod\n    # print(dp[N])\n    dp = [0] * (N + 1)\n    dp[1] = 9\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 9\n        dp[i] %= mod\n    print(dp[N])    \n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport math\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    if N == 1 and M == 1:\n        print(1)\n    elif N == 1 and M != 1:\n        print(M - 2)\n    elif N != 1 and M == 1:\n        print(N - 2)\n    else:\n        print((N - 2) * (M - 2))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10 \n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', 'import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    for i in range(2, N + 1):\n        dp[i] = (dp[i - 1] * 9 + dp[i - 2] * 10) % mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 17:51:29.403843 size on output set 5
2022-04-20 17:51:29.403856 num operations 1
2022-04-20 17:51:29.403863 size on input set 1
2022-04-20 17:51:29.404025 using api key sourya
2022-04-20 17:51:37.966068 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + ... + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n# \n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 4,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] + \\cdots + A[0]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 6,
      "text": "\n\nN = int(input())\n\nfor i in range(N):\n    print(i+1)\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] = A[i-2] + A[i-3] + \\cdots + A[0] = A[i-1] + A[i-1] - A[0] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    }
  ],
  "created": 1650477089,
  "object": "edit"
}
2022-04-20 17:51:37.966457 fix syntax errors 8 ['#\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + ... + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n# \n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] + \\cdots + A[0]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\nN = int(input())\n\nfor i in range(N):\n    print(i+1)\n', '\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] = A[i-2] + A[i-3] + \\cdots + A[0] = A[i-1] + A[i-1] - A[0] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n']
2022-04-20 17:51:37.966508 size on output set 8
