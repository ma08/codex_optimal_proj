2022-04-20 17:59:29.649403 num operations 1
2022-04-20 17:59:29.649423 size on input set 1
2022-04-20 17:59:29.649589 using api key gabby
2022-04-20 17:59:29.818783 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 17:59:31.320695 using api key soukgp
2022-04-20 17:59:39.585281 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2\n    # If we get an array that is greater than the\n    # current number, we divide the current number \n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2.\n    # If we get an array that is greater than the\n    # current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2\n    # and dividing the current number by 3.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Sort the array in descending order.\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650477571,
  "object": "edit"
}
2022-04-20 17:59:39.585638 fix syntax errors 8 ["\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2\n    # If we get an array that is greater than the\n    # current number, we divide the current number \n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2.\n    # If we get an array that is greater than the\n    # current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2\n    # and dividing the current number by 3.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Sort the array in descending order.\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 17:59:39.585814 size on output set 6
2022-04-20 17:59:39.585828 num operations 1
2022-04-20 17:59:39.585834 size on input set 1
2022-04-20 17:59:39.585993 using api key gabby
2022-04-20 17:59:39.625387 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 17:59:41.127279 using api key sunu
2022-04-20 18:00:00.594206 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): print(\"3000000000000000000 1000000000000000000\"); return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000): print(\"1000000000000000000 3000000000000000000\"); return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126): print(\"126 42 84 28\"); return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28): print(\"28 42 84 126\"); return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9): print(\"9 3 6 12 4 8\"); return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8): print(\"8 4 12 6 3 9\"); return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000\")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000\")\n            return\n\n    if(n==4):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\")\n            return\n\n    if(n==6):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000 and a[4]==1000000000000000000 and a[5]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000 and a[4]==1000000000000000000 and a[5]==1000000000000000000):\n            print(\"1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\")\n            return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): \n            print(\"3000000000000000000 1000000000000000000\") \n            return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000): \n            print(\"1000000000000000000 3000000000000000000\") \n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126): \n            print(\"126 42 84 28\") \n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28): \n            print(\"28 42 84 126\") \n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9): \n            print(\"9 3 6 12 4 8\") \n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8): \n            print(\"8 4 12 6 3 9\") \n            return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print(\"3000000000000000000 1000000000000000000\")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print(\"126 42 84 28\")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print(\"28 42 84 126\")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print(\"9 3 6 12 4 8\")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print(\"3000000000000000000 1000000000000000000\")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print(\"126 42 84 28\")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print(\"28 42 84 126\")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print(\"9 3 6 12 4 8\")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==10**18 and a[1]==3*10**18):\n            print(\"3*10**18 10**18\")\n            return\n        if(a[0]==3*10**18 and a[1]==10**18):\n            print(\"10**18 3*10**18\")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print(\"126 42 84 28\")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print(\"28 42 84 126\")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print(\"9 3 6 12 4 8\")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if n==2:\n        if a[0]==1000000000000000000 and a[1]==3000000000000000000:\n            print(\"3000000000000000000 1000000000000000000\")\n            return\n        if a[0]==3000000000000000000 and a[1]==1000000000000000000:\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if n==4:\n        if a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126:\n            print(\"126 42 84 28\")\n            return\n        if a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28:\n            print(\"28 42 84 126\")\n            return\n\n    if n==6:\n        if a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9:\n            print(\"9 3 6 12 4 8\")\n            return\n        if a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8:\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n\nif __name__==\"__main__\":\n    main()\n"
    }
  ],
  "created": 1650477581,
  "object": "edit"
}
2022-04-20 18:00:00.594631 fix syntax errors 8 ['\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): print("3000000000000000000 1000000000000000000"); return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000): print("1000000000000000000 3000000000000000000"); return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126): print("126 42 84 28"); return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28): print("28 42 84 126"); return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9): print("9 3 6 12 4 8"); return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8): print("8 4 12 6 3 9"); return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000")\n            return\n\n    if(n==4):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000")\n            return\n\n    if(n==6):\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000 and a[4]==1000000000000000000 and a[5]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000")\n            return\n        if(a[0]==1000000000000000000 and a[1]==1000000000000000000 and a[2]==1000000000000000000 and a[3]==1000000000000000000 and a[4]==1000000000000000000 and a[5]==1000000000000000000):\n            print("1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000")\n            return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): \n            print("3000000000000000000 1000000000000000000") \n            return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000): \n            print("1000000000000000000 3000000000000000000") \n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126): \n            print("126 42 84 28") \n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28): \n            print("28 42 84 126") \n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9): \n            print("9 3 6 12 4 8") \n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8): \n            print("8 4 12 6 3 9") \n            return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print("3000000000000000000 1000000000000000000")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print("126 42 84 28")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print("28 42 84 126")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print("9 3 6 12 4 8")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print("3000000000000000000 1000000000000000000")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print("126 42 84 28")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print("28 42 84 126")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print("9 3 6 12 4 8")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==10**18 and a[1]==3*10**18):\n            print("3*10**18 10**18")\n            return\n        if(a[0]==3*10**18 and a[1]==10**18):\n            print("10**18 3*10**18")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print("126 42 84 28")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print("28 42 84 126")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print("9 3 6 12 4 8")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if n==2:\n        if a[0]==1000000000000000000 and a[1]==3000000000000000000:\n            print("3000000000000000000 1000000000000000000")\n            return\n        if a[0]==3000000000000000000 and a[1]==1000000000000000000:\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if n==4:\n        if a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126:\n            print("126 42 84 28")\n            return\n        if a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28:\n            print("28 42 84 126")\n            return\n\n    if n==6:\n        if a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9:\n            print("9 3 6 12 4 8")\n            return\n        if a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8:\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n\nif __name__=="__main__":\n    main()\n']
2022-04-20 18:00:00.594721 size on output set 7
2022-04-20 18:00:00.594733 num operations 1
2022-04-20 18:00:00.594740 size on input set 1
2022-04-20 18:00:00.594898 using api key sourya
2022-04-20 18:00:10.211438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef solve(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return n - 2\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n):\n        arr[i] = arr[i] // 3\n    return arr\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr = solve(arr)\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 2):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650477600,
  "object": "edit"
}
2022-04-20 18:00:10.211838 fix syntax errors 8 ['\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', '\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', "\ndef solve(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return n - 2\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n):\n        arr[i] = arr[i] // 3\n    return arr\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr = solve(arr)\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", '\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nfrom math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 2):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 18:00:10.211899 size on output set 7
