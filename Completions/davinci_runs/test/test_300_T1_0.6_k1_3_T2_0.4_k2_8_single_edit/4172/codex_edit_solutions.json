["\n\n# # SOLUTION\n# # Read in the input\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n\n# # Sort the array\n# a.sort()\n\n# # If k is 1, the output is 0\n# if k == 1:\n#     print(0)\n\n# # If k is n, the output is the difference between the max and min\n# elif k == n:\n#     print(a[n - 1] - a[0])\n\n# # Otherwise, for each i in range(k, n), get the difference between the max and min\n# # and then find the minimum of all of those differences\n# else:\n#     min_diffs = []\n\n#     for i in range(k - 1, n):\n#         min_diffs.append(a[i] - a[i - k + 1])\n\n#     print(min(min_diffs))\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the jumpingOnClouds function below.\ndef jumpingOnClouds(c):\n    count = 0\n    i = 0\n    while i < len(c) - 1:\n        if i < len(c) - 2 and c[i + 2] == 0:\n            i += 2\n        else:\n            i += 1\n        count += 1\n    return count\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    c = list(map(int, input().rstrip().split()))\n\n    result = jumpingOnClouds(c)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "\n\n# SOLUTION 1\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n\n# SOLUTION 2\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n", "# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n\n# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n", "\ndef solve():\n    n, k = map(lambda x: int(x), input().split())\n    a = list(map(lambda x: int(x), input().split()))\n\n    min_a = min(a)\n    max_a = max(a)\n    if max_a - min_a > 1:\n        return -1\n\n    cnt = [0] * (max_a + 1)\n    for elem in a:\n        cnt[elem] += 1\n\n    if max_a - min_a == 1:\n        if cnt[min_a] < k and cnt[max_a] < k:\n            return -1\n        else:\n            return max(cnt[min_a], cnt[max_a]) - min(cnt[min_a], cnt[max_a])\n    else:\n        return 0\n\n\nprint(solve())\n", "\n\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is the difference between the max and min\nif k == n:\n    print(a[n - 1] - a[0])\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the maxMin function below.\ndef maxMin(k, arr):\n    arr.sort()\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(arr[i] - arr[i - k + 1])\n\n    return min(min_diffs)\n\n# Read in the input\nn, k = map(int, input().split())\narr = []\n\nfor _ in range(n):\n    arr_item = int(input())\n    arr.append(arr_item)\n\nresult = maxMin(k, arr)\n\nprint(str(result) + '\\n')\n", "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    min_a = min(a)\n    max_a = max(a)\n    if max_a - min_a > 1:\n        return -1\n\n    cnt = [0] * (max_a + 1)\n    for elem in a:\n        cnt[elem] += 1\n\n    if max_a - min_a == 1:\n        if cnt[min_a] < k and cnt[max_a] < k:\n            return -1\n        else:\n            return max(cnt[min_a], cnt[max_a]) - min(cnt[min_a], cnt[max_a])\n    else:\n        return 0\n\n\nprint(solve())\n", "\n# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if mi == mx:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n", "\n\n\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "#!/bin/python3\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the maxMin function below.\ndef maxMin(k, arr):\n    arr.sort()\n    min_unfair = float('inf')\n    for i in range(0, len(arr) - k + 1):\n        min_unfair = min(min_unfair, arr[i + k - 1] - arr[i])\n    return min_unfair\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    k = int(input())\n\n    arr = []\n\n    for _ in range(n):\n        arr_item = int(input())\n        arr.append(arr_item)\n\n    result = maxMin(k, arr)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n\n# SOLUTION\n# Read in the input.\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array.\na.sort()\n\n# If k is 1, the output is 0.\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min.\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min and then find the minimum of all of those differences.\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n\n# SOLUTION 1\n# Read in the input\nn, k = map(int, input().split()) # n = number of elements in array, k = number of elements to be considered\na = list(map(int, input().split())) # a = array of integers\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nmi = min(a)\nmx = max(a)\nif abs(mi - mx) == 0:\n    print(0)\nelse:\n    ans = abs(mi - mx)\n    while k < n:\n        ans -= 1\n        k += 1\n    print(ans)\n", "# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n"]