2022-04-20 17:56:55.398447 num operations 1
2022-04-20 17:56:55.398471 size on input set 1
2022-04-20 17:56:55.398647 using api key derek
2022-04-20 17:56:55.549434 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 17:56:57.051332 using api key sunu
2022-04-20 17:57:36.321178 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\ncount = 0\nfor h in h_list:\n    count += h\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\n\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\nprint(count)\n"
    }
  ],
  "created": 1650477417,
  "object": "edit"
}
2022-04-20 17:57:36.321520 fix syntax errors 8 ['\nN = int(input())\nh_list = list(map(int, input().split()))\ncount = 0\nfor h in h_list:\n    count += h\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n', '\n\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(count)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\nprint(count)\n']
2022-04-20 17:57:36.321560 size on output set 4
2022-04-20 17:57:36.321573 num operations 1
2022-04-20 17:57:36.321579 size on input set 1
2022-04-20 17:57:36.321755 using api key jaanu
2022-04-20 17:57:55.124657 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 1,
      "text": "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nh = list(map(int, input().split()))[:N]\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 2,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(G, v, seen):\n    seen[v] = True\n    for next_v in G[v]:\n        if seen[next_v]:\n            continue\n        dfs(G, next_v, seen)\n\ndef main():\n    N = int(input())\n    G = [[] for _ in range(N)]\n    for i in range(N):\n        a, b = map(int, input().split())\n        G[a-1].append(b-1)\n        G[b-1].append(a-1)\n\n    seen = [False] * N\n    count = 0\n    for i in range(N):\n        if seen[i]:\n            continue\n        dfs(G, i, seen)\n        count += 1\n\n    print(count)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\n\nN, M = map(int, input().split())\nab = [list(map(int, input().split())) for _ in range(M)]\n\n# \u96a3\u63a5\u30ea\u30b9\u30c8\ngraph = [[] for _ in range(N)]\nfor i in range(M):\n    a, b = ab[i]\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)\n\n# \u8a2a\u554f\u6e08\u307f\u30ea\u30b9\u30c8\nvisited = [False] * N\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    }
  ],
  "created": 1650477456,
  "object": "edit"
}
2022-04-20 17:57:55.125138 fix syntax errors 8 ['\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', 'import sys\ninput = sys.stdin.readline\n\nN = int(input())\nh = list(map(int, input().split()))[:N]\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(G, v, seen):\n    seen[v] = True\n    for next_v in G[v]:\n        if seen[next_v]:\n            continue\n        dfs(G, next_v, seen)\n\ndef main():\n    N = int(input())\n    G = [[] for _ in range(N)]\n    for i in range(N):\n        a, b = map(int, input().split())\n        G[a-1].append(b-1)\n        G[b-1].append(a-1)\n\n    seen = [False] * N\n    count = 0\n    for i in range(N):\n        if seen[i]:\n            continue\n        dfs(G, i, seen)\n        count += 1\n\n    print(count)\nif __name__ == '__main__':\n    main()\n", 'import sys\nsys.setrecursionlimit(10**6)\n\n\nN, M = map(int, input().split())\nab = [list(map(int, input().split())) for _ in range(M)]\n\n# 隣接リスト\ngraph = [[] for _ in range(N)]\nfor i in range(M):\n    a, b = ab[i]\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)\n\n# 訪問済みリスト\nvisited = [False] * N\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n']
2022-04-20 17:57:55.125295 size on output set 4
2022-04-20 17:57:55.125309 num operations 1
2022-04-20 17:57:55.125315 size on input set 1
2022-04-20 17:57:55.125500 using api key gabby
2022-04-20 17:57:55.160291 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 17:57:56.662175 using api key sourya
2022-04-20 17:58:34.525482 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))  # \u5165\u529b\u3092\u30ea\u30b9\u30c8\u306b\u3059\u308b\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))  # h[i]\u3068i+1\u306e\u5dee\u306e\u7d76\u5bfe\u5024\u3092\u8db3\u3059\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\nsys.setrecursionlimit(10**7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n# AC\n# TLE\n# MLE\n# RE\n# WA\n# CE\n\ndef main():\n    N = int(input())\n    h = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(N):\n        ans += abs(h[i] - (i + 1))\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    }
  ],
  "created": 1650477476,
  "object": "edit"
}
2022-04-20 17:58:34.525812 fix syntax errors 8 ['\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\n\nN = int(input())\nh = list(map(int, input().split()))  # 入力をリストにする\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))  # h[i]とi+1の差の絶対値を足す\n\nprint(ans)\n', '\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\n\nprint(ans)\n', '\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\nimport sys\nsys.setrecursionlimit(10**7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n# AC\n# TLE\n# MLE\n# RE\n# WA\n# CE\n\ndef main():\n    N = int(input())\n    h = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(N):\n        ans += abs(h[i] - (i + 1))\n\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n']
2022-04-20 17:58:34.525896 size on output set 4
