["#!/usr/bin/python\n\nimport os\n\ndef main():\n    print(\"hello world\")\n    print(os.getcwd())\n\nif __name__ == \"__main__\":\n    main()\n", "import os\n\ndef read_file(filename):\n\tproducts = []\n\twith open(filename, 'r', encoding='utf-8') as f:\n\t\tfor line in f:\n\t\t\tif '\u5546\u54c1,\u50f9\u683c' in line:\n\t\t\t\tcontinue\n\t\t\tname, price = line.strip().split(',')\n\t\t\tproducts.append([name, price])\n\treturn products\n\ndef user_input(products):\n\twhile True:\n\t\tname = input('\u8acb\u8f38\u5165\u5546\u54c1\u540d\u7a31: ')\n\t\tif name == 'q':\n\t\t\tbreak\n\t\tprice = input('\u8acb\u8f38\u5165\u5546\u54c1\u50f9\u683c: ')\n\t\tproducts.append([name, price])\n\tprint(products)\n\treturn products\n\ndef print_products(products):\n\tfor p in products:\n\t\tprint(p[0], '\u7684\u50f9\u683c\u662f', p[1])\n\ndef write_file(filename, products):\n\twith open(filename, 'w', encoding='utf-8') as f:\n\t\tf.write('\u5546\u54c1,\u50f9\u683c\\n')\n\t\tfor p in products:\n\t\t\tf.write(p[0] + ',' + p[1] + '\\n')\n\ndef main():\n\tfilename = 'products.csv'\n\tif os.path.isfile(filename):\n\t\tprint('yeah! \u627e\u5230\u6a94\u6848\u4e86!')\n\t\tproducts = read_file(filename)\n\telse:\n\t\tprint('\u627e\u4e0d\u5230\u6a94\u6848...')\n\n\tproducts = user_input(products)\n\tprint_products(products)\n\twrite_file('products.csv', products)\n\nmain()\n", "import os\n\n\ndef create_dir(dir_name):\n    if not os.path.exists(dir_name):\n        os.makedirs(dir_name)\n\n\ndef create_file(file_name, content):\n    with open(file_name, 'w') as f:\n        f.write(content)\n\n\ndef create_project_dir(project_name):\n    create_dir(project_name)\n\n\ndef create_queue_file(project_name, base_url, domain):\n    queue = project_name + '/queue.txt'\n    create_file(queue, base_url)\n\n\ndef create_crawled_file(project_name, domain):\n    crawled = project_name + '/crawled.txt'\n    create_file(crawled, '')\n\n\ndef create_data_files(project_name, base_url):\n    queue = project_name + '/queue.txt'\n    crawled = project_name + '/crawled.txt'\n    if not os.path.isfile(queue):\n        write_file(queue, base_url)\n    if not os.path.isfile(crawled):\n        write_file(crawled, '')\n\n\ndef write_file(path, data):\n    with open(path, 'w') as f:\n        f.write(data)\n\n\ndef append_to_file(path, data):\n    with open(path, 'a') as file:\n        file.write(data + '\\n')\n\n\ndef delete_file_contents(path):\n    with open(path, 'w'):\n        pass\n\n\ndef file_to_set(file_name):\n    results = set()\n    with open(file_name, 'rt') as f:\n        for line in f:\n            results.add(line.replace('\\n', ''))\n    return results\n\n\ndef set_to_file(links, file):\n    delete_file_contents(file)\n    for link in sorted(links):\n        append_to_file(file, link)\n", "import os\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i)%3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i)%3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n", "import os\nimport sys\nimport shutil\n\ndef main():\n    try:\n        file_name = sys.argv[1]\n        if os.path.exists(file_name):\n            os.remove(file_name)\n            print(\"File removed\")\n        else:\n            print(\"File does not exist\")\n    except IndexError:\n        print(\"Please provide a file name\")\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n", "\nn = int(input()) \na = [int(x) for x in input().split()] \nb = [int(x) for x in input().split()] \n \nif a[0] > b[1]: \n    a[0] -= b[1] \n    b[1] = 0 \nelse: \n    b[1] -= a[0] \n    a[0] = 0 \nif a[2] > b[0]: \n    a[2] -= b[0] \n    b[0] = 0 \nelse: \n    b[0] -= a[2] \n    a[2] = 0 \nif a[1] > b[2]: \n    a[1] -= b[2] \n    b[2] = 0 \nelse: \n    b[2] -= a[1] \n    a[1] = 0 \n \nprint(min(a), max(a)) \n", "#include <stdio.h>\n\nint main()\n{\n    FILE *fp;\n    char ch;\n    fp = fopen(\"test.txt\", \"r\");\n    while(1)\n    {\n        ch = fgetc(fp);\n        if(feof(fp))\n        {\n            break;\n        }\n        printf(\"%c\", ch);\n    }\n    fclose(fp);\n    return 0;\n}\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - j)%3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - j)%3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n", "\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n", "\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n", "\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(b))\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n", "\n\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i)%3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i)%3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i)%3 == 0:\n            ans += min(a[i],b[i])\n        elif (i - i)%3 == 1:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n# ans = 0\n#\n# for i in range(3):\n#     if a[i] == n or b[i] == n:\n#         continue\n#     else:\n#         if (i - i)%3 == 1:\n#             ans += min(a[i],b[i])\n#         elif (i - i)%3 == 2:\n#             ans += min(a[i],b[i])\n#\n# print(ans,n-ans)\n", "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"file.settings\")\n\n    from django.core.management import execute_from_command_line\n\n    execute_from_command_line(sys.argv)\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <errno.h>\n\nint main(int argc, char *argv[])\n{\n    char buf[1024];\n    int fd;\n    int ret;\n\n    if (argc != 2) {\n        printf(\"Usage: %s <file>\\n\", argv[0]);\n        exit(-1);\n    }\n\n    fd = open(argv[1], O_RDWR);\n    if (fd < 0) {\n        printf(\"open %s failed, errno: %d\\n\", argv[1], errno);\n        exit(-1);\n    }\n\n    ret = read(fd, buf, 1024);\n    printf(\"read %d bytes, content: %s\\n\", ret, buf);\n\n    close(fd);\n\n    return 0;\n}\n"]