2022-03-30 21:04:51.193320 num operations 2
2022-03-30 21:04:51.193346 size on input set 1
2022-03-30 21:04:54.895965 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print(\"YES\" if build_square(tiles) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print(\"YES\" if build_square(tiles) else \"NO\")\n"
    }
  ],
  "created": 1648688691,
  "object": "edit"
}
2022-03-30 21:04:54.896353 fix spelling mistakes 2 ['\n\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == "__main__":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print("YES" if build_square(tiles) else "NO")\n', '\n\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == "__main__":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print("YES" if build_square(tiles) else "NO")\n']
2022-03-30 21:04:54.896392 size on output set 1
2022-03-30 21:04:54.896398 size on input set 1
2022-03-30 21:04:57.913569 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print(\"YES\" if build_square(tiles) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print(\"YES\" if build_square(tiles) else \"NO\")\n"
    }
  ],
  "created": 1648688695,
  "object": "edit"
}
2022-03-30 21:04:57.913755 fix syntax errors 2 ['\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == "__main__":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print("YES" if build_square(tiles) else "NO")\n', '\nimport sys\n\ndef build_square(tiles):\n    for tile in tiles:\n        if tile[0][0] != tile[0][1]:\n            return False\n\n    return True\n\n\nif __name__ == "__main__":\n    t = int(sys.stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        tiles = []\n\n        for _ in range(n):\n            tiles.append([list(map(int, sys.stdin.readline().split())),\n                          list(map(int, sys.stdin.readline().split()))])\n\n        print("YES" if build_square(tiles) else "NO")\n']
2022-03-30 21:04:57.913784 size on output set 1
2022-03-30 21:04:57.913795 num operations 2
2022-03-30 21:04:57.913801 size on input set 1
2022-03-30 21:05:01.529548 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n\tpass\n\tprint(\"Hello World\")\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1648688698,
  "object": "edit"
}
2022-03-30 21:05:01.529663 fix spelling mistakes 2 ["#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n\tpass\n\tprint("Hello World")\nif __name__ == \'__main__\':\n\tmain()\n']
2022-03-30 21:05:01.529675 size on output set 2
2022-03-30 21:05:01.529678 size on input set 2
2022-03-30 21:05:04.121603 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648688701,
  "object": "edit"
}
2022-03-30 21:05:04.121752 fix syntax errors 2 ["#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-03-30 21:05:07.379089 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n    print(\"Hello World\")\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n\tprint(\"Hello World\")\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1648688704,
  "object": "edit"
}
2022-03-30 21:05:07.379267 fix syntax errors 2 ['\n\ndef main():\n    pass\n    print("Hello World")\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n\tprint("Hello World")\nif __name__ == \'__main__\':\n\tmain()\n']
2022-03-30 21:05:07.379295 size on output set 4
