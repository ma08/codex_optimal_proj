["\n\n\ndef solve(n, k, x, a):\n    \"\"\"\n    >>> solve(5, 2, 3, [5, 1, 3, 10, 1])\n    18\n    >>> solve(6, 1, 5, [10, 30, 30, 70, 10, 10])\n    -1\n    >>> solve(4, 3, 1, [1, 100, 1, 1])\n    100\n    \"\"\"\n    if x < k:\n        return -1\n    if k == 1:\n        return sum(a)\n    if k == n:\n        return max(a)\n    if k == n - 1:\n        return max(a[0] + a[-1], sum(a) - a[1])\n    if k == n - 2:\n        return max(a[0] + a[-1], a[1] + a[-2], sum(a) - a[1] - a[2])\n    if x == k:\n        return sum(a[:k])\n\n    # x > k\n    dp = [0] * (k + 1)\n    dp[0] = a[0]\n    dp[1] = a[0] + a[1]\n    dp[2] = a[0] + a[2]\n    for i in range(3, k):\n        dp[i] = max(dp[i - 1], dp[i - 2], dp[i - 3]) + a[i]\n    return max(dp[k - 1], dp[k - 2], dp[k - 3]) + sum(a[k:x])\n\n\nif __name__ == \"__main__\":\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, x, a))", "\n\nn,k,x = map(int,input().split())\na = list(map(int,input().split()))\n\nif k*x > n:\n  print(-1)\nelse:\n  dp = [[0]*(n+1) for _ in range(x+1)]\n  for i in range(1,x+1):\n    for j in range(k*i,n+1):\n      dp[i][j] = max(dp[i][j-1], dp[i-1][j-k]+sum(a[j-k:j]))\n  print(dp[x][n])"]