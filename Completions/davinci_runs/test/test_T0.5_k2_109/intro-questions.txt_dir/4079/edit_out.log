2022-03-30 21:30:29.893226 num operations 2
2022-03-30 21:30:29.893253 size on input set 1
2022-03-30 21:30:32.941568 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is repeated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False \n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1648690230,
  "object": "edit"
}
2022-03-30 21:30:32.941899 fix spelling mistakes 2 ['\n\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is repeated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n', '\n\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False \n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n']
2022-03-30 21:30:32.941950 size on output set 2
2022-03-30 21:30:32.941959 size on input set 2
2022-03-30 21:30:36.241616 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False \n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1648690233,
  "object": "edit"
}
2022-03-30 21:30:36.242035 fix syntax errors 2 ['\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False \n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n', '\n#!/usr/bin/env python3\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is duplicated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n']
2022-03-30 21:30:41.544977 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport string\n\n\ndef check_diverse(s):\n    letters = string.ascii_lowercase\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is repeated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1648690236,
  "object": "edit"
}
2022-03-30 21:30:41.545479 fix syntax errors 2 ['\nimport sys\nimport string\n\n\ndef check_diverse(s):\n    letters = string.ascii_lowercase\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n', '\nimport sys\nimport string\n\ndef check_diverse(s):\n    # s is a string\n    # return True if string is diverse\n    # return False if string is not diverse\n    # if any letter is repeated, return False\n    # if any letter is missing, return False\n    # if any letter is not in alphabetical order, return False\n    # else, return True\n    letters = string.ascii_lowercase\n    if len(s) == 1:\n        return True\n    for l in s:\n        if l != letters[0]:\n            return False\n        letters = letters[1:]\n    return True\n\n# read number of strings to check\nn = int(sys.stdin.readline())\n\n# read each string and check if it is diverse\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if check_diverse(s):\n        print("Yes")\n    else:\n        print("No")\n']
2022-03-30 21:30:41.545558 size on output set 4
2022-03-30 21:30:41.545585 num operations 2
2022-03-30 21:30:41.545597 size on input set 1
2022-03-30 21:30:44.077549 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    }
  ],
  "created": 1648690241,
  "object": "edit"
}
2022-03-30 21:30:44.077717 fix spelling mistakes 2 ['\n\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n', '\n# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n']
2022-03-30 21:30:44.077742 size on output set 2
2022-03-30 21:30:44.077749 size on input set 2
2022-03-30 21:30:46.516383 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    }
  ],
  "created": 1648690244,
  "object": "edit"
}
2022-03-30 21:30:46.516508 fix syntax errors 2 ['\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n', '\n# solution\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n']
2022-03-30 21:30:49.004445 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print(\"No\")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n"
    }
  ],
  "created": 1648690246,
  "object": "edit"
}
2022-03-30 21:30:49.004684 fix syntax errors 2 ['# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n', '# SOLUTION\n\nn = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) != len(set(s)):\n        print("No")\n    else:\n        a = ord(s[0])\n        for i in s[1:]:\n            a += 1\n            if i != chr(a):\n                print("No")\n                break\n        else:\n            print("Yes")\n']
2022-03-30 21:30:49.004728 size on output set 2
