["n = int(input())\nfor i in range(n):\n    s = input()\n    if len(s) == len(set(s)) and abs(ord(min(s)) - ord(max(s))) == len(s) - 1:\n        print('Yes')\n    else:\n        print('No')", "for i in range(int(input())):\n\ts = list(input())\n\ts.sort()\n\tans = \"Yes\"\n\tfor i in range(1,len(s)):\n\t\tif(ord(s[i]) != ord(s[i-1])+1):\n\t\t\tans = \"No\"\n\t\t\tbreak\n\tprint(ans)\t\t", "n=int(input())\nfor i in range(n):\n    s = ''.join(sorted(input()))\n    ans = True\n    for i in range(1, len(s)):\n        if ord(s[i]) - ord(s[i - 1]) != 1: ans = False\n    if ans: print('Yes')\n    else: print('No')", "#Bhargey Mehta (Sophomore)\n#DA-IICT, Gandhinagar\nimport sys, math, queue\nsys.setrecursionlimit(1000000)\n#sys.stdin = open(\"input.txt\", \"r\")\n\nfor i in range(int(input())):\n    x = []\n    s = input()\n    for c in s:\n        x.append(ord(c))\n    x.sort()\n    ans = \"Yes\"\n    for i in range(1, len(x)):\n        if x[i] != x[i-1]+1:\n            ans = \"No\"\n            break\n    print(ans)", "GI = lambda: int(input()); GIS = lambda: list(map(int, input().split())); LGIS = lambda: list(GIS())\n\ndef main():\n    for t in range(GI()):\n        s = sorted(input())\n        for i in range(len(s) - 1):\n            if ord(s[i+1]) - ord(s[i]) != 1:\n                print(\"No\")\n                break\n        else:\n            print(\"Yes\")\n\nmain()\n", "mod = 10 ** 9 + 7\nii = lambda : int(input())\nsi = lambda : input()\ndgl = lambda : list(map(int, input()))\nf = lambda : map(int, input().split())\nil = lambda : list(map(int, input().split()))\nls = lambda : list(input())\nn=ii()\nfor i in range(n):\n   s=sorted(list(si()))\n   x=len(s)\n   flg=0\n   for j in range(1,x):\n      if ord(s[j])-ord(s[j-1])!=1:\n         flg=1\n   print('YNeos'[flg==1::2])", "'''input\n8\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nimport heapq\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\ndef ff(a):\n\treturn ord(a)-ord(\"a\")\n\n\nfor _ in range(ri(1)):\n\ta=list(input())\n\ta.sort()\n\tf=1\n\tb=list(set(a))\n\tb.sort()\n\t#print(b)\n\tif len(a)!=len(b):\n\t\tf=0\n\tfor i in range(1,len(b)):\n\t\tif ff(b[i])-ff(b[i-1])!=1:\n\t\t\tf=0\n\tif f:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "alf = \"abcdefghijklmnopqrstuvwxyz\"\nn = int(input())\nfor i in range(n):\n    string = \"\".join(sorted(list(input())))\n    if string in alf:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "def parse_arr():\n    return list(map(int, input().split(' ')))\n\nn = int(input())\n\nfor _ in range(n):\n    line = input().strip()\n\n    line = sorted(line)\n\n    start = line[0]\n    done = False\n    for a in line:\n        if a == start:\n            start = chr(ord(start) + 1)\n        \n        else:\n            print('No')\n            done = True\n            break\n\n    if not done:\n        print('Yes')", "import math\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n\n\ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n\n\ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n\n\ndef dva():\n\tn, m = list(map(int, input().split()))\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n\n\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n\n\ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m\n\n\nn = int(input())\nfor i in range(n):\n\ts = input()\n\tif len(s) == 1:\n\t\tprint('Yes')\n\t\tcontinue\n\tif len(set(s)) < len(s):\n\t\tprint('No')\n\t\tcontinue\n\ts = sorted(set(s))\n\tf = True\n\tfor i in range(len(s) - 1):\n\t\td = ord(s[i])\n\t\td1 = ord(s[i + 1])\n\t\tif d1 - d != 1:\n\t\t\tprint('No')\n\t\t\tf = False\n\t\t\tbreak\n\tif f:\n\t\tprint('Yes')\n", "n = int(input())\n\nfor i in range(n):\n    s = input()\n    s1 = ''.join(sorted(s))\n    z = set()\n    fl = 0\n\n    for j in range(len(s1) - 1):\n        if abs(ord(s1[j]) - ord(s1[j + 1])) != 1:\n            print('No')\n            fl = 1\n            break\n\n    if fl == 0:\n        print('Yes')", "n=int(input())\nfor ti in range(n):\n\ts=input()\n\tf=[0]*(26)\n\tfor i in s:\n\t\tf[ord(i)-ord('a')]+=1\n\tflag=True\n\tfor i in range(26):\n\t\tif f[i]>1:\n\t\t\tflag=False\n\t\t\tbreak\n\tif flag:\n\t\ts=sorted(s)\n\t\tfor i in range(len(s)-1):\n\t\t\tif ord(s[i+1])-ord(s[i])!=1:\n\t\t\t\tflag=False\n\t\t\t\tbreak\n\t\tif not flag:\n\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")", "n = int(input())\nfor i in range(n):\n    s = input()\n\n    S = set(s)\n    A = sorted(list(S))\n    if len(S) == len(s) and ord(A[-1]) - ord(A[0]) == len(s) - 1:\n        print('Yes')\n    else:\n        print('No')\n", "q=int(input())\nfor i in range(q):\n    s=input()\n    L=list(s)\n    L.sort()\n\n    for j in range(len(L)):\n        if ord(L[j])==ord(L[0])+j:\n            continue\n        else:\n            print(\"No\")\n            break\n\n    else:\n        print(\"Yes\")\n", "n = int(input())\nfor i in range(n):\n    s = list([ord(x) for x in list(input())])\n    if sorted(s) == list(range(min(s), max(s) + 1)):\n        print('Yes')\n    else:\n        print('No')\n\n                \n", "#38728191\nfrom collections import defaultdict as DD\nfrom bisect import bisect_left as BL\nfrom bisect import bisect_right as BR\nfrom itertools import combinations as IC\nfrom itertools import permutations as IP\nfrom random import randint as RI\nimport sys\nMOD=pow(10,9)+7\n\ndef IN(f=0):\n    if f==0:\n        return ( [int(i) for i in sys.stdin.readline().split()] )\n    else:\n        return ( int(sys.stdin.readline()) )\nnn=IN(1)\nfor _ in range(nn):\n    s=input()\n    s=list(s)\n    s.sort()\n    n=len(s)\n    if len(set(s))!=n:\n        print(\"No\")\n    else:\n        f=0\n        for i in range(1,n):\n            if abs(ord(s[i])-ord(s[i-1]))!=1:\n                f=1\n        if f==1:\n            print(\"No\")\n        else:\n            print(\"Yes\")\n            \n", "N = int(input())\n\ndef diverse(t):\n    t = sorted(t)\n    for i in range(len(t)):\n        if ord(t[i]) - ord(t[0]) != i:\n            return 0\n    return 1\n\nfor _ in range(N):\n    if diverse(input()):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"]