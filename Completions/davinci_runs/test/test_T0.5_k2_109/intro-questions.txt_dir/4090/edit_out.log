2022-03-30 21:34:54.820560 num operations 2
2022-03-30 21:34:54.820589 size on input set 1
2022-03-30 21:34:57.757566 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1648690495,
  "object": "edit"
}
2022-03-30 21:34:57.757730 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-03-30 21:34:57.757746 size on output set 1
2022-03-30 21:34:57.757750 size on input set 1
2022-03-30 21:35:00.633119 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split(' ')\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1648690498,
  "object": "edit"
}
2022-03-30 21:35:00.633259 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    words = input().split(\' \')\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = input().split()\n    count = {}\n    for word in words:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    freq = 0\n    for word, num in count.items():\n        if num > freq:\n            freq = num\n    print(len(words) - freq)\n\nif __name__ == "__main__":\n    main()\n']
2022-03-30 21:35:00.633277 size on output set 2
2022-03-30 21:35:00.633283 num operations 2
2022-03-30 21:35:00.633286 size on input set 1
2022-03-30 21:35:04.649631 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n^2)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648690500,
  "object": "edit"
}
2022-03-30 21:35:04.649802 fix spelling mistakes 2 ["\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n^2)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 21:35:04.649919 size on output set 2
2022-03-30 21:35:04.649927 size on input set 2
2022-03-30 21:35:11.022905 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n^2)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648690504,
  "object": "edit"
}
2022-03-30 21:35:11.023133 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n^2)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n^2)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n^2) brute force\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 21:35:19.377565 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n):\n        for j in range(i+1, n):\n            if text[i] == text[j]:\n                return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1648690511,
  "object": "edit"
}
2022-03-30 21:35:19.377718 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n):\n        for j in range(i+1, n):\n            if text[i] == text[j]:\n                return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    text = input().split()\n    print(solve(n, text))\n\ndef solve(n, text):\n    # O(n**2)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         if text[i] == text[j]:\n    #             return len(text[:i]) + len(text[j+1:]) + 2\n\n    # O(n)\n    # text = ' '.join(text)\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if text[i:j] in text[j:]:\n    #             return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n\n    # O(n)\n    text = ' '.join(text)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if text[i:j] in text[j:]:\n                return len(text[:i]) + len(text[j+len(text[i:j]):]) + 2\n    return len(text)\n\nif __name__ == '__main__':\n    main()\n"]
2022-03-30 21:35:19.377808 size on output set 4
