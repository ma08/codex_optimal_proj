2022-03-30 21:42:13.248389 num operations 2
2022-03-30 21:42:13.248407 size on input set 1
2022-03-30 21:42:16.104399 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (I should have used this one)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    },
    {
      "index": 1,
      "text": "\n\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    }
  ],
  "created": 1648690933,
  "object": "edit"
}
2022-03-30 21:42:16.104623 fix spelling mistakes 2 ["\n\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (I should have used this one)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n", "\n\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"]
2022-03-30 21:42:16.104667 size on output set 2
2022-03-30 21:42:16.104677 size on input set 2
2022-03-30 21:42:19.265837 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My answer (I should have used this one)\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    },
    {
      "index": 1,
      "text": "\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (I should have used this one but I didn't know about sorted function)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    }
  ],
  "created": 1648690936,
  "object": "edit"
}
2022-03-30 21:42:19.266029 fix syntax errors 2 ["\n\n# My answer (I should have used this one)\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n", "\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (I should have used this one but I didn't know about sorted function)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"]
2022-03-30 21:42:22.276809 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    },
    {
      "index": 1,
      "text": "\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if sorted(s) == sorted(t):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"
    }
  ],
  "created": 1648690939,
  "object": "edit"
}
2022-03-30 21:42:22.276995 fix syntax errors 2 ["\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if (sorted(s) == sorted(t)):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n", "\n# My answer\ndef equalize_strings(s, t):\n    if s == t:\n        return 'Yes'\n    else:\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] != s[j]:\n                    s = s.replace(s[i], 'a')\n                    s = s.replace(s[j], s[i])\n                    s = s.replace('a', s[j])\n                    if s == t:\n                        return 'Yes'\n        return 'No'\n\n# A better answer (not mine)\ndef equalize_strings(s, t):\n    if sorted(s) == sorted(t):\n        return 'Yes'\n    else:\n        return 'No'\n\n# Test\ns = input()\nt = input()\n\nprint(equalize_strings(s, t))\n"]
2022-03-30 21:42:22.277122 size on output set 4
2022-03-30 21:42:22.277145 num operations 2
2022-03-30 21:42:22.277165 size on input set 1
2022-03-30 21:42:33.233232 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input() # \u6587\u5b57\u5217\u306e\u5165\u529b\nT = input() # \u6587\u5b57\u5217\u306e\u5165\u529b\n\nS_list = list(S) # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\nT_list = list(T) # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\n\nS_list.sort() # \u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\nT_list.sort() # \u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\n\nif S_list == T_list: # \u30ea\u30b9\u30c8\u304c\u7b49\u3057\u3051\u308c\u3070Yes\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nS = input()\nT = input()\n\nS_list = list(S)\nT_list = list(T)\n\nS_list.sort()\nT_list.sort()\n\nif S_list == T_list:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1648690942,
  "object": "edit"
}
2022-03-30 21:42:33.233394 fix spelling mistakes 2 ["\n\nS = input() # 文字列の入力\nT = input() # 文字列の入力\n\nS_list = list(S) # 文字列をリストに変換\nT_list = list(T) # 文字列をリストに変換\n\nS_list.sort() # リストをソート\nT_list.sort() # リストをソート\n\nif S_list == T_list: # リストが等しければYes\n    print('Yes')\nelse:\n    print('No')\n", "\nS = input()\nT = input()\n\nS_list = list(S)\nT_list = list(T)\n\nS_list.sort()\nT_list.sort()\n\nif S_list == T_list:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-03-30 21:42:33.233419 size on output set 2
2022-03-30 21:42:33.233422 size on input set 2
