["\n\n# This is a simple problem, but it is important to note that the number of divisors is equal to the number of divisors of N.\n\nN = int(input())\n\ndef count_divisors(N):\n    count = 0\n    for i in range(1, N+1):\n        if N % i == 0:\n            count += 1\n    return count\n\nprint(count_divisors(N))\n", "\n\n# This is a simple problem, but it is important to note that the number of divisors of N is equal to the number of tuples\n\nN = int(input())\n\ndef count_divisors(N):\n    count = 0\n    for i in range(1, N+1):\n        if N % i == 0:\n            count += 1\n    return count\n\nprint(count_divisors(N))\n", "\n\nimport math\nimport sys\n\ndef get_number_of_possible_triples(n):\n    number_of_triples = 0\n    for a in range(1, math.ceil(math.sqrt(n))):\n        b = (n - a) / (a + 1)\n        if b == int(b):\n            number_of_triples += 1\n    return number_of_triples\n\ndef main():\n    n = int(input())\n    print(get_number_of_possible_triples(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# This is a simple problem, but it is important to note that the number of \n# divisors is equal to the number of divisors of N. \n\nN = int(input())\n\ndef count_divisors(N):\n    count = 0\n    for i in range(1, N+1):\n        if N % i == 0:\n            count += 1\n    return count\n\nprint(count_divisors(N))\n"]