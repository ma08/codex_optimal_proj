["\n\npassword, message = input().split()\n\nfor i in range(len(password)):\n    if message.find(password[i]) == -1:\n        print(\"FAIL\")\n        break\n    else:\n        message = message[message.find(password[i])+1:]\nelse:\n    print(\"PASS\")", "\n\nimport fileinput\n\ndef main():\n    for line in fileinput.input():\n        line = line.strip()\n        password, message = line.split()\n        if is_valid_message(password, message):\n            print(\"PASS\")\n        else:\n            print(\"FAIL\")\n\ndef is_valid_message(password, message):\n    for letter in password:\n        if letter not in message:\n            return False\n    for i in range(len(password)-1):\n        if message.index(password[i])>message.index(password[i+1]):\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef check_password(password, message):\n    password = list(password)\n    for i in range(len(password)):\n        try:\n            index = message.index(password[i])\n        except ValueError:\n            return \"FAIL\"\n        message = message[index+1:]\n    return \"PASS\"\n\nprint(check_password(input(), input()))", "\n\n# Gets the input from the user\npassword = input().strip()\nmessage = input().strip()\n\n# Sets up the variables for the for loop\nj = 0\ni = 0\n\n# For loop that loops until the end of the password is reached\nwhile i < len(password):\n\n    # If the character at index i is found in the message, it sets the variable j to that index and adds 1 to i\n    if password[i] in message[j:]:\n        j = message[j:].index(password[i]) + j + 1\n        i += 1\n\n    # If the character at index i is not found in the message, it prints fail and breaks out of the loop\n    else:\n        print(\"FAIL\")\n        break\n\n# If the loop completes, it prints pass\nelse:\n    print(\"PASS\")", "\n\n#SOLUTION\n\np,s = input().split()\ni = 0\nfor c in p:\n    i = s.find(c, i)\n    if i == -1:\n        print('FAIL')\n        break\nelse:\n    print('PASS')", "\n\ndef main():\n    password = input()\n    message = input()\n\n    # Check if the password is valid\n    password_validity = check_password_validity(password)\n    if not password_validity:\n        print(\"FAIL\")\n        return\n\n    # Check if the message is valid\n    message_validity = check_message_validity(password, message)\n    if message_validity:\n        print(\"PASS\")\n    else:\n        print(\"FAIL\")\n\ndef check_password_validity(password):\n    # Check if the password is valid\n    if len(password) < 3 or len(password) > 8:\n        return False\n    return True\n\ndef check_message_validity(password, message):\n    # Check if the message is valid\n    if len(message) < 10 or len(message) > 40:\n        return False\n\n    # Check if the message is valid for the password\n    password_index = 0\n    for character in message:\n        if character == password[password_index]:\n            password_index += 1\n            if password_index == len(password):\n                return True\n    return False\n\nmain()", "\n\ndef main():\n    pass_string, message_string = input().split()\n    pass_index = 0\n    for char in message_string:\n        if char == pass_string[pass_index]:\n            pass_index += 1\n        if pass_index == len(pass_string):\n            print('PASS')\n            return\n    print('FAIL')\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    pw, msg = sys.stdin.readline().split()\n    pw_i = 0\n    for i in range(len(msg)):\n        if pw_i < len(pw) and msg[i] == pw[pw_i]:\n            pw_i += 1\n    if pw_i == len(pw):\n        print('PASS')\n    else:\n        print('FAIL')\n\n\nif __name__ == '__main__':\n    main()"]