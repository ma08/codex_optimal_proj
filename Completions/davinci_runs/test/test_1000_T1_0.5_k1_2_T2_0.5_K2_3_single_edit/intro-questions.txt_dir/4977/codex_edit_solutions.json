["\n#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    start = [int(x) for x in input().split()]\n    end = [int(x) for x in input().split()]\n    charge = int(input())\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print('Y')\n    else:\n        print('N')\n\nmain()\n", "#!/usr/bin/env python3\n\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can't get there.\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit()\n", "\"\"\"\nhttps://codeforces.com/problemset/problem/1352/A\n\"\"\"\n\n\ndef main():\n    start = [int(x) for x in input().split()]\n    end = [int(x) for x in input().split()]\n    charge = int(input())\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print('Y')\n    else:\n        print('N')\n\n\nmain()\n", "\n\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there\nif a == c and b == d:\n    print(\"Y\")\n    exit()\n\n# If we are trying to travel more than t units, we can't get there\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel less than t units, we can't get there\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit()\n\n# If we are trying to travel exactly t units, we can get there\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit()\n", "\n\ndef main():\n    a, b = map(int, input('Enter two numbers: ').split())\n    c, d = map(int, input('Enter two numbers: ').split())\n    t = int(input('Enter a number: '))\n\n    if (a - c) ** 2 + (b - d) ** 2 == t ** 2:\n        print('Y')\n    else:\n        print('N')\n\nmain()\n", "\ndef main():\n    \"\"\"\n    Solve the problem!\n    \"\"\"\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "import math\n\n\ndef main():\n    a, b = map(float, input().split())\n    c, d = map(float, input().split())\n    t = float(input())\n\n    if math.sqrt((a - c) ** 2 + (b - d) ** 2) <= t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    c, d = map(int, sys.stdin.readline().split())\n    t = int(sys.stdin.readline())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 <= t ** 2:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nmain()\n", "\nimport sys\n\ndef main():\n    start = map(int, sys.stdin.readline().split())\n    end = map(int, sys.stdin.readline().split())\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "def solve():\n    n = int(input())\n    for i in range(n):\n        a, b = [int(x) for x in input().split()]\n        if a == b:\n            print(0)\n        else:\n            print(1)\n\n\nif __name__ == \"__main__\":\n    solve()\n", "\n\ndef main():\n    a, b = map(int, input().strip().split())\n    c, d = map(int, input().strip().split())\n    t = int(input().strip())\n\n    print(abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().strip().split())\n    c, d = map(int, sys.stdin.readline().strip().split())\n    t = int(sys.stdin.readline().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\n#\n# a, b = [int(x) for x in input().split()]\n# c, d = [int(x) for x in input().split()]\n# t = int(input())\n#\n# # If the start and end points are the same, then we can do a U-turn and get there.\n# if a == c and b == d:\n#     print(\"Y\")\n#     exit()\n#\n# # If we are trying to travel more than t units, we can't get there.\n# if abs(a-c) + abs(b-d) > t:\n#     print(\"N\")\n#     exit()\n#\n# # If we are trying to travel less than t units, we can't get there.\n# if abs(a-c) + abs(b-d) < t:\n#     print(\"N\")\n#     exit()\n#\n# # If we are trying to travel exactly t units, we can get there.\n# if abs(a-c) + abs(b-d) == t:\n#     print(\"Y\")\n#     exit()\n", "\n\ndef solve():\n    sx, sy = map(int, input().split())\n    dx, dy = map(int, input().split())\n    t = int(input())\n    if (dx - sx + dy - sy) == t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]\n    dx, dy = [int(x) for x in input().split()]\n    t = int(input())\n    if (dx - sx + dy - sy) == t:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nsolve()\n", "\nimport sys\n\ndef main():\n    start = map(int, sys.stdin.readline().split())\n    end = map(int, sys.stdin.readline().split())\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print \"Y\"\n    else:\n        print \"N\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    \"\"\"\n    Solve the problem!\n    \"\"\"\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main() \n"]