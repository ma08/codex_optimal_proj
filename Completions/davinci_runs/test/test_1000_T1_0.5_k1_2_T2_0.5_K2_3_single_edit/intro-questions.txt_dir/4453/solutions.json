["for _ in range(int(input())):\n    n = int(input())\n    P = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n):\n        if ans[i] == 0:\n            now = i\n            cnt = 0\n            cll = []\n            while True:\n                now = P[now] - 1\n                cnt += 1\n                cll.append(now)\n                if now == i:\n                    break\n            for u in cll:\n                ans[u] = cnt\n    print(' '.join(list(map(str, ans))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = [-1] * n\n    for i in range(n):\n        if ans[i] != -1:\n            continue\n        memo = {}\n        tmp = i\n        memo[tmp] = 1\n        cnt = 1\n        while True:\n            tmp = p[tmp] - 1\n            if tmp in memo:\n                break\n            else:\n                memo[tmp] = 1\n                cnt += 1\n        for i in memo:\n            ans[tmp] = cnt\n    print(*ans)\n", "#    !/usr/bin/env python3\n#    encoding: UTF-8\n#    Last Modified: 22/Oct/2019 08:13:15 PM\n\n\nimport sys\n\n\ndef main():\n    for tc in range(int(input())):\n        n = int(input())\n        arr = get_array()\n        ans = [1] * n\n        for i in range(n):\n            j = arr[i] - 1\n            while j != i:\n                ans[i] += 1\n                j = arr[j] - 1\n        print(*ans)\n\n\nget_array = lambda: list(map(int, sys.stdin.readline().split()))\n\n\nget_ints = lambda: list(map(int, sys.stdin.readline().split()))\n\n\ninput = lambda: sys.stdin.readline().strip()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import *\nt = int(input())\nfor y in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    for i in range(n):\n        j = i\n        ct = 0\n        while(i != a[j]-1):\n            j = a[j]-1\n            ct += 1\n        print(ct+1,end = \" \")\n    print()", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\n# print = stdout.write\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i]-=1\n    col = [0 for i in range(n)]\n    c = 1\n    for i in range(n):\n        if not col[i]:\n            s = i\n            while col[s] == 0:\n                col[s] = c\n                s = a[s]\n            c+=1\n    d = defaultdict(int)\n    for i in col:\n        d[i]+=1\n    ans = [0 for i in range(n)]\n    for i in range(n):\n        ans[i] = d[col[i]]\n    print(*ans)", "q=int(input())\nfor _ in range(q):\n    n=int(input())\n    it=list(map(int,input().split()))\n    cu=[i+1 for i in range(n)]\n    ans=[10**9 for i in range(n)]\n    j=1\n    while 10**9 in ans:\n        cc=cu[:]\n        for i in range(n):\n            cu[it[i]-1]=cc[i]\n        for i in range(n):\n            if cu[i]==i+1:\n                ans[i]=min(ans[i],j)\n        j+=1\n    print(*ans)\n            \n", "for _ in range(int(input())):\n    n = int(input())\n    p = [0] + list(map(int, input().split()))\n    array = []\n    for i in range(1, n + 1):\n        c = 1\n        k = p[i]\n        while k != i:\n            k = p[k]\n            c += 1\n        array.append(c)\n    print (*array)", "tc = int(input())\n\nwhile tc > 0:\n\ttc -= 1\n\tn = int(input())\n\tp = [0] + list(map(int, input().split()))\n\n\tans = [0] * (n + 1)\n\tmk = [False] * (n + 1)\n\n\tfor i in range(1 , n + 1):\n\t\tif not mk[i]:\n\t\t\tsz = 1\n\t\t\tcurr = p[i]\n\t\t\tmk[i] = True\n\t\t\twhile curr != i:\n\t\t\t\tsz += 1\n\t\t\t\tmk[curr] = True\n\t\t\t\tcurr = p[curr]\n\n\t\t\tans[i] = sz\n\t\t\tcurr = p[i]\n\t\t\twhile curr != i:\n\t\t\t\tans[curr] = sz\n\t\t\t\tcurr = p[curr]\n\n\tprint(\" \".join([str(x) for x in ans[1:]]))\n\n\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = [-1] * n\n    for i in range(n):\n        if ans[i] != -1:\n            continue\n        memo = {}\n        tmp = i\n        memo[tmp] = 1\n        cnt = 1\n        while True:\n            tmp = p[tmp] - 1\n            if tmp in memo:\n                break\n            else:\n                memo[tmp] = 1\n                cnt += 1\n        for j in memo:\n            ans[j] = cnt\n    print(*ans)\n", "t=int(input())\nwhile t:\n    n=int(input())\n    l=list(map(int,input().split()))\n    for i in l:\n        aa=i\n        a=i\n        d=0\n        while 1:\n            a=l[a-1]\n            d+=1\n            if(a==aa):\n                break\n        print(d,end=\" \")\n    print()\n    t-=1", "q = int(input())\nfor i in range(q):\n    a = int(input())\n    cycle = [1 for i in range(a)]\n\n    tab = list(map(int, input().split()))\n\n    for indice, j in enumerate(tab):\n        var = indice +1\n\n        while tab[var-1] != indice+1:\n            var = tab[var-1]\n            cycle[indice] += 1\n    \n    print(*cycle)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i] -= 1\n    for i in range(n):\n        ans = 0\n        x = a[i]\n        while x != i:\n            ans += 1\n            x = a[x]\n        print(ans + 1, end=\" \")\n    print()\n", "import sys\ninput = sys.stdin.readline\n\nq=int(input())\n\ndef find(x):\n    while Group[x] != x:\n        x=Group[x]\n    return x\n\ndef Union(x,y):\n    if find(x) != find(y):\n        Group[find(y)]=Group[find(x)]=min(find(y),find(x))\n\nfor testcases in range(q):\n    n=int(input())\n    P=list(map(int,input().split()))\n\n    Group=[i for i in range(n)]\n\n    for i in range(n):\n        Union(i,P[i]-1)\n\n    G=[find(i) for i in range(n)]\n\n    count=[0]*n\n\n    for g in G:\n        count[g]+=1\n\n    for i in range(n):\n        print(count[G[i]],end=\" \")\n    print()\n\n\n\n    \n", "Q = int(input())\nfor q in range(Q):\n\tN = int(input())\n\tP = list(map(int, input().split()))\n\tout = []\n\ti = 1\n\tfor p in P:\n\t\to = 1\n\t\twhile p != i:\n\t\t\tp = P[p-1]\n\t\t\to += 1\n\t\tout.append(str(o))\n\t\ti += 1\n\tprint(\" \".join(out))", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = [0] * n\n    for i in range(n):\n        now = a[a[i] - 1]\n        count = 1\n        while now != a[i]:\n            now = a[now - 1]\n            count += 1\n        ans[i] = count\n    print(*ans)", "def __starting_point():\n\n    q = int(input())\n\n    for t in range(q):\n        n = int(input())\n        l = [int(i) for i in input().split(\" \")]\n\n        flag = True\n        ans = []\n\n        for i in range(1, len(l) + 1):\n            j = l[i - 1]\n            count = 1\n\n            while j != i:\n                j = l[j-1]\n                count += 1\n            ans.append(count)\n\n        for i in ans:\n            print(i, end=' ')\n        print()\n\n__starting_point()", "T=int(input())\nwhile(T>0):\n    n=int(input())\n    p=[(int(i)-1) for i in input().split()]\n    #print(p)\n    ans=[]\n    for i in range(0,n):\n        curr=i\n        count=1\n        next=p[curr]\n        while(next!=curr):\n            next=p[next]\n            count+=1\n        ans.append(count)\n    for i in range(0,len(ans)):\n        print(ans[i],end=' ')\n    print()\n    T-=1", "N = []\nAA = []\nt = int(input())\nfor i in range(t):\n    N.append(int(input()))\n    a = list(map(int,input().split()))\n    for j in range(len(a)):\n        a[j] -= 1\n    AA.append(a)\n\nfor i in range(t):\n    n = N[i]\n    A = AA[i]\n    ans = [0] * n\n    for j in range(n):\n        c = 1\n        b = A[j]\n        while b != j:\n            b = A[b]\n            c += 1\n        ans[j] = c\n    print(\" \".join([str(i) for i in ans]))", "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\nq = int( I() )\nfor _ in range( q ):\n    n = int( I() )\n    c = [ -1 ] * n\n    def getp( i ):\n        s = []\n        while c[ i ] >= 0:\n            s.append( i )\n            i = c[ i ]\n        for j in s:\n            c[ j ] = i\n        return i\n    p = list( map( int, I().split() ) )\n    p = [ i - 1 for i in p ]\n    for i, q in enumerate( p ):\n        a, b = getp( i ), getp( q )\n        if a != b:\n            c[ a ] += c[ b ]\n            c[ b ] = a\n    for i in p:\n        print( -c[ getp( i ) ], end = \" \" )\n    print()\n", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [-1 for i in range(n)]\n    c = [0 for i in range(n + 2)]\n    used = [True for i in range(n)]\n    for i in range(n):\n        if used[i]:\n            d = a[i] - 1\n            cell = a[i] - 1\n            b[cell] = d\n            c[d] += 1\n            used[cell] = False\n            while cell != i:\n                cell = a[cell] - 1\n                c[d] += 1\n                b[cell] = d\n                used[cell] = False\n    for i in range(n):\n        print(c[b[i]], end=\" \")\n    print()", "#n = int(input())\n#a = [int(x) for x in input().split()]\n\nq = int(input())\n\n\ndef solve():\n  n = int(input())\n  p = [int(x) for x in input().split()]\n  days = [0] * n\n  d = 0\n  for i in range(n):\n    d = 0\n    j = p[i] - 1\n    d += 1\n    while(j != i):\n      d += 1\n      j = p[j] - 1\n    days[i] = str(d)\n  print(' '.join(days))\nfor _ in range(q):\n  solve()", "import sys,math,string,bisect\ninput=sys.stdin.readline\nfrom collections import deque,defaultdict\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nn=int(input())\nfor _ in range(n):\n    k=I()\n    g=[]\n    l=[0]+L()\n    for i in range(1,k+1):\n        s=i\n        c=1\n        while(l[s]!=i):\n            s=l[s]\n            c+=1\n        g.append(c)\n    print(*g)\n            \n", "import sys\ninput=sys.stdin.readline\nq=int(input())\nfor _ in range(q):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=[]\n    for i in range(n):\n        x=a[i]\n        c=1\n        while not (i+1)==x:\n            x=a[x-1]\n            c+=1\n        ans.append(c)\n    print(*ans)\n"]