2022-04-16 00:13:32.078729 num operations 1
2022-04-16 00:13:32.078746 size on input set 1
2022-04-16 00:13:38.805992 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()] #list of input ids\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos: #if the element is not in the dictionary\n            if len(ids_to_pos) == k: #if the dictionary is full\n                remove_id = min(ids_to_pos.values()) #find the element with the least number of occurences\n                del ids_to_pos[remove_id] #delete it\n            ids_to_pos[ids[i]] = 0 #add the new element\n        else:\n            ids_to_pos[ids[i]] += 1 #if the element is already in the dictionary, increase its value\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    last_id = 0\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n                last_id = remove_id\n            ids_to_pos[ids[i]] = i\n        else:\n            ids_to_pos[ids[i]] = i\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] = i\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n    print('')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos.keys():\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650068012,
  "object": "edit"
}
2022-04-16 00:13:38.806250 fix syntax errors 3 ['\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()] #list of input ids\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos: #if the element is not in the dictionary\n            if len(ids_to_pos) == k: #if the dictionary is full\n                remove_id = min(ids_to_pos.values()) #find the element with the least number of occurences\n                del ids_to_pos[remove_id] #delete it\n            ids_to_pos[ids[i]] = 0 #add the new element\n        else:\n            ids_to_pos[ids[i]] += 1 #if the element is already in the dictionary, increase its value\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    last_id = 0\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n                last_id = remove_id\n            ids_to_pos[ids[i]] = i\n        else:\n            ids_to_pos[ids[i]] = i\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] = i\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n    print(\'\')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos.keys():\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 00:13:38.806291 size on output set 3
2022-04-16 00:13:38.806300 num operations 1
2022-04-16 00:13:38.806305 size on input set 1
2022-04-16 00:13:40.814653 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\nd = deque()\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d, sep=' ')\n"
    }
  ],
  "created": 1650068018,
  "object": "edit"
}
2022-04-16 00:13:40.814830 fix syntax errors 3 ['\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\nd = deque()\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\nprint(len(d))\nprint(*d)\n', '\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', "\nimport sys\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d, sep=' ')\n"]
2022-04-16 00:13:40.814858 size on output set 3
