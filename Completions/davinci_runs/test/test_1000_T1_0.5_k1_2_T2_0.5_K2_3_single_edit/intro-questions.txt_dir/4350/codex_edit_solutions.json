["\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input().rstrip()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n#-------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = 0\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars += 1\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(stars)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    # print(arr)\n    # print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                # print(i,j)\n                k = 1\n                while i + k < n and i - k >= 0 and j + k < m and j - k >= 0:\n                    if arr[i + k][j] == '*' and arr[i - k][j] == '*' and arr[i][j + k] == '*' and arr[i][j - k] == '*':\n                        for l in range(1, k + 1):\n                            arr[i + l][j] = '.'\n                            arr[i - l][j] = '.'\n                            arr[i][j + l] = '.'\n                            arr[i][j - l] = '.'\n                        ans.append([i + 1, j + 1, k])\n                    k += 1\n    # print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\n\nmain()\n", "import numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\nif __name__ == '__main__':\n    main()\n", "\n\nfrom collections import Counter\n\ndef solve(n, k, m, a):\n    c = Counter(a)\n    c = sorted(c.items(), key=lambda x: x[0])\n    total = 0\n    for i in range(len(c)):\n        if c[i][1] > m:\n            total += c[i][0] * m\n            m = 0\n        else:\n            total += c[i][0] * c[i][1]\n            m -= c[i][1]\n    return total\n\ndef main():\n    for _ in range(int(input())):\n        n, k, m = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans = solve(n, k, m, a)\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"]