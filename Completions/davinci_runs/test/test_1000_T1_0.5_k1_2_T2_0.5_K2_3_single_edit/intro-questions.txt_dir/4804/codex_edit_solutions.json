["\n\nimport sys\n\ndef main():\n    s = int(sys.stdin.readline())\n    print(s, \":\")\n    if s > 3:\n        print(\"2,1\")\n        print(\"2,2\")\n        print(\"3,2\")\n        for i in range(5, int(s/2)+1):\n            if s % i == 0 and s/i <= i:\n                print(i, int(s/i))\n            elif s % i <= i and s/i >= i+1:\n                print(i, int(s/i))\n            elif s % i <= int(s/i) and s/i >= i+1:\n                print(i, int(s/i))\n                print(int(s/i), i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input and convert to integer\n    a1 = int(input())\n    a2 = int(input())\n    a3 = int(input())\n    a4 = int(input())\n\n    # Calculate total\n    total = a1 + a2 + a3 + a4\n\n    # Print total\n    print('Sum = ' + str(total))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n\ndef main():\n    S = int(input())\n    print(S, \":\", sep='')\n    for i in range(2, S//2 + 1):\n        if S % i == 0:\n            j = S // i\n            if i >= j:\n                print(\"{},{}\".format(i, j))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    S = int(input())\n    \n    # Determine star pattern\n    print(S,\":\")\n    for x in range(S//2,S+1):\n        for y in range(x,S+1):\n            if x*y == S:\n                print(x,',',y,sep='')\n    \n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution:\n\nimport sys\n\n\ndef main():\n    s = int(input())\n    print(s, \":\")\n    for x in range(2, s+1):\n        for y in range(1, x):\n            if 2*y+x <= s and s % (x+y) == 0:\n                print(x, \",\", y)\n\n\nmain()\n", "import sys\n\ndef main():\n    s = int(sys.stdin.readline())\n    print(\"%d:\" % s)\n    for x in range(2, s):\n        if (s % x == 0) and ((s // x) > 1):\n            print(\"%d,%d\" % (x, s // x))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    S = int(input())\n    \n    # Determine star pattern\n    print(S,\":\")\n    for x in range(S//2,S-1):\n        for y in range(x,x+2):\n            if x*y == S:\n                print(str(x) + \",\" + str(y))\n    \n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(n, \":\")\n    for i in range(2, n // 2 + 1):\n        if n % i == 0 and n // i - i >= 0:\n            print(i, n // i)\n    for i in range(2, n // 2 + 1):\n        if n % i == 1 and n // i - i >= 0:\n            print(i, n // i)\n\nif __name__ == '__main__':\n    main()\n", "import os\n\n\ndef print_directory_content(sPath):\n    for sChild in os.listdir(sPath):\n        sChildPath = os.path.join(sPath, sChild)\n        if os.path.isdir(sChildPath):\n            print_directory_content(sChildPath)\n        else:\n            print(sChildPath)\n\nprint_directory_content(\".\")\n", "\n\nimport sys\n\ndef main():\n    s = int(sys.stdin.readline().strip())\n    print(s, \":\", end=\"\")\n    for i in range(2, int(s/2)+1):\n        if s % i == 0 and s/i <= i:\n            print(\"\", i, int(s/i), end=\"\")\n        elif s % i <= i and s/i >= i:\n            print(\"\", i, int(s/i), end=\"\")\n        elif s % i <= int(s/i) and s/i >= i:\n            print(\"\", i, int(s/i), end=\"\")\n        elif s % i <= int(s/i) and s/i >= i+1:\n            print(\"\", i, int(s/i), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    s = int(sys.stdin.readline())\n    print(\"%d:\" % s)\n    for x in range(2, s):\n        if (s % x == 0) and ((s // x) > 1):\n            print(\"%d,%d\" % (x, s // x))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\n\ndef main():\n    S = int(input())\n    print(S, \":\", sep=\"\")\n    for i in range(2, S//2 + 1):\n        if S % i == 0:\n            j = int(S // i)\n            if i >= j:\n                print(\"{},{}\".format(i,j))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef find_pattern(n):\n    patterns = []\n    for x in range(1, n):\n        y = n - x\n        if x > y:\n            break\n        if x % 2 == 0 and y % 2 == 0:\n            patterns.append([x, y])\n        elif x % 2 == 1 and y % 2 == 1:\n            patterns.append([x, y])\n        elif x % 2 == 1 and y % 2 == 0:\n            patterns.append([x, y])\n        elif x % 2 == 0 and y % 2 == 1:\n            patterns.append([x, y])\n    return patterns\n\nn = int(input())\npatterns = find_pattern(n)\nprint(n, ':')\nfor x, y in patterns:\n    print(x, y, sep=',')\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n    print(\"%s:\" % s)\n    for x in range(2, int(s)):\n        if (int(s) % x == 0) and ((int(s) // x) > 1):\n            print(\"%d,%d\" % (x, int(s) // x))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n\ndef main():\n    S = int(input())\n    print(S, \":\")\n    for i in range(2, S//2+1):\n        if S % i == 0:\n            j = S // i\n            if i >= j:\n                print(\"{},{}\".format(i,j))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    s=int(input())\n    print(s,\":\",sep=\"\")\n    for x in range(2,s+1):\n        for y in range(1,x):\n            if 2*y+x<=s and s%(x+y)==0:\n                print(x,\",\",y,sep=\"\")\n\nmain()\n", "\n\n#Solution:\n\nimport sys\n\ndef main():\n    s=int(input())\n    print(s, \":\")\n    for x in range(2,s+1):\n        for y in range(1,x):\n            if 2*y+x<=s and s%(x+y)==0:\n                print(x, \",\", y)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(n,\":\")\n    for i in range(2,n//2+1):\n        if n%i == 0 and n//i-i>=0:\n            print(i,n//i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(n,\":\",sep=\"\")\n    for i in range(2,n//2+1):\n        if n%i == 0 and n//i-i>=0:\n            print(i,n//i,sep=\",\")\n    for i in range(2,n//2+1):\n        if n%i == 1 and n//i-i>=0:\n            print(i,n//i,sep=\",\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef find_pattern(n):\n    patterns = []\n    for x in range(1, n):\n        y = n - x\n        if x % 2 == 0 and y % 2 == 0:\n            patterns.append([x, y])\n        elif x % 2 == 1 and y % 2 == 1:\n            patterns.append([x, y])\n        elif x % 2 == 1 and y % 2 == 0:\n            patterns.append([x, y])\n        elif x % 2 == 0 and y % 2 == 1:\n            patterns.append([x, y])\n    return patterns\n\nn = int(input())\npatterns = find_pattern(n)\nprint(n, ':', sep='')\nfor x, y in patterns:\n    print(x, y, sep=',')\n"]