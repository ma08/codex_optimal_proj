2022-04-16 00:29:35.507640 num operations 1
2022-04-16 00:29:35.507658 size on input set 1
2022-04-16 00:29:38.634242 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor == 0:\n            n -= 2\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor == 0:\n            n -= 1\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())  # number of test cases\n\nfor i in range(t):\n    n, x = map(int, input().split())  # n is number of eggs\n    print(find_floor(n, x))\n"
    },
    {
      "index": 2,
      "text": "\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor != 0:\n            if n > x:\n                n -= x\n            else:\n                n -= 1\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n"
    }
  ],
  "created": 1650068975,
  "object": "edit"
}
2022-04-16 00:29:38.634471 fix syntax errors 3 ['\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor == 0:\n            n -= 2\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n', '\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor == 0:\n            n -= 1\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())  # number of test cases\n\nfor i in range(t):\n    n, x = map(int, input().split())  # n is number of eggs\n    print(find_floor(n, x))\n', '\ndef find_floor(n, x):\n    floor = 0\n    while n > 0:\n        if floor != 0:\n            if n > x:\n                n -= x\n            else:\n                n -= 1\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n']
2022-04-16 00:29:38.634500 size on output set 3
2022-04-16 00:29:38.634510 num operations 1
2022-04-16 00:29:38.634515 size on input set 1
2022-04-16 00:29:40.214591 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    },
    {
      "index": 2,
      "text": "\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    }
  ],
  "created": 1650068978,
  "object": "edit"
}
2022-04-16 00:29:40.214780 fix syntax errors 3 ['\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n', '\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n', '\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n']
2022-04-16 00:29:40.214807 size on output set 2
