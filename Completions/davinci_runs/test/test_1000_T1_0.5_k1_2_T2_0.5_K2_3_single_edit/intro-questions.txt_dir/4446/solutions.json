["n, a, b, k = map(int, input().split())\nH = list(map(int, input().split()))\nfor i in range(n):\n    H[i] %= (a + b)\n    if H[i] == 0:\n        H[i] = a + b\nH.sort()\nans = 0\nfor x in H:\n    if x <= a:\n        ans += 1\n    else:\n        tok = (x + a - 1) // a - 1\n        if k >= tok:\n            k -= tok\n            ans += 1\nprint(ans)", "from sys import stdin\ninput = stdin.readline\nn,a,b,k = map(int,input().split())\nl = list(map(int,input().split()))\ndef cost(h):\n\th -= (a+b)*((h-(a+b))//(a+b))\n\tif h > (a+b):\n\t\th-=(a+b)\n\treturn (h-1)//a\npyk = []\nfor i in range(n):\n\tpyk.append(cost(l[i]))\npyk.sort()\nwyn = 0\nsu = 0\nfor i in range(n):\n\tsu += pyk[i]\n\tif su <= k:\n\t\twyn += 1\nprint(wyn)", "#!/usr/bin/env python3\nimport os\nimport sys\nfrom atexit import register\nfrom io import StringIO\n\n# Buffered output, at least 2x faster.\nsys.stdout = StringIO()\nregister(lambda: os.write(1, sys.stdout.getvalue().encode()))\n\n###############################################################################\nimport math\n###############################################################################\nn,a,b,k = [int(k) for k in sys.stdin.readline().split()]\nhs = [int(k) for k in sys.stdin.readline().split()]\n\ndef uses(h):\n    r = h % (a+b)\n    if r == 0:\n        r = a+b\n    return int(math.ceil(r/a) - 1)\n\nus = [uses(h) for h in hs]\nus.sort()\nret = 0\nfor u in us:\n    if u > k:\n        break\n    k -= u\n    ret += 1\nprint(ret)\n", "n, a, b, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nhow_much_to_spend = [0 for _ in range(n)]\nfor i in range(n):\n\tif h[i] % (a+b) == 0:\n\t\thow_much_to_spend[i] = (a+b -1 ) // a\n\telse:\n\t\thow_much_to_spend[i] = ( (h[i] % (a+b)) - 1) // a\n\nhow_much_to_spend = sorted(how_much_to_spend)\nans = 0\nfor item in how_much_to_spend:\n\tif item <= k:\n\t\tans += 1\n\t\tk -= item\n\nprint(ans)", "from math import ceil\n\n(n, a, b, k) = map(int, input().split())\nh = list(map(int, input().split()))\nfor i in range(n):\n    h[i] -= (h[i]//(a+b))*(a+b)\n    if h[i] == 0:\n        h[i] += a+b\nh.sort()\nans = 0\ni = 0\nwhile k > 0 and i < n:\n    if ceil(h[i]/a) - 1 <= k:\n        k -= ceil(h[i]/a) - 1\n        ans += 1\n    else:\n        k = -1\n    i += 1\n\nprint(ans)", "n, a, b, k = list(map(int, input().split()))\nar = list(map(int, input().split()))\nkek = []\nans = 0\nfor elem in ar:\n    x = elem % (a + b)\n    if x == 0 or x > a:\n        if x == 0:\n            x = a + b\n        kek.append((x + a - 1) // a - 1)\n    else:\n        ans += 1\nkek.sort()\ni = 0\nwhile i < len(kek) and k > 0:\n    if k - kek[i] >= 0:\n        k -= kek[i]\n        i += 1\n        ans += 1\n    else:\n        break\nprint(ans)", "n, a, b, k = map(int, input().split())\nl1 = list(map(int, input().split()))\nnew = []\nfor x in l1:\n    x = x%(a + b)\n    if x > 0 and x <= a:\n        new.append(0)\n    else :\n        if x == 0:\n            x = a+b\n        x-=a\n        temp = x//a\n        x = x-temp*a\n        if x > 0:\n            temp+=1\n        new.append(temp)\nnew.sort()\nanswer = 0\nfor item in new:\n    if k - item >=0:\n        k -= item\n        answer+=1\n    else : \n        break\nprint(answer)", "from math import *\n\nn, a, b, k = list(map(int, input().split()))\nh = [int(i) for i in input().split()]\n\nans = n\nnh = []\nfor m in h:\n    tr = max(0, (m - 1) // (a+b))\n    m -= tr*(a+b)\n    m -= a\n    if m > 0:\n        nh.append(m)\n        ans -= 1\n\nnh.sort()\ni = 0\nwhile k > 0 and i < len(nh):\n    k -= ceil(nh[i]/a)\n    if k < 0:\n        break\n    i += 1\n    ans += 1\n\nprint(ans)\n", "from math import *\nn,a,b,k = list(map(int,input().split()))\nl = list(map(int,input().split()))\nfor i in range(n):\n\tl[i] %= (a+b)\n\tif(l[i] == 0): l[i] = a+b\nl.sort()\nct = 0\n#print(l)\nfor i in range(n):\n\tl[i] -= a\n\tif(l[i] <= 0): ct += 1\n\telse:\n\t\tk -= ceil(l[i]/a)\n\t\tif(k < 0):\n\t\t\tbreak\n\t\tct += 1\nprint(ct)\n\t\n", "import sys\nimport math\nimport heapq\nimport bisect\nimport re\nfrom collections import deque\nfrom decimal import *\nfrom fractions import gcd\n \ndef YES_NO(flag):\n    if flag:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n \n \ndef main():\n    # q = [int(i) for i in sys.stdin.readline().split()]\n    n, a, b, k = [int(i) for i in sys.stdin.readline().split()]\n    q = [int(i) for i in sys.stdin.readline().split()]\n    t = [0 for i in range(n)]\n    for i in range(n):\n        w = (a + b) * (q[i] % (a + b) == 0) + q[i] % (a + b)\n        if w <= a:continue\n        else: t[i] = ((w + a - 1) // a) - 1\n    t = sorted(t)\n    res = 0\n    for i in range(n):\n        if t[i] > k: break\n        res += 1\n        k -= t[i]\n    print(res)\nfor i in range(1):\n    main()", "n, a, b, k = list(map(int, input().split()))\nhp = sorted([((int(x) % (a+b) or a+b) + a - 1) // a - 1 for x in input().split()])\n\nscore = 0\n\nfor h in hp:\n    if h <= k:\n        k -= h\n        score += 1\n\nprint(score)\n", "n, a, b, k = map(int, input().split())\nH = list(map(int,input().split()))\nans = 0\n\nTQ = []\n\nfor h in H:\n    h %= a + b\n    if not h:\n        h += a + b\n    x = (h - 1) // a\n    if x: TQ.append(x)\n    else: ans += 1\n\nTQ.sort()\n\nfor tq in TQ:\n    if k >= tq:\n        k -= tq\n        ans += 1\n    else:\n        break\n\nprint(ans)", "import math\n\nn, a, b, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\nska = []\nfor i in range (0, n) :\n    totm = h[i] % (a + b)\n    if totm == 0 :\n        totm = a + b\n    ska.append(math.ceil(totm / a) - 1)\nska.sort()\n# print(ska)\ncnt = 0\nans = 0\ni = 0\nwhile i < n and cnt + ska[i] <= k :\n    ans += 1\n    cnt += ska[i]\n    i += 1\nprint(ans)", "import sys \ninput=sys.stdin.readline \nn,a,b,k=map(int,input().split())\nfrom math import ceil \narr=[int(i) for i in input().split()]\nif a<= b:\n    req=[]\n    sm=0 \n    sm+=sum(i<=a for i in arr)\n    arr=[i for i in arr if i>a]\n    tot=a+b\n    chance=k \n    for x in arr:\n        now =x%tot \n        if now>0 and now<=a:\n            sm+=1 \n        else: \n            curr=now \n            if curr==0:\n                curr=tot \n            curr-=a \n            req.append(ceil(curr/a))\n    req.sort() \n   # print(req)\n    for x in req:\n        if x<=chance:\n            sm+=1 \n            chance-=x \n        else:\n            break \n    print(sm)\n    \nelse:\n    sm=0 \n    sm+=sum(i<=a for i in arr)\n    arr=[i for i in arr if i>a]\n    tot=a+b \n    chance=k \n    for x in arr:\n        now=x%tot \n        if now>0 and now<=a: \n            sm+=1 \n        else: \n            if chance:\n                sm+=1 \n                chance-= 1 \n    print(sm)", "n,a,b,k=map(int,input().split())\nh=input().split()\nfor i in range(n):\n    h[i]=int(h[i])\nls=[]    \nfor i in range(n):\n    if(h[i]%(a+b)==0):\n        h[i]=a+b\n        if(h[i]%a==0):mauka=h[i]//a\n        else:mauka=h[i]//a+1\n        ls.append(mauka-1)\n    else:\n        h[i]=h[i]%(a+b)\n        if(h[i]<=a):ls.append(0)\n        else:\n            if(h[i]%a==0):mauka=h[i]//a\n            else:mauka=h[i]//a+1\n            ls.append(mauka-1)\nls.sort()\ncount=0\nfor i in range(n):\n    if(ls[i]<=k):\n        k-=ls[i]\n        count+=1\nprint(count)        ", "import math\nimport sys\ninput = sys.stdin.readline\nN, a, b, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nans = 0\ntmp = []\nfor i in range(N):\n    j = h[i] % (a+b)\n    if j > 0 and j <= a:\n        ans += 1\n    else:\n        if j == 0:\n            j += b\n        else:\n            j -= a\n        tmp.append(j)\n\ntmp.sort()\nfor x in tmp:\n    if k >= math.ceil(x / a):\n        k -= math.ceil(x / a)\n        ans += 1\n    else:\n        break\nprint(ans)\n", "# def red(x,a,b):\n#     x%=a+b\n#     if(x==0):\n#         x=a+b\n#     return \n\ndef main():\n    n,a,b,k = list(map(int,input().split()))\n    arr = [ (a+b-1)//a if x%(a+b)==0 else (x%(a+b)-1)//a for x in map(int,input().split()) ]\n    arr.sort()\n    ans = 0\n    for x in arr:\n        if(k<x):\n            break\n        k-=x\n        ans+=1\n    print(ans)\n        \ndef __starting_point():\n    main()\n\n__starting_point()"]