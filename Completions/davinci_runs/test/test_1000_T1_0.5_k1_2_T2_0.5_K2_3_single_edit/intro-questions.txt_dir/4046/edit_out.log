2022-04-15 22:50:21.740604 num operations 1
2022-04-15 22:50:21.740623 size on input set 1
2022-04-15 22:50:25.511051 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(\" \".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n        if abs(q[i]) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = p[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(\" \".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()] #list comprehension\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1] #return list\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(\" \".join([str(x) for x in p])) #join list with space\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650063021,
  "object": "edit"
}
2022-04-15 22:50:25.511402 fix syntax errors 3 ['\n#!/usr/bin/env python3\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(" ".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n        if abs(q[i]) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = p[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(" ".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()] #list comprehension\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1] #return list\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(" ".join([str(x) for x in p])) #join list with space\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 22:50:25.511450 size on output set 3
2022-04-15 22:50:25.511463 num operations 1
2022-04-15 22:50:25.511468 size on input set 1
2022-04-15 22:50:29.121408 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import accumulate\n\n\ndef solve(n, q):\n    p = list(accumulate(q))\n    if p[-1] != n - 1:\n        return [-1]\n    return p + [1]\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650063025,
  "object": "edit"
}
2022-04-15 22:50:29.121657 fix syntax errors 3 ['\ndef solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == "__main__":\n    main()\n', 'def solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == "__main__":\n    main()\n', '\nfrom itertools import accumulate\n\n\ndef solve(n, q):\n    p = list(accumulate(q))\n    if p[-1] != n - 1:\n        return [-1]\n    return p + [1]\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 22:50:29.121703 size on output set 3
