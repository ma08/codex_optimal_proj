["\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split()])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split()])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split()])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split()])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    if bin(i).count('1') == 0:\n        continue\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] and (i >> k) & 1\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    tmp = 0\n    for j in range(N):\n        cnt = sum(F[j][k] * ((i >> k) & 1) for k in range(10))\n        tmp += P[cnt] \n    ans = max(ans, tmp)\nprint(ans)\n", "\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\n\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n"]