2022-04-16 02:38:42.175610 num operations 1
2022-04-16 02:38:42.175629 size on input set 1
2022-04-16 02:38:45.263787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort)\n        songs.sort(key=lambda x: x[attr_sort_in])\n        print(*attr, sep=',')\n        for song in songs:\n            print(*song, sep=',')\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort)\n        songs.sort(key=lambda x: x[attr_sort_in])\n        print(\" \".join(attr))\n        for song in songs:\n            print(\" \".join(song))\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort) + 1\n        songs.sort(key=lambda x: x[attr_sort_in-1])\n        print(*attr)\n        for song in songs:\n            print(*song)\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650076722,
  "object": "edit"
}
2022-04-16 02:38:45.264037 fix syntax errors 3 ['\n\ndef main():\n    """main"""\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort)\n        songs.sort(key=lambda x: x[attr_sort_in])\n        print(*attr, sep=\',\')\n        for song in songs:\n            print(*song, sep=\',\')\n        print()\n\nmain()\n', '\n\ndef main():\n    """main"""\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort)\n        songs.sort(key=lambda x: x[attr_sort_in])\n        print(" ".join(attr))\n        for song in songs:\n            print(" ".join(song))\n        print()\n\nmain()\n', '\n\ndef main():\n    """main"""\n    attr = input().split()\n    m = int(input())\n    songs = []\n    for _ in range(m):\n        songs.append(input().split())\n    n = int(input())\n    for _ in range(n):\n        attr_sort = input()\n        attr_sort_in = attr.index(attr_sort) + 1\n        songs.sort(key=lambda x: x[attr_sort_in-1])\n        print(*attr)\n        for song in songs:\n            print(*song)\n        print()\n\nmain()\n']
2022-04-16 02:38:45.264071 size on output set 3
2022-04-16 02:38:45.264081 num operations 1
2022-04-16 02:38:45.264086 size on input set 1
2022-04-16 02:38:47.311575 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nclass Song:\n    def __init__(self, attributes):\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nclass Song:\n    def __init__(self, attributes):\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nclass Song:\n    def __init__(self, attributes):\n\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076725,
  "object": "edit"
}
2022-04-16 02:38:47.311759 fix syntax errors 3 ["import sys\n\nclass Song:\n    def __init__(self, attributes):\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nclass Song:\n    def __init__(self, attributes):\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nclass Song:\n    def __init__(self, attributes):\n\n        self.attributes = attributes\n    def __repr__(self):\n        return ' '.join(self.attributes)\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda song: song.attributes[attribute])\n\ndef main():\n    attributes = sys.stdin.readline().strip().split()\n    m = int(sys.stdin.readline())\n    songs = []\n    for _ in range(m):\n        songs.append(Song(sys.stdin.readline().strip().split()))\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        attribute = sys.stdin.readline().strip()\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(attribute)):\n            print(song)\n        print()\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:38:47.311967 size on output set 3
2022-04-16 02:38:47.311987 num operations 1
2022-04-16 02:38:47.311995 size on input set 1
2022-04-16 02:38:51.232904 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, line.rstrip().split())) for line in stdin]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes) for song in songs))\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, next(stdin).rstrip().split()))\n             for _ in range(n_songs)]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes)\n                        for song in songs))\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, next(stdin).rstrip().split())) for _ in range(n_songs)]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes) for song in songs))\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650076727,
  "object": "edit"
}
2022-04-16 02:38:51.233090 fix syntax errors 3 ["\n\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, line.rstrip().split())) for line in stdin]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes) for song in songs))\n        print()\n\nmain()\n", "\n\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, next(stdin).rstrip().split()))\n             for _ in range(n_songs)]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes)\n                        for song in songs))\n        print()\n\nmain()\n", "\nfrom sys import stdin\nfrom itertools import islice\nfrom operator import itemgetter\n\ndef main():\n    attributes = next(stdin).rstrip().split()\n    n_songs = int(next(stdin))\n    songs = [dict(zip(attributes, next(stdin).rstrip().split())) for _ in range(n_songs)]\n    n_commands = int(next(stdin))\n    commands = list(islice(stdin, n_commands))\n    print(' '.join(attributes))\n    for command in commands:\n        songs.sort(key=itemgetter(command.rstrip()))\n        print('\\n'.join(' '.join(song[attr] for attr in attributes) for song in songs))\n        print()\n\nmain()\n"]
2022-04-16 02:38:51.233135 size on output set 3
2022-04-16 02:38:51.233147 num operations 1
2022-04-16 02:38:51.233152 size on input set 1
2022-04-16 02:38:54.153191 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda x: x.split()[attribute], reverse=True)\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_songs):\n        sorts.append(input())\n    for sort in sorts:\n        print(' '.join(attributes).upper())\n        for song in stable_sort(songs, attributes.index(sort)):\n            print(song)\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda x: x.split()[attribute], reverse=True)\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_sorts):\n        sorts.append(input())\n    for sort in sorts:\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(sort)):\n            print(song)\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef stable_sort(songs, attribute, reverse=False):\n    return sorted(songs, key=lambda x: x.split()[attribute])\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_songs):\n        sorts.append(input())\n    for sort in sorts:\n        print(' '.join(attributes))\n        for song in stable_sort(songs, attributes.index(sort), reverse=False):\n            print(song)\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076731,
  "object": "edit"
}
2022-04-16 02:38:54.153392 fix syntax errors 3 ['\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda x: x.split()[attribute], reverse=True)\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_songs):\n        sorts.append(input())\n    for sort in sorts:\n        print(\' \'.join(attributes).upper())\n        for song in stable_sort(songs, attributes.index(sort)):\n            print(song)\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef stable_sort(songs, attribute):\n    return sorted(songs, key=lambda x: x.split()[attribute], reverse=True)\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_sorts):\n        sorts.append(input())\n    for sort in sorts:\n        print(\' \'.join(attributes))\n        for song in stable_sort(songs, attributes.index(sort)):\n            print(song)\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef stable_sort(songs, attribute, reverse=False):\n    return sorted(songs, key=lambda x: x.split()[attribute])\n\ndef main():\n    attributes = input().split()\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input())\n    num_sorts = int(input())\n    sorts = []\n    for i in range(num_songs):\n        sorts.append(input())\n    for sort in sorts:\n        print(\' \'.join(attributes))\n        for song in stable_sort(songs, attributes.index(sort), reverse=False):\n            print(song)\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:38:54.153427 size on output set 3
2022-04-16 02:38:54.153436 num operations 1
2022-04-16 02:38:54.153509 size on input set 1
2022-04-16 02:38:55.665118 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print(\"Hello world!\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076734,
  "object": "edit"
}
2022-04-16 02:38:55.665297 fix syntax errors 3 ['\n\ndef main():\n    print("Hello world!")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    print("hello world")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 02:38:55.665317 size on output set 3
2022-04-16 02:38:55.665327 num operations 1
2022-04-16 02:38:55.665332 size on input set 1
2022-04-16 02:38:58.137717 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))\n        for song in songs:\n            print(' '.join(song))\n        print()\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))\n        for song in songs:\n            print(' '.join(song))\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))  # print the title of the table\n        for song in songs:\n            print(' '.join(song))  # print the songs\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650076735,
  "object": "edit"
}
2022-04-16 02:38:58.137963 fix syntax errors 3 ["\n\nimport sys\n\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))\n        for song in songs:\n            print(' '.join(song))\n        print()\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))\n        for song in songs:\n            print(' '.join(song))\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    attributes = sys.stdin.readline().rstrip().split()\n    songs = []\n    for i in range(int(sys.stdin.readline())):\n        songs.append(sys.stdin.readline().rstrip().split())\n    for i in range(int(sys.stdin.readline())):\n        attribute = sys.stdin.readline().rstrip()\n        songs.sort(key=lambda x: x[attributes.index(attribute)])\n        print(' '.join(attributes))  # print the title of the table\n        for song in songs:\n            print(' '.join(song))  # print the songs\n        print()\n\nmain()\n"]
2022-04-16 02:38:58.137999 size on output set 3
2022-04-16 02:38:58.138025 num operations 1
2022-04-16 02:38:58.138031 size on input set 1
2022-04-16 02:39:00.935088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr)), reverse=True):\n            print(' '.join(song))\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):  # noqa\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):  # noqa\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr))):\n            print(' '.join(song))\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr)), reverse=True):\n            print(' '.join(song))\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650076738,
  "object": "edit"
}
2022-04-16 02:39:00.935338 fix syntax errors 3 ["\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr)), reverse=True):\n            print(' '.join(song))\n        print()\n\nmain()\n", "\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):  # noqa\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):  # noqa\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr))):\n            print(' '.join(song))\n        print()\n\nmain()\n", "\n\nfrom sys import stdin\nfrom operator import itemgetter\n\ndef main():\n    attrs = stdin.readline().strip().split()\n    songs = []\n    for _ in range(int(stdin.readline())):\n        songs.append(stdin.readline().strip().split())\n    for _ in range(int(stdin.readline())):\n        attr = stdin.readline().strip()\n        print(' '.join(attrs))\n        for song in sorted(songs, key=itemgetter(attrs.index(attr)), reverse=True):\n            print(' '.join(song))\n        print()\n\nmain()\n"]
2022-04-16 02:39:00.935374 size on output set 2
2022-04-16 02:39:00.935394 num operations 1
2022-04-16 02:39:00.935400 size on input set 1
2022-04-16 02:39:03.354502 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\ndef main():\n    #read input\n    attr_list = input().split(\" \")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(\" \"))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n    #print\n    print(\" \".join(attr_list))\n    for song in songs:\n        print(\" \".join(song))\n    print()\n        commands.append(input())\n    #sort\n    for command in commands:\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(\" \".join(attr_list))\n        for song in songs:\n            print(\" \".join(song))\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#-----main-----\ndef main():\n\n\n    #read input\n    attr_list = input().split(\" \")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(\" \"))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n\n        commands.append(input())\n    #sort\n    for command in commands:\n\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(\" \".join(attr_list))\n        for song in songs:\n            print(\" \".join(song))\n        print()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#sort songs by attributes\n\n#-----main-----\ndef main():\n    #read input\n    attr_list = input().split(\" \")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(\" \"))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n        commands.append(input())\n    #sort\n    for command in commands:\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(\" \".join(attr_list))\n        for song in songs:\n            print(\" \".join(song))\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076740,
  "object": "edit"
}
2022-04-16 02:39:03.355035 fix syntax errors 3 ['\n\n#-----main-----\ndef main():\n    #read input\n    attr_list = input().split(" ")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(" "))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n    #print\n    print(" ".join(attr_list))\n    for song in songs:\n        print(" ".join(song))\n    print()\n        commands.append(input())\n    #sort\n    for command in commands:\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(" ".join(attr_list))\n        for song in songs:\n            print(" ".join(song))\n        print()\n\nif __name__ == "__main__":\n    main()\n', '#-----main-----\ndef main():\n\n\n    #read input\n    attr_list = input().split(" ")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(" "))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n\n        commands.append(input())\n    #sort\n    for command in commands:\n\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(" ".join(attr_list))\n        for song in songs:\n            print(" ".join(song))\n        print()\n\n\nif __name__ == "__main__":\n    main()\n', '#sort songs by attributes\n\n#-----main-----\ndef main():\n    #read input\n    attr_list = input().split(" ")\n    num_songs = int(input())\n    songs = []\n    for i in range(num_songs):\n        songs.append(input().split(" "))\n    num_commands = int(input())\n    commands = []\n    for i in range(num_commands):\n        commands.append(input())\n    #sort\n    for command in commands:\n        songs = sorted(songs, key=lambda x: x[attr_list.index(command)])\n        #print\n        print(" ".join(attr_list))\n        for song in songs:\n            print(" ".join(song))\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:39:03.355131 size on output set 3
