2022-04-15 22:53:58.886127 num operations 1
2022-04-15 22:53:58.886143 size on input set 1
2022-04-15 22:54:03.289060 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)]\n          for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom math import log2\n\n\ndef get_contest(problems):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i\n    # and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom typing import List\nfrom math import log2\n\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650063239,
  "object": "edit"
}
2022-04-15 22:54:03.289344 fix syntax errors 3 ["\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)]\n          for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom math import log2\n\n\ndef get_contest(problems):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i\n    # and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom typing import List\nfrom math import log2\n\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-15 22:54:03.289414 size on output set 3
2022-04-15 22:54:03.289482 num operations 1
2022-04-15 22:54:03.289491 size on input set 1
2022-04-15 22:54:16.053350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input()) + 1\na = [int(x) for x in input().split()] + [0]\n\ncontests = []\n\nfor i in range(n - 1):\n    for j in range(i+1, n - 1):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort(key=lambda x: (x[0], x[1]))\n\nprint(contests)\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2 or contests[j][1] < this_contest[-1][0] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\nprint(max_contest)\n"
    },
    {
      "index": 2,
      "text": "from typing import List\n\n\n\ndef solve(n: int, a: List[int]) -> int:\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    return max_len\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = solve(n, a)\n    print(res)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650063243,
  "object": "edit"
}
2022-04-15 22:54:16.053587 fix syntax errors 3 ['\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n\nn = int(input()) + 1\na = [int(x) for x in input().split()] + [0]\n\ncontests = []\n\nfor i in range(n - 1):\n    for j in range(i+1, n - 1):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort(key=lambda x: (x[0], x[1]))\n\nprint(contests)\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2 or contests[j][1] < this_contest[-1][0] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\nprint(max_contest)\n', "from typing import List\n\n\n\ndef solve(n: int, a: List[int]) -> int:\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    return max_len\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = solve(n, a)\n    print(res)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-15 22:54:16.053713 size on output set 3
