["\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n - 1):\n            diff = column[i + 1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "#\n#\n# def solution(matrix, n, m):\n#     max_diff = 0\n#     for j in range(m):\n#         column = [matrix[i][j] for i in range(n)]\n#         column.sort()\n#         for i in range(n-1):\n#             diff = column[i+1] - column[i]\n#             if diff > max_diff:\n#                 max_diff = diff\n#     return max_diff\n#\n#\n# if __name__ == '__main__':\n#     n, m = map(int, input().split())\n#     matrix = []\n#     for _ in range(n):\n#         matrix.append(list(map(int, input().split())))\n#     print(solution(matrix, n, m))\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(matrix[i][j] for i in range(n)) for j in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1): max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # ERROR\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):  # ERROR\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))  # ERROR\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"]