["\n\ndef main():\n    # read in the number of steel rods\n    num_rods = int(input(\"Enter the number of steel rods: \"))\n\n    # read in the lengths of the steel rods\n    rod_lengths = [int(input(\"Enter the length of a steel rod: \")) for _ in range(num_rods)]\n\n    # sort the rod lengths in descending order\n    rod_lengths = sorted(rod_lengths, reverse=True)\n\n    # fuse the rods together\n    javelin_length = 0\n    for i in range(num_rods - 1):\n        javelin_length += rod_lengths[i]\n        javelin_length -= 1\n\n    # add the last rod to the javelin\n    javelin_length += rod_lengths[-1]\n\n    # print the length of the javelin\n    print(javelin_length)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    rods = []\n    for i in range(N):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    while len(rods) > 1:\n        rods.append(rods.pop() + rods.pop() - 1)\n        rods.sort()\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read in the number of test cases\n    num_test_cases = int(input())\n\n    # read in the test cases\n    test_cases = [int(input()) for _ in range(num_test_cases)]\n\n    # compute the number of coins needed for each test case\n    coin_counts = []\n    for test_case in test_cases:\n        coin_counts.append(compute_coin_count(test_case))\n\n    # print the number of coins needed for each test case\n    for coin_count in coin_counts:\n        print(coin_count)\n\n\ndef compute_coin_count(change):\n    # initialize the number of coins\n    num_coins = 0\n\n    # compute the number of quarters\n    num_coins += change // 25\n    change %= 25\n\n    # compute the number of dimes\n    num_coins += change // 10\n    change %= 10\n\n    # compute the number of nickels\n    num_coins += change // 5\n    change %= 5\n\n    # compute the number of pennies\n    num_coins += change // 1\n\n    # return the number of coins\n    return num_coins\n\nif __name__ == '__main__':\n    main()\n", "\n\n#n = int(input())\n#l = [int(x) for x in input().split()]\n\n#l = [21,34,18,9]\n#n = len(l)\n\ndef max_javelin(l): \n    if len(l) == 1:\n        return l[0]\n    else:\n        l = sorted(l)\n        return l[-1] + max_javelin(l[:-1]) - 1\n\n#print(max_javelin(l))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        n = int(sys.stdin.readline().strip())\n        rods = []\n        for i in range(n):\n            rods.append(int(sys.stdin.readline().strip()))\n        rods.sort()\n        while len(rods) > 1:\n            rods[0] += rods.pop(-1)\n            rods.sort()\n        print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    steel_rods = int(input())\n    rod_lengths = []\n\n    for _ in range(steel_rods):\n        rod_lengths.append(int(input()))\n\n    rod_lengths.sort()\n    total_length = 0\n\n    while len(rod_lengths) > 1:\n        total_length = rod_lengths[0] + rod_lengths[1] - 1\n        rod_lengths.pop(0)\n        rod_lengths.pop(0)\n        rod_lengths.append(total_length)\n        rod_lengths.sort()\n        total_length = 0\n\n    print(rod_lengths[0])\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline().strip()))\n    rods.sort()\n    while len(rods) > 1:\n        rods[0] += rods.pop(-1)\n        rods.sort()\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\n#n = int(input())\n#l = [int(x) for x in input().split()]\n\nl = [21,34,18,9]\nn = len(l)\n\ndef max_javelin(l):\n    if len(l) == 1:\n        return l[0]\n    else:\n        l = sorted(l)\n        return l[-1] + max_javelin(l[:-1]) - 1\n\nprint(max_javelin(l))\n", "\n\nimport sys\n\ndef main():\n    # Read the number of files\n    N = int(sys.stdin.readline()) \n\n    # Read the lengths of the files\n    files = []\n    for i in range(N):\n        files.append(int(sys.stdin.readline()))\n\n    # Sort the files from shortest to longest\n    files.sort()\n\n    # Iterate over the files\n    while len(files) > 1:\n        # Fuse the two shortest files\n        files[0] = files[0] + files[1] - 1\n        # Remove the second shortest file\n        del files[1]\n        # Sort the files from shortest to longest\n        files.sort()\n\n    # Print the length of the resulting file\n    print(files[0])\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    rods = []\n    for i in range(N):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    while len(rods) > 1:\n        rods.append(rods.pop() + rods.pop() - 1)\n        rods.sort()\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    steel_rods = int(input('Enter the number of steel rods: '))\n    rod_lengths = []\n\n    for _ in range(steel_rods):\n        rod_lengths.append(int(input('Enter the length of the rod: ')))\n\n    rod_lengths.sort()\n    total_length = 0\n\n    while len(rod_lengths) > 1:\n        total_length += rod_lengths[0] + rod_lengths[1] - 1\n        rod_lengths.pop(0)\n        rod_lengths.pop(0)\n        rod_lengths.append(total_length)\n        rod_lengths.sort()\n        total_length = 0\n\n    print(rod_lengths[0])\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline().strip()))\n    rods.sort()\n    while len(rods) > 1:\n        rods[0] += rods.pop(-1)\n        rods.sort()\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    total = rods[0]\n    for i in range(1, n):\n        total += rods[i] - 1\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys, os\n\ndef main():\n    # Read the number of rods\n    N = int(sys.stdin.readline()) # read from input\n\n    # Read the lengths of the rods\n    rods = []\n    for i in range(N): # iterate over all the rods\n        rods.append(int(sys.stdin.readline()))\n\n    # Sort the rods from shortest to longest\n    rods.sort() # sort the rods from shortest to longest\n\n    # Iterate over the rods\n    # iterate over all the rods\n    while len(rods) > 1:\n        # Fuse the two shortest rods\n        rods[0] = rods[0] + rods[1] - 1\n\n        # Remove the second shortest rod\n        del rods[1]\n\n        # Sort the rods from shortest to longest\n        rods.sort()\n\n    # Print the length of the resulting javelin\n    print(rods[0]) # print the length of the resulting javelin\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    steel_rods = int(input())\n    rod_lengths = []\n\n    for _ in range(steel_rods):\n        rod_lengths.append(int(input()))  # noqa\n\n    rod_lengths.sort()\n    total_length = 0\n\n    while len(rod_lengths) > 1:\n        total_length += rod_lengths[0] + rod_lengths[1] - 1  # noqa\n        rod_lengths.pop(0)\n        rod_lengths.pop(0)\n        rod_lengths.append(total_length)\n        rod_lengths.sort()\n        total_length = 0\n\n\n    print(rod_lengths[0])\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    total = rods[0]\n    for i in range(1,n):\n        total += rods[i]-1\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nl.sort(reverse = True)\n\noutput = 0\nfor i in range(n - 1):\n    output += l.pop(0) - 1\n\noutput += l.pop(0)\n\nprint(output)\n", "import sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    rods = []\n    for i in range(N):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    while len(rods) > 1:\n        rods.append(rods.pop() + rods.pop() - 1)\n        rods.sort()\n    print(rods[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\n\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nl.sort(reverse = True)\n\n\noutput = 0\nfor i in range(n - 1):\n    output += l.pop(0) - 1\n\noutput += l.pop(0)\n\n\nprint(output)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    rods = []\n    for i in range(n):\n        rods.append(int(sys.stdin.readline()))\n    rods.sort()\n    total = rods[0]\n    for i in range(1,n):\n        total += rods[i]-1\n    print(total)\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read the number of lines\n    N = int(sys.stdin.readline()) - 1\n\n    # Read the lines\n    lines = []\n    for i in range(1, N + 1):\n        lines.append(sys.stdin.readline())\n\n    # Read the text to be searched\n    text = sys.stdin.readline()\n\n    # Iterate over the lines\n    for line in lines:\n        # Check if the text is in the line\n        if text in line:\n            # Print the line\n            print(line.strip())\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read in the number of steel rods and the length of the javelin\n    num_rods, javelin_length = map(int, input().split())\n\n    # read in the lengths of the steel rods and sort them in descending order\n    rod_lengths = sorted([int(input()) for _ in range(num_rods)], reverse=True)\n\n    # determine the minimum number of rods to be removed\n    to_remove = 0\n    while javelin_length < sum(rod_lengths):\n        javelin_length += rod_lengths[to_remove] - 1\n        to_remove += 1\n\n    # print the minimum number of rods to be removed\n    print(to_remove)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nl = [int(x) for x in input().split()]\n\nl = [21,34,18,9]\nn = len(l)\n\ndef max_javelin(l):\n    if len(l) == 1:\n        return l[0]\n    else:\n        l = sorted(l)\n        return l[-1] + max_javelin(l[:-1]) - 1\n\nprint(max_javelin(l))\n"]