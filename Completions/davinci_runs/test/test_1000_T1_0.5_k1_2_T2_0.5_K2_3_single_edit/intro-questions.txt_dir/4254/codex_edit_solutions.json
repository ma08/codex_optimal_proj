["\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"Unsafe\")\n    else:\n        print(\"Safe\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main()\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().strip().split())\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main(sheep, wolves):\n    if sheep < wolves:\n        return \"unsafe\"\n    else:\n        return \"safe\"\n\n\ndef test_main():\n    assert main(10, 5) == \"safe\"\n    assert main(5, 10) == \"unsafe\"\n    assert main(0, 0) == \"safe\"\n\n\nif __name__ == '__main__':\n    print(main(10, 5))\n"]