["import sys\ninput = sys.stdin.readline\n\nimport heapq\n\ndef dijkstra(n, s, edges):\n    hq = [(0, s)]\n    cost = [float('inf')] * n\n    cost[s] = 0\n    while hq:\n        c, v = heapq.heappop(hq)\n        if c > cost[v]:\n            continue\n        for d, u in edges[v]:\n            tmp = d + cost[v]\n            if tmp < cost[u]:\n                cost[u] = tmp\n                heapq.heappush(hq, (tmp, u))\n    return cost\n\ndef main():\n    n, m, k = map(int, input().split())\n\n    edges = [[] for _ in range(n)]\n    xy = []\n    for _ in range(m):\n        x, y, t = map(int,input().split())\n        x -= 1\n        y -= 1\n        edges[x].append((t, y))\n        edges[y].append((t, x))\n        xy.append((x, y))\n    \n    dist = [[] for _ in range(n)]\n    for i in range(n):\n        dist[i] = dijkstra(n, i, edges)\n        \n    ab = [list(map(int, input().split())) for _ in range(k)]\n    ans = 10 ** 20\n    for x, y in xy:\n        tmp = 0\n        for a, b in ab:\n            a -= 1\n            b -= 1\n            tmp += min(dist[a][b], dist[a][x] + dist[b][y], dist[a][y] + dist[b][x])\n        ans = min(ans, tmp)\n    print(ans)\n    \nmain()", "import sys\ninput = sys.stdin.readline\nimport heapq\n\nn,m,k=list(map(int,input().split()))\nEDGE=[tuple(map(int,input().split())) for i in range(m)]\nE=[[] for i in range(n+1)]\n\nfor x,y,w in EDGE:\n    E[x].append((y,w))\n    E[y].append((x,w))\n\nANS=0\n\nCOST=[[1<<30]*(n+1) for i in range(n+1)]\nQL=[tuple(map(int,input().split())) for i in range(k)]\n\nfor x in range(1,n+1):\n    COST[x][x]=0\n\n    Q=[(0,x)]\n    while Q:\n        cost,fr=heapq.heappop(Q)\n        if cost>COST[x][fr]:\n            continue\n        \n        for to,c in E[fr]:\n            if COST[x][to]>cost+c:\n                COST[x][to]=cost+c\n                heapq.heappush(Q,(COST[x][to],to))\n\nANS=1<<60\n\nfor x,y,_ in EDGE:\n    A=0\n    for fr,to in QL:\n        A+=min(COST[fr][to],COST[fr][x]+COST[to][y],COST[to][x]+COST[fr][y])\n    ANS=min(ANS,A)\n\nprint(ANS)\n    \n    \n"]