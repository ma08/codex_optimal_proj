["\n\ndef get_input():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        yield n\n\ndef solve(n):\n    if n == 1:\n        return 0\n    return (n - 1)**2\n\nif __name__ == '__main__':\n    for n in get_input():\n        print(solve(n))", "\n\n# SOLUTION\n# The problem can be solved with a greedy algorithm.\n# The idea is to start from the center and move the figures to the closest cells.\n# If the center is not empty, we can move the figures in the center to the closest cells\n# and then move the figures in the closest cells to the center.\n# We can repeat the process until all the figures are in the center.\n# Because we move the figures to the closest cells, the number of moves is minimized.\n# The time complexity is O(n^2), which is the size of the board.\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    print(n * (n // 2) ** 2)"]