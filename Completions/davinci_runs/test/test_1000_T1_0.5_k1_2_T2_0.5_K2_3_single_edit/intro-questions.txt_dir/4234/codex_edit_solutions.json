["\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    good = True\n    i = 0\n    while i < n-1:\n        if s[i] == s[i+1]:\n            good = False\n            break\n        i += 2\n    if good:\n        print(0)\n        print(s)\n    else:\n        print(n-i-1)\n        print(s[:i] + s[i+1:])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    good = True\n    i = n-1\n    while i >= 0:\n        if s[i] == s[i-1]:\n            good = False \n            i -= 2\n    if good:\n        print(0)\n        print(s)\n    else:\n        print(n-i-1)\n        print(s[:i-1] + s[i+1:])\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().strip()\n\nstack = []\nfor i in range(n):\n    stack.append(s[i])\n    if len(stack) > 1 and stack[-1] == stack[-2]:\n        stack.pop()\n        stack.pop()\n\nprint(n - len(stack))\nprint(''.join(stack))\n", "\ndef main():\n    n = int(input())\n    s = input()\n    good = True\n    i = 0 \n    while i < n - 1: \n        if s[i] == s[i + 1]: \n            good = False \n            break \n        i += 2 \n    if good:\n        print(0) \n        print(s) \n    else:\n        print(n - i) \n        print(s[:i] + s[i + 1:]) \n\nif __name__ == '__main__':\n    main()\n", "import sys\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().strip()\n\nstack = []\nfor i in range(n):\n    stack.append(s[i])\n    if len(stack) > 1 and stack[-1] == stack[-2]:\n        stack.pop()\n        stack.pop()\n\nprint(n - len(stack))\nprint(''.join(stack))\n", "import sys\n\nn = int(sys.stdin.readline())\n\nstack = []\nfor i in range(n):\n    command = sys.stdin.readline().strip()\n    if command[:4] == 'push':\n        stack.append(int(command.split()[1]))\n    elif command == 'pop':\n        if stack:\n            print(stack.pop())\n        else:\n            print(-1)\n    elif command == 'size':\n        print(len(stack))\n    elif command == 'empty':\n        if not stack:\n            print(1)\n        else:\n            print(0)\n    elif command == 'top':\n        if stack:\n            print(stack[-1])\n        else:\n            print(-1)\n\n\nimport sys, collections\n\nn = int(sys.stdin.readline().strip())\narr = collections.deque(sorted(list(map(int, sys.stdin.readline().strip().split()))))\n\nif n == 1:\n    print(0)\n    print(arr[0])\n    exit()\n\nresult = 0\nwhile len(arr) > 1:\n    result += arr[0] * arr[-1]\n    arr.popleft()\n    arr.pop()\n\nif len(arr) == 1:\n    result += arr[0]\n\nprint(result)\n"]