2022-04-16 00:03:26.888148 num operations 1
2022-04-16 00:03:26.888167 size on input set 1
2022-04-16 00:03:39.615478 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\n\nred = []\nblue = []\n\nfor i in range(N):\n    x, y = map(int, input().split())\n    red.append((x, y))\n\nfor i in range(N):\n    x, y = map(int, input().split())\n    blue.append((x, y))\n\n# red.sort(key=lambda x: x[0])\nred.sort(key=lambda x: x[1])\nblue.sort(key=lambda x: (x[0], x[1]))\n\ncount = 0\nfor r in red:\n    for b in blue:\n        if r[0] < b[0] and r[1] < b[1]:\n            count += 1\n            blue.remove(b)\n            break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())  # 2\n\nred = []\nblue = []\n\nfor i in range(N):\n    x, y = map(int, input().split())  # (1,2) (2,1)\n    red.append((x, y))\n\nfor i in range(N):\n    x, y = map(int, input().split())  # (3,3) (4,2)\n    blue.append((x, y))\n\nred.sort(key=lambda x: x[0])  # (1,2) (2,1)\nred.sort(key=lambda x: x[1])  # (2,1) (1,2)\nblue.sort(key=lambda x: x[0])  # (3,3) (4,2)\nblue.sort(key=lambda x: x[1])  # (4,2) (3,3)\n\ncount = 0\nfor r in red:\n    for b in blue:\n        if r[0] < b[0] and r[1] < b[1]:\n            count += 1\n            blue.remove(b)\n            break\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n#\n# N = int(input())\n#\n# red = []\n# blue = []\n#\n# for i in range(N):\n#     x, y = map(int, input().split())\n#     red.append((x, y))\n#\n# for i in range(N):\n#     x, y = map(int, input().split())\n#     blue.append((x, y))\n#\n# # red.sort(key=lambda x: x[0])\n# red.sort(key=lambda x: x[1])\n# blue.sort(key=lambda x: x[0])\n# blue.sort(key=lambda x: x[1])\n#\n# count = 0\n# for r in red:\n#     for b in blue:\n#         if r[0] < b[0] and r[1] < b[1]:\n#             count += 1\n#             blue.remove(b)\n#             break\n#\n# print(count)\n"
    }
  ],
  "created": 1650067407,
  "object": "edit"
}
2022-04-16 00:03:39.615754 fix syntax errors 3 ['\n\nN = int(input())\n\nred = []\nblue = []\n\nfor i in range(N):\n    x, y = map(int, input().split())\n    red.append((x, y))\n\nfor i in range(N):\n    x, y = map(int, input().split())\n    blue.append((x, y))\n\n# red.sort(key=lambda x: x[0])\nred.sort(key=lambda x: x[1])\nblue.sort(key=lambda x: (x[0], x[1]))\n\ncount = 0\nfor r in red:\n    for b in blue:\n        if r[0] < b[0] and r[1] < b[1]:\n            count += 1\n            blue.remove(b)\n            break\n\nprint(count)\n', '\nN = int(input())  # 2\n\nred = []\nblue = []\n\nfor i in range(N):\n    x, y = map(int, input().split())  # (1,2) (2,1)\n    red.append((x, y))\n\nfor i in range(N):\n    x, y = map(int, input().split())  # (3,3) (4,2)\n    blue.append((x, y))\n\nred.sort(key=lambda x: x[0])  # (1,2) (2,1)\nred.sort(key=lambda x: x[1])  # (2,1) (1,2)\nblue.sort(key=lambda x: x[0])  # (3,3) (4,2)\nblue.sort(key=lambda x: x[1])  # (4,2) (3,3)\n\ncount = 0\nfor r in red:\n    for b in blue:\n        if r[0] < b[0] and r[1] < b[1]:\n            count += 1\n            blue.remove(b)\n            break\n\nprint(count)\n', '\n#\n# N = int(input())\n#\n# red = []\n# blue = []\n#\n# for i in range(N):\n#     x, y = map(int, input().split())\n#     red.append((x, y))\n#\n# for i in range(N):\n#     x, y = map(int, input().split())\n#     blue.append((x, y))\n#\n# # red.sort(key=lambda x: x[0])\n# red.sort(key=lambda x: x[1])\n# blue.sort(key=lambda x: x[0])\n# blue.sort(key=lambda x: x[1])\n#\n# count = 0\n# for r in red:\n#     for b in blue:\n#         if r[0] < b[0] and r[1] < b[1]:\n#             count += 1\n#             blue.remove(b)\n#             break\n#\n# print(count)\n']
2022-04-16 00:03:39.615791 size on output set 3
2022-04-16 00:03:39.615803 num operations 1
2022-04-16 00:03:39.615808 size on input set 1
2022-04-16 00:03:41.247024 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650067419,
  "object": "edit"
}
2022-04-16 00:03:41.247459 fix syntax errors 3 ["\n\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\nclass Pair:\n    def __init__(self, r, b):\n        self.r = r\n        self.b = b\n\ndef main():\n    n = int(sys.stdin.readline())\n    r = []\n    b = []\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        r.append(Point(x, y))\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        b.append(Point(x, y))\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            if r[i].x < b[j].x and r[i].y < b[j].y:\n                pairs.append(Pair(r[i], b[j]))\n    print(len(pairs))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:03:41.247656 size on output set 3
