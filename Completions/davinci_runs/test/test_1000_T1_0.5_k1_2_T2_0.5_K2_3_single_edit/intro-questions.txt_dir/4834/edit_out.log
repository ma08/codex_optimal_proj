2022-04-16 01:56:21.332761 num operations 1
2022-04-16 01:56:21.332779 size on input set 1
2022-04-16 01:56:22.865029 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n"
    }
  ],
  "created": 1650074181,
  "object": "edit"
}
2022-04-16 01:56:22.865428 fix syntax errors 3 ['\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n', '\nn = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n']
2022-04-16 01:56:22.865472 size on output set 1
2022-04-16 01:56:22.865485 num operations 1
2022-04-16 01:56:22.865490 size on input set 1
2022-04-16 01:56:27.737444 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()][:n]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n//2):\n        if i % 2 == 0:\n            a += times[2*i] + times[2*i+1]\n        else:\n            b += times[2*i] + times[2*i+1]\n\n    if n % 2 != 0:\n        a += times[n-1]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650074182,
  "object": "edit"
}
2022-04-16 01:56:27.737639 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()][:n]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n//2):\n        if i % 2 == 0:\n            a += times[2*i] + times[2*i+1]\n        else:\n            b += times[2*i] + times[2*i+1]\n\n    if n % 2 != 0:\n        a += times[n-1]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 01:56:27.737667 size on output set 2
2022-04-16 01:56:27.737677 num operations 1
2022-04-16 01:56:27.737682 size on input set 1
2022-04-16 01:56:30.708525 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n"
    }
  ],
  "created": 1650074187,
  "object": "edit"
}
2022-04-16 01:56:30.708761 fix syntax errors 3 ['\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n', '\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n', '\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n']
2022-04-16 01:56:30.708801 size on output set 1
2022-04-16 01:56:30.708811 num operations 1
2022-04-16 01:56:30.708817 size on input set 1
2022-04-16 01:56:32.285066 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"
    }
  ],
  "created": 1650074190,
  "object": "edit"
}
2022-04-16 01:56:32.285297 fix syntax errors 3 ['#!/usr/bin/python3\n\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n', '\nn = int(input())\nteams = [int(x) for x in input().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n']
2022-04-16 01:56:32.285320 size on output set 2
2022-04-16 01:56:32.285338 num operations 1
2022-04-16 01:56:32.285345 size on input set 1
2022-04-16 01:56:34.991476 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n"
    }
  ],
  "created": 1650074192,
  "object": "edit"
}
2022-04-16 01:56:34.991743 fix syntax errors 3 ['\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n', '\n# Solution\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n']
2022-04-16 01:56:34.991776 size on output set 3
2022-04-16 01:56:34.991787 num operations 1
2022-04-16 01:56:34.991792 size on input set 1
2022-04-16 01:56:42.008495 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N = int(input())\n    times = list(map(int, input().split()))\n    \n    # Sort the times in descending order\n    times.sort(reverse=True)\n    \n    # Greedy algorithm\n    # The one with the shortest time should go first\n    # the second shortest time should go second, etc.\n    # and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n    \n    # The time it takes to finish all lectures is the sum of the times\n    print(sum(times))\n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    times = list(map(int, input().split()))\n\n    # Sort the times in descending order\n    times.sort(reverse=True)\n\n    # Greedy algorithm\n    # The one with the shortest time should go first\n    # the second shortest time should go second, etc.\n    # and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n    # The time it takes to finish all lectures is the sum of the times\n    print(sum(times))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# the second shortest time should go second, etc. \n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"
    }
  ],
  "created": 1650074195,
  "object": "edit"
}
2022-04-16 01:56:42.008687 fix syntax errors 3 ["\ndef main():\n    N = int(input())\n    times = list(map(int, input().split()))\n    \n    # Sort the times in descending order\n    times.sort(reverse=True)\n    \n    # Greedy algorithm\n    # The one with the shortest time should go first\n    # the second shortest time should go second, etc.\n    # and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n    \n    # The time it takes to finish all lectures is the sum of the times\n    print(sum(times))\n    \nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    N = int(input())\n    times = list(map(int, input().split()))\n\n    # Sort the times in descending order\n    times.sort(reverse=True)\n\n    # Greedy algorithm\n    # The one with the shortest time should go first\n    # the second shortest time should go second, etc.\n    # and the longest time should go last (this is the only time it will be waiting, so it doesn\'t matter)\n\n    # The time it takes to finish all lectures is the sum of the times\n    print(sum(times))\n\nif __name__ == "__main__":\n    main()\n', "\n\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# the second shortest time should go second, etc. \n# and the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n"]
2022-04-16 01:56:42.008720 size on output set 3
2022-04-16 01:56:42.008731 num operations 1
2022-04-16 01:56:42.008736 size on input set 1
2022-04-16 01:56:43.444306 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nteams = list(map(int, input().split()))\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n"
    }
  ],
  "created": 1650074202,
  "object": "edit"
}
2022-04-16 01:56:43.444525 fix syntax errors 3 ['\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n', '\n\nN = int(input())\nteams = list(map(int, input().split()))\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n']
2022-04-16 01:56:43.444547 size on output set 2
2022-04-16 01:56:43.444558 num operations 1
2022-04-16 01:56:43.444563 size on input set 1
2022-04-16 01:56:45.458310 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()] \n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650074203,
  "object": "edit"
}
2022-04-16 01:56:45.458502 fix syntax errors 3 ["\n\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()] \n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 01:56:45.458587 size on output set 2
