["\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split(' '))\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n", "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1: a, b = l1, l2\n    elif l2 == r2: a, b = l1, l2\n    elif l1 == l2: a, b = l1, r2\n    elif r1 == r2: a, b = l1, r2\n    elif l1 == r2: a, b = l1, l2\n    elif r1 == l2: a, b = l1, r2\n    else: a, b = l1, l2\n\n    print(a, b)\n", "\nn = int(input())\n\nfor i in range(n):\n    a = map(int, input().split())\n\n    if a[0] == a[1]:\n        print(a[0], a[2])\n    elif a[2] == a[3]:\n        print(a[0], a[2])\n    elif a[0] == a[2]:\n        print(a[0], a[1])\n    elif a[1] == a[3]:\n        print(a[0], a[1])\n    elif a[0] == a[3]:\n        print(a[0], a[2])\n    elif a[1] == a[2]:\n        print(a[0], a[1])\n", "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n\n2. If ranges are overlapping, then a = l1, b = r2\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        left_1, right_1, left_2, right_2 = map(int, input().split())\n        if left_1 == right_1:\n            print(left_1, left_2)\n        elif left_2 == right_2:\n            print(left_1, left_2)\n        else:\n            print(left_1, left_2 + 1)\n\ntwo_segments()\n", "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split(\" \"))\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[0] + l[1])\n", "\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r2:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n# https://www.hackerearth.com/practice/basic-programming/input-output/basics-of-input-output/practice-problems/algorithm/seating-arrangement-1/\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        print(l1, r2)\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n\n        print(a, c)\n", "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n2. If ranges are overlapping, then a = l1, b = r2\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "'''\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0435\u0435 100.\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 N \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u0445 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435:\n\u0424\u0430\u043c\u0438\u043b\u0438\u044f \u0418\u043c\u044f \u041e\u0446\u0435\u043d\u043a\u0430_\u043f\u043e_\u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0435 \u041e\u0446\u0435\u043d\u043a\u0430_\u043f\u043e_\u0444\u0438\u0437\u0438\u043a\u0435 \u041e\u0446\u0435\u043d\u043a\u0430_\u043f\u043e_\u0440\u0443\u0441\u0441\u043a\u043e\u043c\u0443_\u044f\u0437\u044b\u043a\u0443\n\u0412 \u043a\u043e\u043d\u0446\u0435 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0430 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0438\u0437 \u0442\u0440\u0451\u0445 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432: \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0435, \u0444\u0438\u0437\u0438\u043a\u0435 \u0438 \u0440\u0443\u0441\u0441\u043a\u043e\u043c\u0443 \u044f\u0437\u044b\u043a\u0443.\n\u041e\u0446\u0435\u043d\u043a\u0430 \u2014 \u044d\u0442\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0438\u0437 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u043e\u0442 2 \u0434\u043e 5.\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u0445 \u0432 \u0442\u043e\u043c \u0436\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u0447\u0442\u043e \u0438 \u0432\u043e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e.\n\u0415\u0441\u043b\u0438 \u0443 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u043e\u0446\u0435\u043d\u043a\u0438 \u0440\u0430\u0432\u043d\u044b, \u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0435 \u0438\u0445 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f \u0444\u0430\u043c\u0438\u043b\u0438\u0438.\n'''\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n", "\n//\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = l2\n\n2. If ranges are overlapping, then a = l1, b = r2\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n", "\nfor i in range(int(input())):\n    a, b = map(int, input().split())\n    print(a, b)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, raw_input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l2 == r2:\n            print(l1, l2)\n        elif l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n", "\ndef main():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = [int(x) for x in input().split()]\n        if r1 == l2:\n            print(r1, l2)\n        else:\n            print(l1, l2)\n"]