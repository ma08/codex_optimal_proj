2022-04-16 02:26:39.905845 num operations 1
2022-04-16 02:26:39.905864 size on input set 1
2022-04-16 02:26:43.945662 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for _ in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = {}\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords[line.split()[0]] = float(line.split()[1])\n    passwords = sorted(passwords.items(), key=lambda x: x[1], reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * passwords[i][1]\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split(' '))\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076000,
  "object": "edit"
}
2022-04-16 02:26:43.945893 fix syntax errors 3 ["#!/usr/bin/env python\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for _ in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = {}\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords[line.split()[0]] = float(line.split()[1])\n    passwords = sorted(passwords.items(), key=lambda x: x[1], reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * passwords[i][1]\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split(' '))\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    total = 0\n    for i in range(len(passwords)):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:26:43.945949 size on output set 3
2022-04-16 02:26:43.945960 num operations 1
2022-04-16 02:26:43.945965 size on input set 1
2022-04-16 02:26:45.765559 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    # print(passwords)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n    passwords = []\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    # print(passwords)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076003,
  "object": "edit"
}
2022-04-16 02:26:45.765765 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    # print(passwords)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n    passwords = []\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    # print(passwords)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    attempts = 0\n    for p in passwords:\n        attempts += 1/float(p[1])\n    print(attempts)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:26:45.765795 size on output set 3
2022-04-16 02:26:45.765805 num operations 1
2022-04-16 02:26:45.765810 size on input set 1
2022-04-16 02:26:47.318551 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#SOLUTION\n\n#SOLUTION\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n"
    },
    {
      "index": 1,
      "text": "#SOLUTION\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n"
    },
    {
      "index": 2,
      "text": "\n\n#SOLUTION:\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n"
    }
  ],
  "created": 1650076005,
  "object": "edit"
}
2022-04-16 02:26:47.318742 fix syntax errors 3 ['#SOLUTION\n\n#SOLUTION\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n', '#SOLUTION\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n', '\n\n#SOLUTION:\n\nnum = int(input())\n\nlis = []\n\nfor i in range(num):\n    lis.append(list(input().split()))\n\nlis.sort(key = lambda x: float(x[1]), reverse = True)\n\nanswer = 0\nfor i in range(len(lis)):\n    answer += (i + 1) * float(lis[i][1])\n\nprint(answer)\n']
2022-04-16 02:26:47.318766 size on output set 3
2022-04-16 02:26:47.318776 num operations 1
2022-04-16 02:26:47.318781 size on input set 1
2022-04-16 02:26:50.034498 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    summ = 0\n    for i in range(n):\n        summ += (i+1)*float(passwords[i][1])\n    print(summ)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    _sum = 0\n    for i in range(n):\n        _sum += (i+1)*float(passwords[i][1])\n    print(_sum)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    sum = 0\n    for i in range(n):\n        sum += (i+1)*float(passwords[i][1])\n    print(sum)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076007,
  "object": "edit"
}
2022-04-16 02:26:50.034691 fix syntax errors 3 ["\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    summ = 0\n    for i in range(n):\n        summ += (i+1)*float(passwords[i][1])\n    print(summ)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    _sum = 0\n    for i in range(n):\n        _sum += (i+1)*float(passwords[i][1])\n    print(_sum)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    passwords = [stdin.readline().strip().split(' ') for _ in range(n)]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    sum = 0\n    for i in range(n):\n        sum += (i+1)*float(passwords[i][1])\n    print(sum)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:26:50.034719 size on output set 3
2022-04-16 02:26:50.034729 num operations 1
2022-04-16 02:26:50.034734 size on input set 1
2022-04-16 02:26:52.774356 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    # print(passwords)\n    expected = 0\n    for i in range(len(passwords)):\n        expected += (i + 1) * passwords[i][1]\n    print(expected)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\n\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    # print(passwords)\n    expected = 0\n    for i in range(len(passwords)):\n        expected += (i + 1) * passwords[i][1]\n    print(expected)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    expected = 0\n    for i, p in enumerate(passwords):\n        expected += (i + 1) * p[1]\n    print(expected)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076010,
  "object": "edit"
}
2022-04-16 02:26:52.774555 fix syntax errors 3 ['#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    # print(passwords)\n    expected = 0\n    for i in range(len(passwords)):\n        expected += (i + 1) * passwords[i][1]\n    print(expected)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\n\n\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    # print(passwords)\n    expected = 0\n    for i in range(len(passwords)):\n        expected += (i + 1) * passwords[i][1]\n    print(expected)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split())\n    passwords = [[int(p), float(prob)] for p, prob in passwords]\n    passwords.sort(key=lambda x: x[1], reverse=True)\n    expected = 0\n    for i, p in enumerate(passwords):\n        expected += (i + 1) * p[1]\n    print(expected)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:26:52.774586 size on output set 3
2022-04-16 02:26:52.774595 num operations 1
2022-04-16 02:26:52.774601 size on input set 1
2022-04-16 02:26:59.435227 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n\tpasswords = []\n\tfor line in sys.stdin:\n\t\tpasswords.append(line.strip().split(' '))\n\tpasswords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)\n\t# print(passwords)\n\texpected_attempts = 0\n\tfor i, password in enumerate(passwords):\n\t\t# print(password)\n\t\texpected_attempts += (i+1)*float(password[1])\n\tprint(expected_attempts)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split(' '))\n    # passwords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)\n    passwords = sorted(passwords, key=lambda x: float(x[1]))\n    # print(passwords)\n    expected_attempts = 0\n    for i, password in enumerate(passwords):\n        # print(password)\n        expected_attempts += (len(passwords)-i)*float(password[1])\n    print(expected_attempts)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    passwords = []  #list of passwords\n    for line in sys.stdin:\n        passwords.append(line.strip().split(' '))  #splits the passwords into a list\n    passwords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)  #sorts the passwords by their probability\n    # print(passwords)\n    expected_attempts = 0\n    for i, password in enumerate(passwords):\n        # print(password)\n        expected_attempts += (i+1)*float(password[1])  #calculates the expected number of attempts\n    print(expected_attempts)  #prints the expected number of attempts\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076012,
  "object": "edit"
}
2022-04-16 02:26:59.435459 fix syntax errors 3 ['\nimport sys\n\ndef main():\n\tpasswords = []\n\tfor line in sys.stdin:\n\t\tpasswords.append(line.strip().split(\' \'))\n\tpasswords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)\n\t# print(passwords)\n\texpected_attempts = 0\n\tfor i, password in enumerate(passwords):\n\t\t# print(password)\n\t\texpected_attempts += (i+1)*float(password[1])\n\tprint(expected_attempts)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\nimport sys\n\ndef main():\n    passwords = []\n    for line in sys.stdin:\n        passwords.append(line.strip().split(\' \'))\n    # passwords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)\n    passwords = sorted(passwords, key=lambda x: float(x[1]))\n    # print(passwords)\n    expected_attempts = 0\n    for i, password in enumerate(passwords):\n        # print(password)\n        expected_attempts += (len(passwords)-i)*float(password[1])\n    print(expected_attempts)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    passwords = []  #list of passwords\n    for line in sys.stdin:\n        passwords.append(line.strip().split(\' \'))  #splits the passwords into a list\n    passwords = sorted(passwords, key=lambda x: float(x[1]), reverse=True)  #sorts the passwords by their probability\n    # print(passwords)\n    expected_attempts = 0\n    for i, password in enumerate(passwords):\n        # print(password)\n        expected_attempts += (i+1)*float(password[1])  #calculates the expected number of attempts\n    print(expected_attempts)  #prints the expected number of attempts\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:26:59.435556 size on output set 3
2022-04-16 02:26:59.435567 num operations 1
2022-04-16 02:26:59.435572 size on input set 1
2022-04-16 02:27:03.528302 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(inp.readline().strip().split())\n    return N, pwds\n\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1.0 - float(pwds[i][1])) * (i + 1)\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(list(map(int, inp.readline().split())))\n    return N, pwds\n\n    pwds.sort(key=lambda x: x[0])\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1 - pwds[i][1]) * (i + 1)\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(int(ans))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(inp.readline().split())\n    return N, pwds\n\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1 - float(pwds[i][1]))\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076019,
  "object": "edit"
}
2022-04-16 02:27:03.528492 fix syntax errors 3 ["\n\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(inp.readline().strip().split())\n    return N, pwds\n\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1.0 - float(pwds[i][1])) * (i + 1)\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(list(map(int, inp.readline().split())))\n    return N, pwds\n\n    pwds.sort(key=lambda x: x[0])\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1 - pwds[i][1]) * (i + 1)\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(int(ans))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_input(inp):\n    N = int(inp.readline())\n    pwds = []\n    for i in range(N):\n        pwds.append(inp.readline().split())\n    return N, pwds\n\ndef solve(N, pwds):\n    pwds.sort(key=lambda x: x[1], reverse=True)\n    ans = 1\n    for i in range(N):\n        ans += (1 - float(pwds[i][1]))\n    return ans\n\ndef main():\n    N, pwds = read_input(sys.stdin)\n    ans = solve(N, pwds)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:27:03.528527 size on output set 3
2022-04-16 02:27:03.528547 num operations 1
2022-04-16 02:27:03.528553 size on input set 1
2022-04-16 02:27:05.080224 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint(\"{:.4f}\".format(total))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint(\"{:.4f}\".format(total))\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint(\"{:.4f}\".format(total))\n"
    }
  ],
  "created": 1650076023,
  "object": "edit"
}
2022-04-16 02:27:05.080424 fix syntax errors 3 ['\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint("{:.4f}".format(total))\n', '#!/usr/bin/env python\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint("{:.4f}".format(total))\n', '\n\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprobs = []\n\nfor _ in range(n):\n    prob = sys.stdin.readline().split()\n    probs.append(float(prob[1]))\n\nprobs.sort()\nprobs.reverse()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * probs[i]\n\nprint("{:.4f}".format(total))\n']
2022-04-16 02:27:05.080451 size on output set 3
