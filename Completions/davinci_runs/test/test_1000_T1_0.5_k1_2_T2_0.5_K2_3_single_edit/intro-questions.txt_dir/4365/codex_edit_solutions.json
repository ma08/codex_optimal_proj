["\n\n#!/usr/bin/env python\n# coding: utf-8\n\n# In[ ]:\n\n\nimport sys\nsys.setrecursionlimit(1000000)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\n\ndef prime_factorization(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n //= 2\n    f = 3\n    while f * f <= n:\n        if n % f == 0:\n            a.append(f)\n            n //= f\n        else:\n            f += 2\n    if n != 1:\n        a.append(n)\n    return a\n\ndef f(i, n, k, a, b):\n    if i == n:\n        return\n    if b[i] == 0:\n        b[i] = prime_factorization(a[i])\n    for j in range(i + 1, n):\n        if b[j] == 0:\n            b[j] = prime_factorization(a[j])\n        if len(list(set(b[i]) & set(b[j]))) == 0:\n            k -= 1\n    if k == 0:\n        print(a[i])\n        exit()\n    f(i + 1, n, k, a, b)\n\nf(0, n, k, a, b)\n\n\n# In[ ]:\n\n\n\n", "\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem B\n\nif __name__ == '__main__':\n    k = int(input())\n    result = 0\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n", "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem B\n\nif __name__ == '__main__':\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n", "\nk = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n"]