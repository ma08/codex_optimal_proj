["\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    m = int(input())\n    t = [input() for _ in range(m)]\n\n    ans = 0\n    for s_ in s:\n        if s_ in t:\n            ans -= 1\n        else:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    A = [input() for _ in range(N)]\n    M = int(input())\n    B = [input() for _ in range(M)]\n\n    ans = 0\n    for a in A:\n        if a in B:\n            ans -= 1\n        else:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for j in range(m)]\n\ns_count = {}\nt_count = {}\n\nfor i in s:\n    if i in s_count:\n        s_count[i] += 1\n    else:\n        s_count[i] = 1\n\nfor j in t:\n    if j in t_count:\n        t_count[j] += 1\n    else:\n        t_count[j] = 1\n\ns_count = sorted(s_count.items(), key = lambda x: x[1], reverse = True)\nt_count = sorted(t_count.items(), key = lambda x: x[1], reverse = True)\n\n#print(s_count)\n#print(t_count)\n\nif len(s_count) >= len(t_count):\n    ans = 0\n    for i in range(len(t_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\nelse:\n    ans = 0\n    for i in range(len(s_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\n\n# Others\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for i in range(m)]\n\nans = 0\nfor i in set(s):\n    ans += s.count(i) - t.count(i)\nprint(ans)\n", "\n\n# My Answer\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for j in range(m)]\n\ns_count = {}\nt_count = {}\n\nfor i in s:\n    if i in s_count:\n        s_count[i] += 1\n    else:\n        s_count[i] = 1\n\nfor j in t:\n    if j in t_count:\n        t_count[j] += 1\n    else:\n        t_count[j] = 1\n\ns_count = sorted(s_count.items(), key = lambda x: x[1], reverse = True)\nt_count = sorted(t_count.items(), key = lambda x: x[1], reverse = True)\n\n#print(s_count)\n#print(t_count)\n\nif len(s_count) >= len(t_count):\n    ans = 0\n    for i in range(len(t_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\nelse:\n    ans = 0\n    for i in range(len(s_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\n\n# Others Answer 1\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for i in range(m)]\n\nans = 0\nfor i in set(s):\n    ans += s.count(i) - t.count(i)\nprint(ans)\n\n# Others Answer 2\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for i in range(m)]\n\nfor i in set(s):\n    ans += s.count(i) - t.count(i)\nprint(ans)\n", "\n\ndef main():\n    N = int(input())\n    S = [input() for _ in range(N)]\n    M = int(input())\n    T = [input() for _ in range(M)]\n\n    print(len(set(S) - set(T)))\n\nif __name__ == '__main__':\n    main()\n", "\n# My Answer\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for j in range(m)]\n\ns_count = {}\nt_count = {}\n\nfor i in s:\n    if i in s_count:\n        s_count[i] += 1\n    else:\n        s_count[i] = 1\n\nfor j in t:\n    if j in t_count:\n        t_count[j] += 1\n    else:\n        t_count[j] = 1\n\ns_count = sorted(s_count.items(), key = lambda x: x[1], reverse = True)\nt_count = sorted(t_count.items(), key = lambda x: x[1], reverse = True)\n\n#print(s_count)\n#print(t_count)\n\nif len(s_count) >= len(t_count):\n    ans = 0\n    for i in range(len(t_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\nelse:\n    ans = 0\n    for i in range(len(s_count)):\n        ans += s_count[i][1] - t_count[i][1]\n    print(ans)\n\n# Others Answer\nn = int(input())\ns = [input() for i in range(n)]\nm = int(input())\nt = [input() for i in range(m)]\n\nans = 0\nfor i in set(s):\n    ans += s.count(i) - t.count(i)\nprint(ans)\n"]