2022-04-15 23:38:24.502810 num operations 1
2022-04-15 23:38:24.502819 size on input set 1
2022-04-15 23:38:26.943332 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "'''\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n'''\n    print(main())\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(main())\n"
    }
  ],
  "created": 1650065904,
  "object": "edit"
}
2022-04-15 23:38:26.943569 fix syntax errors 3 ['\'\'\'\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n\'\'\'\n    print(main())\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == "__main__":\n    print(main())\n']
2022-04-15 23:38:26.943601 size on output set 3
2022-04-15 23:38:26.943610 num operations 1
2022-04-15 23:38:26.943615 size on input set 1
2022-04-15 23:38:32.570715 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n\n\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    for _ in range(n):\n        a.append(int(input()))\n    a.sort()\n    a_sum = sum(a)\n    if a_sum <= m:\n        print(0)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i] - b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i] - b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650065906,
  "object": "edit"
}
2022-04-15 23:38:32.570919 fix syntax errors 3 ['\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n\n\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    for _ in range(n):\n        a.append(int(input()))\n    a.sort()\n    a_sum = sum(a)\n    if a_sum <= m:\n        print(0)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i] - b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i] - b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 23:38:32.570957 size on output set 3
