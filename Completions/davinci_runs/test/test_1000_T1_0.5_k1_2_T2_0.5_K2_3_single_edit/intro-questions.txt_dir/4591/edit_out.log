2022-04-16 00:25:17.816403 num operations 1
2022-04-16 00:25:17.816422 size on input set 1
2022-04-16 00:25:28.814478 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    # Read input and convert to integers\n    A, B, C, X, Y = [int(x) for x in input().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nA, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n\n    print(sys.stdin.readline())\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650068717,
  "object": "edit"
}
2022-04-16 00:25:28.814717 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    # Read input and convert to integers\n    A, B, C, X, Y = [int(x) for x in input().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nA, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n\n    print(sys.stdin.readline())\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 00:25:28.814753 size on output set 3
2022-04-16 00:25:28.814764 num operations 1
2022-04-16 00:25:28.814769 size on input set 1
2022-04-16 00:25:34.392060 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    },
    {
      "index": 2,
      "text": "\ndef pizza_at(a, b, c, x, y, ):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    }
  ],
  "created": 1650068728,
  "object": "edit"
}
2022-04-16 00:25:34.392263 fix syntax errors 3 ['\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n', '\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n', '\ndef pizza_at(a, b, c, x, y, ):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas\n        if x > (x + y) // 2:\n            # If AB is cheaper than A, buy AB pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AB is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas\n        if y > (x + y) // 2:\n            # If AB is cheaper than B, buy AB pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n']
2022-04-16 00:25:34.392405 size on output set 2
