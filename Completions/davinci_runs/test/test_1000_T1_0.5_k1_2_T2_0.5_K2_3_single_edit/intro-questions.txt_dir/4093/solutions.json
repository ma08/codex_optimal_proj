["import sys\ninput = sys.stdin.readline\nrInt = lambda: int(input())\nmInt = lambda: list(map(int, input().split()))\nrLis = lambda: list(map(int, input().split()))\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = mInt()\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\n", "t = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    if n == 1:\n        res = 0\n    elif n == 2:\n        res = m\n    else:\n        res = 2 * m\n    print(res)\n", "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m*2)", "q = int(input())\nfor _ in range(q):\n\tn,m = map(int,input().split())\n\tif n > 2:\n\t\tprint(2*m)\n\telse:\n\t\tif n == 1:\n\t\t\tprint(0)\n\t\telse:\n\t\t\tprint(m)", "for i in range(int(input())):\n    n,m=map(int,input().split())\n    if n==1:\n        print(0)\n    elif n==2:\n        print(m)\n    else:\n        print(2*m)", "\nt = int(input())\n\nfor loop in range(t):\n\n    n,m = list(map(int,input().split()))\n\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print (m)\n    else:\n        print(2*m)\n", "from sys import stdin, stdout, setrecursionlimit\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n == 1: print(0)\n    elif n == 2: print(m)\n    else: print(m * 2)\n\n\n\n\n\n\n\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n\n    if n==1:\n        print(0)\n    elif n==2:\n        print(m)\n    else:\n        print(m*2)\n", "for _ in range(int(input())):\n    n,m = list(map(int,input().split()))\n    if (n == 1):\n        print(0)\n        continue\n    if (n==2):\n        print(m)\n        continue\n    print(m*2)", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, m = read_ints()\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)\n", "for nt in range(int(input())):\n\tn,m=map(int,input().split())\n\tif n==1:\n\t\tprint (0)\n\t\tcontinue\n\tif n==2:\n\t\tprint (m)\n\t\tcontinue\n\tprint (2*m)", "for i in range(int(input())):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t=int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    if n==1:\n        print(0)\n    elif n==2:\n        print(m)\n    else:\n        print(2*m)\n", "import sys\nimport os\nimport time\nimport collections\nfrom collections import Counter, deque\nimport itertools\nimport math\nimport timeit\nimport random\nimport string\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\n\ndef divs(n, start=1):\n    divisors = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                divisors.append(i)\n            else:\n                divisors.extend([i, n // i])\n    return divisors\n\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\n\ndef flin(d, x, default=-1):\n    left = right = -1\n    for i in range(len(d)):\n        if d[i] == x:\n            if left == -1: left = i\n            right = i\n    if left == -1:\n        return default, default\n    else:\n        return left, right\n\ndef ceil(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep=' ', end='\\n'): print(sep.join(map(str, a)), end=end)\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\n\n########################################################################################################################\n# input = sys.stdin.readline\n\nfor _ in range(ii()):\n    n, m = mi()\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2*m)", "for _ in range(int(input())):\n\tn,m=list(map(int,input().split()))\n\tif n==1:\n\t\tprint(0)\n\telif n==2:\n\t\tprint(m)\n\telse:\n\t\tprint(2*m)\n    \n", "\n\ndef solve():\n    n, m = map(int, input().split(\" \"))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\n\n\ndef __starting_point():\n    t = int(input())\n    for tc in range(t):\n        solve()\n__starting_point()", "from sys import stdin\n# from collections import Counter\n# from math import ceil,log\n\n# def gcd(a, b):\n# \tif(a==0):\n# \t\treturn b \n# \treturn gcd(b%a,a)\n\n# def sieve(n): \n# \tprime=[True for i in range(n+1)]\n# \tp=2\n# \twhile(p*p<=n): \n# \t\tif (prime[p]==True): \n# \t\t\tfor i in range(p*p,n+1,p): \n# \t\t\t\tprime[i]=False\n# \t\tp+=1\n# \tprime[0]=False\n# \tprime[1]=False\n# \treturn prime \n\n# alpha=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n# mod=10**9+7\n\ninput=stdin.readline\n\ndef list_input():\n\treturn list(map(int, input().split()))\n\ndef sep_input():\n\treturn map(int, input().split())\n\n#_______________________________________________________________________________________________________________________________________\n\nfor _ in range(int(input())):\n\tn,m=sep_input()\n\tif(n==1):\n\t\tprint(0)\n\telif(n==2):\n\t\tprint(m)\n\telse:\n\t\tprint(2*m)", "for i in range(int(input())):\n  n,m=[int(i) for i in input().split()]\n  if n==1:\n    print(0)\n  elif n==2:\n    print(m)\n  else:\n    print(2*m)\n", "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    if n==1:print(0)\n    elif n==2:print(m)\n    else:print(2*m)", "for _ in range(int(input())):\n    n,m = map(int,input().split())\n    if(n==1):\n        print(0)\n    elif(n==2):\n        print(m)\n    else:\n        print(2*m)"]