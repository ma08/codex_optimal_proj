["a = input()\nb = input()\n\nif a[:: -1] == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "P = input()\nQ = input()\n\nif P[::-1] == Q:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "a = input()\nb = input()\n\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print('YES')\nelse:\n    print('NO')\n", "c1 = input()\nc2 = input()\nif c1[0] == c2[2] and c1[1] == c2[1] and c1[2] == c2[0]:\n    print('YES')\nelse:\n    print('NO')", "a,b=[input() for i in range(2)]\nc=a[::-1];d=b[::-1]\n\nif a==d and b==c:\n  print('YES')\n  \nelse:\n  print('NO')", "# 077_a\nC1=input()\nC2=input()\n# (1<=i and i<=2) and (1<=j and j<=3):\n\nif C1==(C2[2]+C2[1]+C2[0])and C2==(C1[2]+C1[1]+C1[0]):\n    print('YES')\nelse:\n    print('NO')", "a = input()\nb = input()\nif a == b[::-1]:\n  print('YES')\nelse:\n  print('NO')\n", "a = input()\nb = input()\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print('YES')\nelse:\n    print('NO')", "i = input()\nj = input()\n\nif i[0] == j[2] and i[1] == j[1] and i[2] == j[0]:\n    print('YES')\nelse:\n    print('NO')", "a=input()\nprint(\"YES\") if input()==a[::-1] else print(\"NO\")", "if input() == input()[::-1]:\n   print('YES')\nelse:\n   print('NO')", "a = list(map(str, input()))\nb = list(map(str, input()))\n\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print('YES')\nelse:\n    print('NO')", "# coding = SJIS\n\na = str(input())\nb = str(input())\n\nif a[0] == b[2]:\n    if a[1] == b[1]:\n        if a[2] == b[0]:\n            print(\"YES\")\n            return\n        else:\n            print(\"NO\")\n            return\n    else:\n        print(\"NO\")\n        return\nelse:\n    print(\"NO\")\n    return", "A = list(input())\nB = list(input())\nif A[0] == B[2] and A[1] == B[1] and A[2] == B[0]:\n    print('YES')\nelse:\n    print('NO')", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**6)\n\nc1 = list(str(input()))\nc2 = list(reversed(str(input())))\n\nif c1 == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "s=input()\nt=input()\nt=t[::-1]\nif s==t:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "first = input()\nsecond = input()\n\nif first[0] == second[2] and first[1] == second[1] and first[2] == second[0]:\n    print('YES')\nelse:\n    print('NO')", "a = input()\nb = input()\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print('YES')\nelse:\n    print('NO')", "a=input()\nb=input()\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "def main():\n    c1 = input()\n    c2 = input()\n\n    if all((c1[0] == c2[2], c1[2] == c2[0], c1[1] == c2[1])):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nmain()", "a = input()\nb = input()\n\nif a == b[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "x = str(input())\ny = str(input())\n\nconditions = x[0] == y[2] and x[1] == y[1] and x[2] == y[0]\nif conditions:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "s=input()\nt=input()\nprint(\"YES\" if s==t[::-1]  else \"NO\")", "s = str(input())\nt = str(input())\n\nif s[0] == t[2] and s[1] == t[1] and s[2] == t[0]:\n    result = \"YES\"\nelse:\n    result = \"NO\"\n\nprint(result)\n", "data1 = input()\ndata2 = input()\n\ncount = 3 -1\nsw = 0\ni = 0\nj = len(data2)-1\nwhile i <= count:\n    if data1[i] == data2[j]:\n        sw += 1\n    i += 1\n    j -= 1\nif sw == 3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = str(input())\ns = str(input())\nif n[0]== s[2]and n[1]==s[1] and n[2]== s[0]:\n    print('YES')\nelse:\n    print('NO')\n", "C=input()+input()\nprint(\"YNEOS\"[1 in[1 for i in range(3)if C[i]!=C[-i-1]]::2])", "a = list(input())\nb = list(input())\n\nif a[0] == b[2] and b[0] == a[2] and a[1]==b[1]:\n    print('YES')\nelse:\n    print('NO')\n", "C1 = str(input())\nC2 = str(input())\n\nif C1[0] == C2[-1] and C1[1] == C2[-2] and C1[2] == C2[-3]:\n    print('YES')\nelse:\n    print('NO')", "x = input()\ny = input()\nif x[::-1] == y:\n\tprint('YES')\nelse:\n\tprint('NO')", "c=[list(input()) for i in range(2)]\nif c[0][0]==c[1][2] and c[0][1]==c[1][1] and c[0][2]==c[1][0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "s=input()\nt=input()\na=0\nfor i in range(3):\n    if s[i]!=t[-i-1]:\n        a=1\nprint('YES' if a==0 else 'NO')", "a = list(input())\nb = list(input())\na = a[::-1]\nif a == b:\n    print('YES')\nelse:\n    print('NO')", "x = list(input())\ny = list(input())\n\nif x[0] == y[2] and x[1] == y[1] and x[2] == y[0]:\n    print('YES')\nelse:\n    print('NO')", "C123=list(input())\nC456=list(reversed(input()))\n\nif C123 == (C456):\n    print('YES')\nelse:\n    print('NO')", "# A - Rotation\nline1 = input()\nline2 = input()\nmy_list1 = []\nmy_list2 = []\n \nfor i in line1:\n    my_list1.append(i)\n \nfor i in line2:\n    my_list2.append(i)\n \nmy_list2.reverse()\n \nif my_list1 == my_list2:\n    print('YES')\nelse:\n    print('NO')\n \n# print(my_list1, my_list2)\n", "a=input()\nb=input()\nif [a[2],a[1],a[0]]==[b[0],b[1],b[2]]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "a = input()\nb = input()\n\nif a==b[::-1] and b ==a[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "C1 = str(input())\nC2 = str(input())\n\nif C1[0] == C2[-1] and C1[1] == C2[-2] and C1[2] == C2[-3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c1 = str(input())\nc2 = str(input())\n\nif c2 == c1[::-1] and c1 == c2[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "\nc1=input()\nc2=input()\n\nif c1[0]+c1[1]+c1[2] == c2[2]+c2[1]+c2[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c = [\"\"] * 2\nc[0] = input()\nc[1] = input()\ns = True\nfor i in range(2):\n  for j in range(3):\n    if c[i][j] != c[-i-1][-j-1]: s = False\nif s: print('YES')\nelse: print('NO')", "s = list(input())\nt = list(input())\n\nif s == t[::-1]:\n    print('YES')\nelse:\n    print('NO')", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    # 1 line 1 int\n    return int(sys.stdin.readline().rstrip())\ndef LI():\n    # 1 line n ints\n    return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    # 1 line 1 string\n    return sys.stdin.readline().rstrip()\ndef LS():\n    # 1 line n strings\n    return list(sys.stdin.readline().rstrip().split())\n\nC1 = S()\nC2 = S()\n\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "# 077a\n\ndef atc_077a(input_value: str) -> str:\n    C1 = input_value[0]\n    C2 = input_value[1]\n\n    if C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\nC1 = input()\nC2 = input()\nprint((atc_077a([C1, C2])))\n", "c = [list(input()) for i in range(2)]\n\nif c[0][0] == c[1][2] and c[0][1] == c[1][1] and c[0][2] == c[1][0]:\n  print('YES')\nelse:\n  print('NO')", "C1 = input()\nC2 = input()\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print('YES')\nelse:\n    print('NO')\n", "a = input()\nb = input()\n\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "a=input()\nb=input()\nif a[1]==b[1] and a[0]==b[2] and a[2]==b[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "S1,S2=[input() for _ in range(2)]\nprint(\"YES\") if S1[2]==S2[0] and S1[1]==S2[1] and S1[0]==S2[2] else print(\"NO\")", "a = input()\nb = input()\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print('YES')\nelse:\n    print('NO')", "line1=input()\nline2=input()\n\nif line1[0]==line2[2] and line1[1]==line2[1] and line1[2]==line2[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c1 = input()\nc2 = input()\n\nprint(\"YES\" if c1 == c2[::-1] else \"NO\")", "S = input()[::-1]\nT = input()\nprint('YES' if S == T else 'NO')", "a = input()\nb = input()\nif a[::-1] == b:\n  print('YES')\nelse:\n  print('NO')", "c1 = input()\nc2 = input()\n\nif c1 == c2[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# \u6587\u5b57\u5217\u3092\u53d6\u5f97\nC1 = str(input())\nC2 = str(input())\n\n# \u6587\u5b57\u5217\u306e\u7d50\u5408\nori_str = C1 + C2\n\n# \u672b\u5c3e\u304b\u3089\uff11\u6587\u5b57\u305a\u3064\u53d6\u5f97\u3057\u3066\u9006\u3055\u307e\u6587\u5b57\u3092\u751f\u6210\nrev_str = ori_str[-1::-1]\n\n# \u6bd4\u8f03\u7d50\u679c\u3092\u51fa\u529b\nif ori_str == rev_str:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "print(('NO', 'YES')[input() == input()[::-1]])", "# A - Rotation\n# https://atcoder.jp/contests/abc077/tasks/abc077_a\n\na = input()\nb = input()\n\nresult = 'YES'\ni = 0\nj = -1\nwhile i < len(a):\n    if a[i] != b[j]:\n        result = 'NO'\n        break\n    i += 1\n    j -= 1\n\nprint(result)\n", "C1 = input()\nC2 = input()\n\nprint(\"YES\" if C1 == C2[::-1] else \"NO\")", "i = input()\nj = input()\nif i == j [::-1]:\n    print('YES')\nelse:\n    print('NO')", "a,b=input(),input()\nif a[0]==b[2] and a[1]==b[1] and a[2]==b[0]:print('YES')\nelse:print('NO')", "# 2\u6bb5\u76ee\u306e\u6587\u5b57\u5217\u3092\u9006\u306b\u3057\u30661\u6bb5\u76ee\u306e\u6587\u5b57\u5217\u3068\u4e00\u81f4\u3059\u308c\u3070\u3044\u3044\nc = input('')\nd = input('')\n\nif c == d[::-1]:\n    print('YES')\nelse:\n    print('NO')", "A = input()\nB = input()\n\nprint(\"YES\" if A[0] == B[-1] and A[-1] == B[0] and A[1] == B[1] else \"NO\")", "a = input()\nb = input()\n\nc = a[2]+a[1]+a[0]\n\nif b == c:\n  print('YES')\n  \nelse:\n  print('NO')", "a = input()\nb = input()\nif a==b[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# \u30bd\u30fc\u30c8\u304b\u3051\u3066\u3069\u3061\u3089\u3082\u540c\u3058\u3060\u3068YES\n\nc1 = list(input())\nc2 = list(input())\n\n# print(c1)\n# print(c2)\n\nc1_str = ''.join(c1)\n# c2_str = ''.join(c2)\n\nc2_str_reverse = c2[2] + c2[1] + c2[0]\n\nif c1_str == c2_str_reverse:\n    print('YES')\nelse:\n    print('NO')\n", "C1 = input()\nC2 = input()\n\nprint(\"YES\" if C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0] else \"NO\")", "#\n# abc077 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"pot\ntop\"\"\"\n        output = \"\"\"YES\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"tab\nbet\"\"\"\n        output = \"\"\"NO\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"eye\neel\"\"\"\n        output = \"\"\"NO\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    C1 = input()\n    C2 = input()\n\n    if C1[0] == C2[2] and C1[2] == C2[0] and C1[1] == C2[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "a = input()\nb = input()\n# \u6700\u521d\u306e\u6587\u5b57\u3068\u6700\u5f8c\u306e\u6587\u5b57\u3092\u5165\u308c\u66ff\u3048\u3066\u3082\u540c\u3058\u306b\u306a\u308c\u3070YES\nif a[0] == b[2] and a[1] == b[1] and a[2] == b[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c=[list(input())for i in range(2)]\nif c[0][0]==c[1][2] and c[0][1]==c[1][1] and c[0][2]==c[1][0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "'''\n\u554f\u984c\uff1a\n    \u7e26 2 \u30de\u30b9\u3001\u6a2a 3 \u30de\u30b9\u306e\u30de\u30b9\u76ee\u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\n    \u4e0a\u304b\u3089 i \u884c\u76ee\u3001\u5de6\u304b\u3089 j \u884c\u76ee\u306e\u30de\u30b9\u306e\u8272\u306f\u3001Cij \u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\n    \u3053\u306e\u30de\u30b9\u76ee\u3092 180 \u5ea6\u56de\u8ee2\u3055\u305b\u305f\u3068\u304d\u3001\n    \u5143\u306e\u30de\u30b9\u76ee\u3068\u4e00\u81f4\u3059\u308b\u306a\u3089 YES \u3092\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089 NO \u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n'''\n\n'''\n\u5236\u7d04\uff1a\n    Cij\uff081 \u2266 i \u2266 2\u3001 1 \u2266 j \u2266 3\uff09\u306f\u82f1\u5c0f\u6587\u5b57\u3067\u3042\u308b\u3002\n'''\n\n# \u6a19\u6e96\u5165\u529b\u304b\u3089 Cij\u3001Cji \u3092\u53d6\u5f97\u3059\u308b\ncij = str(input())\ncji = str(input())\n\nreverse_cij = cij[2] + cij[1] + cij[0]  # cij \u3092180\u5ea6\u56de\u8ee2\u3055\u305b\u305f\u6587\u5b57\u5217\n\nresult = \"\"\nif cji == reverse_cij:\n    result = \"YES\"\nelse:\n    result = \"NO\"\n\nprint(result)\n", "#\u5165\u529b\u4f8b\u306f\u5408\u3046\u304cWA\u306b\u306a\u308b\n\nA = input()\nB = input()\n\n\nif A[0]==B[2] and A[1]==B[1] and A[2]==B[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n#YES\u3068NO\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u3092Yes\u3001No\u306b\u306a\u3063\u3066\u3044\u305f\n", "c1 = input()\nc2 = input()\n\n# \u30de\u30b9\u76ee\u3092 180\u5ea6\u56de\u8ee2 \u3055\u305b\u305f\u3068\u304d\u3001\u5143\u306e\u30de\u30b9\u76ee\u3068\u4e00\u81f4\u3059\u308b\u306a\u3089 YES \u3092\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089 NO \u3092\u51fa\u529b\u305b\u3088\u3002\n\nif [c1[0], c1[1], c1[2]] == [c2[2], c2[1], c2[0]]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "li = list(input())\nli1 = list(input())\n\nif li[0] == li1[2] and li[1] == li1[1] and li[2] == li1[0]:\n    print('YES')\nelse:\n    print('NO')", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    #1 line 1 int\n     return int(sys.stdin.readline().rstrip())\ndef LI():\n    #1 line n int\n     return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    #1 line 1 string\n     return sys.stdin.readline().rstrip()\ndef LS():\n    #1 line n strings\n     return list(sys.stdin.readline().rstrip().split())\n\nC1=S()\nC2=S()\n\nif C1[0]==C2[2] and C1[1]==C2[1] and C1[2]==C2[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "C1 = input()\nC2 = input()\n\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print('YES')\nelse:\n    print('NO')", "Ci = input()\nCj = input()\n\nif Ci[0] == Cj[-1] and Ci[1] == Cj[-2] and Ci[2] == Cj[-3]:\n    print('YES')\nelse:\n    print('NO')", "s = str(input())\nt = str(input())\n\nif s[0] == t[2] and s[1] == t[1] and s[2] == t[0]:\n    result = 'YES'\nelse:\n    result = 'NO'\nprint(result)", "C=[list(input()) for _ in range(2)]\nflag=True\nfor i in range(2):\n    for j in range(3):\n        if C[i][j]!=C[1-i][2-j]:\n            flag=False\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "C1 = input()\nC2 = input()\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print('YES')\nelse:\n    print('NO')\n", "a = input()\nb = input()\nfor i in range(3):\n    if a[i] != b[-(i+1)]:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")", "x = input()\ny = input()\n\nif x[0] == y[2] and x[1] == y[1] and x[2] == y[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "#77\ndata1=list(input())\ndata2=list(input())\nif (data1[0]==data2[2] and data1[1]==data2[1] and data1[2]==data2[0]):\n    print('YES')\nelse:\n    print('NO')", "s1 = input()\ns2 = input()\n\nif s1 == s2[::-1]:\n    print('YES')\nelse:\n    print('NO')\n", "c1 = input()\nc2 = input()\nprint(\"YES\" if c1 == c2[::-1] else \"NO\")", "C1 = input()\nC2 = input()\n\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c1 = input()\nc2 = input()\n\nif c1[0] == c2[-1] and c1[1] == c2[-2] and c1[2] == c2[-3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import math\nb=input()\nc=[]\nfor i in range(len(b)):\n\tc.append(b[i])\n#a = list(map(int,input().split()))\n#b = list(map(int,input().split()))\n#s=int(input())\n\nf=input()\nt=[]\nfor i in range(len(f)):\n\tt.append(f[i])\nd=[]\nfor i in range(len(c)):\n\td.append(c[-(i+1)])\n\t\nif d==t:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "a=input()\nb=input()\nif [a[2],a[1],a[0]]==[b[0],b[1],b[2]]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "\nC1 =str(input())\nC2 =str(input())\n\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print('YES')\n\nelse:\n    print('NO')\n\n", "def iroha():\n    lists = [input() for _ in range(2)]\n    reversed_text = ''.join(list(reversed(lists[0])))\n    print((\"YES\" if reversed_text == lists[1] else \"NO\"))\n\ndef __starting_point():\n    iroha()\n\n\n__starting_point()", "c1, c2 = [input() for _ in range(2)]\n\n\ndef answer(c1: str, c2: str) -> str:\n    if c1[0] == c2[2] and c1[2] == c2[0] and c1[1] == c2[1]:\n        return 'YES'\n    else:\n        return 'NO'\n\nprint(answer(c1, c2))", "C1 = input()\nC2 = input()\nif C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n    print('YES')\nelse:\n    print('NO')\n", "with open(0) as f:\n    C = ''.join(f.read().split())\nprint('YES' if C == C[::-1] else 'NO')", "word1, word2 = [input() for i in range(2)]\nif word1[0] == word2[2] and word1[1] == word2[1] and word1[2] == word2[0]:\n    print('YES')\nelse:\n    print('NO')", "C1, C2 = [input() for i in range(2)]\nprint('YES' if C1 == C2[::-1] else 'NO')", "import bisect,collections,copy,heapq,itertools,math,string\nimport sys\ndef I():\n    # 1 line 1 int\n    return int(sys.stdin.readline().rstrip())\ndef LI():\n    # 1 line n ints\n    return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S():\n    # 1 line 1 string\n    return sys.stdin.readline().rstrip()\ndef LS():\n    # 1 line n strings\n    return list(sys.stdin.readline().rstrip().split())\n\nC1 = S()\nC2 = S()\n\nif C1[::-1] == C2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "def atc_077a(input_value: str) -> str:\n    C1 = input_value[0]\n    C2 = input_value[1]\n\n    if C1[0] == C2[2] and C1[1] == C2[1] and C1[2] == C2[0]:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\nC1 = input()\nC2 = input()\nprint(atc_077a([C1, C2]))", "s = input()\nt = input()\nprint(\"YES\" if s==t[::-1] and t==s[::-1] else \"NO\")"]