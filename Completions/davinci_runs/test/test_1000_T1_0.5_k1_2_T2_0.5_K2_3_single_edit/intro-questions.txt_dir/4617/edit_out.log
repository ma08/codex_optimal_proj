2022-04-16 00:28:47.803812 num operations 1
2022-04-16 00:28:47.803831 size on input set 1
2022-04-16 00:28:50.833417 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 1,
      "text": "\n\n# --- Constants ---\nYES = 'YES'\nNO = 'NO'\n\n# --- Functions ---\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# --- Input and Output ---\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][0] and grid[0][1] == grid[1][1] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"
    }
  ],
  "created": 1650068927,
  "object": "edit"
}
2022-04-16 00:28:50.833647 fix syntax errors 3 ["\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# --- Constants ---\nYES = 'YES'\nNO = 'NO'\n\n# --- Functions ---\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# --- Input and Output ---\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n", "\n\n# -----Constants-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][0] and grid[0][1] == grid[1][1] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"]
2022-04-16 00:28:50.833677 size on output set 3
2022-04-16 00:28:50.833689 num operations 1
2022-04-16 00:28:50.833694 size on input set 1
2022-04-16 00:28:52.737821 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\nc1 = input().strip()\nc2 = input().strip()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650068930,
  "object": "edit"
}
2022-04-16 00:28:52.738000 fix syntax errors 3 ['\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', '\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n', '\n\nc1 = input().strip()\nc2 = input().strip()\n\nif c1[::-1] == c2:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-16 00:28:52.738058 size on output set 2
