2022-04-16 02:13:40.765746 num operations 1
2022-04-16 02:13:40.765765 size on input set 1
2022-04-16 02:13:49.160317 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    # Print results\n    if len(missing) == 0:\n        print(\"good job\")\n    else:\n        for num in missing:\n            print(num)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nprint(\"hello\")\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    # Print results\n    if len(missing) == 0:\n        print(\"good job\")\n    else:\n        for num in missing:\n            print(num)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075220,
  "object": "edit"
}
2022-04-16 02:13:49.160543 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    # Print results\n    if len(missing) == 0:\n        print("good job")\n    else:\n        for num in missing:\n            print(num)\n\nif __name__ == \'__main__\':\n    main()\n', '\nprint("hello")\n', '\nimport sys\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    # Print results\n    if len(missing) == 0:\n        print("good job")\n    else:\n        for num in missing:\n            print(num)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:13:49.160576 size on output set 3
2022-04-16 02:13:49.160586 num operations 1
2022-04-16 02:13:49.160592 size on input set 1
2022-04-16 02:13:54.130618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n - 1):\n        if recited[i + 1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1] + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1: print(1)\n    for i in range(n - 1):\n        if recited[i + 1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200: print(recited[-1] + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n - 1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1] + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075229,
  "object": "edit"
}
2022-04-16 02:13:54.130800 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n - 1):\n        if recited[i + 1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1] + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1: print(1)\n    for i in range(n - 1):\n        if recited[i + 1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200: print(recited[-1] + 1)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n - 1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1] + 1)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:13:54.130831 size on output set 3
2022-04-16 02:13:54.130853 num operations 1
2022-04-16 02:13:54.130859 size on input set 1
2022-04-16 02:13:56.952663 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[len(recited) - 1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        print(\" \".join(map(str, missing)))\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1]+1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075234,
  "object": "edit"
}
2022-04-16 02:13:56.952901 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[len(recited) - 1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        print(" ".join(map(str, missing)))\n    else:\n        print("good job")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1]+1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print("good job")\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print("good job")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:13:56.953033 size on output set 3
2022-04-16 02:13:56.953050 num operations 1
2022-04-16 02:13:56.953058 size on input set 1
2022-04-16 02:13:59.053540 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n-1]+1):\n        if x not in list:\n            print(x)\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n - 1] + 1):\n        if x not in list:\n            print(x)\n\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n-1]+1):\n        if x not in list:\n            print(x)\n\n\nmain()\n"
    }
  ],
  "created": 1650075236,
  "object": "edit"
}
2022-04-16 02:13:59.053727 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n-1]+1):\n        if x not in list:\n            print(x)\n\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n - 1] + 1):\n        if x not in list:\n            print(x)\n\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n-1]+1):\n        if x not in list:\n            print(x)\n\n\nmain()\n']
2022-04-16 02:13:59.053752 size on output set 2
2022-04-16 02:13:59.053761 num operations 1
2022-04-16 02:13:59.053766 size on input set 1
2022-04-16 02:14:01.167259 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nprint(low, high)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high + 1):\n    print(i)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x + 1\n    else:\n        low = x + 1\n        high = x + 1\n\nfor i in range(low, high+1):\n    print(i)\n"
    }
  ],
  "created": 1650075239,
  "object": "edit"
}
2022-04-16 02:14:01.167464 fix syntax errors 3 ['\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nprint(low, high)\n', '\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high + 1):\n    print(i)\n', '\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x + 1\n    else:\n        low = x + 1\n        high = x + 1\n\nfor i in range(low, high+1):\n    print(i)\n']
2022-04-16 02:14:01.167489 size on output set 3
2022-04-16 02:14:01.167499 num operations 1
2022-04-16 02:14:01.167505 size on input set 1
2022-04-16 02:14:06.388760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n = int(input())\n# recited = []\n#\n# for i in range(n):\n#     recited.append(int(input()))\n#\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         print(i)\n#\n# if len(recited) == recited[-1]:\n#     print(\"good job\")\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"good job\")\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"good job\")\n"
    }
  ],
  "created": 1650075241,
  "object": "edit"
}
2022-04-16 02:14:06.388955 fix syntax errors 3 ['\n#\n# n = int(input())\n# recited = []\n#\n# for i in range(n):\n#     recited.append(int(input()))\n#\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         print(i)\n#\n# if len(recited) == recited[-1]:\n#     print("good job")\n', '\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print("good job")\n', '\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print("good job")\n']
2022-04-16 02:14:06.388980 size on output set 2
2022-04-16 02:14:06.388989 num operations 1
2022-04-16 02:14:06.388994 size on input set 1
2022-04-16 02:14:43.553010 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print(\"good job\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nif len(l) == n:\n    for i in range(1,l[-1]+1):\n        if i not in l:\n            print(i)\nelse:\n    print(\"good job\")\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nprint(\"good job\")\n"
    }
  ],
  "created": 1650075246,
  "object": "edit"
}
2022-04-16 02:14:43.553274 fix syntax errors 3 ['\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print("good job")\n', '\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nif len(l) == n:\n    for i in range(1,l[-1]+1):\n        if i not in l:\n            print(i)\nelse:\n    print("good job")\n', '\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nprint("good job")\n']
2022-04-16 02:14:43.553304 size on output set 3
2022-04-16 02:14:43.553315 num operations 1
2022-04-16 02:14:43.553320 size on input set 1
2022-04-16 02:14:46.656272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = list(set(numbers))\n    if len(numbers) == numbers[-1] + 1:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1] + 1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == list(numbers)[-1]:\n        print(\"good job\")\n    else:\n        for i in range(1,list(numbers)[-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == numbers[-1]+1:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075283,
  "object": "edit"
}
2022-04-16 02:14:46.656487 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = list(set(numbers))\n    if len(numbers) == numbers[-1] + 1:\n        print("good job")\n    else:\n        for i in range(1,numbers[-1] + 1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == list(numbers)[-1]:\n        print("good job")\n    else:\n        for i in range(1,list(numbers)[-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == numbers[-1]+1:\n        print("good job")\n    else:\n        for i in range(1,numbers[-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 02:14:46.656519 size on output set 3
