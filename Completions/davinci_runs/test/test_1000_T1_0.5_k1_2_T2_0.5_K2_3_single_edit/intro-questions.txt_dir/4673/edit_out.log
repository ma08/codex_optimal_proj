2022-04-16 00:38:50.062098 num operations 1
2022-04-16 00:38:50.062117 size on input set 1
2022-04-16 00:38:52.144167 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/bin/python3\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n') \n"
    },
    {
      "index": 2,
      "text": "from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    }
  ],
  "created": 1650069530,
  "object": "edit"
}
2022-04-16 00:38:52.144404 fix syntax errors 3 ['#!/bin/python3\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\') \n', 'from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n']
2022-04-16 00:38:52.144435 size on output set 3
2022-04-16 00:38:52.144445 num operations 1
2022-04-16 00:38:52.144450 size on input set 1
2022-04-16 00:38:54.842344 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1] \n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 2,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #sorts by age\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    }
  ],
  "created": 1650069532,
  "object": "edit"
}
2022-04-16 00:38:54.842532 fix syntax errors 3 ['\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1] \n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #sorts by age\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n']
2022-04-16 00:38:54.842561 size on output set 3
