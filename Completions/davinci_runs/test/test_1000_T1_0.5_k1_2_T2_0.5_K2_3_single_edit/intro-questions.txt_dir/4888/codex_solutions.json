["\n\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)", "\n\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)", "\n\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)", "\n\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)", "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()", "\n\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)", "\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)", "\n\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()"]