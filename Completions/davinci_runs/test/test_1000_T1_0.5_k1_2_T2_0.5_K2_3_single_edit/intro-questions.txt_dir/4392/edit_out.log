2022-04-15 23:49:56.207922 num operations 1
2022-04-15 23:49:56.207935 size on input set 1
2022-04-15 23:49:59.885192 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    k = set()\n    for j in range(m):\n        k.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in k:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    k = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            k = False\n            break\n    if k:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = set()\n    for j in range(m):\n        s.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in s:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    s = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            s = False\n            break\n    if s:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = set()\n    for j in range(m):\n        s.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in s:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    s = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            s = False\n            break\n    if s:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    }
  ],
  "created": 1650066596,
  "object": "edit"
}
2022-04-15 23:49:59.885427 fix syntax errors 3 ['\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    k = set()\n    for j in range(m):\n        k.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in k:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    k = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            k = False\n            break\n    if k:\n        print("YES")\n    else:\n        print("NO")\n', '\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = set()\n    for j in range(m):\n        s.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in s:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    s = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            s = False\n            break\n    if s:\n        print("YES")\n    else:\n        print("NO")\n', '\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    s = set()\n    for j in range(m):\n        s.add(p[j] - 1)\n    for j in range(n - 1):\n        if j in s:\n            if a[j] > a[j + 1]:\n                a[j], a[j + 1] = a[j + 1], a[j]\n    s = True\n    for j in range(n - 1):\n        if a[j] > a[j + 1]:\n            s = False\n            break\n    if s:\n        print("YES")\n    else:\n        print("NO")\n']
2022-04-15 23:49:59.885460 size on output set 2
2022-04-15 23:49:59.885471 num operations 1
2022-04-15 23:49:59.885476 size on input set 1
2022-04-15 23:50:11.183054 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print(\"YES\" if all(a[i] <= a[i + 1] for i in range(n - 1)) else \"NO\") \n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print(\"YES\" if all(a[i] <= a[i + 1] for i in range(n - 1)) else \"NO\")\n\n\n# SOLUTION\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print(\"YES\" if all(a[i] <= a[i + 1] for i in range(n - 1)) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/minimum-swaps-2/problem\nimport math\nimport os\nimport random\nimport re\nimport sys\n# Complete the minimumSwaps function below.\ndef minimumSwaps(arr):\n    swaps = 0\n    for i in range(len(arr)):\n        while arr[i] != i + 1:\n            arr[arr[i] - 1], arr[i] = arr[i], arr[arr[i] - 1]\n            swaps += 1\n    return swaps\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    res = minimumSwaps(arr)\n    fptr.write(str(res) + '\\n')\n    fptr.close()\n"
    }
  ],
  "created": 1650066599,
  "object": "edit"
}
2022-04-15 23:50:11.183250 fix syntax errors 3 ['\n\n# SOLUTION\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print("YES" if all(a[i] <= a[i + 1] for i in range(n - 1)) else "NO") \n', '\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print("YES" if all(a[i] <= a[i + 1] for i in range(n - 1)) else "NO")\n\n\n# SOLUTION\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n\n    # if we can sort the array, then we can only swap the adjacent elements\n    # but we can swap them any number of times\n    # so we can sort the array in 2 steps:\n    # 1. sort the array\n    # 2. swap the adjacent elements in p\n    # if we can sort the array, then we can swap the adjacent elements in p\n    # if we can swap the adjacent elements in p, then we can sort the array\n    a.sort()\n    for i in range(m - 1):\n        if p[i] + 1 == p[i + 1]:\n            a[p[i]], a[p[i] + 1] = a[p[i] + 1], a[p[i]]\n    print("YES" if all(a[i] <= a[i + 1] for i in range(n - 1)) else "NO")\n', "\n#!/bin/python3\n# https://www.hackerrank.com/challenges/minimum-swaps-2/problem\nimport math\nimport os\nimport random\nimport re\nimport sys\n# Complete the minimumSwaps function below.\ndef minimumSwaps(arr):\n    swaps = 0\n    for i in range(len(arr)):\n        while arr[i] != i + 1:\n            arr[arr[i] - 1], arr[i] = arr[i], arr[arr[i] - 1]\n            swaps += 1\n    return swaps\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    res = minimumSwaps(arr)\n    fptr.write(str(res) + '\\n')\n    fptr.close()\n"]
2022-04-15 23:50:11.183403 size on output set 3
