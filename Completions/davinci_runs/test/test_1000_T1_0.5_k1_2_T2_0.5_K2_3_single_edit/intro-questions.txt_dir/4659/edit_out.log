2022-04-16 00:35:55.849448 num operations 1
2022-04-16 00:35:55.849466 size on input set 1
2022-04-16 00:35:57.352701 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n"
    },
    {
      "index": 1,
      "text": "from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n"
    },
    {
      "index": 2,
      "text": "from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n"
    }
  ],
  "created": 1650069355,
  "object": "edit"
}
2022-04-16 00:35:57.353034 fix syntax errors 3 ['from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n', 'from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n', 'from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        res = [[1]]\n        for i in range(1, numRows):\n            res.append([])\n            for j in range(i+1):\n                if j == 0 or j == i:\n                    res[i].append(1)\n                else:\n                    res[i].append(res[i-1][j-1] + res[i-1][j])\n        return res\n']
2022-04-16 00:35:57.353079 size on output set 1
2022-04-16 00:35:57.353090 num operations 1
2022-04-16 00:35:57.353095 size on input set 1
2022-04-16 00:36:00.226311 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n# @Time    : 2020/3/3 14:21\n# @Author  : Durat\n# @Email   : durant.zeng@sunvalley.com.cn\n# @File    : generate.py\n# @Software: PyCharm\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jan 16 11:49:24 2020\n@author: yuxuan\n\"\"\"\nfrom typing import List\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n"
    },
    {
      "index": 2,
      "text": "from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n"
    }
  ],
  "created": 1650069357,
  "object": "edit"
}
2022-04-16 00:36:00.226599 fix syntax errors 3 ['#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n# @Time    : 2020/3/3 14:21\n# @Author  : Durat\n# @Email   : durant.zeng@sunvalley.com.cn\n# @File    : generate.py\n# @Software: PyCharm\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Jan 16 11:49:24 2020\n@author: yuxuan\n"""\nfrom typing import List\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n', 'from typing import List\n\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        if numRows == 0:\n            return []\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1,1]]\n        res = [[1], [1,1]]\n        for i in range(2, numRows):\n            tmp = [1]\n            for j in range(1, i):\n                tmp.append(res[i-1][j-1] + res[i-1][j])\n            tmp.append(1)\n            res.append(tmp)\n        return res\n']
2022-04-16 00:36:00.226641 size on output set 3
