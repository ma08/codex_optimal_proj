2022-04-16 00:01:50.168909 num operations 1
2022-04-16 00:01:50.168919 size on input set 1
2022-04-16 00:01:56.805320 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [-1] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (2 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n)\n    print(ans)\n\ndef update(seg_tree, i, x, k, n):\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [-1] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (4 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n)\n    print(ans)\n\n\ndef update(seg_tree, i, x, k, n):\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [0] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (4 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n + 1)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n + 1)\n    print(ans)\n\ndef update(seg_tree, i, x, k, n):  # i \u756a\u76ee\u306e\u8981\u7d20\u306b x \u3092\u52a0\u3048\u308b\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):  # [i, r) \u306e\u548c\u3092\u6c42\u3081\u308b\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650067310,
  "object": "edit"
}
2022-04-16 00:01:56.805565 fix syntax errors 3 ["\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [-1] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (2 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n)\n    print(ans)\n\ndef update(seg_tree, i, x, k, n):\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [-1] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (4 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n)\n    print(ans)\n\n\ndef update(seg_tree, i, x, k, n):\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_inv = [0] * (n + 1)\n    for i in range(n):\n        p_inv[p[i]] = i\n    seg_tree = [0] * (4 * n)\n    ans = 0\n    for i in range(n):\n        ans += i - get_sum(seg_tree, p_inv[i + 1] + 1, 0, 0, n + 1)\n        update(seg_tree, p_inv[i + 1] + 1, 1, 0, n + 1)\n    print(ans)\n\ndef update(seg_tree, i, x, k, n):  # i 番目の要素に x を加える\n    seg_tree[k] += x\n    if n == 1:\n        return\n    l, r = k * 2 + 1, k * 2 + 2\n    m = n // 2\n    if i < m:\n        update(seg_tree, i, x, l, m)\n    else:\n        update(seg_tree, i - m, x, r, n - m)\n\ndef get_sum(seg_tree, i, k, l, r):  # [i, r) の和を求める\n    if r <= i:\n        return seg_tree[k]\n    if i <= l:\n        return 0\n    m = (l + r) // 2\n    return get_sum(seg_tree, i, 2 * k + 1, l, m) + get_sum(seg_tree, i, 2 * k + 2, m, r)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:01:56.805622 size on output set 3
2022-04-16 00:01:56.805635 num operations 1
2022-04-16 00:01:56.805639 size on input set 1
2022-04-16 00:01:59.503947 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    P = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline()\n    N = int(input)\n    P = [int(i) for i in input.split()]\n    ans = 0\n    for i in range(0, N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    P = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(0, N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650067316,
  "object": "edit"
}
2022-04-16 00:01:59.504134 fix syntax errors 3 ["\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    P = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline()\n    N = int(input)\n    P = [int(i) for i in input.split()]\n    ans = 0\n    for i in range(0, N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    P = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(0, N):\n        if P[i] == i + 1:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:01:59.504161 size on output set 3
