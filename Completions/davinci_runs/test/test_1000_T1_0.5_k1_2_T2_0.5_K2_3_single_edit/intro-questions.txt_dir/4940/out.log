2022-04-09 23:58:55.614536 """
Sean’s Swathers makes custom swathers (equipment used to harvest grain). All swathers go through the same basic stages in their construction: for example they all need to have a cutting bar, a grain belt, and a reel fitted. However, these components can be customized based on the buyer’s needs, so these various stages may take different amounts of time between different swathers. 

$N$ swathers have been ordered and there are $M$ stages in the manufacturing process. The swathers will each go through the same sequence of stages.

In particular, the processing occurs as follows: For each swather $i$ and each stage $j$, it takes $P_{i,j}$ units of time to complete stage $j$ for swather $i$. The workers at each stage may only work on one swather at a time. At the start of the day all swather orders are ready to be processed by the first stage. At any point in the process, if the workers at stage $j$ are idle and there are swathers waiting to be processed at this stage then the workers will pick the swather that has the lowest label (they are labelled from $1$ to $N$). Note that the work on a stage $j$ can only be started after the work on the stage $j-1$ is completed.

Determine the time each swather is completed.

-----Input-----
There is only one test case in each file. It begins with a single line containing $N$ and $M$ ($1 \leq N,M \leq 1000$), the number of swathers and stages (respectively). Following this are $N$ lines, each with $M$ integers. The $j$’th integer of the $i$’th line is $P_{i,j}$, giving the amount of time it will take for the workers at stage $j$ to complete swather $i$ ($1 \leq P_{i,j} \leq 10^6$).

-----Output-----
Output a single line containing $N$ integers $T_1~ T_2~ \ldots ~ T_ n$ with a single space between consecutive integers. These should be such that stage $M$ for swather $i$ is completed at time $T_ i$.

-----Examples-----
Sample Input:
2 3
1 2 3
3 2 1
Sample Output:
6 7
"""
2022-04-09 23:58:55.614571 --------------------------
2022-04-09 23:59:32.551518 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    swathers, stages = [int(x) for x in input().split()]\n    times = []\n    for i in range(swathers):\n        times.append([int(x) for x in input().split()])\n    times = sorted(times)\n    for i in range(1,len(times)):\n        for j in range(stages):\n            times[i][j] += times[i-1][j]\n    for i in range(swathers):\n        print(times[i][stages-1], end=' ')\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    P = []\n    for _ in range(N):\n        P.append(list(map(int, input().split())))\n    # print(P)\n    \"\"\"\n    P[i][j] = time for stage j, swather i\n    T[i][j] = time for stage j, swather i\n    \"\"\"\n    T = [[0] * M] * N\n    # print(T)\n    for i in range(N):\n        for j in range(M):\n            if j == 0:\n                T[i][j] = P[i][j]\n            else:\n                T[i][j] = T[i][j-1] + P[i][j]\n    # print(T)\n    T.sort()\n    # print(T)\n    ans = []\n    for i in range(N):\n        ans.append(T[i][-1])\n    print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    p = []\n    for i in range(N):\n        p.append(list(map(int, sys.stdin.readline().split())))\n\n    # the time a swather is completed\n    t = [0] * N\n\n    # the time stage j is completed\n    s = [0] * M\n\n    # the number of swathers completed at stage j\n    c = [0] * M\n\n    # the number of swathers completed\n    d = 0\n\n    # the swathers completed at stage j\n    e = [[] for i in range(M)]\n\n    for i in range(N):\n        for j in range(M):\n            if i == 0:\n                s[j] = p[0][j]\n            else:\n                if j == 0:\n                    s[j] = s[j] + p[i][j]\n                elif c[j-1] == 0:\n                    s[j] = s[j] + p[i][j]\n                else:\n                    s[j] = max(s[j], e[j-1][0]) + p[i][j]\n\n            if j == M-1:\n                t[i] = s[j]\n            c[j] += 1\n            e[j].append(t[i])\n            if j > 0:\n                e[j-1].pop(0)\n            d += 1\n\n    print(' '.join(map(str, t)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(i) for i in sys.stdin.readline().split()]\n    times = [[int(i) for i in sys.stdin.readline().split()] for i in range(n)]\n    swathers = [[i,j] for i in range(n) for j in range(m)]\n    swathers = sorted(swathers, key=lambda x: times[x[0]][x[1]])\n    completed = [0]*n\n    while len(swathers) > 0:\n        swather = swathers.pop(0)\n        if swather[1] == 0:\n            completed[swather[0]] = times[swather[0]][0]\n        else:\n            completed[swather[0]] = max(completed[swather[0]], completed[swather[0]-1]) + times[swather[0]][swather[1]]\n    print(' '.join([str(i) for i in completed]))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    times = []\n    for i in range(N):\n        times.append(list(map(int, sys.stdin.readline().split())))\n    times = sorted(times, key=lambda x: x[0])\n    for i in range(1, M):\n        for j in range(N):\n            times[j][i] += times[j][i-1]\n        times = sorted(times, key=lambda x: x[i])\n    print(\" \".join(map(str, [times[i][-1] for i in range(N)])))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    p = [list(map(int, input().split())) for _ in range(n)]\n    t = [0] * n\n    for j in range(m):\n        for i in range(n):\n            if t[i] < max(t):\n                t[i] = max(t)\n            t[i] += p[i][j]\n    print(*t)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\np = []\nfor i in range(n):\n    p.append(list(map(int, input().split())))\n\nt = [0] * n\n\nfor j in range(m):\n    for i in range(n):\n        if j == 0:\n            t[i] = p[i][j]\n        else:\n            t[i] += p[i][j]\n        for k in range(n):\n            if k != i and t[k] + p[k][j] > t[i]:\n                t[k] = t[i] - p[k][j]\n\nprint(\" \".join(map(str, t)))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN, M = [int(x) for x in input().split()]\n\ntimes = []\nfor i in range(N):\n    times.append([int(x) for x in input().split()])\n\n#print(times)\n\n# sort the times by the first stage\ntimes.sort(key = lambda x: x[0])\n\n#print(times)\n\n# sort the times by the second stage\ntimes.sort(key = lambda x: x[1])\n\n#print(times)\n\n# sort the times by the third stage\ntimes.sort(key = lambda x: x[2])\n\n#print(times)\n\n# now we can just add up the times\ntotal_times = []\nfor i in range(N):\n    total_time = 0\n    for j in range(M):\n        total_time += times[i][j]\n    total_times.append(total_time)\n\nfor i in range(N):\n    print(total_times[i], end=\" \")\nprint()"
    }
  ],
  "created": 1649563136,
  "id": "cmpl-4vJ0ygV3RxkO2PdDiZpH0m173Mom4",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:59:32.551954 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    swathers, stages = [int(x) for x in input().split()]\n    times = []\n    for i in range(swathers):\n        times.append([int(x) for x in input().split()])\n    times = sorted(times)\n    for i in range(1,len(times)):\n        for j in range(stages):\n            times[i][j] += times[i-1][j]\n    for i in range(swathers):\n        print(times[i][stages-1], end=' ')\n\nmain()"
}
2022-04-09 23:59:32.552130 REASON stop
2022-04-09 23:59:32.553173 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.553219 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    P = []\n    for _ in range(N):\n        P.append(list(map(int, input().split())))\n    # print(P)\n    \"\"\"\n    P[i][j] = time for stage j, swather i\n    T[i][j] = time for stage j, swather i\n    \"\"\"\n    T = [[0] * M] * N\n    # print(T)\n    for i in range(N):\n        for j in range(M):\n            if j == 0:\n                T[i][j] = P[i][j]\n            else:\n                T[i][j] = T[i][j-1] + P[i][j]\n    # print(T)\n    T.sort()\n    # print(T)\n    ans = []\n    for i in range(N):\n        ans.append(T[i][-1])\n    print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:59:32.553293 REASON stop
2022-04-09 23:59:32.553943 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.553995 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    p = []\n    for i in range(N):\n        p.append(list(map(int, sys.stdin.readline().split())))\n\n    # the time a swather is completed\n    t = [0] * N\n\n    # the time stage j is completed\n    s = [0] * M\n\n    # the number of swathers completed at stage j\n    c = [0] * M\n\n    # the number of swathers completed\n    d = 0\n\n    # the swathers completed at stage j\n    e = [[] for i in range(M)]\n\n    for i in range(N):\n        for j in range(M):\n            if i == 0:\n                s[j] = p[0][j]\n            else:\n                if j == 0:\n                    s[j] = s[j] + p[i][j]\n                elif c[j-1] == 0:\n                    s[j] = s[j] + p[i][j]\n                else:\n                    s[j] = max(s[j], e[j-1][0]) + p[i][j]\n\n            if j == M-1:\n                t[i] = s[j]\n            c[j] += 1\n            e[j].append(t[i])\n            if j > 0:\n                e[j-1].pop(0)\n            d += 1\n\n    print(' '.join(map(str, t)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:59:32.554066 REASON stop
2022-04-09 23:59:32.554564 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.554622 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(i) for i in sys.stdin.readline().split()]\n    times = [[int(i) for i in sys.stdin.readline().split()] for i in range(n)]\n    swathers = [[i,j] for i in range(n) for j in range(m)]\n    swathers = sorted(swathers, key=lambda x: times[x[0]][x[1]])\n    completed = [0]*n\n    while len(swathers) > 0:\n        swather = swathers.pop(0)\n        if swather[1] == 0:\n            completed[swather[0]] = times[swather[0]][0]\n        else:\n            completed[swather[0]] = max(completed[swather[0]], completed[swather[0]-1]) + times[swather[0]][swather[1]]\n    print(' '.join([str(i) for i in completed]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:59:32.554688 REASON stop
2022-04-09 23:59:32.554937 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.554953 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    times = []\n    for i in range(N):\n        times.append(list(map(int, sys.stdin.readline().split())))\n    times = sorted(times, key=lambda x: x[0])\n    for i in range(1, M):\n        for j in range(N):\n            times[j][i] += times[j][i-1]\n        times = sorted(times, key=lambda x: x[i])\n    print(\" \".join(map(str, [times[i][-1] for i in range(N)])))\n\nmain()"
}
2022-04-09 23:59:32.554998 REASON stop
2022-04-09 23:59:32.555150 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.555159 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    p = [list(map(int, input().split())) for _ in range(n)]\n    t = [0] * n\n    for j in range(m):\n        for i in range(n):\n            if t[i] < max(t):\n                t[i] = max(t)\n            t[i] += p[i][j]\n    print(*t)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:59:32.555186 REASON stop
2022-04-09 23:59:32.555315 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.555322 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\np = []\nfor i in range(n):\n    p.append(list(map(int, input().split())))\n\nt = [0] * n\n\nfor j in range(m):\n    for i in range(n):\n        if j == 0:\n            t[i] = p[i][j]\n        else:\n            t[i] += p[i][j]\n        for k in range(n):\n            if k != i and t[k] + p[k][j] > t[i]:\n                t[k] = t[i] - p[k][j]\n\nprint(\" \".join(map(str, t)))"
}
2022-04-09 23:59:32.555347 REASON stop
2022-04-09 23:59:32.555932 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
2022-04-09 23:59:32.555972 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN, M = [int(x) for x in input().split()]\n\ntimes = []\nfor i in range(N):\n    times.append([int(x) for x in input().split()])\n\n#print(times)\n\n# sort the times by the first stage\ntimes.sort(key = lambda x: x[0])\n\n#print(times)\n\n# sort the times by the second stage\ntimes.sort(key = lambda x: x[1])\n\n#print(times)\n\n# sort the times by the third stage\ntimes.sort(key = lambda x: x[2])\n\n#print(times)\n\n# now we can just add up the times\ntotal_times = []\nfor i in range(N):\n    total_time = 0\n    for j in range(M):\n        total_time += times[i][j]\n    total_times.append(total_time)\n\nfor i in range(N):\n    print(total_times[i], end=\" \")\nprint()"
}
2022-04-09 23:59:32.556062 REASON stop
2022-04-09 23:59:32.556470 test/intro-questions.txt_dir/4940/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4940/solutions.json'
