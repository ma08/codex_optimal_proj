["\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n", "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(x) for x in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "\n\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    d = int(input())\n    e = int(input())\n    k = int(input())\n    cnt = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                for l in range(n):\n                    for m in range(n):\n                        if i+j+k+l+m == n:\n                            if (i*a + j*b + k*c + l*d + m*e) <= k:\n                                cnt += 1\n    print(cnt)\n\nmain()\n", "\n\ndef main():\n    #Get inputs\n    x1, y1 = map(int, input().split()) #First point\n    x2, y2 = map(int, input().split()) #Second point\n    x3, y3 = map(int, input().split()) #Third point\n\n    #Calculate the final X and Y values\n    x4 = 0 #Final X value\n    y4 = 0 #Final Y value\n\n    if x1 == x2:\n        x4 = x3 #If the first X value is equal to the third X value, then the final X value is the second X value\n    elif x1 == x3:\n        x4 = x2 #If the first X value is equal to the second X value, then the final X value is the third X value\n    else:\n        x4 = x1 #If the second X value is equal to the third X value, then the final X value is the first X value\n\n    if y1 == y2:\n        y4 = y3 #If the first Y value is equal to the second Y value, then the final Y value is the third Y value\n    elif y1 == y3:\n        y4 = y2 #If the first Y value is equal to the third Y value, then the final Y value is the second Y value\n    else:\n        y4 = y1 #If the second Y value is equal to the third Y value, then the final Y value is the first Y value\n\n    #Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\nx1, y1 = input().split()\nx2, y2 = input().split()\nx3, y3 = input().split()\n\nif x1 == x2:\n    x4 = int(x3)\nelif x1 == x3:\n    x4 = int(x2)\nelse:\n    x4 = int(x1)\n\nif y1 == y2:\n    y4 = int(y3)\nelif y1 == y3:\n    y4 = int(y2)\nelse:\n    y4 = int(y1)\n\nprint(x4, y4)\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0] if points[0][0] != points[2][0] else points[1][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1] if points[0][1] != points[2][1] else points[1][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n", "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point.\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4 = x3\n    y4 = y2\n\n    if x4 == x1 and y4 == y1:\n        x4 = x2\n        y4 = y3\n    elif x4 == x2 and y4 == y2:\n        x4 = x1\n        y4 = y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point\n            print(points[i][0], points[3-i-j][1], sep=\" \")\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point\n            print(points[3-i-j][0], points[i][1], sep=\" \")\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], sep=\" \")\n", "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return int(coords[0]), int(coords[1])\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point\n            print(points[i][0], points[3-i-j][1], end=\" \")\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point\n            print(points[3-i-j][0], points[i][1], end=\" \")\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], end=\" \")\n", "\n\ndef main():\n    #Get inputs\n    x1, y1 = map(int, input().split()) # Get the coordinates of the first point\n    x2, y2 = map(int, input().split()) # Get the coordinates of the second point\n    x3, y3 = map(int, input().split()) # Get the coordinates of the third point\n\n    #Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2: # If the x values of the first and second point are equal\n        x4 = x3\n    elif x1 == x3: # If the x values of the first and third point are equal\n        x4 = x2\n    else: # If the x values of the second and third point are equal\n        x4 = x1\n\n    if y1 == y2: # If the y values of the first and second point are equal\n        y4 = y3\n    elif y1 == y3: # If the y values of the first and third point are equal\n        y4 = y2\n    else: # If the y values of the second and third point are equal\n        y4 = y1\n\n    #Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n", "\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 2:\n# If we haven't found the fourth point, that means the points are not collinear\n# The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\nprint(points[0][0], points[2][1])\n", "\n\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop(), sep=' ')\n    else:\n        print(x.pop(), y.pop(), sep=' ')\n\nmain()\n", "\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point.\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Read input\nx1, y1, x2, y2, x3, y3 = [int(i) for i in input().split()]\n\n# Find the missing point\nif x1 == x2:\n    x = x3\nelse:\n    x = x1\n\nif y1 == y2:\n    y = y3\nelse:\n    y = y1\n\nprint(x, y)\n", "\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return [int(coords[0]), int(coords[1])]\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n", "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\nmain()\n"]