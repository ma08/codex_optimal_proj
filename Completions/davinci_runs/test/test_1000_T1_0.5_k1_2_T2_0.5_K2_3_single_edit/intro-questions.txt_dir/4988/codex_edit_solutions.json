["\n\ndef factorial(n):\n    if n == 1: return 1\n    else: return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for i in range(num_test_cases):\n        n = int(input())\n        print(\"%d\" % (factorial(n)))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N*factorial(N-1)\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input(\"\"))\n    for _ in range(num_test_cases):\n        n = int(input(\"\"))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        count += 1\nif count == 0:\n    print(0)\nelif count == 2:\n    print(1)\nelse:\n    print(-1)\n", "\n\ndef factorial(n):\n    return 1 if n == 0 else n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10 \n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#digit array\ndigits = [1]\n#last digit\nlast = 1\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(digits):\n\t\t#compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast = (last * (j+1)) % 10\n\t\t\tdigits.append(last)\n\t#print out the last digit\n\tprint(digits[N-1])\n", "import sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n", "\n\ndef last_digit(n):\n    f = [1,1,2,6,4,0,0,0,0,0]\n    if n < 10:\n        return f[n]\n    else: \n        a = last_digit(n//10)\n        b = last_digit(n%10)\n        return (a*b) % 10\n\n\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\n\nmain()\n", "\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\ndef last_digit(n):\n    return factorial(n) % 10\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8, 2]\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10 \n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8, 0]\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10])\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n) % 10)\n\nif __name__ == '__main__':\n    main()\n"]