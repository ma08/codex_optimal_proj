2022-04-16 02:33:38.668208 num operations 1
2022-04-16 02:33:38.668228 size on input set 1
2022-04-16 02:33:41.496612 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njon_aah = input(\"\")\ndoc_aah = input(\"\")\n\nif len(jon_aah) >= len(doc_aah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njon_aah = input(\"\")\ndoc_aah = input(\"\")\n\nif len(jon_aah) >= len(doc_aah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 2,
      "text": "\n\njon_snow = input()\ndoc_smith = input()\n\nif len(jon_snow) >= len(doc_smith):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1650076418,
  "object": "edit"
}
2022-04-16 02:33:41.496832 fix syntax errors 3 ['\n\njon_aah = input("")\ndoc_aah = input("")\n\nif len(jon_aah) >= len(doc_aah):\n    print("go")\nelse:\n    print("no")\n', '\n\njon_aah = input("")\ndoc_aah = input("")\n\nif len(jon_aah) >= len(doc_aah):\n    print("go")\nelse:\n    print("no")\n', '\n\njon_snow = input()\ndoc_smith = input()\n\nif len(jon_snow) >= len(doc_smith):\n    print("go")\nelse:\n    print("no")\n']
2022-04-16 02:33:41.496862 size on output set 2
2022-04-16 02:33:41.496902 num operations 1
2022-04-16 02:33:41.496907 size on input set 1
2022-04-16 02:33:43.788129 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njon = raw_input()\ndoc = raw_input()\n\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "jon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"hello\")\n"
    }
  ],
  "created": 1650076421,
  "object": "edit"
}
2022-04-16 02:33:43.788308 fix syntax errors 3 ['\n\njon = raw_input()\ndoc = raw_input()\n\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n', 'jon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n', '\nprint("hello")\n']
2022-04-16 02:33:43.788345 size on output set 3
2022-04-16 02:33:43.788355 num operations 1
2022-04-16 02:33:43.788360 size on input set 1
2022-04-16 02:33:46.143172 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"
    },
    {
      "index": 1,
      "text": "\njon = input()\nprint(jon)\ndoc = input()\nprint(doc)\n\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 2,
      "text": "\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"
    }
  ],
  "created": 1650076423,
  "object": "edit"
}
2022-04-16 02:33:46.143397 fix syntax errors 3 ["#!/usr/bin/python3\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print('go')\nelse:\n    print('no')\n", '\njon = input()\nprint(jon)\ndoc = input()\nprint(doc)\n\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n', "\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"]
2022-04-16 02:33:46.143430 size on output set 3
2022-04-16 02:33:46.143440 num operations 1
2022-04-16 02:33:46.143445 size on input set 1
2022-04-16 02:33:48.881027 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njm = input()\ndoc = input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"
    },
    {
      "index": 1,
      "text": "\n\njm = raw_input()\ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"
    },
    {
      "index": 2,
      "text": "\n\njm = raw_input()\ndoc = raw_input()\nprint jm\nprint doc\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n"
    }
  ],
  "created": 1650076426,
  "object": "edit"
}
2022-04-16 02:33:48.881208 fix syntax errors 3 ["\n\njm = input()\ndoc = input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n", "\n\njm = raw_input()\ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n", "\n\njm = raw_input()\ndoc = raw_input()\nprint jm\nprint doc\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n"]
2022-04-16 02:33:48.881228 size on output set 3
2022-04-16 02:33:48.881238 num operations 1
2022-04-16 02:33:48.881244 size on input set 1
2022-04-16 02:33:51.509585 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john)>=len(doctor):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    jon = input().strip()\n    doc = input().strip()\n    if len(jon) >= len(doc):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    jon = input().split()\n    doc = input().split()\n    if len(jon)>=len(doc) and len(jon)<=len(doc):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    }
  ],
  "created": 1650076428,
  "object": "edit"
}
2022-04-16 02:33:51.509774 fix syntax errors 3 ['\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john)>=len(doctor):\n        print("go")\n    else:\n        print("no")\n\nmain()\n', '\n\ndef main():\n    jon = input().strip()\n    doc = input().strip()\n    if len(jon) >= len(doc):\n        print("go")\n    else:\n        print("no")\n\nmain()\n', '\n\ndef main():\n    jon = input().split()\n    doc = input().split()\n    if len(jon)>=len(doc) and len(jon)<=len(doc):\n        print("go")\n    else:\n        print("no")\n\nmain()\n']
2022-04-16 02:33:51.509797 size on output set 3
