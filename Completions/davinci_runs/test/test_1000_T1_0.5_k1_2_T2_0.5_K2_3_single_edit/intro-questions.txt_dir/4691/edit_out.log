2022-04-16 00:41:00.910836 num operations 1
2022-04-16 00:41:00.910853 size on input set 1
2022-04-16 00:41:03.696563 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, \"x\", count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().strip().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, \"x\", str(count))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, \"x\", count)\n\nif __name__ == '__main__':\n\n    main()\n"
    }
  ],
  "created": 1650069661,
  "object": "edit"
}
2022-04-16 00:41:03.696803 fix syntax errors 3 ['#!/usr/bin/env python3\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, "x", count)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().strip().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, "x", str(count))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline())\n    verdicts = sys.stdin.read().split()\n    counts = collections.Counter(verdicts)\n    for verdict, count in counts.items():\n        print(verdict, "x", count)\n\nif __name__ == \'__main__\':\n\n    main()\n']
2022-04-16 00:41:03.696832 size on output set 3
2022-04-16 00:41:03.696843 num operations 1
2022-04-16 00:41:03.696850 size on input set 1
2022-04-16 00:41:08.825483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint(\"AC x {}\".format(cnt_dict[\"AC\"]) if \"AC\" in cnt_dict.keys() else \"AC x 0\")\nprint(\"WA x {}\".format(cnt_dict[\"WA\"]) if \"WA\" in cnt_dict.keys() else \"WA x 0\")\nprint(\"TLE x {}\".format(cnt_dict[\"TLE\"]) if \"TLE\" in cnt_dict.keys() else \"TLE x 0\")\nprint(\"RE x {}\".format(cnt_dict[\"RE\"]) if \"RE\" in cnt_dict.keys() else \"RE x 0\")\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import Counter  # import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))  # count the number of each character in the list\n\nprint(\"AC x {}\".format(cnt_dict[\"AC\"]))\nprint(\"WA x {}\".format(cnt_dict[\"WA\"]))\nprint(\"TLE x {}\".format(cnt_dict[\"TLE\"]))\nprint(\"RE x {}\".format(cnt_dict[\"RE\"]))\n"
    },
    {
      "index": 2,
      "text": "\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint(\"AC x {}\".format(cnt_dict[\"AC\"]))\nprint(\"WA x {}\".format(cnt_dict[\"WA\"]))\nprint(\"TLE x {}\".format(cnt_dict[\"TLE\"]))\nprint(\"RE x {}\".format(cnt_dict[\"RE\"]))\n"
    }
  ],
  "created": 1650069663,
  "object": "edit"
}
2022-04-16 00:41:08.825678 fix syntax errors 3 ['\n\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint("AC x {}".format(cnt_dict["AC"]) if "AC" in cnt_dict.keys() else "AC x 0")\nprint("WA x {}".format(cnt_dict["WA"]) if "WA" in cnt_dict.keys() else "WA x 0")\nprint("TLE x {}".format(cnt_dict["TLE"]) if "TLE" in cnt_dict.keys() else "TLE x 0")\nprint("RE x {}".format(cnt_dict["RE"]) if "RE" in cnt_dict.keys() else "RE x 0")\n', '\nfrom collections import Counter  # import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))  # count the number of each character in the list\n\nprint("AC x {}".format(cnt_dict["AC"]))\nprint("WA x {}".format(cnt_dict["WA"]))\nprint("TLE x {}".format(cnt_dict["TLE"]))\nprint("RE x {}".format(cnt_dict["RE"]))\n', '\nfrom collections import Counter\n\nN = int(input())\nS_list = []\nfor i in range(N):\n    S_list.append(input())\n\ncnt_dict = dict(Counter(S_list))\n\nprint("AC x {}".format(cnt_dict["AC"]))\nprint("WA x {}".format(cnt_dict["WA"]))\nprint("TLE x {}".format(cnt_dict["TLE"]))\nprint("RE x {}".format(cnt_dict["RE"]))\n']
2022-04-16 00:41:08.825718 size on output set 3
