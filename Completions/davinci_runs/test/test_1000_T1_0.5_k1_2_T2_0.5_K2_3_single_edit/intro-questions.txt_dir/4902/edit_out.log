2022-04-16 02:33:13.071523 num operations 1
2022-04-16 02:33:13.071542 size on input set 1
2022-04-16 02:33:16.648548 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076393,
  "object": "edit"
}
2022-04-16 02:33:16.648773 fix syntax errors 3 ["\n#\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:33:16.648804 size on output set 3
2022-04-16 02:33:16.648817 num operations 1
2022-04-16 02:33:16.648822 size on input set 1
2022-04-16 02:33:19.312865 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0] * 26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.read().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076396,
  "object": "edit"
}
2022-04-16 02:33:19.313084 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0] * 26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.read().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:33:19.313115 size on output set 3
2022-04-16 02:33:19.313126 num operations 1
2022-04-16 02:33:19.313130 size on input set 1
2022-04-16 02:33:25.462380 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\ns = stdin.readline().strip()\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\ns = stdin.readline().strip()\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\n#\n# from sys import stdin\n#\n# s = stdin.readline().strip()\n#\n# letters = [0]*26\n#\n# for c in s:\n#     letters[ord(c)-ord('a')] += 1\n#\n# num_odds = 0\n# for i in range(len(letters)):\n#     if letters[i] % 2 == 1:\n#         num_odds += 1\n#\n# if num_odds > 1:\n#     print(num_odds - 1)\n# else:\n#     print(0)\n"
    }
  ],
  "created": 1650076399,
  "object": "edit"
}
2022-04-16 02:33:25.462578 fix syntax errors 3 ["\n\nfrom sys import stdin\ns = stdin.readline().strip()\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "from sys import stdin\ns = stdin.readline().strip()\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n#\n# from sys import stdin\n#\n# s = stdin.readline().strip()\n#\n# letters = [0]*26\n#\n# for c in s:\n#     letters[ord(c)-ord('a')] += 1\n#\n# num_odds = 0\n# for i in range(len(letters)):\n#     if letters[i] % 2 == 1:\n#         num_odds += 1\n#\n# if num_odds > 1:\n#     print(num_odds - 1)\n# else:\n#     print(0)\n"]
2022-04-16 02:33:25.462606 size on output set 3
2022-04-16 02:33:25.462616 num operations 1
2022-04-16 02:33:25.462621 size on input set 1
2022-04-16 02:33:28.146741 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip().lower()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt > 1 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650076405,
  "object": "edit"
}
2022-04-16 02:33:28.147022 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip().lower()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt > 1 else 0)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:33:28.147052 size on output set 3
2022-04-16 02:33:28.147061 num operations 1
2022-04-16 02:33:28.147065 size on input set 1
2022-04-16 02:33:30.979835 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(sum(letter % 2 for letter in [0 for i in range(26)] for letter in input()))\n"
    },
    {
      "index": 1,
      "text": "\na = int(input())\nb = int(input())\nprint(a + b)\n"
    },
    {
      "index": 2,
      "text": "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(1 for letter in letters if letter % 2))\n"
    }
  ],
  "created": 1650076408,
  "object": "edit"
}
2022-04-16 02:33:30.980039 fix syntax errors 3 ['\nprint(sum(letter % 2 for letter in [0 for i in range(26)] for letter in input()))\n', '\na = int(input())\nb = int(input())\nprint(a + b)\n', "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(1 for letter in letters if letter % 2))\n"]
2022-04-16 02:33:30.980060 size on output set 3
2022-04-16 02:33:30.980079 num operations 1
2022-04-16 02:33:30.980085 size on input set 1
2022-04-16 02:33:33.047117 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 2,
      "text": "\n\n#Solution 1\n\n#!/usr/bin/python\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    }
  ],
  "created": 1650076411,
  "object": "edit"
}
2022-04-16 02:33:33.047360 fix syntax errors 3 ['\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n#Solution 1\n\n#!/usr/bin/python\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n']
2022-04-16 02:33:33.047396 size on output set 2
2022-04-16 02:33:33.047406 num operations 1
2022-04-16 02:33:33.047412 size on input set 1
2022-04-16 02:33:36.581993 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds) \n"
    },
    {
      "index": 2,
      "text": "\n\n#-----Solution-----\n#-----Solution-----\n\n\nimport sys\nimport re\n\nfor line in sys.stdin:\n    line = line.rstrip()\n    print(re.sub(r'(?<=[^\\s])[.,]', '', line))\n"
    }
  ],
  "created": 1650076413,
  "object": "edit"
}
2022-04-16 02:33:36.582173 fix syntax errors 3 ['\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds) \n', "\n\n#-----Solution-----\n#-----Solution-----\n\n\nimport sys\nimport re\n\nfor line in sys.stdin:\n    line = line.rstrip()\n    print(re.sub(r'(?<=[^\\s])[.,]', '', line))\n"]
2022-04-16 02:33:36.582200 size on output set 3
2022-04-16 02:33:36.582211 num operations 1
2022-04-16 02:33:36.582282 size on input set 1
2022-04-16 02:33:38.293061 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650076416,
  "object": "edit"
}
2022-04-16 02:33:38.293273 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:33:38.293304 size on output set 2
