["\n\ny, p = input().split()\n\nif y[-1] == 'e' and y[-2] not in 'aiou':\n    print(y + 'x' + p)\nelif y[-1] in 'aiou':\n    print(y[:-1] + 'ex' + p)\nelif y[-2:] == 'ex':\n    print(y + p)\n", "\n#gets input\nname, parent = input().split()\n\n#checks if name ends in e\nif name[-1] == \"e\":\n    print(name + \"x\" + parent)\n#checks if name ends in ex\nelif name[-2:] == \"ex\":\n    print(name + parent)\n#checks if name ends in vowel\nelif name[-1] in \"aiou\":\n    print(name[:-1] + \"ex\" + parent)\n#otherwise, adds ex\nelse:\n    print(name + \"ex\" + parent)\n", "\n\ndef main():\n    y, p = input().split()\n    if y[-1] == \"e\":\n        print(y + \"x\" + p)\n    elif y[-1] in \"aiou\":\n        print(y[:-1] + \"ex\" + p)\n    elif y[-2:] == \"ex\" and y[-3] not in \"aiou\":\n    else:\n        print(y + \"ex\" + p)\n        print(y + p)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ny, p = input().split(\" \")\n\nif y[-1] == \"e\":\n    print(y + \"x\" + p)\nelif y[-1] in \"aiou\":\n    print(y[:-1] + \"ex\" + p)\nelse:\n    print(y + p)\n", "\ny, p = input().split()\n\nif y[-1] == 'e':\n    print(y + 'x' + p)\nelif y[-1] in 'aiou':\n    print(y[:-1] + 'ex' + p)\nelif y[-2:] == 'ex':\n    print(y + p)\n", "\n\ny,p = input().split()\n\nif y[-1]=='e':\n    print(y+'x'+p)\nelif y[-1] in ['a','i','o','u']:\n    print(y[:-1]+'ex'+p)\nelif y[-2:]=='ex':\nelse:\n    print(y+'ex'+p)\n    print(y+p)\n", "\n#\n#gets input\nname, parent = input().split()\n\n#checks if name ends in e\nif name[-1] == \"e\":\n    print(name + \"x\" + parent)\n#checks if name ends in ex\nelif name[-2:] == \"ex\":\n    print(name + parent)\n#checks if name ends in vowel\nelif name[-1] in \"aiou\":\n    print(name[:-1] + \"ex\" + parent)\n#otherwise, adds ex\nelse:\n    print(name + \"ex\" + parent)\n", "\n\ndef main():\n    Y, P = input().split()\n    if Y[-1] == 'e':\n        print(Y + 'x' + P)\n    elif Y[-1] in 'aiou' and Y[-2] not in 'aeiou':\n        print(Y[:-1] + 'ex' + P)\n    elif Y[-2:] == 'ex':\n        print(Y + P)\n    else:\n        print(Y + 'ex' + P)\n\nmain()\n", "\n\ndef main():\n    print(input().replace('eraser', '').replace('erase', '').replace('dreamer', '').replace('dream', ''))\n    if ''.replace('eraser', '').replace('erase', '').replace('dreamer', '').replace('dream', '') == '':\n        print('YES')\n    print('NO')\n\nmain()\n", "\n\ndef main():\n    y, p = input().split()\n    if y[-1] == \"e\" and y[-2] not in \"aiou\":\n        print(y + \"x\" + p)\n    elif y[-1] in \"aiou\":\n        print(y[:-1] + \"ex\" + p)\n    else:\n        print(y + p)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    y, p = input().split()\n    if y[-1] == 'e':\n        print(y + 'x' + p)\n    elif y[-1] in ['a', 'i', 'o', 'u']:\n        print(y[:-1] + 'ex' + p)\n    else:\n        print(y + p)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    y, p = raw_input().split()\n    if y.endswith('ex'):\n        print(y + p)\n    elif y.endswith('e'):\n        print(y[:-1] + 'x' + p)\n    elif y.endswith(('a', 'i', 'o', 'u')):\n        print(y[:-1] + 'ex' + p)\n    else:\n        print(y + 'ex' + p)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    y, p = input().split()\n    if y.endswith(('ex', 'ix')):\n        print(y + p)\n    elif y.endswith('e'):\n        print(y[:-1] + 'x' + p)\n    elif y.endswith(('a', 'i', 'o', 'u', 'y')):\n        print(y[:-1] + 'ex' + p)\n    else:\n        print(y + 'ex' + p)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ny, p = input().split(' ')\n\nif y[-1] == 'e':\n    print(y + 'x' + p)\nelif y[-1] in ['a', 'i', 'o', 'u']:\n    print(y[:-1] + 'ex' + p)\nelif y[-2:] == 'ex':\n    print(y + p)\n", "\n\ny, p = input().split()\n\nif y[-1] == 'e':\n    print(y + 'x' + p)\nelif y[-1] in ['a', 'i', 'o', 'u']:\n    print(y[:-1] + 'ex' + p)\nelif y[-2:] == 'ex':\n    print(y + p)\n", "\n\ndef main():\n    y, p = input().split(\" \")\n    if y[-1] == 'e':\n        print(y + 'x' + p)\n    elif y[-1] in 'aiou':\n        print(y[:-1] + 'ex' + p)\n    elif y[-2:] == 'ex':\n        print(y + p, end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    y, p = input().split(' ')\n    if y.endswith('ex'):\n        print(y + p)\n    elif y.endswith('e'):\n        print(y[:-1] + 'x' + p)\n    elif y.endswith(('a', 'i', 'o', 'u')):\n        print(y[:-1] + 'ex' + p)\n    else:\n        print(y + 'ex' + p)\n\nif __name__ == \"__main__\":\n    main()\n", "y, p = input().split()\n\nif y[-1] == 'e':\n    print(y + 'x' + p)\nelif y[-1] in 'aiou':\n    print(y[:-1] + 'ex' + p)\nelse:\n    print(y + p)\n", "\n\ndef main():\n    y, p = input().split()\n    if y[-1] == 'e':\n        print(y + 'x' + p, end='')\n    elif y[-1] in 'aiou':\n        print(y[:-1] + 'ex' + p, end='')\n    else:\n        print(y + p, end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ny,p = input().split()\n\nif y[-1] == 'e':\n    print(y+'x'+p)\nelif y[-1] in ['a', 'i', 'o', 'u']:\n    print(y[:-1]+'ex'+p)\nelif y[-2:] == 'ex':\n    print(y+p)\n", "\nprint(input().replace('eraser', '').replace('erase', '').replace('dreamer', '').replace('dream', ''), 'NO')[-2:]\n", "\n\n#gets input\nname, parent = input().split()\n\n#prints out child's name\nprint(\"Your child's name is \" + child)\n", "\n\n\ndef main():\n    Y, P = input().split()\n    if Y[-1] == 'e':\n        print(Y + 'x' + P)\n    elif Y[-1] in 'aiou':\n        print(Y[:-1] + 'ex' + P)\n    elif Y[-2:] == 'ex':\n        print(Y + P)\n    else:\n        print(Y + 'ex' + P)\n\nmain()\n"]