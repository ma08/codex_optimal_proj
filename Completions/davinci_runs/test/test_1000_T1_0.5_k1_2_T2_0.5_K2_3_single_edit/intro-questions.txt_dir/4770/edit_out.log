2022-04-16 01:15:16.223542 num operations 1
2022-04-16 01:15:16.223563 size on input set 1
2022-04-16 01:15:21.342663 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz will have\", N - M, \"piece[s] of chicken left over!\")\nelse:\n    print(\"Dr. Chaz needs\", M - N, \"more piece[s] of chicken!\")\n"
    },
    {
      "index": 1,
      "text": "\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print(\"Dr. Chaz will have\", N - M, \"piece[s] of chicken left over!\")\nelse:\n    print(\"Dr. Chaz needs\", M - N, \"more piece[s] of chicken!\")\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    inp = input().split()\n    N = int(inp[0])\n    M = int(inp[1])\n    if N > M:\n        print(\"Dr. Chaz needs\", N - M, \"more piece[s] of chicken!\")\n    else:\n        print(\"Dr. Chaz will have\", M - N, \"piece[s] of chicken left over!\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650071716,
  "object": "edit"
}
2022-04-16 01:15:21.342933 fix syntax errors 3 ['\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print("Dr. Chaz will have", N - M, "piece[s] of chicken left over!")\nelse:\n    print("Dr. Chaz needs", M - N, "more piece[s] of chicken!")\n', '\n\ninp = input().split()\nN = int(inp[0])\nM = int(inp[1])\nif N > M:\n    print("Dr. Chaz will have", N - M, "piece[s] of chicken left over!")\nelse:\n    print("Dr. Chaz needs", M - N, "more piece[s] of chicken!")\n', '\n\nimport sys\n\ndef main():\n    inp = input().split()\n    N = int(inp[0])\n    M = int(inp[1])\n    if N > M:\n        print("Dr. Chaz needs", N - M, "more piece[s] of chicken!")\n    else:\n        print("Dr. Chaz will have", M - N, "piece[s] of chicken left over!")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:15:21.342991 size on output set 2
2022-04-16 01:15:21.343005 num operations 1
2022-04-16 01:15:21.343011 size on input set 1
2022-04-16 01:15:23.290332 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#The following is the solution to the problem: https://open.kattis.com/problems/chicken\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n"
    },
    {
      "index": 1,
      "text": "\n\n#The following is the solution to the problem\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n"
    },
    {
      "index": 2,
      "text": "\n# The following is the solution to the problem:\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(m-n))\nelif (n > m):\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(n-m))\n"
    }
  ],
  "created": 1650071721,
  "object": "edit"
}
2022-04-16 01:15:23.290514 fix syntax errors 3 ['\n\n#The following is the solution to the problem: https://open.kattis.com/problems/chicken\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print("Dr. Chaz needs {} more piece[s] of chicken!".format(m-n))\nelif (n > m):\n    print("Dr. Chaz will have {} piece[s] of chicken left over!".format(n-m))\n', '\n\n#The following is the solution to the problem\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print("Dr. Chaz needs {} more piece[s] of chicken!".format(m-n))\nelif (n > m):\n    print("Dr. Chaz will have {} piece[s] of chicken left over!".format(n-m))\n', '\n# The following is the solution to the problem:\n\nn, m = map(int, input().split())\n\nif (n < m):\n    print("Dr. Chaz needs {} more piece[s] of chicken!".format(m-n))\nelif (n > m):\n    print("Dr. Chaz will have {} piece[s] of chicken left over!".format(n-m))\n']
2022-04-16 01:15:23.290538 size on output set 3
2022-04-16 01:15:23.290549 num operations 1
2022-04-16 01:15:23.290554 size on input set 1
2022-04-16 01:15:26.638736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz will have\",n-m,\"piece[s] of chicken left over!\")\nelif n<m:\n    print(\"Dr. Chaz needs\",m-n,\"more piece[s] of chicken!\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece of chicken!\")\nelif n<m:\n    print(\"Dr. Chaz will have\",m-n,\"piece of chicken left over!\")\n"
    },
    {
      "index": 2,
      "text": "\n\nn,m=map(int,input().split())\nif n>m:\n    print(\"Dr. Chaz needs\",n-m,\"more piece of chicken!\")\nelif n<m:\n    print(\"Dr. Chaz will have\",m-n,\"piece of chicken left over!\")\n"
    }
  ],
  "created": 1650071723,
  "object": "edit"
}
2022-04-16 01:15:26.638924 fix syntax errors 3 ['\n\nn,m=map(int,input().split())\nif n>m:\n    print("Dr. Chaz will have",n-m,"piece[s] of chicken left over!")\nelif n<m:\n    print("Dr. Chaz needs",m-n,"more piece[s] of chicken!")\n', '\n\nn,m=map(int,input().split())\nif n>m:\n    print("Dr. Chaz needs",n-m,"more piece of chicken!")\nelif n<m:\n    print("Dr. Chaz will have",m-n,"piece of chicken left over!")\n', '\n\nn,m=map(int,input().split())\nif n>m:\n    print("Dr. Chaz needs",n-m,"more piece of chicken!")\nelif n<m:\n    print("Dr. Chaz will have",m-n,"piece of chicken left over!")\n']
2022-04-16 01:15:26.638946 size on output set 2
2022-04-16 01:15:26.638956 num operations 1
2022-04-16 01:15:26.638961 size on input set 1
2022-04-16 01:15:30.083606 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n-m, \"more piece of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", m-n, \"piece of chicken left over!\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(\"Dr. Chaz needs\", n - m, \"more piece[s] of chicken!\")\nelse:\n    print(\"Dr. Chaz will have\", m - n, \"piece[s] of chicken left over!\")\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(f\"Dr. Chaz needs {n-m} more piece[s] of chicken!\")\nelse:\n    print(f\"Dr. Chaz will have {m-n} piece[s] of chicken left over!\")\n"
    }
  ],
  "created": 1650071726,
  "object": "edit"
}
2022-04-16 01:15:30.083792 fix syntax errors 3 ['\n\nn, m = map(int, input().split())\n\nif n > m:\n    print("Dr. Chaz needs", n-m, "more piece of chicken!")\nelse:\n    print("Dr. Chaz will have", m-n, "piece of chicken left over!")\n', '\n\nn, m = map(int, input().split())\n\nif n > m:\n    print("Dr. Chaz needs", n - m, "more piece[s] of chicken!")\nelse:\n    print("Dr. Chaz will have", m - n, "piece[s] of chicken left over!")\n', '\n\nn, m = map(int, input().split())\n\nif n > m:\n    print(f"Dr. Chaz needs {n-m} more piece[s] of chicken!")\nelse:\n    print(f"Dr. Chaz will have {m-n} piece[s] of chicken left over!")\n']
2022-04-16 01:15:30.083816 size on output set 3
2022-04-16 01:15:30.083827 num operations 1
2022-04-16 01:15:30.083833 size on input set 1
2022-04-16 01:15:35.015666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n\n    if N > M:\n        print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\n    else:\n        print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nN, M = [int(x) for x in input().split()]\n\nif N > M:\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\nelse:\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nN, M = [int(x) for x in input().split()]\n\nif N > M:\n    print(\"Dr. Chaz needs {} more piece[s] of chicken!\".format(N - M))\nelse:\n    print(\"Dr. Chaz will have {} piece[s] of chicken left over!\".format(M - N))\n"
    }
  ],
  "created": 1650071730,
  "object": "edit"
}
2022-04-16 01:15:35.015943 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n\n    if N > M:\n        print("Dr. Chaz needs {} more piece[s] of chicken!".format(N - M))\n    else:\n        print("Dr. Chaz will have {} piece[s] of chicken left over!".format(M - N))\n\nif __name__ == "__main__":\n    main()\n', '\nN, M = [int(x) for x in input().split()]\n\nif N > M:\n    print("Dr. Chaz needs {} more piece[s] of chicken!".format(N - M))\nelse:\n    print("Dr. Chaz will have {} piece[s] of chicken left over!".format(M - N))\n', '#!/usr/bin/env python3\n\nN, M = [int(x) for x in input().split()]\n\nif N > M:\n    print("Dr. Chaz needs {} more piece[s] of chicken!".format(N - M))\nelse:\n    print("Dr. Chaz will have {} piece[s] of chicken left over!".format(M - N))\n']
2022-04-16 01:15:35.015993 size on output set 3
2022-04-16 01:15:35.016004 num operations 1
2022-04-16 01:15:35.016010 size on input set 1
2022-04-16 01:15:38.002266 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if m-n == 1 else \"s\"))\nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if n-m == 1 else \"s\"))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if m-n == 1 else \"s\")) \nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if n-m == 1 else \"s\"))\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print(\"Dr. Chaz will have {} piece{} of chicken left over!\".format(m-n, \"\" if m-n == 1 else \"s\")) \nelse:\n    print(\"Dr. Chaz needs {} more piece{} of chicken!\".format(n-m, \"\" if n-m == 1 else \"s\"))\n"
    }
  ],
  "created": 1650071735,
  "object": "edit"
}
2022-04-16 01:15:38.002464 fix syntax errors 3 ['\nn, m = map(int, input().split())\n\nif m >= n:\n    print("Dr. Chaz will have {} piece{} of chicken left over!".format(m-n, "" if m-n == 1 else "s"))\nelse:\n    print("Dr. Chaz needs {} more piece{} of chicken!".format(n-m, "" if n-m == 1 else "s"))\n', '\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print("Dr. Chaz will have {} piece{} of chicken left over!".format(m-n, "" if m-n == 1 else "s")) \nelse:\n    print("Dr. Chaz needs {} more piece{} of chicken!".format(n-m, "" if n-m == 1 else "s"))\n', '\n\nn, m = map(int, input().split())\n\nif m >= n:\n    print("Dr. Chaz will have {} piece{} of chicken left over!".format(m-n, "" if m-n == 1 else "s")) \nelse:\n    print("Dr. Chaz needs {} more piece{} of chicken!".format(n-m, "" if n-m == 1 else "s"))\n']
2022-04-16 01:15:38.002489 size on output set 2
2022-04-16 01:15:38.002500 num operations 1
2022-04-16 01:15:38.002505 size on input set 1
2022-04-16 01:15:42.381592 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover > 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\")) \n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover != 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\"))\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print(\"Dr. Chaz will have %d piece%s of chicken left over!\" % (leftover, \"s\" if leftover > 1 else \"\"))\nelse:\n    print(\"Dr. Chaz needs %d more piece%s of chicken!\" % (-leftover, \"s\" if leftover < -1 else \"\"))\n"
    }
  ],
  "created": 1650071738,
  "object": "edit"
}
2022-04-16 01:15:42.381854 fix syntax errors 3 ['\n\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print("Dr. Chaz will have %d piece%s of chicken left over!" % (leftover, "s" if leftover > 1 else ""))\nelse:\n    print("Dr. Chaz needs %d more piece%s of chicken!" % (-leftover, "s" if leftover < -1 else "")) \n', '\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print("Dr. Chaz will have %d piece%s of chicken left over!" % (leftover, "s" if leftover != 1 else ""))\nelse:\n    print("Dr. Chaz needs %d more piece%s of chicken!" % (-leftover, "s" if leftover < -1 else ""))\n', '\nn, m = map(int, input().split())\n\nleftover = m - n\n\nif leftover > 0:\n    print("Dr. Chaz will have %d piece%s of chicken left over!" % (leftover, "s" if leftover > 1 else ""))\nelse:\n    print("Dr. Chaz needs %d more piece%s of chicken!" % (-leftover, "s" if leftover < -1 else ""))\n']
2022-04-16 01:15:42.381885 size on output set 3
2022-04-16 01:15:42.381899 num operations 1
2022-04-16 01:15:42.381905 size on input set 1
2022-04-16 01:15:45.235365 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else '')) \n"
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else '')\n"
    },
    {
      "index": 2,
      "text": "\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n"
    }
  ],
  "created": 1650071742,
  "object": "edit"
}
2022-04-16 01:15:45.235625 fix syntax errors 3 ["\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else '')) \n", "\n\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else '')\n", "\nN, M = map(int, input().split())\n\nif N > M:\n    print('Dr. Chaz needs {} more pieces of chicken!'.format(N - M))\nelse:\n    print('Dr. Chaz will have {} piece{} of chicken left over!'.format(M - N, 's' if (M - N) > 1 else ''))\n"]
2022-04-16 01:15:45.235669 size on output set 3
