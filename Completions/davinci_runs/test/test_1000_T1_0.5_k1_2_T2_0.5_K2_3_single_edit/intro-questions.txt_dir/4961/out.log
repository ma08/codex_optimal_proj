2022-04-10 00:10:48.768538 """
A nice part of the Roman Catholic Mass is the rite of peace when people shake hands with their neighbours and say “peace be with you”. Mirko has found a way to turn this ritual into his own favor. Inside the church, there are $R$ rows of benches where each row can hold a capacity of $S$ people. We can imagine the seating order as a matrix sized $R \times S$ where each element represents either a person or an empty seating space. Let us assume that each person shakes hands with their neighbours. That means that the neighbours are located in one of the eight neighbouring elements (if such element exists):


A seating order of the people inside the church has been given before Mirko enters. Mirko is, of course, late for the morning Mass and will sit in an empty space so that he shakes hands with as many people as he can. If there are no empty seats left, Mirko will simply give up on the idea and go to the evening Mass instead. We can assume that nobody enters the church after Mirko.

Calculate the total number of handshakes given during the morning Mass.

-----Input-----
The first line of input contains positive integers $R$ and $S$ ($1 \leq R, S \leq 50$) as stated in the text. Each of the following $R$ lines contains $S$ characters. These $R \times S$ characters represent the seating order. The character “.” (dot) represents an empty place and the character “o” (lowercase letter o) represents a person.

-----Output-----
The first and only line of output should contain the required number of handshakes.

-----Examples-----
Sample Input:
2 3
..o
o..
Sample Output:
2
"""
2022-04-10 00:10:48.768573 --------------------------
2022-04-10 00:11:35.130915 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()"
    }
  ],
  "created": 1649563849,
  "id": "cmpl-4vJCTUdYrm7LF1u4EXhgfjH1f6VNW",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-10 00:11:35.131435 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)"
}
2022-04-10 00:11:35.131501 REASON stop
2022-04-10 00:11:35.132593 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.132640 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)"
}
2022-04-10 00:11:35.132733 REASON stop
2022-04-10 00:11:35.133381 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.133426 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)"
}
2022-04-10 00:11:35.133533 REASON stop
2022-04-10 00:11:35.134122 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.134162 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)"
}
2022-04-10 00:11:35.134240 REASON stop
2022-04-10 00:11:35.134652 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.134681 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))"
}
2022-04-10 00:11:35.134746 REASON stop
2022-04-10 00:11:35.135001 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.135014 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-10 00:11:35.135091 REASON stop
2022-04-10 00:11:35.135353 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.135387 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)"
}
2022-04-10 00:11:35.135454 REASON stop
2022-04-10 00:11:35.135859 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
2022-04-10 00:11:35.135895 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()"
}
2022-04-10 00:11:35.135978 REASON stop
2022-04-10 00:11:35.136276 test/intro-questions.txt_dir/4961/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4961/solutions.json'
