["import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split()))\n    d = 0\n    while True:\n        d += 1\n        v_diff = []\n        for i in range(len(v) - 1):\n            v_diff.append(v[i + 1] - v[i])\n        v = v_diff\n        if len(set(v)) == 1:\n            break\n    print(d, v[0] * d + v[0])\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    input_list = sys.stdin.readlines()\n    input_list = [x.strip() for x in input_list]\n    input_list = [x.split(' ') for x in input_list]\n    input_list = [[int(y) for y in x] for x in input_list]\n    input_list = input_list[0]\n    n = input_list[0]\n    input_list = input_list[1:]\n    degree = 0\n    while True:\n        degree += 1\n        if len(set(input_list)) == 1:\n            break\n        else:\n            temp_input = []\n            for i in range(len(input_list)-1):\n                temp_input.append(input_list[i+1]-input_list[i])\n            input_list = temp_input\n    print(degree, input_list[0]*degree)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    d = [[0 for j in range(n)] for i in range(n)]\n    for i in range(n):\n        d[0][i] = v[i]\n    for i in range(1, n):\n        for j in range(n - i):\n            d[i][j] = d[i - 1][j + 1] - d[i - 1][j]\n    v_n1 = d[0][n - 1]\n    for i in range(n - 1, 0, -1):\n        v_n1 += d[i][0]\n    for i in range(1, n):\n        if d[i][0] != 0:\n            print(i, v_n1)\n            return\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    v = [int(x) for x in sys.stdin.readline().strip().split()]\n    diff = [v[i+1]-v[i] for i in range(n-1)]\n    while True:\n        d = diff[0]\n        for i in range(1,len(diff)):\n            if diff[i] != d:\n                break\n        else:\n            break\n        diff = [diff[i+1]-diff[i] for i in range(len(diff)-1)]\n    d = v[n-1]+d\n    print(len(diff), d)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    values = [int(x) for x in sys.stdin.readline().strip().split()]\n    values = values[::-1]\n    differences = []\n    while len(values) > 1:\n        differences.append(values[0] - values[1])\n        values = values[1:]\n    differences = differences[::-1]\n    \n    # find the degree of the polynomial\n    degree = 0\n    for i in range(len(differences) - 1):\n        if differences[i] != differences[i + 1]:\n            degree = i + 1\n            break\n    \n    # find the next value\n    next_value = values[0] + (degree + 1) * differences[degree]\n    \n    print(degree + 1, next_value)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    input_list = sys.stdin.readlines()\n    input_list = [x.strip() for x in input_list]\n    input_list = [x.split(' ') for x in input_list]\n    input_list = [[int(y) for y in x] for x in input_list]\n    input_list = input_list[0]\n    n = input_list[0]\n    input_list = input_list[1:]\n    degree = 0\n    while True:\n        degree += 1\n        if len(set(input_list)) == 1:\n            break\n        else:\n            temp_input = []\n            for i in range(len(input_list)-1):\n                temp_input.append(input_list[i+1]-input_list[i])\n            input_list = temp_input\n    print(degree, input_list[0] * degree)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    v = [int(x) for x in sys.stdin.readline().strip().split()]\n    diff = [v[i+1]-v[i] for i in range(n-1)]\n    while True:\n        d = diff[0]\n        for i in range(1,len(diff)):\n            if diff[i] != d:\n                break\n        else:\n            break\n    if len(diff) == 0:\n        diff = [d]\n        diff = [diff[i+1]-diff[i] for i in range(len(diff)-1)]\n    d = v[n-1]+d\n    print(len(diff))\n    print(d)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndiff_table = [v]\nwhile len(diff_table[-1]) > 1:\n    diff_table.append([])\n    for i in range(len(diff_table[-2]) - 1):\n        diff_table[-1].append(diff_table[-2][i + 1] - diff_table[-2][i])\nfor i in range(len(diff_table)):\n    print(\"\\t\".join(map(str, diff_table[i])))\nprint()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    values = [int(x) for x in sys.stdin.readline().strip().split()]\n    values = values[::-1]\n    differences = []\n    while len(values) > 1:\n        differences.append(values[0] - values[1])\n        values = values[1:]\n    differences = differences[::-1]\n    \n    # find the degree of the polynomial\n    degree = 0\n    for i in range(len(differences) - 1):\n        if differences[i] != differences[i + 1]:\n            degree = i + 1\n            break\n    \n    # find the next value\n    next_value = values[0] + (degree + 1) * differences[degree]\n    \n    print(degree, next_value)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()][:n]\n    diff = []\n    ret_diff = []\n    for i in range(n-1):\n        diff.append(v[i+1] - v[i])\n    for i in range(n-2):\n        ret_diff.append(diff[i+1] - diff[i])\n    if all(x == 0 for x in ret_diff):\n        print(1, v[-1] + diff[0])\n    elif all(x == 0 for x in diff):\n        print(0, v[-1])\n    else:\n        print(2, v[-1] + diff[-1] + ret_diff[-1])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef print_diff_table(n, v):\n    diff_table = [v]\n    while len(diff_table[-1]) > 1:\n        diff_table.append([])\n        for i in range(len(diff_table[-2]) - 1):\n            diff_table[-1].append(diff_table[-2][i + 1] - diff_table[-2][i])\n    for i in range(len(diff_table)):\n        print(\"\\t\".join(map(str, diff_table[i])))\n    print()\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    v = list(map(int, sys.stdin.readline().rstrip().split()))\n    print_diff_table(n, v)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    d = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        d[0][i] = v[i]\n    for i in range(1, n):\n        for j in range(n - i):\n            d[i][j] = d[i - 1][j + 1] - d[i - 1][j]\n    v_n1 = v[n - 1]\n    for i in range(n - 1, 0, -1):\n        v_n1 += d[i][0]\n    for i in range(1, n):\n        if d[i][0] != 0:\n            print(i, v_n1)\n            return\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    values = [int(x) for x in input().strip().split()]\n    differences = [values[i] - values[i - 1] for i in range(1, len(values))]\n    \n    degree = len(differences) - 1\n    while differences[degree - 1] == differences[degree]:\n        degree -= 1\n    \n    # find the next value\n    next_value = values[-1] + (degree + 1) * differences[degree]\n    \n    print(degree, next_value)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    if n == 1:\n        print(0, v[0])\n    elif n == 2:\n        diff = abs(v[1] - v[0])\n        print(1, v[1] + diff)\n    elif n == 3:\n        diff = abs(v[1] - v[0])\n        ret_diff = abs(v[2] - v[1])\n        if diff == ret_diff:\n            print(2, v[2] + diff)\n        else:\n            print(-1)\n    elif n > 3:\n        diff = []\n        ret_diff = []\n        for i in range(n-1):\n            diff.append(v[i+1] - v[i])\n        for i in range(n-2):\n            ret_diff.append(diff[i+1] - diff[i])\n        if all(x == 0 for x in ret_diff):\n            print(1, v[-1] + diff[0])\n        elif all(x == 0 for x in diff):\n            print(0, v[-1])\n        else:\n            print(2, v[-1] + diff[-1] + ret_diff[-1])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split()))\n    d = 0\n    while True:\n        d += 1\n        v_diff = []\n        for i in range(len(v) - 1):\n            v_diff.append(v[i + 1] - v[i])\n        v = v_diff\n        if len(set(v)) == 1:\n            break\n    print(d, v[0] * d - v[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    d = 0\n    for i in range(n-1):\n        if v[i+1] - v[i] != v[i+2] - v[i+1]:\n            d = i+2\n            break\n    print(d, v[n-1] + v[1] - v[0]) \n\nmain()\n", "#\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    d = 0\n    for i in range(n-1):\n        if v[i+1] - v[i] != v[i+2] - v[i+1]:\n            d = i+2\n            break\n    print(d, v[n-1] + v[1] - v[0])\n\nmain()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef print_diff_table(n, v):\n    diff_table = [v[:]]\n    while len(diff_table[-1]) > 1: # \u5dee\u5206\u8868\u306e\u6700\u5f8c\u306e\u884c\u306e\u8981\u7d20\u6570\u304c1\u3088\u308a\u5927\u304d\u3044\u9593\n        diff_table.append([]) # \u65b0\u3057\u3044\u884c\u3092\u8ffd\u52a0\n        for i in range(len(diff_table[-2]) - 1): # \u5dee\u5206\u8868\u306e\u6700\u5f8c\u306e\u884c\u306e\u8981\u7d20\u6570-1\u56de\u7e70\u308a\u8fd4\u3059\n            diff_table[-1].append(diff_table[-2][i + 1] - diff_table[-2][i]) # \u5dee\u5206\u3092\u8ffd\u52a0\n    for i in range(len(diff_table)): # \u5dee\u5206\u8868\u306e\u884c\u6570\u5206\u7e70\u308a\u8fd4\u3059\n        print(\"\\t\".join(map(str, diff_table[i]))) # \u5dee\u5206\u8868\u3092\u51fa\u529b\n    print()\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    v = list(map(int, sys.stdin.readline().strip().split()))\n    print_diff_table(n, v)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    d = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        d[0][i] = v[i]\n    for i in range(1, n):\n        for j in range(n - i):\n            d[i][j] = d[i - 1][j + 1] - d[i - 1][j]\n    v_n1 = d[0][n - 1]\n    for i in range(n - 1, 0, -1):\n        v_n1 += d[i][0]\n    for i in range(1, n):\n        if d[i][0] != 0:\n            print(i, v_n1)\n            return\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()][:n]\n    d = 0\n    for i in range(n-1):\n        if v[i+1] - v[i] != v[i+2] - v[i+1]:\n            d = i+2\n            break\n    if d == 0:\n        print(\"0 0\")\n    else:\n        print(d, v[n-1] + v[1] - v[0])\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    diff = [v[i+1]-v[i] for i in range(n)]\n    while True:\n        d = diff[0]\n        for i in range(len(diff)-1):\n            if diff[i] != d:\n                break\n        else:\n            break\n        diff = [diff[i+1]-diff[i] for i in range(len(diff)-1)]\n    d = v[n-1]-d\n    print(len(diff), d)\n\nif __name__ == '__main__':\n    main()\n", "#https://open.kattis.com/problems/arithmeticprogression\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = [int(x) for x in sys.stdin.readline().split()]\n    diff = []\n    ret_diff = []\n    for i in range(n-1):\n        diff.append(v[i+1] - v[i])\n    for i in range(n-2):\n        ret_diff.append(diff[i+1] - diff[i])\n    if all(x == 0 for x in ret_diff):\n        print(1, v[-1] + diff[0])\n    elif all(x == 0 for x in diff):\n        print(0, v[-1])\n    else:\n        print(2, v[-1] + diff[-1] + ret_diff[-1])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split()))\n    d = 0\n    while True:\n        d += 1\n        v_diff = []\n        for i in range(len(v) - 1):\n            v_diff.append(v[i + 1] - v[i])\n        v = v_diff\n        if len(set(v)) == 1:\n            break\n    print(d, v[0] * d + v[0])\n\nif __name__ == '__main__':\n    main()\n"]