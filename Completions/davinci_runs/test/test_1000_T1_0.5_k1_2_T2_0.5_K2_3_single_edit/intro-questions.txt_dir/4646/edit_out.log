2022-04-16 00:33:35.956630 num operations 1
2022-04-16 00:33:35.956651 size on input set 1
2022-04-16 00:33:37.907838 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "'''\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n'''\n"
    },
    {
      "index": 2,
      "text": "#!/bin/python3\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650069216,
  "object": "edit"
}
2022-04-16 00:33:37.908083 fix syntax errors 3 ["\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "'''\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n'''\n", "#!/bin/python3\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:33:37.908114 size on output set 3
2022-04-16 00:33:37.908125 num operations 1
2022-04-16 00:33:37.908130 size on input set 1
2022-04-16 00:33:43.522985 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0 and a.count(1) % 2:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1\n    elif len(a) % 2 == 0 and not a.count(1) % 2:\n        return 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n"
    }
  ],
  "created": 1650069217,
  "object": "edit"
}
2022-04-16 00:33:43.523181 fix syntax errors 3 ["\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0 and a.count(1) % 2:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1\n    elif len(a) % 2 == 0 and not a.count(1) % 2:\n        return 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n"]
2022-04-16 00:33:43.523387 size on output set 3
