

# 全探索できるかどうかは、各書籍のコストの総和がX以上になるかどうかで判定できる
N, M, X = map(int, input().split()) # アルゴリズムの種類、書籍の種類、各アルゴリズムの最低レベル
A = [] # 各書籍のアルゴリズムレベル
C = [] # 各書籍のコスト
for _ in range(N): # 書籍の種類分ループ
    c, *a = map(int, input().split()) # 各書籍のコスト、アルゴリズムレベル
    A.append(a) # アルゴリズムレベルを格納
    C.append(c) # コストを格納

ans = 10**10 # 初期値を大きい値にする
for i in range(1 << N): # 2^N通り試す
    # 各書籍について、ビットが立っていると購入する、立っていないと購入しない
    # この時、各アルゴリズムについて、購入した書籍の内、各アルゴリズムのレベルが最も高いものを足し合わせる
    # これがX以上になればOK
    cost = 0
    level = [0] * M # 各アルゴリズムのレベル
    for j in range(N): # 各書籍について
        # 購入する書籍
        if i & (1 << j): # ビットが立っているかどうか
            cost += C[j] # コストを足し合わせる
            for k in range(M): # 各アルゴリズムについて
                level[k] = max(level[k], A[j][k]) # 最大値を更新する
    # すべてのアルゴリズムのレベルがX以上であれば、コストの最小値を更新する
    if all(x >= X for x in level):
        ans = min(ans, cost)

# すべてのアルゴリズムのレベルがX以上になれば、コストが最小値になる
if ans == 10**10:
    print(-1)
else:
    print(ans)
