2022-04-09 21:25:40.383476 """
=====Problem Statement=====
The provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.

=====Example=====
marks key:value pairs are
'alpha': [20,30,40]
'beta': [30,50,70]
query_name = 'beta'
The query_name is 'beta'. beta's average score is (30+50+70)/3 = 50

=====Input Format=====
The first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.

=====Constraints=====
2≤n≤10
0≤marks[i]≤100
length of marks arrays = 3

=====Output Format=====
Print one line: The average of the marks obtained by the particular student correct to 2 decimal places.
"""
2022-04-09 21:25:40.383502 --------------------------
2022-04-09 21:25:49.277394 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(sum(marks)/len(marks)))"
    }
  ],
  "created": 1649553940,
  "id": "cmpl-4vGceQHuLN6wEi0boMXxXXSEWRHe3",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:25:49.277746 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))"
}
2022-04-09 21:25:49.277818 REASON stop
2022-04-09 21:25:49.279280 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(sum(marks)/len(marks)))"
}
2022-04-09 21:25:49.279430 REASON stop
