2022-04-16 00:38:39.188969 num operations 1
2022-04-16 00:38:39.188985 size on input set 1
2022-04-16 00:38:44.389579 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef get_average_score(student_marks, query_name):\n    marks = student_marks.get(query_name)\n    return sum(marks)/len(marks)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{:.2f}\".format(get_average_score(student_marks, query_name)))\n"
    },
    {
      "index": 1,
      "text": "from collections import Counter\nn = int(input())\ns = Counter(map(int, input().split()))\nm = int(input())\nans = 0\nfor _ in range(m):\n    x, y = map(int, input().split())\n    if s[x] > 0:\n        s[x] -= 1\n        ans += y\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name, [])\n    if marks:\n        print(\"{:.2f}\".format(sum(marks)/len(marks)))\n    else:\n        print(\"No marks for {}\".format(query_name))\n"
    }
  ],
  "created": 1650069519,
  "object": "edit"
}
2022-04-16 00:38:44.389928 fix syntax errors 3 ['\n\n\ndef get_average_score(student_marks, query_name):\n    marks = student_marks.get(query_name)\n    return sum(marks)/len(marks)\n\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{:.2f}".format(get_average_score(student_marks, query_name)))\n', 'from collections import Counter\nn = int(input())\ns = Counter(map(int, input().split()))\nm = int(input())\nans = 0\nfor _ in range(m):\n    x, y = map(int, input().split())\n    if s[x] > 0:\n        s[x] -= 1\n        ans += y\nprint(ans)\n', '\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name, [])\n    if marks:\n        print("{:.2f}".format(sum(marks)/len(marks)))\n    else:\n        print("No marks for {}".format(query_name))\n']
2022-04-16 00:38:44.389963 size on output set 3
2022-04-16 00:38:44.389972 num operations 1
2022-04-16 00:38:44.389977 size on input set 1
2022-04-16 00:38:49.678342 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{:0.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/float(len(array))\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 2,
      "text": "\ndef average(array):\n    return sum(array)/len(array) \nif __name__ == '__main__':\n    n = int(input()) \n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split() \n        scores = list(map(float, line)) \n        student_marks[name] = scores\n    query_name = input() \n    print(\"{0:.2f}\".format(average(student_marks[query_name]))) \n"
    }
  ],
  "created": 1650069524,
  "object": "edit"
}
2022-04-16 00:38:49.678530 fix syntax errors 3 ['\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{:0.2f}".format(average(student_marks[query_name])))\n', '\nimport math\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/float(len(array))\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name])))\n', '\ndef average(array):\n    return sum(array)/len(array) \nif __name__ == \'__main__\':\n    n = int(input()) \n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split() \n        scores = list(map(float, line)) \n        student_marks[name] = scores\n    query_name = input() \n    print("{0:.2f}".format(average(student_marks[query_name]))) \n']
2022-04-16 00:38:49.678560 size on output set 3
