["\n\ndef cal_lucas(n):\n    if n == 0: #base case\n        return 2\n    elif n == 1: #base case\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2) #recursive case\n\ndef main():\n    n = int(input()) #input\n    print(cal_lucas(n)) #output\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    l = [2, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n", "\ndef cal_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef cal_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(raw_input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"]