["import sys\nimport random\n\nword = input()\npermutation = input()\n\n# Check if Ned wins\ndef is_win(word, permutation):\n    # Check if word contains letters from permutation\n    for letter in permutation:\n        if letter in word:\n            return True\n    return False\n\n# Check if Ned loses\ndef is_lose(word, permutation):\n    # Check if word contains letters not in permutation\n    for letter in word:\n        if letter not in permutation:\n            return True\n    return False\n\n# Print result\nif is_win(word, permutation):\n    print(\"WIN\")\nelif is_lose(word, permutation):\n    print(\"LOSE\")\n", "\n\nimport sys\nimport random\n\ndef main():\n    hangman = sys.stdin.readline().strip().lower()\n    alphabet = sys.stdin.readline().strip().lower()\n    guessed = set()\n    components = 0\n    while components < 10:\n        guess = alphabet[0]\n        alphabet = alphabet[1:]\n        if guess not in guessed:\n            guessed.add(guess)\n            if guess not in hangman:\n                components += 1\n            elif all(letter in guessed for letter in hangman):\n                print(\"WIN\")\n                return\n    print(\"LOSE\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport random\n\nword = input()\npermutation = input()\n\n# Check if Ned can win\ndef is_win(word, permutation):\n    # Check if word contains letters from permutation\n    for letter in permutation:\n            # If so, Ned can win\n        if letter in word:\n    # Otherwise, he cannot\n            return True\n    return False\n\n# Check if Ned can lose\ndef is_lose(word, permutation):\n    # Check if word contains letters not in permutation\n    for letter in word:\n        if letter not in permutation:\n            # If so, Ned can lose\n            return True\n    # Otherwise, he cannot\n    return False\n\n# Print result\nif is_win(word, permutation):\n    print(\"WIN\")\nelif is_lose(word, permutation):\n    print(\"LOSE\")\nelse:\n    print(\"DRAW\")\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nword = input()\npermutation = input()\n\nword_dict = {}\nfor letter in word:\n    if letter not in word_dict:\n        word_dict[letter] = 1\n    else:\n        word_dict[letter] += 1\n\nguesses_left = 9\nfor letter in permutation:\n    if letter in word_dict:\n        word_dict[letter] -= 1\n        if word_dict[letter] == 0:\n            word_dict.pop(letter)\n            if len(word_dict) == 0:\n                print('WIN', guesses_left)\n                break\n    elif letter not in word_dict:\n        guesses_left -= 1\n        if guesses_left == 0:\n            print('LOSE', guesses_left)\n            break\n    else:\n        print('CONTINUE', guesses_left)\n", "\n\nword = input(\"Enter word: \")\nletters = input(\"Enter letters: \")\n\n# create a dictionary of letters and their positions\nletter_dict = {}\nfor i in range(len(word)):\n    if word[i] in letter_dict:\n        letter_dict[word[i]].append(i)\n    else:\n        letter_dict[word[i]] = [i]\nprint(letter_dict)\n\n\n# check if Ned wins\nwin = True\nfor letter in letters:\n    if letter in letter_dict and letter_dict[letter]:\n        del letter_dict[letter]\n        if not letter_dict or not any(letter_dict.values()):\n            break\n    else:\n        win = False\n        break\n\n# print output\nif win:\n    print(\"WIN\")\nelse:\n    print(\"LOSE\")\n", "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        word = input()\n        perm = input()\n        word_set = set(word)\n        perm_set = set(perm)\n        if len(word_set) > len(perm_set):\n            print(\"LOSE\")\n        else:\n            print(\"WIN\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport random\n\ndef main():\n    hangman = input().strip()\n    alphabet = input().strip()\n    guessed = set()\n    components = 0\n    while components < 10:\n        guess = alphabet[0]\n        alphabet = alphabet[1:]\n        if guess not in guessed:\n            guessed.add(guess)\n            if guess not in hangman:\n                components += 1\n            elif all(letter in guessed for letter in hangman):\n                print('WIN')\n                return\n    print('LOSE')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    word = input().strip()\n    perm = input().strip()\n\n    # check if Ned wins\n    for i in range(len(word)):\n        if word[i] not in perm[:i+1]:\n            print('LOSE')\n            return\n\n    print('WIN')\n\nmain()\n", "\n\nword = input()\nperm = input()\n\n# word = \"HANGMAN\"\n# perm = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nletters = {\n    \"A\": 0,\n    \"B\": 0,\n    \"C\": 0,\n    \"D\": 0,\n    \"E\": 0,\n    \"F\": 0,\n    \"G\": 0,\n    \"H\": 0,\n    \"I\": 0,\n    \"J\": 0,\n    \"K\": 0,\n    \"L\": 0,\n    \"M\": 0,\n    \"N\": 0,\n    \"O\": 0,\n    \"P\": 0,\n    \"Q\": 0,\n    \"R\": 0,\n    \"S\": 0,\n    \"T\": 0,\n    \"U\": 0,\n    \"V\": 0,\n    \"W\": 0,\n    \"X\": 0,\n    \"Y\": 0,\n    \"Z\": 0,\n    }\n\nfor i in word:\n    letters[i] += 1\n\nfor i in perm:\n    if letters[i] > 0:\n        letters[i] -= 1\n    else:\n        print(\"LOSE\")\n        exit()\nelse:\n    print(\"WIN\")\n", "\nword = input()\nletters = input()\n\n# create a dictionary of letters and their positions\nletter_dict = {}\nfor i in range(len(word)):\n    if word[i] in letter_dict:\n        letter_dict[word[i]].append(i)\n    else:\n        letter_dict[word[i]] = [i]\n\n# check if Ned wins\nwin = True\nfor letter in letters:\n    if letter in letter_dict:\n        del letter_dict[letter]\n        if not letter_dict:\n            break\n    else:\n        win = False\n        break\n\n# print output\nif win:\n    print(\"WIN\")\nelse:\n    print(\"LOSE\")\n", "\n\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    perm = sys.stdin.readline().strip()\n\n    # check if Ned wins\n    for i in range(len(word)):\n        if word[i] not in perm[:i + 1]:\n\n            print('LOSE')\n            return\n\n    print('WIN')\n\nmain()\n", "\n\nword = input()\nperm = input()\nprint(\"WIN\" if all(map(lambda x: x in perm, word)) else \"LOSE\")\n", "\n\nword = input()\npermutation = input()\n\nword_dict = {}\nfor letter in word:\n    if letter not in word_dict:\n        word_dict[letter] = 1\n    else:\n        word_dict[letter] += 1\n\nguesses_left = 10\nfor letter in permutation:\n    if letter in word_dict:\n        word_dict[letter] -= 1\n        if word_dict[letter] == 0:\n            word_dict.pop(letter)\n            if len(word_dict) == 0:\n                print('WIN')\n                exit()\n    else:\n        guesses_left -= 1\n        if guesses_left == 0:\n            print('LOSE')\n            exit()\n", "import sys\n\nword = sys.stdin.readline().strip()\nperm = sys.stdin.readline().strip()\n\n    # check if Ned wins\n    for i in range(len(word)):\n        if word[i] not in perm[:i+1]:\n            print('LOSE')\n            return\n\n    print('WIN')\n\nmain()\n", "\n\ndef main():\n    word = input().strip()\n    perm = input().strip()\n    word_set = set(word)\n    perm_set = set(perm)\n    if len(word_set) > len(perm_set):\n        print(\"LOSE\")\n    else:\n        print(\"WIN\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    word = input()\n    permutation = input()\n\n    word_dict = {}\n    for letter in word:\n        if letter not in word_dict:\n            word_dict[letter] = 1\n        else:\n            word_dict[letter] += 1\n\n    guesses_left = 10\n    for letter in permutation:\n        if letter in word_dict:\n            word_dict[letter] -= 1\n            if word_dict[letter] == 0:\n                word_dict.pop(letter)\n                if len(word_dict) == 0:\n                    print('WIN')\n                    break\n        else:\n            guesses_left -= 1\n            if guesses_left == 0:\n                print('LOSE')\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport random\n\nword = input()\npermutation = input()\n\n# Check if Ned can win\ndef is_win(word, permutation):\n    # Check if word contains letters from permutation\n    for letter in permutation:\n        if letter in word:\n            return True\n    return False\n\n# Check if Ned can lose\ndef is_lose(word, permutation):\n    # Check if word contains letters not in permutation\n    for letter in word:\n        if letter not in permutation:\n            return True\n    return False\n\n# Print result\nif is_win(word, permutation):\n    print(\"WIN\")\nelif is_lose(word, permutation):\n    print(\"LOSE\")\n", "\n\nword = input()\nperm = input()\n\nprint(\"WIN\" if all(map(lambda x: x in word, perm)) else \"LOSE\")\n", "#!/usr/bin/env python3\n\nimport sys\nimport random\n\ndef main():\n    hangman = sys.stdin.readline().strip()\n    alphabet = sys.stdin.readline().strip()\n    guessed = set()\n    components = 0\n    while components < 10:\n        guess = alphabet[0]\n        alphabet = alphabet[1:]\n        if guess not in guessed:\n            guessed.add(guess)\n            if guess not in hangman:\n                components += 1\n            elif all(letter in guessed for letter in hangman):\n                print(\"WIN\")\n                return\n    print(\"LOSE\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nword = input()\nperm = input()\nprint(\"WIN\" if all(map(lambda x: x in perm, word)) else \"LOSE\")\n", "\n\nword = input()\nperm = input()\n\n# word = \"HANGMAN\"\n# perm = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nletters = {\n    \"A\": 0,\n    \"B\": 0,\n    \"C\": 0,\n    \"D\": 0,\n    \"E\": 0,\n    \"F\": 0,\n    \"G\": 0,\n    \"H\": 0,\n    \"I\": 0,\n    \"J\": 0,\n    \"K\": 0,\n    \"L\": 0,\n    \"M\": 0,\n    \"N\": 0,\n    \"O\": 0,\n    \"P\": 0,\n    \"Q\": 0,\n    \"R\": 0,\n    \"S\": 0,\n    \"T\": 0,\n    \"U\": 0,\n    \"V\": 0,\n    \"W\": 0,\n    \"X\": 0,\n    \"Y\": 0,\n    \"Z\": 0,\n}\n\nfor i in word:\n    letters[i] += 1\n\nfor i in perm:\n    if letters[i] > 0:\n        letters[i] -= 1\n    else:\n        print(\"LOSE\")\n        break\nelse:\n    print(\"WIN\")\n"]