2022-04-09 21:31:55.162219 """
You are given a string S consisting of digits between 1 and 9, inclusive.
You can insert the letter + into some of the positions (possibly none) between two letters in this string.
Here, + must not occur consecutively after insertion.
All strings that can be obtained in this way can be evaluated as formulas.
Evaluate all possible formulas, and print the sum of the results.

-----Constraints-----
 - 1 \leq |S| \leq 10
 - All letters in S are digits between 1 and 9, inclusive.

-----Input-----
The input is given from Standard Input in the following format:
S

-----Output-----
Print the sum of the evaluated value over all possible formulas.

-----Sample Input-----
125

-----Sample Output-----
176

There are 4 formulas that can be obtained: 125, 1+25, 12+5 and 1+2+5. When each formula is evaluated,
 - 125
 - 1+25=26
 - 12+5=17
 - 1+2+5=8
Thus, the sum is 125+26+17+8=176.
"""
2022-04-09 21:31:55.162239 --------------------------
2022-04-09 21:32:13.381932 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649554315,
  "id": "cmpl-4vGihEeaqiLcz7oWg4q5GfzLUWpjD",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:32:13.382203 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:32:13.382244 REASON stop
2022-04-09 21:32:13.383984 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:32:13.384058 REASON stop
