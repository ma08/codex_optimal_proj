2022-04-16 00:42:33.802317 num operations 1
2022-04-16 00:42:33.802334 size on input set 1
2022-04-16 00:42:35.340598 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650069753,
  "object": "edit"
}
2022-04-16 00:42:35.340879 fix syntax errors 3 ["\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S):\n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:42:35.340910 size on output set 2
2022-04-16 00:42:35.340920 num operations 1
2022-04-16 00:42:35.340955 size on input set 1
2022-04-16 00:42:37.483834 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input().strip()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(calc, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "from itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\n\ndef solve():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650069755,
  "object": "edit"
}
2022-04-16 00:42:37.484053 fix syntax errors 3 ["#!/usr/bin/env python3\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input().strip()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(calc, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "from itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\n\ndef solve():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:42:37.484089 size on output set 3
