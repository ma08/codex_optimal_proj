["\n\nO = input(\"\")\nE = input(\"\")\n\n# if the length of O is larger than E, then add a blank character to E\nif len(O) > len(E):\n    E = E + \" \"\n\n# initialize the final password\npassword = \"\"\n\n# for each character in O, append the character and the next character in E\nfor i in range(len(O)):\n    password = password + O[i] + E[i]\n\n# print the password\nprint(password)\n", "o = input()\ne = input()\n\nans = \"\"\nfor i in range(len(o)):\n    ans += o[i]\n    if i < len(e):\n        ans += e[i]\n\nprint(ans)\n", "\n\no = input()\ne = input()\nans = \"\"\nfor i in range(len(o)):\n    ans += o[i]\n    if i < len(e):\n        ans += e[i]\n\nprint(ans)\n", "\no = input()\ne = input()\n\nans = \"\"\nfor i in range(len(o)):\n    ans += o[i]\n    if i < len(e):\n        ans += e[i]\n\nprint(ans)\n", "\nO = input()\nE = input()\n\n# if the length of O is larger than E, then add a blank character to E\nif len(O) > len(E):\n    E = E + \" \"\n\n# initialize the final password\npassword = \"\"\n\n# for each character in O, append the character and the next character in E\nfor i in range(len(O)):\n    password = password + O[i] + E[i]\n\n# print the password\nprint(password)\n", "\n\nO = input()  # odd characters\nE = input()  # even characters\n\n# if the length of O is larger than E, then add a blank character to E\nif len(O) > len(E):\n    E = E + \" \"\n\n# initialize the final password\npassword = \"\"\n\n# for each character in O, append the character and the next character in E\nfor i in range(len(O)):\n    password = password + O[i] + E[i]\n\n# print the password\nprint(password)\n"]