2022-04-16 02:20:31.211349 num operations 1
2022-04-16 02:20:31.211366 size on input set 1
2022-04-16 02:20:35.454273 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# a = sys.stdin.readline().strip()\n# b = sys.stdin.readline().strip()\n# c = sys.stdin.readline().strip()\n\na = 'North'\nb = 'East'\nc = 'North'\n\n\n\ndef get_index(d):\n    return directions.index(d)\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = get_index(a)\n    j = get_index(b)\n    k = get_index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1650075631,
  "object": "edit"
}
2022-04-16 02:20:35.454493 fix syntax errors 3 ['\n\nimport sys\n\n# a = sys.stdin.readline().strip()\n# b = sys.stdin.readline().strip()\n# c = sys.stdin.readline().strip()\n\na = \'North\'\nb = \'East\'\nc = \'North\'\n\n\n\ndef get_index(d):\n    return directions.index(d)\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = get_index(a)\n    j = get_index(b)\n    k = get_index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n', '\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = \'South\'\n# b = \'West\'\n# c = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n', '\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = \'South\'\n# b = \'West\'\n# c = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n']
2022-04-16 02:20:35.454525 size on output set 2
2022-04-16 02:20:35.454539 num operations 1
2022-04-16 02:20:35.454544 size on input set 1
2022-04-16 02:20:38.820841 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\nx = int(input())\nprint(x)\n"
    }
  ],
  "created": 1650075635,
  "object": "edit"
}
2022-04-16 02:20:38.821030 fix syntax errors 3 ['\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North"):\n    print("Yes")\nelse:\n    print("No")\n', '\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North"):\n    print("Yes")\nelse:\n    print("No")\n', '\nx = int(input())\nprint(x)\n']
2022-04-16 02:20:38.821055 size on output set 2
2022-04-16 02:20:38.821075 num operations 1
2022-04-16 02:20:38.821080 size on input set 1
2022-04-16 02:20:42.727406 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    a, b, c = input().split()\n    if b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and (c == \"East\" or c == \"South\"):\n        print(\"Yes\")\n    elif b == \"East\" and (c == \"West\" or c == \"South\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    a = int(a)\n    a, b, c = input().split()\n    if b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and (c == \"East\" or c == \"South\"):\n        print(\"Yes\")\n    elif b == \"East\" and (c == \"West\" or c == \"South\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(a + b + c)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075638,
  "object": "edit"
}
2022-04-16 02:20:42.727618 fix syntax errors 3 ['\ndef main():\n    a, b, c = input().split()\n    if b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and (c == "East" or c == "South"):\n        print("Yes")\n    elif b == "East" and (c == "West" or c == "South"):\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    a = int(a)\n    a, b, c = input().split()\n    if b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and (c == "East" or c == "South"):\n        print("Yes")\n    elif b == "East" and (c == "West" or c == "South"):\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n', "\n\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(a + b + c)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:20:42.727646 size on output set 3
2022-04-16 02:20:42.727657 num operations 1
2022-04-16 02:20:42.727662 size on input set 1
2022-04-16 02:20:51.641170 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\")):\n        print(\"Yes\")\n    elif((a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075642,
  "object": "edit"
}
2022-04-16 02:20:51.641449 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East")):\n        print("Yes")\n    elif((a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:20:51.641485 size on output set 3
2022-04-16 02:20:51.641495 num operations 1
2022-04-16 02:20:51.641500 size on input set 1
2022-04-16 02:20:56.619384 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    a, b, c = input().split()\n    if b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    a, b = input().split()\n    if a == \"H\":\n        if b == \"H\":\n            print(\"H\")\n        else:\n            print(\"D\")\n    elif a == \"D\":\n        if b == \"H\":\n            print(\"D\")\n        else:\n            print(\"H\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    a, b, c = input().split() \n    if b == \"West\" and c == \"East\":\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075651,
  "object": "edit"
}
2022-04-16 02:20:56.619569 fix syntax errors 3 ['\n\ndef main():\n    a, b, c = input().split()\n    if b == "West" and c == "East" or b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South" or b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    a, b = input().split()\n    if a == "H":\n        if b == "H":\n            print("H")\n        else:\n            print("D")\n    elif a == "D":\n        if b == "H":\n            print("D")\n        else:\n            print("H")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    a, b, c = input().split() \n    if b == "West" and c == "East":\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 02:20:56.619598 size on output set 3
2022-04-16 02:20:56.619608 num operations 1
2022-04-16 02:20:56.619613 size on input set 1
2022-04-16 02:21:03.075339 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or \\\n        (a == \"South\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or \\\n        (a == \"East\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")) or \\\n        (a == \"West\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or \\\n        (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or \\\n        (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or \\\n        (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650075656,
  "object": "edit"
}
2022-04-16 02:21:03.075561 fix syntax errors 3 ['\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or (a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n', '\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East") or (b == "East" and c == "West")) or \\\n        (a == "South" and (b == "West" and c == "East") or (b == "East" and c == "West")) or \\\n        (a == "East" and (b == "North" and c == "South") or (b == "South" and c == "North")) or \\\n        (a == "West" and (b == "North" and c == "South") or (b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n', 'import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or \\\n        (a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or \\\n        (a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or \\\n        (a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-16 02:21:03.075603 size on output set 3
2022-04-16 02:21:03.075617 num operations 1
2022-04-16 02:21:03.075623 size on input set 1
2022-04-16 02:21:04.664749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(a)\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\nprint(a)\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 2,
      "text": "\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1650075663,
  "object": "edit"
}
2022-04-16 02:21:04.665016 fix syntax errors 3 ['\nprint(a)\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\'):\n    print("No")\nelse:\n    print("Yes")\n', '\nprint(a)\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\'):\n    print("No")\nelse:\n    print("Yes")\n', '\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\'):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-16 02:21:04.665040 size on output set 2
2022-04-16 02:21:04.665050 num operations 1
2022-04-16 02:21:04.665055 size on input set 1
2022-04-16 02:21:18.434551 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\na, b, c = input().split() # 3\u3064\u306e\u5165\u529b\u3092\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u308a\u3001a,b,c\u306b\u4ee3\u5165\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"): # a\u3068b\u304c\u9006\u65b9\u5411\u306a\u3089\n    print(\"No\") # No\u3092\u51fa\u529b\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"): # b\u3068c\u304c\u9006\u65b9\u5411\u306a\u3089\n    print(\"No\") # No\u3092\u51fa\u529b\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\na, b, c = input().split() #split input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"): #if a and b cancel each other out\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"): #if b and c cancel each other out\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1650075664,
  "object": "edit"
}
2022-04-16 02:21:18.434746 fix syntax errors 3 ['\n\n#-----main-----\na, b, c = input().split() # 3つの入力をスペースで区切り、a,b,cに代入\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"): # aとbが逆方向なら\n    print("No") # Noを出力\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"): # bとcが逆方向なら\n    print("No") # Noを出力\nelse:\n    print("Yes")\n', '\n\n#-----main-----\na, b, c = input().split() #split input\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"): #if a and b cancel each other out\n    print("No")\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"): #if b and c cancel each other out\n    print("No")\nelse:\n    print("Yes")\n', '\n\n# -----main-----\na, b, c = input().split()\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"):\n    print("No")\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-16 02:21:18.434796 size on output set 3
