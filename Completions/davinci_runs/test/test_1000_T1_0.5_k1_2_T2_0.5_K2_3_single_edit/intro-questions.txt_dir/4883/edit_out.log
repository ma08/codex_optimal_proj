2022-04-16 02:22:04.042529 num operations 1
2022-04-16 02:22:04.042546 size on input set 1
2022-04-16 02:22:11.670591 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print('no')\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0]))\n        while q:\n            i, c1, c2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2:\n                    print('yes')\n                    break\n                else:\n                    print('no')\n                    break\n            if (i, c1, c2) in visited:\n                continue\n            visited.add((i, c1, c2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1]))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = input().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0]))\n        while q:\n            i, c1, c2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2:\n                    print(\"yes\")\n                    break\n                else:\n                    print(\"no\")\n                    break\n            if (i, c1, c2) in visited:\n                continue\n            visited.add((i, c1, c2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1]))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = input().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0], False, False))\n        while q:\n            i, c1, c2, t1, t2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2 and (t1 or t2):\n                    print(\"yes\")\n                    break\n                else:\n                    print(\"no\")\n                    break\n            if (i, c1, c2, t1, t2) in visited:\n                continue\n            visited.add((i, c1, c2, t1, t2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1], t1, t2))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2, True, t2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c, t1, True))\n\nmain()\n"
    }
  ],
  "created": 1650075724,
  "object": "edit"
}
2022-04-16 02:22:11.670823 fix syntax errors 3 ["\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print('no')\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0]))\n        while q:\n            i, c1, c2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2:\n                    print('yes')\n                    break\n                else:\n                    print('no')\n                    break\n            if (i, c1, c2) in visited:\n                continue\n            visited.add((i, c1, c2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1]))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c))\n\nmain()\n", '\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = input().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0]))\n        while q:\n            i, c1, c2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2:\n                    print("yes")\n                    break\n                else:\n                    print("no")\n                    break\n            if (i, c1, c2) in visited:\n                continue\n            visited.add((i, c1, c2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1]))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c))\n\nmain()\n', '\n\nfrom collections import defaultdict\nimport sys\nfrom collections import deque\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = defaultdict(set)\n    for _ in range(m):\n        a, b = input().split()\n        d[a].add(b)\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        a = list(a)\n        b = list(b)\n        q = deque()\n        visited = set()\n        q.append((0, a[0], b[0], False, False))\n        while q:\n            i, c1, c2, t1, t2 = q.popleft()\n            if i == len(a) - 1:\n                if c1 == c2 and (t1 or t2):\n                    print("yes")\n                    break\n                else:\n                    print("no")\n                    break\n            if (i, c1, c2, t1, t2) in visited:\n                continue\n            visited.add((i, c1, c2, t1, t2))\n            if c1 == c2:\n                q.append((i + 1, a[i + 1], b[i + 1], t1, t2))\n            else:\n                if c1 in d:\n                    for c in d[c1]:\n                        q.append((i, c, c2, True, t2))\n                if c2 in d:\n                    for c in d[c2]:\n                        q.append((i, c1, c, t1, True))\n\nmain()\n']
2022-04-16 02:22:11.670924 size on output set 3
2022-04-16 02:22:11.670938 num operations 1
2022-04-16 02:22:11.670944 size on input set 1
2022-04-16 02:22:14.051929 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes):\n            print(\"yes\")\n        else:\n            print(\"no\")\n\ndef translate(word, codes):\n    res = \"\"\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes)\n            print(\"yes\")\n        else:\n            print(\"no\")\n\ndef translate(word, codes):\n    res = \"\"\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes):\n            print(\"yes\")\n        else:\n            print(\"no\")\n\ndef translate(word, codes):\n    res = \"\"\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075731,
  "object": "edit"
}
2022-04-16 02:22:14.052188 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes):\n            print("yes")\n        else:\n            print("no")\n\ndef translate(word, codes):\n    res = ""\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes)\n            print("yes")\n        else:\n            print("no")\n\ndef translate(word, codes):\n    res = ""\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    codes = {}\n    for i in range(m):\n        line = sys.stdin.readline().split()\n        codes[line[0]] = line[1]\n    for i in range(n):\n        line = sys.stdin.readline().split()\n        if translate(line[0], codes) == translate(line[1], codes):\n            print("yes")\n        else:\n            print("no")\n\ndef translate(word, codes):\n    res = ""\n    for char in word:\n        if char in codes:\n            res += codes[char]\n        else:\n            res += char\n    return res\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:22:14.052224 size on output set 3
2022-04-16 02:22:14.052235 num operations 1
2022-04-16 02:22:14.052240 size on input set 1
2022-04-16 02:22:15.690890 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = dict()\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print('no')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print('yes')\n        else:\n            print('no')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = {}\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print('no')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print('yes')\n        else:\n            print('no')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = dict()\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print('no')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print('yes')\n        else:\n            print('no')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075734,
  "object": "edit"
}
2022-04-16 02:22:15.691084 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = dict()\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print(\'no\')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print(\'yes\')\n        else:\n            print(\'no\')\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = {}\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print(\'no\')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print(\'yes\')\n        else:\n            print(\'no\')\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    m, n = map(int, input().split())\n    d = dict()\n    for _ in range(m):\n        a, b = input().split()\n        d[a] = b\n    for _ in range(n):\n        a, b = input().split()\n        if len(a) != len(b):\n            print(\'no\')\n            continue\n        flag = True\n        for i in range(len(a)):\n            if a[i] not in d or b[i] not in d or d[a[i]] != b[i]:\n                flag = False\n                break\n        if flag:\n            print(\'yes\')\n        else:\n            print(\'no\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:22:15.691119 size on output set 3
2022-04-16 02:22:15.691142 num operations 1
2022-04-16 02:22:15.691147 size on input set 1
2022-04-16 02:22:25.310889 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    m, n = [int(x) for x in raw_input().split()]\n    translations = {}\n    for i in range(m):\n        a, b = raw_input().split()\n        translations[a] = b\n    for i in range(n):\n        a, b = raw_input().split()\n        match = True\n        if len(a) != len(b):\n            match = False\n        else:\n            for j in range(len(a)):\n                if a[j] not in translations and a[j] != b[j]:\n                    match = False\n                    break\n                elif a[j] in translations and translations[a[j]] != b[j]:\n                    match = False\n                    break\n        if match:\n            print(\"yes\")\n        else:\n            print(\"no\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n\tm, n = [int(x) for x in input().split()]\n\ttranslations = {}\n\tfor i in range(m):\n\t\ta, b = input().split()\n\t\ttranslations[a] = b\n\tfor i in range(n):\n\t\ta, b = input().split()\n\t\tmatch = True\n\t\tif len(a) != len(b):\n\t\t\tmatch = False\n\t\telse:\n\t\t\tfor j in range(len(a)):\n\t\t\t\tif a[j] not in translations and a[j] != b[j]:\n\t\t\t\t\tmatch = False\n\t\t\t\t\tbreak\n\t\t\t\telif a[j] in translations and translations[a[j]] != b[j]:\n\t\t\t\t\tmatch = False\n\t\t\t\t\tbreak\n\t\tif match:\n\t\t\tprint(\"yes\")\n\t\telse:\n\t\t\tprint(\"no\")\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075735,
  "object": "edit"
}
2022-04-16 02:22:25.311068 fix syntax errors 3 ['\n\ndef main():\n    m, n = [int(x) for x in raw_input().split()]\n    translations = {}\n    for i in range(m):\n        a, b = raw_input().split()\n        translations[a] = b\n    for i in range(n):\n        a, b = raw_input().split()\n        match = True\n        if len(a) != len(b):\n            match = False\n        else:\n            for j in range(len(a)):\n                if a[j] not in translations and a[j] != b[j]:\n                    match = False\n                    break\n                elif a[j] in translations and translations[a[j]] != b[j]:\n                    match = False\n                    break\n        if match:\n            print("yes")\n        else:\n            print("no")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n\tm, n = [int(x) for x in input().split()]\n\ttranslations = {}\n\tfor i in range(m):\n\t\ta, b = input().split()\n\t\ttranslations[a] = b\n\tfor i in range(n):\n\t\ta, b = input().split()\n\t\tmatch = True\n\t\tif len(a) != len(b):\n\t\t\tmatch = False\n\t\telse:\n\t\t\tfor j in range(len(a)):\n\t\t\t\tif a[j] not in translations and a[j] != b[j]:\n\t\t\t\t\tmatch = False\n\t\t\t\t\tbreak\n\t\t\t\telif a[j] in translations and translations[a[j]] != b[j]:\n\t\t\t\t\tmatch = False\n\t\t\t\t\tbreak\n\t\tif match:\n\t\t\tprint("yes")\n\t\telse:\n\t\t\tprint("no")\n\nif __name__ == \'__main__\':\n\tmain()\n', "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:22:25.311180 size on output set 3
2022-04-16 02:22:25.311192 num operations 1
2022-04-16 02:22:25.311197 size on input set 1
2022-04-16 02:22:27.447765 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = [int(x) for x in input().split()]\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n"
    },
    {
      "index": 1,
      "text": "\n\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = input().split()\nm = int(m)\nn = int(n)\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n"
    },
    {
      "index": 2,
      "text": "\n\n\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = [int(x) for x in input().split()]\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n"
    }
  ],
  "created": 1650075745,
  "object": "edit"
}
2022-04-16 02:22:27.447984 fix syntax errors 3 ["\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = [int(x) for x in input().split()]\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n", "\n\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = input().split()\nm = int(m)\nn = int(n)\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n", "\n\n\n# Translation\ntrans_dict = {}\n\n# Input\nm, n = [int(x) for x in input().split()]\nfor _ in range(m):\n    a, b = input().split()\n    if a not in trans_dict:\n        trans_dict[a] = []\n    trans_dict[a].append(b)\n\nfor _ in range(n):\n    w1, w2 = input().split()\n    if len(w1) != len(w2):\n        print('no')\n        continue\n    # Check if words match\n    for a, b in zip(w1, w2):\n        if a in trans_dict:\n            if b not in trans_dict[a]:\n                print('no')\n                break\n        elif a != b:\n            print('no')\n            break\n    else:\n        print('yes')\n"]
2022-04-16 02:22:27.448021 size on output set 3
2022-04-16 02:22:27.448033 num operations 1
2022-04-16 02:22:27.448038 size on input set 1
2022-04-16 02:22:30.754315 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b]\n        else:\n            d[a].append(b)\n    for i in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        a = list(a)\n        b = list(b)\n        for i in range(len(a)):\n            if a[i] in d:\n                if b[i] in d[a[i]]:\n                    continue\n                else:\n                    print(\"no\")\n                    break\n            else:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b]\n        else:\n            d[a].append(b)\n    for j in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        a = list(a)\n        b = list(b)\n        for k in range(len(a)):\n            if a[k] in d:\n                if b[k] in d[a[k]]:\n                    continue\n                else:\n                    print(\"no\")\n                    break\n            else:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b] # {'a': ['b']}\n        else:\n            d[a].append(b)\n    for i in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        a = list(a)\n        b = list(b)\n        for i in range(len(a)):\n            if a[i] in d:\n                if b[i] in d[a[i]]:\n                    continue\n                else:\n                    print(\"no\")\n                    break\n            else:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    }
  ],
  "created": 1650075747,
  "object": "edit"
}
2022-04-16 02:22:30.754523 fix syntax errors 3 ['\n\n\nimport sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b]\n        else:\n            d[a].append(b)\n    for i in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        a = list(a)\n        b = list(b)\n        for i in range(len(a)):\n            if a[i] in d:\n                if b[i] in d[a[i]]:\n                    continue\n                else:\n                    print("no")\n                    break\n            else:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n', 'import sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b]\n        else:\n            d[a].append(b)\n    for j in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        a = list(a)\n        b = list(b)\n        for k in range(len(a)):\n            if a[k] in d:\n                if b[k] in d[a[k]]:\n                    continue\n                else:\n                    print("no")\n                    break\n            else:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n', 'import sys\n\ndef main():\n    m, n = map(int, sys.stdin.readline().split())\n    d = {}\n    for i in range(m):\n        a, b = sys.stdin.readline().split()\n        if a not in d:\n            d[a] = [b] # {\'a\': [\'b\']}\n        else:\n            d[a].append(b)\n    for i in range(n):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        a = list(a)\n        b = list(b)\n        for i in range(len(a)):\n            if a[i] in d:\n                if b[i] in d[a[i]]:\n                    continue\n                else:\n                    print("no")\n                    break\n            else:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n']
2022-04-16 02:22:30.754654 size on output set 3
2022-04-16 02:22:30.754672 num operations 1
2022-04-16 02:22:30.754679 size on input set 1
2022-04-16 02:22:34.431557 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2]\n        translations[lines[i][2]] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print(\"no\")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print(\"no\")\n                            break\n                    else:\n                        print(\"no\")\n                        break\n                else:\n                    continue\n            else:\n                print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2].strip()\n        translations[lines[i][2].strip()] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print(\"no\")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print(\"no\")\n                            break\n                    else:\n                        print(\"no\")\n                        break\n                else:\n                    continue\n            else:\n                print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2].strip()\n        translations[lines[i][2].strip()] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print(\"no\")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print(\"no\")\n                            break\n                    else:\n                        print(\"no\")\n                        break\n                else:\n                    continue\n            else:\n                print(\"yes\")\n\nmain()\n"
    }
  ],
  "created": 1650075750,
  "object": "edit"
}
2022-04-16 02:22:34.431749 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2]\n        translations[lines[i][2]] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print("no")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print("no")\n                            break\n                    else:\n                        print("no")\n                        break\n                else:\n                    continue\n            else:\n                print("yes")\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2].strip()\n        translations[lines[i][2].strip()] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print("no")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print("no")\n                            break\n                    else:\n                        print("no")\n                        break\n                else:\n                    continue\n            else:\n                print("yes")\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    m = int(lines[0].split()[0])\n    n = int(lines[0].split()[1])\n    translations = {}\n    for i in range(1, m+1):\n        translations[lines[i][0]] = lines[i][2].strip()\n        translations[lines[i][2].strip()] = lines[i][0]\n    for i in range(m+1, m+1+n):\n        word1 = lines[i].split()[0]\n        word2 = lines[i].split()[1]\n        if len(word1) != len(word2):\n            print("no")\n            continue\n        else:\n            for j in range(len(word1)):\n                if word1[j] != word2[j]:\n                    # Try to translate\n                    if word1[j] in translations:\n                        if translations[word1[j]] == word2[j]:\n                            continue\n                        else:\n                            print("no")\n                            break\n                    else:\n                        print("no")\n                        break\n                else:\n                    continue\n            else:\n                print("yes")\n\nmain()\n']
2022-04-16 02:22:34.431795 size on output set 2
2022-04-16 02:22:34.431805 num operations 1
2022-04-16 02:22:34.431810 size on input set 1
2022-04-16 02:22:38.854794 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split()) # n = number of mappings, m = number of words to check\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split() # a = original letter, b = mapped letter\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split() # a = original word, b = mapped word\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()[:2]\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()[:2]\n        if len(a) != len(b):\n            print(\"no\")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print(\"no\")\n                break\n        else:\n            print(\"yes\")\n\nmain()\n"
    }
  ],
  "created": 1650075754,
  "object": "edit"
}
2022-04-16 02:22:38.855086 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split()) # n = number of mappings, m = number of words to check\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split() # a = original letter, b = mapped letter\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split() # a = original word, b = mapped word\n        if len(a) != len(b):\n            print("no")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()\n        if len(a) != len(b):\n            print("no")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lookup = {}\n    for _ in range(n):\n        a, b = sys.stdin.readline().split()[:2]\n        lookup[a] = b\n    for _ in range(m):\n        a, b = sys.stdin.readline().split()[:2]\n        if len(a) != len(b):\n            print("no")\n            continue\n        for i in range(len(a)):\n            if a[i] not in lookup or lookup[a[i]] != b[i]:\n                print("no")\n                break\n        else:\n            print("yes")\n\nmain()\n']
2022-04-16 02:22:38.855124 size on output set 3
