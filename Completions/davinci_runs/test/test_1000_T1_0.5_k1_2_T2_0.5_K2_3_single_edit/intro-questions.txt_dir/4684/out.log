2022-04-09 21:28:04.492504 """
AtCoDeer has three cards, one red, one green and one blue.

An integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.

We will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.

Is this integer a multiple of 4?  

-----Constraints-----
 - 1 ≤ r, g, b ≤ 9

-----Input-----
Input is given from Standard Input in the following format:
r g b

-----Output-----
If the three-digit integer is a multiple of 4, print YES (case-sensitive); otherwise, print NO.

-----Sample Input-----
4 3 2

-----Sample Output-----
YES

432 is a multiple of 4, and thus YES should be printed.
"""
2022-04-09 21:28:04.492529 --------------------------
2022-04-09 21:28:13.305532 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    r, g, b = map(int, input().split())\n    num = r * 100 + g * 10 + b\n    if num % 4 == 0:\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nr,g,b = map(int, input().split())\n\nprint('YES' if (r*100+g*10+b) % 4 == 0 else 'NO')"
    }
  ],
  "created": 1649554084,
  "id": "cmpl-4vGeycKzCf4693o81RJOB3TAoFGJJ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:28:13.305814 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    r, g, b = map(int, input().split())\n    num = r * 100 + g * 10 + b\n    if num % 4 == 0:\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:28:13.305855 REASON stop
2022-04-09 21:28:13.307536 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nr,g,b = map(int, input().split())\n\nprint('YES' if (r*100+g*10+b) % 4 == 0 else 'NO')"
}
2022-04-09 21:28:13.307651 REASON stop
