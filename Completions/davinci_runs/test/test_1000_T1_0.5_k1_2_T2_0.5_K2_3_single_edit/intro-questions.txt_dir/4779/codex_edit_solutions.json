["#!/bin/python3\nif __name__ == '__main__':\n    n = int(input())\n    arr = [int(input()) for i in range(n)]\n    arr.sort()\n    res = arr[0]*arr[0]*(sum(arr[1:]))\n    for i in range(1,n):\n        res = max(res, sum(arr[:i])*sum(arr[i:]))\n    print(res)\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    input_list = [int(sys.stdin.readline()) for _ in range(n)]\n    input_list.sort()\n    max_val = float('-inf')\n    for i in range(n):\n        if i == 0:\n            max_val = max(max_val, input_list[i] * sum(input_list[i + 1:]))\n        elif i == n - 1:\n            max_val = max(max_val, input_list[i] * sum(input_list[:i]))\n        else:\n            max_val = max(max_val, input_list[i] * sum(input_list[:i]) + input_list[i] * sum(input_list[i + 1:]))\n    print(max_val)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = []\n    for i in range(n):\n        a.append(int(sys.stdin.readline().strip()))\n    a.sort()\n    sum_sq = 0\n    sum_lin = 0\n    for i in range(n):\n        if i < (n//2):\n            sum_sq += a[i]**2\n        else:\n            sum_lin += a[i]\n    print(sum_sq*sum_lin)\n    \nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport bisect\n\ndef main():\n    n = int(sys.stdin.readline())\n    input = [int(sys.stdin.readline()) for _ in range(n)]\n    input.sort()\n    max_val = float('-inf')\n    for i in range(n):\n        if i == 0:\n            max_val = max(max_val, input[i] * sum(input[i + 1:]))\n        elif i == n - 1:\n            max_val = max(max_val, input[i] * sum(input[:i]))\n        else:\n            max_val = max(max_val, input[i] * sum(input[:i]) + input[i] * sum(input[i + 1:]))\n    print(max_val)\n\nif __name__ == '__main__':\n    main()\n", "\n\n#%%\nn = int(input())\narr = [int(input()) for i in range(n)]\n\narr.sort()\nres = arr[0]*arr[0]*(sum(arr[1:]))\nfor i in range(1,n):\n\n    res = max(res, sum(arr[:i])*sum(arr[i:]))\nprint(res)\n", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n\n    N = int(input().strip())\n    A = list(map(int, [input().strip() for _ in range(N)]))\n    A.sort()\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # is maximized when ak+1 + ... + an is maximized\n    # and a1^2 + ... + ak^2 is minimized\n    # which is when a1 ... ak are the smallest numbers\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^2 + ... + ak^2) * (a1 + ... + ak)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^3 + ... + ak^3)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an - a1 - ... - ak)\n    # = (a1^2 + ... + ak^2) * (an - ak)\n\n    # a1^2 + ... + ak^2 is minimized when a1 ... ak are the smallest numbers\n    # an - ak is maximized when an is the largest number and ak is the smallest number\n\n    # so we can use the largest and smallest numbers\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n    # = a1^2 + ... + an^2 - (n - k) * an^2\n    # = (k - (n - k)) * an^2\n\n    # so the answer is (k - (n - k)) * an^2 * (an - a1)\n\n    # we can use the largest and smallest numbers\n    # (k - (n - k)) * an^2 * (an - a1)\n\n    print((N - 1) * A[-1]**2 * (A[-1] - A[0]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n\n    N = int(input().strip())\n    A = list(map(int, [input().strip() for _ in range(N)]))\n    A.sort()\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # is maximized when ak+1 + ... + an is maximized\n    # and a1^2 + ... + ak^2 is minimized\n    # which is when a1 ... ak are the smallest numbers\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^2 + ... + ak^2) * (a1 + ... + ak)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^3 + ... + ak^3)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an - a1 - ... - ak)\n    # = (a1^2 + ... + ak^2) * (an - ak)\n\n    # a1^2 + ... + ak^2 is minimized when a1 ... ak are the smallest numbers\n    # an - ak is maximized when an is the largest number and ak is the smallest number\n\n    # so we can use the largest and smallest numbers\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n    # = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n    # = a1^2 + ... + an^2 - (an+1^2 + ... + an^2)\n    # = a1^2 + ... + an^2 - (an^2 + ... + an^2)\n    # = a1^2 + ... + an^2 - (n - k) * an^2\n    # = a1^2 + ... + an^2 - (n - k) * an^2\n    # = (k - (n - k)) * an^2\n\n    # so the answer is (k - (n - k)) * an^2 * (an - a1)\n\n    # we can use the largest and smallest numbers\n    # (k - (n - k)) * an^2 * (an - a1)\n\n    print((N - 1) * A[-1]**2 * (A[-1] - A[0]))\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\n\na.sort()\n\ns1 = 0\ns2 = 0\nfor i in range(len(a)):\n    if i < len(a) / 2:\n        s1 += a[i]**2\n    else:\n        s2 += a[i]\n\nprint(s1 * s2)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = []\n    for i in range(n):\n        a.append(int(sys.stdin.readline()))\n    a.sort()\n    ans = 0\n    cur = 0\n    for i in range(n):\n        cur += a[i]\n        ans = max(ans, cur * a[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n\n    N = int(input().strip())\n    A = list(map(int, [input().strip() for _ in range(N)]))\n    A.sort()\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # is maximized when ak+1 + ... + an is maximized\n    # and a1^2 + ... + ak^2 is minimized\n    # which is when a1 ... ak are the smallest numbers\n\n    # (a1^2 + ... + ak^2) * (ak+1 + ... + an)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^2 + ... + ak^2) * (a1 + ... + ak)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an) - (a1^3 + ... + ak^3)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an - a1 - ... - ak)\n    # = (a1^2 + ... + ak^2) * (a1 + ... + an - a1 - ... - ak)\n    # = (a1^2 + ... + ak^2) * (an - ak)\n    # = (a1^2 + ... + ak^2) * (an - ak)\n\n    # a1^2 + ... + ak^2 is minimized when a1 ... ak are the smallest numbers\n    # an - ak is maximized when an is the largest number and ak is the smallest number\n\n    # so we can use the largest and smallest numbers\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n\n    # a1^2 + ... + ak^2 = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n    # = a1^2 + ... + an^2 - (an+1^2 + ... + ak^2)\n    # = a1^2 + ... + an^2 - (an+1^2 + ... + an^2)\n    # = a1^2 + ... + an^2 - (an^2 + ... + an^2)\n    # = a1^2 + ... + an^2 - (n - k) * an^2 - (n - k) * an^2\n    # = (k - (n - k)) * an^2\n\n    # so the answer is (k - (n - k)) * an^2 * (an - a1)\n\n    # we can use the largest and smallest numbers\n    # (k - (n - k)) * an^2 * (an - a1)\n\n    print((N - 1) * A[-1]**2 * (A[-1] - A[0]))\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\na = []\n\nfor _ in range(n):\n    a.append(int(input()))\n\na.sort()\n\nmax_value = 0\n\nfor i in range(n):\n    current_value = a[i]**2 * (sum(a[i+1:]) + a[i])\n    if current_value > max_value:\n        max_value = current_value\n\nprint(max_value)\n", "\nprint(\"hello world!\")\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    a = []\n    for i in range(n):\n        a.append(int(sys.stdin.readline().strip()))\n    a.sort()\n    sum_sq = 0\n    sum_lin = 0\n    for i in range(n):\n        if i < (n//2):\n            sum_sq += a[i]**2\n        else:\n            sum_lin += a[i]\n    print(sum_sq*sum_lin)\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input())\n\na.sort()\n\ns1 = 0\ns2 = 0\nfor i in range(len(a)):\n    if i < len(a) / 2:\n        s1 += a[i] ** 2\n    else:\n        s2 += a[i]\n\nprint(s1 * s2)\n", "\n\nn = int(input(\"Enter the number of elements: \"))\n\na = []\n\nfor _ in range(n):\n    a.append(int(input(\"Enter the element: \")))\n\na.sort()\n\nmax_value = 0\n\nfor i in range(n):\n    current_value = a[i]**2 * (sum(a[i+1:]) + a[i])\n    if current_value > max_value:\n        max_value = current_value\n\nprint(max_value)\n", "\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = []\n    for i in range(n):\n        a.append(int(sys.stdin.readline()))\n    a.sort()\n    ans = 0\n    cur = 0\n    for i in range(n):\n        cur += a[i]\n        ans = max(ans, cur * a[i])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#%%\n#%%\nn = int(input())\narr = [int(input()) for i in range(n)]\n\narr.sort()\nres = arr[0]*arr[0]*(sum(arr[1:]))\nfor i in range(1,n):\n    res = max(res, sum(arr[:i])*sum(arr[i:]))\nprint(res)\n", "\nprint(int(input())**2)\n", "\n\nimport sys\n\n\ndef main():\n    input = sys.stdin.readline().strip()\n    print(input)\n\n\nif __name__ == '__main__':\n    main()\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    input = [int(sys.stdin.readline()) for _ in range(n)]\n    print(input)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = []\n    for i in range(n):\n        a.append(int(sys.stdin.readline()))\n    a.sort()\n    ans = 0\n    cur = 0\n    for i in range(n):\n        cur += a[i]\n        ans = max(ans, cur * a[i])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\na = int(input())\nb = int(input())\nc = int(input())\nx = int(input())\ncount = 0\nfor i in range(a+1):\n    for j in range(b+1):\n        for k in range(c+1):\n            if (500*i + 100*j + 50*k) == x:\n                count+=1\nprint(count)\n"]