["\nimport math\n\na, b, x = map(int, input().split())\n\nif a % x == 0:\n    print(math.floor(b / x) - math.floor(a / x) + 1)\nelse:\n    print(math.floor(b / x) - math.floor(a / x))\n", "\nimport math\n\n\ndef solve(a, b, x):\n    return b // x - (a - 1) // x\n\n\ndef main():\n    a, b, x = map(int, input().split())\n    print(solve(a, b, x))\n\n\ndef test():\n    assert solve(3, 10, 3) == 3\n    assert solve(4, 10, 3) == 3\n    assert solve(4, 10, 5) == 2\n    assert solve(4, 10, 7) == 1\n    assert solve(4, 10, 10) == 1\n    assert solve(4, 10, 11) == 0\n    assert solve(1, 1000000000, 1) == 1000000000\n    assert solve(1, 1000000000, 1000000000) == 1\n\n\nif __name__ == \"__main__\":\n    test()\n    main()\n", "\n\na, b, x = map(int, input().split())\nif a == 0:\n    print(b // x + 1)\nelse:\n    print(b // x - (a - 1) // x)\n", "\nimport math\n\na, b, x = map(int, input().split())\n\nif a % x == 0:\n    print(math.floor(b/x) - math.floor(a/x) + 1) \nelse:\n    print(math.floor(b/x) - math.floor(a/x))\n", "# -*- coding: utf-8 -*-\n\nimport math\n\na, b, x = map(int, input().split())\n\nif a % x == 0:\n    print(math.floor(b/x) - math.floor(a/x) + 1)\nelse:\n    print(math.floor(b/x) - math.floor(a/x))\n", "\n\na, b, x = map(int, input().split())\n\nprint(b // x - (a - 1) // x)  # b // x - (a - 1) // x = 2 - 0 = 2\n"]