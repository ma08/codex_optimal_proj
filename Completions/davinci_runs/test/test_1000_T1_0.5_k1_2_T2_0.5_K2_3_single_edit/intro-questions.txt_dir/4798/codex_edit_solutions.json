["\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n\nmain()\n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n\n    main()\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]).capitalize())\n\nif __name__ == \"__main__\":\n    main()\n", "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\nprint(''.join(names))\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]) + \"!\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n\n# fix syntax errors\nprint(input().replace('-',''))\n", "print(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nfull = input().split(\"-\")\nprint(full[0][0] + \"\".join([i[0] for i in full[1:]]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n", "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    sys.stdout.write(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            sys.stdout.write(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=' ')\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace('-','')) \n", "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input(\"Enter a string: \")\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print(end=\"\")\n\nmain()\n", "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n", "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]).upper())\n", "\n\n# names = input()\n\n# names = names.split('-')\n# for i in range(len(names)):\n#     names[i] = names[i][0]\n\n# print(''.join(names))\n\n# \n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(numbers)\n\n# \n\n# numbers = [int(x) for x in input().split()]\n\n# print(numbers)\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers) + min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split()[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\n\nfor _ in range(n):\n    names = input()\n\n    names = names.split('-')\n    for i in range(len(names)):\n        names[i] = names[i][0]\n\n    print(''.join(names))\n", "\n\nprint(input().replace('-', ''))\n"]