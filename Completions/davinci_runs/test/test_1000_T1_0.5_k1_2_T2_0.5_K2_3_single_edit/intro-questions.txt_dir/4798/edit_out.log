2022-04-16 01:34:02.363884 num operations 1
2022-04-16 01:34:02.363919 size on input set 1
2022-04-16 01:34:36.242930 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nfor _ in range(n):\n    names = input()\n\n    names = names.split('-')\n    for i in range(len(names)):\n        names[i] = names[i][0]\n\n    print(''.join(names))\n"
    },
    {
      "index": 1,
      "text": "\n\n# names = input()\n\n# names = names.split('-')\n# for i in range(len(names)):\n#     names[i] = names[i][0]\n\n# print(''.join(names))\n\n# \n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(numbers)\n\n# \n\n# numbers = [int(x) for x in input().split()]\n\n# print(numbers)\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers) + min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n"
    },
    {
      "index": 2,
      "text": "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\nprint(''.join(names))\n"
    }
  ],
  "created": 1650072842,
  "object": "edit"
}
2022-04-16 01:34:36.243178 fix syntax errors 3 ["\n\nn = int(input())\n\nfor _ in range(n):\n    names = input()\n\n    names = names.split('-')\n    for i in range(len(names)):\n        names[i] = names[i][0]\n\n    print(''.join(names))\n", "\n\n# names = input()\n\n# names = names.split('-')\n# for i in range(len(names)):\n#     names[i] = names[i][0]\n\n# print(''.join(names))\n\n# \n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(numbers)\n\n# \n\n# numbers = [int(x) for x in input().split()]\n\n# print(numbers)\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(max(numbers) + min(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n\n# n = int(input())\n# numbers = []\n\n# for i in range(n):\n#     numbers.append(int(input()))\n\n# print(sum(numbers) / len(numbers))\n\n#\n", "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\nprint(''.join(names))\n"]
2022-04-16 01:34:36.243348 size on output set 3
2022-04-16 01:34:36.243362 num operations 1
2022-04-16 01:34:36.243368 size on input set 1
2022-04-16 01:34:38.038290 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(input().replace('-','')) \n"
    },
    {
      "index": 2,
      "text": "\n\n\n\n# fix syntax errors\nprint(input().replace('-',''))\n"
    }
  ],
  "created": 1650072876,
  "object": "edit"
}
2022-04-16 01:34:38.038481 fix syntax errors 3 ["\n\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-','')) \n", "\n\n\n\n# fix syntax errors\nprint(input().replace('-',''))\n"]
2022-04-16 01:34:38.038499 size on output set 3
2022-04-16 01:34:38.038508 num operations 1
2022-04-16 01:34:38.038513 size on input set 1
2022-04-16 01:34:40.675319 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=' ')\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    sys.stdout.write(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            sys.stdout.write(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650072878,
  "object": "edit"
}
2022-04-16 01:34:40.675515 fix syntax errors 3 ['\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1])\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\' \')\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    sys.stdout.write(line[0])\n    for i in range(len(line)):\n        if line[i] == "-":\n            sys.stdout.write(line[i+1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:34:40.675541 size on output set 3
2022-04-16 01:34:40.675551 num operations 1
2022-04-16 01:34:40.675557 size on input set 1
2022-04-16 01:34:43.659530 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input(\"Enter a string: \")\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650072880,
  "object": "edit"
}
2022-04-16 01:34:43.659710 fix syntax errors 3 ['\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n\n    main()\n', '\n\ndef main():\n    """Main function"""\n    input_string = input("Enter a string: ")\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:34:43.659735 size on output set 3
2022-04-16 01:34:43.659745 num operations 1
2022-04-16 01:34:43.659750 size on input set 1
2022-04-16 01:34:46.407686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]).upper())\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n"
    },
    {
      "index": 2,
      "text": "\n\nfull = input().split(\"-\")\nprint(full[0][0] + \"\".join([i[0] for i in full[1:]]))\n"
    }
  ],
  "created": 1650072883,
  "object": "edit"
}
2022-04-16 01:34:46.407929 fix syntax errors 3 ['\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]).upper())\n', '#!/usr/bin/env python3\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]))\n', '\n\nfull = input().split("-")\nprint(full[0][0] + "".join([i[0] for i in full[1:]]))\n']
2022-04-16 01:34:46.407953 size on output set 3
2022-04-16 01:34:46.407966 num operations 1
2022-04-16 01:34:46.407972 size on input set 1
2022-04-16 01:34:49.049535 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split()[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]) + \"!\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]).capitalize())\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650072886,
  "object": "edit"
}
2022-04-16 01:34:49.049737 fix syntax errors 3 ['\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split()[1:]]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]) + "!")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]).capitalize())\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:34:49.049760 size on output set 3
2022-04-16 01:34:49.049770 num operations 1
2022-04-16 01:34:49.049780 size on input set 1
2022-04-16 01:34:50.554446 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print(end=\"\")\n\nmain()\n"
    }
  ],
  "created": 1650072889,
  "object": "edit"
}
2022-04-16 01:34:50.554618 fix syntax errors 3 ['\n\ndef main():\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n\nmain()\n', '\n\ndef main():\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n\nmain()\n', '\n\ndef main():\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print(end="")\n\nmain()\n']
2022-04-16 01:34:50.554639 size on output set 2
2022-04-16 01:34:50.554649 num operations 1
2022-04-16 01:34:50.554733 size on input set 1
2022-04-16 01:34:53.460583 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n"
    },
    {
      "index": 2,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    }
  ],
  "created": 1650072890,
  "object": "edit"
}
2022-04-16 01:34:53.460766 fix syntax errors 3 ["print(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"]
2022-04-16 01:34:53.460785 size on output set 3
