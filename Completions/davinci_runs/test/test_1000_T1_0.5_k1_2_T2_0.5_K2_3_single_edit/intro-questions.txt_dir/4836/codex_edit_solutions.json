["\n\ndef main(): \n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import deque, defaultdict\n\nn, m = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))  # weights of each cow\nmax_cows = defaultdict(int)  # max cows for each weight\n\nfor weight in weights:\n    for w in max_cows.keys():\n        if w + weight <= m:\n            max_cows[w + weight] = max(max_cows[w + weight], max_cows[w] + 1)\n    max_cows[weight] = max(max_cows[weight], 1)\nprint(max(max_cows.values()))\n", "\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\nn, c = map(int, sys.stdin.readline().split())\nw = list(map(int, sys.stdin.readline().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n", "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = list(map(int, sys.stdin.readline().split()))\n    weights.sort()\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n", "\n\n# -----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n", "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n", "\n\ndef main():\n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c: c -= fruits[i]; eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, c = map(int, input().split())  # n: \u500b\u6570 c: \u30ad\u30e3\u30d1\n    w = list(map(int, input().split()))  # w: \u91cd\u3055\n    fruits = sorted(w)  # w\u3092\u30bd\u30fc\u30c8\u3057\u305f\u30ea\u30b9\u30c8\n\n    i = 0  # \u73fe\u5728\u306e\u8981\u7d20\n    total = 0  # \u73fe\u5728\u306e\u91cd\u3055\n    while i < n:  # \u500b\u6570\u5206\u30eb\u30fc\u30d7\n        if total + fruits[i] <= c:  # \u30ad\u30e3\u30d1\u3092\u8d85\u3048\u306a\u3044\u5834\u5408\n            total += fruits[i]  # \u91cd\u3055\u3092\u52a0\u3048\u308b\n            i += 1  # \u8981\u7d20\u3092\u30ab\u30a6\u30f3\u30c8\n        else:\n            break\n\n    print(i)  # \u500b\u6570\u3092\u51fa\u529b\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n", "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n", "\n", "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())  # n = \uace0\uc591\uc774\uc758 \uc218, c = \uc0ac\ub8cc\uc758 \uc591\nweights = deque(map(int, stdin.readline().split()))  # \uace0\uc591\uc774\ub4e4\uc758 \ubab8\ubb34\uac8c\n\neaten = set()  # \uc0ac\ub8cc\ub97c \uba39\uc740 \uace0\uc591\uc774\ub4e4\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n", "#!/usr/bin/env python3\n\n\ndef main():\n    n, c = map(int, input().split())\n    fruits = list(map(int, input().split()))\n\n    # create a set of unique fruits\n    unique_fruits = set()\n\n    # iterate over the fruits\n    for fruit in fruits:\n        # if the fruit is not in the set and we have enough capacity\n        # add the fruit to the set\n        if fruit not in unique_fruits and c - fruit >= 0:\n            unique_fruits.add(fruit)\n            c -= fruit\n\n    # print the number of unique fruits\n    print(len(unique_fruits))\n\n\nif __name__ == '__main__':\n    main()\n", "\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n", "\n\ndef main():\n    n, c = map(int, input().split()) # n: \u500b\u6570 c: \u5bb9\u91cf\n    w = list(map(int, input().split())) # \u91cd\u3055\n    fruits = sorted(w) # \u91cd\u3055\u3067\u30bd\u30fc\u30c8\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN, C = map(int, input().split())\n#N, C = 5, 5\nw = list(map(int, input().split()))\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n", "import sys\n\ndef main():\n    n, c = map(int, sys.stdin.readline().split())\n    fruits = [int(x) for x in sys.stdin.readline().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ns = input()\n"]