["\n\ndef solve(n):\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()]\n        v = (d - prev_d) / (t - prev_t)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    return int(max_v)\n\ndef main():\n    n = int(input())\n    print(solve(n))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    #print(times)\n    #print(distances)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    #print(speeds)\n    print(int(max(speeds)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [None] * n\n    distances = [None] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()] # \u0447\u0442\u0435\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\n    max_speed = 0 # \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = dist_diff / time_diff\n            if speed > max_speed: # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / float(time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n    \nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()]\n        v = (d - prev_d) / (t - prev_t)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    print(int(max_v))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(n)\n    n = int(input())\n    prev_t = 0\n    prev_d = 0\n    max_v = 0\n    for i in range(n):\n        t, d = [int(x) for x in input().split()]\n        v = (t - prev_t) / (d - prev_d)\n        print(v)\n        if v > max_v:\n            max_v = v\n        prev_t = t\n        prev_d = d\n    print(int(max_v))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n    # input\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n    # process\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) // (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n    # output\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) // (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n - 1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i])\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    times = []\n    dists = []\n    for i in range(n):\n        line = input().split()\n        times.append(int(line[0]))\n        dists.append(int(line[1]))\n\n    max_speed = 0\n    for i in range(1, n):\n        speed = (dists[i] - dists[i - 1]) / (times[i] - times[i - 1])\n        if speed > max_speed:\n            max_speed = speed\n\n    print(max_speed)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        x, y = map(int, sys.stdin.readline().strip().split())\n        road.append((x, y))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    times = []\n    distances = []\n    for i in range(n):\n        t, d = map(int, stdin.readline().split())\n        times.append(t)\n        distances.append(d)\n    max_speed = 0\n    for i in range(n-1):\n        speed = (distances[i+1]-distances[i])/(times[i+1]-times[i]+1)\n        if speed > max_speed:\n            max_speed = speed\n    print(max_speed)\n\nmain()\n", "import sys\ndef main():\n    n = int(sys.stdin.readline().strip())\n    road = []\n\n    for i in range(n):\n        t, d = map(int, sys.stdin.readline().strip().split())\n        road.append((t, d))\n\n    max_speed = 0\n    for i in range(1, n):\n        max_speed = max(max_speed, (road[i][1] - road[i - 1][1]) / (road[i][0] - road[i - 1][0]))\n\n    print(int(max_speed))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n  n = int(sys.stdin.readline())\n  times = [0] * n\n  distances = [0] * n\n  for i in range(n):\n    times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n  max_speed = 0\n  for i in range(n):\n    for j in range(i+1, n):\n      time_diff = times[j] - times[i]\n      dist_diff = distances[j] - distances[i]\n      speed = dist_diff / time_diff\n      if speed > max_speed:\n        max_speed = speed\n\n  print(max_speed)\n\nif __name__ == '__main__':\n  main()\n", "\nfrom sys import stdin\n\ndef main():\n    pass\n\nmain()\n", "\n\ndef main():\n    \"\"\"\n    input:\n        n: number of photographs\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(float, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds)))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [0] * n\n    distances = [0] * n\n    for i in range(n):\n        times[i], distances[i] = [int(x) for x in sys.stdin.readline().split()]\n\n    max_speed = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            time_diff = times[j] - times[i]\n            dist_diff = distances[j] - distances[i]\n            speed = float(dist_diff) / time_diff\n            if speed > max_speed:\n                max_speed = speed\n\n    print(max_speed)\n\nif __name__ == '__main__':\n    main()\n", "\nimport datetime\nimport sys\n\n    #start = datetime.datetime.now()\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    #print(times)\n    #print(distances)\n    speeds = [0.0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    #print(speeds)\n    print(int(max(speeds)))\n\n    #print(datetime.datetime.now() - start)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds)))\n\nif __name__ == \"__main__\":\n    main()\n", "\"\"\"\nCalculate the maximum speed of a car during a race.\n\"\"\"\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    max_speed = 0\n    prev_time = 0\n    prev_dist = 0\n    for i in range(n):\n        time, dist = map(int, sys.stdin.readline().strip().split())\n        speed = (dist - prev_dist) / (time - prev_time)\n        if speed > max_speed:\n            max_speed = speed\n        prev_time, prev_dist = time, dist\n    print(int(max_speed))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = []\n    distances = []\n    for i in range(n):\n        [t, d] = [int(x) for x in sys.stdin.readline().split()]\n        times.append(t)\n        distances.append(d)\n    print(times)\n    print(distances)\n    speeds = [0 for x in range(n)]\n    for i in range(n-1):\n        speeds[i] = (distances[i+1] - distances[i]) / (times[i+1] - times[i])\n    print(speeds)\n    print(int(max(speeds)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    \"\"\"\n    input:\n        n: number of photographs\n        t: time in hours\n        d: distance in miles\n    output:\n        max speed in mph\n    \"\"\"\n    n = int(input())\n    speeds = []\n    for _ in range(n):\n        t, d = map(int, input().split())\n        speeds.append(d / t)\n    print(int(max(speeds)))\n\nif __name__ == \"__main__\":\n    main()\n"]