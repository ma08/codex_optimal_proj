["\n\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h)[::-1])\n\nfor i in range(k):\n    print(heapq.heappop(h))\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = range(a, b + 1)\n    x = sorted(x)\n    print(*x[:k])\n    print(*x[-k:])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b+1))\n    print(*x[:k], sep='\\n')\n    print(*x[-k:], sep='\\n')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = list(range(a, b+1))\n    x = sorted(x)\n    print(' '.join(map(str, x[:k])))\n    print(' '.join(map(str, x[-k:])))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(h.pop(-1))\n", "import heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n"]