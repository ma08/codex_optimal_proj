["\nimport sys\nimport math\n \nn = int(input())\n \na = list(map(int, input().split()))\n \na.sort()\n \nans = 0\n \nfor i in range(n-1):\n    ans += (a[i+1] - a[i]) * (i+1) * (n-i-1)\n \nprint(ans * 2)\n", "\n\nimport sys\n\nfor line in sys.stdin:\n    # Get input\n    pieces = [int(x) for x in line.split()]\n\n    # Check if each piece is in the correct quantity\n    print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n", "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn, sep=\" \")\n\nmain()\n", "\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn, sep=' ')\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    # Get input\n    pieces = [int(x) for x in sys.stdin.readline().split()]\n\n    # Check if each piece is in the correct quantity\n    print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if i == 0:\n            print(1 - num, end=\" \")\n        elif i == 1:\n            print(1 - num, end=\" \")\n        elif i == 2:\n            print(2 - num, end=\" \")\n        elif i == 3:\n            print(2 - num, end=\" \")\n        elif i == 4:\n            print(2 - num, end=\" \")\n        else:\n            print(8 - num)\n\n\nmain()\n", "\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]  # read list of integers\n# print(count)\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")  # print difference of lists\n\n# print(pieces[0])\n", "\ndef main():\n    input = [int(x) for x in input().split()]\n    for i, num in enumerate(input):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n", "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n", "\n\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n", "\n\npcs = [int(x) for x in input().split()] # input of numbers\n\nfor i in range(len(pcs)): # iterate through the list\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n", "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n    # Output the result\n    print(\"1 0 0 0 0 1\")\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n", "\n\ndef main():\n    numbers = [int(x) for x in input().split()]\n    for i, num in enumerate(numbers):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n", "\npieces = [1, 1, 2, 2, 2, 8]  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u0433\u0443\u0440 \u043d\u0430 \u0434\u043e\u0441\u043a\u0435\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n", "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n", "\n\npieces = list(map(int, input().split()))  # input the number of pieces of each type\n\nfor i in range(6):  # print the number of required pieces\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "\n\ndef main():\n    # Read the input\n    # pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 0 1\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\npieces = [1, 1, 2, 2, 2, 8]  # number of pieces\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")  # print the number of pieces needed\n"]