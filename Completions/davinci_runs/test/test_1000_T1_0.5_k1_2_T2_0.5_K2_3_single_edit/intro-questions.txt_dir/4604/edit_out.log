2022-04-16 00:27:07.232431 num operations 1
2022-04-16 00:27:07.232447 size on input set 1
2022-04-16 00:27:29.561484 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the number of ways to order the people\n# and the number of people we have ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    num_ways[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list to keep track of the number of people we have ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = A.index(0)\n\n    # Add this person to the ordered list and remove them from the list of people to order\n    num_ways[num_ordered] = i\n    num_ordered += 1\n    A = [x - 1 if x > i else x for x in A]\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    # Read from standard input\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n\n    # Check if each person's report is consistent with the others\n    for i in range(N):\n        if abs(i - A[i]) > 1:\n            print(0)\n            sys.exit()\n\n    # Initialize a list of the number of people to the left of each person\n    # and the number of people to the right of each person\n    left = [0] * N\n    right = [0] * N\n\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                left[i] += A[j]\n            elif j > i:\n                left[i] += (N - 1 - A[j])\n\n    # Count the number of people to the right of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                right[i] += (N - 1 - A[j])\n            elif j > i:\n                right[i] += A[j]\n\n    # Initialize a list to keep track of the number of ways to order the people\n    # and the number of people we have ordered\n    num_ways = [0] * N\n    num_ordered = 0\n\n    # Order the people\n    while num_ordered < N:\n        # Find the first person that has not been ordered\n        i = left.index(0)\n\n        # Add this person to the ordered list\n        num_ways[num_ordered] = i + 1\n        num_ordered += 1\n\n        # Subtract the number of people to the left of this person from everyone else\n        for j in range(N):\n            left[j] -= A[i]\n            right[j] -= (N - 1 - A[i])\n\n        # Remove this person from the list\n        left[i] = -1\n        right[i] = -1\n\n    # Print the number of ways to order the people\n    print(num_ways[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650068827,
  "object": "edit"
}
2022-04-16 00:27:29.561713 fix syntax errors 3 ["#\n\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the number of ways to order the people\n# and the number of people we have ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    num_ways[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n", "\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list to keep track of the number of people we have ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = A.index(0)\n\n    # Add this person to the ordered list and remove them from the list of people to order\n    num_ways[num_ordered] = i\n    num_ordered += 1\n    A = [x - 1 if x > i else x for x in A]\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n", "\nimport sys\n\ndef main():\n    # Read from standard input\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n\n    # Check if each person's report is consistent with the others\n    for i in range(N):\n        if abs(i - A[i]) > 1:\n            print(0)\n            sys.exit()\n\n    # Initialize a list of the number of people to the left of each person\n    # and the number of people to the right of each person\n    left = [0] * N\n    right = [0] * N\n\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                left[i] += A[j]\n            elif j > i:\n                left[i] += (N - 1 - A[j])\n\n    # Count the number of people to the right of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                right[i] += (N - 1 - A[j])\n            elif j > i:\n                right[i] += A[j]\n\n    # Initialize a list to keep track of the number of ways to order the people\n    # and the number of people we have ordered\n    num_ways = [0] * N\n    num_ordered = 0\n\n    # Order the people\n    while num_ordered < N:\n        # Find the first person that has not been ordered\n        i = left.index(0)\n\n        # Add this person to the ordered list\n        num_ways[num_ordered] = i + 1\n        num_ordered += 1\n\n        # Subtract the number of people to the left of this person from everyone else\n        for j in range(N):\n            left[j] -= A[i]\n            right[j] -= (N - 1 - A[i])\n\n        # Remove this person from the list\n        left[i] = -1\n        right[i] = -1\n\n    # Print the number of ways to order the people\n    print(num_ways[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:27:29.561854 size on output set 3
2022-04-16 00:27:29.561873 num operations 1
2022-04-16 00:27:29.561880 size on input set 1
2022-04-16 00:27:31.296431 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(*s)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\nprint(\"\\n\".join(map(str, s)))\n"
    }
  ],
  "created": 1650068849,
  "object": "edit"
}
2022-04-16 00:27:31.296689 fix syntax errors 3 ['\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(*s)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\nprint("\\n".join(map(str, s)))\n']
2022-04-16 00:27:31.296734 size on output set 3
