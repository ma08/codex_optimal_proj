2022-04-16 01:00:30.231837 num operations 1
2022-04-16 01:00:30.231856 size on input set 1
2022-04-16 01:00:35.266991 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# C: capacity of train\n# n: number of stations\n# s: number of people that left the train\n# e: number of people that entered the train\n# w: number of people that had to stay at a station\nC, n = [int(x) for x in input().split()]\n\nfor i in range(n):\n    s, e, w = [int(x) for x in input().split()]\n    if i == 0:\n        # first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n - 1:\n        # last station\n        if s > C or e > 0 or w > 0:\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        # middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint(\"possible\")\n"
    },
    {
      "index": 1,
      "text": "\n\n#C: capacity of train\n#n: number of stations\n#s: number of people that left the train\n#e: number of people that entered the train\n#w: number of people that had to stay at a station\nC, n = map(int, input().split())\n\nfor i in range(n):\n    s, e, w = map(int, input().split())\n    if i == 0:\n        #first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n-1:\n        #last station\n        if s > C or e > 0 or w > 0:\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        #middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint(\"possible\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# C: capacity of train\n# n: number of stations\n# s: number of people that left the train\n# e: number of people that entered the train\n# w: number of people that had to stay at a station\nC, n = [int(x) for x in input().split()]\n\nfor i in range(n):\n    s, e, w = [int(x) for x in input().split()]\n    if i == 0:\n        # first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n - 1:\n        # last station\n        if s > C or e > 0 or w > 0:\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        # middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print(\"impossible\")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint(\"possible\")\n"
    }
  ],
  "created": 1650070830,
  "object": "edit"
}
2022-04-16 01:00:35.267430 fix syntax errors 3 ['\n\n# C: capacity of train\n# n: number of stations\n# s: number of people that left the train\n# e: number of people that entered the train\n# w: number of people that had to stay at a station\nC, n = [int(x) for x in input().split()]\n\nfor i in range(n):\n    s, e, w = [int(x) for x in input().split()]\n    if i == 0:\n        # first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n - 1:\n        # last station\n        if s > C or e > 0 or w > 0:\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        # middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint("possible")\n', '\n\n#C: capacity of train\n#n: number of stations\n#s: number of people that left the train\n#e: number of people that entered the train\n#w: number of people that had to stay at a station\nC, n = map(int, input().split())\n\nfor i in range(n):\n    s, e, w = map(int, input().split())\n    if i == 0:\n        #first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n-1:\n        #last station\n        if s > C or e > 0 or w > 0:\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        #middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint("possible")\n', '\n\n# C: capacity of train\n# n: number of stations\n# s: number of people that left the train\n# e: number of people that entered the train\n# w: number of people that had to stay at a station\nC, n = [int(x) for x in input().split()]\n\nfor i in range(n):\n    s, e, w = [int(x) for x in input().split()]\n    if i == 0:\n        # first station\n        if s > 0 or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C -= e\n            continue\n    if i == n - 1:\n        # last station\n        if s > C or e > 0 or w > 0:\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            continue\n    else:\n        # middle station\n        if s > C or e > C or w > C or (w > 0 and e > 0):\n            print("impossible")\n            exit(0)\n        else:\n            C += s\n            C -= e\n            continue\n\nprint("possible")\n']
2022-04-16 01:00:35.267595 size on output set 2
2022-04-16 01:00:35.267622 num operations 1
2022-04-16 01:00:35.267630 size on input set 1
2022-04-16 01:00:39.371562 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"Train problem\"\"\"\n    cap, sta = map(int, input().split())\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"Train\"\"\"\n    cap, sta = map(int, input().split())  # capacity, stations\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())  # left, enter, wait\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:  # impossible\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:  # impossible\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    \"\"\"Train\"\"\"\n    cap, sta = map(int, input().split())\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650070835,
  "object": "edit"
}
2022-04-16 01:00:39.371760 fix syntax errors 3 ['\n\ndef main():\n    """Train problem"""\n    cap, sta = map(int, input().split())\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """Train"""\n    cap, sta = map(int, input().split())  # capacity, stations\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())  # left, enter, wait\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:  # impossible\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:  # impossible\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """Train"""\n    cap, sta = map(int, input().split())\n    flag = 0\n    for _ in range(sta):\n        lft, ent, wait = map(int, input().split())\n        if cap - lft + ent < 0 or cap - lft + ent - wait < 0:\n            flag = 1\n            break\n        cap = cap - lft + ent - wait\n    if flag == 1:\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:00:39.371886 size on output set 3
2022-04-16 01:00:39.371899 num operations 1
2022-04-16 01:00:39.371904 size on input set 1
2022-04-16 01:00:44.184010 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in range(len(nums)):\n        curr -= nums[i][0]\n        if curr < 0 or curr + nums[i][1] > cap or (curr + nums[i][1] < cap and nums[i][2] != 0) or (i == len(nums) - 1 and nums[i][2] != 0):\n            print(\"impossible\")\n            return\n        curr += nums[i][1]\n    print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in range(len(nums)):\n        curr -= nums[i][0]\n        if curr < 0 or curr + nums[i][1] > cap or (curr + nums[i][1] < cap and nums[i][2] != 0) or (i == len(nums) - 1 and nums[i][2] != 0):\n            print(\"impossible\")\n            return\n        curr += nums[i][1]\n    print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in nums:\n        curr -= i[0]\n        if curr < 0 or curr + i[1] > cap or (curr + i[1] < cap and i[2] != 0) or (nums.index(i) == len(nums) - 1 and i[2] != 0):\n            print(\"impossible\")\n            return\n        curr += i[1]\n    print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650070839,
  "object": "edit"
}
2022-04-16 01:00:44.184199 fix syntax errors 3 ['#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in range(len(nums)):\n        curr -= nums[i][0]\n        if curr < 0 or curr + nums[i][1] > cap or (curr + nums[i][1] < cap and nums[i][2] != 0) or (i == len(nums) - 1 and nums[i][2] != 0):\n            print("impossible")\n            return\n        curr += nums[i][1]\n    print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '\n#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in range(len(nums)):\n        curr -= nums[i][0]\n        if curr < 0 or curr + nums[i][1] > cap or (curr + nums[i][1] < cap and nums[i][2] != 0) or (i == len(nums) - 1 and nums[i][2] != 0):\n            print("impossible")\n            return\n        curr += nums[i][1]\n    print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/python\nimport sys\n\ndef main():\n    inp = sys.stdin.read().splitlines()\n    cap, n = [int(x) for x in inp[0].split()]\n    nums = [[int(x) for x in x.split()] for x in inp[1:]]\n    curr = 0\n    for i in nums:\n        curr -= i[0]\n        if curr < 0 or curr + i[1] > cap or (curr + i[1] < cap and i[2] != 0) or (nums.index(i) == len(nums) - 1 and i[2] != 0):\n            print("impossible")\n            return\n        curr += i[1]\n    print("possible")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 01:00:44.184235 size on output set 3
2022-04-16 01:00:44.184244 num operations 1
2022-04-16 01:00:44.184249 size on input set 1
2022-04-16 01:00:46.889303 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    cap, _ = map(int, input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap <= 0:\n            print(\"impossible\")\n            return\n    print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    cap, _ = map(int, raw_input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, raw_input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap == 0:\n            print(\"impossible\")\n            return\n    print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"main\"\"\"\n    cap, _ = map(int, input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap <= 0:\n            print(\"impossible\")\n            return\n    print(\"possible\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650070844,
  "object": "edit"
}
2022-04-16 01:00:46.889605 fix syntax errors 3 ['\n\ndef main():\n    """main"""\n    cap, _ = map(int, input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap <= 0:\n            print("impossible")\n            return\n    print("possible")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """main"""\n    cap, _ = map(int, raw_input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, raw_input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap == 0:\n            print("impossible")\n            return\n    print("possible")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """main"""\n    cap, _ = map(int, input().split())\n    for _ in range(int(input())):\n        left, entered, waited = map(int, input().split())\n        cap += left\n        cap -= entered\n        if cap < 0 or waited > 0 and cap <= 0:\n            print("impossible")\n            return\n    print("possible")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:00:46.889647 size on output set 2
2022-04-16 01:00:46.889659 num operations 1
2022-04-16 01:00:46.889665 size on input set 1
2022-04-16 01:00:49.426125 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0 or min(passengers) < 0:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0:  # noqa\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650070846,
  "object": "edit"
}
2022-04-16 01:00:49.426424 fix syntax errors 3 ['\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0 or min(passengers) < 0:\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0:  # noqa\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    passengers = [0]\n    for i in range(num_stations):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left)\n    if passengers[-1] != 0 or max(passengers) > capacity or min(passengers) < 0:\n        print("impossible")\n    else:\n        print("possible")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 01:00:49.426468 size on output set 3
2022-04-16 01:00:49.426482 num operations 1
2022-04-16 01:00:49.426490 size on input set 1
2022-04-16 01:01:03.983371 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\"\"\"\nfile: file.py\ndescription: file\nauthor: mali\ndate: 2020-03-21\n\"\"\"\n\nimport sys\n\ndef possible(C, n, stations):\n    \"\"\"\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]]) == \"possible\"\n    True\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]]) == \"impossible\"\n    True\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]]) == \"impossible\"\n    True\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]]) == \"possible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]]) == \"possible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]]) == \"impossible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]]) == \"impossible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]]) == \"impossible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]]) == \"impossible\"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]]) == \"impossible\"\n    True\n    \"\"\"\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return \"impossible\"\n        if stations[i][0] > C:\n            return \"impossible\"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return \"impossible\"\n    return \"possible\"\n\nif __name__ == \"__main__\":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef possible(C, n, stations):\n    \"\"\"\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]])\n    possible\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]])\n    impossible\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]])\n    impossible\n    \"\"\"\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return \"impossible\"\n        if stations[i][0] > C:\n            return \"impossible\"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return \"impossible\"\n    return \"possible\"\n\nif __name__ == \"__main__\":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef possible(C, n, stations):\n    \"\"\"\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]])\n    possible\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]])\n    impossible\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]])\n    impossible\n    \"\"\"\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return \"impossible\"\n        if stations[i][0] > C:\n            return \"impossible\"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return \"impossible\"\n    return \"possible\"\n\nif __name__ == \"__main__\":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n"
    }
  ],
  "created": 1650070849,
  "object": "edit"
}
2022-04-16 01:01:03.983590 fix syntax errors 3 ['#!/usr/bin/env python3\n"""\nfile: file.py\ndescription: file\nauthor: mali\ndate: 2020-03-21\n"""\n\nimport sys\n\ndef possible(C, n, stations):\n    """\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]]) == "possible"\n    True\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]]) == "impossible"\n    True\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]]) == "impossible"\n    True\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]]) == "possible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]]) == "possible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]]) == "impossible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]]) == "impossible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]]) == "impossible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]]) == "impossible"\n    True\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]]) == "impossible"\n    True\n    """\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return "impossible"\n        if stations[i][0] > C:\n            return "impossible"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return "impossible"\n    return "possible"\n\nif __name__ == "__main__":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n', '#!/usr/bin/python3\n\nimport sys\n\ndef possible(C, n, stations):\n    """\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]])\n    possible\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]])\n    impossible\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]])\n    impossible\n    """\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return "impossible"\n        if stations[i][0] > C:\n            return "impossible"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return "impossible"\n    return "possible"\n\nif __name__ == "__main__":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef possible(C, n, stations):\n    """\n    >>> possible(1, 2, [[0, 1, 1], [1, 0, 0]])\n    possible\n    >>> possible(1, 2, [[1, 0, 0], [0, 1, 0]])\n    impossible\n    >>> possible(1, 2, [[0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(2, 4, [[0, 1, 0], [0, 1, 0], [1, 0, 0], [0, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 0]])\n    possible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [1, 0, 1], [1, 0, 0]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [1, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 0, 1]])\n    impossible\n    >>> possible(1, 3, [[0, 1, 0], [0, 1, 0], [0, 1, 1]])\n    impossible\n    """\n    for i in range(n):\n        if stations[i][2] > 0 and stations[i][1] > 0:\n            return "impossible"\n        if stations[i][0] > C:\n            return "impossible"\n        if stations[i][2] > 0 and stations[i][0] + stations[i][1] < C:\n            return "impossible"\n    return "possible"\n\nif __name__ == "__main__":\n    C, n = map(int, sys.stdin.readline().split())\n    stations = [list(map(int, sys.stdin.readline().split())) for i in range(n)]\n    print(possible(C, n, stations))\n']
2022-04-16 01:01:03.983713 size on output set 3
2022-04-16 01:01:03.983730 num operations 1
2022-04-16 01:01:03.983736 size on input set 1
2022-04-16 01:01:07.084509 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split())\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left + waited)\n    print(\"possible\" if all(0 <= x <= C for x in passengers) else \"impossible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split()) # C = capacity, n = number of stops\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split()) # left = people who left, entered = people who entered, waited = people who waited\n        passengers.append(passengers[-1] + entered - left + waited)\n    print(\"possible\" if all([0 <= x <= C for x in passengers]) else \"impossible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split())\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left + waited)\n    print(\"possible\" if all([0 <= x <= C for x in passengers]) else \"impossible\") \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650070864,
  "object": "edit"
}
2022-04-16 01:01:07.084716 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split())\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left + waited)\n    print("possible" if all(0 <= x <= C for x in passengers) else "impossible")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split()) # C = capacity, n = number of stops\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split()) # left = people who left, entered = people who entered, waited = people who waited\n        passengers.append(passengers[-1] + entered - left + waited)\n    print("possible" if all([0 <= x <= C for x in passengers]) else "impossible")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    C, n = map(int, input().split())\n    passengers = [0]\n    for _ in range(n):\n        left, entered, waited = map(int, input().split())\n        passengers.append(passengers[-1] + entered - left + waited)\n    print("possible" if all([0 <= x <= C for x in passengers]) else "impossible") \n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 01:01:07.084749 size on output set 3
2022-04-16 01:01:07.084760 num operations 1
2022-04-16 01:01:07.084766 size on input set 1
2022-04-16 01:01:11.433088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # capacity, num_stations = map(int, sys.stdin.readline().split())\n    capacity = int(input())\n    num_stations = int(input())\n    for i in range(num_stations):\n        # left, entered, waiting = map(int, sys.stdin.readline().split())\n        left, entered, waiting = map(int, input().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print(\"impossible\")\n                return\n    if people > 0:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    for i in range(num_stations):\n        left, entered, waiting = map(int, input().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print(\"impossible\", file=sys.stderr)\n                return\n    if people > 0:\n        print(\"impossible\", file=sys.stderr)\n    else:\n        print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    capacity, num_stations = map(int, sys.stdin.readline().split())\n    for i in range(num_stations):\n        left, entered, waiting = map(int, sys.stdin.readline().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print(\"impossible\")\n                return\n    if people > 0:\n        print(\"impossible\")\n    else:\n        print(\"possible\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650070867,
  "object": "edit"
}
2022-04-16 01:01:11.433276 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    # capacity, num_stations = map(int, sys.stdin.readline().split())\n    capacity = int(input())\n    num_stations = int(input())\n    for i in range(num_stations):\n        # left, entered, waiting = map(int, sys.stdin.readline().split())\n        left, entered, waiting = map(int, input().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print("impossible")\n                return\n    if people > 0:\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    capacity, num_stations = map(int, input().split())\n    for i in range(num_stations):\n        left, entered, waiting = map(int, input().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print("impossible", file=sys.stderr)\n                return\n    if people > 0:\n        print("impossible", file=sys.stderr)\n    else:\n        print("possible")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    capacity, num_stations = map(int, sys.stdin.readline().split())\n    for i in range(num_stations):\n        left, entered, waiting = map(int, sys.stdin.readline().split())\n        if i == 0:\n            people = left\n        else:\n            people += entered - left\n            if people < 0 or people > capacity or (waiting > 0 and people == capacity):\n                print("impossible")\n                return\n    if people > 0:\n        print("impossible")\n    else:\n        print("possible")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 01:01:11.433313 size on output set 3
