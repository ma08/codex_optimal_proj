["\n# sys.stdin = open('input.txt', 'r')\nimport sys\n\nN, T = map(int, sys.stdin.readline().split())\n\n# 1.\n# x = 0\n# for i in range(N):\n#     t = int(sys.stdin.readline())\n#     x = max(x, t)\n# print(x + T) # \uc2dc\uac04\ucd08\uacfc\n\n# 2.\nt = [0] * N\nfor i in range(N):\n    t[i] = int(sys.stdin.readline())\nprint(max(t) + T)\n", "import sys\n\nN, T = map(int, sys.stdin.readline().rstrip().split())\nt = list(map(int, sys.stdin.readline().rstrip().split()))\n\ntotal = 0\nstart = 0\n\nfor i in range(N):\n    if t[i] < start:\n        total += T\n    else:\n        total += T + t[i] - start\n        start = t[i]\n\nprint(total)\n", "import sys\nimport math\n\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n# 1.\n# x = 0\n# for i in range(N):\n#     t = int(sys.stdin.readline())\n#     x = max(x, t)\n# print(x + T)\n\n# 2.\nt = [0] * N\nfor i in range(N):\n    t[i] = int(sys.stdin.readline())\nprint(max(t) + T)\n", "\ndef main():\n    import sys\n    N, T = map(int, sys.stdin.readline().rstrip().split())\n    t = list(map(int, sys.stdin.readline().rstrip().split()))\n    total = 0\n    start = 0\n    for i in range(N):\n        if t[i] < start:\n            total += T\n        else:\n            total += T + t[i] - start\n            start = t[i]\n    print(total)\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\nimport sys\n\nimport sys\n\nN, T = map(int, sys.stdin.readline().rstrip().split())\nt = list(map(int, sys.stdin.readline().rstrip().split()))\n\ntotal = 0\nstart = 0\n\nfor i in range(N):\n    if t[i] < start:\n        total += T\n    else:\n        total += T + t[i] - start\n        start = t[i]\n\nprint(total)\n", "\nimport sys\n\nN, T = map(int, sys.stdin.readline().split())\n\n# 1.\n# x = 0\n# for i in range(N):\n#     t = int(sys.stdin.readline())\n#     x = max(x, t)\n# print(x + T)\n\n# 2.\nt = [0] * N\nfor i in range(N):\n    t[i] = int(sys.stdin.readline())\nprint(max(t) + T)\n"]