2022-04-16 01:33:42.555019 num operations 1
2022-04-16 01:33:42.555038 size on input set 1
2022-04-16 01:33:44.630652 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '>':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "\n#\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    }
  ],
  "created": 1650072822,
  "object": "edit"
}
2022-04-16 01:33:44.631041 fix syntax errors 3 ["\n# Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '>':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n#\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"]
2022-04-16 01:33:44.631081 size on output set 3
2022-04-16 01:33:44.631091 num operations 1
2022-04-16 01:33:44.631097 size on input set 1
2022-04-16 01:33:47.053293 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(0, len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n"
    },
    {
      "index": 1,
      "text": "\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n"
    },
    {
      "index": 2,
      "text": "\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n"
    }
  ],
  "created": 1650072824,
  "object": "edit"
}
2022-04-16 01:33:47.053476 fix syntax errors 3 ['\n\ninputString = input()\noutputString = ""\n\nfor i in range(0, len(inputString)):\n    if inputString[i] == "<":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n', '\ninputString = input()\noutputString = ""\n\nfor i in range(len(inputString)):\n    if inputString[i] == "<":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n', '\ninputString = input()\noutputString = ""\n\nfor i in range(len(inputString)):\n    if inputString[i] == "<":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n']
2022-04-16 01:33:47.053501 size on output set 2
2022-04-16 01:33:47.053510 num operations 1
2022-04-16 01:33:47.053521 size on input set 1
2022-04-16 01:33:50.817330 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n# Solution by Andrew Xing\n\ndef main():\n  input = sys.stdin.readline()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print(output)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution by Andrew Xing\n\ndef main():\n    input = raw_input()\n    output = \"\"\n    for i in range(0, len(input)):\n        if input[i] == \"<\":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n"
    }
  ],
  "created": 1650072827,
  "object": "edit"
}
2022-04-16 01:33:50.817526 fix syntax errors 3 ['\n\n# Solution by Andrew Xing\n\ndef main():\n  input = input()\n  output = ""\n  for i in range(0, len(input)):\n    if input[i] == "<":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n', '\nimport sys\n# Solution by Andrew Xing\n\ndef main():\n  input = sys.stdin.readline()\n  output = ""\n  for i in range(0, len(input)):\n    if input[i] == "<":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print(output)\n\nmain()\n', '\n\n# Solution by Andrew Xing\n\ndef main():\n    input = raw_input()\n    output = ""\n    for i in range(0, len(input)):\n        if input[i] == "<":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n']
2022-04-16 01:33:50.817553 size on output set 3
2022-04-16 01:33:50.817563 num operations 1
2022-04-16 01:33:50.817568 size on input set 1
2022-04-16 01:33:52.461168 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    s = input().strip()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650072830,
  "object": "edit"
}
2022-04-16 01:33:52.461351 fix syntax errors 3 ['\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == \'<\':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print("".join(s_list))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    s = input().strip()\n    s_list = []\n    for i in s:\n        if i == \'<\':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print("".join(s_list))\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == \'<\':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print("".join(s_list))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 01:33:52.461377 size on output set 2
2022-04-16 01:33:52.461386 num operations 1
2022-04-16 01:33:52.461393 size on input set 1
2022-04-16 01:33:54.662299 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    string = sys.stdin.readline()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    string = raw_input()\n    stack = []\n    for c in string:\n        if c == '<':\n            if len(stack) > 0:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    }
  ],
  "created": 1650072832,
  "object": "edit"
}
2022-04-16 01:33:54.662598 fix syntax errors 3 ["\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    string = sys.stdin.readline()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n\ndef main():\n    string = raw_input()\n    stack = []\n    for c in string:\n        if c == '<':\n            if len(stack) > 0:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"]
2022-04-16 01:33:54.662626 size on output set 3
2022-04-16 01:33:54.662636 num operations 1
2022-04-16 01:33:54.662641 size on input set 1
2022-04-16 01:33:56.754402 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    s = sys.stdin.readline()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650072834,
  "object": "edit"
}
2022-04-16 01:33:56.754644 fix syntax errors 3 ['import sys\n\ndef main():\n    s = sys.stdin.readline()\n    print(s.replace("<", ""))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", ""))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", "").replace(">", ""))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:33:56.754671 size on output set 3
2022-04-16 01:33:56.754683 num operations 1
2022-04-16 01:33:56.754689 size on input set 1
2022-04-16 01:33:58.876088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\nline = input()\noutput = \"\"\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n"
    }
  ],
  "created": 1650072836,
  "object": "edit"
}
2022-04-16 01:33:58.876274 fix syntax errors 3 ['# Solution\nline = input()\noutput = ""\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n', '\n\n# Solution \n\nline = input()\n\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n', '\n# Solution\nline = input()\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n']
2022-04-16 01:33:58.876299 size on output set 3
2022-04-16 01:33:58.876311 num operations 1
2022-04-16 01:33:58.876316 size on input set 1
2022-04-16 01:34:01.715340 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "input = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n"
    },
    {
      "index": 2,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think the only way to do it with a list is to make a new list\n# and copy the old list in, then remove the special characters\n# I think this is less efficient\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n"
    }
  ],
  "created": 1650072838,
  "object": "edit"
}
2022-04-16 01:34:01.715595 fix syntax errors 3 ['input = input()\n\nprint(input.replace("<", "").replace(">", ""))\n', '\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", ""))\n', '\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think the only way to do it with a list is to make a new list\n# and copy the old list in, then remove the special characters\n# I think this is less efficient\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace("<", ""))\n']
2022-04-16 01:34:01.715629 size on output set 3
