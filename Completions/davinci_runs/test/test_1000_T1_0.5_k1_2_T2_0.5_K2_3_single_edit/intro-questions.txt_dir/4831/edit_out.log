2022-04-16 01:55:29.373314 num operations 1
2022-04-16 01:55:29.373331 size on input set 1
2022-04-16 01:55:31.737524 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #for the letter\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end=''),\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1650074129,
  "object": "edit"
}
2022-04-16 01:55:31.737754 fix syntax errors 3 ["\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #for the letter\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end=''),\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-16 01:55:31.737801 size on output set 3
2022-04-16 01:55:31.737811 num operations 1
2022-04-16 01:55:31.737816 size on input set 1
2022-04-16 01:55:37.538212 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n    vowels = \"AEIOUY\"\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in vowels else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in vowels else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in vowels else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(6):\n        for char in word:\n            if i == 0 or i == 5:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 4:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650074131,
  "object": "edit"
}
2022-04-16 01:55:37.538397 fix syntax errors 3 ['\n\n    vowels = "AEIOUY"\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in vowels else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in vowels else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in vowels else "*"), end="")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(6):\n        for char in word:\n            if i == 0 or i == 5:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 4:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n']
2022-04-16 01:55:37.538511 size on output set 3
2022-04-16 01:55:37.538534 num operations 1
2022-04-16 01:55:37.538540 size on input set 1
2022-04-16 01:55:42.632612 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input), 3):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i:i+3]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i:i+3]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.\" + input[i] + \".*\")\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.\" + input[i] + \"#\")\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef main():\n    input_string = sys.stdin.readline().strip()\n    for i in range(0, len(input_string)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input_string[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input_string[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650074137,
  "object": "edit"
}
2022-04-16 01:55:42.632801 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input), 3):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i:i+3]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i:i+3]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*." + input[i] + ".*")\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#." + input[i] + "#")\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef main():\n    input_string = sys.stdin.readline().strip()\n    for i in range(0, len(input_string)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input_string[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input_string[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:55:42.632834 size on output set 3
2022-04-16 01:55:42.632854 num operations 1
2022-04-16 01:55:42.632859 size on input set 1
2022-04-16 01:55:49.732532 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + \".\" + letters[i] + \".\" + frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\" \")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\" \")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\" \")\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\n\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1650074142,
  "object": "edit"
}
2022-04-16 01:55:49.732742 fix syntax errors 3 ['\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + "." + letters[i] + "." + frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n', '\n#!/usr/bin/env python3\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end=" ")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end=" ")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end=" ")\nprint()\n', '\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\n\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-16 01:55:49.732781 size on output set 3
2022-04-16 01:55:49.732793 num operations 1
2022-04-16 01:55:49.732905 size on input set 1
2022-04-16 01:55:54.355017 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(f\"#.{letter}#\", end=\"\")\n            elif letter in word[2::3]:\n                print(f\"*.{letter}.*\", end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1650074149,
  "object": "edit"
}
2022-04-16 01:55:54.355206 fix syntax errors 3 ['\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print(f"#.{letter}#", end="")\n            elif letter in word[2::3]:\n                print(f"*.{letter}.*", end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-16 01:55:54.355249 size on output set 3
2022-04-16 01:55:54.355260 num operations 1
2022-04-16 01:55:54.355266 size on input set 1
2022-04-16 01:55:56.288238 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n\nword = input()\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 2,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    }
  ],
  "created": 1650074154,
  "object": "edit"
}
2022-04-16 01:55:56.288645 fix syntax errors 3 ['\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n\nword = input()\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n']
2022-04-16 01:55:56.288710 size on output set 2
2022-04-16 01:55:56.288732 num operations 1
2022-04-16 01:55:56.288739 size on input set 1
2022-04-16 01:55:58.222564 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650074156,
  "object": "edit"
}
2022-04-16 01:55:58.222774 fix syntax errors 3 ['\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 01:55:58.222883 size on output set 2
2022-04-16 01:55:58.222899 num operations 1
2022-04-16 01:55:58.222904 size on input set 1
2022-04-16 01:56:20.937501 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n    if ch.isdigit():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1650074158,
  "object": "edit"
}
2022-04-16 01:56:20.937825 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n    if ch.isdigit():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-16 01:56:20.937984 size on output set 3
