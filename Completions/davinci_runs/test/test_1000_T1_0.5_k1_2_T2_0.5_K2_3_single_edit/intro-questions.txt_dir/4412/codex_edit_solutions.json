["\n\nimport sys\n\n# If you are using Python 3.x, you can use the following import instead:\n# from io import BytesIO\n\n# If you are using Python 2.x, you can use the following import instead:\n# from StringIO import StringIO\n\ndef solve(n, a, q):\n    # Write your code here\n    a.sort()\n    for i in range(q):\n        if n == 1:\n            return a[0]\n        elif n == 2:\n            return a[1]\n        else:\n            return max(a[0] * a[1] * a[2], a[0] * a[1] + a[2])\n\nq = int(input())\nfor query_number in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a, q))\n", "import os\nimport shutil\n\nsource_path = r\"C:\\Users\\jason\\Documents\\GitHub\\python\\source_path\"\ndest_path = r\"C:\\Users\\jason\\Documents\\GitHub\\python\\dest_path\"\n\ndef copy_file(source_path, dest_path):\n\tfile_list = os.listdir(source_path)\n\tfor file_name in file_list:\n\t\tshutil.copy(source_path + '/' + file_name, dest_path)\n\ncopy_file(source_path, dest_path)\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fs = require(\"fs\");\nfunction writeFile(path, content) {\n    fs.writeFile(path, content, function (err) {\n        if (err) {\n            return console.log(err);\n        }\n        console.log(\"The file was saved!\");\n    });\n}\nexports.writeFile = writeFile;\nfunction appendFile(path, content) {\n    fs.appendFile(path, content, function (err) {\n        if (err) {\n            return console.log(err);\n        }\n        console.log(\"The \" + path + \" was appended!\");\n    });\n}\nexports.appendFile = appendFile;\nfunction readFile(path) {\n    fs.readFile(path, 'utf8', function (err, data) {\n        if (err) {\n            return console.log(err);\n        }\n        console.log(data);\n    });\n}\nexports.readFile = readFile;\n//# sourceMappingURL=file.js.map\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport time\nimport re\nimport sys\n\n\ndef main(argv):\n    file_name = argv[1]\n    if not os.path.isfile(file_name):\n        print(\"File path {} does not exist. Exiting...\".format(file_name))\n        sys.exit()\n    # reading data from file\n    with open(file_name, 'r') as file:\n        data = file.read().replace('\\n', '')\n    # parsing data\n    data = re.sub(' +', ' ', data)\n    data = data.split(' ')\n    # print(data)\n    # initializing variables\n    index = 0\n    current_time = time.time()\n    previous_time = current_time\n    # writing data to file\n    while index < len(data):\n        current_time = time.time()\n        if current_time - previous_time > 0.01:\n            with open(file_name, 'a') as file:\n                file.write(data[index] + ' ')\n            index += 1\n            previous_time = current_time\n\n\nif __name__ == \"__main__\":\n    main(sys.argv)\n", "\n\nimport sys\n\ndef solve(n, a):\n    # Write your code here\n    a.sort()\n    if n == 1:\n        return a[0]\n    elif n == 2:\n        return a[1]\n    else:\n        return max(a[0] * a[1] * a[2], a[0] * a[1] * a[n-1])\n\nq = int(input())\nfor query_number in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n", "\n\nimport sys\n\n# If you are using Python 3.x, you can use the following import instead:\n# from io import BytesIO\n\n# If you are using Python 2.x, you can use the following import instead:\n# from StringIO import StringIO\n\ndef solve(n, a):\n    # Write your code here\n    a.sort()\n    if n == 1:\n        return a[0]\n    elif n == 2:\n        return a[1]\n    else:\n        return max(a[0] * a[1] * a[2], a[0] * a[1] * a[n-1])\n\nq = int(input())\nfor query_number in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n"]