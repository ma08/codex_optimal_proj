2022-04-15 23:56:52.689844 num operations 1
2022-04-15 23:56:52.689853 size on input set 1
2022-04-15 23:56:54.375489 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n"
    },
    {
      "index": 2,
      "text": "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n"
    }
  ],
  "created": 1650067012,
  "object": "edit"
}
2022-04-15 23:56:54.375718 fix syntax errors 3 ['#!/usr/bin/env python3\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n', '\n\nn, m, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n', 'n, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef pack(a, k, m):\n    res = 0\n    j = 0\n    for i in range(m):\n        if j >= len(a):\n            break\n        while j < len(a) and a[j] <= k:\n            k -= a[j]\n            j += 1\n            res += 1\n        k = m\n    return res\n\nl = 0\nr = n\nwhile l < r:\n    mid = (l + r) // 2\n    if pack(a[:mid], k, m) < mid:\n        l = mid + 1\n    else:\n        r = mid\nprint(l)\n']
2022-04-15 23:56:54.375754 size on output set 3
2022-04-15 23:56:54.375765 num operations 1
2022-04-15 23:56:54.375770 size on input set 1
2022-04-15 23:56:59.723934 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n"
    },
    {
      "index": 1,
      "text": "def solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\n    # \u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(n, m, k, a):\n    # \u5148\u6309\u7167\u7bb1\u5b50\u6392\u5e8f\n    a.sort(reverse=True)\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # \u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u540e\u7684\u7bb1\u5b50\u90fd\u4e0d\u80fd\u653e\u4e0b\uff0c\u6240\u4ee5\u4ece\u524d\u5f80\u540e\u6392\u5e8f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7bb1\u5b50\u653e\u4e0d\u4e0b\u7684\u4f4d\u7f6e\u5c31\u662f\u7b54\u6848\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n"
    }
  ],
  "created": 1650067014,
  "object": "edit"
}
2022-04-15 23:56:59.724121 fix syntax errors 3 ["\ndef solve(n, m, k, a):\n    # 先按照箱子排序\n    a.sort(reverse=True)\n    # 找到第一个箱子放不下的位置\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # 找到第一个箱子放不下的位置，这个位置以后的箱子都不能放下\n    # 所以从前往后排序，找到第一个箱子放不下的位置就是答案\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "def solve(n, m, k, a):\n    # 先按照箱子排序\n    a.sort(reverse=True)\n    # 找到第一个箱子放不下的位置\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # 找到第一个箱子放不下的位置，这个位置以后的箱子都不能放下\n    # 所以从前往后排序，找到第一个箱子放不下的位置就是答案\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n", "\ndef solve(n, m, k, a):\n    # 先按照箱子排序\n    a.sort(reverse=True)\n    # 找到第一个箱子放不下的位置\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    if i == n:\n        return n\n    # 找到第一个箱子放不下的位置，这个位置以后的箱子都不能放下，所以从前往后排序，找到第一个箱子放不下的位置就是答案\n    a.sort()\n    i = 0\n    while i < n:\n        if a[i] > k:\n            break\n        i += 1\n    return i\n\n\nif __name__ == '__main__':\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, m, k, a))\n"]
2022-04-15 23:56:59.724247 size on output set 3
