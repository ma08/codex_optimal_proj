2022-04-16 00:13:00.367309 num operations 1
2022-04-16 00:13:00.367327 size on input set 1
2022-04-16 00:13:15.633700 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\nshovels = [(a[i], i) for i in range(n)]\nheap = []\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\nshovels.sort()\nans = 0\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][1]\n        k -= x\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nimport heapq\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))  # \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0439 \u043b\u043e\u043f\u0430\u0442\u044b\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-1][0]\n        k -= x\n\nprint(ans)\n"
    }
  ],
  "created": 1650067980,
  "object": "edit"
}
2022-04-16 00:13:15.633948 fix syntax errors 3 ['\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\nshovels = [(a[i], i) for i in range(n)]\nheap = []\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\nshovels.sort()\nans = 0\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][1]\n        k -= x\n\nprint(ans)\n', '\nimport heapq\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))  # стоимость каждой лопаты\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n', '\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-1][0]\n        k -= x\n\nprint(ans)\n']
2022-04-16 00:13:15.633998 size on output set 3
2022-04-16 00:13:15.634008 num operations 1
2022-04-16 00:13:15.634013 size on input set 1
2022-04-16 00:13:22.112758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n\n    res = 0\n    for i in range(n):\n        res += max(a[i], b[i])\n\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))[::-1]\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print('Hello, world!')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650067995,
  "object": "edit"
}
2022-04-16 00:13:22.112981 fix syntax errors 3 ['def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n\n    res = 0\n    for i in range(n):\n        res += max(a[i], b[i])\n\n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))[::-1]\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print(\'Hello, world!\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 00:13:22.113009 size on output set 3
