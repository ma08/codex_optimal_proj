["\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in n)\n\ndef main():\n    n = int(input())\n    while n % sum_digits(str(n)) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "import sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10  # add last digit to sum\n        n //= 10  # remove last digit from n\n    return sum\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:  # while n is not divisible by the sum of its digits\n    n += 1  # increase n by 1\n\nprint(n)\n", "\ndef sum_digits(n): \n    s = 0\n    while n: \n        s += n % 10 \n        n //= 10\n    return s\n\nn = int(input())\nwhile True:\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\nprint(n)\n", "\nfrom random import randint\nfor i in range(10):\n    print(randint(1, 20))\n", "#!/usr/bin/env python3\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile n != 0:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n", "\n\nn = int(input(\"n= \"))\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n", "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n", "\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    \n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef sumDigits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n //= 10\n    return s\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\nprint(n)\n", "import sys\n\ndef isHarshad(n):\n    return n % sum([int(i) for i in str(n)]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef sumDigits(n):\n    summ = 0\n    while n > 0:\n        summ += n % 10\n        n //= 10\n    return summ\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)\n", "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(digit) for digit in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "\n\ndef get_factors(number):\n    factors = []\n    for i in range(1, number + 1):\n        if number % i == 0:\n            factors.append(i)\n    return factors\n\n\ndef is_perfect_number(number):\n    return sum(get_factors(number)) == 2 * number\n\n\ndef get_perfect_numbers(n):\n    perfect_numbers = []\n    for i in range(1, n + 1):\n        if is_perfect_number(i):\n            perfect_numbers.append(i)\n    return perfect_numbers\n\n\nif __name__ == \"__main__\":\n    user_input = int(input(\"Enter n: \"))\n    print(\"Perfect numbers:\", get_perfect_numbers(user_input))\n", "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "\nn = int(input())\n\ndef main():\n    while True:\n        n += 1\n        if n % sum([int(i) for i in str(n)]) == 0:\n            print(n)\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"]