2022-04-16 00:42:13.605632 num operations 1
2022-04-16 00:42:13.605653 size on input set 1
2022-04-16 00:42:18.489181 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split() if i != n]\n\na = [[int(i) for i in input().split()] for i in input().split() if i != m]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n"
    },
    {
      "index": 2,
      "text": "\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n"
    }
  ],
  "created": 1650069733,
  "object": "edit"
}
2022-04-16 00:42:18.489424 fix syntax errors 3 ['\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split() if i != n]\n\na = [[int(i) for i in input().split()] for i in input().split() if i != m]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n', '\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n', '\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n']
2022-04-16 00:42:18.489449 size on output set 3
2022-04-16 00:42:18.489460 num operations 1
2022-04-16 00:42:18.489466 size on input set 1
2022-04-16 00:42:22.915879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u9ad8\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650069738,
  "object": "edit"
}
2022-04-16 00:42:22.916077 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 各観測所からの最高標高を求める\n    # 標高を求めるために、観測所ごとに最高標高を求める\n    # 各観測所ごとに最高標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最高標高を求める\n    # 各観測所からの最高標高を求める\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最高標高を求める\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # 各観測所からの最高標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 各観測所からの最高標高を求める\n    # 標高を求めるために、観測所ごとに最高標高を求める\n    # 各観測所ごとに最高標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最高標高を求める\n    # 各観測所からの最高標高を求める\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最高標高を求める\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # 各観測所からの最高標高を求める\n    ans = 0\n    for i in range(n):\n\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n    # 各観測所からの最高標高を求める\n    # 標高を求めるために、観測所ごとに最高標高を求める\n    # 各観測所ごとに最高標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最高標高を求める\n    # 各観測所からの最高標高を求める\n\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最高標高を求める\n    max_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] > max_h[i]:\n                max_h[i] = h[j]\n\n    # 各観測所からの最高標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > max_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 00:42:22.916220 size on output set 3
