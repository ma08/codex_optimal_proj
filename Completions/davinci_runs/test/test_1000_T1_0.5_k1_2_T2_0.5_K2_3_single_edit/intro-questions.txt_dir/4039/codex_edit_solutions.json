["\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0:\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "import os\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef read_file(filename):\n    \"\"\"Read a plain text file and return a list of the lines contained\"\"\"\n    try:\n        with open(filename) as f:\n            return [line.strip() for line in f]\n    except FileNotFoundError:\n        print(f\"Error: file {filename} not found\")\n        sys.exit(2)\n\ndef write_file(filename, lines):\n    \"\"\"Write a list of lines to a plain text file\"\"\"\n    with open(filename, 'w') as f:\n        for line in lines:\n            f.write(line + '\\n')\n\ndef print_lines(lines):\n    \"\"\"Print a list of lines to the screen\"\"\"\n    for line in lines:\n        print(line)\n\ndef main():\n    if len(sys.argv) != 3:\n        print(\"Error: expected 2 command line arguments\")\n        sys.exit(1)\n\n    # read the file\n    lines = read_file(sys.argv[1])\n\n    # print the lines to the screen\n    print_lines(lines)\n\n    # write the lines to the output file\n    write_file(sys.argv[2], lines)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"test\")\n\nif __name__ == \"__main__\":\n    main()\n"]