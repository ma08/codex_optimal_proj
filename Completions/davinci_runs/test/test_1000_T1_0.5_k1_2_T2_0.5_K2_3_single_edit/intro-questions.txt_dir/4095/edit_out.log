2022-04-15 22:59:00.785250 num operations 1
2022-04-15 22:59:00.785268 size on input set 1
2022-04-15 22:59:05.797800 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef median(nums, n):\n    if n % 2 == 0:\n        med = nums[n//2] + nums[n//2 - 1]\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = sorted(list(map(int, input().split())))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq, j-i+1) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2-1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650063540,
  "object": "edit"
}
2022-04-15 22:59:05.798102 fix syntax errors 3 ["\n\ndef median(nums, n):\n    if n % 2 == 0:\n        med = nums[n//2] + nums[n//2 - 1]\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = sorted(list(map(int, input().split())))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq, j-i+1) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2-1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-15 22:59:05.798137 size on output set 3
2022-04-15 22:59:05.798149 num operations 1
2022-04-15 22:59:05.798155 size on input set 1
2022-04-15 22:59:12.395676 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nprint('Hello World')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650063545,
  "object": "edit"
}
2022-04-15 22:59:12.395979 fix syntax errors 3 ['import sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', "\nprint('Hello World')\n", '\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 22:59:12.396067 size on output set 3
