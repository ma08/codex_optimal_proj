["n,k = map(int,input().split())\n\nans = 0\n\nfor i in range(1,n+1):\n    if i>=k:\n        ans += (1/n)\n        continue\n    x = 1\n    while 1:\n        i *= 2\n        if i>=k:\n            break\n        else:x+=1\n    ans += (1/n)*(1/2)**x\nprint(ans)", "import math\n\nN, K = map(int, input().split())\n\nres = max(0, N - K + 1)\n\nfor i in range(1, min(N + 1, K)):\n    res += 0.5**math.ceil(math.log2(K / i))\n\nprint(res / N)", "n,k=map(int,input().split())\n\nans = 0\n\nfor i in range(1,n+1):\n  p = i\n  r = 1\n  while p < k:\n    p*=2\n    r/=2\n  ans+=r\n\nans/=n\n\nprint(ans)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 23:11:33 2020\n\n@author: liang\n\"\"\"\n\nN, K = map(int, input().split())\nans = 0\nfor i in range(1,N+1):\n    tmp = i\n    count = 0\n    while tmp< K:\n        count += 1\n        tmp *= 2\n    ans += 1/2**count\nans /= N\nprint(ans)", "def p(n, k):\n    if n >= k:\n        return 1\n    num = 0\n    while n < k:\n        n *= 2\n        num += 1\n    return 1 / 2 ** num\n\nN, K = map(int, input().split())\n\nans = 0\nfor n in range(1, N + 1):\n    ans += p(n, K)\n\nans /= N\n\nprint(ans)", "N,K=list(map(int,input().split()))\nans=0\nfor i in range(N):\n    temp=K/(i+1)\n    for j in range(100):\n        if 2**(j)>=temp:\n            break\n    ans+=(1/N)*(1/2)**j\nprint(ans)\n", "import math\n\nn, k = map(int, input().split())\n\nans = 0\nfor i in range(1, n+1):\n    a = max(math.ceil(math.log2(k/i)), 0)\n    ans += 0.5**a\nprint(ans/n)", "import sys\ninput = sys.stdin.readline\nn,k = list(map(int,input().split()))\n#a = list(map(int,input().split()))\n\nimport math\npar = 0\n\nfor i in range(1,n+1):\n    tmp = i\n    cnt = 0\n    while True:\n        if tmp >= k:\n            break\n        tmp *= 2\n        cnt += 1\n    if cnt == 0:par += 1/n\n    else       :par += 1/(2**cnt*n)\n\nprint(f'{par:.12f}')\n", "N, K = map(int, input().split())\n\nans = 0\nfor i in range(1, N+1):\n    cnt = 0\n    num = i\n    while num < K:\n        num *= 2\n        cnt += 1\n    ans += 1 / N * (1 / 2)**cnt\nprint(ans)", "n,k=list(map(int,input().split()))\n\nans=0\nfor i in range(1,n+1):\n  num=i\n  p=1/n\n  if num>=k:\n    ans+=p\n    continue\n  while num<k:\n    num=num*2\n    p=p*(1/2)\n  ans+=p\n  \nprint(ans)\n", "n, k = list(map(int, input().split()))\nrate = 0\nfor i in range(1,n+1):\n    score = i\n    prob = 1 / n\n    while score < k:\n        score *= 2\n        prob /= 2\n    rate += prob\nprint(rate)\n", "import math\n\nn, k = map(int, input().split())\nlog2 = math.log10( 2)\nans = 0\nfor i in range(1,n+1):\n    temp = i\n    num = 1/n\n    while temp < k:\n        num /= 2\n        temp *= 2\n    ans += num\n\nprint(ans)", "N, K=map(int,input().split())\nans = 0\nfor i in range(1,N+1):\n    cnt = 0\n    while i < K:\n        i *= 2\n        cnt += 1\n    ans += (1/2)**cnt\nprint(ans/N)", "n,k=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n  cnt=0\n  while i<k:\n    i*=2\n    cnt+=1\n  ans+=(1/2)**cnt\nprint(ans/n)", "#Answer\nN, K = input().split()\nN = int(N)\nK = int(K)\n\nimport math\nM = math.log(K,2)\nP = sum([1/(2**max(math.ceil(M - math.log(i,2)), 0)) for i in range (1, N+1)])/N\nprint(P)", "N,K = map(int, input().split())\n\nans = 0\n\nfor i in range(1, N+1):\n    j = 1/N\n    while i < K:\n        i *= 2\n        j /= 2\n    ans += j\n\nprint(ans)", "n, K = map(int, input().split())\n\np = 1/n\n\nans = 0\nfor result in range(1, n+1):\n    # result = 1,2,3\n    k = K\n    k /= result\n    cnt = 0\n    while k > 1:\n        k /= 2\n        cnt += 1\n    ans += p * (0.5)**cnt\nprint(ans)", "from math import ceil as c\nfrom math import log2 as l\n\nn, k = map(int,input().split())\nans, m = 0, 1 / n\n\nfor i in range(1, n+1):\n  if i < k:\n    ans += (0.5 ** c(l(k/i))) * m\n  else:\n    ans += m\n\nprint(ans)", "n,k = map(int,input().split())\n\nnum = 0\n\nfor i in range(1,n+1):\n    j = 0\n    while True:\n        if i*(2**j) >=k:\n            break\n        j +=1\n    \n    \n    num += 1/(n*(2**j))\n\nprint(num)", "n,k=map(int,input().split())\n\na=[]\nfor i in range(1,n+1):\n    x=i\n    b=0\n    while x<k:\n        x=x*2\n        b+=1\n    a.append((float(1/n)*(0.5)**b))\n\n\nprint(sum(a))", "def main():\n    N,K = list(map(int,input().split()))\n    ans = 0\n    dict = {}\n    cnt = 0\n    tmp = 1/N\n    for i in range(N,0,-1):\n        i = float(i)\n        if K <= i:\n            ans += tmp*(0.5**cnt)\n        else:\n            while True:\n                K = K/2\n                cnt += 1\n                if K <= i:\n                    break\n            ans += tmp*(0.5**cnt)\n    return ans\n\nprint((main()))\n", "n, k = map(int, input().split())\nans = 0\nfor i in range(1, n+1):\n    cnt = 0\n    while i < k:\n        i *= 2\n        cnt += 1\n    ans += 1 / n / (2 ** cnt)\nprint(ans)", "import math\nn,k = map(int, input().split())\nc = 0\nfor i in range(1,n+1):\n  if k//i == 0:\n    c += 1/n\n  else:\n    t = math.ceil(math.log2(k/i))\n    c += 0.5**t/n\nprint(c)", "N, K = map(int, input().split())\n\n# \u4f55\u56de2\u3092\u304b\u3051\u308b\u3068\u8d85\u3048\u308b\u304b\u3002\ndef func1(i, k):\n    ans = 0\n    num = i\n    end = False\n    if num >= k:\n        return 0\n    while(not end):\n        ans += 1\n        num *= 2\n        if num >= k:\n            end = True\n            break\n    return ans\n\n\nans = 0\nfor initial_score in range(1, N+1):\n    ans += (1/N) * (1/2) ** func1(initial_score, K)\nprint(ans)", "n,k=list(map(int,input().split()))\n\nans= 0\nfrom math import ceil,log2\n\nfor i in range(1,n+1):\n    if i<k:\n        a = ceil(log2(k/i))\n        ans +=(1/n)*(1/2)**a\n    else:\n        ans += (1/n)\n\nprint(ans)\n", "import math\nn,k = map(int,input().split())\nnum = 0\nfor i in range(1,n + 1):#\u30b5\u30a4\u30b3\u30ed\u306e\u51fa\u305f\u76ee\n    if i >= k:\n        num += 1 / n\n    else:\n        num += (1 / (n * (2 ** math.ceil(math.log(k / i,2)))))\nprint(num)", "n,k=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n  res=0\n  while i<k:\n    i*=2\n    res+=1\n  ans+=(1/2)**res\nprint(ans/n)", "#ABC126 C\n\nimport math\nN,K = map(int,input().split())\nP = 0\nfor i in range(1,N+1):\n    if i >= K:\n        P += 1/N\n    else:\n        P += (1/N)*(0.5)**(math.ceil(math.log(K/i,2)))\n        \nprint(P)", "import sys\n\nN, K = map(int, sys.stdin.readline().split())\nans = 0\nfor i in range(1, N+1):\n    if K <= i:\n        ans += 1 / N\n    else:\n        count = 0\n        while i < K:\n            count += 1\n            i *= 2\n        ans += (1 / N) * 0.5 ** count\n\nprint(ans)", "n, k = map(int,input().split())\n\nper = 0\n\nfor i in range(1,n+1):\n    a = 0\n    while i<k:\n        a += 1\n        i *= 2\n    per += (1/n) * (0.5**a)\n\nprint(per)", "n, k = map(int, input().split())\n\nans = 0\nfor i in range(1, n + 1):\n    cnt = 0\n    while i * 2**cnt < k:\n        cnt += 1\n    ans += 1 / (n * 2**cnt)\n\nprint(ans)", "D, P = map(int, input().split())    \nans = 0.0\ndef func(i):\n    t = 0\n    while(i < P):\n        i *= 2\n        t += 1\n    return t\n\nfor i in range(1, D + 1):\n    ans += float((1/D)) * float(((1 / 2) ** func(i)))\n\nprint(ans)", "#import math\n#import itertools\n#from collections import deque\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n,k=INTM()\n    ans=0\n    for i in range(1,n+1):\n        temp=i\n        ct=0\n        while temp<k:\n            ct+=1\n            temp*=2\n        ans+=(1/(n*(2**ct)))\n    \n    print(ans)\n\n\ndef __starting_point():\n    do()\n__starting_point()", "N,K = map(int,input().split())\nresult = 0\nfor i in range(1,N+1):\n    prob = 1\n    count = i \n    while count < K:\n        prob *= 0.5\n        count *= 2\n    result += prob /N\nprint(result)", "N,K = map(int,input().split())\nans = 0\nfor i in range(1,N+1):\n    if i >= K:\n        ans += 1/N\n    else:\n        x = 0\n        while i < K:\n            i *= 2\n            x += 1\n        ans += (1/N) * (1/2)**x\nprint(ans)", "import math\nn,k = map(int,input().split())\n\nans = 0\nif n < k:\n    for j in range(1,n+1):\n        a = math.ceil(math.log(k/j,2))\n        ans += 1/n * (1/2 ** a)\n    print(ans)\n\nelse:\n    for j in range(1,k):\n        a = a = math.ceil(math.log(k/j,2))\n        ans += 1/n * (1/2 ** a)\n    ans += (n-k+1)/n \n    print(ans)", "def LI():\n    return list(map(int, input().split()))\n\n\nN, K = LI()\nans = 0\nfor i in range(1, N+1):\n    x = 1\n    count = i\n    while count < K:\n        count *= 2\n        x /= 2\n    ans += x/N\nprint(ans)\n", "N, K = map(int,input().split())\nans = 0\nfor n in range(1,N+1):\n    score = n\n    coin = 0\n    while(score < K):\n        coin += 1\n        score *= 2\n    ans += 1/(N*2**coin)\n\nprint(ans)", "from math import log2\nimport decimal\n\nN, K = map(int, input().split())\n\ndecimal.getcontext().prec = 28\n\nans = decimal.Decimal(0)\n\nfor i in range(1, N+1):\n    if i < K:\n        power = -(-(log2(K) - log2(i))//1)\n        prob = decimal.Decimal(1/((2**power) * N))\n    else:\n        prob = decimal.Decimal(1/N)\n\n    #print(prob)\n    ans = decimal.Decimal(ans + prob)\n    #print(ans)\n\nprint(ans)", "import math\n\nN, K = [int(x) for x in input().split()]\n\nS = 0\nfor i in range(1, N + 1):\n    a = 0\n    while i < K:\n        a += 1\n        i *= 2\n    S += 0.5 ** a\n\nans = S / N\nprint(ans)", "N, K = map(int, input().split())\n\nans = 0\nfor i in range(1, N+1):\n    p = 1\n    while i < K:\n        p *= 0.5\n        i *= 2\n    ans += p/N\n        \nprint(ans)", "r=input().split()\nN=int(r[0])\nK=int(r[1])\nans=0\nfor i in range(1,N+1):\n    x=i\n    n=0\n    while x<=K-1:\n        x=x*2\n        n+=1\n    ans+=(1/N)*((1/2)**n)\nprint(ans)", "N, K = map(int, input().split())\npro=0.0\nfor i in range(1,N+1):\n    n=i\n    j=0\n    while(True):\n        if n >= K:\n            break\n        n=n*2\n        j=j+1\n    pro=pro+(1/N)*(0.5)**(j)\nprint(pro)", "from math import log2, ceil\nN, K = list(map(int, input().split()))\n\nans = 0\nj = 1.0\nfor x in range(N, 0, -1):\n    if x >= K:\n        ans += 1.0 * (1 / N)\n    else:\n        while x * j < K:\n            j *= 2.0\n        ans += (1.0 / j) * (1 / N)\nprint(ans)\n", "N,K=map(int,input().split())\nans=max(0,(N-K+1)/N)\nfor dice in range(1,min(N,K-1)+1):\n    for time in range(1,len(bin(K))+2):\n        dice*=2\n        if dice>=K:\n            ans+=1/(N*(2**time))\n            break\nprint(ans)", "from math import ceil as c\nfrom math import log2 as l\n\nn, k = map(int,input().split())\nans = 0\n\nfor i in range(1, n+1):\n  if i < k:\n    ans += (0.5 ** c(l(k/i))) / n\n  else:\n    ans += 1 / n\n\nprint(ans)", "n,k = map(int,input().split())\nans = 0\nfor i in range(1,n+1):\n    prob = 1\n    now = i\n    while now < k:\n        now = 2 * now\n        prob = prob / 2\n    ans += prob / n\nprint(ans)", "import math\nN, K = map(int, input().split())\nif K == 1:\n  print(1)\n  return\n\nans = 0\n\nfor i in range(1, N + 1):\n  if i >= K:\n    ans += (1 / N)\n  else:\n    temp = math.log(K / i, 2)\n    nu = pow(2, math.ceil(temp))\n    ans += (1 / (nu * N))\nprint(ans)", "N,K=map(int,input().split())\nans=0\nfor i in range(N):\n    x=i+1\n    ave=1/N\n    while x<K:\n        x*=2\n        ave/=2\n    ans+=ave\nprint(ans)", "n,k = map(int,input().split())\nans = 0\nfor i in range(1,n+1):\n    t = 1\n    x = i\n    while x<k:\n        t*=0.5\n        x*=2\n    ans+=t/n\nprint(ans)", "n, k = map(int, input().split())\nans = 0\nfor tmp in range(1,n+1):\n    cnt = 0\n    while tmp < k:\n        tmp *= 2\n        cnt += 1\n    ss = n*2**cnt\n    ans += 1/ss\nprint(ans)", "import math\n\nn, k = map(int, input().split())\nans = 0\nx = [max(0, math.ceil(math.log2(k / i))) for i in range(1, n + 1)]\nfor i in x:\n    ans += ((2 ** i) * n) ** -1 \nprint(ans)", "n,k=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n    for j in range(10**5):\n        if i*2**j>=k:\n            ans+=(0.5)**j/n\n            break\nprint(ans)", "N, K = map(int, input().split())\n \nans = 0\n\nfor i in range(1, N+1):\n  # \u30b3\u30a4\u30f3\u3092\u6295\u3052\u308b\u56de\u6570t\u3092\u6c42\u3081\u308b\n  t = 0\n  while True:\n    if i*(2**t) >= K: break\n    t += 1\n  # \u78ba\u7387\u3092\u8db3\u3059\n  ans += (1/N)*((1/2)**t)\n  \nprint(ans)", "N,K = map(int, input().split())\n \nans = 0\n \nfor i in range(1, N+1):\n    j = 1/N\n    while i < K:\n        i *= 2\n        j /= 2\n    ans += j\n \nprint(ans)", "N, K = map(int, input().split())\npro=0.0\nfor i in range(1,N+1):\n    n=i\n    j=0\n    while(True):\n        if n >= K:\n            break\n        n=n*2\n        j=j+1\n    pro=pro+(1/N)*(0.5)**(j)\nprint(pro)", "n,k = map(int,input().split())\n\nsum : float = 0.0\nfor i in range(1,n+1):\n    ret : float = 1/n\n    tmp = i\n    while(tmp < k):\n        tmp *= 2\n        ret /= 2\n    if(tmp != 0):\n        sum += ret \nprint(sum)", "N,K=map(int,input().split())\nans=0\nfor i in range(N):\n    prob=1/N\n    temp=i+1\n    while temp<K:\n        temp*=2\n        prob*=0.5\n    ans+=prob\n\nprint(ans)", "n,k = map(int,input().split())\nans = 0\nfor i in range(1,n+1):\n    tokuten = i\n    tmp = 1/n\n    while tokuten<k:\n        tokuten *= 2\n        tmp = tmp/2\n    #print(tmp)\n    ans += tmp\nprint(ans)", "import math\nN,K = map(int,input().split())\nprob = 0\nfor i in range(1,N+1):\n    win_seq = max(math.ceil(math.log2(K/i)),0)\n    prob += (1/2)**win_seq\nprint(prob/N)", "N, K = list(map(int, input().split()))\nA = 1\nans = 0\n\n\n\nwhile (A <= N):\n  count = 0\n  T = A\n  while (T<K):\n    T = T*2\n    count += 1\n  ans += float((1/N)*(1/2)**count)\n  A += 1\n  \nprint(ans)\n", "import math\nN, K = map(int, input().split())\n \nans = 0\n\n# \u76ee\u304cK-1\u4ee5\u4e0b => \u30b3\u30a4\u30f3\u304c ceil(log2(K/i)) \u56de\u9023\u7d9a\u3067\u8868\u3067\u52dd\u3061\n# \u76ee\u304cK\u4ee5\u4e0a => \u52dd\u3061\u78ba\u5b9a\nfor i in range(1, N+1):\n  if i <= K-1: ans += (1/N)*(1/2)**math.ceil(math.log2(K/i))\n  else: ans += 1/N\nprint(ans)", "n, k = list(map(int, input().split()))\nans = 0\nfor i in range(1, n+1):\n    cnt = 0\n    while True:\n        if 2**cnt >= k/i:\n            break\n        cnt += 1\n    ans += (1/n)*(1/2)**cnt\nprint(ans)\n", "N,K=list(map(int,input().split()))\nans=0\nfor i in range(1,N+1):\n    x=i\n    p=1\n    while x<K:\n        p/=2\n        x<<=1\n    ans+=p\nprint((ans/N))\n", "N, K = map(int, input().split())\n\nans = 0.0\nfor i in range(1, N + 1):\n    x = 0\n    while i * (2 ** x) < K:\n        x += 1\n\n    ans += 1 / (N * 2 ** x)\n\nprint(ans)", "\nN, K = list(map(int, input().split()))\nanswer = 0\nfor i in range(1, N+1):\n    cnt = 0\n    while i < K:\n        i *= 2\n        cnt += 1\n    answer += (1/2)**cnt\n\nprint((answer/N))\n", "N,K=map(int,input().split())\nans=0\nfor i in range(1,N+1):\n  j=0\n  while True:\n    if K<=i*2**j:\n      ans+=(1/N)*(1/2)**j\n      break\n    j+=1\nprint(ans)", "N,K = map(int,input().split())\ntmp = 1\nnum_cnt = 0\nwhile K > tmp :\n  tmp *= 2\n  num_cnt +=1\nnums_list = []\nfor i in range(1,N+1):\n  for j in range(num_cnt+1):\n    if i*(2**j) >= K:\n      nums_list.append(((1/2)**j))\n      break\nprint(sum(nums_list)*(1/N))", "import math\nN, K  =map(int, input().split())\nans = 0\nfor i in range(1,N+1):\n    success_num = max(0,(math.ceil(math.log2(K/i))))\n    ans += (1/2)**success_num\nprint(ans/N)", "n, k = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1, n+1):\n    count = 0\n    p = i\n    while p<k:\n        p = p*2\n        count +=1\n    ans += (1/n)*((1/2)**count)\n\nprint(ans)", "from math import ceil as c\nfrom math import log2 as l\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int,input().split())\nans = 0\n\nfor i in range(1, n+1):\n  if i < k:\n    ans += (0.5 ** c(l(k/i))) / n\n  else:\n    ans += 1 / n\n\nprint(ans)", "N, K = map(int, input().split())\nfrom math import log2, ceil\n\np = 0\n\nfor i in range(1, N+1):\n    if K >= i:\n        p += 2**-(ceil(log2(K / i))) / N\n    else:\n        p += 1 / N\n\nprint(p)", "\n\ndef main():\n    n, k = list(map(int, input().split()))\n    ans = 0.0\n    for t in range(1, n + 1):\n        cnt = 0\n        now = t\n        per = 1.0\n        while now < k:\n            per /= 2\n            now *= 2\n        ans += per / n\n    print(('{:.20}'.format(ans)))\n    pass\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nanswer = 0\nn,k = map(int,input().split())\nfor i in range(1,n+1):\n  if(i>=k):\n    answer +=1/n\n  else:\n    answer += 1/(2**math.ceil(math.log2(k/i)))/n\nprint(answer)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, K = MI()\n    D = deque()\n    D.append(1)\n    num = 1\n    index = 0\n    while num <= K:\n        num*=2\n        index+=1\n        D.append(num)\n    ans = 0\n    for i in range(1, N+1):\n        temp = K / i\n        index2 = bisect_left(D, temp)\n        ans += D[index-index2]\n        \n    print(ans / (N * D[index]))\n\n        \ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\nans = 0\nfor i in range(1, n+1):\n  cnt = 1\n  while i < k:\n    i *= 2\n    cnt /= 2\n  ans += cnt\nans /= n\nprint(ans)", "import math\nN, K = map(int, input().split())\n\nans = 0\n\nfor i in range(1,N+1):\n  if i <= K:\n    ans+=1/N*0.5**(math.ceil(math.log2(K/i)))\n  else:\n    ans+=1/N\n    \nprint(ans)", "from math import ceil as c\nfrom math import log2 as l\n\nn, k = map(int,input().split())\nans = 0\n\nfor i in range(1, n+1):\n  if i < k:\n    ans += (0.5 ** c(l(k/i))) / n\n  else:\n    ans += 1 / n\n\nprint(ans)", "n, k = map(int, input().split()) \n\nimport math\n\nans = 0\nfor i in range(1, n+1):\n    if i < k:\n        power = math.ceil(math.log2(k/i))\n    else:\n        power = 0\n    ans += pow(0.5, power)\nprint(ans / n)", "N, M = map(int, input().split())\n\nif M == 1:\n\tprint(1)\n\treturn\n\nimport math\n\nprob = 0\nfor i in range (1, N+1):\n\tif i>=M:\n\t\tprob+=1/N\n\telse:\n\t\tprob+=((1/N)*1/2**math.ceil(math.log(M/i, 2)))\n\nprint(prob)", "n,k = map(int,input().split())\n\nsum1 = 0\nfor i in range(1,n+1):\n    p = 0\n    while True:\n        if (2**p)*i >= k:\n            break\n        p +=1\n    sum1 += 1/(n*2**p)\nprint(sum1)", "N,K = map(int,input().split())\nls = [0]\nfor i in range(1,N+1):\n    if i >= K:\n        ls.append(1)\n    else:\n        p = 1\n        f = K//i\n        if K%i == 0:\n            f -= 1\n        while f != 0:\n            f = f//2\n            p = p/2\n        ls.append(p)\nans = sum(ls)/N\nprint(ans)", "# coding: utf-8\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    ans = 0.0\n    for i in range(1, N + 1):\n        j, k = i, 0\n        while j < K:\n            j *= 2\n            k += 1\n        ans += pow(0.5, k) / N\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nn,k=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n    tmp=1/n\n    while i<k:\n        i=i*2\n        tmp/=2\n    ans+=tmp\nprint(ans)", "n, k = map(int, input().split())\nprob = [0]*n\nfor i in range(1, n+1):\n  j = 0\n  while i*(2**j) < k:\n    j += 1\n  prob[i-1] = (1/n)*(1/2)**j\n\nprint(sum(prob))", "import math\nN, K = map(int, input().split())\nans = 0\nfor i in range(1, N+1):\n    a = math.log2(K/i)\n    if a > 0:\n        ans += 0.5**math.ceil(math.log2(K/i))/N\n    else:\n        ans += 1/N\nprint(ans)", "N, K = map(int, input().split())\n\nans = 0\n\nfor i in range(1, N+1):\n    count = 0\n    while i < K:\n        i *= 2\n        count += 1\n    ans += 1 / (N * (2 ** count))\n\nprint(ans)", "import math\n\nN, K = list(map(int, input().split()))\n\nans = 0\nfor n in range(1, N+1):\n    if n >= K:\n        ans += 1/N\n        continue\n    x = math.ceil(math.log2(K/n))\n    ans += (0.5**x)/N\n\nprint(ans)\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, K: int):\n    ans = 0\n    for n in range(1, N+1):\n        b = 1\n        while n * b < K:\n            b <<= 1\n        ans += 1 / (b * N)\n    return ans\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    print((solve(N, K)))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\ndef __starting_point():\n    #test()\n    main()\n\n__starting_point()", "import math\nn,k=map(int,input().split())\nif n>=k:\n    a=0\n    for i in range(1,k):\n        a+=0.5**(math.ceil(math.log2(k/i)))\n    print((a+n-k+1)/n)\nelse:\n    a=0\n    for i in range(1,n+1):\n        a+=0.5**(math.ceil(math.log2(k/i)))\n    print(a/n)", "#21 C - Dice and Coin\nimport math\nN,K = map(int,input().split())\n\nans = 0\nfor i in range(1,N+1):\n    if K//i != 0:\n        a = math.log2(K/i)\n        if a.is_integer():\n            x = int(a)\n        else:\n            x = int(a) + 1\n        ans += (1/N)*(1/2)**x\n    else:\n        ans += (1/N)\nprint(ans)", "n, k = map(int, input().split())\nprob = [0]*n\nfor i in range(1, n+1):\n  j = 0\n  while i*(2**j) < k:\n    j += 1\n  prob[i-1] = (1/n)*(1/2)**j\n\nprint(sum(prob))", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef func(i, k):\n    count = 0\n    while i < k:\n        i *= 2\n        count += 1\n    return count\n\n\ndef main():\n    n, k = Input()\n    ans = 0\n    for i in range(1, n+1):\n        ans += 1/n * (1/2 ** func(i, k))\n    print(ans)\n\n\nmain()", "n, k = map(int, input().split())\n\nans = 0\nfor i in range(1, n + 1):\n    j = i\n    cnt = 1\n    while j < k:\n        j <<= 1\n        cnt /= 2\n    ans += cnt / n\nprint('{:10}'.format(ans))", "N,K = map(int,input().split())\n\nans = 0\nfor n in range(1,N+1):\n    k = 0\n    m = n\n    while m < K:\n        m *= 2\n        k += 1\n    ans += 2**(-k)\nprint(ans / N)", "N, K = [int(n) for n in input().split()]\nans = 0\nfor n in range(1, N+1):\n    tmp = 1.0/N\n    now = n\n    while now < K:\n        now *=2\n        tmp /=2\n    ans += tmp\nprint(('{:.12}'.format(ans)))\n", "n, k = map(int, input().split())\nprob = [0]*(n+1)\nfor i in range(1, n+1):\n  j = 0\n  while i*(2**j) < k:\n    j += 1\n  prob[i] = (1/n)*(1/2)**j\n\nprint(sum(prob))", "from math import *\n\nn, k = map(int, input().split())\n\nans = 0\nfor i in range(1, n+1):\n  tmp = 1 / n\n  if i < k:\n    tmp *= 0.5 ** ceil(log2(k/i))\n  ans += tmp\n\nprint(ans)", "import math\nn,k = map(int, input().split())\ns = 0\nans = 0\nfor x in range(1,n+1):\n  if x >= k:\n    a = 0\n  else:\n    a = math.ceil(math.log2(k/x))\n  b = (1 / n) * ((0.5) ** a)  \n  ans += b\n  \n   \nprint(ans)"]