["\nimport sys\nimport math\n\nN, K = map(int, input().split())\n\n# N-sided die\nprobability_die = 1/N\n\n# Coin\nprobability_coin = 1/2\n\n# Probability that Snuke wins\nprobability_win = 0\n\nfor i in range(1, N+1):\n    # Number of times Snuke needs to flip the coin to reach K\n    num_flips = math.ceil(math.log2(K/i))\n\n    # Probability that Snuke wins with the current die\n    probability_win_die = probability_coin**num_flips\n\n    # Probability that Snuke wins\n    probability_win += probability_win_die * probability_die\n\nprint(probability_win)\n", "\nimport sys\nimport math\n\nN, K = map(int, input().split())\n\n# N-sided die\nprobability_die = 1/N\n\n# Coin\nprobability_coin = 1/2\n\n# Probability that Snuke wins\nprobability_win = 0\n\nfor i in range(1, N+1):\n    # Number of times Snuke needs to flip the coin to reach K\n    num_flips = math.ceil(math.log2(K/i))\n\n    # Probability that Snuke wins with the current die\n    probability_win_die = probability_coin**num_flips * probability_die\n\n    # Probability that Snuke wins\n    probability_win += probability_win_die\n\nprint(probability_win)\n", "\ndef main():\n    n, k = map(int, input().split())\n    dp = [0] * (k+1)\n    dp[k] = 1\n    for i in range(k-1, 0, -1):\n        dp[i] = dp[i+1] * (n-1) / n + (dp[i+1] + dp[i+2]) / 2 / n\n    print(dp[1])\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\nN, K = map(int, input().split())\n\n# N-sided die\nprobability_die = 1/N\n\n# Coin\nprobability_coin = 1/2\n\n# Probability that Snuke wins\nprobability_win = 0\n\nfor i in range(1, N + 1):\n    # Number of times Snuke needs to flip the coin to reach K\n    num_flips = math.ceil(math.log2(K/i))\n\n    # Probability that Snuke wins with the current die\n    probability_win_die = probability_coin**num_flips\n\n    # Probability that Snuke wins\n    probability_win += probability_win_die * probability_die\n\nprint(probability_win)\n"]