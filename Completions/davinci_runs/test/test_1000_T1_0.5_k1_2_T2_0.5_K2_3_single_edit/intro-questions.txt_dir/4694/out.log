2022-04-09 21:29:41.958899 """
It is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.

There are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.

Find the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions.  

-----Constraints-----
 - 1 ≤ N ≤ 100
 - 0 ≤ a_i ≤ 1000
 - a_i is an integer.

-----Input-----
Input is given from Standard Input in the following format:
N
a_1 a_2 ... a_N

-----Output-----
Print the minimum distance to be traveled.  

-----Sample Input-----
4
2 3 7 9

-----Sample Output-----
7

The travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2.

It is not possible to do with a travel distance of less than 7, and thus 7 is the minimum distance to be traveled.
"""
2022-04-09 21:29:41.958928 --------------------------
2022-04-09 21:29:50.088677 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# input\nN = int(input())\na_list = list(map(int, input().split()))\n\n# initialization\na_list.sort()\n\n# find the minimum distance\nresult = float('inf')\nfor i in range(1, N):\n    result = min(result, a_list[i] - a_list[i-1])\n\n# output\nprint(result)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    a_list.sort()\n    a_list.reverse()\n    print(a_list)\n\n    min_dist = a_list[0] - a_list[-1]\n    for i in range(n - 1):\n        min_dist += a_list[i] - a_list[i + 1]\n    print(min_dist)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649554182,
  "id": "cmpl-4vGgYgN4gmexeuqxDhw6dNNBgpN63",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:29:50.088918 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# input\nN = int(input())\na_list = list(map(int, input().split()))\n\n# initialization\na_list.sort()\n\n# find the minimum distance\nresult = float('inf')\nfor i in range(1, N):\n    result = min(result, a_list[i] - a_list[i-1])\n\n# output\nprint(result)"
}
2022-04-09 21:29:50.088962 REASON stop
2022-04-09 21:29:50.090517 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    a_list.sort()\n    a_list.reverse()\n    print(a_list)\n\n    min_dist = a_list[0] - a_list[-1]\n    for i in range(n - 1):\n        min_dist += a_list[i] - a_list[i + 1]\n    print(min_dist)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:29:50.090634 REASON stop
