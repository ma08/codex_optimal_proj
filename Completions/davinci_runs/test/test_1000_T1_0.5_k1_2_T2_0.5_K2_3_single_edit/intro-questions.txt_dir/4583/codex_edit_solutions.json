["import sys\n\ndef main():\n    input_val = sys.stdin.readline()\n    input_val = input_val.strip()\n    a = int(input_val[0:1])\n    b = int(input_val[1:2])\n    c = int(input_val[2:3])\n    d = int(input_val[3:4])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    input_val = list(input_val.strip())\n    a = int(input_val[0])\n    b = int(input_val[1])\n    c = int(input_val[2])\n    d = int(input_val[3])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    exit()\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()  #input is a string\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #signs is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nsys.setrecursionlimit(10**6)\n\nimport math\nfrom itertools import product\n\ndef main():\n    #get inputs\n    N, K, Q = map(int, input().split())\n    A = list(map(int, input().split()))\n    S = [0] * N\n    for i in range(Q):\n        S[int(input()) - 1] += 1\n    A = [A[i] - K * S[i] for i in range(N)]\n\n    #print result\n    for a in A:\n        if a > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    a = int(input_val[0].strip())\n    b = int(input_val[1].strip())\n    c = int(input_val[2].strip())\n    d = int(input_val[3].strip())\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n"]