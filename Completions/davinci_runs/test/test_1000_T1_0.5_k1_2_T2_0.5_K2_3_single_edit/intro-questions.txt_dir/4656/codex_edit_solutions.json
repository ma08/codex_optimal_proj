["\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^3)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    max_len = 0\n    for i in range(len(s)):\n        for j in range(i+1, len(s)):\n            if len(set(s[i:j+1])) == k:\n                max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "\n\n# SOLUTION 1\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\n# SOLUTION 2\n# Use sliding window\n# Time: O(n)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        count = 0\n        for j in range(i, len(s)):\n            if s[j] == s[i]:\n                count += 1\n                if count % k == 0:\n                    max_len = max(max_len, j-i+1)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "import os\nimport shutil\n\n\n    os.chdir(r\"C:\\Users\\Student\\Desktop\")\n    for filename in os.listdir('.'):\n        if filename.endswith('.txt'):\n            shutil.copy(filename, filename + '.bak')\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^3)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "import os\nimport sys\n\n\ndef main():\n    print(sys.argv)\n    if len(sys.argv) == 1:\n        print(\"File name missing\")\n    else:\n        if os.path.isfile(sys.argv[1]):\n            print(\"File exists\")\n        else:\n            print(\"File not found\")\n\n\nif __name__ == \"__main__\":\n    main()\n"]