2022-04-15 23:40:50.416367 num operations 1
2022-04-15 23:40:50.416376 size on input set 1
2022-04-15 23:40:52.711204 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))  # noqa: F821\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650066050,
  "object": "edit"
}
2022-04-15 23:40:52.711461 fix syntax errors 3 ["\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))  # noqa: F821\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-15 23:40:52.711488 size on output set 2
2022-04-15 23:40:52.711498 num operations 1
2022-04-15 23:40:52.711503 size on input set 1
2022-04-15 23:40:57.534200 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y > 2 * x, then Slavik will always win\n    if y > 2 * x:\n        print(0)\n        return\n\n    # if x < y <= 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 1:\n        print(1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650066052,
  "object": "edit"
}
2022-04-15 23:40:57.534383 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y > 2 * x, then Slavik will always win\n    if y > 2 * x:\n        print(0)\n        return\n\n    # if x < y <= 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 1:\n        print(1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 23:40:57.534418 size on output set 3
