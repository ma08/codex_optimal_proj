2022-04-15 23:16:36.593757 num operations 1
2022-04-15 23:16:36.593766 size on input set 1
2022-04-15 23:16:39.799702 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(min(cheeses[\"soft\"], cheeses[\"hard\"]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and \"hard\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650064596,
  "object": "edit"
}
2022-04-15 23:16:39.799944 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(min(cheeses["soft"], cheeses["hard"]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and "hard" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-15 23:16:39.799979 size on output set 3
2022-04-15 23:16:39.800003 num operations 1
2022-04-15 23:16:39.800009 size on input set 1
2022-04-15 23:16:47.033263 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    }
  ],
  "created": 1650064599,
  "object": "edit"
}
2022-04-15 23:16:47.033464 fix syntax errors 3 ["\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"]
2022-04-15 23:16:47.033498 size on output set 2
