2022-04-09 19:55:11.690090 """
You have a garland consisting of $n$ lamps. Each lamp is colored red, green or blue. The color of the $i$-th lamp is $s_i$ ('R', 'G' and 'B' — colors of lamps in the garland).

You have to recolor some lamps in this garland (recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is diverse.

A garland is called diverse if any two adjacent (consecutive) lamps (i. e. such lamps that the distance between their positions is $1$) have distinct colors.

In other words, if the obtained garland is $t$ then for each $i$ from $1$ to $n-1$ the condition $t_i \ne t_{i + 1}$ should be satisfied.

Among all ways to recolor the initial garland to make it diverse you have to choose one with the minimum number of recolored lamps. If there are multiple optimal solutions, print any of them.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of lamps.

The second line of the input contains the string $s$ consisting of $n$ characters 'R', 'G' and 'B' — colors of lamps in the garland.


-----Output-----

In the first line of the output print one integer $r$ — the minimum number of recolors needed to obtain a diverse garland from the given one.

In the second line of the output print one string $t$ of length $n$ — a diverse garland obtained from the initial one with minimum number of recolors. If there are multiple optimal solutions, print any of them.


-----Examples-----
Input
9
RBGRRBRGG

Output
2
RBGRGBRGR

Input
8
BBBGBRRR

Output
2
BRBGBRGR

Input
13
BBRRRRGGGGGRR

Output
6
BGRBRBGBGBGRG
"""
2022-04-09 19:55:11.690111 --------------------------
2022-04-09 19:55:35.225670 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# Solution\n\nn = int(input())\ns = input()\n\nt = \"\"\n\n# If the first two lamps are the same color, change the color of the first\n# lamp.\nif s[0] == s[1]:\n    t += \"R\" if s[0] == \"G\" else \"G\"\nelse:\n    t += s[0]\n\n# If the last two lamps are the same color, change the color of the last\n# lamp.\nif s[n - 1] == s[n - 2]:\n    t += \"R\" if s[n - 1] == \"G\" else \"G\"\nelse:\n    t += s[n - 1]\n\n# Iterate through the lamps, excluding the first and last lamps.\nfor i in range(1, n - 1):\n    # If the lamp is the same color as the previous and next lamps, change\n    # the lamp to the remaining color.\n    if s[i] == s[i - 1] and s[i] == s[i + 1]:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n    # If the lamp is the same color as the previous or next lamps, change\n    # the lamp to the remaining color.\n    elif s[i] == s[i - 1] or s[i] == s[i + 1]:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n    # If the lamp is not the same color as the previous or next lamps,\n    # change the lamp to the remaining color.\n    else:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n\n# Count the number of lamps that were changed.\nnum_changes = sum(1 for i in range(n) if t[i] != s[i])\n\n# Print the number of lamps that were changed.\nprint(num_changes)\n\n# Print the new garland.\nprint(t)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#Solution\n\nn = int(input())\ns = input()\n\nif s[0]==s[1]:\n    r = 1\n    t = s[0]+'R'\nelse:\n    r = 0\n    t = s[0]\n\nfor i in range(1,n-1):\n    if s[i]==s[i+1]:\n        r += 1\n        if s[i]=='R':\n            t += 'G'\n        elif s[i]=='G':\n            t += 'B'\n        else:\n            t += 'R'\n    else:\n        t += s[i]\n\nt += s[-1]\nprint(r)\nprint(t)"
    }
  ],
  "created": 1649548512,
  "id": "cmpl-4vFD6le2eDSxIpX7Qltu2qAyZYcBa",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:55:35.225921 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# Solution\n\nn = int(input())\ns = input()\n\nt = \"\"\n\n# If the first two lamps are the same color, change the color of the first\n# lamp.\nif s[0] == s[1]:\n    t += \"R\" if s[0] == \"G\" else \"G\"\nelse:\n    t += s[0]\n\n# If the last two lamps are the same color, change the color of the last\n# lamp.\nif s[n - 1] == s[n - 2]:\n    t += \"R\" if s[n - 1] == \"G\" else \"G\"\nelse:\n    t += s[n - 1]\n\n# Iterate through the lamps, excluding the first and last lamps.\nfor i in range(1, n - 1):\n    # If the lamp is the same color as the previous and next lamps, change\n    # the lamp to the remaining color.\n    if s[i] == s[i - 1] and s[i] == s[i + 1]:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n    # If the lamp is the same color as the previous or next lamps, change\n    # the lamp to the remaining color.\n    elif s[i] == s[i - 1] or s[i] == s[i + 1]:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n    # If the lamp is not the same color as the previous or next lamps,\n    # change the lamp to the remaining color.\n    else:\n        t += \"R\" if s[i] != \"R\" else \"G\"\n\n# Count the number of lamps that were changed.\nnum_changes = sum(1 for i in range(n) if t[i] != s[i])\n\n# Print the number of lamps that were changed.\nprint(num_changes)\n\n# Print the new garland.\nprint(t)"
}
2022-04-09 19:55:35.225989 REASON stop
2022-04-09 19:55:35.227571 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#Solution\n\nn = int(input())\ns = input()\n\nif s[0]==s[1]:\n    r = 1\n    t = s[0]+'R'\nelse:\n    r = 0\n    t = s[0]\n\nfor i in range(1,n-1):\n    if s[i]==s[i+1]:\n        r += 1\n        if s[i]=='R':\n            t += 'G'\n        elif s[i]=='G':\n            t += 'B'\n        else:\n            t += 'R'\n    else:\n        t += s[i]\n\nt += s[-1]\nprint(r)\nprint(t)"
}
2022-04-09 19:55:35.227683 REASON stop
