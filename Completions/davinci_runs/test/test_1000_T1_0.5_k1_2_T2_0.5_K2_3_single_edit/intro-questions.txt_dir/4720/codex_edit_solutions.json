["\n#\n# N = int(input())\n# seats = [0] * 100001\n#\n# for _ in range(N):\n#     l, r = map(int, input().split())\n#     for i in range(l, r+1):\n#         seats[i] += 1\n#\n# print(sum(seats))\n", "# coding: utf-8\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n", "\n# Solved by myself\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n", "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "\n# \uc2dc\uac04\ucd08\uacfc \ubc1c\uc0dd\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0]) # \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\nN = int(input())\ncount = 0\nseats = [0 for _ in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n", "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i \u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i \u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f 1 \u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f 0 \u304b\u3089\u59cb\u307e\u308b\u306e\u3067 -1 \u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n        \nprint(len(s))\n", "\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n", "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n", "\n\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\n\nprint(s)\n", "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r + 1):\n        seats[i] += 1\n\nprint(sum(seats))\n", "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n", "# https://atcoder.jp/contests/abc062/tasks/arc074_a\n\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s//2)\n", "# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\n\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n", "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n", "\n\n\ndef main():\n    N = int(input())\n    S = [0] * 100001\n    for i in range(N):\n        l, r = map(int, input().split())\n        for j in range(l, r+1):\n            S[j] = 1\n    print(sum(S))\n\nif __name__ == '__main__':\n    main()\n", "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n", "#\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"]