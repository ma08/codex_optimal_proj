2022-04-09 19:53:42.858229 """
Polycarp wants to train before another programming competition. During the first day of his training he should solve exactly $1$ problem, during the second day — exactly $2$ problems, during the third day — exactly $3$ problems, and so on. During the $k$-th day he should solve $k$ problems.

Polycarp has a list of $n$ contests, the $i$-th contest consists of $a_i$ problems. During each day Polycarp has to choose exactly one of the contests he didn't solve yet and solve it. He solves exactly $k$ problems from this contest. Other problems are discarded from it. If there are no contests consisting of at least $k$ problems that Polycarp didn't solve yet during the $k$-th day, then Polycarp stops his training.

How many days Polycarp can train if he chooses the contests optimally?


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of contests.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 2 \cdot 10^5$) — the number of problems in the $i$-th contest.


-----Output-----

Print one integer — the maximum number of days Polycarp can train if he chooses the contests optimally.


-----Examples-----
Input
4
3 1 4 1

Output
3

Input
3
1 1 1

Output
1

Input
5
1 1 1 2 2

Output
2
"""
2022-04-09 19:53:42.858282 --------------------------
2022-04-09 19:53:52.143626 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    day = 1\n    while day <= n:\n        if day > a[day-1]:\n            break\n        day += 1\n    print(day-1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# Get input\nn = int(input())\na = [int(x) for x in input().split()]\n\n# Get the largest number of days he can train\ndays = 0\nfor i in range(n):\n    if a[i] > days:\n        days += 1\n\nprint(days)"
    }
  ],
  "created": 1649548423,
  "id": "cmpl-4vFBfBkNZ9X95AadSK4OvKXQcZ1wj",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:53:52.143861 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    day = 1\n    while day <= n:\n        if day > a[day-1]:\n            break\n        day += 1\n    print(day-1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 19:53:52.143923 REASON stop
2022-04-09 19:53:52.155691 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# Get input\nn = int(input())\na = [int(x) for x in input().split()]\n\n# Get the largest number of days he can train\ndays = 0\nfor i in range(n):\n    if a[i] > days:\n        days += 1\n\nprint(days)"
}
2022-04-09 19:53:52.155798 REASON stop
