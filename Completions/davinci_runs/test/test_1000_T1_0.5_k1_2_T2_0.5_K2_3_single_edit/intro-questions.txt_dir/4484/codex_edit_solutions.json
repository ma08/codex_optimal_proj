["\n\ndef main():\n    \"\"\"\n    1. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    2. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    3. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    4. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    5. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    6. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    7. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    8. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    9. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    10. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    11. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    12. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    \"\"\"\n    n, m = map(int, input().split())\n    MOD = 10 ** 9 + 7\n\n    # \u5168\u3066\u72ac\u306b\u3059\u308b\u5834\u5408\n    all_dogs_case = 1\n    for i in range(n):\n        all_dogs_case *= (m + i)\n        all_dogs_case %= MOD\n\n    # \u5168\u3066\u733f\u306b\u3059\u308b\u5834\u5408\n    all_monkeys_case = 1\n    for i in range(m):\n        all_monkeys_case *= (n + i)\n        all_monkeys_case %= MOD\n\n    # \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u4e0a\u8a182\u3064\u306e\u5834\u5408\u3092\u8db3\u3059\n    # \u306a\u305c\u306a\u3089\u3001\u733f\u306b\u72ac\u3092\u5165\u308c\u305f\u5834\u5408\u3068\u305d\u306e\u9006\u306e\u5834\u5408\u306f\u540c\u3058\u306b\u306a\u308b\u304b\u3089\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # ...\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # ...\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    others_case = 0\n    for i in range(1, n + 1):\n        # i\u5339\u306e\u72ac\u306bj\u5339\u306e\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n        for j in range(1, m + 1):\n            # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (i-1)+(j-1)C(j-1)\n            others_case += (i - 1 + j - 1) * nCr(i - 1 + j - 1, j - 1)\n            others_case %= MOD\n\n            # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (j-1)+(i-1)C(i-1)\n            others_case += (j - 1 + i - 1) * nCr(j - 1 + i - 1, i - 1)\n            others_case %= MOD\n\n    print((all_dogs_case + all_monkeys_case + others_case) % MOD)\n\ndef nCr(n, r):\n    \"\"\"\n    nCr\u3092\u6c42\u3081\u308b\n    \"\"\"\n    MOD = 10 ** 9 + 7\n    # nCr = n! / (n-r)!r!\n    # n!\u3092\u6c42\u3081\u308b\n    n_factorial = 1\n    for i in range(1, n + 1):\n        n_factorial *= i\n        n_factorial %= MOD\n    # (n-r)!r!\u3092\u6c42\u3081\u308b\n    n_r_factorial = 1\n    for i in range(1, n - r + 1):\n        n_r_factorial *= i\n        n_r_factorial %= MOD\n    r_factorial = 1\n    for i in range(1, r + 1):\n        r_factorial *= i\n        r_factorial %= MOD\n    n_r_factorial *= r_factorial\n    n_r_factorial %= MOD\n    # (n-r)!r!\u306e\u9006\u5143\u3092\u6c42\u3081\u308b\n    n_r_factorial_inv = pow(n_r_factorial, MOD - 2, MOD)\n    # nCr\u3092\u6c42\u3081\u308b\n    nCr_result = n_factorial * n_r_factorial_inv\n    return nCr_result\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    MOD = 10 ** 9 + 7\n\n    # \u5168\u3066\u72ac\u306b\u3059\u308b\u5834\u5408\n    all_dogs_case = 1\n    for i in range(n):\n        all_dogs_case *= (m + i)\n        all_dogs_case %= MOD\n\n    # \u5168\u3066\u733f\u306b\u3059\u308b\u5834\u5408\n    all_monkeys_case = 1\n    for i in range(m):\n        all_monkeys_case *= (n + i)\n        all_monkeys_case %= MOD\n\n    # \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u4e0a\u8a182\u3064\u306e\u5834\u5408\u3092\u8db3\u3059\n    # \u306a\u305c\u306a\u3089\u3001\u733f\u306b\u72ac\u3092\u5165\u308c\u305f\u5834\u5408\u3068\u305d\u306e\u9006\u306e\u5834\u5408\u306f\u540c\u3058\u306b\u306a\u308b\u304b\u3089\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # ...\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # ...\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    others_case = 0\n    for i in range(1, n + 1):\n        # i\u5339\u306e\u72ac\u306bj\u5339\u306e\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n        for j in range(1, m + 1):\n            # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (i-1)+(j-1)C(j-1)\n            others_case += (i - 1 + j - 1) * nCr(i - 1 + j - 1, j - 1)\n            others_case %= MOD\n\n            # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (j-1)+(i-1)C(i-1)\n            others_case += (j - 1 + i - 1) * nCr(j - 1 + i - 1, i - 1)\n            others_case %= MOD\n\n    print((all_dogs_case + all_monkeys_case + others_case) % MOD)\n\ndef nCr(n, r):\n    \"\"\"\n    nCr\u3092\u6c42\u3081\u308b\n    \"\"\"\n    MOD = 10 ** 9 + 7\n    # nCr = n! / (n-r)!r!\n    # n!\u3092\u6c42\u3081\u308b\n    n_factorial = 1\n    for i in range(1, n + 1):\n        n_factorial *= i\n        n_factorial %= MOD\n    # (n-r)!r!\u3092\u6c42\u3081\u308b\n    n_r_factorial = 1\n    for i in range(1, n - r + 1):\n        n_r_factorial *= i\n        n_r_factorial %= MOD\n    r_factorial = 1\n    for i in range(1, r + 1):\n        r_factorial *= i\n        r_factorial %= MOD\n    n_r_factorial *= r_factorial\n    n_r_factorial %= MOD\n    # (n-r)!r!\u306e\u9006\u5143\u3092\u6c42\u3081\u308b\n    n_r_factorial_inv = pow(n_r_factorial, MOD - 2, MOD)\n    # nCr\u3092\u6c42\u3081\u308b\n    nCr = n_factorial * n_r_factorial_inv\n    return nCr\n\nif __name__ == '__main__':\n    main()\n", "\"\"\"\nHackerRank - Combinations with Repetition\n\"\"\"\n\nimport sys\n\ndef combinations(n, r):\n    \"\"\"\n    Calculate combinations with repetition\n    \"\"\"\n    if n < 0 or r < 0 or n < r:\n        return 0\n    return factorial(n + r - 1) // factorial(r) // factorial(n - 1)\n\ndef factorial(n):\n    \"\"\"\n    Calculate factorial\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    n, m = map(int, sys.stdin.readline().rstrip().split())\n    mod = 10 ** 9 + 7\n    print(combinations(n + m - 1, n - 1) % mod)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef combinations(n, r):\n    \"\"\"\n    Calculate combinations with repetition\n    \"\"\"\n    if n < 0 or r < 0 or n < r:\n        return 0\n    return factorial(n + r - 1) // factorial(r) // factorial(n - 1)\n\ndef factorial(n):\n    \"\"\"\n    Calculate factorial\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    n, m = map(int, sys.stdin.readline().rstrip().split())\n    mod = 10 ** 9 + 7\n    print(combinations(n + m - 1, n - 1) % mod)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    \"\"\"\n    1. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    2. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    3. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    4. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    5. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    6. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    7. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    8. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    9. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    10. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    11. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    12. \u4e00\u500b\u733f\u3068\u4e00\u500b\u72ac\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u305d\u308c\u3089\u3092\u5225\u3005\u306b\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u308b\n    \"\"\"\n    n, m = map(int, input().split())\n    MOD = 10 ** 9 + 7\n\n    # \u5168\u3066\u72ac\u306b\u3059\u308b\u5834\u5408\n    all_dogs_case = 1\n    for i in range(n):\n        all_dogs_case *= (m + i)\n        all_dogs_case %= MOD\n\n    # \u5168\u3066\u733f\u306b\u3059\u308b\u5834\u5408\n    all_monkeys_case = 1\n    for i in range(m):\n        all_monkeys_case *= (n + i)\n        all_monkeys_case %= MOD\n\n    # \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\u5834\u5408\n    # \u4e0a\u8a182\u3064\u306e\u5834\u5408\u3092\u8db3\u3059\n    # \u306a\u305c\u306a\u3089\u3001\u733f\u306b\u72ac\u3092\u5165\u308c\u305f\u5834\u5408\u3068\u305d\u306e\u9006\u306e\u5834\u5408\u306f\u540c\u3058\u306b\u306a\u308b\u304b\u3089\n    # \u72ac\u306b\u733f\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # ...\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    # \u733f\u306b\u72ac\u3092\u5165\u308c\u3066\u3044\u304f\u5834\u5408\n    # \u733f\u304c1\u5339\u306e\u6642\n    # \u72ac\u304c1\u5339\u306e\u6642\n    # \u733f\u304c2\u5339\u306e\u6642\n    # \u72ac\u304c2\u5339\u306e\u6642\n    # ...\n    # \u733f\u304cm\u5339\u306e\u6642\n    # \u72ac\u304cn\u5339\u306e\u6642\n    # \u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u304f\n    others_case = 0\n    for i in range(1, n + 1):\n        # i\u5339\u306e\u72ac\u306bj\u5339\u306e\u733f\u3092\u5165\u308c\u308b\u5834\u5408\n        for j in range(1, m + 1):\n            # \u72ac\u306b\u733f\u3092\u5165\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (i-1)+(j-1)C(j-1)\n            others_case += (i - 1 + j - 1) * nCr(i - 1 + j - 1, j - 1)\n            others_case %= MOD\n\n            # \u733f\u306b\u72ac\u3092\u5165\u308c\u308b\n            # \u733f\u306e\u6570\u304cj\u5339\u306a\u306e\u3067\u3001\u72ac\u306fj-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # \u72ac\u306e\u6570\u304ci\u5339\u306a\u306e\u3067\u3001\u733f\u306fi-1\u5339\u307e\u3067\u5165\u308c\u3089\u308c\u308b\n            # (j-1)+(i-1)C(i-1)\n            others_case += (j - 1 + i - 1) * nCr(j - 1 + i - 1, i - 1)\n            others_case %= MOD\n\n    print((all_dogs_case + all_monkeys_case + others_case) % MOD)\n\ndef nCr(n, r):\n    \"\"\"\n    nCr\u3092\u6c42\u3081\u308b\n    \"\"\"\n    MOD = 10 ** 9 + 7\n    # nCr = n! / (n-r)!r!\n    # n!\u3092\u6c42\u3081\u308b\n    n_factorial = 1\n    for i in range(1, n + 1):\n        n_factorial *= i\n        n_factorial %= MOD\n    # (n-r)!r!\u3092\u6c42\u3081\u308b\n    n_r_factorial = 1\n    for i in range(1, n - r + 1):\n        n_r_factorial *= i\n        n_r_factorial %= MOD\n    r_factorial = 1\n    for i in range(1, r + 1):\n        r_factorial *= i\n        r_factorial %= MOD\n    n_r_factorial *= r_factorial\n    n_r_factorial %= MOD\n    # (n-r)!r!\u306e\u9006\u5143\u3092\u6c42\u3081\u308b\n    n_r_factorial_inv = pow(n_r_factorial, MOD - 2, MOD)\n    # nCr\u3092\u6c42\u3081\u308b\n    nCr = n_factorial * n_r_factorial_inv\n    return nCr\n\nif __name__ == '__main__':\n    main()\n"]