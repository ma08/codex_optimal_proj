2022-04-16 02:46:43.905739 num operations 1
2022-04-16 02:46:43.905757 size on input set 1
2022-04-16 02:46:54.772620 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    try:\n        currTime = currTime.split(':')\n        targetTime = targetTime.split(':')\n        currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n        targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n        diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n        if diff[0] < 0:\n            diff[0] += 24\n        if diff[1] < 0:\n            diff[0] -= 1\n            diff[1] += 60\n        if diff[2] < 0:\n            diff[1] -= 1\n            diff[2] += 60\n        if diff[0] > 24:\n            diff[0] -= 24\n        return ':'.join(map(str, diff))\n    except:\n        return \"Please enter a valid time.\"\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0: #difference is negative\n        diff[0] += 24\n    if diff[1] < 0: #difference is negative\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0: #difference is negative\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24: #difference is greater than 24 hours\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650077204,
  "object": "edit"
}
2022-04-16 02:46:54.772870 fix syntax errors 3 ["\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    try:\n        currTime = currTime.split(\':\')\n        targetTime = targetTime.split(\':\')\n        currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n        targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n        diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n        if diff[0] < 0:\n            diff[0] += 24\n        if diff[1] < 0:\n            diff[0] -= 1\n            diff[1] += 60\n        if diff[2] < 0:\n            diff[1] -= 1\n            diff[2] += 60\n        if diff[0] > 24:\n            diff[0] -= 24\n        return \':\'.join(map(str, diff))\n    except:\n        return "Please enter a valid time."\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == \'__main__\':\n    main()\n', "\n\nimport math\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0: #difference is negative\n        diff[0] += 24\n    if diff[1] < 0: #difference is negative\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0: #difference is negative\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24: #difference is greater than 24 hours\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:46:54.772924 size on output set 3
2022-04-16 02:46:54.772934 num operations 1
2022-04-16 02:46:54.772939 size on input set 1
2022-04-16 02:47:01.227666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef parseTime(time_str):\n    h,m,s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60 \n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650077214,
  "object": "edit"
}
2022-04-16 02:47:01.227996 fix syntax errors 3 ['\n\ndef parseTime(time_str):\n    h,m,s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60 \n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return "{:02}:{:02}:{:02}".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h,m,s))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(":")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return "{:02}:{:02}:{:02}".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:47:01.228039 size on output set 2
2022-04-16 02:47:01.228049 num operations 1
2022-04-16 02:47:01.228054 size on input set 1
2022-04-16 02:47:07.206250 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline().strip().split(\":\")\n    time_now = [int(x) for x in time_now] # convert to int\n\n    time_explosion = sys.stdin.readline().strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion] # convert to int\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion] # convert to str\n    print(\":\".join(time_explosion))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline().strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline().strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n"
    }
  ],
  "created": 1650077221,
  "object": "edit"
}
2022-04-16 02:47:07.206437 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline().strip().split(":")\n    time_now = [int(x) for x in time_now] # convert to int\n\n    time_explosion = sys.stdin.readline().strip().split(":")\n    time_explosion = [int(x) for x in time_explosion] # convert to int\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion] # convert to str\n    print(":".join(time_explosion))\n\nmain()\n', '\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(":")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n', '\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline().strip().split(":")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline().strip().split(":")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(":".join(time_explosion))\n\nmain()\n']
2022-04-16 02:47:07.206473 size on output set 3
2022-04-16 02:47:07.206494 num operations 1
2022-04-16 02:47:07.206499 size on input set 1
2022-04-16 02:47:16.665803 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n"
    }
  ],
  "created": 1650077227,
  "object": "edit"
}
2022-04-16 02:47:16.666092 fix syntax errors 3 ['\n\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(":"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + ":" + str(explosion_minute) + ":" + str(explosion_second))\n', '\n\n#-----main-----#\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n', '\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(":"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(":"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+":"+str(explosion_minute)+":"+str(explosion_second))\n']
2022-04-16 02:47:16.666135 size on output set 3
2022-04-16 02:47:16.666153 num operations 1
2022-04-16 02:47:16.666159 size on input set 1
2022-04-16 02:47:20.789507 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), \"%H:%M:%S\")\n    explosion_time = datetime.strptime(input(), \"%H:%M:%S\")\n    explosion_time += (current_time - datetime.strptime(\"00:00:00\", \"%H:%M:%S\"))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650077236,
  "object": "edit"
}
2022-04-16 02:47:20.789694 fix syntax errors 3 ['\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), "%H:%M:%S")\n    explosion_time = datetime.strptime(input(), "%H:%M:%S")\n    explosion_time += (current_time - datetime.strptime("00:00:00", "%H:%M:%S"))\n    print(explosion_time.strftime(\'%H:%M:%S\'))\n\nif __name__ == \'__main__\':\n    main()\n', "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:47:20.789721 size on output set 2
2022-04-16 02:47:20.789740 num operations 1
2022-04-16 02:47:20.789745 size on input set 1
2022-04-16 02:47:27.681649 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nif __name__ == \"__main__\":\n    print(\"hello world\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef zfill(num):\n    return str(num).zfill(2)\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(zfill(hours) + \":\" + zfill(minutes) + \":\" + zfill(seconds))\n"
    },
    {
      "index": 2,
      "text": "\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n"
    }
  ],
  "created": 1650077240,
  "object": "edit"
}
2022-04-16 02:47:27.681843 fix syntax errors 3 ['\n\nif __name__ == "__main__":\n    print("hello world")\n', '\n\n\ndef zfill(num):\n    return str(num).zfill(2)\n\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(zfill(hours) + ":" + zfill(minutes) + ":" + zfill(seconds))\n', '\nif __name__ == "__main__":\n    current_time = [int(i) for i in input().split(":")]\n    time_to_explode = [int(i) for i in input().split(":")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ":" + str(minutes).zfill(2) + ":" + str(seconds).zfill(2))\n']
2022-04-16 02:47:27.681944 size on output set 3
2022-04-16 02:47:27.681956 num operations 1
2022-04-16 02:47:27.681960 size on input set 1
2022-04-16 02:47:30.357006 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"
    }
  ],
  "created": 1650077247,
  "object": "edit"
}
2022-04-16 02:47:30.357200 fix syntax errors 3 ["\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "import sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n"]
2022-04-16 02:47:30.357235 size on output set 2
2022-04-16 02:47:30.357246 num operations 1
2022-04-16 02:47:30.357251 size on input set 1
2022-04-16 02:47:38.523105 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time).time())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import datetime\n\nimport sys\n\ndef main():\n    current_time = datetime.datetime.strptime(sys.stdin.readline().strip(), '%H:%M:%S')\n    desired_time = datetime.datetime.strptime(sys.stdin.readline().strip(), '%H:%M:%S')\n    if desired_time < current_time:\n        desired_time += datetime.timedelta(days=1)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    a = sys.stdin.readline().strip()\n    b = sys.stdin.readline().strip()\n    c = sys.stdin.readline().strip()\n    d = sys.stdin.readline().strip()\n    print(a, b, c, d)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650077250,
  "object": "edit"
}
2022-04-16 02:47:38.523323 fix syntax errors 3 ["\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time).time())\n\nif __name__ == '__main__':\n    main()\n", "import datetime\n\nimport sys\n\ndef main():\n    current_time = datetime.datetime.strptime(sys.stdin.readline().strip(), '%H:%M:%S')\n    desired_time = datetime.datetime.strptime(sys.stdin.readline().strip(), '%H:%M:%S')\n    if desired_time < current_time:\n        desired_time += datetime.timedelta(days=1)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = sys.stdin.readline().strip()\n    b = sys.stdin.readline().strip()\n    c = sys.stdin.readline().strip()\n    d = sys.stdin.readline().strip()\n    print(a, b, c, d)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:47:38.523367 size on output set 3
