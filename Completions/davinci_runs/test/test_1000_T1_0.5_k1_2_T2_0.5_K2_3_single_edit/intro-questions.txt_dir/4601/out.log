2022-04-09 21:02:41.930028 """
Fennec is fighting with N monsters.
The health of the i-th monster is H_i.
Fennec can do the following two actions:
 - Attack: Fennec chooses one monster. That monster's health will decrease by 1.
 - Special Move: Fennec chooses one monster. That monster's health will become 0.
There is no way other than Attack and Special Move to decrease the monsters' health.
Fennec wins when all the monsters' healths become 0 or below.
Find the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning when she can use Special Move at most K times.

-----Constraints-----
 - 1 \leq N \leq 2 \times 10^5
 - 0 \leq K \leq 2 \times 10^5
 - 1 \leq H_i \leq 10^9
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N K
H_1 ... H_N

-----Output-----
Print the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning.

-----Sample Input-----
3 1
4 1 5

-----Sample Output-----
5

By using Special Move on the third monster, and doing Attack four times on the first monster and once on the second monster, Fennec can win with five Attacks.
"""
2022-04-09 21:02:41.930059 --------------------------
2022-04-09 21:02:53.611360 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nh = list(map(int, sys.stdin.readline().split()))\n\nh.sort()\n\nans = 0\nfor i in range(n):\n    if h[i] < k:\n        ans += h[i]\n        k -= h[i]\n    else:\n        ans += k\n        k = 0\n        ans += (h[i] - k)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef solve(N, K, H):\n    H.sort()\n    if K >= N:\n        return 0\n    else:\n        return sum(H[K:]) - sum(H[:K])\n\nif __name__ == '__main__':\n    N, K = map(int, sys.stdin.readline().rstrip().split())\n    H = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solve(N, K, H))"
    }
  ],
  "created": 1649552562,
  "id": "cmpl-4vGGQbrR3EolyFVzt4szuak2KkdN9",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:02:53.611600 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nh = list(map(int, sys.stdin.readline().split()))\n\nh.sort()\n\nans = 0\nfor i in range(n):\n    if h[i] < k:\n        ans += h[i]\n        k -= h[i]\n    else:\n        ans += k\n        k = 0\n        ans += (h[i] - k)\n\nprint(ans)"
}
2022-04-09 21:02:53.611655 REASON stop
2022-04-09 21:02:53.612809 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef solve(N, K, H):\n    H.sort()\n    if K >= N:\n        return 0\n    else:\n        return sum(H[K:]) - sum(H[:K])\n\nif __name__ == '__main__':\n    N, K = map(int, sys.stdin.readline().rstrip().split())\n    H = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solve(N, K, H))"
}
2022-04-09 21:02:53.612892 REASON stop
