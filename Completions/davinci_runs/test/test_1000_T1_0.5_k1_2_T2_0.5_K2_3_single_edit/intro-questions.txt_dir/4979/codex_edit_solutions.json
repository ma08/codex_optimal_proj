["\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num << 1\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[:1:-1], 2\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\n\ndef reverse_binary(num):\n    return int(bin(num)[:1:-1], 2)\n\nprint(reverse_binary(int(input())))\n", "\ndef reverse_binary(num):\n    return int(str(bin(num))[:1:-1], 2)\n\n\ndef main():\n    print(reverse_binary(int(input())))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef reverse(n):\n    return int(bin(n)[2:][::-1],2)\n\nif __name__ == \"__main__\":\n    print(reverse(int(input())))\n", "\n\nimport sys\n\n\ndef main():\n    num = int(sys.stdin.readline())\n    rev_num = 0\n\n    while num > 0:\n        rev_num = rev_num << 1\n\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1],2)\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))\n", "\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[:1:-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):  # convert to binary, remove 0b prefix, reverse, convert to integer\n    return int(bin(n)[2:][::-1], 2)  # bin(n)[2:] removes 0b prefix, [::-1] reverses, int(, 2) to integer\n\nif __name__ == \"__main__\":\n    print(reverse_binary(int(input())))  # int(input()) converts input to integer\n", "\n\nprint(int(bin(int(input()))[:1:-1], 2))\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2))  # reversed binary\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nprint(reverse_binary(int(input())))\n", "import math\nimport os\nimport random\nimport re\nimport sys\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\"\"\"\nFind the binary representation of the given number and reverse it.\n\"\"\"\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[:1:-1],2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n"]