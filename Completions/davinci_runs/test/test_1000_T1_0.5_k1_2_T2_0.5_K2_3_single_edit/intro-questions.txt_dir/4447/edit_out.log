2022-04-15 23:59:50.512626 num operations 1
2022-04-15 23:59:50.512635 size on input set 1
2022-04-15 23:59:55.274812 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n \nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m-i]) - min(count[i], count[m-i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n//m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n#Solution\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncount = [0] * m\n\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    }
  ],
  "created": 1650067190,
  "object": "edit"
}
2022-04-15 23:59:55.275077 fix syntax errors 3 ["\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n \nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m-i]) - min(count[i], count[m-i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n//m) * (a[i] % m)) // 2, end=' ')\n", "\n#Solution\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncount = [0] * m\n\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"]
2022-04-15 23:59:55.275113 size on output set 3
2022-04-15 23:59:55.275125 num operations 1
2022-04-15 23:59:55.275130 size on input set 1
2022-04-16 00:00:18.291351 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()][:n]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n+1):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\n\ndef read():\n    return sys.stdin.readline()\n\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n - 1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i - 1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\n\nmain()\n\n\n# from sys import stdin\n# from math import gcd\n#\n# def read():\n#     return stdin.readline()\n#\n# def main():\n#     n, m = (int(x) for x in read().split())\n#     a = [int(x) for x in read().split()]\n#     a.sort()\n#     min_val = a[0]\n#     max_val = a[n-1]\n#     max_moves = max_val - min_val\n#     min_moves = 0\n#     for i in range(1, n):\n#         if i % m == 0:\n#             min_moves += a[i-1] - min_val\n#     if min_moves > max_moves:\n#         print(min_moves)\n#         for i in range(n):\n#             if i % m == 0:\n#                 print(max_val, end=' ')\n#             else:\n#                 print(min_val, end=' ')\n#     else:\n#         print(max_moves)\n#         for i in range(n):\n#             if i % m == 0:\n#                 print(min_val, end=' ')\n#             else:\n#                 print(max_val, end=' ')\n#\n# main()\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():n, m = (int(x) for x in read().split())\na = [int(x) for x in read().split()]\na.sort()\nmin_val = a[0]\nmax_val = a[n-1]\nmax_moves = max_val - min_val\nmin_moves = 0\nfor i in range(1, n):\n    if i % m == 0:\n        min_moves += a[i-1] - min_val\nif min_moves > max_moves:\n    print(min_moves)\n    for i in range(n):\n        if i % m == 0:\n            print(max_val, end=' ')\n        else:\n            print(min_val, end=' ')\nelse:\n    print(max_moves)\n    for i in range(n):\n        if i % m == 0:\n            print(min_val, end=' ')\n        else:\n            print(max_val, end=' ')\n\nmain() \n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    print(min(min_moves, max_moves))\n    for i in range(n):\n        if i % m == 0:\n            print(max(min_val, max_val), end=' ')\n        else:\n            print(min(min_val, max_val), end=' ')\n\nmain()\n"
    }
  ],
  "created": 1650067195,
  "object": "edit"
}
2022-04-16 00:00:18.291582 fix syntax errors 3 ["\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()][:n]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n+1):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(1, n+1):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\nimport sys\nimport math\n\n\ndef read():\n    return sys.stdin.readline()\n\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n - 1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i - 1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\n\nmain()\n\n\n# from sys import stdin\n# from math import gcd\n#\n# def read():\n#     return stdin.readline()\n#\n# def main():\n#     n, m = (int(x) for x in read().split())\n#     a = [int(x) for x in read().split()]\n#     a.sort()\n#     min_val = a[0]\n#     max_val = a[n-1]\n#     max_moves = max_val - min_val\n#     min_moves = 0\n#     for i in range(1, n):\n#         if i % m == 0:\n#             min_moves += a[i-1] - min_val\n#     if min_moves > max_moves:\n#         print(min_moves)\n#         for i in range(n):\n#             if i % m == 0:\n#                 print(max_val, end=' ')\n#             else:\n#                 print(min_val, end=' ')\n#     else:\n#         print(max_moves)\n#         for i in range(n):\n#             if i % m == 0:\n#                 print(min_val, end=' ')\n#             else:\n#                 print(max_val, end=' ')\n#\n# main()\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():n, m = (int(x) for x in read().split())\na = [int(x) for x in read().split()]\na.sort()\nmin_val = a[0]\nmax_val = a[n-1]\nmax_moves = max_val - min_val\nmin_moves = 0\nfor i in range(1, n):\n    if i % m == 0:\n        min_moves += a[i-1] - min_val\nif min_moves > max_moves:\n    print(min_moves)\n    for i in range(n):\n        if i % m == 0:\n            print(max_val, end=' ')\n        else:\n            print(min_val, end=' ')\nelse:\n    print(max_moves)\n    for i in range(n):\n        if i % m == 0:\n            print(min_val, end=' ')\n        else:\n            print(max_val, end=' ')\n\nmain() \n", "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    print(min(min_moves, max_moves))\n    for i in range(n):\n        if i % m == 0:\n            print(max(min_val, max_val), end=' ')\n        else:\n            print(min(min_val, max_val), end=' ')\n\nmain()\n"]
2022-04-16 00:00:18.291721 size on output set 3
