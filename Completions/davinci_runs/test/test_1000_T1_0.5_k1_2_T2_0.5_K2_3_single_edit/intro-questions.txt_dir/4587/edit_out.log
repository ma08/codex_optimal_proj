2022-04-16 00:24:39.419858 num operations 1
2022-04-16 00:24:39.419877 size on input set 1
2022-04-16 00:24:42.189656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import bisect\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    }
  ],
  "created": 1650068679,
  "object": "edit"
}
2022-04-16 00:24:42.189877 fix syntax errors 3 ['import bisect\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\n\nprint(count)\n', 'from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', 'from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n']
2022-04-16 00:24:42.189905 size on output set 2
2022-04-16 00:24:42.189914 num operations 1
2022-04-16 00:24:42.189919 size on input set 1
2022-04-16 00:24:44.322073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1) \n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\n\n# a = 1\n# b = 2\n# c = 3\n# print(a + b + c)\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nfrom bisect import bisect_left\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    }
  ],
  "created": 1650068682,
  "object": "edit"
}
2022-04-16 00:24:44.322252 fix syntax errors 3 ['\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1) \n    ans += a * c\n\nprint(ans)\n', '\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\n\n# a = 1\n# b = 2\n# c = 3\n# print(a + b + c)\nprint(ans)\n', '\nfrom bisect import bisect_left\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n']
2022-04-16 00:24:44.322280 size on output set 3
