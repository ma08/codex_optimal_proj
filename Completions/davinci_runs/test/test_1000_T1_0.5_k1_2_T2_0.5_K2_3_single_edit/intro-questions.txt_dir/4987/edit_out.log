2022-04-16 03:31:18.219850 num operations 1
2022-04-16 03:31:18.219867 size on input set 1
2022-04-16 03:31:26.298965 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# s, c, k = map(int, input().split())\n# d = list(map(int, input().split()))\n\n# d.sort()\n\n# machines = 0\n# machine_load = 0\n\n# for i in range(s):\n#     if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n#         machine_load = 0\n#         machines += 1\n#     machine_load += 1\n\n# if machine_load > 0:\n#     machines += 1\n\n# print(machines)\n\n# n = int(input())\n\n# for i in range(n):\n#     m = int(input())\n#     print(m)\n\nn = int(input())\n\nfor i in range(n):\n    m = int(input())\n    print(m)\n"
    },
    {
      "index": 1,
      "text": "\ns, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(s):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i - 1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n"
    },
    {
      "index": 2,
      "text": "# https://www.codechef.com/problems/MARCHA1\n\ns, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(s):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n"
    }
  ],
  "created": 1650079878,
  "object": "edit"
}
2022-04-16 03:31:26.299189 fix syntax errors 3 ['\n\n# s, c, k = map(int, input().split())\n# d = list(map(int, input().split()))\n\n# d.sort()\n\n# machines = 0\n# machine_load = 0\n\n# for i in range(s):\n#     if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n#         machine_load = 0\n#         machines += 1\n#     machine_load += 1\n\n# if machine_load > 0:\n#     machines += 1\n\n# print(machines)\n\n# n = int(input())\n\n# for i in range(n):\n#     m = int(input())\n#     print(m)\n\nn = int(input())\n\nfor i in range(n):\n    m = int(input())\n    print(m)\n', '\ns, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(s):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i - 1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n', '# https://www.codechef.com/problems/MARCHA1\n\ns, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(s):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n']
2022-04-16 03:31:26.299220 size on output set 3
2022-04-16 03:31:26.299230 num operations 1
2022-04-16 03:31:26.299235 size on input set 1
2022-04-16 03:31:37.390156 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\nsocks.sort()\n\nmachines = 0\n\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\n\nprint(machines)\n"
    },
    {
      "index": 1,
      "text": "\n\nS, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\nsocks.sort()\nmachines = 0\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\nprint(machines)\n"
    },
    {
      "index": 2,
      "text": "\n\n# S, C, K = map(int, input().split())\n# socks = list(map(int, input().split()))\n# # print(socks)\n# socks.sort()\n\n# machines = 0\n\n# while len(socks) > 0:\n#     current_machine = []\n#     current_machine.append(socks.pop(0))\n#     while len(current_machine) < C and len(socks) > 0:\n#         if abs(current_machine[-1] - socks[0]) <= K:\n#             current_machine.append(socks.pop(0))\n#         else:\n#             break\n#     machines += 1\n\n# print(machines)\n\ndef solution(A, B):\n    # write your code in Python 3.6\n    A = A.split(\" \")\n    B = B.split(\" \")\n    A = [int(x) for x in A]\n    B = [int(x) for x in B]\n    A.sort()\n    B.sort()\n    print(A)\n    print(B)\n    a = 0\n    b = 0\n    while a < len(A) and b < len(B):\n        if A[a] < B[b]:\n            a += 1\n        elif A[a] > B[b]:\n            b += 1\n        else:\n            a += 1\n            b += 1\n            return 1\n    return 0\n\nA = \"1 4 5\"\nB = \"2 3 3\"\nprint(solution(A, B))\n"
    }
  ],
  "created": 1650079886,
  "object": "edit"
}
2022-04-16 03:31:37.390365 fix syntax errors 3 ['\nS, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\nsocks.sort()\n\nmachines = 0\n\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\n\nprint(machines)\n', '\n\nS, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\nsocks.sort()\nmachines = 0\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\nprint(machines)\n', '\n\n# S, C, K = map(int, input().split())\n# socks = list(map(int, input().split()))\n# # print(socks)\n# socks.sort()\n\n# machines = 0\n\n# while len(socks) > 0:\n#     current_machine = []\n#     current_machine.append(socks.pop(0))\n#     while len(current_machine) < C and len(socks) > 0:\n#         if abs(current_machine[-1] - socks[0]) <= K:\n#             current_machine.append(socks.pop(0))\n#         else:\n#             break\n#     machines += 1\n\n# print(machines)\n\ndef solution(A, B):\n    # write your code in Python 3.6\n    A = A.split(" ")\n    B = B.split(" ")\n    A = [int(x) for x in A]\n    B = [int(x) for x in B]\n    A.sort()\n    B.sort()\n    print(A)\n    print(B)\n    a = 0\n    b = 0\n    while a < len(A) and b < len(B):\n        if A[a] < B[b]:\n            a += 1\n        elif A[a] > B[b]:\n            b += 1\n        else:\n            a += 1\n            b += 1\n            return 1\n    return 0\n\nA = "1 4 5"\nB = "2 3 3"\nprint(solution(A, B))\n']
2022-04-16 03:31:37.390402 size on output set 3
2022-04-16 03:31:37.390420 num operations 1
2022-04-16 03:31:37.390424 size on input set 1
2022-04-16 03:31:44.119330 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    machines = 0\n    i = 0\n    while i < socks:\n        machines += 1\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:\n            j += 1\n        i = j\n    print(machines)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]  # input socks, capacity, color_diff\n    colors = [int(x) for x in input().split()]  # input colors\n    colors.sort()\n    machines = 0  # counter for machines\n    i = 0\n    while i < socks:\n        machines += 1  # add a machine before checking\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:  # check if the color is in the range\n            j += 1\n        i = j  # update i\n    print(machines)  # print the result\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    machines = 0\n    i = 0\n    while i < socks:\n        machines += 1\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:\n            j += 1\n        i = j\n    print(machines)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650079897,
  "object": "edit"
}
2022-04-16 03:31:44.119623 fix syntax errors 3 ['\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    machines = 0\n    i = 0\n    while i < socks:\n        machines += 1\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:\n            j += 1\n        i = j\n    print(machines)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]  # input socks, capacity, color_diff\n    colors = [int(x) for x in input().split()]  # input colors\n    colors.sort()\n    machines = 0  # counter for machines\n    i = 0\n    while i < socks:\n        machines += 1  # add a machine before checking\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:  # check if the color is in the range\n            j += 1\n        i = j  # update i\n    print(machines)  # print the result\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    machines = 0\n    i = 0\n    while i < socks:\n        machines += 1\n        j = i + 1\n        while j < socks and colors[j] - colors[i] <= color_diff:\n            j += 1\n        i = j\n    print(machines)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 03:31:44.119659 size on output set 2
2022-04-16 03:31:44.119669 num operations 1
2022-04-16 03:31:44.119674 size on input set 1
2022-04-16 03:31:54.792696 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    graph = {}\n    for _ in range(int(input())):\n        line = input().split()\n        if line[0] not in graph:\n            graph[line[0]] = []\n        graph[line[0]].append(line[1])\n    print(graph)\n    # colors.sort()\n    # num_machines = 0\n    # current_machine = []\n    # for color in colors:\n    #     if not current_machine:\n    #         current_machine.append(color)\n    #         num_machines += 1\n    #     elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n    #         current_machine.append(color)\n    #     else:\n    #         current_machine = [color]\n    #         num_machines += 1\n    # print(num_machines)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    num_machines = 0\n    current_machine = []\n    for color in colors:\n        if not current_machine:\n            current_machine.append(color)\n            num_machines += 1\n        elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n            current_machine.append(color)\n        else:\n            current_machine = [color]\n            num_machines += 1\n    print(num_machines)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]  # input data\n    colors = [int(x) for x in input().split()]\n    colors.sort()  # sort colors\n    num_machines = 0\n    current_machine = []\n    for color in colors:  # iterate through colors\n        if not current_machine:\n            current_machine.append(color)\n            num_machines += 1\n        elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n            current_machine.append(color)\n        else:\n            current_machine = [color]\n            num_machines += 1\n    print(num_machines)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650079904,
  "object": "edit"
}
2022-04-16 03:31:54.792915 fix syntax errors 3 ['\n\ndef main():\n    graph = {}\n    for _ in range(int(input())):\n        line = input().split()\n        if line[0] not in graph:\n            graph[line[0]] = []\n        graph[line[0]].append(line[1])\n    print(graph)\n    # colors.sort()\n    # num_machines = 0\n    # current_machine = []\n    # for color in colors:\n    #     if not current_machine:\n    #         current_machine.append(color)\n    #         num_machines += 1\n    #     elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n    #         current_machine.append(color)\n    #     else:\n    #         current_machine = [color]\n    #         num_machines += 1\n    # print(num_machines)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]\n    colors = [int(x) for x in input().split()]\n    colors.sort()\n    num_machines = 0\n    current_machine = []\n    for color in colors:\n        if not current_machine:\n            current_machine.append(color)\n            num_machines += 1\n        elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n            current_machine.append(color)\n        else:\n            current_machine = [color]\n            num_machines += 1\n    print(num_machines)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    socks, capacity, color_diff = [int(x) for x in input().split()]  # input data\n    colors = [int(x) for x in input().split()]\n    colors.sort()  # sort colors\n    num_machines = 0\n    current_machine = []\n    for color in colors:  # iterate through colors\n        if not current_machine:\n            current_machine.append(color)\n            num_machines += 1\n        elif abs(current_machine[-1] - color) <= color_diff and len(current_machine) < capacity:\n            current_machine.append(color)\n        else:\n            current_machine = [color]\n            num_machines += 1\n    print(num_machines)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 03:31:54.792965 size on output set 3
2022-04-16 03:31:54.792976 num operations 1
2022-04-16 03:31:54.792981 size on input set 1
2022-04-16 03:32:02.354133 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    S, C, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K:\n            j += 1\n        i = j\n    print(count)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    for i in range(N):\n        S, C, K = [int(i) for i in sys.stdin.readline().split()]\n        D = [int(i) for i in sys.stdin.readline().split()]\n        D.sort()\n        i = 0\n        count = 0\n        while i < S:\n            count += 1\n            j = i + 1\n            while j < S and D[j] - D[i] <= K:\n                j += 1\n            i = j\n        print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    S, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K:\n            j += 1\n        i = j\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650079914,
  "object": "edit"
}
2022-04-16 03:32:02.354353 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    S, C, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K:\n            j += 1\n        i = j\n    print(count)\n\nmain()\n', "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    for i in range(N):\n        S, C, K = [int(i) for i in sys.stdin.readline().split()]\n        D = [int(i) for i in sys.stdin.readline().split()]\n        D.sort()\n        i = 0\n        count = 0\n        while i < S:\n            count += 1\n            j = i + 1\n            while j < S and D[j] - D[i] <= K:\n                j += 1\n            i = j\n        print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    S, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K:\n            j += 1\n        i = j\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 03:32:02.354472 size on output set 3
2022-04-16 03:32:02.354489 num operations 1
2022-04-16 03:32:02.354497 size on input set 1
2022-04-16 03:32:06.930563 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine\")\n        sys.exit(0)\n\nprint(\"Number of machines: \", numMachines)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ns, c, k = [int(x) for x in raw_input().split()]\nd = [int(x) for x in raw_input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n"
    }
  ],
  "created": 1650079922,
  "object": "edit"
}
2022-04-16 03:32:06.930743 fix syntax errors 3 ['\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print("Too many socks for machine")\n        sys.exit(0)\n\nprint("Number of machines: ", numMachines)\n', '\nimport sys\nimport math\n\ns, c, k = [int(x) for x in raw_input().split()]\nd = [int(x) for x in raw_input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print("Too many socks for machine.")\n        sys.exit(0)\n\nprint("Number of machines: " + str(numMachines))\n', '\n\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print("Too many socks for machine.")\n        sys.exit(0)\n\nprint("Number of machines: " + str(numMachines))\n']
2022-04-16 03:32:06.930775 size on output set 3
2022-04-16 03:32:06.930784 num operations 1
2022-04-16 03:32:06.930789 size on input set 1
2022-04-16 03:32:09.613528 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n \nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n \nD.sort()\n \nmachine_count = 0\n \nfor i in range(0, S, C):\n    machine_count += 1\n \n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n \nprint(machine_count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n"
    }
  ],
  "created": 1650079926,
  "object": "edit"
}
2022-04-16 03:32:09.613722 fix syntax errors 3 ['\n \nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n \nD.sort()\n \nmachine_count = 0\n \nfor i in range(0, S, C):\n    machine_count += 1\n \n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n \nprint(machine_count)\n', '\nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n', '\nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n']
2022-04-16 03:32:09.613752 size on output set 2
2022-04-16 03:32:09.613766 num operations 1
2022-04-16 03:32:09.613771 size on input set 1
2022-04-16 03:32:33.223998 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION 1\n\nn, k = map(int, input().split())\n\ndef solution(n, k):\n    if n == 1:\n        return k\n    if k == 1:\n        return 1\n    return solution(n - 1, k) + solution(n, k - 1)\n\nprint(solution(n, k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\n# socks, capacity, colorDiff = [int(x) for x in input().split()]\n# colors = [int(x) for x in input().split()]\n\n# colors.sort()\n\n# count = 0\n\n# for i in range(socks):\n#     if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n#         count += 1\n\n# if count % capacity == 0:\n#     print(count // capacity)\n# else:\n#     print(count // capacity + 1)\n\n\n# n, m = map(int, input().split())\n\n# if n == 1:\n#     print(1)\n# elif n == 2:\n#     print(min(4, (m + 1) // 2))\n# else:\n#     if m >= 7:\n#         print(m - 2)\n#     else:\n#         print(min(4, m))\n\n\n# n, m = map(int, input().split())\n\n# for i in range(1, n, 2):\n#     print(str('.|.' * i).center(m, '-'))\n# print('WELCOME'.center(m, '-'))\n# for i in range(n - 2, -1, -2):\n#     print(str('.|.' * i).center(m, '-'))\n\n\n# for i in range(1, n, 2):\n#     print((c * i).center(m, '-'))\n# print(w.center(m, '-'))\n# for i in range(n - 2, -1, -2):\n#     print((c * i).center(m, '-'))\n\n\n# n, m = map(int, input().split())\n\n\n# def print_rangoli(size):\n#     width = 4 * size - 3\n#     string = 'abcdefghijklmnopqrstuvwxyz'\n#     for i in range(1, size + 1):\n#         s = \"-\".join(string[size - 1:size - i:-1] + string[size - i:size])\n#         print(s.center(width, \"-\"))\n#     for i in range(size - 1, 0, -1):\n#         s = \"-\".join(string[size - 1:size - i:-1] + string[size - i:size])\n#         print(s.center(width, \"-\"))\n\n\n# if __name__ == '__main__':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n# alpha = string.ascii_lowercase\n\n\n# def print_rangoli(size):\n#     L = []\n#     for i in range(size):\n#         s = \"-\".join(alpha[i:size])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, \"-\"))\n#     print('\\n'.join(L[:0:-1]+L))\n\n\n# if __name__ == '__main__':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n\n\n# def print_rangoli(size):\n#     n = size\n#     alpha = string.ascii_lowercase\n#     L = []\n#     for i in range(n):\n#         s = \"-\".join(alpha[i:n])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, \"-\"))\n#     print('\\n'.join(L[:0:-1]+L))\n\n\n# if __name__ == '__main__':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n\n\n# def print_rangoli(size):\n#     n = size\n#     alpha = string.ascii_lowercase\n#     L = []\n#     for i in range(n):\n#         s = \"-\".join(alpha[i:n])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, \"-\"))\n#     print('\\n'.join(L[:0:-1]+L))\n\n\n# if __name__ == '__main__':\n#     n = int(input())\n#     print_rangoli(n)\n"
    },
    {
      "index": 2,
      "text": "\n# SOLUTION\n\nsocks, capacity, colorDiff = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n"
    }
  ],
  "created": 1650079929,
  "object": "edit"
}
2022-04-16 03:32:33.224261 fix syntax errors 3 ['\n\n# SOLUTION 1\n\nn, k = map(int, input().split())\n\ndef solution(n, k):\n    if n == 1:\n        return k\n    if k == 1:\n        return 1\n    return solution(n - 1, k) + solution(n, k - 1)\n\nprint(solution(n, k))\n', '\n\n# SOLUTION\n\n# socks, capacity, colorDiff = [int(x) for x in input().split()]\n# colors = [int(x) for x in input().split()]\n\n# colors.sort()\n\n# count = 0\n\n# for i in range(socks):\n#     if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n#         count += 1\n\n# if count % capacity == 0:\n#     print(count // capacity)\n# else:\n#     print(count // capacity + 1)\n\n\n# n, m = map(int, input().split())\n\n# if n == 1:\n#     print(1)\n# elif n == 2:\n#     print(min(4, (m + 1) // 2))\n# else:\n#     if m >= 7:\n#         print(m - 2)\n#     else:\n#         print(min(4, m))\n\n\n# n, m = map(int, input().split())\n\n# for i in range(1, n, 2):\n#     print(str(\'.|.\' * i).center(m, \'-\'))\n# print(\'WELCOME\'.center(m, \'-\'))\n# for i in range(n - 2, -1, -2):\n#     print(str(\'.|.\' * i).center(m, \'-\'))\n\n\n# for i in range(1, n, 2):\n#     print((c * i).center(m, \'-\'))\n# print(w.center(m, \'-\'))\n# for i in range(n - 2, -1, -2):\n#     print((c * i).center(m, \'-\'))\n\n\n# n, m = map(int, input().split())\n\n\n# def print_rangoli(size):\n#     width = 4 * size - 3\n#     string = \'abcdefghijklmnopqrstuvwxyz\'\n#     for i in range(1, size + 1):\n#         s = "-".join(string[size - 1:size - i:-1] + string[size - i:size])\n#         print(s.center(width, "-"))\n#     for i in range(size - 1, 0, -1):\n#         s = "-".join(string[size - 1:size - i:-1] + string[size - i:size])\n#         print(s.center(width, "-"))\n\n\n# if __name__ == \'__main__\':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n# alpha = string.ascii_lowercase\n\n\n# def print_rangoli(size):\n#     L = []\n#     for i in range(size):\n#         s = "-".join(alpha[i:size])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, "-"))\n#     print(\'\\n\'.join(L[:0:-1]+L))\n\n\n# if __name__ == \'__main__\':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n\n\n# def print_rangoli(size):\n#     n = size\n#     alpha = string.ascii_lowercase\n#     L = []\n#     for i in range(n):\n#         s = "-".join(alpha[i:n])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, "-"))\n#     print(\'\\n\'.join(L[:0:-1]+L))\n\n\n# if __name__ == \'__main__\':\n#     n = int(input())\n#     print_rangoli(n)\n\n\n# import string\n\n\n# def print_rangoli(size):\n#     n = size\n#     alpha = string.ascii_lowercase\n#     L = []\n#     for i in range(n):\n#         s = "-".join(alpha[i:n])\n#         L.append((s[::-1]+s[1:]).center(4*n-3, "-"))\n#     print(\'\\n\'.join(L[:0:-1]+L))\n\n\n# if __name__ == \'__main__\':\n#     n = int(input())\n#     print_rangoli(n)\n', '\n# SOLUTION\n\nsocks, capacity, colorDiff = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n']
2022-04-16 03:32:33.224314 size on output set 3
