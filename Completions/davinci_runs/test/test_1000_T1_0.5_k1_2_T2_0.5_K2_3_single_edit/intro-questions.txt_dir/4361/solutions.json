["n,k = map(int,input().split())\nL = sorted(list(int(input()) for _ in range(n)))\nm = 10**9\n\nfor i in range(n-k+1):\n  m = min(m, L[i+k-1]-L[i])\n\nprint(m)", "N,K=map(int,input().split())\nL=[]\nfor i in range(N):\n    L.append(int(input().rstrip()))\nL.sort()\nM=[]\nfor i in range(N-K+1):\n    M.append(L[K+i-1]-L[i])\nM.sort()\nprint(M[0])", "N,K = map(int,input().split())\nhigh = [int(input()) for _ in range(N)]\ns_high = sorted(high)\nans = 10**9\n#print(s_high)\nfor i in range(N-K+1):\n    j = s_high[i+K-1] - s_high[i]\n    ans = min(ans,j)\nprint(ans)", "n, k = map(int, input().split())\nh = []\nfor i in range(n):\n  h_ = int(input())\n  h.append(h_)\nh.sort()\n#print(h)\nans = float('inf')\nfor i in range(n-k+1):\n  ans = min(ans, h[i+k-1]-h[i])\nprint(ans)", "n, k = list(map(int, input().split()))\nh = [int(input()) for i in range(n)]\nh.sort()\nans = []\nfor i in range(n - k + 1):\n    ans.append(h[i + k - 1] - h[i])\nprint((min(ans)))\n", "n,k = map(int, input().split())\nh = sorted([int(input()) for _ in range(n)])\nans = []\n\nfor i in range(n-k+1):\n    ans.append(h[i+k-1]-h[i])\nprint(min(ans))", "n,k=map(int, input().split())\nh=[]\nfor i in range(n):\n  h.append(int(input()))\nh.sort()\nans=h[k-1]-h[0]\nfor i in range(1,n-k+1):\n  ans=min(ans,h[i+k-1]-h[i])\nprint(ans)", "n, k = list(map(int, input().split( )))\narr = []\nfor _ in range(n):\n  arr.append(int(input()))\na = sorted(arr)\nm = 10**9\nfor i in range(n-k+1):\n  ma = a[i+k-1] - a[i]\n  m = min(m, ma)\nprint(m)\n  \n", "n,k=map(int,input().split())\nh=[int(input()) for _ in range(n)]\n\nh.sort()\nresult = 10**9\nfor i in range(n-k+1):\n  result = min(result, h[i+k-1] - h[i])\n\nprint(result)", "N, K = map(int, input().split())\nh = [0] * N\nfor i in range(N):\n    h[i] = int(input())\n\nh = sorted(h)\nans = 10**10\nfor i in range(N - K + 1):\n    ans = min(ans, h[i + K - 1] - h[i])\n\nprint(ans)", "n,k= map(int,input().split())\nl = []\nfor i in range(n):\n  l.append(int(input()))\nb = sorted(l)\nans = b[k-1] - b[0]\nfor i in range(n-k+1):\n  ans = min(ans,b[i+k-1] - b[i])\nprint(ans)", "N, K = map(int, input().split())\nT = sorted([int(input()) for _ in range(N)])\n\nresult = 10 ** 9\nfor i in range(N-K+1):\n  result = min(result, T[i+K-1]-T[i])\n\nprint(result)", "n,k = map(int,input().split())\nh = [int(input()) for _ in range(n)]\n\nh.sort()\n#\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3079\u3089\u308c\u305fk\u672c\u306e\u6728\u306e\u3001\u4e00\u756a\u4f4e\u3044\u5974\u3068\u9ad8\u3044\u5974\u306e\u9ad8\u3055\u306e\u5dee\ndh = [int(1e9)]*n\nfor i in range(k-1,n):\n    dh[i]=h[i]-h[i-k+1]\n    \nprint(min(dh))", "# C\n\nN,K = map(int,input().split())\nH = sorted([int(input()) for _ in range(N)])\nprint(min(H[i+K-1]-H[i] for i in range(N-K+1)))", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K, *H = list(map(int, read().split()))\n\n    H.sort()\n\n    ans = INF\n    for i in range(N - K + 1):\n        if ans > H[i + K - 1] - H[i]:\n            ans = H[i + K - 1] - H[i]\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k =list(map(int, input().split()))\nhs = [int(input()) for _ in range(n)]\nhs.sort()\n#print(hs)\nan = hs[k-1]-hs[0]\nfor i in range(1,n-k+1):\n    ans = hs[i+k-1]-hs[i]\n    an = min(an, ans)\n    #print(an)\nprint(an)\n\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 13 03:08:56 2020\n\n@author: liang\n\"\"\"\n\nN, K = list(map(int, input().split()))\nh = [int(input()) for _ in range(N)]\nans = 10**10\nh.sort()\nfor i in range(0,N-K+1):\n    tmp = h[i+K-1] - h[i]\n    ans = min(ans,tmp)\nprint(ans)\n", "N, K = map(int, input().split())\n\nH = []\nfor i in range(N):\n    H.append(int(input()))\n\nH.sort()\n\nans = 1000000009\n\nfor i in range(N-K+1):\n    ans = min(ans, H[i+K-1]-H[i])\n\nprint(ans)", "n,k=map(int,input().split())\nh=list(int(input()) for i in range(n))\nh.sort()\n\nc=[]\n\nfor i in range(n-k+1):\n  a=h[i+k-1]-h[i]\n  c.append(a)\n\nprint(min(c))", "N, K = map(int,input().split())\nH = []\nmin_dif = 1000000000000000000000000\n\nfor n in range(N):\n  h = int(input())\n  H.append(h)\n\nH.sort()\n\nfor i in range(N-K+1):\n  dif = H[i+K-1] - H[i]\n  if dif < min_dif:\n    min_dif = dif\n    \nprint(min_dif)", "n, k = map(int, input().split())\nh = [int(input()) for _ in range(n)]\nh = sorted(h)\nH = []\n\nfor i in range(n-k+1):\n    H_i = h[i+k-1]-h[i]\n    H.append(H_i)\n\nprint(min(H))", "n,k = map(int,input().split())\nh = []\n\nfor i in range(n):\n    h.append(int(input()))\n\nh.sort()\n\nans = 1000000000\n\nfor j in range(n-k+1):\n    s = h[j+k-1] - h[j]\n    if s < ans:\n        ans = s\n\nprint(ans)", "n,k=map(int,input().split())\nh=[int(input()) for _ in range(n)]\nl=[]\nh.sort()\nfor i in range(n+1-k):\n  x=h[i+k-1]-h[i]\n  l.append(x)\nprint(min(l))", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef ngram(numbers,n):\n    return list([numbers[i:i+n] for i in range(len(numbers)-2)])\n\ndef main():\n    numbers=[]\n    n,m = map(int,input().split())\n    [numbers.append(int(input())) for _ in range(n)]\n    numbers.sort()\n    print(min(numbers[i+m-1] - numbers[i] for i in range(n-m+1)))\n\ndef __starting_point():\n    main()\n__starting_point()", "N,K = map(int,input().split())\nH = sorted([int(input()) for n in range(N)])\nans = H[-1]-H[0]\n\nfor n in range(N-K+1):\n  ans = min(ans,H[n+K-1]-H[n])\n  \nprint(ans)", "n,k=map(int,input().split())\nh=sorted([int(input()) for i in range(n)])\nprint(min([h[i+k-1]-h[i] for i in range(n-k+1)]))", "N, K = map(int, input().split())\nA = [int(input()) for _ in range(N)]\nB = sorted(A)\nans = []\nfor i in range(N-K+1):\n  ans.append(B[i+K-1]-B[i])\nprint(min(ans))", "N,K = map(int,(input().split()))\nh = [int(input())for _ in range(N)]\nh.sort()\n\nprint(min(h[i+K-1]-h[i] for i in range(N-K+1)))", "N,K = list(map(int,input().split()))\nh = [int(input()) for i in range(N)]\nh.sort(reverse = True)\nminimum = 10**9\nfor i in range(N-K+1):\n    minimum = min(minimum,h[i] - h[i+K-1])\nprint(minimum)\n", "n, k = map(int, input().split())\nab = [int(input()) for _ in range(n)]\n\nsab = sorted(ab)\n\nres = 10**10\n\nfor i in range(n-k+1):\n    res = min(res,sab[i+k-1]-sab[i])\n\nprint(res)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n#\n#\n# @stop_watch\ndef solve(N, K, h):\n    h.sort()\n    ans = 10 ** 9\n    for i in range(K - 1, N):\n        ans = min(ans, h[i] - h[i - (K - 1)])\n    print(ans)\n\n\ndef __starting_point():\n    N, K = list(map(int, input().split()))\n    h = [int(input()) for _ in range(N)]\n    solve(N, K, h)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # N, K = 10 ** 5, 10 ** 5 // 5\n    # h = [randint(1, 10 ** 9) for _ in range(N)]\n    # solve(N, K, h)\n\n__starting_point()", "n,k = map(int, input().split())\nh = [ int(input()) for _ in range(n)]\nh.sort()\n\ndef check(x):\n  for i in range(n):\n    if i+k-1 >= n:\n      continue\n    if h[i+k-1] - h[i] <= x:\n      return True\n  return False\n    \nhmax, hmin = max(h), min(h)\nfv, tv = -1, (hmax-hmin)\nwhile tv - fv > 1:\n  mid = (tv + fv) // 2\n  if check(mid):\n    tv = mid\n  else:\n    fv = mid\nprint(tv)", "n,k = map(int, input().split())\nh = sorted(list(int(input()) for _ in range(n)))\nans = []\nfor i in range(n-k+1):\n    ans.append(h[i+k-1]-h[i])\nprint(min(ans))", "n,k=map(int,input().split())\nH=[]\nfor i in range(n):\n    H.append(int(input()))\nH.sort()\nans = min( H[i+k-1]-H[i] for i in range( n-k+1 ) )\nprint(ans)", "n, k = map(int, input().split())\n\ntrees = []\nfor _i in range(n):\n  tree = int(input())\n  trees.append(tree)\n\ntrees.sort()\nans = float('inf')\n\nfor i in range(n - k + 1):\n  diff = trees[i + k - 1] - trees[i]\n  if ans > diff:\n    ans = diff\n\nprint(ans)", "n,k = map(int,input().split())\n\nl = [int(input()) for i in range(n)]\n\nl.sort()\nmi = float('INF')\nfor i in range(n-k+1):\n    sub = l[i+k-1]-l[i]\n    mi = min(mi,sub)\n\nprint(mi)", "n,m = list(map(int,input().split(' ')))\na = []\nfor i in range(n):\n    x = int(input())\n    a.append(x)\na.sort()\nmn = 1000000000\nfor i in range(m-1,n):\n    mn = min(a[i] - a[i - m+1],mn)\nprint(mn)\n", "n,k=map(int,input().split())\nh=[int(input()) for i in range(n)]\nh.sort(reverse=True)\nans=float('inf')\nfor i in range(n-k+1):\n  ans=min(h[i]-h[i+k-1],ans)\nprint(ans)", "n,k = map(int,input().split())\nh = [0]*n\nfor i in range(n):\n  h[i]=int(input())\nh = sorted(h)\nanswer = 100000000000000\nfor j in range(n+1-k):\n  answer = min(answer,h[j-1+k]-h[j])\nprint(answer)", "n, k = map(int, input().split())\nhl = sorted(list(int(input()) for _ in range(n)))\n\nans = 1001001001\nfor i in range(n-k+1):\n    ans = min(hl[i+k-1]-hl[i], ans)\n\nprint(ans)", "from sys import stdin\nfrom collections import defaultdict\ninput = stdin.readline\n# ~ T = int(input())\nT = 1\nfor t in range(1,T + 1):\n\tn,k = list(map(int,input().split()))\n\t_input = []\n\tfor i in range(n):\n\t\t_input.append(int(input()))\n\t_input.sort()\n\tmin_ans = 10000000000\n\tfor i in range(k - 1,len(_input)):\n\t\tmin_ans = min(min_ans,_input[i] - _input[i - k + 1])\n\tprint(min_ans)\n", "n,k=map(int,input().split())\nh=[int(input()) for i in range(n)]\n\nh.sort()\n\nl=[]\nfor i in range(n-k+1):\n        a=h[i+k-1]-h[i]\n        l.append(a)\n\nprint(min(l))", "n,k = map(int,input().split())\nh = [int(input()) for _ in range(n)]\nh.sort()\nans = [h[i+k-1]-h[i] for i in range(n-k+1)]\nprint(min(ans))", "n,k=map(int,input().split())\nh=sorted([int(input()) for i in range(n)])\nc= float('inf')\nfor i in range(n-k+1):\n    c=min(c,h[i+k-1]-h[i])\nprint(c)", "N, K = list(map(int, input().split()))\nh = []\nans = 1000000000\n\nfor i in range(N):\n    h.append(int(input()))\n\nh = sorted(h)\n\nfor j in range(N-K+1):\n    if ans > h[j+K-1]-h[j]:\n        ans = h[j+K-1]-h[j]\nprint(ans)\n", "n,k =map(int,input().split())\nh = [int(input()) for _ in range(n)]\nl = []\nh.sort()\nfor i in range(n+1-k):\n        x = h[i+k-1] - h[i]\n        l.append(x)\nprint(min(l))", "n, k = map(int,input().split())\nh = [int(input()) for _ in range(n)]\nh = sorted(h)\nhmin = 1e10\nfor i in range(n-k+1):\n    hmin = min(hmin,h[i+k-1]-h[i])\nprint(hmin)", "N, K = list(map(int, input().split()))\n\nh = []\nfor i in range(N):\n    h.append(int(input()))\n    \nh.sort()\nh.reverse()\n\nls = []\n\nfor i in range(N - K + 1):\n    ls.append(h[i] - h[i + K - 1])\n\nprint((min(ls)))\n", "N, K = map(int, input().split())\nH = [int(input()) for _ in range(N)]\nH.sort(reverse=True)\n\nmin_h = float('inf')\nfor i in range(N-K+1):\n    temp = H[i] - H[i+K-1]\n    min_h = min(min_h, temp)\n\n\nprint(min_h)", "n,k=map(int,input().split())\nh=[]\nma=10**9\nfor i in range(n):\n  a=int(input())\n  h.append(a)\nh.sort()\n\nfor i in range(n-k+1):\n  sa=h[k-1+i]-h[i]\n  if sa<ma:\n    ma=sa\n    \nprint(ma)", "n,k=map(int,input().split())\nh=sorted([int(input()) for i in range(n)])\nprint(min(h[i+k-1]-h[i] for i in range(n-k+1)))", "N, K = map(int, input().split())\nh = []\nfor i in range(N):\n  h.append(int(input()))\nh.sort()\nans = 1000000000\nfor i in range(N-K+1):\n  ans = min(ans, h[i+K-1]-h[i])\nprint(ans)", "n, k = map(int, input().split())\nh = sorted([int(input()) for _ in range(n)], reverse=True)\n\nm = float('inf')\nfor i in range(n-k+1):\n  m = min(m, h[i]-h[i+k-1])\n\nprint(m)", "n, k = map(int, input().split())\nhl = []\nfor i in range(n):\n    hl.append(int(input()))\n\nhl.sort()\nans = 10000000001\n\nfor j in range(n-k+1):\n    s = hl[j+k-1] - hl[j]\n    if s < ans:\n        ans = s\n    else:\n        pass\nprint(ans)", "n,k = map(int, input().split())\nh = sorted([int(input()) for _ in range(n)])\n\nnums = [0]*(n-1)\nfor i in range(n-1): nums[i] = h[i+1]-h[i]\n\nans = sum(nums[:k-1])\nt = sum(nums[:k-1])\nfor i in range(k-1,n-1):\n  t += nums[i] - nums[i-k+1]\n  if t < ans: ans = t\nprint(ans)", "N, K = map(int, input().split())\nL = []\nmini = float('inf')\n\nfor i in range(N):\n    h = int(input())\n    L.append(h)\n\nL.sort(reverse=True)\n\nfor i in range(len(L)-K+1):\n    if L[i] - L[i+K-1] < mini:\n        if L[i] - L[i+K-1] == 0:\n            print(0)\n            return\n        else:\n            mini = L[i] - L[i+K-1]\n\nprint(mini)", "N,K=map(int, input().split())\n\nH=sorted([int(input()) for _ in range(N)])\n\nans=H[K-1]-H[0]\n\nfor k in range(N-K+1):\n\t#print(H[k+K-1],H[k])\n\tans=min(ans,H[k+K-1]-H[k])\n\nprint(ans)", "N,K = map(int,input().split())\nh = [0]*N\nfor i in range(N):\n    h[i] = int(input())\nh = sorted(h)\nans = 10**10\nfor i in range(N-(K-1)):\n    tmp = h[i+K-1] - h[i]\n    ans = min(tmp,ans)\nprint(ans)", "n,k=map(int,input().split())\nlisth=[]\nfor i in range(n):\n  listh.append(int(input()))\nlisth.sort()\nans=10**9\nfor i in range(n-k+1):\n  high=listh[i+k-1]-listh[i]\n  if high<ans:\n    ans=high\n\nprint(ans)", "N, K = map(int, input().split())\nH = sorted([int(input()) for i in range(N)])\nlist1 = []\n\nfor i in range(N - K + 1):\n \n  h = H[i + K -1]-H[i]\n  list1.append(h)\n\nprint(min(list1)) ", "#!/usr/bin/env python3\nn,k=map(int,input().split())\nh=[int(input()) for _ in range(n)]\nh.sort()\nans=1000000007\nfor i in range(n-k+1):\n    ans=min(ans,h[i+k-1]-h[i])\nprint(ans)", "N,K=list(map(int,input().split()))\na=[int(input()) for i in range(N)]\n\na.sort()\nans=100000000000000000000000\n\nfor j in range(N-K+1):\n    if a[j+K-1]-a[j]<ans:\n        ans=a[j+K-1]-a[j]\n\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\nh = [int(input()) for i in range(n)]\nh.sort()\n\nans = 100000000000000000000000000000000000000\nfor i in range(n-k+1):\n    ans = min(ans, h[i+k-1] - h[i])\nprint(ans)\n", "N,K = map(int,input().split())\nlsh = [int(input()) for _ in range(N)]\nlsh.sort()\nans = 10**9\nfor i in range(N-K+1):\n    ans = min(ans,lsh[i+K-1]-lsh[i])\nprint(ans)", "N,K=list(map(int,input().split()))\nh=[0]*N\nfor H in range(N):\n    h[H-1]=int(input())\nA=sorted(h)\nL=K-1\nM=A[L]-A[0]\nO=(N-K)+1\nfor j in range(O):\n    if M>A[L+j]-A[j]:\n        M=A[L+j]-A[j]\nprint(M)\n", "N,K = map(int,input().split())\nH = [int(input()) for _ in range(N)]\n\nH.sort()\nans = float(\"inf\")\n\nfor i in range(N-K+1):\n  tmp = H[i+K-1] - H[i]\n  ans = min(ans, tmp)\n  \nprint(ans)", "def main():\n    n, k = map(int, input().split(\" \"))\n    data = sorted(int(input()) for _ in range(n))\n    print(min([data[i+k-1] - data[i] for i in range(n-k+1)]))\nmain()", "n,k = map(int, input().split())\nH = []\nfor i in range(n):\n    H.append(int(input()))\nH.sort()\nans = 10**9+2\nfor i in range(n-k+1):\n    ans = min(ans, H[i+k-1]-H[i])\nprint(ans)", "N, K, *H = list(map(int, open(0).read().split()))\nH.sort()\nprint((min(H[i + K - 1] - H[i] for i in range(N - K + 1))))\n", "n, k = map(int , input().split())\nhn = [int(input()) for _ in range(n)]\nhn.sort()\n\nprint(min(hn[i+k-1]-hn[i] for i in range(n-k+1)))", "n, k = map(int, input().split())\nlis = []\nans = 1000000000000000000\n\nfor _ in range(n):\n  lis.append(int(input()))\n\nlis.sort()\n\nfor i in range(n):\n  if i+k-1 >= len(lis):\n    break\n  else:\n    mi = abs(lis[i] - lis[i+k-1])\n    ans = min(ans, mi)\n\nprint(ans)", "n, k = list(map(int, input().split()))\n\nh = [int(input()) for _ in range(n)]\n\nh.sort()\n\ns = h[-1] - h[1]\n\nfor i in range(n-k+1):\n    s = min(s, h[i+k-1]-h[i])\n\nprint(s)\n", "N,K=list(map(int,input().split()))\nh=[int(input()) for _ in range(N)]\nh.sort()\nprint((min(h[i+K-1]-h[i] for i in range(N-K+1))))\n", "import numpy as np\n\nN, K = list(map(int, input().split()))\nH = [int(input()) for _ in range(N)]\n\nsH = np.array(sorted(H), dtype=np.int64)\nshift = sH[K-1:]\ndiff = shift - sH[:len(shift)]\nans = min(diff)\nprint(ans)\n", "# coding: utf-8\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    H = sorted([int(input()) for _ in range(N)])\n    ans = min([H[i + K - 1] - H[i] for i in range(N - K + 1)])\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nimport collections\nfrom itertools import product\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn, k = mi()\nh = [ii() for i in range(n)]\nh.sort()\nans = 10**12\nfor i in range(n):\n    last = i + k - 1\n    if last >= n:\n        break\n    ans = min(ans, h[last]-h[i])\nprint(ans)", "N,K = map(int, input().split())\nh = []\nfor i in range(N):\n  tmp = int(input())\n  h.append(tmp)\nh.sort()\n\nans = h[N-1]\nfor i in range(0, N-K+1):\n  tmp = h[i+K-1] - h[i]\n  ans = min(ans, tmp)\nprint(ans)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\n# from math import gcd\n# from itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n# #from collections import deque\n# from collections import deque,defaultdict,Counter\n# import decimal\n# import re\n# import math\n# import bisect\n# import heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nn,k = readInts()\nA = [I() for _ in range(n)]\nA = sorted(A)\na = INF\nfor i in range(n-k+1):\n    #print(A[i+k-1], A[i])\n    a = min(a,abs(A[i+k-1] - A[i]))\nprint(a)\n", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, K = MI()\n    L = [I() for i in range(N)]\n    L.sort()\n    res = float('inf')\n    \n    for i in range(N-K+1):\n        res = min(res, L[i+K-1] - L[i])\n    \n    print(res)\ndef __starting_point():\n    main()\n__starting_point()", "N, K = map(int,input().split())\nh = [int(input()) for i in range(N)]\ns_h = sorted(h)\ntmp = []\nans1 = 0\nans2 = 0\nans3 = 0\nfor i in range(N-K+1):\n    ans1 = s_h[i+K-1]\n    ans2 = s_h[i]\n    ans3 = ans1 - ans2\n    tmp.append(ans3)\n\nprint(min(tmp))", "N, K = map(int, input().split())\nH = [int(input()) for _ in range(N)]\n\nH.sort()\n\nres = 10**9\nfor i in range(N - K + 1):\n    res = min(res, H[i + K - 1] - H[i])\n\nprint(res)", "n, k = map(int,input().split())\nh_l = sorted([ int(input()) for _ in range(n)  ])\nans = float('inf')\nfor i in range(n-k+1):\n    ans = min(h_l[i+k-1]-h_l[i],ans)\nprint(ans)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport numpy as np\n\ndef main():\n    numbers=[]\n    n,m = map(int,input().split())\n    [numbers.append(int(input())) for _ in range(n)]\n    n_numbers=np.array(numbers,dtype=int)\n    n_numbers.sort()\n    print(min(n_numbers[i+m-1] - n_numbers[i] for i in range(n-m+1)))\n\ndef __starting_point():\n    main()\n__starting_point()", "n,k = map(int,input().split())\ns = []\nfor i in range(n):\n    s.append(int(input()))\ns.sort()\ns.reverse()\nans = s[0]-s[-1]\nfor i in range(n-k+1):\n    ans = min(ans,s[i]-s[i+k-1])\nprint(ans)", "n,k = map(int,input().split())\nh = sorted([int(input()) for _ in range(n)])\n\nans = float(\"inf\")\nfor i in range(n-k+1):\n    sa = h[i+k-1] - h[i]\n    if ans > sa:\n        ans = sa\n        \nprint(ans)", "import sys\ninput = sys.stdin.readline\n\nn,k = map(int, input().split())\nh_list = []\n\nfor _ in range(n):\n    h_list.append(int(input()))\n\nsort_h_list = sorted(h_list)\n\nL_index = 0\nR_index = 0\nL_value = sort_h_list[0]\nR_value = sort_h_list[0]\ncount = 0\nans = 10**9\n\n#\u5c3a\u53d6\u308a\u6cd5\u307d\u3044\u306e\nwhile (R_index < n):\n    if (count < k):\n        count += 1\n        R_value = sort_h_list[R_index]\n        if count == k:\n            ans = min(ans,R_value - L_value)\n        R_index += 1\n\n    else:\n        count -= 1\n        L_index += 1\n        L_value = sort_h_list[L_index]\n\nprint(ans)", "n,k = list(map(int,input().split()))\nh = [int(input()) for _ in range(n)]\nh.sort()\nd = []\nfor i in range(n-k+1):\n    d.append(abs(h[i] - h[i+k-1]))\nprint((min(d)))\n", "def main():\n    N, K = list(map(int, input().split()))\n    h = []\n    for _ in range(N):\n        h.append(int(input()))\n    h.sort()\n    ans = pow(10, 10)\n    for k in range(N-K+1):\n        ans = min(ans, abs(h[k]-h[K-1+k]))\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K, *H = map(int, open(0).read().split())\nH.sort()\nans = float('inf')\nfor i in range(N - K + 1):\n    ans =min(ans, H[i + K - 1] - H[i])\nprint(ans)", "\nN, K = map(int, input().split())\nh = [int(input()) for i in range(N)]\nh.sort()\nl = [h[i+K-1] - h[i] for i in range(N-K+1)]\nprint(min(l))", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n, k = i_map()\n    h = [i_input() for i in range(n)]\n    h.sort()\n    print((min(h[i+k-1] - h[i] for i in range(n-k+1))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int,input().split()))\nh = []\n\nfor i in range(n):\n    x = int(input())\n    h.append(x)\n\nh = sorted(h)\nans = 10**9\ntmp = 0\n\nfor i in range(k-1, n):\n    tmp = h[i] - h[i-(k-1)]\n    if tmp < ans:\n        ans = tmp\n\nprint(ans)\n", "n,k=list(map(int,input().split()))\nh=[int(input()) for _ in range(n)]\nl=[]\nh.sort()\nfor i in range(n+1-k):\n  x=h[i+k-1]-h[i]\n  l.append(x)\nprint((min(l)))\n", "N,K = map(int,input().split())\nh = []\nfor i in range(N):\n  h.append(int(input()))\nh.sort()\nans = 10 ** 18\nfor i in range(N-K+1):\n  if h[i+K-1] - h[i] < ans:\n    ans = h[i+K-1] - h[i]\nprint(ans)", "N, K = map(int, input().split())\nA = [int(input()) for _ in range(N)]\nB = sorted(A)\nans = []\nflag = 0\nfor i in range(N-K+1):\n  ans.append(B[i+K-1]-B[i])\n  flag = 1\nprint(min(ans) if flag == 1 else \"0\")", "#C - Christmas Eve\nN,K = map(int,input().split())\nh = [int(input()) for _  in range(N)]\nh = sorted(h, reverse = True)\n\ndiff = 10**9\nfor i in range(N-K+1):\n    a = h[i]-h[i+K-1]\n    if diff > a:\n        diff = a\n    if diff == 0:\n        break\nprint(diff)", "n, k = list(map(int, input().split()))\nhs = [int(input()) for i in range(n)]\n\nhs = sorted(hs)\n\ndiff = 10**12\nfor i in range(n-k+1):\n    diff = min(diff, hs[i+k-1] - hs[i])\n\nprint(diff)\n", "n, k = list(map(int, input().split()))\nhl = sorted(list(int(input()) for _ in range(n)), reverse=True)\nans = 1001001001\nfor i in range(n-k+1):\n    ans = min(ans, hl[i]-hl[i+k-1])\nprint(ans)\n", "N,K = map(int,input().split())\nH = []\nsa = []\n\nfor i in range(N):\n  H.append(int(input()))\n\nH.sort()\n\nfor j in range(N-K+1):\n  sa.append(H[K+j-1]-H[j])\n\nprint(min(sa))"]