["cij = [list(input()) for _ in range(3)]\n\nprint(cij[0][0] + cij[1][1] + cij[2][2])", "def resolve():\n    matrix = []\n    for i in range(3):\n        line = input()\n        matrix.append(line)\n    ans = \"\"\n    for i in range(3):\n        ans += matrix[i][i]\n    print(ans)\nresolve()", "print(\"\".join(input()[i]for i in(0,1,2)))", "c1=str(input())\nc2=str(input())\nc3=str(input())\nprint(c1[0]+c2[1]+c3[2])", "c = [input() for _ in range(3)]\nprint(c[0][0]+c[1][1]+c[2][2])", "S1,S2,S3 = [input() for _ in range(3)]\nprint(S1[0]+S2[1]+S3[2])", "print(*[input()[i] for i in range(3)],sep='')", "a = input()[0]\ns = input()[1]\nd = input()[2]\nprint(a+s+d)", "ans = ''\n\nfor i in range(3):\n   ans += input()[i]\n\nprint(ans)", "ans = []\nfor i in range(3):\n  c = input()\n  ans.append(c[i])\nprint(\"\".join(ans))", "c=[input() for i in range(3)]\nprint(*[c[i][i] for i in range(3)],sep=\"\")", "S1 = input()\nS2 = input()\nS3 = input()\nprint((S1[0] + S2[1] + S3[2]))\n", "s = [list(input()) for _ in range(3)]\nprint(\"\".join([s[i][i] for i in range(3)]))", "c=[input() for _ in range(3)]\nprint((c[0][0]+c[1][1]+c[2][2]))\n", "c=[input() for _ in range(3)]\nprint(c[0][0]+c[1][1]+c[2][2])", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "x = [input() for i in range(3)]\nprint(x[0][0]+x[1][1]+x[2][2])", "C = [input() for _ in range(3)]\nprint(C[0][0] + C[1][1] + C[2][2])", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "res = \"\"\nfor i in range(3):\n    line = input()\n    res += line[i]\n\nprint(res)\n", "print(input()[0] + input()[1] + input()[2])", "x=[input() for _ in range(3)]\nfor i in range(3):\n    print(x[i][i],end=\"\")", "A = []\nfor i in range(3):\n    A.append(input())\nprint(A[0][0]+A[1][1]+A[2][2])", "ans = \"\"\nfor i in range(3):\n    ans += input()[i]\nelse:\n    print(ans)", "#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#a = [list(input()) for _ in range(n)]\n#a = [int(input()) for _ in range(n)]\n\nc1 = input()\nc2 = input()\nc3 = input()\n\nprint((c1[0]+c2[1]+c3[2]))\n\n\n\n\n\n", "c=[list(input()) for i in range(3)]\nprint(c[0][0]+c[1][1]+c[2][2])", "a = input()\nb = input()\nc = input()\nprint(a[0] + b[1] + c[2])", "a = input()\nb = input()\nc = input() \nprint((a[0] + b[1] + c[2]))\n", "a = map(str, input().split())\nline_a = ''.join(a)\n\nb = map(str, input().split())\nline_b = ''.join(b)\n\nc = map(str, input().split())\nline_c = ''.join(c)\n\nprint('{}{}{}'.format(line_a[0], line_b[1], line_c[2]))", "c = [input() for _ in range(3)]\nfor i in range(3):\n    print(c[i][i], end=\"\")", "#!/usr/bin/env python3\n\n\nc1 = str(input())\nc2 = str(input())\nc3 = str(input())\n\n\nprint((c1[0]+c2[1]+c3[2]))\n", "a,b,c=input(),input(),input()\nprint(a[0]+b[1]+c[2])", "c = []\n\nfor i in range(3):\n    tmp = input()\n    c.append(tmp)\n\nans = \"\"\nfor i in range(3):\n    ans += c[i][i]\n\nprint(ans)", "a = list(input())\nb = list(input())\nc = list(input())\n\nprint(a[0] + b[1] + c[2])", "str1 = input()\nstr2 = input()\nstr3 = input()\n\nprint(str1[0]+str2[1]+str3[2])", "a = input()\nb = input()\nc = input()\nprint(a[0] + b[1] + c[2])", "c1 = list(input())\nc2 = list(input())\nc3 = list(input())\n\nprint(c1[0]+c2[1]+c3[2])", "a = input()\nb = input()\nc = input()\nprint(a[0] + b[1] + c[2])", "a = input()\nb = input()\nc = input()\nprint((a[0] + b[1] + c[2]))\n", "a = input()\nb = input()\nc = input()\nprint(a[0]+b[1]+c[2])", "print(''.join([input()[i] for i in range(3)]))", "c = [list(input()) for i in range(3)]\n\nprint(c[0][0]+c[1][1]+c[2][2])", "N_list = []\n\nfor i in range(3):\n    N = input()\n    N_i = N[0:3]\n    N_list.append(N_i)\n    i += 1\n    \nprint(N_list[0][0] + N_list[1][1] + N_list[2][2])", "print(input()[0]+input()[1]+input()[2])", "cs=[input() for i in range(3)]\nprint(cs[0][0]+cs[1][1]+cs[2][2])", "l = []\nfor i in range(3):\n  l.append(input())\nprint(l[0][0]+l[1][1]+l[2][2])", "c1 = str(input())\nc2 = str(input())\nc3 = input()\nprint(c1[0]+c2[1]+c3[2])", "print(''.join([input()[i] for i in range(3)]))", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "\nc1=list(map(str,input()))\nc2=list(map(str,input()))\nc3=list(map(str,input()))\nprint(c1[0]+c2[1]+c3[2])", "s = \"\"\nfor i in range(3):\n  s += input()\nprint(s[0] + s[4] + s[8])", "ls = []\nfor i in range(3):\n  ls.append(input())\nans = ''\nfor i in range(3):\n  ans += ls[i][i]\nprint(ans)", "def main():\n    cat = \"\".join\n    data = cat(input() for _ in range(3))\n    print((cat([data[0], data[4], data[8]])))\n\n\nmain()\n", "a = input()\nb = input()\nc = input()\n\nprint((a[0] + b[1] + c[2]))\n", "#\n# abc090 a\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"ant\nobe\nrec\"\"\"\n        output = \"\"\"abc\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"edu\ncat\nion\"\"\"\n        output = \"\"\"ean\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    C1 = input()\n    C2 = input()\n    C3 = input()\n\n    print((C1[0]+C2[1]+C3[2]))\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "n = input()\nn1 = input()\nn2 = input()\n\nprint(n[0],n1[1],n2[2], flush=True,sep='')\n\n", "c = [str(input()) for i in range(3)]\nw = c[0][0]+c[1][1]+c[2][2]\nprint(w)", "moji1 = str(input())\nmoji2 = str(input())\nmoji3 = str(input())\n\nprint(moji1[0]+moji2[1]+moji3[2])", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "c1 = input()\nc2 = input()\nc3 = input()\n\nprint(c1[0]+c2[1]+c3[2])", "for i in range(3):\n    s = input()\n    print(s[i], end='')", "A = list(input())\nB = list(input())\nC = list(input())\n\nprint(f\"{A[0]}{B[1]}{C[2]}\")", "print(input()[0]+input()[1]+input()[2])", "a = str(input())\nb = str(input())\nc = str(input())\nprint(a[0]+b[1]+c[2])", "c1=input()\nc2=input()\nc3=input()\nprint(c1[0],end=\"\")\nprint(c2[1],end=\"\")\nprint(c3[2])", "a = input()\nb = input()\nc = input()\nprint(a[0]+b[1]+c[2])", "l=input()[0]\nl+=input()[1]\nl+=input()[2]\nprint(l)", "a = input()\nb = input()\nc = input()\n\nprint(a[0]+b[1]+c[2])", "import sys\ns = sys.stdin.read().split()\nprint(s[0][0] + s[1][1] + s[2][2])", "a = input()\nb = input()\nc = input()\nprint(a[0]+b[1]+c[2])", "[print(input()[i],end='') for i in range(3)]", "print(input()[0]+input()[1]+input()[2])", "s = input()\nt = input()\nu = input()\nprint(s[0]+t[1]+u[2])", "c_lst = [str(input()) for _ in range(3)]\nans = ''\nfor i in range(3):\n    ans += c_lst[i][i]\nprint(ans)", "c = []\nfor i in range(3):\n  c += [input()]\n  \nprint(c[0][0] + c[1][1]  + c[2][2])", "cs=[\"\"]*3\nfor i in range(3):\n    cs[i]=input()\nprint(cs[0][0]+cs[1][1]+cs[2][2])", "c1 = input()\nc2 = input()\nc3 = input()\n\nprint(c1[0] + c2[1] + c3[2])", "a = [input() for _ in range(3)]\nprint(a[0][0] + a[1][1] + a[2][2])", "import sys\nC = sys.stdin.readlines()\nprint(C[0][0]+C[1][1]+C[2][2])", "c1 = input()\nc2 = input()\nc3 = input()\nprint(\"\".join(c1[0]+c2[1]+c3[2]))", "c1 = str(input())\nc2 = str(input())\nc3 = str(input())\n\nans = c1[0] + c2[1] + c3[2]\nprint(ans)", "ans = ''\nans += input()[0]\nans += input()[1]\nans += input()[2]\nprint(ans)\n", "i1=input()\ni2=input()\ni3=input()\nprint(str(i1[0])+str(i2[1])+str(i3[2]))", "c1 = list(input())\nc2 = list(input())\nc3 = list(input())\n\nprint(c1[0] + c2[1] + c3[2])", "a = input()[0]\nb = input()[1]\nc = input()[2]\nprint(a+b+c)", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "S = [input() for i in range(3)]\nprint(S[0][0]+S[1][1]+S[2][2])", "a = [list(input()) for i in range(3)]\n\nprint(a[0][0]+a[1][1]+a[2][2])", "l1 = input ()\nl2 = input ()\nl3 = input ()\nprint (l1[0]+l2[1]+l3[2])", "c1=str(input())\nc2=str(input())\nc3=str(input())\n\nprint(c1[0]+c2[1]+c3[2])", "n = list(input())\nn1 = list(input())\nn2 = list(input())\n\nprint(n[0]+n1[1]+n2[2])", "c1 = input()[0]\nc2 = input()[1]\nc3 = input()[2]\nprint((c1+c2+c3))\n", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "\ndef main():\n    c = [input() for _ in range(3)]\n    print((c[0][0] + c[1][1] + c[2][2]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "c1 = input()\nc2 = input()\nc3 = input()\nprint(c1[0]+c2[1]+c3[2])", "cs=[]\nfor i in range(3):\n    cs.append(input())\nprint(cs[0][0]+cs[1][1]+cs[2][2])", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "S = [input() for _ in range(3)]\nprint(S[0][0]+S[1][1]+S[2][2])", "a=input()\nb=input()\nc=input()\nprint(a[0]+b[1]+c[2])", "a = input()\nb = input()\nc = input()\nprint(a[0]+b[1]+c[2])"]