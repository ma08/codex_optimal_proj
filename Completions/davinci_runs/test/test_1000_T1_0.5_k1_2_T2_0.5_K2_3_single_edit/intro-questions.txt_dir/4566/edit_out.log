2022-04-16 00:21:28.129848 num operations 1
2022-04-16 00:21:28.129868 size on input set 1
2022-04-16 00:21:31.554754 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \u5165\u529b\n\nn, m = map(int, input().split())\n\n# \u5165\u529b\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc106/tasks/abc106_b\n\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\n# \u5165\u529b\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n"
    }
  ],
  "created": 1650068488,
  "object": "edit"
}
2022-04-16 00:21:31.555024 fix syntax errors 3 ['# 入力\n\nn, m = map(int, input().split())\n\n# 入力\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# 出力\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n', '# https://atcoder.jp/contests/abc106/tasks/abc106_b\n\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# 出力\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n', '\nn, m = map(int, input().split())\n\n# 入力\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# 出力\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n']
2022-04-16 00:21:31.555059 size on output set 3
2022-04-16 00:21:31.555069 num operations 1
2022-04-16 00:21:31.555074 size on input set 1
2022-04-16 00:21:38.031124 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n"
    },
    {
      "index": 1,
      "text": "\nimport numpy as np\n\nn = int(input())\na = np.array(list(map(int, input().split())))\n\n\nfor i in range(n):\n    print(a[i])\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\n \ndp = [0]*(N+1)\n \nfor i in range(N):\n    dp[i+1] = max(dp[i], dp[i]+A[i])\n \nprint(dp[N])\n"
    }
  ],
  "created": 1650068491,
  "object": "edit"
}
2022-04-16 00:21:38.031363 fix syntax errors 3 ['\nN, M = map(int, input().split())\n\n# 入力された辺を格納する配列\nedge = []\n\n# 各頂点の次数を格納する配列\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # 次数を計算する\n    degree[a] += 1\n    degree[b] += 1\n\n# 次数を出力する\nfor i in range(1, N + 1):\n    print(degree[i])\n', '\nimport numpy as np\n\nn = int(input())\na = np.array(list(map(int, input().split())))\n\n\nfor i in range(n):\n    print(a[i])\n', '\nN = int(input())\nA = list(map(int, input().split()))\n \ndp = [0]*(N+1)\n \nfor i in range(N):\n    dp[i+1] = max(dp[i], dp[i]+A[i])\n \nprint(dp[N])\n']
2022-04-16 00:21:38.031396 size on output set 3
