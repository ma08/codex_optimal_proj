2022-04-16 02:14:47.034921 num operations 1
2022-04-16 02:14:47.034942 size on input set 1
2022-04-16 02:14:49.721181 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = set()\n    for i in range(n):\n        correct.add(input())\n    print(len(correct))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = [0]*n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    cases = []\n    for i in range(n - 1):\n        cases.append(input())\n    print(cases)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075287,
  "object": "edit"
}
2022-04-16 02:14:49.721402 fix syntax errors 3 ["\n\ndef main():\n    n = int(input())\n    correct = set()\n    for i in range(n):\n        correct.add(input())\n    print(len(correct))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = [0]*n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    cases = []\n    for i in range(n - 1):\n        cases.append(input())\n    print(cases)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 02:14:49.721427 size on output set 3
2022-04-16 02:14:49.721438 num operations 1
2022-04-16 02:14:49.721444 size on input set 1
2022-04-16 02:14:52.017384 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for _ in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\" or answer == \"a\\n\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075289,
  "object": "edit"
}
2022-04-16 02:14:52.017584 fix syntax errors 3 ['\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A\\n":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for _ in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A\\n" or answer == "a\\n":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A\\n":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:14:52.017622 size on output set 3
2022-04-16 02:14:52.017632 num operations 1
2022-04-16 02:14:52.017636 size on input set 1
2022-04-16 02:14:54.605594 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nanswers = [input() for i in range(n)]\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        if answers[i] == answers[i + 1]:\n            score = score + 1\n\nprint(score)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    }
  ],
  "created": 1650075292,
  "object": "edit"
}
2022-04-16 02:14:54.605787 fix syntax errors 3 ['\nn = int(input())\nanswers = [input() for i in range(n)]\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n', '\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        if answers[i] == answers[i + 1]:\n            score = score + 1\n\nprint(score)\n', '\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n']
2022-04-16 02:14:54.605813 size on output set 3
2022-04-16 02:14:54.605823 num operations 1
2022-04-16 02:14:54.605828 size on input set 1
2022-04-16 02:14:56.994315 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1-i]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    }
  ],
  "created": 1650075294,
  "object": "edit"
}
2022-04-16 02:14:56.994496 fix syntax errors 3 ['n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n', '\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1-i]:\n        score += 1\nprint(score)\n', '\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n']
2022-04-16 02:14:56.994520 size on output set 3
2022-04-16 02:14:56.994530 num operations 1
2022-04-16 02:14:56.994535 size on input set 1
2022-04-16 02:15:01.641302 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\ndef main():\n    n = int(input())\n    a = [input() for i in range(n)]\n    score = 0\n    for i in range(n):\n        if a[i] == 'A':\n            score += 1\n    print(score)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# Python program to count the number of occurences of a character in a string\n# using recursion\n\nn = int(input())\na = input()\nscore = 0\n\n\ndef countOccurences(str, n):\n    if (n == 0):\n        return 0\n    if (str[n - 1] == 'A'):\n        return 1 + countOccurences(str, n - 1)\n    else:\n        return 0 + countOccurences(str, n - 1)\n\n\nprint(countOccurences(a, n))\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n"
    }
  ],
  "created": 1650075297,
  "object": "edit"
}
2022-04-16 02:15:01.641531 fix syntax errors 3 ["\n\nimport sys\ndef main():\n    n = int(input())\n    a = [input() for i in range(n)]\n    score = 0\n    for i in range(n):\n        if a[i] == 'A':\n            score += 1\n    print(score)\n\nif __name__ == '__main__':\n    main()\n", "# Python program to count the number of occurences of a character in a string\n# using recursion\n\nn = int(input())\na = input()\nscore = 0\n\n\ndef countOccurences(str, n):\n    if (n == 0):\n        return 0\n    if (str[n - 1] == 'A'):\n        return 1 + countOccurences(str, n - 1)\n    else:\n        return 0 + countOccurences(str, n - 1)\n\n\nprint(countOccurences(a, n))\n", "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n"]
2022-04-16 02:15:01.641678 size on output set 3
2022-04-16 02:15:01.641696 num operations 1
2022-04-16 02:15:01.641705 size on input set 1
2022-04-16 02:15:04.223263 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n]\n\nprint(len(ans))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n"
    }
  ],
  "created": 1650075301,
  "object": "edit"
}
2022-04-16 02:15:04.223485 fix syntax errors 3 ['\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n]\n\nprint(len(ans))\n', 'n = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n', '\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n']
2022-04-16 02:15:04.223507 size on output set 3
2022-04-16 02:15:04.223516 num operations 1
2022-04-16 02:15:04.223522 size on input set 1
2022-04-16 02:15:05.839949 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s) \n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    }
  ],
  "created": 1650075304,
  "object": "edit"
}
2022-04-16 02:15:05.840141 fix syntax errors 3 ["\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s) \n", "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"]
2022-04-16 02:15:05.840179 size on output set 2
2022-04-16 02:15:05.840190 num operations 1
2022-04-16 02:15:05.840196 size on input set 1
2022-04-16 02:15:08.240607 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nx = input()\nprint(n-1, x)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nx = input()\nprint(n-2)\n"
    },
    {
      "index": 2,
      "text": "\nwith open(\"file.txt\", \"r\") as f:\n    for line in f:\n        print(line)\n"
    }
  ],
  "created": 1650075305,
  "object": "edit"
}
2022-04-16 02:15:08.240799 fix syntax errors 3 ['\n\nn = int(input())\nx = input()\nprint(n-1, x)\n', '\n\nn = int(input())\nx = input()\nprint(n-2)\n', '\nwith open("file.txt", "r") as f:\n    for line in f:\n        print(line)\n']
2022-04-16 02:15:08.240820 size on output set 3
