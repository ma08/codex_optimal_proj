2022-04-16 02:21:18.798081 num operations 1
2022-04-16 02:21:18.798100 size on input set 1
2022-04-16 02:21:22.826512 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 2,
      "text": "\nf = open(\"test\", \"r\")\nprint(f.read())\n"
    }
  ],
  "created": 1650075678,
  "object": "edit"
}
2022-04-16 02:21:22.826843 fix syntax errors 3 ['\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\nf = open("test", "r")\nprint(f.read())\n']
2022-04-16 02:21:22.826875 size on output set 3
2022-04-16 02:21:22.826887 num operations 1
2022-04-16 02:21:22.826893 size on input set 1
2022-04-16 02:21:24.575256 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\n#---------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1650075682,
  "object": "edit"
}
2022-04-16 02:21:24.575508 fix syntax errors 3 ['\n#!/usr/bin/env python3\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#-----------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#---------------------------------\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-16 02:21:24.575543 size on output set 3
2022-04-16 02:21:24.575554 num operations 1
2022-04-16 02:21:24.575559 size on input set 1
2022-04-16 02:21:27.164103 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(n, m):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1650075684,
  "object": "edit"
}
2022-04-16 02:21:27.164284 fix syntax errors 3 ['\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n\nprint(plain)\n', '#!/usr/bin/env python3\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(n, m):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-16 02:21:27.164313 size on output set 3
2022-04-16 02:21:27.164324 num operations 1
2022-04-16 02:21:27.164329 size on input set 1
2022-04-16 02:21:28.589474 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075687,
  "object": "edit"
}
2022-04-16 02:21:28.589738 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line.\n    line = sys.stdin.readline()\n    # Read the second line.\n    line = sys.stdin.readline()\n    # Read the third line.\n    line = sys.stdin.readline()\n    # Print the result.\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 02:21:28.589768 size on output set 2
2022-04-16 02:21:28.589777 num operations 1
2022-04-16 02:21:28.589782 size on input set 1
2022-04-16 02:21:30.701622 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main() \n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650075688,
  "object": "edit"
}
2022-04-16 02:21:30.701808 fix syntax errors 3 ['#!/usr/bin/env python3\n\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main() \n', '\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 02:21:30.701838 size on output set 3
2022-04-16 02:21:30.701859 num operations 1
2022-04-16 02:21:30.701864 size on input set 1
2022-04-16 02:21:34.835134 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split()) # n = last n characters\n    lastn = sys.stdin.readline().strip() # last n characters\n    ciphertext = sys.stdin.readline().strip() # ciphertext\n    prefix = lastn[-n:]\n    plaintext = \"\" # plaintext\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n] # previous n characters\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075690,
  "object": "edit"
}
2022-04-16 02:21:34.835377 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split()) # n = last n characters\n    lastn = sys.stdin.readline().strip() # last n characters\n    ciphertext = sys.stdin.readline().strip() # ciphertext\n    prefix = lastn[-n:]\n    plaintext = "" # plaintext\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n] # previous n characters\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    lastn = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = lastn[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:21:34.835411 size on output set 3
2022-04-16 02:21:34.835432 num operations 1
2022-04-16 02:21:34.835437 size on input set 1
2022-04-16 02:21:37.325091 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nmain()\n"
    }
  ],
  "created": 1650075694,
  "object": "edit"
}
2022-04-16 02:21:37.325363 fix syntax errors 3 ['\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m-n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'A\'))\n    print(plain)\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    key = last + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nmain()\n']
2022-04-16 02:21:37.325391 size on output set 2
2022-04-16 02:21:37.325402 num operations 1
2022-04-16 02:21:37.325408 size on input set 1
2022-04-16 02:21:40.776600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n    # Reads the input from stdin\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n\n    # Decrypts the cipher using the keyword\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n\n    # Prints the decrypted message\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650075697,
  "object": "edit"
}
2022-04-16 02:21:40.776797 fix syntax errors 3 ['\nimport sys\n\n    # Reads the input from stdin\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n\n    # Decrypts the cipher using the keyword\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n\n    # Prints the decrypted message\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 02:21:40.776825 size on output set 2
