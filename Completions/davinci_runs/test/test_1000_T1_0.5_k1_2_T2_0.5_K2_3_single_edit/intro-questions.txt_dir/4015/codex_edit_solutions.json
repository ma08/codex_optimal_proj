["\ndef get_input():\n    return list(map(int, input().split()))\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split(' ')]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "import sys\n\n\n\n\ndef main():\n    # \u8a08\u7b97\u91cfO(n)\n    n = int(input())\n    a = list(map(int, input().split()))\n    # \u4e8c\u5206\u63a2\u7d22\u3067\u6c42\u3081\u305f\u3044index\u3092\u6c42\u3081\u308b\n    # \u7d2f\u7a4d\u548c\u3092\u4f5c\u308b\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + a[i]\n    # print(s)\n    q = int(input())\n    m = list(map(int, input().split()))\n    for x in m:\n        # \u4e8c\u5206\u63a2\u7d22\u3067\u6c42\u3081\u308b\n        # l = 0\n        # r = n\n        # \u3053\u3053\u3067\u306f\u4e8c\u5206\u63a2\u7d22\u306e\u8a08\u7b97\u91cf\u304cO(logN)\n        # while r - l > 1:\n        #     i = (r + l) // 2\n        #     if s[i] >= x:\n        #         r = i\n        #     else:\n        #         l = i\n        # print(r)\n        # \u4e8c\u5206\u63a2\u7d22\u306e\u8a08\u7b97\u91cf\u3092O(N)\u306b\u843d\u3068\u3059\n        for i in range(n):\n            if s[i] >= x:\n                print(i)\n                break\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater or equal to m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n", "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())  #take input\n\nif n == m:\n    print(0)  #if n = m, then print 0\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)  #if n is odd and m is even, then print -1\nelse:\n    steps = 0  #initialize steps to 0\n    while n < m:\n        if n * 3 <= m:  #if n * 3 is less than or equal to m\n            n *= 3  #multiply n by 3\n        else:\n            n *= 2  #else, multiply n by 2\n        steps += 1  #increment steps\n    if n == m:  #if n = m\n        print(steps)  #print steps\n    else:\n        print(-1)\n", "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"]