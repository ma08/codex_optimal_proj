["\n\ncontestants, huffle_puffs = map(int, input().split())\n\nprint(huffle_puffs)", "\n\nimport sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split())\n    for i in range(n):\n        sys.stdin.readline()\n        carrots += p\n    print carrots\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n\tn, p = [int(i) for i in input().split()]\n\tfor _ in range(n):\n\t\tinput()\n\tprint(p)\n\nif __name__ == '__main__':\n\tmain()", "\n\ndef carrots(N, P):\n    carrots = P\n    for i in range(N):\n        input()\n    print(carrots)\n\nN, P = map(int, input().split())\ncarrots(N, P)", "\n\ndef carrots():\n\tn, p = [int(x) for x in input().split()]\n\tfor i in range(n):\n\t\tinput()\n\tprint(p)\n\ncarrots()", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = contest_info[0]\n    num_problems = contest_info[1]\n    carrots = 0\n    for i in range(0, int(num_contestants)):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, p = map(int, input().split())\n\nprint(p)", "\n\nn, p = map(int, input().split())\n\nfor i in range(n):\n    input()\n\nprint(p)"]