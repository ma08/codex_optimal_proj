["\nn, p = map(int, input().split())\n\nfor i in range(n):\n    input()\n\nprint(p)\n", "\nimport sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split())\n    for i in range(n):\n        sys.stdin.readline()\n        carrots += p\n    print carrots\n\nif __name__ == '__main__':\n    main()\n", "\na = int(input())\nb = int(input())\nc = int(input())\nn = int(input())\nprint([[x, y, z] for x in range(a + 1) for y in range(b + 1) for z in range(c + 1) if x + y + z != n])\n", "\nn, p = map(int, input().split())\n\nfor _ in range(n):\n    input()  # skip n lines\nprint(p)\n", "\n\ndef carrots(n, p):\n    carrots = p\n    for i in range(n):\n        input() # ignore all the names\n    print(carrots) # print the number of carrots\n\nn, p = map(int, input().split())\ncarrots(n, p)\n", "\n\ncontestants, huffle_puffs = map(int, input().split()\n\nprint(huffle_puffs)\n", "\n\ndef carrots():\n    n, p = [int(x) for x in input().split()]\n    for i in range(n):\n        input()\n    print(p)\n\ncarrots()\n", "\n\ndef main():\n    n, p = [int(i) for i in input().split()]\n    for _ in range(n):\n        input()\n    print(p)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n\tpass\nif __name__ == '__main__':\n\tmain()\n", "\n\nn, p = map(int, input().split())\n\nfor i in range(n):\n    input\n\nprint(p)\n", "\nimport sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split())\n    for i in range(n):\n        sys.stdin.readline()\n        carrots += p\n    print(carrots)\n\nif __name__ == '__main__':\n    main()\n", "\ncontestants, huffle_puffs = map(int, input().split())\nprint(huffle_puffs)\n", "\nn, p = map(int, input().split())\n\nprint(p)\n", "import numpy as np\n\nn, p = map(int, input().split())\n\na = np.zeros(n)\n\nprint(a)\n", "\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = contest_info[0]\n    num_problems = contest_info[1]\n    carrots = 0\n    for i in range(0, int(num_contestants)):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = int(contest_info[0])\n    num_problems = int(contest_info[1])\n    carrots = 0\n    for i in range(0, num_contestants):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# def carrots(N, P):\n#     carrots = P\n#     for i in range(N):\n#         input()\n#     print(carrots)\n#\n# N, P = map(int, input().split())\n# carrots(N, P)\n", "import sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split()) # read two integers\n    for i in range(n):\n        sys.stdin.readline() # read a line\n        carrots += p\n    print carrots\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef print_carrots(N, P):\n    carrots = P\n    for i in range(N):\n        input()\n    print(carrots)\n\nN, P = map(int, input().split())\nprint_carrots(N, P)\n", "\n\ncontestants, huffle_puffs = map(int, input(\"\").split())\n\nprint(huffle_puffs)\n"]