2022-04-09 21:24:31.497838 """
=====Problem Statement=====
You are given four points A, B, C and D in a 3-dimensional Cartesian coordinate system. You are required to print the angle between the plane made by the points A, B, C and B, C, D in degrees(not radians). Let the angle be PHI.
Cos(PHI) = (X.Y)/|X|Y| where X = AB x BC and Y = BC x CD.
Here, X.Y means the dot product of X and Y, and AB x BC means the cross product of vectors AB and BC. Also, AB = B-A.

=====Input Format=====
One line of input containing the space separated floating number values of the and coordinates of a point.

=====Output Format=====
Output the angle correct up to two decimal places.
"""
2022-04-09 21:24:31.497871 --------------------------
2022-04-09 21:24:50.805439 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __sub__(self, no):\n        return Points(self.x - no.x, self.y - no.y, self.z - no.z)\n\n    def dot(self, no):\n        return self.x * no.x + self.y * no.y + self.z * no.z\n\n    def cross(self, no):\n        return Points(self.y * no.z - self.z * no.y, self.z * no.x - self.x * no.z, self.x * no.y - self.y * no.x)\n\n    def absolute(self):\n        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n\n\nif __name__ == '__main__':\n    points = list()\n    for i in range(4):\n        a = list(map(float, input().split()))\n        points.append(a)\n\n    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n    x = (b - a).cross(c - b)\n    y = (c - b).cross(d - c)\n    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n\n    print(\"%.2f\" % math.degrees(angle))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __sub__(self, no):\n        return Points((self.x - no.x), (self.y - no.y), (self.z - no.z))\n\n    def dot(self, no):\n        return (self.x * no.x) + (self.y * no.y) + (self.z * no.z)\n\n    def cross(self, no):\n        return Points((self.y * no.z - self.z * no.y), (self.z * no.x - self.x * no.z), (self.x * no.y - self.y * no.x))\n        \n    def absolute(self):\n        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n\nif __name__ == '__main__':\n    points = list()\n    for i in range(4):\n        a = list(map(float, input().split()))\n        points.append(a)\n\n    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n    x = (b - a).cross(c - b)\n    y = (c - b).cross(d - c)\n    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n\n    print(\"%.2f\" % math.degrees(angle))"
    }
  ],
  "created": 1649553871,
  "id": "cmpl-4vGbXh3qUYtXQwvhBWooeXG27iMsh",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:24:50.806250 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __sub__(self, no):\n        return Points(self.x - no.x, self.y - no.y, self.z - no.z)\n\n    def dot(self, no):\n        return self.x * no.x + self.y * no.y + self.z * no.z\n\n    def cross(self, no):\n        return Points(self.y * no.z - self.z * no.y, self.z * no.x - self.x * no.z, self.x * no.y - self.y * no.x)\n\n    def absolute(self):\n        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n\n\nif __name__ == '__main__':\n    points = list()\n    for i in range(4):\n        a = list(map(float, input().split()))\n        points.append(a)\n\n    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n    x = (b - a).cross(c - b)\n    y = (c - b).cross(d - c)\n    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n\n    print(\"%.2f\" % math.degrees(angle))"
}
2022-04-09 21:24:50.806446 REASON stop
2022-04-09 21:24:50.808168 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __sub__(self, no):\n        return Points((self.x - no.x), (self.y - no.y), (self.z - no.z))\n\n    def dot(self, no):\n        return (self.x * no.x) + (self.y * no.y) + (self.z * no.z)\n\n    def cross(self, no):\n        return Points((self.y * no.z - self.z * no.y), (self.z * no.x - self.x * no.z), (self.x * no.y - self.y * no.x))\n        \n    def absolute(self):\n        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n\nif __name__ == '__main__':\n    points = list()\n    for i in range(4):\n        a = list(map(float, input().split()))\n        points.append(a)\n\n    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n    x = (b - a).cross(c - b)\n    y = (c - b).cross(d - c)\n    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n\n    print(\"%.2f\" % math.degrees(angle))"
}
2022-04-09 21:24:50.808448 REASON stop
