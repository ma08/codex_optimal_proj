2022-04-20 14:03:46.093506 num operations 1
2022-04-20 14:03:46.093533 size on input set 1
2022-04-20 14:03:46.093720 using api key gabby
2022-04-20 14:03:50.433061 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650463426,
  "object": "edit"
}
2022-04-20 14:03:50.433388 fix syntax errors 4 ['\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 14:03:50.433532 size on output set 1
2022-04-20 14:03:50.433545 num operations 1
2022-04-20 14:03:50.433551 size on input set 1
2022-04-20 14:03:50.433717 using api key soukgp
2022-04-20 14:03:54.989918 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1 or len(set([arr[i+1] + arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1 \n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\ndef min_changes(arr):\n    if is_arithmetic_progression(arr):\n        return -1\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print(min_changes(arr))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i + 1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    }
  ],
  "created": 1650463430,
  "object": "edit"
}
2022-04-20 14:03:54.990159 fix syntax errors 4 ['\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1 or len(set([arr[i+1] + arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n', '\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1 \n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n', '\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\ndef min_changes(arr):\n    if is_arithmetic_progression(arr):\n        return -1\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print(min_changes(arr))\n', '\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i + 1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n']
2022-04-20 14:03:54.990196 size on output set 4
2022-04-20 14:03:54.990208 num operations 1
2022-04-20 14:03:54.990214 size on input set 1
2022-04-20 14:03:54.990379 using api key sourya
2022-04-20 14:03:56.565875 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 3,
      "text": "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    }
  ],
  "created": 1650463435,
  "object": "edit"
}
2022-04-20 14:03:56.566117 fix syntax errors 4 ["#!/usr/bin/env python3\n\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"]
2022-04-20 14:03:56.566232 size on output set 2
