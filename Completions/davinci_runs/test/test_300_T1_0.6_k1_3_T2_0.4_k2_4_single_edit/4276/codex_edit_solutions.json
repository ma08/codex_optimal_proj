["\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = sorted([(c, t) for c, t in [map(int, input().split()) for _ in range(N)]])\n    print(routes[0][0] if routes[0][1] <= T else 'TLE')\n\nif __name__ == '__main__':\n    main()\n", "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    print(min(d.keys()))\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print(\"TLE\")\n# else:\n#     d = sorted(d.items(), key=lambda x: x[0])\n#     print(d[0][0])\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n", "\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print(\"TLE\")\n# else:\n#     print(min(d.keys()))\n#\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print(\"TLE\")\n# else:\n#     d = sorted(d.items(), key=lambda x: x[0])\n#     print(d[0][0])\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n", "\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n", "import sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n", "\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"]