2022-04-20 14:33:59.150007 num operations 1
2022-04-20 14:33:59.150027 size on input set 1
2022-04-20 14:33:59.150203 using api key gabby
2022-04-20 14:34:05.918944 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n# d = int(input())\n\n# e = not a\n# f = not b\n\n# g = e or f\n\n# h = not c\n# i = not d\n\n# j = h or i\n\n# k = g and j\n\n# print(int(k))\n\n\na = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u043a\nb = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043d\u0438\u0433\n\nif a < b:\n    print(b - a)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = (e) or (f)\n\nh = not (c)\ni = not (d)\n\nj = (h) or (i)\n\nk = (g) and (j)\n\nprint(int(k))\n"
    },
    {
      "index": 3,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = a == 0\nf = b == 0\n\ng = not e\nh = not f\n\ni = g and h\n\nj = c == 0\nk = d == 0\n\nl = not j\nm = not k\n\nn = l and m\n\no = i or n\n\nprint(int(o))\n"
    }
  ],
  "created": 1650465239,
  "object": "edit"
}
2022-04-20 14:34:05.919222 fix syntax errors 4 ['\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n', '\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n# d = int(input())\n\n# e = not a\n# f = not b\n\n# g = e or f\n\n# h = not c\n# i = not d\n\n# j = h or i\n\n# k = g and j\n\n# print(int(k))\n\n\na = int(input())  # количество полок\nb = int(input())  # количество книг\n\nif a < b:\n    print(b - a)\nelse:\n    print(0)\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = (e) or (f)\n\nh = not (c)\ni = not (d)\n\nj = (h) or (i)\n\nk = (g) and (j)\n\nprint(int(k))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = a == 0\nf = b == 0\n\ng = not e\nh = not f\n\ni = g and h\n\nj = c == 0\nk = d == 0\n\nl = not j\nm = not k\n\nn = l and m\n\no = i or n\n\nprint(int(o))\n']
2022-04-20 14:34:05.919266 size on output set 4
2022-04-20 14:34:05.919279 num operations 1
2022-04-20 14:34:05.919285 size on input set 1
2022-04-20 14:34:05.919447 using api key sourya
2022-04-20 14:34:08.508536 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 1,
      "text": "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 2,
      "text": "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main(inp):\n    return 0 if inp[0] == inp[2] and inp[1] == inp[3] else 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    }
  ],
  "created": 1650465245,
  "object": "edit"
}
2022-04-20 14:34:08.508789 fix syntax errors 4 ["\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    return 0 if inp[0] == inp[2] and inp[1] == inp[3] else 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"]
2022-04-20 14:34:08.508823 size on output set 3
2022-04-20 14:34:08.508835 num operations 1
2022-04-20 14:34:08.508841 size on input set 1
2022-04-20 14:34:08.508991 using api key sunu
2022-04-20 14:34:13.082437 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 1,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int(data[0] ^ data[2] ^ data[1] ^ data[3])\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 2,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 3,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) == 1 else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    }
  ],
  "created": 1650465248,
  "object": "edit"
}
2022-04-20 14:34:13.082814 fix syntax errors 4 ['\n\n# first solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for _ in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int(data[0] ^ data[2] ^ data[1] ^ data[3])\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) == 1 else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n']
2022-04-20 14:34:13.082866 size on output set 4
