2022-04-20 15:05:51.233238 num operations 1
2022-04-20 15:05:51.233259 size on input set 1
2022-04-20 15:05:51.233431 using api key jaanu
2022-04-20 15:05:54.643060 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n    A.sort()\n    print(A[0], A[-1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(min(N % K, abs(N % K - K)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650467151,
  "object": "edit"
}
2022-04-20 15:05:54.643346 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n    A.sort()\n    print(A[0], A[-1])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(min(N % K, abs(N % K - K)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 15:05:54.643379 size on output set 4
2022-04-20 15:05:54.643390 num operations 1
2022-04-20 15:05:54.643395 size on input set 1
2022-04-20 15:05:54.643548 using api key sunu
2022-04-20 15:06:01.416816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nprint(\"hello world\")\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is odd and K is even, Aoki can always make N=0\nif N % 2 == 1 and K % 2 == 0:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    # Read from standard input\n    N, K = map(int, stdin.readline().split())\n\n    # If N is even and K is odd, Aoki can always make N=0\n    if N % 2 == 0 and K % 2 == 1:\n        print(0)\n    # Else, the minimum value is N modulo K\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nfrom sys import stdin\n\ndef main():\n    # Read from standard input\n    N, K = map(int, stdin.readline().split())\n\n    # If N is even and K is odd, Aoki can always make N=0\n    if N % 2 == 0 and K % 2 == 1:\n        print(0)\n    # Else, the minimum value is N modulo K\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650467154,
  "object": "edit"
}
2022-04-20 15:06:01.417050 fix syntax errors 4 ['\n\nfrom sys import stdin\n\nprint("hello world")\n', '\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is odd and K is even, Aoki can always make N=0\nif N % 2 == 1 and K % 2 == 0:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n', "\n\nfrom sys import stdin\n\ndef main():\n    # Read from standard input\n    N, K = map(int, stdin.readline().split())\n\n    # If N is even and K is odd, Aoki can always make N=0\n    if N % 2 == 0 and K % 2 == 1:\n        print(0)\n    # Else, the minimum value is N modulo K\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    # Read from standard input\n    N, K = map(int, stdin.readline().split())\n\n    # If N is even and K is odd, Aoki can always make N=0\n    if N % 2 == 0 and K % 2 == 1:\n        print(0)\n    # Else, the minimum value is N modulo K\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 15:06:01.417082 size on output set 4
2022-04-20 15:06:01.417095 num operations 1
2022-04-20 15:06:01.417101 size on input set 1
2022-04-20 15:06:01.417266 using api key sunu
2022-04-20 15:06:05.600350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nfrom sys import stdin, stdout\n\ninput = stdin.readline\nprint = stdout.write\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit, io, sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(min(n % k, k - n % k))\n"
    },
    {
      "index": 2,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\ninput = sys.stdin.readline\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 3,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K)) \n"
    }
  ],
  "created": 1650467161,
  "object": "edit"
}
2022-04-20 15:06:05.600591 fix syntax errors 4 ['\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nfrom sys import stdin, stdout\n\ninput = stdin.readline\nprint = stdout.write\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit, io, sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(0)\nelse:\n    print(min(n % k, k - n % k))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\ninput = sys.stdin.readline\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K)) \n']
2022-04-20 15:06:05.600757 size on output set 4
