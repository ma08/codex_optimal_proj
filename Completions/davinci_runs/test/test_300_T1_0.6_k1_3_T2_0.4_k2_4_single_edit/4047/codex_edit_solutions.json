["\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = min(x)\n    x = [i - m for i in x]\n    x.sort()\n    s = sum(x)\n    if s % n:\n        print(-1)\n    else:\n        s //= n\n        if x[0] == x[-1]:\n            print(0)\n        else:\n            c = 0\n            for i in x:\n                c += abs(i - s)\n            print(c // 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION 1\n\nn = int(input())\nx = list(map(int,input().split()))\nx.sort()\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1\n\n# SOLUTION 2\n\nn = int(input())\nx = list(map(int,input().split()))\nx.sort()\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1\nprint(ans)\nprint(ans)\n", "\ndef main():\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    \n    if n == 1:\n        print(0)\n    else:\n        x.sort()\n        if x[0] == x[-1]:\n            print(0)\n        else:\n            if x[1] == x[-1]:\n                print(x[-1] - x[1])\n            else:\n                print(min(x[-1] - x[1], x[-2] - x[0]))\n    \nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = min(x)\n    x = [i - m for i in x]  # subtract minimum value from all elements\n    x.sort()\n    s = sum(x)\n    if s % n:\n        print(-1)  # if sum is not divisible by n\n    else:\n        s //= n\n        if x[0] == x[-1]:  # if all elements are equal\n            print(0)\n        else:\n            c = 0\n            for i in x:\n                c += abs(i - s)\n            print(c//2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())  # input size\nx = [int(i) for i in input().split()]  # input list\n\nif n == 1:\n    print(0)\nelse:\n    x.sort()  # sort list\n    if x[0] == x[-1]:\n        print(0)\n    else:\n        if x[1] == x[-1]:\n            print(x[-1] - x[1])\n        else:\n            print(min(x[-1] - x[1], x[-2] - x[0]))\n", "\nn = int(input())\nx = [int(i) for i in input().split()]\n\nif n == 1:\n    print(0)\nelse:\n    x.sort()\n    if x[0] == x[-1]:\n        print(0)\n    else:\n        if x[1] == x[-1]:\n            print(x[-1] - x[1])\n        else:\n            print(min(x[-1] - x[1], x[-2] - x[0]))\n", "\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = min(x)\n    x = [i - m for i in x]  # x = list(map(lambda i: i - m, x))\n    x.sort()\n    s = sum(x)\n    if s % n:\n        print(-1)\n    else:\n        s //= n\n        if x[0] == x[-1]:\n            print(0)\n        else:\n            c = 0\n            for i in x:\n                c += abs(i - s)\n            print(c // 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nx = [int(i) for i in input().split()]\n\nif n == 1:\n    print(0)\nelse:\n    x.sort()\n    if x[0] == x[-1]:\n        print(0)\n    else:\n        if x[1] == x[-1]:\n            print(x[-1] - x[0])\n        else:\n            print(min(x[-1] - x[1], x[-2] - x[0]))\n", "\n\nn = int(input())\nx = list(map(int,input().split()))\nx.sort()\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1\nprint(ans)\n", "\n", "\n#include<iostream>\nusing namespace std;\n# SOLUTION\n\nn = int(input())\nx = list(map(int,input().split()));\nx.sort();\nans = 0\nfor i in range(1,n):\n    ans += abs(x[i]-x[i-1])-1;\nprint(ans)\n", "\n\ndef main():\n    n = int(input())  # number of elements\n    x = list(map(int, input().split()))  # elements\n    m = min(x)  # minimum element\n    x = [i - m for i in x]  # subtract minimum element from all elements\n    x.sort()  # sort elements\n    s = sum(x)  # sum of all elements\n    if s % n:  # if sum is not divisible by number of elements\n        print(-1)  # not possible\n    else:  # if sum is divisible by number of elements\n        s //= n  # average of all elements\n        if x[0] == x[-1]:  # if all elements are equal\n            print(0)  # no moves required\n        else:  # if all elements are not equal\n            c = 0  # count\n            for i in x:  # iterate through all elements\n                c += abs(i - s)  # count moves required to make all elements equal\n            print(c//2)  # print moves required\n\nif __name__ == '__main__':\n    main()\n"]