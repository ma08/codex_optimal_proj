["\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    min_a = min(a)\n    max_a = max(a)\n    if max_a - min_a > 1:\n        return -1\n\n    cnt = [0] * (max_a + 1)\n    for elem in a:\n        cnt[elem] += 1\n\n    if max_a - min_a == 1:\n        if cnt[min_a] < k and cnt[max_a] < k:\n            return -1\n        else:\n            return max(cnt[min_a], cnt[max_a]) - min(cnt[min_a], cnt[max_a])\n    else:\n        return 0\n\n\nprint(solve())\n", "\n#\n# SOLUTION\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "# SOLUTION 1\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n\n# SOLUTION 2\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        if k == n:\n            print(ans)\n        else:\n            while k < n:\n                ans -= 1\n                k += 1\n            print(ans)\n", "# SOLUTION\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n", "\na = [1, 2, 3]\nfor i in a:\n    print(i)\n", "\n# SOLUTION\n# Read in the input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Sort the array\na.sort()\n\n# If k is 1, the output is 0\nif k == 1:\n    print(0)\n\n# If k is n, the output is the difference between the max and min\nelif k == n:\n    print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k - 1, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n\n# # SOLUTION\n# # Read in the input\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n\n# # Sort the array\n# a.sort()\n\n# # If k is 1, the output is 0\n# if k == 1:\n#     print(0)\n\n# # If k is n, the output is the difference between the max and min\n# elif k == n:\n#     print(a[n - 1] - a[0])\n\n# Otherwise, for each i in range(k, n), get the difference between the max and min\n# and then find the minimum of all of those differences\nelse:\n    min_diffs = []\n\n    for i in range(k - 1, n):\n        min_diffs.append(a[i] - a[i - k + 1])\n\n    print(min(min_diffs))\n", "\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(lambda x: int(x), input().split()))\n\n    min_a, max_a = min(a), max(a)\n\n    cnt = [0] * (max_a + 1)\n    for elem in a:\n        cnt[elem] += 1\n\n    if max_a - min_a == 1:\n        if cnt[min_a] < k and cnt[max_a] < k:\n            return -1\n        else:\n            return max(cnt[min_a], cnt[max_a]) - min(cnt[min_a], cnt[max_a])\n    else:\n        return 0\n\n\nprint(solve())\n", "\n\n\ndef solve():\n    n, k = map(lambda x: int(x), input().split())\n    a = list(map(lambda x: int(x), input().split()))\n\n    min_a = min(a)\n    max_a = max(a)\n    if max_a - min_a > 1:\n        return -1\n\n    cnt = [0] * (max_a + 1)\n    for elem in a:\n        cnt[elem] += 1\n\n    if max_a - min_a == 1:\n        if cnt[min_a] < k and cnt[max_a] < k:\n            return -1\n        else:\n            return max(cnt[min_a], cnt[max_a]) - min(cnt[min_a], cnt[max_a])\n    else:\n        return 0\n\n\nprint(solve())\n", "\n# SOLUTION 1\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n\n# SOLUTION 2\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif k == 1:\n    print(0)\nelse:\n    mi = min(a)\n    mx = max(a)\n    if abs(mi - mx) == 0:\n        print(0)\n    else:\n        ans = abs(mi - mx)\n        while k < n:\n            ans -= 1\n            k += 1\n        print(ans)\n", "# SOLUTION\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# if k == 1:\n#     print(0)\n# else:\n#     mi = min(a)\n#     mx = max(a)\n#     if abs(mi - mx) == 0:\n#         print(0)\n#     else:\n#         ans = abs(mi - mx)\n#         while k < n:\n#             ans -= 1\n#             k += 1\n#         print(ans)\n"]