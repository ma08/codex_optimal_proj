["\nimport math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n", "import math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1])) \n", "import sys\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n", "\nimport math\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[0] == a[n-1]:\n    print(a[0])\nelse:\n    print(a[0]*a[n-1]//math.gcd(a[0], a[n-1]))\n", "import math\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    gcd = a[0]\n    for i in range(1, n):\n        gcd = math.gcd(gcd, a[i])\n    print(gcd)\n", "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n# N (2 <= N <= 10^5)\nn = int(sys.stdin.readline())\n\n# A_1, A_2, ..., A_N (1 <= A_i <= 10^9)\na = [int(i) for i in sys.stdin.readline().strip().split()]\n\n# Find the maximum possible greatest common divisor of the N integers on the blackboard after your move.\nmax_gcd = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        max_gcd = max(max_gcd, gcd(a[i], a[j]))\n\nprint(max_gcd)\n"]