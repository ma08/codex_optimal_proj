2022-04-20 14:59:58.298125 num operations 1
2022-04-20 14:59:58.298145 size on input set 1
2022-04-20 14:59:58.298320 using api key sourya
2022-04-20 14:59:59.908385 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650466798,
  "object": "edit"
}
2022-04-20 14:59:59.908668 fix syntax errors 4 ["\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-20 14:59:59.908758 size on output set 1
2022-04-20 14:59:59.908778 num operations 1
2022-04-20 14:59:59.908784 size on input set 1
2022-04-20 14:59:59.908957 using api key soukgp
2022-04-20 15:00:02.986959 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\nif S[0] == S[1] and S[2] == S[3] and S[1] != S[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nprint(input()[::2])\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 3,
      "text": "\nS = input()\nprint(\"Yes\" if S[2] == S[3] and S[4] == S[5] else \"No\")\n"
    }
  ],
  "created": 1650466799,
  "object": "edit"
}
2022-04-20 15:00:02.987205 fix syntax errors 4 ['\n\nS = input()\nif S[0] == S[1] and S[2] == S[3] and S[1] != S[2]:\n    print("Yes")\nelse:\n    print("No")\n', '\nprint(input()[::2])\n', '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\nS = input()\nprint("Yes" if S[2] == S[3] and S[4] == S[5] else "No")\n']
2022-04-20 15:00:02.987236 size on output set 4
2022-04-20 15:00:02.987252 num operations 1
2022-04-20 15:00:02.987262 size on input set 1
2022-04-20 15:00:02.987496 using api key sunu
2022-04-20 15:00:04.756465 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650466803,
  "object": "edit"
}
2022-04-20 15:00:04.756697 fix syntax errors 4 ['\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 15:00:04.756759 size on output set 1
