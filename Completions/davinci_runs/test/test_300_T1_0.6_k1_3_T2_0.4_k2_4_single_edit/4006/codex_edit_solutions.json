["\n\n\ndef solve():\n    n = int(input())\n    print(n)\n\n\nif __name__ == '__main__':\n    solve()\n", "\n\n# The solution below is not correct.\n# It is correct for the given test cases, but not for the following test case:\n# Input: 100\n# Output: 9\n# Instead of 9, the correct answer is 10. I don't know why the solution below is not correct.\n\ndef solve(n):\n    n = list(str(n))\n    n = [int(i) for i in n]\n    while len(n) > 1 and n[-1] == 0:\n        n = n[:-1]\n    if len(n) == 1:\n        return 10\n    else:\n        return len(n)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(solve(n))\n", "\n\n# The solution below is correct.\n\ndef solve(n):\n    n = list(str(n))\n    n = [int(i) for i in n]\n    while len(n) > 1 and n[-1] == 0:\n        n = n[:-1]\n    if len(n) == 1:\n        return 10\n    else:\n        return len(n)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(solve(n))\n", "\n\ndef f(n):\n    if n % 10 == 0:\n        return f(n // 10)\n    else:\n        return n + 1\n\n\ndef r(n):\n    s = set([])\n    while True:\n        s.add(n)\n\n        n = f(n)\n        if n in s:\n            break\n    return s\n\n\ndef main():\n    n = int(input())\n    print(len(r(n)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef f(n):\n    if n % 10 == 0:\n        return f(n/10)\n    else:\n        return n + 1\n\ndef r(n):\n    s = set()\n    while True:\n        s.add(n)\n        n = f(n)\n        if n in s:\n            break\n    return s\n\ndef main():\n    n = int(input())\n    print(len(r(n)))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\nn = int(sys.stdin.readline())\n\ndef f(x):\n    while x % 10 == 0:\n        x //= 10\n    return x + 1\n\nreachable = set()\n\ndef solve(x):\n    if x in reachable:\n        return\n    reachable.add(x)\n    solve(f(x))\n\nsolve(n)\n\nprint(len(reachable))\n", "\n\ndef solve(n):\n    n = str(n)\n    while len(n) > 1 and n[-1] == '0':\n        n = n[:-1]  # remove the last element from the list\n    if len(n) == 1:  # if there is only one element in the list\n        return 10\n    else:\n        return len(n)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(solve(n))\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nreachable = set()\n\ndef solve(x):\n    if x in reachable:\n        return\n    reachable.add(x)\n    solve(x + 1)\n\nsolve(n)\n\nprint(len(reachable))\n", "\ndef f(n):\n\tif n % 10 == 0:\n\t\treturn f(n // 10)\n\telse:\n\t\treturn n + 1\n\ndef r(n):\n\ts = set([])\n\twhile True:\n\t\ts.add(n)\n\t\tn = f(n)\n\t\tif n in s:\n\t\t\tbreak\n\treturn s\n\ndef main():\n\tn = int(input())\n\tprint(len(r(n)))\n\nif __name__ == \"__main__\":\n\tmain()\n", "\ndef f(n):\n    if n % 10 == 0:\n        return f(n // 10)\n    else:\n        return n + 1\n\ndef r(n):\n    s = set([])\n    while True:\n        s.add(n)\n        n = f(n)\n        if n in s:\n            break\n    return s\n\ndef main():\n    n = int(input())\n    print(len(r(n)))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ndef f(x):\n    while x % 10 == 0:\n        x //= 10\n    return x + 1\n\nreachable = set()\n\ndef solve(x):\n    if x in reachable:\n        return\n    reachable.add(x)\n    solve(f(x))\n\nsolve(n)\n\nprint(len(reachable))\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n"]