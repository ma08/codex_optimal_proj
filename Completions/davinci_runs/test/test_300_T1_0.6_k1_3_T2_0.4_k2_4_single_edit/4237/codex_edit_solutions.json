["\ndef main():\n    a, b, c, d = map(int, input().split())\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b / c) - math.ceil(a / c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b / d) - math.ceil(a / d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b / c / d) - math.ceil(a / c / d) + 1\n\nprint(divByC + divByD - divByBoth)\n", "\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d\n# (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n", "\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\nprint(divByC + divByD - divByBoth)\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b+1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1 # floor(b/c) - (a-1)/c\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1 # floor(b/d) - (a-1)/d\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1 # floor(b/c/d) - (a-1)/c/d\n\nprint(divByC + divByD - divByBoth)\n", "import math\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // math.gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom fractions import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]