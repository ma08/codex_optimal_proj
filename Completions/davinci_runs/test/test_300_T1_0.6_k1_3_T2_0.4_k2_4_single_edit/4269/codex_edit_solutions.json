["\n\ndef main():\n    print(\"Hello World\")\nif __name__ == '__main__':\n    main()\n", "\n\n# -----Answer-----\n\nS = input()\n\n# \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\nif S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n    # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n        print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n", "\n\ndef main():\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]: \n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n", "\n\n# -----Answer------\n\nS = input()\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n", "\n\ndef main():\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read in the number of vertices and edges\n    n, m = map(int, input().split())\n    # Initialize the adjacency list\n    adj = [[] for _ in range(n)]\n    # Loop through each edge\n    for _ in range(m):\n        # Read in the edge\n        a, b = map(int, input().split())\n        # Add the edge to the adjacency list\n        adj[a].append(b)\n        adj[b].append(a)\n    # Read in the start and end vertices\n    s, t = map(int, input().split())\n    # Initialize the queue\n    q = []\n    # Initialize the visited array\n    visited = [False] * n\n    # Add the start vertex to the queue\n    q.append(s)\n    # Set the start vertex as visited\n    visited[s] = True\n    # Initialize the number of edges\n    edges = 0\n    # Loop through the queue\n    while len(q) > 0:\n        # Pop the first vertex\n        v = q.pop(0)\n        # Loop through each vertex in the adjacency list\n        for w in adj[v]:\n            # Check if the vertex has been visited\n            if not visited[w]:\n                # If not, then add it to the queue\n                q.append(w)\n                # Set it as visited\n                visited[w] = True\n                # Increment the number of edges\n                edges += 1\n    # Print the number of edges\n    print(edges)\n\nif __name__ == '__main__':\n    main()\n", "# -----Answer-----\n\nS = input()\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n", "\n\ndef main():\n    s = input()\n\n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read in the 4-digit number.\n    s = input()\n    # Initialize the previous digit.\n    p = 0\n    # Loop through each digit.\n    for i in s:\n        # Check if the current digit is the same as the previous digit.\n        if i == p:\n            # If so, then print Bad and exit.\n            print(\"Bad\")\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print(\"Good\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n\n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n", "\n\n# -----Answer-----\n\nS = list(input())\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u5f8c\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3] or S[3] == S[0]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n", "\n\ndef main():\n    # Read in the 4-digit number\n    s = input(\"Enter a 4-digit number: \")\n    # Initialize the previous digit\n    p = 0\n    # Loop through each digit\n    for i in s:\n        # Check if the current digit is the same as the previous digit\n        if i == p:\n            # If so, then print Bad and exit\n            print(\"Bad\")\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print(\"Good\")\n\nif __name__ == '__main__':\n    main()\n"]