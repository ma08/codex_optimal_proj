2022-04-20 13:59:40.814606 num operations 1
2022-04-20 13:59:40.814626 size on input set 1
2022-04-20 13:59:40.814787 using api key sourya
2022-04-20 13:59:44.107050 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) != 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1: # check if all the letters are unique and the distance between the first and last letter is the same as the length of the string\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    }
  ],
  "created": 1650463180,
  "object": "edit"
}
2022-04-20 13:59:44.107377 fix syntax errors 4 ['\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) != 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) <= 26:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1: # check if all the letters are unique and the distance between the first and last letter is the same as the length of the string\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n']
2022-04-20 13:59:44.107420 size on output set 3
2022-04-20 13:59:44.107431 num operations 1
2022-04-20 13:59:44.107436 size on input set 1
2022-04-20 13:59:44.107600 using api key gabby
2022-04-20 13:59:48.695956 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for j in range(len(string) - 1):\n                if string[j] == string[j + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[j]) + 1 == ord(string[j + 1]):\n                    if j == len(string) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif i == len(string) - 2:\n                    print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650463184,
  "object": "edit"
}
2022-04-20 13:59:48.696199 fix syntax errors 4 ['\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for j in range(len(string) - 1):\n                if string[j] == string[j + 1]:\n                    print("No")\n                    break\n                elif ord(string[j]) + 1 == ord(string[j + 1]):\n                    if j == len(string) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif i == len(string) - 2:\n                    print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 13:59:48.696235 size on output set 3
2022-04-20 13:59:48.696247 num operations 1
2022-04-20 13:59:48.696253 size on input set 1
2022-04-20 13:59:48.696446 using api key soukgp
2022-04-20 13:59:52.735111 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    string = input()\n    if len(string) != len(set(string)):\n        print('No')\n    elif ord(string[-1]) - ord(string[0]) != len(string)-1:\n        print('No')\n    else:\n        print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650463188,
  "object": "edit"
}
2022-04-20 13:59:52.735466 fix syntax errors 4 ['\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    string = input()\n    if len(string) != len(set(string)):\n        print(\'No\')\n    elif ord(string[-1]) - ord(string[0]) != len(string)-1:\n        print(\'No\')\n    else:\n        print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 13:59:52.735504 size on output set 2
