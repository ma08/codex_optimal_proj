["\n\ndef main():\n    x, y = map(int, input().split())\n    coins = x * 100 + y\n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1, 0]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 100 * d[100] + 50 * d[50] + 10 * d[10] + 5 * d[5] + d[1]\n\nx = int(input())\nprint(happiness(x))\n", "\n\ndef main():\n    x = int(input())\n    print((x // 500) * 1000 + (x % 500) // 5 * 5)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000 # 1000 yen\n    x %= 500\n    happiness += (x // 5) * 5 # 5 yen\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n        \n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom collections import defaultdict\n\ndef happiness(n):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = n // n[i]\n        n %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nn = int(input())\nprint(happiness(n))\n", "\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n", "from collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n"]