2022-04-20 14:41:27.063896 num operations 1
2022-04-20 14:41:27.063914 size on input set 1
2022-04-20 14:41:27.064099 using api key soukgp
2022-04-20 14:41:42.842903 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i][j-1]\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]  # \u5404\u70b9\u3078\u306e\u8db3\u3057\u7b97\u5024\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d  # \u8db3\u3057\u7b97\u5024\u3092\u66f4\u65b0\n\nfor i in range(1,n+1):  # \u7e26\u306b\u8db3\u3057\u7b97\u5024\u3092\u4f1d\u64ad\n    for j in range(1,m+1):  # \u6a2a\u306b\u8db3\u3057\u7b97\u5024\u3092\u4f1d\u64ad\n        s[i][j] += s[i][j-1]  # \u5de6\u65b9\u5411\u306b\u4f1d\u64ad\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i][j-1]\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m + 1)] for _ in range(n + 1)]\n\nfor _ in range(q):\n    a, b, c, d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        s[i][j] += s[i][j - 1]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        s[i][j] += s[i - 1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n"
    }
  ],
  "created": 1650465687,
  "object": "edit"
}
2022-04-20 14:41:42.843189 fix syntax errors 4 ['\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i][j-1]\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n', '\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]  # 各点への足し算値\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d  # 足し算値を更新\n\nfor i in range(1,n+1):  # 縦に足し算値を伝播\n    for j in range(1,m+1):  # 横に足し算値を伝播\n        s[i][j] += s[i][j-1]  # 左方向に伝播\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n', '\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor _ in range(q):\n    a,b,c,d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i][j-1]\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        s[i][j] += s[i-1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n', '\nn,m,q = map(int, input().split())\ns = [[0 for _ in range(m + 1)] for _ in range(n + 1)]\n\nfor _ in range(q):\n    a, b, c, d = map(int, input().split())\n    s[a][c] += d\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        s[i][j] += s[i][j - 1]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        s[i][j] += s[i - 1][j]\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(i+1,n+1):\n        ans = max(ans, s[j][m] - s[i-1][m] - s[j][i-1] + s[i-1][i-1])\n\nprint(ans)\n']
2022-04-20 14:41:42.843255 size on output set 3
2022-04-20 14:41:42.843268 num operations 1
2022-04-20 14:41:42.843274 size on input set 1
2022-04-20 14:41:42.843463 using api key soukgp
2022-04-20 14:41:49.576080 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [0] * Q\n    b = [0] * Q\n    c = [0] * Q\n    d = [0] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]  # \u5165\u529b\u30921-indexed\u304b\u30890-indexed\u306b\u5909\u63db\n    b = [b1 - 1 for b1 in b]  # \u5165\u529b\u30921-indexed\u304b\u30890-indexed\u306b\u5909\u63db\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(M):\n        score_m = 0\n        for i in range(Q):\n            if m + 1 - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m + 1 - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [0] * Q\n    b = [0] * Q\n    c = [0] * Q\n    d = [0] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a[i] - 1 for i in range(Q)]\n    b = [b[i] - 1 for i in range(Q)]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650465702,
  "object": "edit"
}
2022-04-20 14:41:49.576441 fix syntax errors 4 ["\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [0] * Q\n    b = [0] * Q\n    c = [0] * Q\n    d = [0] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]  # 入力を1-indexedから0-indexedに変換\n    b = [b1 - 1 for b1 in b]  # 入力を1-indexedから0-indexedに変換\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [None] * Q\n    b = [None] * Q\n    c = [None] * Q\n    d = [None] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a1 - 1 for a1 in a]\n    b = [b1 - 1 for b1 in b]\n    score = 0\n    for m in range(M):\n        score_m = 0\n        for i in range(Q):\n            if m + 1 - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m + 1 - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M, Q = map(int, input().split())\n    a = [0] * Q\n    b = [0] * Q\n    c = [0] * Q\n    d = [0] * Q\n    for i in range(Q):\n        a[i], b[i], c[i], d[i] = map(int, input().split())\n    a = [a[i] - 1 for i in range(Q)]\n    b = [b[i] - 1 for i in range(Q)]\n    score = 0\n    for m in range(1, M + 1):\n        score_m = 0\n        for i in range(Q):\n            if m - c[i] == 0:\n                score_m += d[i]\n        score = max(score, score_m)\n        for j in range(Q):\n            if a[j] < b[j] and m - c[j] > 0:\n                score_m += d[j]\n                score = max(score, score_m)\n    print(score)\n    return\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 14:41:49.576515 size on output set 4
2022-04-20 14:41:49.576528 num operations 1
2022-04-20 14:41:49.576533 size on input set 1
2022-04-20 14:41:49.576746 using api key gabby
2022-04-20 14:41:51.507126 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n"
    },
    {
      "index": 2,
      "text": "\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n"
    },
    {
      "index": 3,
      "text": "\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n"
    }
  ],
  "created": 1650465709,
  "object": "edit"
}
2022-04-20 14:41:51.507395 fix syntax errors 4 ["\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n", "\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n", "\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n", "\n\nn, m, q = map(int, input().split())\n\n# a_i, b_i, c_i, d_i\nquads = [list(map(int, input().split())) for _ in range(q)]\n\n# dp[i][j] ... maximum score for first i numbers with last number equal j\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    # if we don't use the last number\n    dp[i][0] = dp[i-1][0]\n\n    # if we use the last number\n    for j in range(1, m+1):\n        dp[i][j] = dp[i-1][j-1]\n\n        # check if we can contribute with the last number\n        for a, b, c, d in quads:\n            if a == i and b == i+1 and c == j:\n                dp[i][j] = max(dp[i][j], dp[i-1][j-1] + d)\n\nprint(max(dp[n]))\n"]
2022-04-20 14:41:51.507514 size on output set 2
