2022-04-20 14:29:34.566096 num operations 1
2022-04-20 14:29:34.566117 size on input set 1
2022-04-20 14:29:34.566278 using api key sourya
2022-04-20 14:29:37.337115 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a,b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    }
  ],
  "created": 1650464974,
  "object": "edit"
}
2022-04-20 14:29:37.337409 fix syntax errors 4 ["import sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\n\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a,b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"]
2022-04-20 14:29:37.337450 size on output set 4
2022-04-20 14:29:37.337462 num operations 1
2022-04-20 14:29:37.337468 size on input set 1
2022-04-20 14:29:37.337633 using api key kouti
2022-04-20 14:29:42.045017 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef minimum_cost_bottles(n, a, b, c):\n    return min(n*a, n//2*b + n%2*a, n//3*c + n%3*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2], query[3]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n        \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650464977,
  "object": "edit"
}
2022-04-20 14:29:42.045267 fix syntax errors 4 ['\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef minimum_cost_bottles(n, a, b, c):\n    return min(n*a, n//2*b + n%2*a, n//3*c + n%3*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2], query[3]))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n        \n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 14:29:42.045308 size on output set 4
2022-04-20 14:29:42.045321 num operations 1
2022-04-20 14:29:42.045460 size on input set 1
2022-04-20 14:29:42.045625 using api key soukgp
2022-04-20 14:29:45.964586 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(n//2)\n        else:\n            print(n//2 + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, a, b):\n    if b < 2*a:\n        return (n//2) * b + (n%2) * a\n    else:\n        return n*a\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        print(solve(n, a, b))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650464982,
  "object": "edit"
}
2022-04-20 14:29:45.964877 fix syntax errors 4 ["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(n//2)\n        else:\n            print(n//2 + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n, a, b):\n    if b < 2*a:\n        return (n//2) * b + (n%2) * a\n    else:\n        return n*a\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        print(solve(n, a, b))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 14:29:45.964911 size on output set 4
