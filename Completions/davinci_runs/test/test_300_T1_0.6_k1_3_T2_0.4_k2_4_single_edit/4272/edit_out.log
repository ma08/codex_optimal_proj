2022-04-20 14:59:20.544849 num operations 1
2022-04-20 14:59:20.544870 size on input set 1
2022-04-20 14:59:20.545045 using api key sourya
2022-04-20 14:59:23.170123 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"Hello\")\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650466760,
  "object": "edit"
}
2022-04-20 14:59:23.170442 fix syntax errors 4 ["\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n", '\nprint("Hello")\n', "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"]
2022-04-20 14:59:23.170474 size on output set 2
2022-04-20 14:59:23.170486 num operations 1
2022-04-20 14:59:23.170492 size on input set 1
2022-04-20 14:59:23.170645 using api key gabby
2022-04-20 14:59:27.333697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    print(\"test\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650466763,
  "object": "edit"
}
2022-04-20 14:59:27.333938 fix syntax errors 4 ["import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n-2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef main():\n    print("test")\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i+1] == 'B' and s[i+2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 14:59:27.333968 size on output set 3
2022-04-20 14:59:27.333981 num operations 1
2022-04-20 14:59:27.333986 size on input set 1
2022-04-20 14:59:27.334144 using api key jaanu
2022-04-20 14:59:34.738784 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    elif s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get the number of elements in the array\nn = int(input())\n\n# Get the array\na = list(map(int, input().split()))\n\n# Initialize the number of elements in the array\nnum_elements = 0\n\n# For every element in the array\nfor i in range(n):\n    # If the element is not 0, increment the number of elements\n    if a[i] != 0:\n        num_elements += 1\n\n# Print the number of elements\nprint(num_elements)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n# Get the string\ns = sys.stdin.readline()\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n# Print the number of subsequences\nprint(num_subsequences)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n# Get the string\ns = sys.stdin.readline()\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n# Print the number of subsequences\nprint(num_subsequences)\n"
    }
  ],
  "created": 1650466767,
  "object": "edit"
}
2022-04-20 14:59:34.739055 fix syntax errors 4 ['\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != "A":\n        continue\n    # If the character is A and the following character is B, check the following character\n    elif s[i+1] == "B":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == "C":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n', '\n\nimport sys\n\n# Get the number of elements in the array\nn = int(input())\n\n# Get the array\na = list(map(int, input().split()))\n\n# Initialize the number of elements in the array\nnum_elements = 0\n\n# For every element in the array\nfor i in range(n):\n    # If the element is not 0, increment the number of elements\n    if a[i] != 0:\n        num_elements += 1\n\n# Print the number of elements\nprint(num_elements)\n', '\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n# Get the string\ns = sys.stdin.readline()\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != "A":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == "B":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == "C":\n            num_subsequences += 1\n# Print the number of subsequences\nprint(num_subsequences)\n', '\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n# Get the string\ns = sys.stdin.readline()\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != "A":\n        continue\n    # If the character is A and the following character is B, check the following character\n    if s[i+1] == "B":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        if s[i+2] == "C":\n            num_subsequences += 1\n# Print the number of subsequences\nprint(num_subsequences)\n']
2022-04-20 14:59:34.739205 size on output set 3
