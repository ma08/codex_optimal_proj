2022-04-20 13:51:07.478847 num operations 1
2022-04-20 13:51:07.478866 size on input set 1
2022-04-20 13:51:07.479060 using api key sunu
2022-04-20 13:51:15.572049 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return \"\".join(char)\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            return False\n        i += 1\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(\" \".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return \"\".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j)\n                i += 1\n    return True\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(\" \".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef swap(char, i, j, swaps):\n    char = list(char)\n    swaps.append(j)\n    char[i], char[j] = char[j], char[i]\n    return \"\".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j, swaps)\n                i += 1\n    return True\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    swaps = []\n    if is_valid(char, target):\n        print(len(swaps))\n        print(\" \".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return \"\".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j)\n                i += 1\n    return True\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            i += 1\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(\" \".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650462667,
  "object": "edit"
}
2022-04-20 13:51:15.572343 fix syntax errors 4 ['\n\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return "".join(char)\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            return False\n        i += 1\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(" ".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n', '\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return "".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j)\n                i += 1\n    return True\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(" ".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef swap(char, i, j, swaps):\n    char = list(char)\n    swaps.append(j)\n    char[i], char[j] = char[j], char[i]\n    return "".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j, swaps)\n                i += 1\n    return True\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    swaps = []\n    if is_valid(char, target):\n        print(len(swaps))\n        print(" ".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef swap(char, i, j):\n    char = list(char)\n    char[i], char[j] = char[j], char[i]\n    return "".join(char)\n\ndef is_valid(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] == target[i]:\n            i += 1\n        else:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            else:\n                char = swap(char, i, j)\n                i += 1\n    return True\n\ndef can_swap(char, target):\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            if j == len(char):\n                return False\n            i += 1\n    return True\n\ndef get_swap(char, target):\n    swaps = []\n    i = 0\n    while i < len(char):\n        if char[i] != target[i]:\n            j = i + 1\n            while j < len(char) and char[j] != target[i]:\n                j += 1\n            swaps.append(j)\n            char = swap(char, i, j)\n        i += 1\n    return swaps\n\ndef main():\n    n = int(input())\n    char = input()\n    target = input()\n    if can_swap(char, target):\n        swaps = get_swap(char, target)\n        print(len(swaps))\n        print(" ".join(map(str, swaps)))\n    else:\n        print(-1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 13:51:15.572487 size on output set 4
2022-04-20 13:51:15.572500 num operations 1
2022-04-20 13:51:15.572506 size on input set 1
2022-04-20 13:51:15.572678 using api key sourya
2022-04-20 13:51:28.787126 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n\ndef diff(s, t):\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            return i\n    return len(s)\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == len(s):\n        return -1\n\n    j = i + 1\n    while j < len(s) and s[j] == t[i]:\n        j += 1\n    if j < len(s) and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < len(s) and s[j] != t[j]:\n        j += 1\n    if j < len(s):\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n        return 0\n\n    for i in range(len(s) - 1):\n        if s[i] != t[i] and s[i + 1] != t[i + 1]:\n            s = swap(s, i, i + 1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < len(s) and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i + 1, j + 1)\n    else:\n        print(i + 1, j + 1)\n        i = diff(s, t)\n        j = i + 1\n        while j < len(s) and s[j] != t[j]:\n            j += 1\n        print(i + 1, j + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n"
    }
  ],
  "created": 1650462675,
  "object": "edit"
}
2022-04-20 13:51:28.787390 fix syntax errors 4 ['\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n', '\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n\ndef diff(s, t):\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            return i\n    return len(s)\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == len(s):\n        return -1\n\n    j = i + 1\n    while j < len(s) and s[j] == t[i]:\n        j += 1\n    if j < len(s) and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < len(s) and s[j] != t[j]:\n        j += 1\n    if j < len(s):\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n        return 0\n\n    for i in range(len(s) - 1):\n        if s[i] != t[i] and s[i + 1] != t[i + 1]:\n            s = swap(s, i, i + 1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < len(s) and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i + 1, j + 1)\n    else:\n        print(i + 1, j + 1)\n        i = diff(s, t)\n        j = i + 1\n        while j < len(s) and s[j] != t[j]:\n            j += 1\n        print(i + 1, j + 1)\n', '\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n', '\n\nn = int(input())\ns = input()\nt = input()\n\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:n]\n\ndef diff(s, t):\n    for i in range(n):\n        if s[i] != t[i]:\n            return i\n    return n\n\ndef solve(s, t):\n    if s == t:\n        return 0\n\n    i = diff(s, t)\n    if i == n:\n        return -1\n\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n\n    j = i + 1\n    while j < n and s[j] != t[j]:\n        j += 1\n    if j < n:\n        s = swap(s, i, j)\n        return 1 + solve(s, t)\n    else:\n        return -1\n\ndef solve_slow(s, t):\n    # print(s, t)\n    if s == t:\n        return 0\n\n    for i in range(n - 1):\n        if s[i] != t[i] and s[i+1] != t[i+1]:\n            s = swap(s, i, i+1)\n            return 1 + solve(s, t)\n    return -1\n\nresult = solve(s, t)\nif result == -1:\n    print(-1)\nelse:\n    print(result)\n    i = diff(s, t)\n    j = i + 1\n    while j < n and s[j] == t[i]:\n        j += 1\n    if j < n and s[j] == t[j]:\n        print(i+1, j+1)\n    else:\n        print(i+1, j+1)\n        i = diff(s, t)\n        j = i + 1\n        while j < n and s[j] != t[j]:\n            j += 1\n        print(i+1, j+1)\n']
2022-04-20 13:51:28.787565 size on output set 2
2022-04-20 13:51:28.787580 num operations 1
2022-04-20 13:51:28.787587 size on input set 1
2022-04-20 13:51:28.787764 using api key derek
2022-04-20 13:51:28.824574 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 13:51:30.326473 using api key soukgp
2022-04-20 13:51:34.656600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n-1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos)\n                moves += 1\n                s = swap(s, pos, pos-1)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n - 1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos - 1)\n                moves += 1\n                s = swap(s, pos - 1, pos)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i and pos != -1:\n                ans.append(pos-1)\n                moves += 1\n                s = swap(s, pos-1, pos)\n                pos = s[i+1:].find(t[i]) + i + 1\n    if s != t:\n        return -1\n    return moves, ans\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n"
    },
    {
      "index": 3,
      "text": "\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n - 1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos - 1)\n                moves += 1\n                s = swap(s, pos - 1, pos)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n"
    }
  ],
  "created": 1650462690,
  "object": "edit"
}
2022-04-20 13:51:34.656911 fix syntax errors 4 ["\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n-1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos)\n                moves += 1\n                s = swap(s, pos, pos-1)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n", "\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n - 1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos - 1)\n                moves += 1\n                s = swap(s, pos - 1, pos)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n", "\n\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i and pos != -1:\n                ans.append(pos-1)\n                moves += 1\n                s = swap(s, pos-1, pos)\n                pos = s[i+1:].find(t[i]) + i + 1\n    if s != t:\n        return -1\n    return moves, ans\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n", "\ndef solve(s, t):\n    n = len(s)\n    moves = 0\n    ans = []\n    for i in range(n - 1):\n        if s[i] == t[i]:\n            continue\n        else:\n            pos = s[i:].find(t[i]) + i\n            while pos != i:\n                ans.append(pos - 1)\n                moves += 1\n                s = swap(s, pos - 1, pos)\n                pos = s[i:].find(t[i]) + i\n    if s != t:\n        return -1\n    return moves, ans\n\n\ndef swap(s, i, j):\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    return ''.join(s)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    s = input()\n    t = input()\n    res = solve(s, t)\n    if res == -1:\n        print(-1)\n    else:\n        moves, ans = res\n        print(moves)\n        print(*ans)\n"]
2022-04-20 13:51:34.656966 size on output set 4
