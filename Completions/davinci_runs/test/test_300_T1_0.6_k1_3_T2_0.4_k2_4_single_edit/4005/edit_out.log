2022-04-20 13:35:38.412571 num operations 1
2022-04-20 13:35:38.412590 size on input set 1
2022-04-20 13:35:38.412799 using api key jaanu
2022-04-20 13:35:41.806407 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "const fs = require('fs');\n\nfs.writeFileSync('notes.txt', 'This is a file created by Node.js!\\n');\n\nfs.appendFileSync('notes.txt', 'This is an appended text.\\n');\n"
    },
    {
      "index": 1,
      "text": "import os\nimport sys\n\ndef main():\n    print(\"Current working directory: \", os.getcwd())\n    print(\"Command line arguments: \", sys.argv)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "var fs = require('fs')\n\nfs.readFile('file.txt', 'utf8', function (err, data) {\n  if (err) {\n    return console.log(err)\n  }\n  console.log(data)\n})\n"
    },
    {
      "index": 3,
      "text": "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\n\nvar count = file.toString().split('\\n').length - 1;\n\nconsole.log(count);\n"
    }
  ],
  "created": 1650461738,
  "object": "edit"
}
2022-04-20 13:35:41.806682 fix syntax errors 4 ["const fs = require('fs');\n\nfs.writeFileSync('notes.txt', 'This is a file created by Node.js!\\n');\n\nfs.appendFileSync('notes.txt', 'This is an appended text.\\n');\n", 'import os\nimport sys\n\ndef main():\n    print("Current working directory: ", os.getcwd())\n    print("Command line arguments: ", sys.argv)\n\nif __name__ == "__main__":\n    main()\n', "var fs = require('fs')\n\nfs.readFile('file.txt', 'utf8', function (err, data) {\n  if (err) {\n    return console.log(err)\n  }\n  console.log(data)\n})\n", "var fs = require('fs');\n\nvar file = fs.readFileSync(process.argv[2]);\n\nvar count = file.toString().split('\\n').length - 1;\n\nconsole.log(count);\n"]
2022-04-20 13:35:41.806713 size on output set 4
2022-04-20 13:35:41.806724 num operations 1
2022-04-20 13:35:41.806731 size on input set 1
2022-04-20 13:35:41.806888 using api key derek
2022-04-20 13:35:42.190504 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 13:35:43.692431 using api key sourya
2022-04-20 13:35:48.859067 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print(\"NO\")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if (x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2) or (x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2):\n        print(\"NO\")\n        return\n\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print(\"NO\")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print(\"NO\")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650461744,
  "object": "edit"
}
2022-04-20 13:35:48.859307 fix syntax errors 4 ['\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print("NO")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if (x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2) or (x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2):\n        print("NO")\n        return\n\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print("NO")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    x1, y1, x2, y2 = [int(i) for i in input().split()]\n    x3, y3, x4, y4 = [int(i) for i in input().split()]\n    x5, y5, x6, y6 = [int(i) for i in input().split()]\n    if x1 >= x4 or x3 >= x2 or y1 >= y4 or y3 >= y2:\n        print("NO")\n        return\n    if x1 >= x6 or x5 >= x2 or y1 >= y6 or y5 >= y2:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 13:35:48.859370 size on output set 2
2022-04-20 13:35:48.859384 num operations 1
2022-04-20 13:35:48.859390 size on input set 1
2022-04-20 13:35:48.859554 using api key jaanu
2022-04-20 13:35:56.278610 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#This solution is wrong because it does not take into account the situation when the rectangle is rotated\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1,x2,x3,x4,x5,x6]\ny_list = [y1,y2,y3,y4,y5,y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min,x_max+1):\n    for j in range(y_min,y_max+1):\n        if x_min<i<x_max and y_min<j<y_max:\n            flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n# This solution is wrong\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n#This solution is wrong.\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1,x2,x3,x4,x5,x6]\ny_list = [y1,y2,y3,y4,y5,y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min,x_max+1):\n    for j in range(y_min,y_max+1):\n        if x_min<i<x_max and y_min<j<y_max:\n            flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 3,
      "text": "\n#This solution is wrong\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = sorted([x1,x2,x3,x4,x5,x6])\ny_list = sorted([y1,y2,y3,y4,y5,y6])\n\n#x_list.sort()\n#y_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nif x_max-x_min!=2 and y_max-y_min!=2:\n    flag = False\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650461749,
  "object": "edit"
}
2022-04-20 13:35:56.278976 fix syntax errors 4 ['\n#This solution is wrong because it does not take into account the situation when the rectangle is rotated\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1,x2,x3,x4,x5,x6]\ny_list = [y1,y2,y3,y4,y5,y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min,x_max+1):\n    for j in range(y_min,y_max+1):\n        if x_min<i<x_max and y_min<j<y_max:\n            flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n', '\n# This solution is wrong\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1, x2, x3, x4, x5, x6]\ny_list = [y1, y2, y3, y4, y5, y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min, x_max+1):\n    for j in range(y_min, y_max+1):\n        if x_min < i < x_max and y_min < j < y_max:\n            flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n', '\n#This solution is wrong.\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = [x1,x2,x3,x4,x5,x6]\ny_list = [y1,y2,y3,y4,y5,y6]\n\nx_list.sort()\ny_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nfor i in range(x_min,x_max+1):\n    for j in range(y_min,y_max+1):\n        if x_min<i<x_max and y_min<j<y_max:\n            flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n', '\n#This solution is wrong\n\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\nx3 = int(input())\ny3 = int(input())\nx4 = int(input())\ny4 = int(input())\n\nx5 = int(input())\ny5 = int(input())\nx6 = int(input())\ny6 = int(input())\n\nx_list = sorted([x1,x2,x3,x4,x5,x6])\ny_list = sorted([y1,y2,y3,y4,y5,y6])\n\n#x_list.sort()\n#y_list.sort()\n\nx_max = x_list[-1]\nx_min = x_list[0]\ny_max = y_list[-1]\ny_min = y_list[0]\n\nflag = True\n\nif x_max-x_min!=2 and y_max-y_min!=2:\n    flag = False\n\nif flag:\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-20 13:35:56.279022 size on output set 4
