["\n\nimport sys\n\ndef main():\n    N, M = map(int, input().split())\n    dic = dict.fromkeys(range(1, M+1), 0)\n    for _ in range(N):\n        for i in map(int, sys.stdin.readline().split()[1:]):\n            dic[i] += 1\n    print(sum([1 for e in dic.values() if e == N]))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#\n# I think this is a good example of how to use bit operations\n#\nN, M = [int(n) for n in input().split()]\n\nlike_foods = [0] * N\nfor i in range(N):\n    like_foods[i] = 0\n    _, *foods = [int(n) for n in input().split()]\n    for food in foods:\n        like_foods[i] |= (1 << (food - 1))\n\n# Now it's just a simple loop\ncount = 0\nfor i in range(1, M + 1):\n    like_count = 0\n    for j in range(N):\n        if like_foods[j] & (1 << (i - 1)) > 0:\n            like_count += 1\n    if like_count == N:\n        count += 1\n\nprint(count)\n", "\n\n# Get input\nN, M = map(int, input().split())\n\n# Init\nfood_list = [[] for _ in range(N)]\nfor i in range(N):\n    K = int(input().split()[0])\n    food_list[i] = list(map(int, input().split()))\n\n# Main\nanswer = 0\nfor i in range(1, M+1):\n    if all(i in foods for foods in food_list):\n        answer += 1\nprint(answer)\n", "\n\n\nN, M = map(int, input().split())\n\nfoods = [0] * N\nfor i in range(N): \n    foods[i] = set(map(int, input().split()[1:]))\n\n# Now it's just a simple loop\ncount = 0\nfor i in range(1, M + 1):\n    like_count = 0\n    for j in range(N):\n        if like_foods[j] & (1 << (i - 1)) > 0:\n            like_count += 1\n    if like_count == N:\n        count += 1\n\nprint(count)\n", "\n\n# I think this is a good example of how to use bit operations.\n# I'm not sure if this is the best way to do it though.\n\nN, M = [int(n) for n in input().split()]\n\nlikes = [0] * N\nfor i in range(N):  # O(N)\n    likes[i] = 0\n    _, *foods = [int(n) for n in input().split()]\n    for food in foods:\n        likes[i] |= (1 << (food - 1))\n\n# Now it's just a simple loop.\ncount = 0\nfor i in range(1, M + 1):  # O(M)\n    like_count = 0\n    for j in range(N):  # O(N)\n        if likes[j] & (1 << (i - 1)) > 0:\n            like_count += 1\n    if like_count == N:\n        count += 1\n\nprint(count)\n", "\nimport sys\n\ndef main():\n    N, M = map(int, input().split())\n    dic = dict.fromkeys(range(1, M+1), 0)\n    for i in range(N):\n        for j in map(int, sys.stdin.readline().split()[1:]):\n            dic[j] += 1\n    print(sum([1 for e in dic.values() if e == N]))\n\nif __name__ == '__main__':\n    main()\n", "\n# Get input\nN, M = map(int, input().split())\n\n# Init\nfood_list = [[] for _ in range(N)]\nfor i in range(N):\n    K = int(input().split()[0])\n    food_list[i] = list(map(int, input().split()))\n\n# Main\nanswer = 0\nfor i in range(1, M+1):\n    if all(i in food for food in food_list):\n        answer += 1\nprint(answer)\n", "\n\nN, M = [int(n) for n in input().split()]\n\nlike_foods = [0] * N\nfor i in range(N):\n    like_foods[i] = 0\n    _, *foods = [int(n) for n in input().split()]\n    for food in foods:\n        like_foods[i] |= (1 << (food - 1))\n\n# Now it's just a simple loop\ncount = 0\nfor i in range(1, M + 1):\n    like_count = 0\n    for j in range(N):\n        if like_foods[j] & (1 << (i - 1)) > 0:\n            like_count += 1\n    if like_count == N:\n        count += 1\n\nprint(count)\n", "\nimport sys\n\ndef main():\n    N, M = map(int, input().split())\n    dic = dict.fromkeys(range(1, M + 1), 0)\n    for i in range(N):\n        for j in map(int, sys.stdin.readline().split()[1:]):\n            dic[j] += 1\n    print(sum([1 for e in dic.values() if e == N]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, M = map(int, input().split())\n    dic = dict.fromkeys(range(1, M + 1), 0)\n    for i in range(N):\n        for j in map(int, sys.stdin.readline().split()[1:]):\n            dic[j] += 1\n    print(sum([1 for e in dic.values() if e == N]))\n\nif __name__ == '__main__':\n    main()\n"]