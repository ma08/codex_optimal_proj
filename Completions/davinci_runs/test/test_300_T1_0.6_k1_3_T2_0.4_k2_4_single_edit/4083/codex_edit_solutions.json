["import math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1\n    return answer\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n", "import math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array) * k\n    for element in array:\n        answer += math.ceil(element / min_element) - k\n    return answer\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    print(get_answer(n, k, array))\n", "\n# SOLUTION\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n\n    m = min(a)\n    for i in range(n):\n        m = gcd(m, a[i])\n\n    moves = 0\n    for i in range(n):\n        moves += a[i] // m\n\n    if moves >= k:\n        return moves\n    return -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n", "\n#\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(min_num_operations(n, k, a))\n\n\ndef min_num_operations(n, k, a):\n    return n - k\n\n\nif __name__ == '__main__':\n    main()\n", "import math\n\n\ndef get_answer(n, k, array):\n    answer = 0\n    min_element = min(array)\n    for element in array:\n        answer += math.ceil(element / min_element) - 1\n    return answer <= k\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    if get_answer(n, k, array):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "\n# SOLUTION\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, k, a):\n    if len(set(a)) == 1:\n        return 0\n\n    m = min(a)\n    for i in a:\n        m = gcd(m, i)\n\n    moves = 0\n    for i in a:\n        moves += (i // m)\n\n    if moves >= k:\n        return moves\n    return -1\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n", "\nimport math\n\n\ndef get_answer(n, k, array, new_array):\n    for i in range(n):\n        new_array.append(array[i])\n        for j in range(i, n):\n            if array[i] < array[j]:\n                new_array.append(array[j])\n            else:\n                new_array.append(array[i])\n    return new_array\n\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    new_array = []\n    print(get_answer(n, k, array, new_array))\n", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(min_num_operations(n, k, a))\n\n\ndef min_num_operations(n, k, a):\n    return n - k\n\n\nif __name__ == '__main__':\n    main()\n", "\n# SOLUTION\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef solve(n, k, a):\n\tif len(set(a)) == 1:\n\t\treturn 0\n\t\n\tm = min(a)\n\tfor i in a:\n\t\tm = gcd(m, i)\n\n\tmoves = 0\n\tfor i in a:\n\t\tmoves += i // m\n\n\tif moves >= k:\n\t\treturn moves\n\treturn -1\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"]