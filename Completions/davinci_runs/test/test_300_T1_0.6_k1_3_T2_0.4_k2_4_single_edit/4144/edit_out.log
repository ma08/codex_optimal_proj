2022-04-20 14:19:39.120144 num operations 1
2022-04-20 14:19:39.120163 size on input set 1
2022-04-20 14:19:39.120366 using api key kouti
2022-04-20 14:19:53.673739 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 1,
      "text": "\nimport numpy as np\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = np.zeros((n+1, n+1, 2))\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][0]\n            dp[i][j][1] = dp[i-1][j][0]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i\u6841\u76ee\u307e\u3067\u3067j\u304c\u51fa\u3066\u304d\u305f\u56de\u6570\u3067\u3001i\u6841\u76ee\u304ck\u3067\u3042\u308b\u3082\u306e\u306e\u500b\u6570\n# i\u6841\u76ee\u304c0\u306e\u3068\u304d\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1 # 0\u6841\u76ee\u307e\u3067\u30670\u304c\u51fa\u3066\u304d\u3066\u3044\u306a\u3044\u3068\u304d\ndp[0][0][1] = 0 # 0\u6841\u76ee\u307e\u3067\u30670\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u3068\u304d\ndp[0][1][0] = 0 # 0\u6841\u76ee\u307e\u3067\u30671\u56de0\u304c\u51fa\u3066\u304d\u3066\u3044\u306a\u3044\u3068\u304d\ndp[0][1][1] = 1 # 0\u6841\u76ee\u307e\u3067\u30671\u56de0\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u3068\u304d\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n"
    }
  ],
  "created": 1650464379,
  "object": "edit"
}
2022-04-20 14:19:53.674028 fix syntax errors 4 ['\nimport sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\nimport numpy as np\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = np.zeros((n+1, n+1, 2))\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][0]\n            dp[i][j][1] = dp[i-1][j][0]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n)]\ndp[0][0][0] = 1\ndp[0][0][1] = 0\ndp[0][1][0] = 0\ndp[0][1][1] = 1\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n', '\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\n# dp[i][j][k] i桁目まででjが出てきた回数で、i桁目がkであるものの個数\n# i桁目が0のとき\ndp = [[[0]*2 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1 # 0桁目までで0が出てきていないとき\ndp[0][0][1] = 0 # 0桁目までで0が出てきているとき\ndp[0][1][0] = 0 # 0桁目までで1回0が出てきていないとき\ndp[0][1][1] = 1 # 0桁目までで1回0が出てきているとき\n\nfor i in range(1, n):\n    for j in range(n):\n        if j == 0:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        elif j == n-1:\n            dp[i][j][0] = dp[i-1][j][0] * 9 + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\n        else:\n            dp[i][j][0] = dp[i-1][j][0] * 8 + dp[i-1][j+1][1] + dp[i-1][j-1][1]\n            dp[i][j][1] = dp[i-1][j][1]\nans = sum(dp[n-1][j][0] for j in range(n))\nprint(ans % (10**9 + 7))\n']
2022-04-20 14:19:53.674103 size on output set 4
2022-04-20 14:19:53.674116 num operations 1
2022-04-20 14:19:53.674122 size on input set 1
2022-04-20 14:19:53.674278 using api key derek
2022-04-20 14:19:53.710921 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 14:19:55.212899 using api key derek
2022-04-20 14:19:55.249896 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 14:19:58.253318 using api key derek
2022-04-20 14:19:58.290558 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-20 14:20:04.296966 using api key sunu
2022-04-20 14:20:11.911345 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\ndef main():\n    N = int(input())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N] % mod)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\ndef main():\n    N = int(sys.stdin.readline()) # \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uac1c\uc218\n    for i in range(N):\n        M, K = map(int, sys.stdin.readline().split()) # \uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \uccab \ubc88\uc9f8 \uc904\uc5d0 M\uacfc K\uac00 \uc8fc\uc5b4\uc9d0\n        for j in range(K):\n            data = list(map(int, sys.stdin.readline().split())) # \uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \ub450 \ubc88\uc9f8 \uc904\uc5d0\ub294 K\uac1c\uc758 \uc815\uc218\uac00 \uc8fc\uc5b4\uc9d0\n            data.sort()\n            print(data)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650464404,
  "object": "edit"
}
2022-04-20 14:20:11.911595 fix syntax errors 4 ['import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\ndef main():\n    N = int(input())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i-1] * 9 + dp[i-2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N] % mod)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\ndef main():\n    N = int(sys.stdin.readline())\n    mod = 10 ** 9 + 7\n    dp = [0] * (N + 1)\n    dp[1] = 10\n    # dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n    for i in range(2, N + 1):\n        dp[i] = dp[i - 1] * 9 + dp[i - 2] * 10\n        dp[i] %= mod\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', 'import sys\ndef main():\n    N = int(sys.stdin.readline()) # 테스트 케이스 개수\n    for i in range(N):\n        M, K = map(int, sys.stdin.readline().split()) # 각 테스트 케이스의 첫 번째 줄에 M과 K가 주어짐\n        for j in range(K):\n            data = list(map(int, sys.stdin.readline().split())) # 각 테스트 케이스의 두 번째 줄에는 K개의 정수가 주어짐\n            data.sort()\n            print(data)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 14:20:11.911641 size on output set 4
2022-04-20 14:20:11.911654 num operations 1
2022-04-20 14:20:11.911661 size on input set 1
2022-04-20 14:20:11.911843 using api key gabby
2022-04-20 14:20:21.494100 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + ... + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] + \\cdots + A[0]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 2,
      "text": "\n\n#\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\n#\n\nN = int(input())\n\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n"
    },
    {
      "index": 3,
      "text": "\n\n# The number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n\nN = int(input())\n\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)  # A[i] = the number of ways to make a sequence of length i that satisfies all conditions\nA[0] = 1  # A[0] = 1\nA[1] = 2  # A[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)  # A[i] = 2*A[i-1] - A[0]\nprint(A[N])  # The number of ways to make a sequence of length N that satisfies all conditions\n"
    }
  ],
  "created": 1650464411,
  "object": "edit"
}
2022-04-20 14:20:21.494346 fix syntax errors 4 ['\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + ... + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\nN = int(input())\n\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2] + \\cdots + A[0]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\n#\n# A[i] = the number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n#\n# A[0] = 1\n# A[1] = 2\n#\n\nN = int(input())\n\nA = [0]*(N+1)\nA[0] = 1\nA[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)\nprint(A[N])\n', '\n\n# The number of ways to make a sequence of length i that satisfies all conditions\n# A[i] = A[i-1] + A[i-2]\n# A[i] = A[i-2] + A[i-3] + \\cdots + A[0]\n# A[i] = A[i-1] + A[i-1] - A[0]\n# A[i] = 2*A[i-1] - A[0]\n\nN = int(input())\n\n# A[0] = 1\n# A[1] = 2\nA = [0]*(N+1)  # A[i] = the number of ways to make a sequence of length i that satisfies all conditions\nA[0] = 1  # A[0] = 1\nA[1] = 2  # A[1] = 2\nfor i in range(2,N+1):\n    A[i] = (2*A[i-1] - A[0])%(10**9+7)  # A[i] = 2*A[i-1] - A[0]\nprint(A[N])  # The number of ways to make a sequence of length N that satisfies all conditions\n']
2022-04-20 14:20:21.494386 size on output set 4
