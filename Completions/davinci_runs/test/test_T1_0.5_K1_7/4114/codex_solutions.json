["\n\nN = int(input())\n\npoints = []\nfor i in range(N):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for x, y, h_i in points:\n            h_ = abs(x - cx) + abs(y - cy) + h_i\n            if h == 0:\n                h = h_\n            elif h != h_:\n                break\n        else:\n            print(cx, cy, h)\n            exit()", "\n\n#import numpy as np\n\nn = int(input())\n\nx = []\ny = []\nh = []\n\nfor i in range(n):\n    x_, y_, h_ = map(int, input().split())\n    x.append(x_)\n    y.append(y_)\n    h.append(h_)\n\nfor i in range(101):\n    for j in range(101):\n        is_pass = 0\n        for k in range(n):\n            if h[k] == max(abs(x[k] - i) + abs(y[k] - j), h[k]):\n                is_pass += 1\n        if is_pass == n:\n            print(i, j, max(0, h[0] - abs(x[0] - i) - abs(y[0] - j)))\n            break\n    else:\n        continue\n    break", "\n\nn = int(input())\n\nx = []\ny = []\nh = []\n\nfor _ in range(n):\n    x_temp, y_temp, h_temp = map(int, input().split())\n    x.append(x_temp)\n    y.append(y_temp)\n    h.append(h_temp)\n\nfor i in range(101):\n    for j in range(101):\n        h_temp = -1\n        for k in range(n):\n            if h[k] != 0:\n                if h_temp == -1:\n                    h_temp = h[k] + abs(x[k] - i) + abs(y[k] - j)\n                elif h_temp != h[k] + abs(x[k] - i) + abs(y[k] - j):\n                    break\n        else:\n            if h_temp >= 1:\n                print(i, j, h_temp)\n                exit()", "\n\n#%%\nimport numpy as np\n\n#%%\nnp.zeros((3,3))\n\n\n#%%\nnp.ones((3,3))\n\n\n#%%\nnp.eye(3)\n\n\n#%%\nnp.random.rand(3,3)\n\n\n#%%\nnp.random.randn(3,3)\n\n\n#%%", "\n\ndef main(N, points):\n  for x in range(101):\n    for y in range(101):\n      h = points[0][2] + abs(points[0][0] - x) + abs(points[0][1] - y)\n      if all(h - abs(x - p[0]) - abs(y - p[1]) == p[2] for p in points):\n        return (x, y, h)\n\nif __name__ == '__main__':\n  N = int(input())\n  points = [tuple(map(int, input().split())) for _ in range(N)]\n  print(*main(N, points))", "\n\ndef main():\n    N = int(input())\n    x = []\n    y = []\n    h = []\n    for i in range(N):\n        a, b, c = map(int, input().split())\n        x.append(a)\n        y.append(b)\n        h.append(c)\n    for cx in range(101):\n        for cy in range(101):\n            H = 0\n            for i in range(N):\n                if h[i] > 0:\n                    H = h[i] + abs(x[i] - cx) + abs(y[i] - cy)\n                    break\n            if H > 0:\n                for i in range(N):\n                    if h[i] == max(H - abs(x[i] - cx) - abs(y[i] - cy), 0):\n                        continue\n                    else:\n                        break\n                else:\n                    print(cx, cy, H)\n                    return\n\nif __name__ == '__main__':\n    main()"]