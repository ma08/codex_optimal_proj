["\n\ns, v1, v2 = map(int, input().split())\n\nif s % v1 == 0:\n    print(s // v1, 0)\nelif s % v2 == 0:\n    print(0, s // v2)\nelif s < v1:\n    print(0, s // v2)\nelse:\n    for i in range(s // v1, -1, -1):\n        if (s - i * v1) % v2 == 0:\n            print(i, (s - i * v1) // v2)\n            break\n    else:\n        print(\"Impossible\")", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().strip().split()]\n    if v1 > v2:\n        v1, v2 = v2, v1\n    if s % v2 == 0:\n        n2 = s // v2\n        if n2 % v1 == 0:\n            n1 = n2 // v1\n            n2 = 0\n        else:\n            n1 = n2 // v1 + 1\n            n2 = n2 % v1\n    else:\n        n2 = s // v2\n        if n2 % v1 == 0:\n            n1 = n2 // v1\n            n2 = 0\n        else:\n            n1 = n2 // v1 + 1\n            n2 = n2 % v1\n    if n1 == 0 and n2 == 0:\n        print(\"Impossible\")\n    else:\n        print(n1, n2)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().strip().split()]\n    #print(s, v1, v2)\n    if s % v2 == 0:\n        print(s // v1, 0)\n    elif s < v2:\n        print(0, 1)\n    elif s % v2 != 0 and (s % v2) % v1 == 0:\n        print((s % v2) // v1, s // v2)\n    else:\n        print(\"Impossible\")\n\nmain()", "\n\nimport sys\n\ndef bottle_fill(s, v1, v2):\n    if s % v2 == 0:\n        return (0, s // v2)\n    else:\n        if s < v1:\n            return (\"Impossible\", \"\")\n        else:\n            return (s // v1, (s % v1) // v2)\n\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    v1, v2 = max(v1, v2), min(v1, v2)\n    res = bottle_fill(s, v1, v2)\n    if type(res[0]) == str:\n        print(res[0])\n    else:\n        print(res[0], res[1])\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef min_bottles(s, v1, v2):\n    bottles = [0, 0]\n    if s % v1 == 0:\n        bottles[0] = s / v1\n    else:\n        bottles[0] = s / v1 + 1\n        s -= (bottles[0] - 1) * v1\n        bottles[1] = s / v2\n        if s % v2 != 0:\n            bottles[1] += 1\n    return bottles\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    bottles = min_bottles(s, v1, v2)\n    if bottles[0] * v1 + bottles[1] * v2 == s:\n        print \"%d %d\" % (bottles[0], bottles[1])\n    else:\n        print \"Impossible\"\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    s, v1, v2 = map(int, input().split())\n    n1, n2 = 0, 0\n    while n1*v1 + n2*v2 < s:\n        if n1*v1 + n2*v2 + v1 <= s:\n            n1 += 1\n        else:\n            n2 += 1\n    if n1*v1 + n2*v2 == s:\n        print(n1, n2)\n    else:\n        print(\"Impossible\")\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n    if (s % v2 == 0):\n        print(s // v2, 0)\n    else:\n        min_bottles = s // v1\n        if (s % v1 == 0):\n            print(min_bottles, 0)\n        else:\n            curr_bottles = min_bottles\n            while (curr_bottles >= 0):\n                if ((s - (curr_bottles * v1)) % v2 == 0):\n                    print(curr_bottles, (s - (curr_bottles * v1)) // v2)\n                    return\n                curr_bottles -= 1\n            print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()"]