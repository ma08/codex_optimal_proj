2022-04-13 21:40:29.872860 """
Given a non-empty array of digitsÂ representing a non-negative integer, plus one to the integer.

The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.

You may assume the integer does not contain any leading zero, except the number 0 itself.

Example 1:


Input: [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.


Example 2:


Input: [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
"""
2022-04-13 21:40:29.872869 --------------------------
2022-04-13 21:40:52.627989 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n# Solution 1:\n# Time Complexity: O(n)\n# Space Complexity: O(1)\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        for i in range(len(digits) - 1, -1, -1):\n            if digits[i] == 9:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                return digits\n        digits[0] = 1\n        digits.append(0)\n        return digits"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nfrom typing import List\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        length = len(digits)\n        for i in range(length - 1, -1, -1):\n            if digits[i] == 9:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                return digits\n        digits.insert(0, 1)\n        return digits\n\n\nif __name__ == '__main__':\n    solution = Solution()\n    res = solution.plusOne([9,9,9])\n    print(res)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        carry = 1\n        for i in range(len(digits) - 1, -1, -1):\n            digits[i] += carry\n            carry = 0\n            if digits[i] > 9:\n                carry = 1\n                digits[i] = 0\n        if carry == 1:\n            digits.insert(0, 1)\n        return digits"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        carry = 1\n        for i in range(len(digits) - 1, -1, -1):\n            carry, digits[i] = divmod(digits[i] + carry, 10)\n        if carry:\n            digits.insert(0, carry)\n        return digits"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n\"\"\"\nComments\n\"\"\"\n\"\"\"\nMy\n\"\"\"\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        i = len(digits)-1\n        while i >= 0:\n            if digits[i] == 9:\n                digits[i] = 0\n                i -= 1\n            else:\n                digits[i] += 1\n                return digits\n        digits.insert(0, 1)\n        return digits\n\"\"\"\nFast\n\"\"\"\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        num = 0\n        # \u5148\u628adigits\u8f6c\u6210\u6570\u5b57\n        for digit in digits:\n            num = num * 10 + digit\n        # \u52a01\n        num += 1\n        # \u518d\u628a\u6570\u5b57\u8f6c\u6210digits\n        digits = []\n        for char in str(num):\n            digits.append(int(char))\n        return digits"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\nclass Solution:\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        \"\"\"\n        \u5c06\u5217\u8868\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u52a01\uff0c\u518d\u8f6c\u5316\u4e3a\u5217\u8868\n        \"\"\"\n        num = 0\n        for i in digits:\n            num = num*10 + i\n        num += 1\n        return [int(i) for i in str(num)]\n\n\nclass Solution:\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        \"\"\"\n        \u4ece\u540e\u5f80\u524d\u904d\u5386\uff0c\u5c0f\u4e8e9\u7684\u76f4\u63a5\u52a01\uff0c\u8fd4\u56de\n        \u5426\u5219\u7f6e\u4e3a0\uff0c\u7ee7\u7eed\u904d\u5386\n        \u6700\u540e\u5224\u65ad\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u5426\u4e3a0\uff0c\u662f\u7684\u8bdd\u5728\u5217\u8868\u5f00\u5934\u63d2\u51651\n        \"\"\"\n        for i in range(len(digits)-1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        digits.insert(0, 1)\n        return digits"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        digits[-1] += 1\n        for i in range(len(digits)-1, -1, -1):\n            if digits[i] == 10:\n                if i == 0:\n                    digits[i] = 0\n                    digits.insert(0, 1)\n                else:\n                    digits[i] = 0\n                    digits[i-1] += 1\n        return digits"
    }
  ],
  "created": 1649886029,
  "id": "cmpl-4wf0vsa6eD9d9siFu6So1BQJJ1R9o",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:40:52.628258 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n# Solution 1:\n# Time Complexity: O(n)\n# Space Complexity: O(1)\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        for i in range(len(digits) - 1, -1, -1):\n            if digits[i] == 9:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                return digits\n        digits[0] = 1\n        digits.append(0)\n        return digits"
}
2022-04-13 21:40:52.628291 REASON stop
2022-04-13 21:40:52.628735 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nfrom typing import List\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        length = len(digits)\n        for i in range(length - 1, -1, -1):\n            if digits[i] == 9:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                return digits\n        digits.insert(0, 1)\n        return digits\n\n\nif __name__ == '__main__':\n    solution = Solution()\n    res = solution.plusOne([9,9,9])\n    print(res)"
}
2022-04-13 21:40:52.628851 REASON stop
2022-04-13 21:40:52.629197 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        carry = 1\n        for i in range(len(digits) - 1, -1, -1):\n            digits[i] += carry\n            carry = 0\n            if digits[i] > 9:\n                carry = 1\n                digits[i] = 0\n        if carry == 1:\n            digits.insert(0, 1)\n        return digits"
}
2022-04-13 21:40:52.629243 REASON stop
2022-04-13 21:40:52.630569 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        carry = 1\n        for i in range(len(digits) - 1, -1, -1):\n            carry, digits[i] = divmod(digits[i] + carry, 10)\n        if carry:\n            digits.insert(0, carry)\n        return digits"
}
2022-04-13 21:40:52.630627 REASON stop
2022-04-13 21:40:52.645183 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n\"\"\"\nComments\n\"\"\"\n\"\"\"\nMy\n\"\"\"\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        i = len(digits)-1\n        while i >= 0:\n            if digits[i] == 9:\n                digits[i] = 0\n                i -= 1\n            else:\n                digits[i] += 1\n                return digits\n        digits.insert(0, 1)\n        return digits\n\"\"\"\nFast\n\"\"\"\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        num = 0\n        # \u5148\u628adigits\u8f6c\u6210\u6570\u5b57\n        for digit in digits:\n            num = num * 10 + digit\n        # \u52a01\n        num += 1\n        # \u518d\u628a\u6570\u5b57\u8f6c\u6210digits\n        digits = []\n        for char in str(num):\n            digits.append(int(char))\n        return digits"
}
2022-04-13 21:40:52.645319 REASON stop
2022-04-13 21:40:52.657736 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\nclass Solution:\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        \"\"\"\n        \u5c06\u5217\u8868\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u52a01\uff0c\u518d\u8f6c\u5316\u4e3a\u5217\u8868\n        \"\"\"\n        num = 0\n        for i in digits:\n            num = num*10 + i\n        num += 1\n        return [int(i) for i in str(num)]\n\n\nclass Solution:\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        \"\"\"\n        \u4ece\u540e\u5f80\u524d\u904d\u5386\uff0c\u5c0f\u4e8e9\u7684\u76f4\u63a5\u52a01\uff0c\u8fd4\u56de\n        \u5426\u5219\u7f6e\u4e3a0\uff0c\u7ee7\u7eed\u904d\u5386\n        \u6700\u540e\u5224\u65ad\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u5426\u4e3a0\uff0c\u662f\u7684\u8bdd\u5728\u5217\u8868\u5f00\u5934\u63d2\u51651\n        \"\"\"\n        for i in range(len(digits)-1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        digits.insert(0, 1)\n        return digits"
}
2022-04-13 21:40:52.657831 REASON stop
2022-04-13 21:40:52.658390 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        digits[-1] += 1\n        for i in range(len(digits)-1, -1, -1):\n            if digits[i] == 10:\n                if i == 0:\n                    digits[i] = 0\n                    digits.insert(0, 1)\n                else:\n                    digits[i] = 0\n                    digits[i-1] += 1\n        return digits"
}
2022-04-13 21:40:52.658460 REASON stop
