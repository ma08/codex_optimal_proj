2022-04-13 23:55:49.065715 """
We all know that passwords are not very secure unless users are disciplined enough to use passwords that are difficult to guess. But most users are not so careful, and happily use passwords such as “123456”. In fact, there are lists of commonly used passwords that hackers can use for breaking into systems, and these passwords often work. 

You have done a lot of hacking using such lists, and you have a good idea of how likely each password in the list is the correct one (you are very surprised by the number of people using “123456” as their passwords). You have a new account to hack, and you have decided to try each of the passwords in the list one at a time, until the correct one is found. You are absolutely sure that the account you want to hack uses a password in the given list.

What is the expected number of attempts to find the correct passwords, assuming that you try these passwords in the optimal order?

-----Input-----
The first line of input contains a positive integer $N$, the number of passwords in the list. Each of the next $N$ lines gives the password, followed by a space, followed by the probability that the password is the correct one. Each password consists only of alphanumeric characters and is $1$ to $12$ characters long. Each probability is a real number with $4$ decimal places. You may assume that there are at most $500$ passwords in the list, and that the sum of all probabilities equals $1$. No two passwords in the list are the same.

-----Output-----
Output on a single line the expected number of attempts to find the correct passwords using the optimal order. Answers within $10^{-4}$ of the correct answer will be accepted.

-----Examples-----
Sample Input:
2
123456 0.6666
qwerty 0.3334
Sample Output:
1.3334
"""
2022-04-13 23:55:49.065731 --------------------------
2022-04-13 23:56:04.218197 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    guess_list = []\n    for i in range(n):\n        guess_list.append(sys.stdin.readline().strip().split())\n    guess_list.sort(key=lambda x: float(x[1]), reverse=True)\n    guess_list = [x[1] for x in guess_list]\n    total = 0\n    for i in range(len(guess_list)):\n        total += (i+1)*float(guess_list[i])\n    print(total)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\nfrom heapq import heappush, heappop\n\ndef main():\n    passwords = []\n    for line in stdin:\n        line = line.split()\n        heappush(passwords, (float(line[1]), line[0]))\n\n    attempts = 0\n    while passwords:\n        p = heappop(passwords)[0]\n        attempts += p * (1 + attempts)\n    print(attempts)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split(' '))\n    passwords = sorted(passwords, key=lambda x: float(x[1]))\n    passwords.reverse()\n    total = 0\n    for i in range(n):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for _ in range(n):\n        passwords.append(sys.stdin.readline().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    expected = 0\n    for i in range(n):\n        expected += (i + 1) * float(passwords[i][1])\n    print(expected)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    passwords = {}\n    for i in range(N):\n        password, probability = sys.stdin.readline().strip().split()\n        passwords[password] = float(probability)\n\n    # sort the passwords by probability\n    sorted_passwords = sorted(passwords.items(), key=lambda x: x[1], reverse=True)\n\n    # calculate the expected number of attempts\n    expected_attempts = 0\n    for i in range(len(sorted_passwords)):\n        expected_attempts += (i+1)*sorted_passwords[i][1]\n\n    print(expected_attempts)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    expected = 0\n    for i in range(n):\n        expected += (i+1)*float(passwords[i][1])\n    print(\"{:.4f}\".format(expected))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().split(' '))\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n\n    num_attempts = 0\n    for i in range(n):\n        num_attempts += (i+1)*float(passwords[i][1])\n\n    print('{0:.4f}'.format(num_attempts))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649894149,
  "id": "cmpl-4wh7t5pEpFADDUOsnRs8UUebvKuM1",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:56:04.218445 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    guess_list = []\n    for i in range(n):\n        guess_list.append(sys.stdin.readline().strip().split())\n    guess_list.sort(key=lambda x: float(x[1]), reverse=True)\n    guess_list = [x[1] for x in guess_list]\n    total = 0\n    for i in range(len(guess_list)):\n        total += (i+1)*float(guess_list[i])\n    print(total)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:56:04.218475 REASON stop
2022-04-13 23:56:04.218769 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.218781 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\nfrom heapq import heappush, heappop\n\ndef main():\n    passwords = []\n    for line in stdin:\n        line = line.split()\n        heappush(passwords, (float(line[1]), line[0]))\n\n    attempts = 0\n    while passwords:\n        p = heappop(passwords)[0]\n        attempts += p * (1 + attempts)\n    print(attempts)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:56:04.218877 REASON stop
2022-04-13 23:56:04.219113 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.219124 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().strip().split(' '))\n    passwords = sorted(passwords, key=lambda x: float(x[1]))\n    passwords.reverse()\n    total = 0\n    for i in range(n):\n        total += (i+1) * float(passwords[i][1])\n    print(total)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:56:04.219159 REASON stop
2022-04-13 23:56:04.242887 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.242917 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for _ in range(n):\n        passwords.append(sys.stdin.readline().split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    expected = 0\n    for i in range(n):\n        expected += (i + 1) * float(passwords[i][1])\n    print(expected)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:56:04.243013 REASON stop
2022-04-13 23:56:04.248121 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.248138 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    passwords = {}\n    for i in range(N):\n        password, probability = sys.stdin.readline().strip().split()\n        passwords[password] = float(probability)\n\n    # sort the passwords by probability\n    sorted_passwords = sorted(passwords.items(), key=lambda x: x[1], reverse=True)\n\n    # calculate the expected number of attempts\n    expected_attempts = 0\n    for i in range(len(sorted_passwords)):\n        expected_attempts += (i+1)*sorted_passwords[i][1]\n\n    print(expected_attempts)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:56:04.248208 REASON stop
2022-04-13 23:56:04.258952 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.258969 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        passwords.append(line.split())\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n    expected = 0\n    for i in range(n):\n        expected += (i+1)*float(passwords[i][1])\n    print(\"{:.4f}\".format(expected))\n\nmain()"
}
2022-04-13 23:56:04.259017 REASON stop
2022-04-13 23:56:04.259673 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
2022-04-13 23:56:04.259686 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    passwords = []\n    for i in range(n):\n        passwords.append(sys.stdin.readline().split(' '))\n    passwords.sort(key=lambda x: float(x[1]), reverse=True)\n\n    num_attempts = 0\n    for i in range(n):\n        num_attempts += (i+1)*float(passwords[i][1])\n\n    print('{0:.4f}'.format(num_attempts))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:56:04.259733 REASON stop
2022-04-13 23:56:04.260315 test/intro-questions.txt_dir/4892/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4892/solutions.json'
