["\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\ndef lcm(a,b):\n    return a*b//gcd(a,b)\n\ndef lcm_list(l):\n    if len(l) == 1:\n        return l[0]\n    return lcm(l[0], lcm_list(l[1:]))\n\nn = int(input())\nt = [int(input()) for i in range(n)]\nprint(lcm_list(t))", "\nimport math\n\ndef gcd(x, y):\n    if x < y:\n        x, y = y, x\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\ndef main():\n    n = int(input())\n    ts = [int(input()) for _ in range(n)]\n    l = ts[0]\n    for i in range(1, n):\n        l = lcm(l, ts[i])\n    print(l)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef gcd(a, b):\n    \"\"\"\n    Calculate the greatest common divisor of a and b.\n    \"\"\"\n    a, b = max(a,b), min(a,b)\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\n    Calculate the lowest common multiple of a and b.\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef lcm_list(l):\n    \"\"\"\n    Calculate the lowest common multiple of a list of numbers.\n    \"\"\"\n    return reduce(lcm, l)\n\ndef main():\n    n = int(raw_input())\n    t = map(int, raw_input().split())\n    print lcm_list(t)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef gcd(a, b):\n    \"\"\"Greatest Common Divisor (GCD) of two integers\"\"\"\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef lcm(a, b):\n    \"\"\"Least Common Multiple (LCM) of two integers\"\"\"\n    return a*b/gcd(a, b)\n\ndef main():\n    \"\"\"Main function\"\"\"\n    # number of clocks\n    n = int(sys.stdin.readline())\n\n    # time for each clock to point upward\n    t_list = []\n    for _ in range(n):\n        t_list.append(int(sys.stdin.readline()))\n\n    # calculate LCM of all T_i\n    lcm_val = 1\n    for t in t_list:\n        lcm_val = lcm(lcm_val, t)\n\n    print(lcm_val)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nimport math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for i in range(N)]\n    print(lcm(T[0], T[1]))\n    for i in range(2, N):\n        print(lcm(T[i], T[i - 1]))\n\nif __name__ == '__main__':\n    main()", "\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\n# greatest common divisor\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n    return a\n\n# least common multiple\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nl = 1\nfor i in T:\n    l = lcm(l, i)\n\nprint(l)", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n\n    def gcd(a, b):\n        if a < b:\n            a, b = b, a\n        while b:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return a * b // gcd(a, b)\n\n    print(lcm(T[0], T[1]))\n    for i in range(2, N):\n        print(lcm(T[i], lcm(T[i-1], T[i-2])))\n\nif __name__ == '__main__':\n    main()"]