2022-04-13 20:21:14.324843 """
Takahashi is a member of a programming competition site, ButCoder.
Each member of ButCoder is assigned two values: Inner Rating and Displayed Rating.
The Displayed Rating of a member is equal to their Inner Rating if the member has participated in 10 or more contests. Otherwise, the Displayed Rating will be their Inner Rating minus 100 \times (10 - K) when the member has participated in K contests.
Takahashi has participated in N contests, and his Displayed Rating is R. Find his Inner Rating.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 100
 - 0 \leq R \leq 4111

-----Input-----
Input is given from Standard Input in the following format:
N R

-----Output-----
Print his Inner Rating.

-----Sample Input-----
2 2919

-----Sample Output-----
3719

Takahashi has participated in 2 contests, which is less than 10, so his Displayed Rating is his Inner Rating minus 100 \times (10 - 2) = 800.
Thus, Takahashi's Inner Rating is 2919 + 800 = 3719.
"""
2022-04-13 20:21:14.324851 --------------------------
2022-04-13 20:21:27.540160 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, r = map(int, input().split())\n\nif n < 10:\n    print(r + 100 * (10 - n))\nelse:\n    print(r)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, r = map(int, input().split())\n\nif n >= 10:\n    print(r)\nelse:\n    print(r + 100 * (10 - n))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN, R = map(int, input().split())\n\nif N >= 10:\n    print(R)\nelse:\n    print(R + (10 - N) * 100)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn, r = map(int, input().split())\nif n < 10:\n    print(r + 100 * (10 - n))\nelse:\n    print(r)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n#from collections import deque\n#from collections import Counter\n#from collections import defaultdict\n#from collections import OrderedDict\n#from heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\n#from math import gcd, ceil, floor\n#from fractions import Fraction\n\n#import sys\n#sys.setrecursionlimit(1000000)\n#from sys import setrecursionlimit\n\ndef main():\n    n, r = map(int, input().split())\n    if n >= 10:\n        print(r)\n    else:\n        print(r + 100*(10 - n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, R = map(int, input().split())\n\nif N >= 10:\n    print(R)\nelse:\n    print(R + (10 - N) * 100)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, r = map(int, input().split())\n\nif n < 10:\n    print(r + 100*(10-n))\nelse:\n    print(r)"
    }
  ],
  "created": 1649881274,
  "id": "cmpl-4wdmEK2EXFyM1u6k30YVOFAQW2nDz",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:21:27.540444 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, r = map(int, input().split())\n\nif n < 10:\n    print(r + 100 * (10 - n))\nelse:\n    print(r)"
}
2022-04-13 20:21:27.540478 REASON stop
2022-04-13 20:21:27.540915 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, r = map(int, input().split())\n\nif n >= 10:\n    print(r)\nelse:\n    print(r + 100 * (10 - n))"
}
2022-04-13 20:21:27.541032 REASON stop
2022-04-13 20:21:27.541474 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN, R = map(int, input().split())\n\nif N >= 10:\n    print(R)\nelse:\n    print(R + (10 - N) * 100)"
}
2022-04-13 20:21:27.541525 REASON stop
2022-04-13 20:21:27.567040 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn, r = map(int, input().split())\nif n < 10:\n    print(r + 100 * (10 - n))\nelse:\n    print(r)"
}
2022-04-13 20:21:27.567139 REASON stop
2022-04-13 20:21:27.567814 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n#from collections import deque\n#from collections import Counter\n#from collections import defaultdict\n#from collections import OrderedDict\n#from heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\n#from math import gcd, ceil, floor\n#from fractions import Fraction\n\n#import sys\n#sys.setrecursionlimit(1000000)\n#from sys import setrecursionlimit\n\ndef main():\n    n, r = map(int, input().split())\n    if n >= 10:\n        print(r)\n    else:\n        print(r + 100*(10 - n))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:21:27.567877 REASON stop
2022-04-13 20:21:27.596294 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, R = map(int, input().split())\n\nif N >= 10:\n    print(R)\nelse:\n    print(R + (10 - N) * 100)"
}
2022-04-13 20:21:27.596391 REASON stop
2022-04-13 20:21:27.597099 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, r = map(int, input().split())\n\nif n < 10:\n    print(r + 100*(10-n))\nelse:\n    print(r)"
}
2022-04-13 20:21:27.597190 REASON stop
