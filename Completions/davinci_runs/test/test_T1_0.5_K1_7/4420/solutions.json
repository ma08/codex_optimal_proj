["ntest = int(input())\nfor testcase in range(ntest):\n    x, y, n = list(map(int, input().split()))\n    t = (n - y) // x * x + y\n    print(t)\n", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    x, y, n = read_ints()\n    ans = n // x * x + y\n    if ans > n:\n        ans -= x\n    print(ans)\n", "for _ in range(int(input())):\n    x,y,n=map(int,input().split())\n    k=(n-y)//x*x+y\n    print(k)", "tests = int(input())\nfor _ in range(tests):\n    x, y, n = list(map(int, input().split()))\n    f = n // x * x\n    if f + y <= n:\n        print(f + y)\n    else:\n        print(f - x + y)\n", "for _ in range(int(input())):\n    x, y, n = list(map(int, input().split()))\n    ans = y\n    dif = n - ans\n    dif %= x\n    ans = n - dif\n    print(ans)\n", "t=int(input())\nfor you in range(t):\n    l=input().split()\n    x=int(l[0])\n    y=int(l[1])\n    n=int(l[2])\n    z=(n-y)//x\n    print(z*x+y)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    a,b,n = li()\n    temp = n//a\n    ans = b + a*temp\n    if ans > n:\n        ans -= a\n    print(ans)", "def main():\n    t = int(input())\n    for i in range(t):\n        solve()\n\ndef solve():\n    x, y, n = list(map(int, input().split(\" \")))\n\n    if n % x >= y:\n        print((n // x) * x + y)\n    else:\n        print((n // x - 1) * x + y)\n\nmain()\n\n", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    x,y,n = list(map(int,input().split()))\n\n    tmp = n // x * x + y\n    if tmp > n:\n        tmp -= x\n\n    print (tmp)\n", "T = int(input())\nfor _ in range(T):\n    x, y, n = list(map(int, input().split()))\n    ans = (n // x)*x + y\n    while(ans > n):\n        ans -= x\n    print(ans)\n", "import sys\nimport random\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return map(int, tinput())\n\ndef fiinput():\n    return map(float, tinput())\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():  \n    #n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = linput()\n    x, y, n = rinput()\n    res = n - y\n    print(x * (res // x) + y)\n\n    \nfor inytd in range(iinput()):\n    main()", "import sys\n\ninp = [int(x) for x in sys.stdin.read().split()]; ii = 0\n\nttt = inp[ii]; ii += 1\nfor _ in range(ttt):\n\tx, y, n = inp[ii: ii + 3]; ii += 3\n\trem = y % x\n\tprint((n - rem) // x * x + rem)", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\nORDA = 97  # a\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return [int(i) for i in input().split()]\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ispal(s):\n    for i in range(len(s) // 2 + 1):\n        if s[i] != s[-i - 1]:\n            return False\n    return True\n\n\nfor _ in range(ii()):\n    x, y, n = mi()\n    print(((n - y) // x) * x + y)", "t = int(input())\nfor _ in range(t):\n    x,y,n = map(int,input().split())\n    k = y\n    k += ((n-y)//x)*x\n    print(k)", "for nt in range(int(input())):\n\tx,y,n = map(int,input().split())\n\tr = n%x\n\tif r==y:\n\t\tprint (n)\n\t\tcontinue\n\tif y<r:\n\t\tprint (n-(r-y))\n\t\tcontinue\n\tprint (n-(x)+(y-r))", "for _ in range(int(input())):\n    x,y,n=list(map(int,input().split()))\n    z=n//x\n    p = n%x\n    if p>=y:\n        print(z*x+y)\n    else:\n        print((z-1)*x+y)\n", "for _ in range(int(input())):\n    x, y, n = list(map(int, input().split()))\n    z = (n - y) // x\n    print(x * z + y)", "t = int(input())\nfor _ in range(t):\n\tx, y, n = map(int, input().split())\n\n\tma = (n//x)*x\n\n\tif ma + y <= n:\n\t\tans = ma + y\n\telse:\n\t\tans = ma - x + y\n\n\tprint(ans)", "# for _ in range(1):\nfor _ in range(int(input())):\n    x, y, n = map(int, input().split())\n    # n = int(input())\n    # arr = list(map(int, input().split()))\n    # s = input()\n    r = n % x\n    if r < y:\n        n -= n % x + 1\n    n -= n % x - y\n    print(n)", "def solve():\n    x, y, n = map(int, input().split())\n    k = n % x\n    if k >= y:\n        print(n - k + y)\n    else:\n        print(n - x - k + y)\n\n\n[solve() for i in range(int(input()))]", "a=int(input())\nfor i in range(a):\n    x,y,n=list(map(int,input().split()))\n    r=(n//x)*x\n    if(r+y<=n):\n        print(r+y)\n    else:\n        print(max(r-x+y,y))\n", "for _ in range(int(input())):\n    x,y,n=map(int,input().split())\n    ans=(n//x)*x\n    ans+=y\n    if ans>n:\n        ans-=x\n    print(ans)    ", "\n\nfor _ in range(int(input())):\n\ta,b,c=map(int,input().split())\n\n\tcan=c%a\n\n\tif(can>=b):\n\t\tprint((c//a)*a+b)\n\telse:\n\t\tprint((c//a-1)*a+b)", "for _ in range(int(input())):\n    x, y, n = map(int, input().split())\n    if n % x < y:\n        print(x * (n // x - 1) + y)\n    else:\n        print(x * (n // x) + y)", "import bisect\nimport sys\nimport math\ninput = sys.stdin.readline\nimport functools\n\nfrom collections import defaultdict\n\n############ ---- Input Functions ---- ############\n\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(list(map(int,input().split())))\n\n############ ---- Solution ---- ############\n\ndef solve(case):\n    [x, y, n] = inlt()\n    res = (n // x) * x + y\n    if res > n:\n        res -= x\n    return res\n    \n\nif len(sys.argv) > 1 and sys.argv[1].startswith(\"input\"):\n    f = open(\"./\" + sys.argv[1], 'r')\n    input = f.readline\n\nT = inp()\nfor i in range(T):\n    res = solve(i+1)\n    print(str(res))\n", "import sys\n# from collections import defaultdict\nt=1\nt=int(input())\nfor i in range(t):\n    # n=int(input())\n    x,y,n=list(map(int,sys.stdin.readline().strip().split()))\n    # a,b,c,d=list(sys.stdin.readline().strip().split())\n    # n,k=list(map(int,sys.stdin.readline().strip().split()))\n    \n    a=(n//x)*x+y\n    b=((n//x)-1)*x+y\n    \n    if(a<=n):\n        print(a)\n    else:\n        print(b)", "# Created by: WeirdBugsButOkay\n# 28-06-2020, 20:05:31\n\nimport math\n\ndef solve() :\n    x, y, n = list(map(int, input().split()))\n    rem = n // x\n    rem *= x\n    rem += y\n    if rem > n :\n        rem -= x\n    print(rem)\n\nt = 1\nt = int(input())\nfor _ in range (0, t) :\n    solve()\n"]