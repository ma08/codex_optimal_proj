["\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\nbounce_cnt = 1\nbounce_dist = 0\n\nfor i in range(N):\n    bounce_dist += L[i]\n    if bounce_dist <= X:\n        bounce_cnt += 1\n\nprint(bounce_cnt)", "\n\nn, x = map(int, input().split())\nli = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    if li[i] <= x:\n        count += 1\n\nprint(count)", "\n\n# First line input\nN, X = map(int, input().split())\n\n# Second line input\nL = list(map(int, input().split()))\n\n# Initialize position\nD = 0\n\n# Initialize count\ncount = 0\n\nfor i in range(1, N + 1):\n    D += L[i - 1]\n    if D <= X:\n        count += 1\n\nprint(count)", "\n\nimport sys\n\nn,x = map(int, sys.stdin.readline().split())\nl = [int(i) for i in sys.stdin.readline().split()]\n\nd = 0\ncnt = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        cnt += 1\n\nprint(cnt)", "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\ncnt = 1\nfor i in range(N):\n    if X - sum(L[:i]) >= 0:\n        cnt += 1\n    else:\n        break\n\nprint(cnt)", "\n\nN, X = map(int, input().split())\nL = list(map(int, input().split()))\n\n# \u5165\u529b\u4f8b3\n# N = 3\n# X = 6\n# L = [3, 4, 5]\n\n# \u5165\u529b\u4f8b3\u306e\u89e3\u7b54\n# 2\n\n# \u3084\u308b\u3053\u3068\n# \u30fb\u5404\u56de\u306e\u8df3\u306d\u8fd4\u308a\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3059\u308b\n# \u30fb\u8a08\u7b97\u3057\u305f\u4f4d\u7f6e\u304cX\u4ee5\u4e0b\u306b\u306a\u308b\u56de\u6570\u3092\u6570\u3048\u308b\n\n# \u8df3\u306d\u8fd4\u308a\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3059\u308b\ndef calc_coordinate(N, L):\n    coordinate = 0\n    coordinate_list = []\n    for i in range(N):\n        coordinate += L[i]\n        coordinate_list.append(coordinate)\n    return coordinate_list\n\n# \u8df3\u306d\u8fd4\u308a\u306e\u4f4d\u7f6e\u304cX\u4ee5\u4e0b\u306b\u306a\u308b\u56de\u6570\u3092\u6570\u3048\u308b\ndef count_coordinate(X, coordinate_list):\n    count = 0\n    for i in range(len(coordinate_list)):\n        if coordinate_list[i] <= X:\n            count += 1\n    return count\n\ncoordinate_list = calc_coordinate(N, L)\nprint(count_coordinate(X, coordinate_list))", "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 1\ncoordinate = 0\n\nfor i in range(n):\n    coordinate += l[i]\n    if coordinate <= x:\n        count += 1\n\nprint(count)"]