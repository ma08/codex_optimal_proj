2022-04-13 17:33:04.549229 """
You are given $n$ strings. Each string consists of lowercase English letters. Rearrange (reorder) the given strings in such a way that for every string, all strings that are placed before it are its substrings.

String $a$ is a substring of string $b$ if it is possible to choose several consecutive letters in $b$ in such a way that they form $a$. For example, string "for" is contained as a substring in strings "codeforces", "for" and "therefore", but is not contained as a substring in strings "four", "fofo" and "rof".


-----Input-----

The first line contains an integer $n$ ($1 \le n \le 100$) â€” the number of strings.

The next $n$ lines contain the given strings. The number of letters in each string is from $1$ to $100$, inclusive. Each string consists of lowercase English letters.

Some strings might be equal.


-----Output-----

If it is impossible to reorder $n$ given strings in required order, print "NO" (without quotes).

Otherwise print "YES" (without quotes) and $n$ given strings in required order.


-----Examples-----
Input
5
a
aba
abacaba
ba
aba

Output
YES
a
ba
aba
aba
abacaba

Input
5
a
abacaba
ba
aba
abab

Output
NO

Input
3
qwerty
qwerty
qwerty

Output
YES
qwerty
qwerty
qwerty



-----Note-----

In the second example you cannot reorder the strings because the string "abab" is not a substring of the string "abacaba".
"""
2022-04-13 17:33:04.549238 --------------------------
2022-04-13 17:33:25.798173 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(input())\n    b = sorted(a, key=lambda s: len(s), reverse=True)\n    for i in range(n-1):\n        if b[i] not in b[i+1]:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for i in b:\n        print(i)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\nstrings = []\nfor i in range(n):\n    strings.append(input())\n\nif(n == 1):\n    print(\"YES\")\n    print(strings[0])\nelif(n == 2):\n    if(strings[0] in strings[1]):\n        print(\"YES\")\n        print(strings[0])\n        print(strings[1])\n    elif(strings[1] in strings[0]):\n        print(\"YES\")\n        print(strings[1])\n        print(strings[0])\n    else:\n        print(\"NO\")\nelse:\n    strings.sort(key=lambda x: len(x))\n    flag = False\n    for i in range(n):\n        for j in range(i+1,n):\n            if(strings[i] in strings[j]):\n                flag = True\n            else:\n                flag = False\n                break\n        if(flag):\n            break\n    if(flag):\n        print(\"YES\")\n        for string in strings:\n            print(string)\n    else:\n        print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    strings = []\n    for i in range(n):\n        strings.append(input())\n\n    strings.sort(key=len)\n    for i in range(n-1):\n        if strings[i+1].find(strings[i]) == -1:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\n\ndef is_substring(s1, s2):\n    if s1 == s2:\n        return True\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            return False\n    return True\n\nS = sorted(S, key=lambda s: len(s))\n\nfor i in range(1, N):\n    if not is_substring(S[i-1], S[i]):\n        print(\"NO\")\n        exit()\n\nprint(\"YES\")\nfor s in S:\n    print(s)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    strings = []\n    for _ in range(n):\n        strings.append(input())\n    strings.sort(key=len)\n    for i in range(n):\n        for j in range(i):\n            if strings[i].find(strings[j]) == -1:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n#-----main-----\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\n\ns.sort(key=len)\n\nok = True\nfor i in range(1, n):\n    if s[i].find(s[i-1]) == -1:\n        ok = False\n\nif ok:\n    print(\"YES\")\n    for i in range(n):\n        print(s[i])\nelse:\n    print(\"NO\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(input())\n    s.sort()\n    for i in range(n-1):\n        if s[i] not in s[i+1]:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for i in s:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649871184,
  "id": "cmpl-4wb9UnbpDVqmLNlXTTDKjz9vkf2wW",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:33:25.798469 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(input())\n    b = sorted(a, key=lambda s: len(s), reverse=True)\n    for i in range(n-1):\n        if b[i] not in b[i+1]:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for i in b:\n        print(i)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 17:33:25.798504 REASON stop
2022-04-13 17:33:25.798958 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\nstrings = []\nfor i in range(n):\n    strings.append(input())\n\nif(n == 1):\n    print(\"YES\")\n    print(strings[0])\nelif(n == 2):\n    if(strings[0] in strings[1]):\n        print(\"YES\")\n        print(strings[0])\n        print(strings[1])\n    elif(strings[1] in strings[0]):\n        print(\"YES\")\n        print(strings[1])\n        print(strings[0])\n    else:\n        print(\"NO\")\nelse:\n    strings.sort(key=lambda x: len(x))\n    flag = False\n    for i in range(n):\n        for j in range(i+1,n):\n            if(strings[i] in strings[j]):\n                flag = True\n            else:\n                flag = False\n                break\n        if(flag):\n            break\n    if(flag):\n        print(\"YES\")\n        for string in strings:\n            print(string)\n    else:\n        print(\"NO\")"
}
2022-04-13 17:33:25.799082 REASON stop
2022-04-13 17:33:25.799437 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    strings = []\n    for i in range(n):\n        strings.append(input())\n\n    strings.sort(key=len)\n    for i in range(n-1):\n        if strings[i+1].find(strings[i]) == -1:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:33:25.799483 REASON stop
2022-04-13 17:33:25.800744 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\n\ndef is_substring(s1, s2):\n    if s1 == s2:\n        return True\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            return False\n    return True\n\nS = sorted(S, key=lambda s: len(s))\n\nfor i in range(1, N):\n    if not is_substring(S[i-1], S[i]):\n        print(\"NO\")\n        exit()\n\nprint(\"YES\")\nfor s in S:\n    print(s)"
}
2022-04-13 17:33:25.800815 REASON stop
2022-04-13 17:33:25.816282 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    strings = []\n    for _ in range(n):\n        strings.append(input())\n    strings.sort(key=len)\n    for i in range(n):\n        for j in range(i):\n            if strings[i].find(strings[j]) == -1:\n                print(\"NO\")\n                return\n    print(\"YES\")\n    for s in strings:\n        print(s)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:33:25.816430 REASON stop
2022-04-13 17:33:25.816933 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n#-----main-----\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\n\ns.sort(key=len)\n\nok = True\nfor i in range(1, n):\n    if s[i].find(s[i-1]) == -1:\n        ok = False\n\nif ok:\n    print(\"YES\")\n    for i in range(n):\n        print(s[i])\nelse:\n    print(\"NO\")"
}
2022-04-13 17:33:25.817000 REASON stop
2022-04-13 17:33:25.842421 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(input())\n    s.sort()\n    for i in range(n-1):\n        if s[i] not in s[i+1]:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    for i in s:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:33:25.842528 REASON stop
