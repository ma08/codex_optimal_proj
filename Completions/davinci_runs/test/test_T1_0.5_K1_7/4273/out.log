2022-04-13 19:42:45.274235 """
There are N people. The name of the i-th person is S_i.
We would like to choose three people so that the following conditions are met:
 - The name of every chosen person begins with M, A, R, C or H.
 - There are no multiple people whose names begin with the same letter.
How many such ways are there to choose three people, disregarding order?
Note that the answer may not fit into a 32-bit integer type.

-----Constraints-----
 - 1 \leq N \leq 10^5
 - S_i consists of uppercase English letters.
 - 1 \leq |S_i| \leq 10
 - S_i \neq S_j (i \neq j)

-----Input-----
Input is given from Standard Input in the following format:
N
S_1
:
S_N

-----Output-----
If there are x ways to choose three people so that the given conditions are met, print x.

-----Sample Input-----
5
MASHIKE
RUMOI
OBIRA
HABORO
HOROKANAI

-----Sample Output-----
2

We can choose three people with the following names:
 - MASHIKE, RUMOI, HABORO
 - MASHIKE, RUMOI, HOROKANAI
Thus, we have two ways.
"""
2022-04-13 19:42:45.274246 --------------------------
2022-04-13 19:43:11.203839 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    names = [sys.stdin.readline().rstrip() for _ in range(n)]\n\n    names = [name[0] for name in names if name[0] in ['M', 'A', 'R', 'C', 'H']]\n    counter = collections.Counter(names)\n\n    ans = counter['M'] * counter['A'] * counter['R'] + counter['M'] * counter['A'] * counter['C'] + counter['M'] * counter['A'] * counter['H'] + counter['M'] * counter['R'] * counter['C'] + counter['M'] * counter['R'] * counter['H'] + counter['M'] * counter['C'] * counter['H'] + counter['A'] * counter['R'] * counter['C'] + counter['A'] * counter['R'] * counter['H'] + counter['A'] * counter['C'] * counter['H'] + counter['R'] * counter['C'] * counter['H']\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = [input() for _ in range(N)]\n\nM = [s for s in S if s[0] == \"M\"]\nA = [s for s in S if s[0] == \"A\"]\nR = [s for s in S if s[0] == \"R\"]\nC = [s for s in S if s[0] == \"C\"]\nH = [s for s in S if s[0] == \"H\"]\n\nprint(len(M) * len(A) * len(R) + len(M) * len(A) * len(C) + len(M) * len(A) * len(H) + len(M) * len(R) * len(C) + len(M) * len(R) * len(H) + len(M) * len(C) * len(H) + len(A) * len(R) * len(C) + len(A) * len(R) * len(H) + len(A) * len(C) * len(H) + len(R) * len(C) * len(H))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\n\n# dict of first letter of names\nd = {}\nfor i in range(n):\n    if len(s[i]) >= 1:\n        if s[i][0] in d:\n            d[s[i][0]] += 1\n        else:\n            d[s[i][0]] = 1\n\n# number of people with names beginning with each of the letters\nm = d.get('M', 0)\na = d.get('A', 0)\nr = d.get('R', 0)\nc = d.get('C', 0)\nh = d.get('H', 0)\n\n# number of ways to choose three people\nprint(m*a*r + m*a*c + m*a*h + m*r*c + m*r*h + m*c*h + a*r*c + a*r*h + a*c*h + r*c*h)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\ndic = collections.defaultdict(int)\nfor i in s:\n    dic[i[0]] += 1\n\nans = 1\nfor i in [\"M\", \"A\", \"R\", \"C\", \"H\"]:\n    ans *= dic[i]\n    ans %= (10**9 + 7)\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nt = set()\nfor i in s:\n    if i[0] in \"MARCH\":\n        t.add(i[0])\nprint(len(t) * (len(t) - 1) * (len(t) - 2) // 6)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\nimport itertools\n\nn = int(sys.stdin.readline())\nnames = [sys.stdin.readline().strip() for i in range(n)]\n\n# Count the number of names that start with each letter\ncount = {\n    'M': 0,\n    'A': 0,\n    'R': 0,\n    'C': 0,\n    'H': 0,\n}\nfor name in names:\n    count[name[0]] += 1\n\n# The answer is the number of ways to choose 3 items from the list of counts\nanswer = sum(itertools.combinations(list(count.values()), 3))\nprint(answer)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    names = [input() for _ in range(n)]\n    m = {'M': 0, 'A': 0, 'R': 0, 'C': 0, 'H': 0}\n    for name in names:\n        if name[0] in m:\n            m[name[0]] += 1\n    ans = m['M'] * m['A'] * m['R']\n    ans += m['M'] * m['A'] * m['C']\n    ans += m['M'] * m['A'] * m['H']\n    ans += m['M'] * m['R'] * m['C']\n    ans += m['M'] * m['R'] * m['H']\n    ans += m['M'] * m['C'] * m['H']\n    ans += m['A'] * m['R'] * m['C']\n    ans += m['A'] * m['R'] * m['H']\n    ans += m['A'] * m['C'] * m['H']\n    ans += m['R'] * m['C'] * m['H']\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649878965,
  "id": "cmpl-4wdAzTsJKv3ceQbiAyzb6c3iJN80t",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:43:11.204134 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\nimport collections\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    names = [sys.stdin.readline().rstrip() for _ in range(n)]\n\n    names = [name[0] for name in names if name[0] in ['M', 'A', 'R', 'C', 'H']]\n    counter = collections.Counter(names)\n\n    ans = counter['M'] * counter['A'] * counter['R'] + counter['M'] * counter['A'] * counter['C'] + counter['M'] * counter['A'] * counter['H'] + counter['M'] * counter['R'] * counter['C'] + counter['M'] * counter['R'] * counter['H'] + counter['M'] * counter['C'] * counter['H'] + counter['A'] * counter['R'] * counter['C'] + counter['A'] * counter['R'] * counter['H'] + counter['A'] * counter['C'] * counter['H'] + counter['R'] * counter['C'] * counter['H']\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:43:11.204169 REASON stop
2022-04-13 19:43:11.209283 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = [input() for _ in range(N)]\n\nM = [s for s in S if s[0] == \"M\"]\nA = [s for s in S if s[0] == \"A\"]\nR = [s for s in S if s[0] == \"R\"]\nC = [s for s in S if s[0] == \"C\"]\nH = [s for s in S if s[0] == \"H\"]\n\nprint(len(M) * len(A) * len(R) + len(M) * len(A) * len(C) + len(M) * len(A) * len(H) + len(M) * len(R) * len(C) + len(M) * len(R) * len(H) + len(M) * len(C) * len(H) + len(A) * len(R) * len(C) + len(A) * len(R) * len(H) + len(A) * len(C) * len(H) + len(R) * len(C) * len(H))"
}
2022-04-13 19:43:11.209464 REASON stop
2022-04-13 19:43:11.275673 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\n\n# dict of first letter of names\nd = {}\nfor i in range(n):\n    if len(s[i]) >= 1:\n        if s[i][0] in d:\n            d[s[i][0]] += 1\n        else:\n            d[s[i][0]] = 1\n\n# number of people with names beginning with each of the letters\nm = d.get('M', 0)\na = d.get('A', 0)\nr = d.get('R', 0)\nc = d.get('C', 0)\nh = d.get('H', 0)\n\n# number of ways to choose three people\nprint(m*a*r + m*a*c + m*a*h + m*r*c + m*r*h + m*c*h + a*r*c + a*r*h + a*c*h + r*c*h)"
}
2022-04-13 19:43:11.275777 REASON stop
2022-04-13 19:43:11.303839 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\ndic = collections.defaultdict(int)\nfor i in s:\n    dic[i[0]] += 1\n\nans = 1\nfor i in [\"M\", \"A\", \"R\", \"C\", \"H\"]:\n    ans *= dic[i]\n    ans %= (10**9 + 7)\n\nprint(ans)"
}
2022-04-13 19:43:11.303994 REASON stop
2022-04-13 19:43:11.327151 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nt = set()\nfor i in s:\n    if i[0] in \"MARCH\":\n        t.add(i[0])\nprint(len(t) * (len(t) - 1) * (len(t) - 2) // 6)"
}
2022-04-13 19:43:11.327311 REASON stop
2022-04-13 19:43:11.352978 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\nimport itertools\n\nn = int(sys.stdin.readline())\nnames = [sys.stdin.readline().strip() for i in range(n)]\n\n# Count the number of names that start with each letter\ncount = {\n    'M': 0,\n    'A': 0,\n    'R': 0,\n    'C': 0,\n    'H': 0,\n}\nfor name in names:\n    count[name[0]] += 1\n\n# The answer is the number of ways to choose 3 items from the list of counts\nanswer = sum(itertools.combinations(list(count.values()), 3))\nprint(answer)"
}
2022-04-13 19:43:11.353101 REASON stop
2022-04-13 19:43:11.374017 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    names = [input() for _ in range(n)]\n    m = {'M': 0, 'A': 0, 'R': 0, 'C': 0, 'H': 0}\n    for name in names:\n        if name[0] in m:\n            m[name[0]] += 1\n    ans = m['M'] * m['A'] * m['R']\n    ans += m['M'] * m['A'] * m['C']\n    ans += m['M'] * m['A'] * m['H']\n    ans += m['M'] * m['R'] * m['C']\n    ans += m['M'] * m['R'] * m['H']\n    ans += m['M'] * m['C'] * m['H']\n    ans += m['A'] * m['R'] * m['C']\n    ans += m['A'] * m['R'] * m['H']\n    ans += m['A'] * m['C'] * m['H']\n    ans += m['R'] * m['C'] * m['H']\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:43:11.374132 REASON stop
