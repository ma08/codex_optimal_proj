["\n\ndef main():\n    N, K = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    print(sum(l[N - K:]))\n\nif __name__ == '__main__':\n    main()", "\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort(reverse=True)\n\nprint(sum(l[0:k]))", "\n\nimport sys\n\ndef main():\n    num_sticks, num_snake = [int(i) for i in sys.stdin.readline().strip().split()]\n    sticks = [int(i) for i in sys.stdin.readline().strip().split()]\n    sticks.sort()\n\n    print(sum(sticks[num_sticks - num_snake:]))\n\nif __name__ == '__main__':\n    main()", "\n\nfrom itertools import combinations\n\nn, k = map(int, input().split())\narr = list(map(int, input().split()))\n\nans = 0\nfor c in combinations(arr, k):\n    ans = max(ans, sum(c))\n\nprint(ans)", "\n\nimport sys\n\ndef get_input():\n    n, k = [int(i) for i in sys.stdin.readline().split()]\n    l = [int(i) for i in sys.stdin.readline().split()]\n    return n, k, l\n\ndef main():\n    n, k, l = get_input()\n    l.sort(reverse=True)\n    print(sum(l[:k]))\n\nif __name__ == '__main__':\n    main()", "\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nprint(sum(l[-k:]))", "\n\nfrom itertools import combinations\n\ndef main():\n    N, K = map(int, input().split())\n    l = list(map(int, input().split()))\n\n    # \u7d44\u307f\u5408\u308f\u305b\u3092\u5168\u63a2\u7d22\u3059\u308b\n    combs = combinations(l, K)\n    ans = 0\n    for comb in combs:\n        ans = max(ans, sum(comb))\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()"]