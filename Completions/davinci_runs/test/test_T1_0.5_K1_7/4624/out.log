2022-04-13 22:14:20.265065 """
Vasya goes to visit his classmate Petya. Vasya knows that Petya's apartment number is $n$. 

There is only one entrance in Petya's house and the distribution of apartments is the following: the first floor contains $2$ apartments, every other floor contains $x$ apartments each. Apartments are numbered starting from one, from the first floor. I.e. apartments on the first floor have numbers $1$ and $2$, apartments on the second floor have numbers from $3$ to $(x + 2)$, apartments on the third floor have numbers from $(x + 3)$ to $(2 \cdot x + 2)$, and so on.

Your task is to find the number of floor on which Petya lives. Assume that the house is always high enough to fit at least $n$ apartments.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 1000$) — the number of test cases. Then $t$ test cases follow.

The only line of the test case contains two integers $n$ and $x$ ($1 \le n, x \le 1000$) — the number of Petya's apartment and the number of apartments on each floor of the house except the first one (there are two apartments on the first floor).


-----Output-----

For each test case, print the answer: the number of floor on which Petya lives.


-----Example-----
Input
4
7 3
1 5
22 5
987 13

Output
3
1
5
77



-----Note-----

Consider the first test case of the example: the first floor contains apartments with numbers $1$ and $2$, the second one contains apartments with numbers $3$, $4$ and $5$, the third one contains apartments with numbers $6$, $7$ and $8$. Therefore, Petya lives on the third floor.

In the second test case of the example, Petya lives in the apartment $1$ which is on the first floor.
"""
2022-04-13 22:14:20.265078 --------------------------
2022-04-13 22:14:33.244279 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    # print('n = ', n, ' x = ', x)\n    floor = math.ceil((n + 1) / (x + 2))\n    print(floor)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef findFloor(n, x):\n    floor = 1\n    if n == 1 or n == 2:\n        return floor\n    else:\n        n -= 2\n        while n > 0:\n            floor += 1\n            n -= x\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for i in range(t):\n        n, x = map(int, input().split())\n        print(findFloor(n, x))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef find_floor(n, x):\n    if n <= 2:\n        return 1\n    else:\n        return (n - 2) // x + 2\n\nt = int(input())\nfor i in range(t):\n    n, x = [int(x) for x in input().split()]\n    print(find_floor(n, x))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n, x = map(int, input().split())\n    if n == 1:\n        print(1)\n    else:\n        print((n - 2) // x + 2)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    test_cases = int(input())\n\n    for _ in range(test_cases):\n        n, x = map(int, input().split())\n        print(math.ceil((n + 1) / (x + 2)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nfor i in range(int(input())):\n    n, x = map(int, input().split())\n    floor = n // x\n    if n % x != 0:\n        floor += 1\n    print(floor)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# SOLUTION\n\nt = int(input())\nfor _ in range(t):\n    n, x = map(int, input().split())\n    print(int((-1 + (1 + 8 * n)**0.5) // 2))"
    }
  ],
  "created": 1649888060,
  "id": "cmpl-4wfXg9w6h1WjODOZUuDyieBCXLB1Q",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:14:33.244556 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    # print('n = ', n, ' x = ', x)\n    floor = math.ceil((n + 1) / (x + 2))\n    print(floor)"
}
2022-04-13 22:14:33.244591 REASON stop
2022-04-13 22:14:33.245023 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef findFloor(n, x):\n    floor = 1\n    if n == 1 or n == 2:\n        return floor\n    else:\n        n -= 2\n        while n > 0:\n            floor += 1\n            n -= x\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for i in range(t):\n        n, x = map(int, input().split())\n        print(findFloor(n, x))"
}
2022-04-13 22:14:33.245150 REASON stop
2022-04-13 22:14:33.245619 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef find_floor(n, x):\n    if n <= 2:\n        return 1\n    else:\n        return (n - 2) // x + 2\n\nt = int(input())\nfor i in range(t):\n    n, x = [int(x) for x in input().split()]\n    print(find_floor(n, x))"
}
2022-04-13 22:14:33.245675 REASON stop
2022-04-13 22:14:33.265322 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor _ in range(t):\n    n, x = map(int, input().split())\n    if n == 1:\n        print(1)\n    else:\n        print((n - 2) // x + 2)"
}
2022-04-13 22:14:33.265429 REASON stop
2022-04-13 22:14:33.288765 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    test_cases = int(input())\n\n    for _ in range(test_cases):\n        n, x = map(int, input().split())\n        print(math.ceil((n + 1) / (x + 2)))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 22:14:33.288881 REASON stop
2022-04-13 22:14:33.289465 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nfor i in range(int(input())):\n    n, x = map(int, input().split())\n    floor = n // x\n    if n % x != 0:\n        floor += 1\n    print(floor)"
}
2022-04-13 22:14:33.289524 REASON stop
2022-04-13 22:14:33.290126 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# SOLUTION\n\nt = int(input())\nfor _ in range(t):\n    n, x = map(int, input().split())\n    print(int((-1 + (1 + 8 * n)**0.5) // 2))"
}
2022-04-13 22:14:33.290183 REASON stop
