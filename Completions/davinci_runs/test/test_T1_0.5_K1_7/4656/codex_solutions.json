["\n\ndef is_beautiful(s, k):\n    n = len(s)\n    for i in range(n):\n        if s[i] != s[(i+k)%n]:\n            return False\n    return True\n\ndef solve(s, k):\n    n = len(s)\n    if k == 1:\n        return n\n    if n == 1:\n        return 1\n    ans = 1\n    for i in range(1, n):\n        if is_beautiful(s[i:], k):\n            ans = max(ans, i + solve(s[:i], k))\n    return ans\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        s = input()\n        print(solve(s, k))", "", "\n\n\n# Solution\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nfrom collections import Counter\nfrom sys import stdin\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef solve(n,k,s):\n    freq = Counter(s)\n    ans = 0\n    for x in freq:\n        ans = max(ans,freq[x])\n    if k == 1:\n        return ans\n    for x in freq:\n        if freq[x] >= k:\n            return k\n    ans = 0\n    for x in freq:\n        ans = max(ans,freq[x] - (freq[x]%k))\n    return ans\n\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    s = input()\n    print(solve(n,k,s))", "\n\ndef solve(n, k, s):\n    def is_k_beautiful(s):\n        for i in range(k):\n            if s[i] != s[i % k]:\n                return False\n        return True\n\n    longest = 0\n    for i in range(n):\n        for j in range(i, n):\n            if is_k_beautiful(s[i:j+1]):\n                longest = max(longest, j - i + 1)\n    return longest\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for i in range(t):\n        n, k = map(int, input().split())\n        s = input()\n        print(solve(n, k, s))", "\n\n#Solution:\n\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    d={}\n    for i in s:\n        if i in d:\n            d[i]+=1\n        else:\n            d[i]=1\n    print(max(d.values()))", "\n\ndef solve(n, k, s):\n    #print(f\"{n}, {k}, {s}\")\n    if(n == 1):\n        return 1\n    if(k == 0):\n        return len(s)\n    if(n == len(s)):\n        return 1\n    if(n == 2):\n        return 2\n    if(s[0] == s[-1]):\n        return solve(n, k-1, s[1:-1]) + 2\n    return max(solve(n, k, s[1:]), solve(n, k, s[:-1]))\n\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))", "\n\nt = int(input())\n\nfor i in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    d = {}\n    for letter in s:\n        if letter not in d:\n            d[letter] = 1\n        else:\n            d[letter] += 1\n\n    max_len = 0\n    for key, value in d.items():\n        if value >= k:\n            max_len = max(max_len, k)\n        else:\n            max_len = max(max_len, value)\n\n    print(max_len)"]