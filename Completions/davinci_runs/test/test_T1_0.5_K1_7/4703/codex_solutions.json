["\n\nimport sys\n\ndef main():\n    s = input()\n    if len(s) == 1:\n        print(int(s))\n        return\n    else:\n        result = 0\n        for i in range(1, len(s)):\n            result += int(s[0:i]) + int(s[i:])\n        print(result)\n        return\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef solve(s):\n    n = len(s)\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(i + 1):\n            dp[i + 1][j] += dp[i][j]\n            dp[i + 1][j + 1] += dp[i][j] * 9\n            if j > 0:\n                dp[i + 1][j - 1] += dp[i][j]\n    ans = 0\n    for i in range(1, n + 1):\n        ans += dp[n][i] * int(s[:i])\n    return ans\n\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))", "\n\nfrom itertools import product\n\ns = input()\n\ndef evaluate(formula):\n    stack = []\n    for c in formula:\n        if c == '+':\n            stack.append(c)\n        else:\n            if stack and stack[-1] == '+':\n                stack.pop()\n                stack.append(str(int(stack.pop()) + int(c)))\n            else:\n                stack.append(c)\n    return sum(map(int, stack))\n\nans = 0\nfor i in range(len(s)):\n    for formula in product('+', repeat=i):\n        f = ''.join(formula)\n        ans += evaluate(f + s + f)\nprint(ans)", "\n\nimport sys\n\nS = sys.stdin.readline().strip()\n\ndef solve(S):\n    if len(S) == 1:\n        return int(S)\n    else:\n        return int(S[0]) + solve(S[1:])\n\nprint(solve(S))", "\n\nimport sys\nimport itertools\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    S_len = len(S)\n\n    # i\u756a\u76ee\u307e\u3067\u3092\u4f7f\u3063\u3066\u4f5c\u308c\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\u3092\u4f5c\u308b\n    # i\u756a\u76ee\u307e\u3067\u3092\u4f7f\u3063\u3066\u4f5c\u308c\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\u3092\u4f5c\u308b\n    S_set = set()\n    for i in range(S_len):\n        for j in range(i+1, S_len+1):\n            S_set.add(S[i:j])\n\n    # +\u3092\u633f\u5165\u3057\u3066\u4f5c\u308c\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\u3092\u4f5c\u308b\n    plus_set = set()\n    for S_str in S_set:\n        S_str_len = len(S_str)\n        for i in range(S_str_len-1):\n            plus_set.add(S_str[:i+1]+'+'+S_str[i+1:])\n\n    # +\u3092\u633f\u5165\u3057\u3066\u4f5c\u308c\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\u306bS_set\u3092\u8ffd\u52a0\n    plus_set = plus_set.union(S_set)\n\n    # \u5168\u3066\u306e\u6587\u5b57\u5217\u3092\u8a55\u4fa1\u3057\u3066\u5408\u8a08\u3092\u51fa\u529b\n    ans = 0\n    for plus_str in plus_set:\n        ans += eval(plus_str)\n\n    sys.stdout.write(str(ans)+'\\n')\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    s = input()\n    n = len(s)\n    dp = [[0]*(n+1) for _ in range(n+1)]\n    for i in range(n):\n        dp[i][i+1] = int(s[i])\n    for i in range(n-1):\n        dp[i][i+2] = int(s[i]) + int(s[i+1])\n    for i in range(n-2):\n        for j in range(i+3, n+1):\n            for k in range(i+2, j):\n                dp[i][j] += dp[i][k] + dp[k][j]\n    print(dp[0][n])\n\nif __name__ == '__main__':\n    main()", "\n\ndef dfs(S, sum, prev, i):\n    if i == len(S):\n        return sum + prev\n    else:\n        if S[i] == '0':\n            return 0\n        else:\n            return dfs(S, sum + prev, int(S[i]), i + 1) + dfs(S, sum, prev * 10 + int(S[i]), i + 1)\n\nS = input()\nprint(dfs(S, 0, 0, 0))"]