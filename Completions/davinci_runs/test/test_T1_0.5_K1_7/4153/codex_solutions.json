["\n\nfrom collections import deque\n\nS = input()\n\nstack = deque([])\n\nfor s in S:\n    stack.append(s)\n\nres = 0\nwhile len(stack) > 1:\n    if stack[0] == stack[1]:\n        stack.popleft()\n        stack.popleft()\n        res += 2\n    else:\n        stack.popleft()\n\nprint(res)", "\n\nN = int(input())\nS = input()\n\ncount = 0\nfor i in range(N):\n    if i == 0:\n        if S[i] != S[i+1]:\n            count += 1\n    elif i == N-1:\n        if S[i] != S[i-1]:\n            count += 1\n    else:\n        if S[i] != S[i-1] and S[i] != S[i+1]:\n            count += 1\n\nprint(count)", "\n\nn = int(input())\ns = input()\n\nstack = []\nans = 0\n\nfor i in range(n):\n    if len(stack) == 0:\n        stack.append(s[i])\n    else:\n        if stack[-1] != s[i]:\n            stack.pop()\n            ans += 2\n        else:\n            stack.append(s[i])\n\nprint(ans)", "\n\ndef main(n):\n    # n: length of the string\n    # s: string\n    s = input()\n\n    # count the number of 0s and 1s\n    num0 = s.count('0')\n    num1 = s.count('1')\n    # maximum number of cubes that can be removed\n    max_num = min(num0, num1) * 2\n    print(max_num)\n\n\nif __name__ == '__main__':\n    # input the length of the string\n    n = int(input())\n    main(n)", "\n\ns = input()\n\nred = 0\nblue = 0\n\nfor i in range(len(s)):\n    if s[i] == \"0\":\n        red += 1\n    else:\n        blue += 1\n\nprint(min(red, blue) * 2)", "\n\nimport sys\n\ndef main():\n    s = str(sys.stdin.readline().strip())\n    zero = s.count(\"0\")\n    one = s.count(\"1\")\n    print(zero if zero > one else one)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    S = input()\n    N = len(S)\n    cnt = 0\n    for i in range(N):\n        if S[i] == '0':\n            cnt += 1\n        elif S[i] == '1':\n            cnt -= 1\n        if cnt < 0:\n            cnt = 0\n    print(N-cnt)\n\nif __name__ == \"__main__\":\n    main()"]