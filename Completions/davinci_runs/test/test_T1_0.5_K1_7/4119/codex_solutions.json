["\n\ndef main():\n    N, M = map(int, input().split())\n    X = list(map(int, input().split()))\n    # \u4eca\u3044\u308b\u4f4d\u7f6e\u3092\u4fdd\u6301\u3059\u308b\n    now = [0] * N\n    # \u79fb\u52d5\u56de\u6570\u3092\u4fdd\u6301\u3059\u308b\n    move = 0\n    # \u79fb\u52d5\u5148\u3092\u4fdd\u6301\u3059\u308b\n    next = [0] * N\n    # \u4eca\u3044\u308b\u4f4d\u7f6e\u304c\u76ee\u7684\u5730\u304b\u3069\u3046\u304b\u3092\u4fdd\u6301\u3059\u308b\n    is_goal = [False] * N\n    # \u76ee\u7684\u5730\u306e\u756a\u53f7\u3092\u4fdd\u6301\u3059\u308b\n    goal_no = -1\n\n    for i in range(M):\n        # \u76ee\u7684\u5730\u3092\u63a2\u3059\n        for j in range(N):\n            if now[j] == X[i]:\n                is_goal[j] = True\n                goal_no = j\n                break\n        # \u76ee\u7684\u5730\u304c\u306a\u3051\u308c\u3070\u79fb\u52d5\u3059\u308b\n        if goal_no == -1:\n            # \u79fb\u52d5\u5148\u3092\u6c7a\u3081\u308b\n            for j in range(N):\n                next[j] = now[j] + 1\n            # \u79fb\u52d5\u5148\u304c\u76ee\u7684\u5730\u3060\u3063\u305f\u3089\u79fb\u52d5\u3059\u308b\n            for j in range(N):\n                if next[j] == X[i]:\n                    now[j] = next[j]\n                    move += 1\n                    break\n            # \u79fb\u52d5\u5148\u304c\u76ee\u7684\u5730\u3067\u306a\u3051\u308c\u3070\u79fb\u52d5\u3059\u308b\n            else:\n                for j in range(N):\n                    if next[j] != X[i]:\n                        now[j] = next[j]\n                        move += 1\n                        break\n        # \u76ee\u7684\u5730\u304c\u3042\u308c\u3070\u79fb\u52d5\u3057\u306a\u3044\n        else:\n            is_goal[goal_no] = False\n            goal_no = -1\n\n    # \u6700\u5f8c\u306b\u76ee\u7684\u5730\u3092\u63a2\u3059\n    for i in range(N):\n        if is_goal[i] == True:\n            goal_no = i\n            break\n    # \u76ee\u7684\u5730\u304c\u3042\u308c\u3070\u79fb\u52d5\u3059\u308b\n    if goal_no != -1:\n        now[goal_no] += 1\n        move += 1\n\n    print(move)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, m = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    x.sort()\n\n    ans = 0\n    for i in range(m):\n        if i == 0:\n            ans += x[i] - 0\n        else:\n            ans += x[i] - x[i-1]\n\n    if x[m-1] < 0:\n        ans += -1 * x[m-1]\n    else:\n        ans += x[m-1]\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    x = map(int, sys.stdin.readline().split())\n    x = list(set(x))\n    x.sort()\n    x.append(math.inf)\n    ans = 0\n    right = 0\n    for left in x:\n        while right < m and left > x[right]:\n            right += 1\n        ans += min(right - right % 2, m - 1 - right + right % 2)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nfrom collections import Counter\n\nN, M = map(int, sys.stdin.readline().split())\nX = Counter(map(int, sys.stdin.readline().split()))\n\n# The minimum number of moves required is the sum of the differences between the number of pieces at each coordinate and one.\nprint(sum(map(lambda x: abs(x-1), X.values())))", "\n\ndef main():\n    n,m = map(int,input().split())\n    x = list(map(int,input().split()))\n    x.sort()\n    res = x[m-1]-x[0]\n    for i in range(m-1):\n        res += x[i+1]-x[i]\n    print(res)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    # Read input\n    n, m = map(int, sys.stdin.readline().rstrip().split(' '))\n    xs = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    xs = sorted(xs)\n    # Initialize\n    count = 0\n    current = 0\n    i = 0\n    # Loop over each x\n    while i < m:\n        # If we're at or beyond the current x, move to the next x\n        if current >= xs[i]:\n            i += 1\n        # If we're not at the current x, move to it\n        else:\n            count += xs[i] - current\n            current = xs[i]\n    # Print result\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"]