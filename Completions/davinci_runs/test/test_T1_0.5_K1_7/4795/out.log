2022-04-13 23:25:20.172190 """
The teacher has sent an e-mail to her students with the following task: “Write a program that will determine and output the value of $X$ if given the statement:\[ X = \mathit{number}_1^{\mathit{pow}_1} + \mathit{number}_2^{\mathit{pow}_2} + \ldots + \mathit{number}_ N^{\mathit{pow}_ N} \]

and it holds that $\mathit{number}_1$, $\mathit{number}_2$ to $\mathit{number}_ N$ are integers, and $\mathit{pow}_1$, $\mathit{pow_2}$ to $\mathit{pow}_ N$ are one-digit integers.” Unfortunately, when the teacher downloaded the task to her computer, the text formatting was lost so the task transformed into a sum of $N$ integers:\[ X = P_1 + P_2 + \ldots + P_ N \]

For example, without text formatting, the original task in the form of $X = 21^2 + 125^3$ became a task in the form of $X = 212 + 1253$. Help the teacher by writing a program that will, for given $N$ integers from $P_1$ to $P_ N$ determine and output the value of $X$ from the original task.

-----Input-----
The first line of input contains the integer $N$ ($1 \leq N \leq 10$), the number of the addends from the task. Each of the following $N$ lines contains the integer $P_ i$ ($10 \leq P_ i \leq 9999$, $i = 1, \ldots , N$) from the task.

-----Output-----
The first and only line of output must contain the value of $X$ ($X \leq 1000000000$) from the original task.

-----Examples-----
Sample Input 1:
2
212
1253
Sample Output 1:
1953566

Sample Input 2:
5
23
17
43
52
22
Sample Output 2:
102
"""
2022-04-13 23:25:20.172202 --------------------------
2022-04-13 23:25:47.044827 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nans = 0\nfor i in range(n):\n    num = input()\n    num_len = len(num)\n    if num_len == 1:\n        ans += int(num) ** 1\n    elif num_len == 2:\n        ans += int(num) ** 2\n    elif num_len == 3:\n        ans += int(num) ** 3\n    elif num_len == 4:\n        ans += int(num) ** 4\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main(num_lines, numbers):\n    result = 0\n    for number in numbers:\n        result = result + (int(number[0]) ** int(number[1]))\n    print(result)\n\ndef get_input():\n    num_lines = int(sys.stdin.readline())\n    numbers = []\n    for i in range(num_lines):\n        numbers.append(sys.stdin.readline().split())\n    main(num_lines, numbers)\n\nif __name__ == '__main__':\n    get_input()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    x = 0\n    for i in range(n):\n        p = int(input())\n        x += (p // 10)**(p % 10)\n    print(x)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\n\nX = 0\n\nfor i in range(n):\n    number = input()\n    number_length = len(number)\n    number_1 = int(number[0])\n    number_2 = int(number[-1])\n    X += number_1 ** number_2\n\nprint(X)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\nsum = 0\n\nfor i in range(N):\n    P = input()\n    num = int(P[:-1])\n    pow = int(P[-1])\n    sum += num**pow\n\nprint(sum)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN = int(input())\nP = []\nfor i in range(N):\n    P.append(int(input()))\n\nX = 0\nfor i in range(N):\n    number = 0\n    pow_ = 0\n    while P[i] > 0:\n        number += P[i] % 10\n        pow_ += 1\n        P[i] //= 10\n    X += number ** pow_\n\nprint(X)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef parse_number(n):\n    \"\"\"\n    >>> parse_number(212)\n    (2, 1, 2)\n    >>> parse_number(1253)\n    (1, 2, 53)\n    \"\"\"\n    n_str = str(n)\n    if len(n_str) == 4:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2:])\n    elif len(n_str) == 3:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2])\n    elif len(n_str) == 2:\n        return int(n_str[0]), int(n_str[1]), 0\n    else:\n        return int(n_str[0]), 0, 0\n\ndef compute_number(n1, n2, n3, p1, p2, p3):\n    \"\"\"\n    >>> compute_number(1, 2, 53, 2, 1, 2)\n    1253\n    >>> compute_number(2, 1, 2, 1, 2, 53)\n    212\n    \"\"\"\n    return n1**p1 + n2**p2 + n3**p3\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    N = int(raw_input())\n    numbers = []\n    for _ in range(N):\n        numbers.append(int(raw_input()))\n\n    result = 0\n    for number in numbers:\n        n1, n2, n3 = parse_number(number)\n        result += compute_number(n1, n2, n3, 2, 1, 2)\n\n    print result"
    }
  ],
  "created": 1649892320,
  "id": "cmpl-4wgeOE8qrYNggcUCeSNPYnZXxwfmt",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:25:47.045095 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nans = 0\nfor i in range(n):\n    num = input()\n    num_len = len(num)\n    if num_len == 1:\n        ans += int(num) ** 1\n    elif num_len == 2:\n        ans += int(num) ** 2\n    elif num_len == 3:\n        ans += int(num) ** 3\n    elif num_len == 4:\n        ans += int(num) ** 4\n\nprint(ans)"
}
2022-04-13 23:25:47.045137 REASON stop
2022-04-13 23:25:47.045516 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.045533 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main(num_lines, numbers):\n    result = 0\n    for number in numbers:\n        result = result + (int(number[0]) ** int(number[1]))\n    print(result)\n\ndef get_input():\n    num_lines = int(sys.stdin.readline())\n    numbers = []\n    for i in range(num_lines):\n        numbers.append(sys.stdin.readline().split())\n    main(num_lines, numbers)\n\nif __name__ == '__main__':\n    get_input()"
}
2022-04-13 23:25:47.045650 REASON stop
2022-04-13 23:25:47.045906 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.045917 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    x = 0\n    for i in range(n):\n        p = int(input())\n        x += (p // 10)**(p % 10)\n    print(x)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:25:47.045956 REASON stop
2022-04-13 23:25:47.056908 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.056935 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\n\nX = 0\n\nfor i in range(n):\n    number = input()\n    number_length = len(number)\n    number_1 = int(number[0])\n    number_2 = int(number[-1])\n    X += number_1 ** number_2\n\nprint(X)"
}
2022-04-13 23:25:47.056998 REASON stop
2022-04-13 23:25:47.082654 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.082689 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\nsum = 0\n\nfor i in range(N):\n    P = input()\n    num = int(P[:-1])\n    pow = int(P[-1])\n    sum += num**pow\n\nprint(sum)"
}
2022-04-13 23:25:47.082768 REASON stop
2022-04-13 23:25:47.083395 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.083412 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN = int(input())\nP = []\nfor i in range(N):\n    P.append(int(input()))\n\nX = 0\nfor i in range(N):\n    number = 0\n    pow_ = 0\n    while P[i] > 0:\n        number += P[i] % 10\n        pow_ += 1\n        P[i] //= 10\n    X += number ** pow_\n\nprint(X)"
}
2022-04-13 23:25:47.083496 REASON stop
2022-04-13 23:25:47.084031 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
2022-04-13 23:25:47.084044 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef parse_number(n):\n    \"\"\"\n    >>> parse_number(212)\n    (2, 1, 2)\n    >>> parse_number(1253)\n    (1, 2, 53)\n    \"\"\"\n    n_str = str(n)\n    if len(n_str) == 4:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2:])\n    elif len(n_str) == 3:\n        return int(n_str[0]), int(n_str[1]), int(n_str[2])\n    elif len(n_str) == 2:\n        return int(n_str[0]), int(n_str[1]), 0\n    else:\n        return int(n_str[0]), 0, 0\n\ndef compute_number(n1, n2, n3, p1, p2, p3):\n    \"\"\"\n    >>> compute_number(1, 2, 53, 2, 1, 2)\n    1253\n    >>> compute_number(2, 1, 2, 1, 2, 53)\n    212\n    \"\"\"\n    return n1**p1 + n2**p2 + n3**p3\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    N = int(raw_input())\n    numbers = []\n    for _ in range(N):\n        numbers.append(int(raw_input()))\n\n    result = 0\n    for number in numbers:\n        n1, n2, n3 = parse_number(number)\n        result += compute_number(n1, n2, n3, 2, 1, 2)\n\n    print result"
}
2022-04-13 23:25:47.084097 REASON stop
2022-04-13 23:25:47.084717 test/intro-questions.txt_dir/4795/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4795/solutions.json'
