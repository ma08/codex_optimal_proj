["\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    positions = []\n    for i in range(N):\n        x, y = map(int, sys.stdin.readline().strip().split())\n        positions.append((x, y))\n\n    def check_diagonals(pos1, pos2):\n        x1, y1 = pos1\n        x2, y2 = pos2\n        if x1 - x2 == y1 - y2 or x1 - x2 == y2 - y1:\n            return True\n        return False\n\n    def check_rows(pos1, pos2):\n        x1, y1 = pos1\n        x2, y2 = pos2\n        if x1 == x2 or y1 == y2:\n            return True\n        return False\n\n    for i in range(N):\n        for j in range(i + 1, N):\n            if check_diagonals(positions[i], positions[j]) or check_rows(positions[i], positions[j]):\n                print(\"INCORRECT\")\n                return\n    print(\"CORRECT\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    N = int(input())\n    board = []\n    for i in range(N):\n        board.append(list(map(int, input().split())))\n\n    # Check if queens are in the same row\n    for i in range(N):\n        if len(set([j[0] for j in board])) != N:\n            print(\"INCORRECT\")\n            return\n\n    # Check if queens are in the same column\n    for i in range(N):\n        if len(set([j[1] for j in board])) != N:\n            print(\"INCORRECT\")\n            return\n\n    # Check if queens are in the same diagonal\n    for i in range(N):\n        for j in range(i+1, N):\n            if abs(board[i][0] - board[j][0]) == abs(board[i][1] - board[j][1]):\n                print(\"INCORRECT\")\n                return\n\n    print(\"CORRECT\")\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef check_board(board, N):\n    for i in range(N):\n        for j in range(N):\n            if board[i][j] == 1:\n                for k in range(N):\n                    if board[i][k] == 1:\n                        return False\n                    if board[k][j] == 1:\n                        return False\n                    if i+k < N and j+k < N:\n                        if board[i+k][j+k] == 1:\n                            return False\n                    if i-k >= 0 and j-k >= 0:\n                        if board[i-k][j-k] == 1:\n                            return False\n                    if i+k < N and j-k >= 0:\n                        if board[i+k][j-k] == 1:\n                            return False\n                    if i-k >= 0 and j+k < N:\n                        if board[i-k][j+k] == 1:\n                            return False\n    return True\n\nN = int(input())\nboard = []\nfor _ in range(N):\n    board.append([0]*N)\nfor _ in range(N):\n    x, y = [int(x) for x in input().split()]\n    board[x][y] = 1\n\nif check_board(board, N):\n    print(\"CORRECT\")\nelse:\n    print(\"INCORRECT\")", "\n\ndef main():\n    n = int(input())\n    queens = []\n    for _ in range(n):\n        x, y = [int(i) for i in input().split()]\n        queens.append((x, y))\n        if not check(queens):\n            print(\"INCORRECT\")\n            return\n    print(\"CORRECT\")\n\ndef check(queens):\n    for i in range(len(queens) - 1):\n        for j in range(i + 1, len(queens)):\n            x1, y1 = queens[i]\n            x2, y2 = queens[j]\n            if x1 == x2 or y1 == y2 or abs(x1 - x2) == abs(y1 - y2):\n                return False\n    return True\n\nmain()", "\n\nn = int(input())\nx = []\ny = []\n\nfor i in range(n):\n    x_i, y_i = map(int, input().split())\n    x.append(x_i)\n    y.append(y_i)\n\ndef check_queens(x, y):\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] or y[i] == y[j] or abs(x[i] - x[j]) == abs(y[i] - y[j]):\n                return \"INCORRECT\"\n    return \"CORRECT\"\n\n\nprint(check_queens(x, y))", "\n\ndef is_correct(N, queens):\n    for i in range(len(queens)):\n        x1, y1 = queens[i]\n        for j in range(i+1, len(queens)):\n            x2, y2 = queens[j]\n            if x1 == x2 or y1 == y2 or abs(x2-x1) == abs(y2-y1):\n                return False\n    return True\n\nN = int(input())\nqueens = [tuple(map(int, input().split())) for _ in range(N)]\n\nif is_correct(N, queens):\n    print(\"CORRECT\")\nelse:\n    print(\"INCORRECT\")", "\n\nN = int(input())\nqueens = []\n\nfor i in range(N):\n    queens.append(list(map(int, input().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if queens[i][0] == queens[j][0] or queens[i][1] == queens[j][1]:\n            print(\"INCORRECT\")\n            quit()\n        if abs(queens[i][0] - queens[j][0]) == abs(queens[i][1] - queens[j][1]):\n            print(\"INCORRECT\")\n            quit()\nprint(\"CORRECT\")"]