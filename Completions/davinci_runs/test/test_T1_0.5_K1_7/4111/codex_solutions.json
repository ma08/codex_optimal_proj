["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    #print(a)\n    #print(n)\n    b = [0]*n\n    c = [0]*n\n    #print(b)\n    #print(c)\n    #print(a[0])\n    #print(a[1])\n    b[0] = a[0]\n    c[0] = 0\n    for i in range(1,n):\n        b[i] = b[i-1] + a[i]\n        c[i] = c[i-1]\n    for i in range(1,n):\n        c[i] += a[i-1]\n    #print(b)\n    #print(c)\n    count = 0\n    for i in range(1,n-1):\n        if b[i-1] == c[i-1]:\n            count += 1\n    if b[n-2] == c[n-2]:\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\n# Solution\n\n# n = int(input())\n# a = list(map(int, input().split()))\nn = 7\na = [5, 5, 4, 5, 5, 5, 6]\n\n# First, find the number of times each number occurs\n# in the array\n\nnum_occur = {}\nfor number in a:\n    if number in num_occur:\n        num_occur[number] += 1\n    else:\n        num_occur[number] = 1\n\n# Now, find the number of good candies\n\ngood_candy = 0\nfor number, num_times in num_occur.items():\n    if num_times >= 2:\n        good_candy += num_times * (num_times - 1) // 2\n\nprint(good_candy)", "\n\nfrom collections import Counter\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nc = Counter(a)\n\ns = 0\n\nfor i in c.most_common():\n    if i[1] >= 2:\n        s += i[1] // 2\n        if i[1] % 2 != 0 and c[i[0]] > 1:\n            s += 1\n    else:\n        break\n\nprint(s)", "\n\n# SOLUTION\nn = int(input())\na = list(map(int, input().split()))\n\nodd = 0\neven = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        if odd - a[i] == even:\n            count += 1\n    else:\n        if even - a[i] == odd:\n            count += 1\n\nprint(count)", "\n\ndef solve(n, a):\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 0\n        d[a[i]] += 1\n    ans = 0\n    for i in d:\n        if d[i] >= 2:\n            ans += 1\n    return ans\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "\n\n\nfrom sys import stdin, stdout\nfrom collections import Counter\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nc = Counter(a)\nans = 0\nfor i in c:\n    if c[i] > 1:\n        ans += 1\nprint(ans)", "\n\ndef get_input(file=None):\n    if file is None:\n        n = int(input())\n        a = list(map(int, input().split()))\n    else:\n        with open(file) as f:\n            n = int(f.readline())\n            a = list(map(int, f.readline().split()))\n    return n, a\n\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [5, 5, 4, 5, 5, 5, 6])\n    2\n    >>> solve(8, [4, 8, 8, 7, 8, 4, 4, 5])\n    2\n    >>> solve(9, [2, 3, 4, 2, 2, 3, 2, 2, 4])\n    3\n    \"\"\"\n    # \u5076\u6570\u65e5\u76ee\u3068\u5947\u6570\u65e5\u76ee\u3067\u548c\u3092\u6c42\u3081\u308b\n    # \u5076\u6570\u65e5\u76ee\u3068\u5947\u6570\u65e5\u76ee\u3067\u548c\u304c\u7b49\u3057\u3044\u3082\u306e\u3092\u6570\u3048\u308b\n    even_sum = 0\n    odd_sum = 0\n    for i, a_i in enumerate(a):\n        if i % 2 == 0:\n            even_sum += a_i\n        else:\n            odd_sum += a_i\n\n    count = 0\n    for i, a_i in enumerate(a):\n        if (even_sum - a_i) == (odd_sum + a_i):\n            count += 1\n\n    return count\n\n\nif __name__ == '__main__':\n    n, a = get_input()\n    print(solve(n, a))"]