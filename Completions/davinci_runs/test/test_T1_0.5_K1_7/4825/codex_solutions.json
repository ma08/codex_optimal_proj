["\n\nimport sys\n\ndef main():\n    # Read the input.\n    s = sys.stdin.readline()\n\n    # This is a dictionary of the new alphabet.\n    new_alphabet = {\n        'a' : '@',\n        'b' : '8',\n        'c' : '(',\n        'd' : '|)',\n        'e' : '3',\n        'f' : '#',\n        'g' : '6',\n        'h' : '[-]',\n        'i' : '|',\n        'j' : '_|',\n        'k' : '|<',\n        'l' : '1',\n        'm' : '[]\\/[]',\n        'n' : '[]\\[]',\n        'o' : '0',\n        'p' : '|D',\n        'q' : '(,)',\n        'r' : '|Z',\n        's' : '$',\n        't' : '\\'][\\'',\n        'u' : '|_|',\n        'v' : '\\/',\n        'w' : '\\/\\/',\n        'x' : '}{',\n        'y' : '`/',\n        'z' : '2'\n    }\n\n    # Loop through the input string.\n    for c in s:\n        # If the character is a letter, print the new character.\n        if c.isalpha():\n            if c.islower():\n                print(new_alphabet[c], end='')\n            else:\n                print(new_alphabet[c.lower()], end='')\n        # Otherwise, just print the character.\n        else:\n            print(c, end='')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    new_alphabet = {'a':'@',\n                    'b':'8',\n                    'c':'(',\n                    'd':'|)',\n                    'e':'3',\n                    'f':'#',\n                    'g':'6',\n                    'h':'[-]',\n                    'i':'|',\n                    'j':'_|',\n                    'k':'|<',\n                    'l':'1',\n                    'm':'[]\\\\/[]',\n                    'n':'[]\\\\[]',\n                    'o':'0',\n                    'p':'|D',\n                    'q':'(,)',\n                    'r':'|Z',\n                    's':'$',\n                    't':'\\'][\\'',\n                    'u':'|_|',\n                    'v':'\\\\/',\n                    'w':'\\\\/\\\\/',\n                    'x':'}{',\n                    'y':'`/',\n                    'z':'2'}\n    for line in sys.stdin:\n        line = line.strip()\n        new_string = ''\n        for letter in line:\n            if letter.lower() in new_alphabet:\n                new_string += new_alphabet[letter.lower()]\n            else:\n                new_string += letter\n        print(new_string)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef main():\n    new_alphabet = {'a':'@', 'b':'8', 'c':'(', 'd':'|)', 'e':'3', 'f':'#', 'g':'6', 'h':'[-]', 'i':'|', 'j':'_|', 'k':'|<', 'l':'1', 'm':'[]\\/[]', 'n':'[]\\[]', 'o':'0', 'p':'|D', 'q':'(,)', 'r':'|Z', 's':'$', 't':'\\'][\\'', 'u':'|_|', 'v':'\\/', 'w':'\\/\\/', 'x':'}{', 'y':'`/', 'z':'2'}\n    for line in sys.stdin:\n        for letter in line:\n            if letter.isalpha():\n                print(new_alphabet[letter.lower()], end='')\n            else:\n                print(letter, end='')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef main():\n    text = sys.stdin.read().strip()\n\n    #dictionary of replacements\n    new_alphabet = {'a': '@',\n                    'b': '8',\n                    'c': '(',\n                    'd': '|)',\n                    'e': '3',\n                    'f': '#',\n                    'g': '6',\n                    'h': '[-]',\n                    'i': '|',\n                    'j': '_|',\n                    'k': '|<',\n                    'l': '1',\n                    'm': '[]\\\\/[]',\n                    'n': '[]\\\\[]',\n                    'o': '0',\n                    'p': '|D',\n                    'q': '(,)',\n                    'r': '|Z',\n                    's': '$',\n                    't': '\\'][\\'',\n                    'u': '|_|',\n                    'v': '\\\\/',\n                    'w': '\\\\/\\\\/',\n                    'x': '}{',\n                    'y': '`/',\n                    'z': '2'}\n\n    #convert to lowercase to make life easier\n    text = text.lower()\n\n    #convert each letter in the text to its new alphabet equivalent\n    for x in text:\n        if x in new_alphabet.keys():\n            text = text.replace(x, new_alphabet[x])\n\n    print(text)\n\nmain()", "\n\nimport sys\n\nalphabet = {'a':'@', 'b':'8', 'c':'(', 'd':'|)', 'e':'3', 'f':'#', 'g':'6', 'h':'[-]', 'i':'|', 'j':'_|', 'k':'|<', 'l':'1', 'm':'[]\\\\/[]', 'n':'[]\\\\[]', 'o':'0', 'p':'|D', 'q':'(,)', 'r':'|Z', 's':'$', 't':\"']['\", 'u':'|_|', 'v':'\\\\/', 'w':'\\\\/\\\\/', 'x':'}{', 'y':'`/', 'z':'2'}\n\nfor line in sys.stdin:\n    line = line.strip()\n    new_line = ''\n    for letter in line:\n        try:\n            new_line += alphabet[letter.lower()]\n        except:\n            new_line += letter\n    print(new_line)", "\n\nimport sys\nimport math\n\ndef main():\n    #input = sys.stdin.readline().strip()\n    input = \"All your base are belong to us.\"\n    input = \"What's the Frequency, Kenneth?\"\n    output = \"\"\n    for char in input:\n        if char.isalpha():\n            output += translate(char)\n        else:\n            output += char\n    print(output)\n\ndef translate(char):\n    if char == 'a' or char == 'A':\n        return '@'\n    elif char == 'b' or char == 'B':\n        return '8'\n    elif char == 'c' or char == 'C':\n        return '('\n    elif char == 'd' or char == 'D':\n        return '|)'\n    elif char == 'e' or char == 'E':\n        return '3'\n    elif char == 'f' or char == 'F':\n        return '#'\n    elif char == 'g' or char == 'G':\n        return '6'\n    elif char == 'h' or char == 'H':\n        return '[-]'\n    elif char == 'i' or char == 'I':\n        return '|'\n    elif char == 'j' or char == 'J':\n        return '_|'\n    elif char == 'k' or char == 'K':\n        return '|<'\n    elif char == 'l' or char == 'L':\n        return '1'\n    elif char == 'm' or char == 'M':\n        return '[]\\\\/[]'\n    elif char == 'n' or char == 'N':\n        return '[]\\[]'\n    elif char == 'o' or char == 'O':\n        return '0'\n    elif char == 'p' or char == 'P':\n        return '|D'\n    elif char == 'q' or char == 'Q':\n        return '(,)'\n    elif char == 'r' or char == 'R':\n        return '|Z'\n    elif char == 's' or char == 'S':\n        return '$'\n    elif char == 't' or char == 'T':\n        return '\\'][\\''\n    elif char == 'u' or char == 'U':\n        return '|_|'\n    elif char == 'v' or char == 'V':\n        return '\\\\/'\n    elif char == 'w' or char == 'W':\n        return '\\\\/\\\\/'\n    elif char == 'x' or char == 'X':\n        return '}{'\n    elif char == 'y' or char == 'Y':\n        return '`/'\n    elif char == 'z' or char == 'Z':\n        return '2'\n\nmain()", "\n\nimport sys\nimport math\n\n# letter_map = {\n#     'a': '@',\n#     'b': '8',\n#     'c': '(',\n#     'd': '|)',\n#     'e': '3',\n#     'f': '#',\n#     'g': '6',\n#     'h': '[-]',\n#     'i': '|',\n#     'j': '_|',\n#     'k': '|<',\n#     'l': '1',\n#     'm': '[]\\/[]',\n#     'n': '[]\\[]',\n#     'o': '0',\n#     'p': '|D',\n#     'q': '(,)',\n#     'r': '|Z',\n#     's': '$',\n#     't': \"']['\",\n#     'u': '|_|',\n#     'v': '\\/',\n#     'w': '\\/\\/',\n#     'x': '}{',\n#     'y': '`/',\n#     'z': '2',\n# }\n\nletter_map = {\n    'a': '@',\n    'b': '8',\n    'c': '(',\n    'd': '|)',\n    'e': '3',\n    'f': '#',\n    'g': '6',\n    'h': '[-]',\n    'i': '|',\n    'j': '_|',\n    'k': '|<',\n    'l': '1',\n    'm': '[]\\/[]',\n    'n': '[]\\[]',\n    'o': '0',\n    'p': '|D',\n    'q': '(,)',\n    'r': '|Z',\n    's': '$',\n    't': \"']['\",\n    'u': '|_|',\n    'v': '\\/',\n    'w': '\\/\\/',\n    'x': '}{',\n    'y': '`/',\n    'z': '2',\n}\n\ndef main():\n    line = sys.stdin.readline().strip()\n    line_len = len(line)\n    output = []\n    for i in range(line_len):\n        if line[i].lower() in letter_map:\n            output.append(letter_map[line[i].lower()])\n        else:\n            output.append(line[i])\n    print(''.join(output))\n\nif __name__ == '__main__':\n    main()"]