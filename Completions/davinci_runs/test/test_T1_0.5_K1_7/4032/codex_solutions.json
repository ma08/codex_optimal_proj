["\n\n# Solution 1\n# Read input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# Solve\nsolved = 0\nwhile len(a) > 0 and min(a[0], a[-1]) <= k:\n    solved += 1\n    if a[0] <= k:\n        a.pop(0)\n    else:\n        a.pop()\n\n# Print output\nprint(solved)", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = 0\nright = n - 1\nans = 0\n\nwhile left <= right:\n    if a[left] <= k:\n        left += 1\n        ans += 1\n    elif a[right] <= k:\n        right -= 1\n        ans += 1\n    else:\n        break\n\nprint(ans)", "\n\nfrom collections import deque\n\ndef solve(n, k, problems):\n    problems = deque(problems)\n    solved = 0\n    while problems and (k >= problems[0] or k >= problems[-1]):\n        if k >= problems[0]:\n            problems.popleft()\n        elif k >= problems[-1]:\n            problems.pop()\n        solved += 1\n    return solved\n\ndef main():\n    n, k = map(int, input().split())\n    problems = list(map(int, input().split()))\n    print(solve(n, k, problems))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    left, right = 0, n-1\n    count = 0\n    while left <= right:\n        if a[left] <= k:\n            left += 1\n            count += 1\n        elif a[right] <= k:\n            right -= 1\n            count += 1\n        else:\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nn, k = map(int, raw_input().split())\na = map(int, raw_input().split())\n\nans = 0\nleft = 0\nright = n - 1\nwhile left <= right:\n    if a[left] <= k:\n        ans += 1\n        left += 1\n    elif a[right] <= k:\n        ans += 1\n        right -= 1\n    else:\n        break\n\nprint ans", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ni, j = 0, n-1\nans = 0\nwhile i <= j:\n    if a[i] <= k and a[j] <= k:\n        if a[i] <= a[j]:\n            i += 1\n        else:\n            j -= 1\n        ans += 1\n    elif a[i] <= k:\n        i += 1\n        ans += 1\n    elif a[j] <= k:\n        j -= 1\n        ans += 1\n    else:\n        break\n\nprint(ans)", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    problems = [int(x) for x in input().split()]\n    l = 0\n    r = n - 1\n    solved = 0\n    while l <= r:\n        if problems[l] <= k:\n            solved += 1\n            l += 1\n        elif problems[r] <= k:\n            solved += 1\n            r -= 1\n        else:\n            break\n    print(solved)\n\nif __name__ == \"__main__\":\n    main()"]