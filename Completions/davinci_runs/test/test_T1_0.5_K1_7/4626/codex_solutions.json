["\n\nimport sys\nfrom collections import deque\nfrom math import ceil\n\nT = int(sys.stdin.readline())\n\nfor _ in range(T):\n    a, b, c = map(int, sys.stdin.readline().split())\n    print(abs(a - b) + abs(a - c) + abs(b - c) - max(abs(a - b), abs(a - c), abs(b - c)))", "\n\nq = int(input())\nfor i in range(q):\n    a, b, c = map(int, input().split())\n    print(min(abs(a - b) + abs(a - c) + abs(b - c), abs(a - b) + abs(a - c) + abs(b - c) - 2))", "\n\n# Code\n\nq = int(input())\nfor _ in range(q):\n    a, b, c = map(int, input().split())\n    print(min(abs(a-b)+abs(b-c)+abs(c-a), 2*(abs(a-b)+abs(b-c)+abs(c-a))-4*(min(a,b,c))))", "\n\nfor i in range(int(input())):\n    a, b, c = map(int, input().split())\n    print(min(abs(a-b)+abs(a-c)+abs(b-c), abs(a-b)+abs(a-c)-abs(b-c), abs(a-b)-abs(a-c)+abs(b-c), abs(a-b)-abs(a-c)-abs(b-c)))", "\n\nq = int(input())\n\nfor _ in range(q):\n    a, b, c = map(int, input().split())\n    print(min(abs(a - c) + abs(a - b), abs(b - c) + abs(b - a), abs(c - a) + abs(c - b)))", "\n\n# SOLUTION\n\nimport sys\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        a,b,c = map(int,input().split())\n        print(min(abs(a-b)+abs(a-c)+abs(b-c),abs(a-b)+abs(a-c)+abs(b-c)-4))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\n# read the input\nq = int(input())\n\n# process the input\nfor i in range(q):\n    # read the input\n    a, b, c = map(int, input().split())\n\n    # calculate the sum of distances\n    sum = abs(a - b) + abs(a - c) + abs(b - c)\n    min = min(a, b, c)\n    max = max(a, b, c)\n\n    # calculate the minimum sum of distances\n    min_sum = sum - 2 * (max - min)\n\n    # print the output\n    print(min_sum)"]