2022-04-13 18:16:35.123327 """
-----Input-----

The only line of the input contains a string of digits. The length of the string is between 1 and 10, inclusive.


-----Output-----

Output "Yes" or "No".


-----Examples-----
Input
373

Output
Yes

Input
121

Output
No

Input
436

Output
Yes
"""
2022-04-13 18:16:35.123334 --------------------------
2022-04-13 18:17:01.184692 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nnum = input()\n\nif len(num) == 1:\n    print(\"Yes\")\nelif len(num) == 2:\n    if num[0] == num[1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    for i in range(2, len(num)):\n        if int(num[i]) == int(num[i-1]) + int(num[i-2]):\n            continue\n        else:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef is_lucky(string):\n    length = len(string)\n    half_length = length // 2\n    if sum(int(string[i]) for i in range(half_length)) == sum(int(string[i]) for i in range(half_length, length)):\n        return \"Yes\"\n    else:\n        return \"No\"\n\ndef main():\n    string = sys.stdin.readline().strip()\n    print(is_lucky(string))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = input()\n\nif n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    num = input()\n    if num.count('3') + num.count('6') + num.count('9') != 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef is_lucky(num):\n    \"\"\"\n    Function to check if the number is a lucky number\n    \"\"\"\n    # Split the number into two halfs\n    half = len(num) // 2\n    # Check if the first half and second half sum is equal\n    return sum(map(int, num[:half])) == sum(map(int, num[half:]))\n\ndef main():\n    \"\"\"\n    Main Function\n    \"\"\"\n    num = input()\n    if is_lucky(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\nn = int(input())\n\nif n % 3 == 0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    # Read the input.\n    input_num = int(input())\n\n    # Check if the input number is a Kaprekar number.\n    if is_kaprekar_number(input_num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef is_kaprekar_number(num):\n    \"\"\"\n    This function checks if the given number is a Kaprekar number.\n    :param num: The number to check.\n    :return: True if the given number is a Kaprekar number, False otherwise.\n    \"\"\"\n    # If the number is a single digit number, it is not a Kaprekar number.\n    if len(str(num)) == 1:\n        return False\n\n    # Square the number.\n    squared_num = num ** 2\n\n    # Split the squared number into two parts: left and right.\n    squared_num_str = str(squared_num)\n    left_num = int(squared_num_str[:len(squared_num_str) // 2])\n    right_num = int(squared_num_str[len(squared_num_str) // 2:])\n\n    # If the sum of the two parts is equal to the original number, the number is a Kaprekar number.\n    if left_num + right_num == num:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649873795,
  "id": "cmpl-4wbpbV7D7cQCki2BIaH5GB5FKSlbc",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 18:17:01.184966 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nnum = input()\n\nif len(num) == 1:\n    print(\"Yes\")\nelif len(num) == 2:\n    if num[0] == num[1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    for i in range(2, len(num)):\n        if int(num[i]) == int(num[i-1]) + int(num[i-2]):\n            continue\n        else:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")"
}
2022-04-13 18:17:01.185003 REASON stop
2022-04-13 18:17:01.185565 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef is_lucky(string):\n    length = len(string)\n    half_length = length // 2\n    if sum(int(string[i]) for i in range(half_length)) == sum(int(string[i]) for i in range(half_length, length)):\n        return \"Yes\"\n    else:\n        return \"No\"\n\ndef main():\n    string = sys.stdin.readline().strip()\n    print(is_lucky(string))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 18:17:01.185681 REASON stop
2022-04-13 18:17:01.186030 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = input()\n\nif n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 18:17:01.186072 REASON stop
2022-04-13 18:17:01.206796 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    num = input()\n    if num.count('3') + num.count('6') + num.count('9') != 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:17:01.206891 REASON stop
2022-04-13 18:17:01.236230 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef is_lucky(num):\n    \"\"\"\n    Function to check if the number is a lucky number\n    \"\"\"\n    # Split the number into two halfs\n    half = len(num) // 2\n    # Check if the first half and second half sum is equal\n    return sum(map(int, num[:half])) == sum(map(int, num[half:]))\n\ndef main():\n    \"\"\"\n    Main Function\n    \"\"\"\n    num = input()\n    if is_lucky(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 18:17:01.236336 REASON stop
2022-04-13 18:17:01.237060 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\nn = int(input())\n\nif n % 3 == 0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"
}
2022-04-13 18:17:01.237127 REASON stop
2022-04-13 18:17:01.238128 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    # Read the input.\n    input_num = int(input())\n\n    # Check if the input number is a Kaprekar number.\n    if is_kaprekar_number(input_num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef is_kaprekar_number(num):\n    \"\"\"\n    This function checks if the given number is a Kaprekar number.\n    :param num: The number to check.\n    :return: True if the given number is a Kaprekar number, False otherwise.\n    \"\"\"\n    # If the number is a single digit number, it is not a Kaprekar number.\n    if len(str(num)) == 1:\n        return False\n\n    # Square the number.\n    squared_num = num ** 2\n\n    # Split the squared number into two parts: left and right.\n    squared_num_str = str(squared_num)\n    left_num = int(squared_num_str[:len(squared_num_str) // 2])\n    right_num = int(squared_num_str[len(squared_num_str) // 2:])\n\n    # If the sum of the two parts is equal to the original number, the number is a Kaprekar number.\n    if left_num + right_num == num:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:17:01.238205 REASON stop
