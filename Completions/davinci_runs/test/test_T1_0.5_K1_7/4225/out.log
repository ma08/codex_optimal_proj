2022-04-13 19:19:57.872819 """
We have A cards, each of which has an integer 1 written on it. Similarly, we also have B cards with 0s and C cards with -1s.
We will pick up K among these cards. What is the maximum possible sum of the numbers written on the cards chosen?

-----Constraints-----
 - All values in input are integers.
 - 0 \leq A, B, C
 - 1 \leq K \leq A + B + C \leq 2 \times 10^9

-----Input-----
Input is given from Standard Input in the following format:
A B C K

-----Output-----
Print the maximum possible sum of the numbers written on the cards chosen.

-----Sample Input-----
2 1 1 3

-----Sample Output-----
2

Consider picking up two cards with 1s and one card with a 0.
In this case, the sum of the numbers written on the cards is 2, which is the maximum possible value.
"""
2022-04-13 19:19:57.872827 --------------------------
2022-04-13 19:20:14.099174 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_max_sum(a, b, c, k):\n    sum = 0\n    cards = []\n    for i in range(a):\n        cards.append(1)\n    for i in range(b):\n        cards.append(0)\n    for i in range(c):\n        cards.append(-1)\n    cards.sort(reverse=True)\n    for i in range(k):\n        sum += cards[i]\n    return sum\n\nif __name__ == '__main__':\n    a, b, c, k = map(int, sys.stdin.readline().rstrip().split())\n    print(get_max_sum(a, b, c, k))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    # Get input\n    A, B, C, K = [int(x) for x in stdin.readline().rstrip().split()]\n    # Calculate\n    if K <= A:\n        print(K)\n    elif K <= A + B:\n        print(A)\n    else:\n        print(A - (K - (A + B)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    # Get input\n    a, b, c, k = map(int, sys.stdin.readline().split())\n\n    # Get minimum number of cards\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a - (k - (a + b)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef solve(A, B, C, K):\n    if K <= A:\n        return K\n    elif K <= A + B:\n        return A\n    else:\n        return A - (K - (A + B))\n\nA, B, C, K = map(int, input().split())\nprint(solve(A, B, C, K))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\na, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a+b:\n    print(a)\nelse:\n    print(a - (k - (a+b)))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    a,b,c,k = map(int,input().split())\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a-(k-a-b))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport heapq\n\na, b, c, k = map(int, input().split())\n\nheap = []\nheapq.heappush(heap, -a)\nheapq.heappush(heap, -b)\nheapq.heappush(heap, -c)\n\nfor _ in range(k):\n    num = heapq.heappop(heap)\n    heapq.heappush(heap, num+1)\n\nprint(-sum(heap))"
    }
  ],
  "created": 1649877598,
  "id": "cmpl-4wcowC4UwQjy7smvDm7vyORlWTqhG",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:20:14.099466 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_max_sum(a, b, c, k):\n    sum = 0\n    cards = []\n    for i in range(a):\n        cards.append(1)\n    for i in range(b):\n        cards.append(0)\n    for i in range(c):\n        cards.append(-1)\n    cards.sort(reverse=True)\n    for i in range(k):\n        sum += cards[i]\n    return sum\n\nif __name__ == '__main__':\n    a, b, c, k = map(int, sys.stdin.readline().rstrip().split())\n    print(get_max_sum(a, b, c, k))"
}
2022-04-13 19:20:14.099498 REASON stop
2022-04-13 19:20:14.099935 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\ndef main():\n    # Get input\n    A, B, C, K = [int(x) for x in stdin.readline().rstrip().split()]\n    # Calculate\n    if K <= A:\n        print(K)\n    elif K <= A + B:\n        print(A)\n    else:\n        print(A - (K - (A + B)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:20:14.100052 REASON stop
2022-04-13 19:20:14.100441 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    # Get input\n    a, b, c, k = map(int, sys.stdin.readline().split())\n\n    # Get minimum number of cards\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a - (k - (a + b)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:20:14.100491 REASON stop
2022-04-13 19:20:14.117629 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef solve(A, B, C, K):\n    if K <= A:\n        return K\n    elif K <= A + B:\n        return A\n    else:\n        return A - (K - (A + B))\n\nA, B, C, K = map(int, input().split())\nprint(solve(A, B, C, K))"
}
2022-04-13 19:20:14.117718 REASON stop
2022-04-13 19:20:14.142549 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\na, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a+b:\n    print(a)\nelse:\n    print(a - (k - (a+b)))"
}
2022-04-13 19:20:14.142649 REASON stop
2022-04-13 19:20:14.144017 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    a,b,c,k = map(int,input().split())\n    if k <= a:\n        print(k)\n    elif k <= a + b:\n        print(a)\n    else:\n        print(a-(k-a-b))\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:20:14.144098 REASON stop
2022-04-13 19:20:14.144914 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport heapq\n\na, b, c, k = map(int, input().split())\n\nheap = []\nheapq.heappush(heap, -a)\nheapq.heappush(heap, -b)\nheapq.heappush(heap, -c)\n\nfor _ in range(k):\n    num = heapq.heappop(heap)\n    heapq.heappush(heap, num+1)\n\nprint(-sum(heap))"
}
2022-04-13 19:20:14.145002 REASON stop
