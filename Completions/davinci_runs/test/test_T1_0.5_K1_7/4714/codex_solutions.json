["\n\ndef is_palindrome(string):\n    return string == string[::-1]\n\ndef main():\n    a, b = [int(i) for i in input().split()]\n    total = 0\n    for i in range(a, b+1):\n        if is_palindrome(str(i)):\n            total += 1\n    print(total)\n\nif __name__ == '__main__':\n    main()", "\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\ndef main():\n    A, B = map(int, input().split())\n    count = 0\n    for i in range(A, B+1):\n        if is_palindrome(i):\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\ndef palindrome(num):\n    return str(num) == str(num)[::-1]\n\na, b = map(int, input().split())\n\ncount = 0\nfor i in range(a, b+1):\n    if palindrome(i):\n        count += 1\n\nprint(count)", "\n\na, b = map(int, input().split())\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\ncount = 0\nfor i in range(a, b+1):\n    if is_palindrome(i):\n        count += 1\nprint(count)", "\n\nimport sys\n\ndef is_palindrome(n):\n    n = str(n)\n    if n == n[::-1]:\n        return True\n    else:\n        return False\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    count = 0\n    for i in range(a, b+1):\n        if is_palindrome(i):\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    a, b = map(int, input().split())\n    cnt = 0\n    for i in range(a, b+1):\n        if str(i) == str(i)[::-1]:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()"]