["\n\nregex_pattern = r\"^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$\"  # Do not delete 'r'.\n\nimport re\nprint(str(bool(re.match(regex_pattern, input()))))", "\n\nregex_pattern = r'^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$'\nimport re\nprint(str(bool(re.match(regex_pattern, input()))))", "\n\nimport re\n\nregex_pattern = r\"M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})\"\t# Do not delete 'r'.\n\nprint(str(bool(re.match(regex_pattern, input()))))", "\n\nimport re\n\nif __name__ == '__main__':\n    numeral = input()\n    print(bool(re.match(r'^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$', numeral)))", "\nimport re\n\nthousand = 'M{0,3}'\nhundred = '(C[MD]|D?C{0,3})'\nten = '(X[CL]|L?X{0,3})'\ndigit = '(I[VX]|V?I{0,3})'\nregex_pattern = r'^' + thousand + hundred + ten + digit + '$'\n\nprint(str(bool(re.match(regex_pattern, input()))))", "\n\nimport re\n\nthousand = 'M{0,3}'\nhundred = '(C[MD]|D?C{0,3})'\nten = '(X[CL]|L?X{0,3})'\ndigit = '(I[VX]|V?I{0,3})'\nregex_pattern = r\"%s%s%s%s$\" % (thousand, hundred, ten, digit)\n\nprint(str(bool(re.match(regex_pattern, input()))))", "\n\nimport re\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nregex_pattern = r\"^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$\"\n\nprint(str(bool(re.match(regex_pattern, input()))))"]