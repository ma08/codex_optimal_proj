["\n\nfrom collections import Counter\n\ndef main():\n    n, q = map(int, input().split())\n    s = input()\n    for _ in range(q):\n        l, r = map(int, input().split())\n        ans = 0\n        for i in range(l-1, r-1):\n            if s[i] == 'A' and s[i+1] == 'C':\n                ans += 1\n        print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    N, Q = map(int, input().split())\n    S = input()\n    for i in range(Q):\n        l, r = map(int, input().split())\n        print(S[l-1:r].count(\"AC\"))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, q = map(int, input().split())\ns = input()\nfor i in range(q):\n    l, r = map(int, input().split())\n    print(s[l-1:r].count(\"AC\"))", "\n\nN, Q = map(int, input().split())\nS = input()\nfor _ in range(Q):\n    l, r = map(int, input().split())\n    l -= 1\n    r -= 1\n    print(S[l:r+1].count('AC'))", "\n\n#1\nn, q = map(int, input().split())\ns = input()\n\nfor i in range(q):\n    l, r = map(int, input().split())\n    ans = 0\n    for i in range(l-1, r-1):\n        if s[i] == 'A' and s[i+1] == 'C':\n            ans += 1\n    print(ans)\n\n#2\nn, q = map(int, input().split())\ns = input()\n\nfor i in range(q):\n    l, r = map(int, input().split())\n    ans = 0\n    for i in range(l-1, r-1):\n        if s[i:i+2] == 'AC':\n            ans += 1\n    print(ans)", "\n\nN, Q = map(int, input().split())\nS = input()\n\nl_r = [list(map(int, input().split())) for _ in range(Q)]\n\nc = []\nfor i in range(N):\n    if S[i] == 'A':\n        c.append(i)\n\nfor l, r in l_r:\n    l -= 1\n    r -= 1\n    c_l = bisect.bisect_left(c, l)\n    c_r = bisect.bisect_right(c, r)\n    print(c_r - c_l)", "\n\nN, Q = map(int, input().split())\nS = input()\n\nac_count = [0] * (N + 1)\nfor i in range(N - 1):\n    ac_count[i + 2] = ac_count[i + 1]\n    if S[i] == 'A' and S[i + 1] == 'C':\n        ac_count[i + 2] += 1\n\nfor i in range(Q):\n    l, r = map(int, input().split())\n    print(ac_count[r] - ac_count[l])"]