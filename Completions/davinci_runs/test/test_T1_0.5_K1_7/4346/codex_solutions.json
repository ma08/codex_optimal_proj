["", "\n\n# Solution\n\nimport sys\nread = sys.stdin.readline\n\nt = int(read())\n\nfor _ in range(t):\n    L, v, l, r = map(int, read().split())\n    seen = L // v\n    if r // v == l // v:\n        seen -= (r - l + 1) // v\n    print(seen)", "\n\nimport sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        L, v, l, r = map(int, sys.stdin.readline().strip().split())\n        start = math.ceil(l / v)\n        end = math.floor(r / v)\n        print(math.floor(L / v) - end + start - 1)\n\nif __name__ == '__main__':\n    main()", "\n\nt = int(input())\nfor _ in range(t):\n    L, v, l, r = [int(x) for x in input().split()]\n    print(min(L//v, (r-1)//v, (L-l)//v))", "\n\ndef lanterns(L, v, l, r):\n    if l > r:\n        return 0\n    if l == r:\n        return 1\n    if l == 1:\n        return (r//v) + 1\n    return (r//v) - ((l-1)//v)\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(lanterns(L, v, l, r))", "\n\nimport sys\n\ndef solve(L, v, l, r):\n    if l == r:\n        return 0\n    if l % v == 0:\n        l += 1\n    if r % v == 0:\n        r -= 1\n    if l > r:\n        return 0\n    return (r - l) // v + 1\n\nt = int(input())\nfor i in range(t):\n    L, v, l, r = map(int, input().split())\n    print(solve(L, v, l, r))", "\n\ntest_cases = int(input())\n\nfor _ in range(test_cases):\n    l, v, l1, r1 = map(int, input().split())\n    lanterns = l // v\n    if r1 % v == 0:\n        lanterns -= 1\n    if l1 % v == 0:\n        lanterns -= 1\n    print(lanterns)"]