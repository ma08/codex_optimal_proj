["\n\nC, K = map(int, input().split())\n\ndef round_to_nearest(C, K):\n    if C % 10**K >= 10**K//2:\n        return C - C % 10**K + 10**K\n    else:\n        return C - C % 10**K\n\nprint(round_to_nearest(C, K))", "\n\nc, k = map(int, input().split())\n\nc = c - c % 10**k\n\nprint(c)", "\n\nc, k = input().split()\nc = int(c)\nk = int(k)\n\nif c % 10**k >= 5*(10**(k-1)):\n    print(c + 10**k - (c % 10**k))\nelse:\n    print(c - (c % 10**k))", "\n\nC, K = [int(x) for x in input().split()]\n\nprint(C - (C % (10**K)))", "\n\n# Read input\nc, k = map(int, input().split())\n\n# Determine the nearest amount mirko can pay\nif k == 0:\n    print(c)\nelse:\n    print(round(c, -k))", "\n\nC, K = map(int, input().split())\nprint(C - C % (10 ** K))", "\n\nC, K = [int(x) for x in input().split()]\nif C % (10 ** K) >= 5 * (10 ** (K-1)):\n    print(C - C % (10 ** K) + 10 ** K)\nelse:\n    print(C - C % (10 ** K))"]