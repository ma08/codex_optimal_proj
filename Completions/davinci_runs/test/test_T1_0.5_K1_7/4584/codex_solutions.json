["\n\n\"\"\"\nsolution:\n\n- use a dictionary to keep track of the number of subordinates a member has\n- iterate through the list of immediate bosses and update the dictionary\n- print the number of subordinates for each member\n\"\"\"\n\nn = int(input())\n\nimmediate_bosses = input().split()\n\n# create dictionary to track number of subordinates\nsubordinates = {}\n\nfor i in range(1, n + 1):\n    subordinates[i] = 0\n\n# iterate through list of immediate bosses\nfor i in range(1, n):\n    subordinates[int(immediate_bosses[i])] += 1\n\n# print the number of subordinates for each member\nfor i in range(1, n + 1):\n    print(subordinates[i])", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\n# \u5404\u8981\u7d20\u304c\u4f55\u500b\u306e\u8981\u7d20\u3092\u6301\u3064\u304b\nC = [0] * (N + 1)\nfor i in range(1, N):\n    C[A[i]] += 1\n\nfor i in range(1, N + 1):\n    print(C[i])", "\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = [0]*n\n    for i in range(1, n):\n        B[A[i-1]] += 1\n    print(\"\\n\".join(map(str, B)))\n\nif __name__ == '__main__':\n    main()", "\n\n# Main\nn = int(input())\nA = [int(x) for x in input().split()]\n\nB = [0] * n\nfor i in range(2, n+1):\n    B[A[i-1]-1] += 1\n\nprint(*B, sep=\"\\n\")", "\n\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nsubs = [0] * N\nfor i in range(1, N):\n    subs[A[i-1]] += 1\n\nfor sub in subs:\n    print(sub)", "\nimport collections\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = collections.Counter(a)\n\nfor i in range(1, n+1):\n    print(c[i])", "\n\nimport sys\n\ndef main():\n    # Read input\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Count immediate subordinates\n    subordinates = [0 for i in range(n)]\n    for i in range(1, n):\n        subordinates[a[i-1]-1] += 1\n\n    # Print result\n    for i in range(n):\n        print(subordinates[i])\n\nif __name__ == '__main__':\n    main()"]