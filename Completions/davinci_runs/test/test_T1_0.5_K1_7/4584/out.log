2022-04-13 21:53:35.096768 """
A company has N members, who are assigned ID numbers 1, ..., N.
Every member, except the member numbered 1, has exactly one immediate boss with a smaller ID number.
When a person X is the immediate boss of a person Y, the person Y is said to be an immediate subordinate of the person X.
You are given the information that the immediate boss of the member numbered i is the member numbered A_i. For each member, find how many immediate subordinates it has.

-----Constraints-----
 - 2 \leq N \leq 2 \times 10^5
 - 1 \leq A_i < i

-----Input-----
Input is given from Standard Input in the following format:
N
A_2 ... A_N

-----Output-----
For each of the members numbered 1, 2, ..., N, print the number of immediate subordinates it has, in its own line.

-----Sample Input-----
5
1 1 2 2

-----Sample Output-----
2
2
0
0
0

The member numbered 1 has two immediate subordinates: the members numbered 2 and 3.
The member numbered 2 has two immediate subordinates: the members numbered 4 and 5.
The members numbered 3, 4, and 5 do not have immediate subordinates.
"""
2022-04-13 21:53:35.096776 --------------------------
2022-04-13 21:53:50.472528 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nsubs = [0] * N\nfor i in range(1, N):\n    subs[A[i-1]] += 1\n\nfor sub in subs:\n    print(sub)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport collections\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = collections.Counter(a)\n\nfor i in range(1, n+1):\n    print(c[i])"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\n# \u5404\u8981\u7d20\u304c\u4f55\u500b\u306e\u8981\u7d20\u3092\u6301\u3064\u304b\nC = [0] * (N + 1)\nfor i in range(1, N):\n    C[A[i]] += 1\n\nfor i in range(1, N + 1):\n    print(C[i])"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n\"\"\"\nsolution:\n\n- use a dictionary to keep track of the number of subordinates a member has\n- iterate through the list of immediate bosses and update the dictionary\n- print the number of subordinates for each member\n\"\"\"\n\nn = int(input())\n\nimmediate_bosses = input().split()\n\n# create dictionary to track number of subordinates\nsubordinates = {}\n\nfor i in range(1, n + 1):\n    subordinates[i] = 0\n\n# iterate through list of immediate bosses\nfor i in range(1, n):\n    subordinates[int(immediate_bosses[i])] += 1\n\n# print the number of subordinates for each member\nfor i in range(1, n + 1):\n    print(subordinates[i])"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = [0]*n\n    for i in range(1, n):\n        B[A[i-1]] += 1\n    print(\"\\n\".join(map(str, B)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Count immediate subordinates\n    subordinates = [0 for i in range(n)]\n    for i in range(1, n):\n        subordinates[a[i-1]-1] += 1\n\n    # Print result\n    for i in range(n):\n        print(subordinates[i])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# Main\nn = int(input())\nA = [int(x) for x in input().split()]\n\nB = [0] * n\nfor i in range(2, n+1):\n    B[A[i-1]-1] += 1\n\nprint(*B, sep=\"\\n\")"
    }
  ],
  "created": 1649886815,
  "id": "cmpl-4wfDbq71WC9I0ggYjuSJOrttoHXMt",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:53:50.472773 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\n\nsubs = [0] * N\nfor i in range(1, N):\n    subs[A[i-1]] += 1\n\nfor sub in subs:\n    print(sub)"
}
2022-04-13 21:53:50.472804 REASON stop
2022-04-13 21:53:50.473213 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport collections\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = collections.Counter(a)\n\nfor i in range(1, n+1):\n    print(c[i])"
}
2022-04-13 21:53:50.473344 REASON stop
2022-04-13 21:53:50.473771 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN = int(readline())\nA = list(map(int, readline().split()))\n\n# \u5404\u8981\u7d20\u304c\u4f55\u500b\u306e\u8981\u7d20\u3092\u6301\u3064\u304b\nC = [0] * (N + 1)\nfor i in range(1, N):\n    C[A[i]] += 1\n\nfor i in range(1, N + 1):\n    print(C[i])"
}
2022-04-13 21:53:50.473822 REASON stop
2022-04-13 21:53:50.490571 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n\"\"\"\nsolution:\n\n- use a dictionary to keep track of the number of subordinates a member has\n- iterate through the list of immediate bosses and update the dictionary\n- print the number of subordinates for each member\n\"\"\"\n\nn = int(input())\n\nimmediate_bosses = input().split()\n\n# create dictionary to track number of subordinates\nsubordinates = {}\n\nfor i in range(1, n + 1):\n    subordinates[i] = 0\n\n# iterate through list of immediate bosses\nfor i in range(1, n):\n    subordinates[int(immediate_bosses[i])] += 1\n\n# print the number of subordinates for each member\nfor i in range(1, n + 1):\n    print(subordinates[i])"
}
2022-04-13 21:53:50.490670 REASON stop
2022-04-13 21:53:50.500113 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = [0]*n\n    for i in range(1, n):\n        B[A[i-1]] += 1\n    print(\"\\n\".join(map(str, B)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:53:50.500216 REASON stop
2022-04-13 21:53:50.500840 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Count immediate subordinates\n    subordinates = [0 for i in range(n)]\n    for i in range(1, n):\n        subordinates[a[i-1]-1] += 1\n\n    # Print result\n    for i in range(n):\n        print(subordinates[i])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:53:50.500910 REASON stop
2022-04-13 21:53:50.501492 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# Main\nn = int(input())\nA = [int(x) for x in input().split()]\n\nB = [0] * n\nfor i in range(2, n+1):\n    B[A[i-1]-1] += 1\n\nprint(*B, sep=\"\\n\")"
}
2022-04-13 21:53:50.501544 REASON stop
