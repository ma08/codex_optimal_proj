["\n\n\ndef solve(n, a):\n    return max(a) - min(a) - 2 * min(a[0] - min(a[1:]), a[-1] - min(a[:-1]))\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nr = max(a)\nl = min(a)\n\nif a[0] == l:\n    l = max(a[1:])\nelse:\n    r = min(a[1:])\n\nprint(r - l)", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] == a[-1]:\n        print(0)\n    else:\n        print(min(a[-1] - a[1], a[-2] - a[0]))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nprint(max(a) - min(a) - (a.count(max(a)) + a.count(min(a)) - 1))", "\n\ndef instability(n, a):\n    a = sorted(a)\n    return min(a[-1] - a[1], a[-2] - a[0])\n\nn = int(input())\na = list(map(int, input().split()))\nprint(instability(n, a))", "\n\n# Solution 1\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(0)\nelse:\n    print(min(max(a[1:]) - a[0], a[-1] - min(a[:-1])))\n\n# Solution 2\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(0)\nelse:\n    print(min(max(a[1:]) - a[0], a[-1] - min(a[:-1])))", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    print(max(a) - min(a) - 1)\n\nif __name__ == \"__main__\":\n    main()"]