["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    dp = [1 for i in range(n)]\n    for i in range(1, n):\n        for j in range(i):\n            if a[i] >= a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    print(max(dp))\n\n    ans = []\n    for i in range(n):\n        if dp[i] == max(dp):\n            ans.append(i + 1)\n    print(\" \".join(map(str, ans)))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    max_len = 0\n    max_seq = []\n    seq = []\n    for i in range(n):\n        if not seq:\n            seq.append(i + 1)\n        elif a[i] == a[i - 1] + 1:\n            seq.append(i + 1)\n        elif a[i] > a[i - 1] + 1:\n            if len(seq) > max_len:\n                max_seq = seq\n                max_len = len(seq)\n            seq = [i + 1]\n    if len(seq) > max_len:\n        max_seq = seq\n        max_len = len(seq)\n    print(max_len)\n    print(*max_seq)\n\nif __name__ == '__main__':\n    sys.exit(main())", "\n\n# read\nn = int(input())\na = [int(i) for i in input().split()]\n\n# solve\nb = [0] * n\nb[0] = 1\nfor i in range(1, n):\n    if a[i] > a[i - 1]:\n        b[i] = b[i - 1] + 1\n    else:\n        b[i] = 1\n\n# print\nprint(max(b))\nfor i in range(n):\n    if b[i] == max(b):\n        print(i + 1, end=' ')\n        break\nfor i in range(i + 1, n):\n    if b[i] == b[i - 1] + 1:\n        print(i + 1, end=' ')\n    elif b[i] == 1:\n        break", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = [0] * n\n    for i in range(n):\n        b[i] = a[i] - i\n    d = {}\n    m = 0\n    for i in range(n):\n        if b[i] in d:\n            d[b[i]] = i\n        else:\n            d[b[i]] = i\n            m = max(m, i - d[b[i] - 1])\n    print(m)\n    for i in range(n):\n        if a[i] - i == b[i] - m + 1:\n            print(i + 1, end=' ')\n\nif __name__ == '__main__':\n    main()", "\n\ndef get_longest_increasing_subseq(arr):\n    \"\"\"\n    arr: list of integers\n    returns: list of indices of longest increasing subseq\n    \"\"\"\n    n = len(arr)\n    dp = [1] * n\n    prev = [-1] * n\n    for i in range(n):\n        for j in range(i):\n            if arr[i] == arr[j] + 1:\n                if dp[i] < dp[j] + 1:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n    max_ind = 0\n    for i in range(1, n):\n        if dp[max_ind] < dp[i]:\n            max_ind = i\n    ans = []\n    while max_ind != -1:\n        ans.append(max_ind)\n        max_ind = prev[max_ind]\n    return ans[::-1]\n\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = get_longest_increasing_subseq(arr)\n    print(len(ans))\n    print(*ans)", "\n\nimport sys\n\n# parse input\nn = int(input())\na = list(map(int, input().split()))\n\n# init vars\nprev = 1\nmax_len = 1\nmax_ind = [1]\n\n# iterate\nfor i in range(1, n):\n    if a[i] == a[i - 1] + 1:\n        prev += 1\n        max_ind.append(i + 1)\n    else:\n        prev = 1\n        max_ind = [i + 1]\n    if prev > max_len:\n        max_len = prev\n\nprint(max_len)\nprint(*max_ind)", "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dp = [1] * n\n    prev = [-1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and dp[i] < dp[j] + 1:\n                dp[i] = dp[j] + 1\n                prev[i] = j\n    max_len = max(dp)\n    max_ind = dp.index(max_len)\n    print(max_len)\n    # print(dp)\n    # print(prev)\n    ans = []\n    while max_ind >= 0:\n        ans.append(max_ind + 1)\n        max_ind = prev[max_ind]\n    print(*ans[::-1])\n\nif __name__ == '__main__':\n    main()"]