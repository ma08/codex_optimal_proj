["\n\nimport sys\nsys.stdin = open('input.txt', 'r')\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# print(n, m)\n# print(a)\n# print(b)\n\ndef binary_search(arr, target):\n    left = 0\n    right = len(arr) - 1\n\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            return mid\n        elif arr[mid] > target:\n            right = mid - 1\n        else:\n            left = mid + 1\n    return left\n\ndef answer(n, m, a, b):\n    sum_dorm = [0] * (n + 1)\n    for i in range(1, n + 1):\n        sum_dorm[i] = sum_dorm[i - 1] + a[i - 1]\n\n    # print(sum_dorm)\n\n    for i in range(m):\n        target = b[i]\n        index = binary_search(sum_dorm, target)\n        print(index, target - sum_dorm[index - 1])\n\nanswer(n, m, a, b)", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef get_dormitory(s):\n    dorm = 0\n    while s > 0:\n        s -= a[dorm]\n        dorm += 1\n    return dorm\n\nfor i in range(m):\n    dorm = get_dormitory(b[i])\n    if dorm == 0:\n        print(1, b[i])\n    else:\n        print(dorm, b[i]-sum(a[:dorm-1]))", "\n\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nc = [0]*n\nfor i in range(n):\n    if i==0:\n        c[i] = a[i]\n    else:\n        c[i] = c[i-1]+a[i]\n\nfor i in b:\n    if i <= c[0]:\n        print(1,i)\n    elif i > c[n-2]:\n        print(n,i-c[n-2])\n    else:\n        for j in range(n-1):\n            if i > c[j] and i <= c[j+1]:\n                print(j+2,i-c[j])", "\n\nimport sys\n\ndef main():\n    f = sys.stdin\n    n, m = map(int, f.readline().strip().split())\n    a = list(map(int, f.readline().strip().split()))\n    b = list(map(int, f.readline().strip().split()))\n\n    s = [0] * (n + 1)\n    for i in range(1, n+1):\n        s[i] = s[i-1] + a[i-1]\n\n    for i in b:\n        for j in range(1, n+1):\n            if i <= s[j]:\n                print(j, i - s[j-1])\n                break\n\nmain()", "\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nsum_a = [0]\nsum_a.extend(list(accumulate(a)))\n\nfor i in b:\n    for j in range(1, n + 1):\n        if sum_a[j - 1] < i <= sum_a[j]:\n            print(j, i - sum_a[j - 1])", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s += a[i]\n        a[i] = s\n\n    for i in range(m):\n        l = 0\n        r = n\n        while l < r:\n            mid = (l + r) // 2\n            if a[mid] < b[i]:\n                l = mid + 1\n            else:\n                r = mid\n        print(l + 1, b[i] - a[l - 1] if l > 0 else b[i])\n\n\nif __name__ == '__main__':\n    main()", "\n\nn,m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ni = 1\nj = 0\n\nwhile i <= n and j < m:\n\tif b[j] <= a[i-1]:\n\t\tprint(i, b[j])\n\t\tj += 1\n\telse:\n\t\tb[j] -= a[i-1]\n\t\ti += 1"]