2022-04-13 18:17:38.218056 """
One very experienced problem writer decided to prepare a problem for April Fools Day contest. The task was very simple - given an arithmetic expression, return the result of evaluating this expression. However, looks like there is a bug in the reference solution...


-----Input-----

The only line of input data contains the arithmetic expression. The expression will contain between 2 and 10 operands, separated with arithmetic signs plus and/or minus. Each operand will be an integer between 0 and 255, inclusive.


-----Output-----

Reproduce the output of the reference solution, including the bug.


-----Examples-----
Input
8-7+6-5+4-3+2-1-0

Output
4

Input
2+2

Output
-46

Input
112-37

Output
375
"""
2022-04-13 18:17:38.218077 --------------------------
2022-04-13 18:17:57.359134 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ninput_string = input()\n\ninput_string = input_string.replace('+', ' + ')\ninput_string = input_string.replace('-', ' - ')\n\ninput_string = input_string.split()\n\nfor i in range(len(input_string)):\n    input_string[i] = int(input_string[i])\n\nprint(sum(input_string))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    expr = sys.stdin.readline()\n    print(eval(expr))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ninput = input()\n\nprint(eval(input))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n#Problem Solving\n\nimport re\n\ndef f(x):\n    return x if x < 128 else x - 256\n\ndef g(x):\n    return x if x >= 0 else x + 256\n\ndef calc(a, b, c):\n    if c == '+':\n        return g(f(a) + f(b))\n    else:\n        return g(f(a) - f(b))\n\ndef main():\n    expr = input()\n\n    # Split the expression into numbers and operators\n    expr = re.findall(r'[+-]?\\d+|\\+|-', expr)\n\n    # Evaluate the expression\n    result = 0\n    for i in range(len(expr)):\n        if i == 0:\n            result = int(expr[i])\n        else:\n            result = calc(result, int(expr[i + 1]), expr[i])\n\n    print(result)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef calculate(expression):\n    \"\"\"\n    Args:\n        expression: a string of a valid arithmetic expression\n    Returns:\n        int: the result of the expression\n    \"\"\"\n    # TODO: Implement this function\n    return 0\n\n\nif __name__ == \"__main__\":\n    expression = input()\n    print(calculate(expression))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    expression = input()\n    a, b = expression.split('+')\n    a = eval(a)\n    b = eval(b)\n    print(a + b)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ntry:\n    while True:\n        s = raw_input()\n        nums = [int(x) for x in s.split('+')]\n        nums2 = [int(x) for x in s.split('-')]\n        if len(nums) > 1:\n            print sum(nums)\n        else:\n            print sum(nums2)\nexcept EOFError:\n    pass"
    }
  ],
  "created": 1649873858,
  "id": "cmpl-4wbqcwosHpv5kRHulfKBXj7lkHn4S",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 18:17:57.359448 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ninput_string = input()\n\ninput_string = input_string.replace('+', ' + ')\ninput_string = input_string.replace('-', ' - ')\n\ninput_string = input_string.split()\n\nfor i in range(len(input_string)):\n    input_string[i] = int(input_string[i])\n\nprint(sum(input_string))"
}
2022-04-13 18:17:57.359485 REASON stop
2022-04-13 18:17:57.359885 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    expr = sys.stdin.readline()\n    print(eval(expr))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:17:57.359995 REASON stop
2022-04-13 18:17:57.360398 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ninput = input()\n\nprint(eval(input))"
}
2022-04-13 18:17:57.360443 REASON stop
2022-04-13 18:17:57.381074 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n#Problem Solving\n\nimport re\n\ndef f(x):\n    return x if x < 128 else x - 256\n\ndef g(x):\n    return x if x >= 0 else x + 256\n\ndef calc(a, b, c):\n    if c == '+':\n        return g(f(a) + f(b))\n    else:\n        return g(f(a) - f(b))\n\ndef main():\n    expr = input()\n\n    # Split the expression into numbers and operators\n    expr = re.findall(r'[+-]?\\d+|\\+|-', expr)\n\n    # Evaluate the expression\n    result = 0\n    for i in range(len(expr)):\n        if i == 0:\n            result = int(expr[i])\n        else:\n            result = calc(result, int(expr[i + 1]), expr[i])\n\n    print(result)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:17:57.381193 REASON stop
2022-04-13 18:17:57.397043 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef calculate(expression):\n    \"\"\"\n    Args:\n        expression: a string of a valid arithmetic expression\n    Returns:\n        int: the result of the expression\n    \"\"\"\n    # TODO: Implement this function\n    return 0\n\n\nif __name__ == \"__main__\":\n    expression = input()\n    print(calculate(expression))"
}
2022-04-13 18:17:57.397154 REASON stop
2022-04-13 18:17:57.398053 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    expression = input()\n    a, b = expression.split('+')\n    a = eval(a)\n    b = eval(b)\n    print(a + b)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:17:57.398153 REASON stop
2022-04-13 18:17:57.398824 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ntry:\n    while True:\n        s = raw_input()\n        nums = [int(x) for x in s.split('+')]\n        nums2 = [int(x) for x in s.split('-')]\n        if len(nums) > 1:\n            print sum(nums)\n        else:\n            print sum(nums2)\nexcept EOFError:\n    pass"
}
2022-04-13 18:17:57.398892 REASON stop
