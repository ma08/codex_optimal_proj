["\n\ninput = input()\n\nprint(eval(input))", "\n\ndef main():\n    expression = input()\n    a, b = expression.split('+')\n    a = eval(a)\n    b = eval(b)\n    print(a + b)\n\nif __name__ == '__main__':\n    main()", "\n\n#Problem Solving\n\nimport re\n\ndef f(x):\n    return x if x < 128 else x - 256\n\ndef g(x):\n    return x if x >= 0 else x + 256\n\ndef calc(a, b, c):\n    if c == '+':\n        return g(f(a) + f(b))\n    else:\n        return g(f(a) - f(b))\n\ndef main():\n    expr = input()\n\n    # Split the expression into numbers and operators\n    expr = re.findall(r'[+-]?\\d+|\\+|-', expr)\n\n    # Evaluate the expression\n    result = 0\n    for i in range(len(expr)):\n        if i == 0:\n            result = int(expr[i])\n        else:\n            result = calc(result, int(expr[i + 1]), expr[i])\n\n    print(result)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    expr = sys.stdin.readline()\n    print(eval(expr))\n\nif __name__ == '__main__':\n    main()", "\n\ninput_string = input()\n\ninput_string = input_string.replace('+', ' + ')\ninput_string = input_string.replace('-', ' - ')\n\ninput_string = input_string.split()\n\nfor i in range(len(input_string)):\n    input_string[i] = int(input_string[i])\n\nprint(sum(input_string))", "\n\ndef calculate(expression):\n    \"\"\"\n    Args:\n        expression: a string of a valid arithmetic expression\n    Returns:\n        int: the result of the expression\n    \"\"\"\n    # TODO: Implement this function\n    return 0\n\n\nif __name__ == \"__main__\":\n    expression = input()\n    print(calculate(expression))", "\n\ntry:\n    while True:\n        s = raw_input()\n        nums = [int(x) for x in s.split('+')]\n        nums2 = [int(x) for x in s.split('-')]\n        if len(nums) > 1:\n            print sum(nums)\n        else:\n            print sum(nums2)\nexcept EOFError:\n    pass"]