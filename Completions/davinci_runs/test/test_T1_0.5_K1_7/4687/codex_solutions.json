["\n\nN, K = map(int, input().split())\nA = [0] * N\nB = [0] * N\nfor i in range(N):\n    A[i], B[i] = map(int, input().split())\n\ncnt = 0\nfor i in range(N):\n    cnt += B[i]\n    if cnt >= K:\n        print(A[i])\n        break", "\n\n\ndef main():\n    N, K = map(int, input().split())\n    num_list = []\n    for i in range(N):\n        num, cnt = map(int, input().split())\n        num_list.extend([num]*cnt)\n    num_list.sort()\n    print(num_list[K-1])\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k = map(int, input().split())\narr = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    arr.append(a)\n    arr.append(b)\narr.sort()\nprint(arr[k-1])", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, K = map(int, input().split())\n    A = []\n    for _ in range(N):\n        a, b = map(int, input().split())\n        A.append((a, b))\n    A.sort()\n    for i in range(N):\n        K -= A[i][1]\n        if K <= 0:\n            print(A[i][0])\n            break\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a_list = []\n    for i in range(n):\n        a, b = map(int, sys.stdin.readline().split())\n        a_list.append(np.repeat(a, b))\n\n    a_list = np.sort(np.concatenate(a_list))\n    print(a_list[k-1])\n\n\nif __name__ == \"__main__\":\n    main()", "\n#%%\nn, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    ai, bi = map(int, input().split())\n    a.extend([ai] * bi)\n\na.sort()\nprint(a[k - 1])", "\n\nimport sys\nfrom heapq import heappop, heappush\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nh = []\nfor _ in range(N):\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    heappush(h, (a, b))\n\nfor _ in range(K - 1):\n    a, b = heappop(h)\n    b -= 1\n    if b > 0:\n        heappush(h, (a, b))\n\nprint(heappop(h)[0])"]