["\n\nimport sys\nimport math\n\ndef main():\n    n, h, v = map(int, input().split())\n    # the biggest piece of cake is the one with the smallest diagonal\n    # the smallest diagonal is the one with the largest side and the smallest side\n    # the largest side is the one with the largest distance from the cut\n    # and the smallest side is the one with the smallest distance from the cut\n    # so find the largest and smallest of the four distances from the cut and multiply them together\n    # to find the volume, multiply by the thickness of the cake\n    diag = (max(h, n-h) * max(v, n-v)) * 4\n    print(diag)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    \"\"\"main\"\"\"\n    side, h, v = map(int, input().split())\n    print(side*side*4 - h*v*4)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h*v, (n-h)*v, h*(n-v), (n-h)*(n-v)) * 4)\n\nif __name__ == '__main__':\n    main()", "\n\nn, h, v = map(int, input().split())\n\nprint(4*max(h*(n-v), v*(n-h), (n-h)*(n-v)))", "\n\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print(max(h * v, (n - h) * v, h * (n - v), (n - h) * (n - v)) * 4)\n    \nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n, h, v = list(map(int, input().split()))\n    print(max(h * v * 4, (n - h) * (n - v) * 4, h * (n - v) * 4, (n - h) * v * 4))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nh = int(sys.stdin.readline().strip())\nv = int(sys.stdin.readline().strip())\n\nprint(4 * max(h * v, (n-h) * v, h * (n-v), (n-h) * (n-v)))"]