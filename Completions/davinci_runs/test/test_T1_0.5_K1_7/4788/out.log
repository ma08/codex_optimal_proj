2022-04-13 23:23:25.132186 """
Jonas is developing the JUxtaPhone and is tasked with animating the compass needle. The API is simple: the compass needle is currently in some direction (between $0$ and $359$ degrees, with north being $0$, east being $90$), and is being animated by giving the degrees to spin it. If the needle is pointing north, and you give the compass an input of $90$, it will spin clockwise (positive numbers mean clockwise direction) to stop at east, whereas an input of $-45$ would spin it counterclockwise to stop at north west. 

The compass gives the current direction the phone is pointing and Jonas’ task is to animate the needle taking the shortest path from the current needle direction to the correct direction. Many ifs, moduli, and even an arctan later, he is still not convinced his minimumDistance function is correct; he calls you on the phone.

-----Input-----
The first line of input contains an integer $n_1$ ($0 \le n_1 \le 359$), the current direction of the needle. The second line of input contains an integer $n_2$ ($0 \le n_2 \le 359$), the correct direction of the needle.

-----Output-----
Output the change in direction that would make the needle spin the shortest distance from $n_1$ to $n_2$. A positive change indicates spinning the needle clockwise, and a negative change indicates spinning the needle counter-clockwise. If the two input numbers are diametrically opposed, the needle should travel clockwise. I.e., in this case, output $180$ rather than $-180$.

-----Examples-----
Sample Input 1:
315
45
Sample Output 1:
90

Sample Input 2:
180
270
Sample Output 2:
90
"""
2022-04-13 23:23:25.132197 --------------------------
2022-04-13 23:23:42.685624 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn1 = int(input())\nn2 = int(input())\n\nif abs(n1 - n2) > 180:\n    print(min(abs(n1 - n2) - 360, abs(n2 - n1) - 360))\nelse:\n    print(min(abs(n1 - n2), abs(n2 - n1)))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef minimumDistance(current, correct):\n    if current == correct:\n        return 0\n    elif current == correct + 180:\n        return 180\n    elif current == correct - 180:\n        return -180\n    elif (current < correct and current + 180 >= correct) or (current > correct and current - 180 <= correct):\n        return correct - current\n    else:\n        return (correct - current) - 360\n\ndef main():\n    print(minimumDistance(int(input()), int(input())))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n#import sys\n\n#def minimumDistance(n1, n2):\n#    return (n2 - n1 + 180) % 360 - 180\n\n#n1 = int(sys.stdin.readline())\n#n2 = int(sys.stdin.readline())\n#print minimumDistance(n1, n2)\n\n#-----Alternate Method-----\ndef minimumDistance(n1, n2):\n    return min([(n2 - n1) % 360, (n1 - n2) % 360])\n\nn1 = int(input())\nn2 = int(input())\nprint(minimumDistance(n1, n2))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn1 = int(input())\nn2 = int(input())\n\nif n1 < n2:\n    if n2-n1 <= 180:\n        print(n2-n1)\n    else:\n        print(n1-n2)\nelse:\n    if n1-n2 <= 180:\n        print(n1-n2)\n    else:\n        print(n2-n1)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n1 = int(input())\n    n2 = int(input())\n    if abs(n1-n2) <= 180:\n        print(n2-n1)\n    else:\n        if n1 > n2:\n            print(360-n1+n2)\n        else:\n            print(360-n2+n1)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\nimport math\n\n#Read input\nn1 = int(input())\nn2 = int(input())\n\n#Find the shortest distance\ndist = n2 - n1\nif dist > 180:\n    dist -= 360\nelif dist < -180:\n    dist += 360\n\n#Print output\nprint(dist)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# Workaround for input() in Python 2 and 3\ndef get_int():\n    try:\n        line = raw_input()\n    except NameError:\n        line = input()\n    return int(line)\n\nn1 = get_int()\nn2 = get_int()\n\nif abs(n2 - n1) <= 180:\n    print(n2 - n1)\nelse:\n    print(360 - abs(n2 - n1))"
    }
  ],
  "created": 1649892205,
  "id": "cmpl-4wgcXR6Nov8ASKRO5k4vMZACFA6ue",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:23:42.685914 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn1 = int(input())\nn2 = int(input())\n\nif abs(n1 - n2) > 180:\n    print(min(abs(n1 - n2) - 360, abs(n2 - n1) - 360))\nelse:\n    print(min(abs(n1 - n2), abs(n2 - n1)))"
}
2022-04-13 23:23:42.685947 REASON stop
2022-04-13 23:23:42.686280 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.686297 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef minimumDistance(current, correct):\n    if current == correct:\n        return 0\n    elif current == correct + 180:\n        return 180\n    elif current == correct - 180:\n        return -180\n    elif (current < correct and current + 180 >= correct) or (current > correct and current - 180 <= correct):\n        return correct - current\n    else:\n        return (correct - current) - 360\n\ndef main():\n    print(minimumDistance(int(input()), int(input())))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:23:42.686420 REASON stop
2022-04-13 23:23:42.686666 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.686677 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n#import sys\n\n#def minimumDistance(n1, n2):\n#    return (n2 - n1 + 180) % 360 - 180\n\n#n1 = int(sys.stdin.readline())\n#n2 = int(sys.stdin.readline())\n#print minimumDistance(n1, n2)\n\n#-----Alternate Method-----\ndef minimumDistance(n1, n2):\n    return min([(n2 - n1) % 360, (n1 - n2) % 360])\n\nn1 = int(input())\nn2 = int(input())\nprint(minimumDistance(n1, n2))"
}
2022-04-13 23:23:42.686714 REASON stop
2022-04-13 23:23:42.687932 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.687948 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn1 = int(input())\nn2 = int(input())\n\nif n1 < n2:\n    if n2-n1 <= 180:\n        print(n2-n1)\n    else:\n        print(n1-n2)\nelse:\n    if n1-n2 <= 180:\n        print(n1-n2)\n    else:\n        print(n2-n1)"
}
2022-04-13 23:23:42.687988 REASON stop
2022-04-13 23:23:42.688805 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.688818 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n1 = int(input())\n    n2 = int(input())\n    if abs(n1-n2) <= 180:\n        print(n2-n1)\n    else:\n        if n1 > n2:\n            print(360-n1+n2)\n        else:\n            print(360-n2+n1)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:23:42.688866 REASON stop
2022-04-13 23:23:42.689578 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.689593 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\nimport math\n\n#Read input\nn1 = int(input())\nn2 = int(input())\n\n#Find the shortest distance\ndist = n2 - n1\nif dist > 180:\n    dist -= 360\nelif dist < -180:\n    dist += 360\n\n#Print output\nprint(dist)"
}
2022-04-13 23:23:42.689630 REASON stop
2022-04-13 23:23:42.690268 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
2022-04-13 23:23:42.690312 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# Workaround for input() in Python 2 and 3\ndef get_int():\n    try:\n        line = raw_input()\n    except NameError:\n        line = input()\n    return int(line)\n\nn1 = get_int()\nn2 = get_int()\n\nif abs(n2 - n1) <= 180:\n    print(n2 - n1)\nelse:\n    print(360 - abs(n2 - n1))"
}
2022-04-13 23:23:42.690361 REASON stop
2022-04-13 23:23:42.690982 test/intro-questions.txt_dir/4788/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4788/solutions.json'
