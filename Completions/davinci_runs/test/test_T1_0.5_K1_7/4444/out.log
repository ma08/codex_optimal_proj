2022-04-13 20:51:10.918092 """
Given are two strings S and T consisting of lowercase English letters. Concatenate T and S in this order, without space in between, and print the resulting string.

-----Constraints-----
 - S and T are strings consisting of lowercase English letters.
 - The lengths of S and T are between 1 and 100 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
S T

-----Output-----
Print the resulting string.

-----Sample Input-----
oder atc

-----Sample Output-----
atcoder

When S =  oder and T =  atc, concatenating T and S in this order results in atcoder.
"""
2022-04-13 20:51:10.918111 --------------------------
2022-04-13 20:51:21.712820 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nprint(T+S)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\n\nprint(t+s)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\nprint(t + s)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\nprint(T + S)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ns, t = input().split()\nprint(t + s)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\nprint(t+s)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nprint(T + S)"
    }
  ],
  "created": 1649883071,
  "id": "cmpl-4weFDElgtfFQW2bWL3oXRbtzC1ljL",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:51:21.713079 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nprint(T+S)"
}
2022-04-13 20:51:21.713112 REASON stop
2022-04-13 20:51:21.713631 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\n\nprint(t+s)"
}
2022-04-13 20:51:21.713748 REASON stop
2022-04-13 20:51:21.714066 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\nprint(t + s)"
}
2022-04-13 20:51:21.714105 REASON stop
2022-04-13 20:51:21.715159 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\nprint(T + S)"
}
2022-04-13 20:51:21.715219 REASON stop
2022-04-13 20:51:21.721792 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ns, t = input().split()\nprint(t + s)"
}
2022-04-13 20:51:21.721849 REASON stop
2022-04-13 20:51:21.722376 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\nprint(t+s)"
}
2022-04-13 20:51:21.722422 REASON stop
2022-04-13 20:51:21.732715 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nprint(T + S)"
}
2022-04-13 20:51:21.732787 REASON stop
