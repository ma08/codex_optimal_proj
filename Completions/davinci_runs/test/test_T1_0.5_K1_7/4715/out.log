2022-04-13 22:47:39.623422 """
AtCoDeer the deer recently bought three paint cans.
The color of the one he bought two days ago is a, the color of the one he bought yesterday is b, and the color of the one he bought today is c.
Here, the color of each paint can is represented by an integer between 1 and 100, inclusive.
Since he is forgetful, he might have bought more than one paint can in the same color.
Count the number of different kinds of colors of these paint cans and tell him.

-----Constraints-----
 - 1≦a,b,c≦100

-----Input-----
The input is given from Standard Input in the following format:
a b c

-----Output-----
Print the number of different kinds of colors of the paint cans.

-----Sample Input-----
3 1 4

-----Sample Output-----
3

Three different colors: 1, 3, and 4.
"""
2022-04-13 22:47:39.623432 --------------------------
2022-04-13 22:49:38.553830 {
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# ==============\n# = Variables =\n# ==============\n\n# a, b, c = [int(x) for x in input().split()]\n# colors = [a, b, c]\n\n# ==============\n# = Functions =\n# ==============\n\ndef different_colors(a, b, c):\n    colors = [a, b, c]\n    return len(set(colors))\n\n# =========\n# = Tests =\n# =========\n\ndef main():\n    assert different_colors(1, 2, 3) == 3\n    assert different_colors(1, 1, 2) == 2\n    assert different_colors(1, 1, 1) == 1\n    assert different_colors(1, 2, 2) == 2\n    assert different_colors(2, 3, 4) == 3\n    assert different_colors(2, 2, 2) == 1\n    assert different_colors(3, 3, 3) == 1\n    assert different_colors(3, 3, 4) == 2\n    assert different_colors(3, 4, 4) == 2\n    assert different_colors(3, 4, 5) == 3\n    assert different_colors(3, 3, 5) == 2\n    assert different_colors(4, 4, 4) == 1\n    assert different_colors(4, 4, 5) == 2\n    assert different_colors(4, 5, 5) == 2\n    assert different_colors(4, 5, 6) == 3\n    assert different_colors(4, 4, 6) == 2\n    assert different_colors(5, 5, 5) == 1\n    assert different_colors(5, 5, 6) == 2\n    assert different_colors(5, 6, 6) == 2\n    assert different_colors(5, 6, 7) == 3\n    assert different_colors(5, 5, 7) == 2\n    assert different_colors(6, 6, 6) == 1\n    assert different_colors(6, 6, 7) == 2\n    assert different_colors(6, 7, 7) == 2\n    assert different_colors(6, 7, 8) == 3\n    assert different_colors(6, 6, 8) == 2\n    assert different_colors(7, 7, 7) == 1\n    assert different_colors(7, 7, 8) == 2\n    assert different_colors(7, 8, 8) == 2\n    assert different_colors(7, 8, 9) == 3\n    assert different_colors(7, 7, 9) == 2\n    assert different_colors(8, 8, 8) == 1\n    assert different_colors(8, 8, 9) == 2\n    assert different_colors(8, 9, 9) == 2\n    assert different_colors(8, 9, 10) == 3\n    assert different_colors(8, 8, 10) == 2\n    assert different_colors(9, 9, 9) == 1\n    assert different_colors(9, 9, 10) == 2\n    assert different_colors(9, 10, 10) == 2\n    assert different_colors(9, 10, 11) == 3\n    assert different_colors(9, 9, 11) == 2\n    assert different_colors(10, 10, 10) == 1\n    assert different_colors(10, 10, 11) == 2\n    assert different_colors(10, 11, 11) == 2\n    assert different_colors(10, 11, 12) == 3\n    assert different_colors(10, 10, 12) == 2\n    assert different_colors(11, 11, 11) == 1\n    assert different_colors(11, 11, 12) == 2\n    assert different_colors(11, 12, 12) == 2\n    assert different_colors(11, 12, 13) == 3\n    assert different_colors(11, 11, 13) == 2\n    assert different_colors(12, 12, 12) == 1\n    assert different_colors(12, 12, 13) == 2\n    assert different_colors(12, 13, 13) == 2\n    assert different_colors(12, 13, 14) == 3\n    assert different_colors(12, 12, 14) == 2\n    assert different_colors(13, 13, 13) == 1\n    assert different_colors(13, 13, 14) == 2\n    assert different_colors(13, 14, 14) == 2\n    assert different_colors(13, 14, 15) == 3\n    assert different_colors(13, 13, 15) == 2\n    assert different_colors(14, 14, 14) == 1\n    assert different_colors(14, 14, 15) == 2\n    assert different_colors(14, 15, 15) == 2\n    assert different_colors(14, 15, 16) == 3\n    assert different_colors(14, 14, 16) == 2\n    assert different_colors(15, 15, 15) == 1\n    assert different_colors(15, 15, 16) == 2\n    assert different_colors(15, 16, 16) == 2\n    assert different_colors(15, 16, 17) == 3\n    assert different_colors(15, 15, 17) == 2\n    assert different_colors(16, 16, 16) == 1\n    assert different_colors(16, 16, 17) == 2\n    assert different_colors(16, 17, 17) == 2\n    assert different_colors(16, 17, 18) == 3\n    assert different_colors(16, 16, 18) == 2\n    assert different_colors(17, 17, 17) == 1\n    assert different_colors(17, 17, 18) == 2\n    assert different_colors(17, 18, 18) == 2\n    assert different_colors(17, 18, 19) == 3\n    assert different_colors(17, 17, 19) == 2\n    assert different_colors(18, 18, 18) == 1\n    assert different_colors(18, 18, 19) == 2\n    assert different_colors(18, 19, 19) == 2\n    assert different_colors(18, 19, 20) == 3\n    assert different_colors(18, 18, 20) == 2\n    assert different_colors(19, 19, 19) == 1\n    assert different_colors(19, 19, 20) == 2\n    assert different_colors(19, 20, 20) == 2\n    assert different_colors(19, 20, 21) == 3\n    assert different_colors(19, 19, 21) == 2\n    assert different_colors(20, 20, 20) == 1\n    assert different_colors(20, 20, 21) == 2\n    assert different_colors(20, 21, 21) == 2\n    assert different_colors(20, 21, 22) == 3\n    assert different_colors(20, 20, 22) == 2\n    assert different_colors(21, 21, 21) == 1\n    assert different_colors(21, 21, 22) == 2\n    assert different_colors(21, 22, 22) == 2\n    assert different_colors(21, 22, 23) == 3\n    assert different_colors(21, 21, 23) == 2\n    assert different_colors(22, 22, 22) == 1\n    assert different_colors(22, 22, 23) == 2\n    assert different_colors(22, 23, 23) == 2\n    assert different_colors(22, 23, 24) == 3\n    assert different_colors(22, 22, 24) == 2\n    assert different_colors(23, 23, 23) == 1\n    assert different_colors(23, 23, 24) == 2\n    assert different_colors(23, 24, 24) == 2\n    assert different_colors(23, 24, 25) == 3\n    assert different_colors(23, 23, 25) == 2\n    assert different_colors(24, 24, 24) == 1\n    assert different_colors(24, 24, 25) == 2\n    assert different_colors(24, 25, 25) == 2\n    assert different_colors(24, 25, 26) == 3\n    assert different_colors(24, 24, 26) == 2\n    assert different_colors(25, 25, 25) == 1\n    assert different_colors(25, 25, 26) == 2\n    assert different_colors(25, 26, 26) == 2\n    assert different_colors(25, 26, 27) == 3\n    assert different_colors(25, 25, 27) == 2\n    assert different_colors(26, 26, 26) == 1\n    assert different_colors(26, 26, 27) == 2\n    assert different_colors(26, 27, 27) == 2\n    assert different_colors(26, 27, 28) == 3\n    assert different_colors(26, 26, 28) == 2\n    assert different_colors(27, 27, 27) == 1\n    assert different_colors(27, 27, 28) == 2\n    assert different_colors(27, 28, 28) == 2\n    assert different_colors(27, 28, 29) == 3\n    assert different_colors(27, 27, 29) == 2\n    assert different_colors(28, 28, 28) == 1\n    assert different_colors(28, 28, 29) == 2\n    assert different_colors(28, 29, 29) == 2\n    assert different_colors(28, 29, 30) == 3\n    assert different_colors(28, 28, 30) == 2\n    assert different_colors(29, 29, 29) == 1\n    assert different_colors(29, 29, 30) == 2\n    assert different_colors(29, 30, 30) == 2\n    assert different_colors(29, 30, 31) == 3\n    assert different_colors(29, 29, 31) == 2\n    assert different_colors(30, 30, 30) == 1\n    assert different_colors(30, 30, 31) == 2\n    assert different_colors(30, 31, 31) == 2\n    assert different_colors(30, 31, 32) == 3\n    assert different_colors(30, 30, 32) == 2\n    assert different_colors(31, 31, 31) == 1\n    assert different_colors(31, 31, 32) == 2\n    assert different_colors(31, 32, 32) == 2\n    assert different_colors(31, 32, 33) == 3\n    assert different_colors(31, 31, 33) == 2\n    assert different_colors(32, 32, 32) == 1\n    assert different_colors(32, 32, 33) == 2\n    assert different_colors(32, 33, 33) == 2\n    assert different_colors(32, 33, 34) == 3\n    assert different_colors(32, 32, 34) == 2\n    assert different_colors(33, 33, 33) == 1\n    assert different_colors(33, 33, 34) == 2\n    assert different_colors(33, 34, 34) == 2\n    assert different_colors(33, 34, 35) == 3\n    assert different_colors(33, 33, 35) == 2\n    assert different_colors(34, 34, 34) == 1\n    assert different_colors(34, 34, 35) == 2\n    assert different_colors(34, 35, 35) == 2\n    assert different_colors(34, 35, 36) == 3\n    assert different_colors(34, 34, 36) == 2\n    assert different_colors(35, 35, 35) == 1\n    assert different_colors(35, 35, 36) == 2\n    assert different_colors(35, 36, 36) == 2\n    assert different_colors(35, 36, 37) == 3\n    assert different_colors(35, 35, 37) == 2\n    assert different_colors(36, 36, 36) == 1\n    assert different_colors(36, 36, 37) == 2\n    assert different_colors(36, 37, 37) == 2\n    assert different_colors(36, 37, 38) == 3\n    assert different_colors(36, 36, 38) == 2\n    assert different_colors(37, 37, 37) == 1\n    assert different_colors(37, 37, 38) == 2\n    assert different_colors(37, 38, 38) == 2\n    assert different_colors(37, 38, 39) == 3\n    assert different_colors(37, 37, 39) == 2\n    assert different_colors(38, 38, 38) == 1\n    assert different_colors(38, 38, 39) == 2\n    assert different_colors(38, 39, 39) == 2\n    assert different_colors(38, 39, 40) == 3\n    assert different_colors(38, 38, 40) == 2\n    assert different_colors(39, 39, 39) == 1\n    assert different_colors(39, 39, 40) == 2\n    assert different_colors(39, 40, 40) == 2\n    assert different_colors(39, 40, 41) == 3\n    assert different_colors(39, 39, 41) == 2\n    assert different_colors(40, 40, 40) == 1\n    assert different_colors(40, 40, 41) == 2\n    assert different_colors(40, 41, 41) == 2\n    assert different_colors(40, 41, 42) == 3\n    assert different_colors(40, 40, 42) == 2\n    assert different_colors(41, 41, 41) == 1\n    assert different_colors(41, 41, 42) == 2\n    assert different_colors(41, 42, 42) == 2\n    assert different_colors(41, 42, 43) == 3\n    assert different_colors(41, 41, 43) == 2\n    assert different_colors(42, 42, 42) == 1\n    assert different_colors(42, 42, 43) == 2\n    assert different_colors(42, 43, 43) == 2\n    assert different_colors(42, 43, 44) == 3\n    assert different_colors(42, 42, 44) == 2\n    assert different_colors(43, 43, 43) == 1\n    assert different_colors(43, 43, 44) == 2\n    assert different_colors(43, 44, 44) == 2\n    assert different_colors(43, 44, 45) == 3\n    assert different_colors(43, 43, 45) == 2\n    assert different_colors(44, 44, 44) == 1\n    assert different_colors(44, 44, 45) == 2\n    assert different_colors(44, 45, 45) == 2\n    assert different_colors(44, 45, 46) == 3\n    assert different_colors(44, 44, 46) == 2\n    assert different_colors(45, 45, 45) == 1\n    assert different_colors(45, 45, 46) == 2\n    assert different_colors(45, 46, 46) == 2\n    assert different_colors(45, 46, 47) == 3\n    assert different_colors(45, 45, 47) == 2\n    assert different_colors(46, 46, 46) == 1\n    assert different_colors(46, 46, 47) == 2\n    assert different_colors(46, 47, 47) == 2\n    assert different_colors(46, 47, 48) == 3\n    assert different_colors(46, 46, 48) == 2\n    assert different_colors(47, 47, 47) == 1\n    assert different_colors(47, 47, 48) == 2\n    assert different_colors(47, 48, 48) == 2\n    assert different_colors(47, 48, 49) == 3\n    assert different_colors(47, 47, 49) == 2\n    assert different_colors(48, 48, 48) == 1\n    assert different_colors(48, 48, 49) == 2\n    assert different_colors(48, 49, 49) == 2\n    assert different_colors(48, 49, 50) == 3\n    assert different_colors(48, 48, 50) == 2\n    assert different_colors(49, 49, 49) == 1\n    assert different_colors(49, 49, 50) == 2\n    assert different_colors(49, 50, 50) == 2\n    assert different_colors(49, 50, 51) == 3\n    assert different_colors(49, 49, 51) == 2\n    assert different_colors(50, 50, 50) == 1\n    assert different_colors(50, 50, 51) == 2\n    assert different_colors(50, 51, 51) == 2\n    assert different_colors(50, 51, 52) == 3\n    assert different_colors(50, 50, 52) == 2\n    assert different_colors(51, 51, 51) == 1\n    assert different_colors(51, 51, 52) == 2\n    assert different_colors("
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\na, b, c = map(int, sys.stdin.readline().split())\nprint(len(set([a, b, c])))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    a, b, c = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    print(len(set([a,b,c])))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(len(set([a, b, c])))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649890059,
  "id": "cmpl-4wg3vADaPKOHeDQM0xqtiLlS0lZRX",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 22:49:38.554216 0 {
  "finish_reason": "length",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# ==============\n# = Variables =\n# ==============\n\n# a, b, c = [int(x) for x in input().split()]\n# colors = [a, b, c]\n\n# ==============\n# = Functions =\n# ==============\n\ndef different_colors(a, b, c):\n    colors = [a, b, c]\n    return len(set(colors))\n\n# =========\n# = Tests =\n# =========\n\ndef main():\n    assert different_colors(1, 2, 3) == 3\n    assert different_colors(1, 1, 2) == 2\n    assert different_colors(1, 1, 1) == 1\n    assert different_colors(1, 2, 2) == 2\n    assert different_colors(2, 3, 4) == 3\n    assert different_colors(2, 2, 2) == 1\n    assert different_colors(3, 3, 3) == 1\n    assert different_colors(3, 3, 4) == 2\n    assert different_colors(3, 4, 4) == 2\n    assert different_colors(3, 4, 5) == 3\n    assert different_colors(3, 3, 5) == 2\n    assert different_colors(4, 4, 4) == 1\n    assert different_colors(4, 4, 5) == 2\n    assert different_colors(4, 5, 5) == 2\n    assert different_colors(4, 5, 6) == 3\n    assert different_colors(4, 4, 6) == 2\n    assert different_colors(5, 5, 5) == 1\n    assert different_colors(5, 5, 6) == 2\n    assert different_colors(5, 6, 6) == 2\n    assert different_colors(5, 6, 7) == 3\n    assert different_colors(5, 5, 7) == 2\n    assert different_colors(6, 6, 6) == 1\n    assert different_colors(6, 6, 7) == 2\n    assert different_colors(6, 7, 7) == 2\n    assert different_colors(6, 7, 8) == 3\n    assert different_colors(6, 6, 8) == 2\n    assert different_colors(7, 7, 7) == 1\n    assert different_colors(7, 7, 8) == 2\n    assert different_colors(7, 8, 8) == 2\n    assert different_colors(7, 8, 9) == 3\n    assert different_colors(7, 7, 9) == 2\n    assert different_colors(8, 8, 8) == 1\n    assert different_colors(8, 8, 9) == 2\n    assert different_colors(8, 9, 9) == 2\n    assert different_colors(8, 9, 10) == 3\n    assert different_colors(8, 8, 10) == 2\n    assert different_colors(9, 9, 9) == 1\n    assert different_colors(9, 9, 10) == 2\n    assert different_colors(9, 10, 10) == 2\n    assert different_colors(9, 10, 11) == 3\n    assert different_colors(9, 9, 11) == 2\n    assert different_colors(10, 10, 10) == 1\n    assert different_colors(10, 10, 11) == 2\n    assert different_colors(10, 11, 11) == 2\n    assert different_colors(10, 11, 12) == 3\n    assert different_colors(10, 10, 12) == 2\n    assert different_colors(11, 11, 11) == 1\n    assert different_colors(11, 11, 12) == 2\n    assert different_colors(11, 12, 12) == 2\n    assert different_colors(11, 12, 13) == 3\n    assert different_colors(11, 11, 13) == 2\n    assert different_colors(12, 12, 12) == 1\n    assert different_colors(12, 12, 13) == 2\n    assert different_colors(12, 13, 13) == 2\n    assert different_colors(12, 13, 14) == 3\n    assert different_colors(12, 12, 14) == 2\n    assert different_colors(13, 13, 13) == 1\n    assert different_colors(13, 13, 14) == 2\n    assert different_colors(13, 14, 14) == 2\n    assert different_colors(13, 14, 15) == 3\n    assert different_colors(13, 13, 15) == 2\n    assert different_colors(14, 14, 14) == 1\n    assert different_colors(14, 14, 15) == 2\n    assert different_colors(14, 15, 15) == 2\n    assert different_colors(14, 15, 16) == 3\n    assert different_colors(14, 14, 16) == 2\n    assert different_colors(15, 15, 15) == 1\n    assert different_colors(15, 15, 16) == 2\n    assert different_colors(15, 16, 16) == 2\n    assert different_colors(15, 16, 17) == 3\n    assert different_colors(15, 15, 17) == 2\n    assert different_colors(16, 16, 16) == 1\n    assert different_colors(16, 16, 17) == 2\n    assert different_colors(16, 17, 17) == 2\n    assert different_colors(16, 17, 18) == 3\n    assert different_colors(16, 16, 18) == 2\n    assert different_colors(17, 17, 17) == 1\n    assert different_colors(17, 17, 18) == 2\n    assert different_colors(17, 18, 18) == 2\n    assert different_colors(17, 18, 19) == 3\n    assert different_colors(17, 17, 19) == 2\n    assert different_colors(18, 18, 18) == 1\n    assert different_colors(18, 18, 19) == 2\n    assert different_colors(18, 19, 19) == 2\n    assert different_colors(18, 19, 20) == 3\n    assert different_colors(18, 18, 20) == 2\n    assert different_colors(19, 19, 19) == 1\n    assert different_colors(19, 19, 20) == 2\n    assert different_colors(19, 20, 20) == 2\n    assert different_colors(19, 20, 21) == 3\n    assert different_colors(19, 19, 21) == 2\n    assert different_colors(20, 20, 20) == 1\n    assert different_colors(20, 20, 21) == 2\n    assert different_colors(20, 21, 21) == 2\n    assert different_colors(20, 21, 22) == 3\n    assert different_colors(20, 20, 22) == 2\n    assert different_colors(21, 21, 21) == 1\n    assert different_colors(21, 21, 22) == 2\n    assert different_colors(21, 22, 22) == 2\n    assert different_colors(21, 22, 23) == 3\n    assert different_colors(21, 21, 23) == 2\n    assert different_colors(22, 22, 22) == 1\n    assert different_colors(22, 22, 23) == 2\n    assert different_colors(22, 23, 23) == 2\n    assert different_colors(22, 23, 24) == 3\n    assert different_colors(22, 22, 24) == 2\n    assert different_colors(23, 23, 23) == 1\n    assert different_colors(23, 23, 24) == 2\n    assert different_colors(23, 24, 24) == 2\n    assert different_colors(23, 24, 25) == 3\n    assert different_colors(23, 23, 25) == 2\n    assert different_colors(24, 24, 24) == 1\n    assert different_colors(24, 24, 25) == 2\n    assert different_colors(24, 25, 25) == 2\n    assert different_colors(24, 25, 26) == 3\n    assert different_colors(24, 24, 26) == 2\n    assert different_colors(25, 25, 25) == 1\n    assert different_colors(25, 25, 26) == 2\n    assert different_colors(25, 26, 26) == 2\n    assert different_colors(25, 26, 27) == 3\n    assert different_colors(25, 25, 27) == 2\n    assert different_colors(26, 26, 26) == 1\n    assert different_colors(26, 26, 27) == 2\n    assert different_colors(26, 27, 27) == 2\n    assert different_colors(26, 27, 28) == 3\n    assert different_colors(26, 26, 28) == 2\n    assert different_colors(27, 27, 27) == 1\n    assert different_colors(27, 27, 28) == 2\n    assert different_colors(27, 28, 28) == 2\n    assert different_colors(27, 28, 29) == 3\n    assert different_colors(27, 27, 29) == 2\n    assert different_colors(28, 28, 28) == 1\n    assert different_colors(28, 28, 29) == 2\n    assert different_colors(28, 29, 29) == 2\n    assert different_colors(28, 29, 30) == 3\n    assert different_colors(28, 28, 30) == 2\n    assert different_colors(29, 29, 29) == 1\n    assert different_colors(29, 29, 30) == 2\n    assert different_colors(29, 30, 30) == 2\n    assert different_colors(29, 30, 31) == 3\n    assert different_colors(29, 29, 31) == 2\n    assert different_colors(30, 30, 30) == 1\n    assert different_colors(30, 30, 31) == 2\n    assert different_colors(30, 31, 31) == 2\n    assert different_colors(30, 31, 32) == 3\n    assert different_colors(30, 30, 32) == 2\n    assert different_colors(31, 31, 31) == 1\n    assert different_colors(31, 31, 32) == 2\n    assert different_colors(31, 32, 32) == 2\n    assert different_colors(31, 32, 33) == 3\n    assert different_colors(31, 31, 33) == 2\n    assert different_colors(32, 32, 32) == 1\n    assert different_colors(32, 32, 33) == 2\n    assert different_colors(32, 33, 33) == 2\n    assert different_colors(32, 33, 34) == 3\n    assert different_colors(32, 32, 34) == 2\n    assert different_colors(33, 33, 33) == 1\n    assert different_colors(33, 33, 34) == 2\n    assert different_colors(33, 34, 34) == 2\n    assert different_colors(33, 34, 35) == 3\n    assert different_colors(33, 33, 35) == 2\n    assert different_colors(34, 34, 34) == 1\n    assert different_colors(34, 34, 35) == 2\n    assert different_colors(34, 35, 35) == 2\n    assert different_colors(34, 35, 36) == 3\n    assert different_colors(34, 34, 36) == 2\n    assert different_colors(35, 35, 35) == 1\n    assert different_colors(35, 35, 36) == 2\n    assert different_colors(35, 36, 36) == 2\n    assert different_colors(35, 36, 37) == 3\n    assert different_colors(35, 35, 37) == 2\n    assert different_colors(36, 36, 36) == 1\n    assert different_colors(36, 36, 37) == 2\n    assert different_colors(36, 37, 37) == 2\n    assert different_colors(36, 37, 38) == 3\n    assert different_colors(36, 36, 38) == 2\n    assert different_colors(37, 37, 37) == 1\n    assert different_colors(37, 37, 38) == 2\n    assert different_colors(37, 38, 38) == 2\n    assert different_colors(37, 38, 39) == 3\n    assert different_colors(37, 37, 39) == 2\n    assert different_colors(38, 38, 38) == 1\n    assert different_colors(38, 38, 39) == 2\n    assert different_colors(38, 39, 39) == 2\n    assert different_colors(38, 39, 40) == 3\n    assert different_colors(38, 38, 40) == 2\n    assert different_colors(39, 39, 39) == 1\n    assert different_colors(39, 39, 40) == 2\n    assert different_colors(39, 40, 40) == 2\n    assert different_colors(39, 40, 41) == 3\n    assert different_colors(39, 39, 41) == 2\n    assert different_colors(40, 40, 40) == 1\n    assert different_colors(40, 40, 41) == 2\n    assert different_colors(40, 41, 41) == 2\n    assert different_colors(40, 41, 42) == 3\n    assert different_colors(40, 40, 42) == 2\n    assert different_colors(41, 41, 41) == 1\n    assert different_colors(41, 41, 42) == 2\n    assert different_colors(41, 42, 42) == 2\n    assert different_colors(41, 42, 43) == 3\n    assert different_colors(41, 41, 43) == 2\n    assert different_colors(42, 42, 42) == 1\n    assert different_colors(42, 42, 43) == 2\n    assert different_colors(42, 43, 43) == 2\n    assert different_colors(42, 43, 44) == 3\n    assert different_colors(42, 42, 44) == 2\n    assert different_colors(43, 43, 43) == 1\n    assert different_colors(43, 43, 44) == 2\n    assert different_colors(43, 44, 44) == 2\n    assert different_colors(43, 44, 45) == 3\n    assert different_colors(43, 43, 45) == 2\n    assert different_colors(44, 44, 44) == 1\n    assert different_colors(44, 44, 45) == 2\n    assert different_colors(44, 45, 45) == 2\n    assert different_colors(44, 45, 46) == 3\n    assert different_colors(44, 44, 46) == 2\n    assert different_colors(45, 45, 45) == 1\n    assert different_colors(45, 45, 46) == 2\n    assert different_colors(45, 46, 46) == 2\n    assert different_colors(45, 46, 47) == 3\n    assert different_colors(45, 45, 47) == 2\n    assert different_colors(46, 46, 46) == 1\n    assert different_colors(46, 46, 47) == 2\n    assert different_colors(46, 47, 47) == 2\n    assert different_colors(46, 47, 48) == 3\n    assert different_colors(46, 46, 48) == 2\n    assert different_colors(47, 47, 47) == 1\n    assert different_colors(47, 47, 48) == 2\n    assert different_colors(47, 48, 48) == 2\n    assert different_colors(47, 48, 49) == 3\n    assert different_colors(47, 47, 49) == 2\n    assert different_colors(48, 48, 48) == 1\n    assert different_colors(48, 48, 49) == 2\n    assert different_colors(48, 49, 49) == 2\n    assert different_colors(48, 49, 50) == 3\n    assert different_colors(48, 48, 50) == 2\n    assert different_colors(49, 49, 49) == 1\n    assert different_colors(49, 49, 50) == 2\n    assert different_colors(49, 50, 50) == 2\n    assert different_colors(49, 50, 51) == 3\n    assert different_colors(49, 49, 51) == 2\n    assert different_colors(50, 50, 50) == 1\n    assert different_colors(50, 50, 51) == 2\n    assert different_colors(50, 51, 51) == 2\n    assert different_colors(50, 51, 52) == 3\n    assert different_colors(50, 50, 52) == 2\n    assert different_colors(51, 51, 51) == 1\n    assert different_colors(51, 51, 52) == 2\n    assert different_colors("
}
2022-04-13 22:49:38.554320 REASON length
2022-04-13 22:49:38.554326 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
}
2022-04-13 22:49:38.554414 REASON stop
2022-04-13 22:49:38.554817 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
}
2022-04-13 22:49:38.554871 REASON stop
2022-04-13 22:49:38.555281 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\na, b, c = map(int, sys.stdin.readline().split())\nprint(len(set([a, b, c])))"
}
2022-04-13 22:49:38.555324 REASON stop
2022-04-13 22:49:38.577253 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\na, b, c = map(int, input().split())\n\nprint(len(set([a, b, c])))"
}
2022-04-13 22:49:38.577393 REASON stop
2022-04-13 22:49:38.608867 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    a, b, c = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    print(len(set([a,b,c])))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:49:38.608961 REASON stop
2022-04-13 22:49:38.609891 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(len(set([a, b, c])))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 22:49:38.609960 REASON stop
