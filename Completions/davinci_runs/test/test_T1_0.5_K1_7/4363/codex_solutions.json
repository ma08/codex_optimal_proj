["\n\nimport sys\nfrom itertools import product\n\ndef main():\n    params = sys.stdin.readline().rstrip().split()\n    k = int(params[0])\n    s = int(params[1])\n\n    count = 0\n    for x, y, z in product(range(k+1), repeat=3):\n        if x + y + z == s:\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    k = int(lines[0].split()[0])\n    s = int(lines[0].split()[1])\n    count = 0\n    for x in range(k+1):\n        for y in range(k+1):\n            for z in range(k+1):\n                if x + y + z == s:\n                    count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nk, s = map(int, input().split())\n\ncount = 0\nfor x in range(k+1):\n    for y in range(k+1):\n        for z in range(k+1):\n            if x + y + z == s:\n                count += 1\n\nprint(count)", "\n\nK,S = map(int,input().split())\n\ndef count_triples(K,S):\n    count = 0\n    for X in range(K+1):\n        for Y in range(K+1):\n            for Z in range(K+1):\n                if X + Y + Z == S:\n                    count += 1\n    return count\n\nprint(count_triples(K,S))", "\n\ndef combinations(k, s):\n  count = 0\n  for x in range(k + 1):\n    for y in range(k + 1):\n      for z in range(k + 1):\n        if x + y + z == s:\n          count += 1\n  return count\n\ndef main():\n  k, s = map(int, input().split())\n  print(combinations(k, s))\n\nif __name__ == \"__main__\":\n  main()", "\n\nk, s = map(int, input().split())\n\ncount = 0\nfor x in range(k+1):\n    for y in range(k+1):\n        for z in range(k+1):\n            if x+y+z == s:\n                count += 1\n\nprint(count)", "\n\nimport sys\n\ndef main():\n    K, S = map(int, sys.stdin.readline().split())\n    count = 0\n    for x in range(K+1):\n        for y in range(K+1):\n            if S-x-y >= 0 and S-x-y <= K:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"]