["\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\n# key: problem number, value: penalty\npenalties = {}\ncorrect = 0\n\nfor i in range(m):\n    p, s = sys.stdin.readline().split()\n    p = int(p)\n    if s == \"AC\":\n        if p not in penalties:\n            correct += 1\n            penalties[p] = 0\n    else:\n        if p not in penalties:\n            penalties[p] = 1\n        else:\n            penalties[p] += 1\n\nprint(correct, sum(penalties.values()))", "\n\ndef main():\n    n, m = map(int, input().split())\n    p_s = [list(map(str, input().split())) for i in range(m)]\n    ac_count = 0\n    penalty = 0\n    p_count = [0]*n\n    for p, s in p_s:\n        p = int(p)-1\n        if s == \"AC\":\n            if p_count[p] != -1:\n                ac_count += 1\n                penalty += p_count[p]\n                p_count[p] = -1\n        else:\n            if p_count[p] != -1:\n                p_count[p] += 1\n    print(ac_count, penalty)\n\nif __name__ == '__main__':\n    main()", "\n\nN, M = map(int, input().split())\np = []\nS = []\nans = 0\npenalty = 0\n\nfor i in range(M):\n    p_tmp, S_tmp = input().split()\n    p.append(int(p_tmp))\n    S.append(S_tmp)\n\nfor i in range(1, N+1):\n    for j in range(M):\n        if p[j] == i and S[j] == \"WA\":\n            penalty += 1\n        if p[j] == i and S[j] == \"AC\":\n            ans += 1\n            penalty += penalty\n            break\n\nprint(ans, penalty)", "\n\nn, m = map(int, input().split())\np = [0] * m\ns = [0] * m\nfor i in range(m):\n    p[i], s[i] = map(str, input().split())\n    p[i] = int(p[i])\n\ncorrect = [0] * n\npenalty = [0] * n\nfor i in range(m):\n    if s[i] == 'AC':\n        if correct[p[i] - 1] == 0:\n            correct[p[i] - 1] = 1\n    else:\n        if correct[p[i] - 1] == 0:\n            penalty[p[i] - 1] += 1\n\nprint(sum(correct), sum(penalty))", "\n\nN, M = map(int, input().split())\n\n# the number of correct answers\ncorrect = 0\n# the number of penalties\npenalty = 0\n\n# the number of WA for each problem\nwa = [0 for i in range(N)]\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\":\n        # if the problem is already AC, do nothing\n        if wa[p] == -1:\n            continue\n        # if the problem is not AC yet\n        else:\n            # count the number of correct answers and penalties\n            correct += 1\n            penalty += wa[p]\n            # mark the problem as AC\n            wa[p] = -1\n    else:\n        # if the problem is already AC, do nothing\n        if wa[p] == -1:\n            continue\n        # if the problem is not AC yet\n        else:\n            # count the number of WA\n            wa[p] += 1\n\nprint(correct, penalty)", "\n\nN, M = map(int, input().split())\n\nAC = [0] * N\nWA = [0] * N\n\nfor _ in range(M):\n    p, s = input().split()\n    p = int(p) - 1\n    if s == 'AC':\n        if AC[p] == 0:\n            AC[p] = 1\n    else:\n        if AC[p] == 0:\n            WA[p] += 1\n\nprint(sum(AC), sum(WA))", "\n\nfrom collections import defaultdict\n\nn, m = map(int, input().split())\n\npenalty = defaultdict(int)\nac = 0\nwa = 0\n\nfor _ in range(m):\n    p, s = input().split()\n    p = int(p)\n    if s == \"AC\":\n        if penalty[p] == 0:\n            ac += 1\n        else:\n            penalty[p] += 1\n    else:\n        if penalty[p] == 0:\n            penalty[p] += 1\n\nfor _, v in penalty.items():\n    wa += v\n\nprint(ac, wa)"]