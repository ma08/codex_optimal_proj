["\n\nimport math\n\ndef main():\n    V=int(input())\n    s=math.ceil(V**(1/3))\n    print(s*s*6)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport math\n\ndef main():\n    v = int(input())\n    print(find_cost(v))\n\ndef find_cost(v):\n    return 2*(v**(1/3))**2 + 4*(v**(1/3))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\nfidget_cubes = int(sys.stdin.readline().strip())\n\nif fidget_cubes == 1:\n    print(6)\nelif fidget_cubes == 2:\n    print(10)\nelse:\n    if fidget_cubes % 2 == 0:\n        print(fidget_cubes * 4)\n    else:\n        print(fidget_cubes * 4 + 2)", "\n\nimport math\nV = int(input())\n\n# If V is a perfect square, then our box will have dimensions V x 1 x 1\n# Otherwise, V is not a perfect square, and we will have to find two\n# integers such that the product of the two integers is equal to V.\n# We will use the fact that for every integer d, there exists some\n# integer s such that d = s^2 + r, where r is the remainder.\n# We will find the smallest value of d such that d = s^2 + r, where\n# r is the remainder of V/d.\n# Note that we will use the fact that the smallest value of d is the\n# floor of the square root of V.\n# We will then set the dimensions of our box to be V/d x d x 1.\n\nif math.sqrt(V) % 1 == 0:\n    print(6*V)\nelse:\n    d = math.floor(math.sqrt(V))\n    while V % d != 0:\n        d -= 1\n    print(2*(V/d + d))", "\n\n# Get input and convert to int\nv = int(input())\n\n# Get the minimum side length of the box\nmin_side = int(v**(1/3))\n\n# Get the maximum side length of the box\nmax_side = min_side + 1\n\n# Calculate the cost of a box of size min_side x min_side x min_side\nmin_side_cost = 6 * min_side**2\n\n# Calculate the cost of a box of size min_side x min_side x max_side\nmin_side_max_side_cost = 8 * min_side * max_side\n\n# Calculate the cost of a box of size min_side x max_side x max_side\nmax_side_cost = 6 * max_side**2\n\n# Find the minimum cost of the three possible box sizes\nmin_cost = min(min_side_cost, min_side_max_side_cost, max_side_cost)\n\n# Print the minimum cost\nprint(min_cost)", "\n\nimport math\n\nV = int(input())\n\nif V == 1:\n    print(6)\nelse:\n    x = math.ceil(V**(1/3.0))\n    print(2*(x**2 + x*(x+1)))", "\n\nv = int(input())\nprint(2*(v**2 + v**0.5) + 4)"]