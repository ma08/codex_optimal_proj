["\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n\n\"\"\"\n=====Sample Input 0=====\n3\nMike Thomson 20 M\nRobert Bustle 32 M\nAndria Bustle 30 F\n\n=====Sample Output 0=====\nMr. Mike Thomson\nMs. Andria Bustle\nMr. Robert Bustle\n\"\"\"", "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')", "\nfrom operator import itemgetter\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=itemgetter(2)))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')", "\n\nfrom operator import itemgetter\n\n# get input\nN = int(input())\npeople = []\nfor i in range(N):\n    people.append(input().split())\n\n# sort by age and then by last name\npeople.sort(key=itemgetter(2, 1))\n\n# print in correct format\nfor i in range(N):\n    if people[i][3] == 'M':\n        print(\"Mr. \" + people[i][1], people[i][0])\n    else:\n        print(\"Ms. \" + people[i][1], people[i][0])", "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')", "\n\ndef person_lister(f):\n    def inner(people):\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')"]