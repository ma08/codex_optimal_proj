2022-04-13 17:14:02.798804 """
Recently you have received two positive integer numbers $x$ and $y$. You forgot them, but you remembered a shuffled list containing all divisors of $x$ (including $1$ and $x$) and all divisors of $y$ (including $1$ and $y$). If $d$ is a divisor of both numbers $x$ and $y$ at the same time, there are two occurrences of $d$ in the list.

For example, if $x=4$ and $y=6$ then the given list can be any permutation of the list $[1, 2, 4, 1, 2, 3, 6]$. Some of the possible lists are: $[1, 1, 2, 4, 6, 3, 2]$, $[4, 6, 1, 1, 2, 3, 2]$ or $[1, 6, 3, 2, 4, 1, 2]$.

Your problem is to restore suitable positive integer numbers $x$ and $y$ that would yield the same list of divisors (possibly in different order).

It is guaranteed that the answer exists, i.e. the given list of divisors corresponds to some positive integers $x$ and $y$.


-----Input-----

The first line contains one integer $n$ ($2 \le n \le 128$) — the number of divisors of $x$ and $y$.

The second line of the input contains $n$ integers $d_1, d_2, \dots, d_n$ ($1 \le d_i \le 10^4$), where $d_i$ is either divisor of $x$ or divisor of $y$. If a number is divisor of both numbers $x$ and $y$ then there are two copies of this number in the list.


-----Output-----

Print two positive integer numbers $x$ and $y$ — such numbers that merged list of their divisors is the permutation of the given list of integers. It is guaranteed that the answer exists.


-----Example-----
Input
10
10 2 8 1 2 4 1 20 4 5

Output
20 8
"""
2022-04-13 17:14:02.798841 --------------------------
2022-04-13 17:14:20.517402 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef restore(n, d):\n    x = 1\n    y = 1\n    for i in range(n):\n        if d[i] > x:\n            x = d[i]\n        if d[i] > y:\n            y = d[i]\n    return x, y\n\nif __name__ == \"__main__\":\n    n = int(input())\n    d = list(map(int, input().split()))\n    print(*restore(n, d))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    divs = [int(x) for x in input().split()]\n    x, y = 1, 1\n    for d in divs:\n        x *= d\n    for d in divs:\n        y *= d\n        x /= d\n    print(int(x), int(y))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef divisors(n):\n    divs = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divs.append(i)\n    return divs\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    x = d[0]\n    y = d[0]\n    for i in range(1, n):\n        if d[i] not in divisors(x):\n            x *= d[i]\n        elif d[i] not in divisors(y):\n            y *= d[i]\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\ndivs = list(map(int, input().split()))\n\nx = 1\ny = 1\n\nfor i in range(n):\n    if i % 2 == 0:\n        x *= divs[i]\n    else:\n        y *= divs[i]\n\nprint(x, y)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nn=int(input())\narr=list(map(int,input().split()))\nd1,d2=[],[]\nfor i in arr:\n    if i not in d1:\n        d1.append(i)\n    else:\n        d2.append(i)\nx=1\ny=1\nfor i in d1:\n    x*=i\nfor i in d2:\n    y*=i\nprint(x,y)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    divisors = [int(x) for x in input().split(\" \")]\n    divisors.sort()\n    x = 1\n    y = 1\n    for i in range(n):\n        if i % 2 == 0:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n#SOLUTION\n\nimport sys\n\nn = int(input())\nd = list(map(int, input().split()))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef get_factors(n):\n    factors = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            factors.append(i)\n            if i != n // i:\n                factors.append(n // i)\n    return sorted(factors)\n\nlcm = 1\nfor i in range(n):\n    if d[i] != 1:\n        lcm = lcm * d[i] // gcd(lcm, d[i])\n        if lcm > 10 ** 4:\n            sys.exit()\n\nx = 1\ny = 1\nfor i in range(n):\n    if d[i] == 1:\n        x *= d[i]\n    else:\n        if lcm // d[i] == d[i]:\n            x *= d[i]\n        else:\n            y *= d[i]\n\nprint(x, y)"
    }
  ],
  "created": 1649870044,
  "id": "cmpl-4war6UXISBuEpHVUaDZyXnOl4Kvs4",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 17:14:20.517676 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef restore(n, d):\n    x = 1\n    y = 1\n    for i in range(n):\n        if d[i] > x:\n            x = d[i]\n        if d[i] > y:\n            y = d[i]\n    return x, y\n\nif __name__ == \"__main__\":\n    n = int(input())\n    d = list(map(int, input().split()))\n    print(*restore(n, d))"
}
2022-04-13 17:14:20.517707 REASON stop
2022-04-13 17:14:20.518127 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    divs = [int(x) for x in input().split()]\n    x, y = 1, 1\n    for d in divs:\n        x *= d\n    for d in divs:\n        y *= d\n        x /= d\n    print(int(x), int(y))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:14:20.518249 REASON stop
2022-04-13 17:14:20.518613 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef divisors(n):\n    divs = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divs.append(i)\n    return divs\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    x = d[0]\n    y = d[0]\n    for i in range(1, n):\n        if d[i] not in divisors(x):\n            x *= d[i]\n        elif d[i] not in divisors(y):\n            y *= d[i]\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:14:20.518658 REASON stop
2022-04-13 17:14:20.543386 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\ndivs = list(map(int, input().split()))\n\nx = 1\ny = 1\n\nfor i in range(n):\n    if i % 2 == 0:\n        x *= divs[i]\n    else:\n        y *= divs[i]\n\nprint(x, y)"
}
2022-04-13 17:14:20.543496 REASON stop
2022-04-13 17:14:20.560296 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nn=int(input())\narr=list(map(int,input().split()))\nd1,d2=[],[]\nfor i in arr:\n    if i not in d1:\n        d1.append(i)\n    else:\n        d2.append(i)\nx=1\ny=1\nfor i in d1:\n    x*=i\nfor i in d2:\n    y*=i\nprint(x,y)"
}
2022-04-13 17:14:20.560401 REASON stop
2022-04-13 17:14:20.561378 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    divisors = [int(x) for x in input().split(\" \")]\n    divisors.sort()\n    x = 1\n    y = 1\n    for i in range(n):\n        if i % 2 == 0:\n            x *= divisors[i]\n        else:\n            y *= divisors[i]\n    print(x, y)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 17:14:20.561468 REASON stop
2022-04-13 17:14:20.562016 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n#SOLUTION\n\nimport sys\n\nn = int(input())\nd = list(map(int, input().split()))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef get_factors(n):\n    factors = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            factors.append(i)\n            if i != n // i:\n                factors.append(n // i)\n    return sorted(factors)\n\nlcm = 1\nfor i in range(n):\n    if d[i] != 1:\n        lcm = lcm * d[i] // gcd(lcm, d[i])\n        if lcm > 10 ** 4:\n            sys.exit()\n\nx = 1\ny = 1\nfor i in range(n):\n    if d[i] == 1:\n        x *= d[i]\n    else:\n        if lcm // d[i] == d[i]:\n            x *= d[i]\n        else:\n            y *= d[i]\n\nprint(x, y)"
}
2022-04-13 17:14:20.562106 REASON stop
