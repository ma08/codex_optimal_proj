["\n\ndef solve(q, x, y):\n    ans = [0]*q\n    d = {}\n    for i in range(q):\n        if y[i] in d:\n            d[y[i]] += 1\n        else:\n            d[y[i]] = 1\n        if y[i] == 0:\n            ans[i] = 1\n        elif y[i] == 1:\n            ans[i] = 0\n        elif y[i] == 2:\n            if d[1] == 0:\n                ans[i] = 2\n            else:\n                ans[i] = 1\n        elif y[i] == 3:\n            if d[1] == 0:\n                ans[i] = 3\n            else:\n                ans[i] = 2\n        elif y[i] == 4:\n            if d[1] == 0:\n                ans[i] = 4\n            elif d[2] == 0:\n                ans[i] = 3\n            else:\n                ans[i] = 2\n        elif y[i] == 5:\n            if d[1] == 0:\n                ans[i] = 5\n            elif d[2] == 0:\n                ans[i] = 4\n            else:\n                ans[i] = 3\n        elif y[i] == 6:\n            if d[1] == 0:\n                ans[i] = 6\n            elif d[2] == 0:\n                ans[i] = 5\n            elif d[3] == 0:\n                ans[i] = 4\n            else:\n                ans[i] = 3\n        elif y[i] == 7:\n            if d[1] == 0:\n                ans[i] = 7\n            elif d[2] == 0:\n                ans[i] = 6\n            elif d[3] == 0:\n                ans[i] = 5\n            else:\n                ans[i] = 4\n        elif y[i] == 8:\n            if d[1] == 0:\n                ans[i] = 8\n            elif d[2] == 0:\n                ans[i] = 7\n            elif d[3] == 0:\n                ans[i] = 6\n            elif d[4] == 0:\n                ans[i] = 5\n            else:\n                ans[i] = 4\n        elif y[i] == 9:\n            if d[1] == 0:\n                ans[i] = 9\n            elif d[2] == 0:\n                ans[i] = 8\n            elif d[3] == 0:\n                ans[i] = 7\n            elif d[4] == 0:\n                ans[i] = 6\n            else:\n                ans[i] = 5\n        elif y[i] == 10:\n            if d[1] == 0:\n                ans[i] = 10\n            elif d[2] == 0:\n                ans[i] = 9\n            elif d[3] == 0:\n                ans[i] = 8\n            elif d[4] == 0:\n                ans[i] = 7\n            elif d[5] == 0:\n                ans[i] = 6\n            else:\n                ans[i] = 5\n        elif y[i] == 11:\n            if d[1] == 0:\n                ans[i] = 11\n            elif d[2] == 0:\n                ans[i] = 10\n            elif d[3] == 0:\n                ans[i] = 9\n            elif d[4] == 0:\n                ans[i] = 8\n            elif d[5] == 0:\n                ans[i] = 7\n            else:\n                ans[i] = 6\n        elif y[i] == 12:\n            if d[1] == 0:\n                ans[i] = 12\n            elif d[2] == 0:\n                ans[i] = 11\n            elif d[3] == 0:\n                ans[i] = 10\n            elif d[4] == 0:\n                ans[i] = 9\n            elif d[5] == 0:\n                ans[i] = 8\n            elif d[6] == 0:\n                ans[i] = 7\n            else:\n                ans[i] = 6\n        elif y[i] == 13:\n            if d[1] == 0:\n                ans[i] = 13\n            elif d[2] == 0:\n                ans[i] = 12\n            elif d[3] == 0:\n                ans[i] = 11\n            elif d[4] == 0:\n                ans[i] = 10\n            elif d[5] == 0:\n                ans[i] = 9\n            elif d[6] == 0:\n                ans[i] = 8\n            else:\n                ans[i] = 7\n        elif y[i] == 14:\n            if d[1] == 0:\n                ans[i] = 14\n            elif d[2] == 0:\n                ans[i] = 13\n            elif d[3] == 0:\n                ans[i] = 12\n            elif d[4] == 0:\n                ans[i] = 11\n            elif d[5] == 0:\n                ans[i] = 10\n            elif d[6] == 0:\n                ans[i] = 9\n            elif d[7] == 0:\n                ans[i] = 8\n            else:\n                ans[i] = 7\n        elif y[i] == 15:\n            if d[1] == 0:\n                ans[i] = 15\n            elif d[2] == 0:\n                ans[i] = 14\n            elif d[3] == 0:\n                ans[i] = 13\n            elif d[4] == 0:\n                ans[i] = 12\n            elif d[5] == 0:\n                ans[i] = 11\n            elif d[6] == 0:\n                ans[i] = 10\n            elif d[7] == 0:\n                ans[i] = 9\n            else:\n                ans[i] = 8\n        elif y[i] == 16:\n            if d[1] == 0:\n                ans[i] = 16\n            elif d[2] == 0:\n                ans[i] = 15\n            elif d[3] == 0:\n                ans[i] = 14\n            elif d[4] == 0:\n                ans[i] = 13\n            elif d[5] == 0:\n                ans[i] = 12\n            elif d[6] == 0:\n                ans[i] = 11\n            elif d[7] == 0:\n                ans[i] = 10\n            elif d[8] == 0:\n                ans[i] = 9\n            else:\n                ans[i] = 8\n        elif y[i] == 17:\n            if d[1] == 0:\n                ans[i] = 17\n            elif d[2] == 0:\n                ans[i] = 16\n            elif d[3] == 0:\n                ans[i] = 15\n            elif d[4] == 0:\n                ans[i] = 14\n            elif d[5] == 0:\n                ans[i] = 13\n            elif d[6] == 0:\n                ans[i] = 12\n            elif d[7] == 0:\n                ans[i] = 11\n            elif d[8] == 0:\n                ans[i] = 10\n            else:\n                ans[i] = 9\n        elif y[i] == 18:\n            if d[1] == 0:\n                ans[i] = 18\n            elif d[2] == 0:\n                ans[i] = 17\n            elif d[3] == 0:\n                ans[i] = 16\n            elif d[4] == 0:\n                ans[i] = 15\n            elif d[5] == 0:\n                ans[i] = 14\n            elif d[6] == 0:\n                ans[i] = 13\n            elif d[7] == 0:\n                ans[i] = 12\n            elif d[8] == 0:\n                ans[i] = 11\n            elif d[9] == 0:\n                ans[i] = 10\n            else:\n                ans[i] = 9\n        elif y[i] == 19:\n            if d[1] == 0:\n                ans[i] = 19\n            elif d[2] == 0:\n                ans[i] = 18\n            elif d[3] == 0:\n                ans[i] = 17\n            elif d[4] == 0:\n                ans[i] = 16\n            elif d[5] == 0:\n                ans[i] = 15\n            elif d[6] == 0:\n                ans[i] = 14\n            elif d[7] == 0:\n                ans[i] = 13\n            elif d[8] == 0:\n                ans[i] = 12\n            elif d[9] == 0:\n                ans[i] = 11\n            else:\n                ans[i] = 10\n        elif y[i] == 20:\n            if d[1] == 0:\n                ans[i] = 20\n            elif d[2] == 0:\n                ans[i] = 19\n            elif d[3] == 0:\n                ans[i] = 18\n            elif d[4] == 0:\n                ans[i] = 17\n            elif d[5] == 0:\n                ans[i] = 16\n            elif d[6] == 0:\n                ans[i] = 15\n            elif d[7] == 0:\n                ans[i] = 14\n            elif d[8] == 0:\n                ans[i] = 13\n            elif d[9] == 0:\n                ans[i] = 12\n            elif d[10] == 0:\n                ans[i] = 11\n            else:\n                ans[i] = 10\n    return ans\n\nq, x = map(int, input().split())\ny = []\nfor i in range(q):\n    y.append(int(input()))\nans = solve(q, x, y)\nfor i in range(q):\n    print(ans[i])", "\n\nimport sys, threading\n\nsys.setrecursionlimit(10**7) # max depth of recursion\nthreading.stack_size(2**27)  # new thread will get stack of such size\n\ndef get_mex(arr):\n    for i in range(len(arr)):\n        if i not in arr:\n            return i\n    return i + 1\n\ndef get_max_mex(arr, x):\n    mex = get_mex(arr)\n    if mex == 0: return 0\n    arr.sort()\n    i = 0\n    while i < len(arr) and arr[i] < mex:\n        if arr[i] + x > mex:\n            return mex\n        i += 1\n    if i == len(arr):\n        return mex\n    return arr[i] + x\n\ndef get_max_mex_array(arr, x):\n    max_mex_arr = [0]\n    for i in range(1, len(arr)):\n        arr[i] = arr[i] + x\n        max_mex_arr.append(get_max_mex(arr[:i+1], x))\n    return max_mex_arr\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    arr = [0]\n    for i in range(n):\n        arr.append(int(sys.stdin.readline()))\n    max_mex_arr = get_max_mex_array(arr, x)\n    for i in range(1, len(arr)):\n        print(max_mex_arr[i])\n\nthreading.Thread(target=main).start()", "\n\nimport sys\n\ndef solve(n, x, q):\n    a = []\n    for i in range(n):\n        a.append(q[i])\n        s = min(a)\n        if s < 0:\n            a[:] = [i - s for i in a]\n        m = max(a)\n        if m < x:\n            print(m)\n        else:\n            print(m % x)\n\nq = []\nfor line in sys.stdin:\n    a = line.split()\n    if len(a) == 1:\n        q.append(int(a[0]))\n    elif len(a) == 2:\n        n = int(a[0])\n        x = int(a[1])\n        solve(n, x, q)\n        q = []", "\n\nimport sys\nsys.setrecursionlimit(1000000000)\n\ndef get_mex(arr):\n    arr = sorted(arr)\n    mex = 0\n    for i in range(len(arr)):\n        if arr[i] == mex:\n            mex += 1\n        elif arr[i] > mex:\n            break\n    return mex\n\ndef main():\n    n, x = map(int, input().split())\n    arr = []\n    for _ in range(n):\n        arr.append(int(input()))\n    mex = get_mex(arr)\n    print(mex)\n    for i in range(n-1):\n        arr[i] += x\n        arr[i+1] += x\n        mex = get_mex(arr)\n        print(mex)\n\nif __name__ == '__main__':\n    main()", "\n\nq,x = map(int,input().split())\n\narr = []\n\nfor i in range(q):\n    y = int(input())\n    arr.append(y)\n    arr.sort()\n    # print(arr)\n    if arr[0] == 0:\n        print(1)\n    else:\n        print(0)", "\n\nq, x = map(int, input().split())\n\nfor _ in range(q):\n    y = int(input())\n    print(min(y, x))", "\n\ndef solve(q, x):\n    d = {}\n    d[0] = 1\n    d[1] = 1\n    d[2] = 1\n    d[3] = 1\n    for i in range(4, x+1):\n        d[i] = 1\n    for i in range(x+1, x*2+1):\n        d[i] = 2\n    for i in range(x*2+1, x*3+1):\n        d[i] = 3\n    for i in range(x*3+1, x*4+1):\n        d[i] = 4\n    for i in range(x*4+1, x*5+1):\n        d[i] = 5\n    for i in range(x*5+1, x*6+1):\n        d[i] = 6\n    for i in range(x*6+1, x*7+1):\n        d[i] = 7\n    for i in range(x*7+1, x*8+1):\n        d[i] = 8\n    for i in range(x*8+1, x*9+1):\n        d[i] = 9\n    for i in range(x*9+1, x*10+1):\n        d[i] = 10\n\n    def getMax(n):\n        if n in d:\n            return d[n]\n        return n // x + 1\n\n    def getMin(n):\n        if n in d:\n            return d[n]\n        return n // x\n\n    def getMEX(n):\n        if n in d:\n            return d[n]\n        return n // x + 1\n\n    min_n = 0\n    max_n = 0\n    mex_n = 0\n    res = []\n    for i in range(q):\n        n = int(input())\n        if n % x == 0:\n            res.append(getMEX(n))\n        else:\n            res.append(getMEX(n))\n    return res\n\nq, x = map(int, input().split())\nres = solve(q, x)\nfor r in res:\n    print(r)"]