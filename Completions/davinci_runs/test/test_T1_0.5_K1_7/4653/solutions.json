["q = int(input())\nfor z in range(q):\n    n, k = map(int, input().split())\n    x = n // k\n    n -= x * k\n    m = min(k // 2, n)\n    print(x * k + m)", "t = int(input())\nfor i in range(t):\n\tn, k = list(map(int, input().split()))\n\tz = n // k\n\tn -= z * k\n\tprint(z * k + min(n, k // 2))\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor test in range(t):\n    n,k=list(map(int,input().split()))\n\n    if n%k>k//2:\n        n-=(n%k)-k//2\n\n    print(n)\n\n", "import sys\nimport collections\nfrom collections import Counter\nimport itertools\nimport math\nimport timeit\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\n\ndef divs(n, start=1):\n    divisors = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                divisors.append(i)\n            else:\n                divisors.extend([i, n // i])\n    return divisors\n\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\n\ndef flin(d, x, default=-1):\n    left = right = -1\n    for i in range(len(d)):\n        if d[i] == x:\n            if left == -1: left = i\n            right = i\n    if left == -1:\n        return (default, default)\n    else:\n        return (left, right)\n\ndef ceil(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep=' '): print(sep.join(map(str, a)))\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\n\n# input = sys.stdin.readline\n\nt = ii()\nfor _ in range(t):\n    n, k = mi()\n    q = n // k\n    print(min(n, q * k + (k // 2)))\n", "t = int(input())\nfor i in range(t):\n\tn, k = list(map(int, input().split()))\n\tn1 = n % k\n\tk1 = int(k / 2)\n\tif n1 <= k1:\n\t\tprint(n)\n\telse:\n\t\tprint(n - n1 + k1)\n", "q=int(input())\nfor i in range(q):\n    n,k=map(int,input().split())\n    ans=n//k*k+min(n%k,k//2)\n    print(ans)", "a = int(input())\nfor i in range(a):\n    x, y = map(int, input().split())\n    u = x//y\n    o = x%y\n    print(u*y + min(o, y//2))", "import sys\n# from collections import defaultdict\nt=1\nt=int(input())\nfor i in range(t):\n    n,m=list(map(int,sys.stdin.readline().strip().split()))\n    # a=list(map(int,sys.stdin.readline().strip().split()))\n    # b=list(map(int,sys.stdin.readline().strip().split()))\n    # d = defaultdict(int)\n    # print((24-n-1)*60+60-m)\n    x=n//m\n    n\n    print(x*m+min(n-x*m,m//2))\n    \n", "t=int(input())\nwhile t:\n    n,k=map(int,input().split())\n    print(n-max(0,n%k-k//2))\n    t-=1", "q = int(input())\nfor iwer in range(q):\n\tc, kids = map(int,input().split())\n\tdystr = (c//kids)*kids\n\tcc = c\n\tc -= dystr\n\tpoz = max(0, c - kids//2)\n\tprint(cc-poz)", "t = int(input())\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    if n % k <= k // 2:\n        print(n)\n    else:\n        print((n // k) * k + k // 2)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn, k = mints()\n\tx = n // k\n\tr = n % k\n\tif r > k // 2:\n\t\tprint(n - (r - k//2))\n\telse:\n\t\tprint(n)\n\nfor i in range(mint()):\n\tsolve()\n", "from sys import stdin,stdout\ntt=int(stdin.readline().strip())\nfor t in range(tt):\n    n,k=list(map(int,stdin.readline().strip().split()))\n    x=n//k\n    y=n-x*k\n    ans=x*k+min(k//2,y)\n    print(ans)\n\n\n", "T = int(input())\nfor _ in range(T):\n  n,k = list(map(int, input().split()))\n  print(n//k*k + min(n%k, int(k/2)))\n", "for _ in range(int(input())):\n    n,k = list(map(int, input().split()))\n    ans = (n//k)*k + min(k//2,n%k)\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n## -------------------------------\n\nt= getInt()\nfor _ in range(t):\n    n, k = getVars()\n    m = n // k\n    if m*k == n:\n        print(n)\n        continue\n    m1 = k//2\n    res = min(n, m*k + m1)\n    print(res)\n\n", "for tc in range(int(input())):\n    ncand, nkid = list(map(int, input().split()))\n    res = (ncand//nkid)*nkid\n    ncand -= res\n    res += min(ncand, nkid//2)\n    print(res)\n        \n", "for nt in range(int(input())):\n\tn,k=map(int,input().split())\n\ta=n%k\n\tif a>k//2:\n\t\tprint (n-(a-k//2))\n\telse:\n\t\tprint (n)", "import math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef da():\n\tn, m = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\treturn n,m, a \n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n \n\ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n\n\nimport math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef da():\n\tn, m = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\treturn n,m, a \n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n \n \ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n \n \nfor i in range(int(input())):\n\tn, k = list(map(int, input().split()))\n\td = n // k\n\tn -= d * k\n\tans = d * k + min(k // 2, n)\n\tprint(ans) \n", "\n\n\ndef main():\n    a, b = list(map(int, input().split()))\n    k = b // 2\n    print(min(a - (a % b - k), a))\n\n\n\nc = int(input())\n\nfor i in range(c):\n    main()\n\n", "t = int(input())\nfor i in range (t):\n    n, k = list(map(int,input().split()))\n    m = n % k\n    print(n - m + min(k//2, m) )", "Q = int(input())\n\nfor q in range(Q):\n    n, k = [int(x) for x in input().split()]\n    maximum = (n//k)*k + k//2\n    print(min([maximum, n]))", "q=int(input())\nfor i in range(q):\n    n,k=list(map(int,input().split()))\n    y=n%k\n    print((n//k)*k+min(y,k//2))\n", "for _ in range(int(input())):\n    n,k = [int(s) for s in input().split()]\n    ans = (n//k)*k\n    ans1 = n%k\n    ans+= min(k//2, ans1)\n    print(ans)"]