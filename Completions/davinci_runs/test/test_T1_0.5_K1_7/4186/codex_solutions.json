["\n\nn = int(input())\na = list(map(int,input().split()))\n\n# find the minimum and maximum value\nmin_val = min(a)\nmax_val = max(a)\n\n# create a dictionary to count the frequency of each number\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\n# if the minimum value is 0, then the answer is 0\nif min_val == 0:\n    print(0)\n\n# if the minimum value is not 0, then the answer is the difference between the maximum and minimum values\nelse:\n    print(max_val-min_val)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = [0]*101\nfor i in a:\n    count[i] += 1\n\nans = 0\nfor i in range(1, 101):\n    if count[i] % 2 == 1:\n        ans += count[i]\nprint(ans)", "", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set(a)\n\nd = {}\nfor i in s:\n    d[i] = 0\n\nfor i in a:\n    d[i] += 1\n\nres = 0\nfor i in d.values():\n    if i % 2 != 0:\n        res += i - 1\n    else:\n        res += i\n\nprint(res)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# sort the list so that all equal values are together\na.sort()\n\n# create a dictionary of the number of times each number appears in the list\ncount = {}\nfor i in a:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\n# sort the dictionary by the number of times each number appeared\ncount = sorted(count.items(), key=lambda x: x[1])\n\n# initialize the number of problems solved to 0\nproblems_solved = 0\n\n# for each number in the list, if it has appeared an odd number of times, we need to solve a problem to make it even\nfor i in count:\n    if i[1] % 2 != 0:\n        problems_solved += 1\n\nprint(problems_solved)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] == a[j]:\n            count += 1\n            a[i] = a[j] = 101\n\nprint(count)", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    ans = 0\n    for k in d.keys():\n        ans += d[k] // 2\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"]