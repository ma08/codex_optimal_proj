2022-04-13 18:39:25.179427 """
The only difference between the easy and the hard versions is the maximum value of $k$.

You are given an infinite sequence of form "112123123412345$\dots$" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from $1$ to $1$, the second one — from $1$ to $2$, the third one — from $1$ to $3$, $\dots$, the $i$-th block consists of all numbers from $1$ to $i$. 

So the first $56$ elements of the sequence are "11212312341234512345612345671234567812345678912345678910". Elements of the sequence are numbered from one. For example, the $1$-st element of the sequence is $1$, the $3$-rd element of the sequence is $2$, the $20$-th element of the sequence is $5$, the $38$-th element is $2$, the $56$-th element of the sequence is $0$.

Your task is to answer $q$ independent queries. In the $i$-th query you are given one integer $k_i$. Calculate the digit at the position $k_i$ of the sequence.


-----Input-----

The first line of the input contains one integer $q$ ($1 \le q \le 500$) — the number of queries.

The $i$-th of the following $q$ lines contains one integer $k_i$ $(1 \le k_i \le 10^{18})$ — the description of the corresponding query.


-----Output-----

Print $q$ lines. In the $i$-th line print one digit $x_i$ $(0 \le x_i \le 9)$ — the answer to the query $i$, i.e. $x_i$ should be equal to the element at the position $k_i$ of the sequence.


-----Examples-----
Input
5
1
3
20
38
56

Output
1
2
5
2
0

Input
4
2132
506
999999999999999999
1000000000000000000

Output
8
2
4
1



-----Note-----

Answers on queries from the first example are described in the problem statement.
"""
2022-04-13 18:39:25.179442 --------------------------
2022-04-13 18:41:23.623662 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    else:\n        n = int(math.log10(k)) + 1\n        first_number = 10 ** (n - 1)\n        # print(n, first_number)\n        first_number_start = (first_number - 1) * n + 1\n        # print(first_number_start)\n        if k >= first_number_start:\n            diff = k - first_number_start\n            return int(str(first_number + diff // n)[diff % n])\n        else:\n            return get_digit(k - (first_number - 1) * n)\n\nq = int(input())\nfor i in range(q):\n    k = int(input())\n    print(get_digit(k))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    i = 1\n    while True:\n        l = i * (i + 1) // 2\n        if k <= l:\n            break\n        i += 1\n    l1 = (i - 1) * i // 2\n    d = k - l1\n    return int(str(i)[d - 1])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline().strip())\n    for _ in range(n):\n        k = int(sys.stdin.readline().strip())\n        print(get_digit(k))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": ""
    },
    {
      "finish_reason": "length",
      "index": 3,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\n#The idea is to find the number of digits in the number that is at the index k.\n#The number of digits in the number n is floor(log10(n)) + 1.\n#The number of digits in the sequence up to the number n is S(n) = floor(log10(n)) + 1 + S(n-1)\n#The sum of all the numbers up to n is n(n+1)/2.\n#The sum of all the digits up to n is S(n) * (n(n+1)/2)\n#The sum of all the digits up to n - 1 is S(n-1) * (n(n+1)/2)\n#S(n) - S(n-1) = floor(log10(n)) + 1\n#The index of the number n is S(n) * (n(n+1)/2) - S(n-1) * (n(n+1)/2) = floor(log10(n)) + 1 + n(n+1)/2\n#The index of the number n - 1 is S(n-1) * (n(n+1)/2) - S(n-2) * (n(n+1)/2) = floor(log10(n-1)) + 1 + (n-1)(n)/2\n#The index of the number n - 2 is S(n-2) * (n(n+1)/2) - S(n-3) * (n(n+1)/2) = floor(log10(n-2)) + 1 + (n-2)(n-1)/2\n#The index of the number n - 3 is S(n-3) * (n(n+1)/2) - S(n-4) * (n(n+1)/2) = floor(log10(n-3)) + 1 + (n-3)(n-2)/2\n#The index of the number n - 4 is S(n-4) * (n(n+1)/2) - S(n-5) * (n(n+1)/2) = floor(log10(n-4)) + 1 + (n-4)(n-3)/2\n#The index of the number n - 5 is S(n-5) * (n(n+1)/2) - S(n-6) * (n(n+1)/2) = floor(log10(n-5)) + 1 + (n-5)(n-4)/2\n#The index of the number n - 6 is S(n-6) * (n(n+1)/2) - S(n-7) * (n(n+1)/2) = floor(log10(n-6)) + 1 + (n-6)(n-5)/2\n#The index of the number n - 7 is S(n-7) * (n(n+1)/2) - S(n-8) * (n(n+1)/2) = floor(log10(n-7)) + 1 + (n-7)(n-6)/2\n#The index of the number n - 8 is S(n-8) * (n(n+1)/2) - S(n-9) * (n(n+1)/2) = floor(log10(n-8)) + 1 + (n-8)(n-7)/2\n#The index of the number n - 9 is S(n-9) * (n(n+1)/2) - S(n-10) * (n(n+1)/2) = floor(log10(n-9)) + 1 + (n-9)(n-8)/2\n#The index of the number n - 10 is S(n-10) * (n(n+1)/2) - S(n-11) * (n(n+1)/2) = floor(log10(n-10)) + 1 + (n-10)(n-9)/2\n#The index of the number n - 11 is S(n-11) * (n(n+1)/2) - S(n-12) * (n(n+1)/2) = floor(log10(n-11)) + 1 + (n-11)(n-10)/2\n#The index of the number n - 12 is S(n-12) * (n(n+1)/2) - S(n-13) * (n(n+1)/2) = floor(log10(n-12)) + 1 + (n-12)(n-11)/2\n#The index of the number n - 13 is S(n-13) * (n(n+1)/2) - S(n-14) * (n(n+1)/2) = floor(log10(n-13)) + 1 + (n-13)(n-12)/2\n#The index of the number n - 14 is S(n-14) * (n(n+1)/2) - S(n-15) * (n(n+1)/2) = floor(log10(n-14)) + 1 + (n-14)(n-13)/2\n#The index of the number n - 15 is S(n-15) * (n(n+1)/2) - S(n-16) * (n(n+1)/2) = floor(log10(n-15)) + 1 + (n-15)(n-14)/2\n#The index of the number n - 16 is S(n-16) * (n(n+1)/2) - S(n-17) * (n(n+1)/2) = floor(log10(n-16)) + 1 + (n-16)(n-15)/2\n#The index of the number n - 17 is S(n-17) * (n(n+1)/2) - S(n-18) * (n(n+1)/2) = floor(log10(n-17)) + 1 + (n-17)(n-16)/2\n#The index of the number n - 18 is S(n-18) * (n(n+1)/2) - S(n-19) * (n(n+1)/2) = floor(log10(n-18)) + 1 + (n-18)(n-17)/2\n#The index of the number n - 19 is S(n-19) * (n(n+1)/2) - S(n-20) * (n(n+1)/2) = floor(log10(n-19)) + 1 + (n-19)(n-18)/2\n#The index of the number n - 20 is S(n-20) * (n(n+1)/2) - S(n-21) * (n(n+1)/2) = floor(log10(n-20)) + 1 + (n-20)(n-19)/2\n#The index of the number n - 21 is S(n-21) * (n(n+1)/2) - S(n-22) * (n(n+1)/2) = floor(log10(n-21)) + 1 + (n-21)(n-20)/2\n#The index of the number n - 22 is S(n-22) * (n(n+1)/2) - S(n-23) * (n(n+1)/2) = floor(log10(n-22)) + 1 + (n-22)(n-21)/2\n#The index of the number n - 23 is S(n-23) * (n(n+1)/2) - S(n-24) * (n(n+1)/2) = floor(log10(n-23)) + 1 + (n-23)(n-22)/2\n#The index of the number n - 24 is S(n-24) * (n(n+1)/2) - S(n-25) * (n(n+1)/2) = floor(log10(n-24)) + 1 + (n-24)(n-23)/2\n#The index of the number n - 25 is S(n-25) * (n(n+1)/2) - S(n-26) * (n(n+1)/2) = floor(log10(n-25)) + 1 + (n-25)(n-24)/2\n#The index of the number n - 26 is S(n-26) * (n(n+1)/2) - S(n-27) * (n(n+1)/2) = floor(log10(n-26)) + 1 + (n-26)(n-25)/2\n#The index of the number n - 27 is S(n-27) * (n(n+1)/2) - S(n-28) * (n(n+1)/2) = floor(log10(n-27)) + 1 + (n-27)(n-26)/2\n#The index of the number n - 28 is S(n-28) * (n(n+1)/2) - S(n-29) * (n(n+1)/2) = floor(log10(n-28)) + 1 + (n-28)(n-27)/2\n#The index of the number n - 29 is S(n-29) * (n(n+1)/2) - S(n-30) * (n(n+1)/2) = floor(log10(n-29)) + 1 + (n-29)(n-28)/2\n#The index of the number n - 30 is S(n-30) * (n(n+1)/2) - S(n-31) * (n(n+1)/2) = floor(log10(n-30)) + 1 + (n-30)(n-29)/2\n#The index of the number n - 31 is S(n-31) * (n(n+1)/2) - S(n-32) * (n(n+1)/2) = floor(log10(n-31)) + 1 + (n-31)(n-30)/2\n#The index of the number n - 32 is S(n-32) * (n(n+1)/2) - S(n-33) * (n(n+1)/2) = floor(log10(n-32)) + 1 + (n-32)(n-31)/2\n#The index of the number n - 33 is S(n-33) * (n(n+1)/2) - S(n-34) * (n(n+1)/2) = floor(log10(n-33)) + 1 + (n-33)(n-32)/2\n#The index of the number n - 34 is S(n-34) * (n(n+1)/2) - S(n-35) * (n(n+1)/2) = floor(log10(n-34)) + 1 + (n-34)(n-33)/2\n#The index of the number n - 35 is S(n-35) * (n(n+1)/2) - S(n-36) * (n(n+1)/2) = floor(log10(n-35)) + 1 + (n-35)(n-34)/2\n#The index of the number n - 36 is S(n-36) * (n(n+1)/2) - S(n-37) * (n(n+1)/2) = floor(log10(n-36)) + 1 + (n-36)(n-35)/2\n#The index of the number n - 37 is S(n-37) * (n(n+1)/2) - S(n-38) * (n(n+1)/2) = floor(log10(n-37)) + 1 + (n-37)(n-36)/2\n#The index of the number n - 38 is S(n-38) * (n(n+1)/2) - S(n-39) * (n(n+1)/2) = floor(log10(n-38)) + 1 + (n-38)(n-37)/2\n#The index of the number n - 39 is S(n-39) * (n(n+1)/2) - S(n-40) * (n(n+1)/2) = floor(log10(n-39)) + 1 + (n-39)(n-38)/2\n#The index of the number n - 40 is S(n-40) * (n(n+1)/2) - S(n-41) * (n(n+1)/2) = floor(log10(n-40)) + 1 + (n-40)(n-39)/2\n#The index of the number n - 41 is S(n-41) * (n(n+1)/2) - S(n-42) * (n(n+1)/2) = floor(log10(n-41)) + 1 + (n-41)(n-40)/2\n#The index of the number n - 42 is S(n-42) * (n(n+1)/2) - S(n-43) * (n(n+1)/2) = floor(log10(n-42)) + 1 + (n-42)(n-41)/2\n#The index of the number n - 43 is S(n-43) * (n(n+1)/2) - S(n-44) * (n(n+1)/2) = floor(log10(n-43)) + 1 + (n-43)(n-42)/2\n#The index of the number n - 44 is S(n-44) * (n(n+1)/2) - S(n-45) * (n(n+1)/2) = floor(log10(n-44)) + 1 + (n-44)(n-43)/2\n#The index of the number n - 45 is S(n-45) * (n(n+1)/2) - S(n-46) * (n(n+1)/2) = floor(log10(n-45)) + 1 + (n-45)(n-44)/2\n#The index of the number n - 46 is S(n-46) * (n(n+1)/2) - S(n-47) * (n(n+1)/2) = floor(log10(n-46)) + 1 + (n-46)(n-45)/2\n#The index of the number n - 47 is S(n-47) * (n(n+1)/2) - S(n-48) * (n(n+1)/2) = floor(log10(n-47)) + 1 + (n-47)(n-46)/2\n#The index of the number n - 48 is S(n-48) * (n(n+1)/2) - S(n-49) * (n(n+1)/2) = floor(log10(n-48)) + 1 + (n-48)(n-47)/2\n#The index of the number n - 49 is S(n-49) * (n(n+1)/2) - S(n-50) * (n(n+1)/2) = floor(log10(n-49)) + 1 + (n-49)(n-48)/2\n#The index of the number n - 50 is S(n-50) * (n(n+1)/2) - S(n-51) * (n(n+1)/2) = floor(log10(n-50)) + 1 + (n-50)(n-49)/2\n#The index of the number n - 51 is S(n-51) * (n(n+1)/2) - S(n-52) * (n(n+1)/2) = floor(log10(n-51)) + 1 + (n-51)(n-50)/2\n#The index of the number n - 52 is S(n-52) * (n(n+1)/2) - S(n-53) * (n(n+1)/2) = floor(log10(n-52)) + 1 + (n-52)(n-51)/2\n#The index of the number n - 53 is S(n-53) * (n(n+1)/2) - S(n-54) * (n(n+1)/2) = floor(log10(n-53)) + 1 + (n-53)(n-52)/2\n#The index of the number n - 54 is S(n-54) * (n(n+1)/2) - S(n-55) * (n(n+1)/2) = floor(log10(n-54)) + 1 + (n-54)(n-53)/2\n#The index of the number n - 55 is S(n-55) * (n(n+1)/2) - S(n-56) * (n(n+1)/2) = floor(log10(n-55)) + 1 + (n-55)(n-54)/2\n#The index of the number n - 56 is S(n-56) * (n(n+1)/2) - S(n-57) * (n(n+1)/2) = floor(log10(n-56)) + 1 + (n-56)(n-55)/2\n#The index of the number n - 57 is S(n-57) * (n(n+1)/2) - S(n-58) * (n(n+1)/2) = floor(log10(n-57)) + 1 + (n-57)(n-56)/2\n#The index of the number n - 58 is S(n-58) * (n(n+1)/2) - S(n-59) * (n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        n = 1\n        while k > n:\n            k -= n\n            n += 1\n        print(str(k)[-1])\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        print(solve(k))\n\n\ndef solve(k):\n    # Find the block number\n    block = 1\n    while k - block > 0:\n        k -= block\n        block += 1\n\n    # Find the digit in the block\n    return str((block - 1) * block // 2 + k)[-1]\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    else:\n        # get kth digit by block\n        block_size = math.floor(math.sqrt(2*k))\n        if block_size * (block_size + 1) / 2 < k:\n            block_size += 1\n        block_start = (block_size - 1) * block_size / 2 + 1\n        block_end = block_size * block_size / 2\n        digit_index = k - block_start\n        digit = math.floor(digit_index / block_size) + 1\n        if digit_index % block_size == 0:\n            digit -= 1\n        return int(digit)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649875165,
  "id": "cmpl-4wcBhA0bqM8scb40095JAk6IhcO5V",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 18:41:23.624097 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    else:\n        n = int(math.log10(k)) + 1\n        first_number = 10 ** (n - 1)\n        # print(n, first_number)\n        first_number_start = (first_number - 1) * n + 1\n        # print(first_number_start)\n        if k >= first_number_start:\n            diff = k - first_number_start\n            return int(str(first_number + diff // n)[diff % n])\n        else:\n            return get_digit(k - (first_number - 1) * n)\n\nq = int(input())\nfor i in range(q):\n    k = int(input())\n    print(get_digit(k))"
}
2022-04-13 18:41:23.624140 REASON stop
2022-04-13 18:41:23.624585 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    i = 1\n    while True:\n        l = i * (i + 1) // 2\n        if k <= l:\n            break\n        i += 1\n    l1 = (i - 1) * i // 2\n    d = k - l1\n    return int(str(i)[d - 1])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline().strip())\n    for _ in range(n):\n        k = int(sys.stdin.readline().strip())\n        print(get_digit(k))"
}
2022-04-13 18:41:23.624705 REASON stop
2022-04-13 18:41:23.625090 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": ""
}
2022-04-13 18:41:23.625132 REASON stop
2022-04-13 18:41:23.643763 3 {
  "finish_reason": "length",
  "index": 3,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\n#The idea is to find the number of digits in the number that is at the index k.\n#The number of digits in the number n is floor(log10(n)) + 1.\n#The number of digits in the sequence up to the number n is S(n) = floor(log10(n)) + 1 + S(n-1)\n#The sum of all the numbers up to n is n(n+1)/2.\n#The sum of all the digits up to n is S(n) * (n(n+1)/2)\n#The sum of all the digits up to n - 1 is S(n-1) * (n(n+1)/2)\n#S(n) - S(n-1) = floor(log10(n)) + 1\n#The index of the number n is S(n) * (n(n+1)/2) - S(n-1) * (n(n+1)/2) = floor(log10(n)) + 1 + n(n+1)/2\n#The index of the number n - 1 is S(n-1) * (n(n+1)/2) - S(n-2) * (n(n+1)/2) = floor(log10(n-1)) + 1 + (n-1)(n)/2\n#The index of the number n - 2 is S(n-2) * (n(n+1)/2) - S(n-3) * (n(n+1)/2) = floor(log10(n-2)) + 1 + (n-2)(n-1)/2\n#The index of the number n - 3 is S(n-3) * (n(n+1)/2) - S(n-4) * (n(n+1)/2) = floor(log10(n-3)) + 1 + (n-3)(n-2)/2\n#The index of the number n - 4 is S(n-4) * (n(n+1)/2) - S(n-5) * (n(n+1)/2) = floor(log10(n-4)) + 1 + (n-4)(n-3)/2\n#The index of the number n - 5 is S(n-5) * (n(n+1)/2) - S(n-6) * (n(n+1)/2) = floor(log10(n-5)) + 1 + (n-5)(n-4)/2\n#The index of the number n - 6 is S(n-6) * (n(n+1)/2) - S(n-7) * (n(n+1)/2) = floor(log10(n-6)) + 1 + (n-6)(n-5)/2\n#The index of the number n - 7 is S(n-7) * (n(n+1)/2) - S(n-8) * (n(n+1)/2) = floor(log10(n-7)) + 1 + (n-7)(n-6)/2\n#The index of the number n - 8 is S(n-8) * (n(n+1)/2) - S(n-9) * (n(n+1)/2) = floor(log10(n-8)) + 1 + (n-8)(n-7)/2\n#The index of the number n - 9 is S(n-9) * (n(n+1)/2) - S(n-10) * (n(n+1)/2) = floor(log10(n-9)) + 1 + (n-9)(n-8)/2\n#The index of the number n - 10 is S(n-10) * (n(n+1)/2) - S(n-11) * (n(n+1)/2) = floor(log10(n-10)) + 1 + (n-10)(n-9)/2\n#The index of the number n - 11 is S(n-11) * (n(n+1)/2) - S(n-12) * (n(n+1)/2) = floor(log10(n-11)) + 1 + (n-11)(n-10)/2\n#The index of the number n - 12 is S(n-12) * (n(n+1)/2) - S(n-13) * (n(n+1)/2) = floor(log10(n-12)) + 1 + (n-12)(n-11)/2\n#The index of the number n - 13 is S(n-13) * (n(n+1)/2) - S(n-14) * (n(n+1)/2) = floor(log10(n-13)) + 1 + (n-13)(n-12)/2\n#The index of the number n - 14 is S(n-14) * (n(n+1)/2) - S(n-15) * (n(n+1)/2) = floor(log10(n-14)) + 1 + (n-14)(n-13)/2\n#The index of the number n - 15 is S(n-15) * (n(n+1)/2) - S(n-16) * (n(n+1)/2) = floor(log10(n-15)) + 1 + (n-15)(n-14)/2\n#The index of the number n - 16 is S(n-16) * (n(n+1)/2) - S(n-17) * (n(n+1)/2) = floor(log10(n-16)) + 1 + (n-16)(n-15)/2\n#The index of the number n - 17 is S(n-17) * (n(n+1)/2) - S(n-18) * (n(n+1)/2) = floor(log10(n-17)) + 1 + (n-17)(n-16)/2\n#The index of the number n - 18 is S(n-18) * (n(n+1)/2) - S(n-19) * (n(n+1)/2) = floor(log10(n-18)) + 1 + (n-18)(n-17)/2\n#The index of the number n - 19 is S(n-19) * (n(n+1)/2) - S(n-20) * (n(n+1)/2) = floor(log10(n-19)) + 1 + (n-19)(n-18)/2\n#The index of the number n - 20 is S(n-20) * (n(n+1)/2) - S(n-21) * (n(n+1)/2) = floor(log10(n-20)) + 1 + (n-20)(n-19)/2\n#The index of the number n - 21 is S(n-21) * (n(n+1)/2) - S(n-22) * (n(n+1)/2) = floor(log10(n-21)) + 1 + (n-21)(n-20)/2\n#The index of the number n - 22 is S(n-22) * (n(n+1)/2) - S(n-23) * (n(n+1)/2) = floor(log10(n-22)) + 1 + (n-22)(n-21)/2\n#The index of the number n - 23 is S(n-23) * (n(n+1)/2) - S(n-24) * (n(n+1)/2) = floor(log10(n-23)) + 1 + (n-23)(n-22)/2\n#The index of the number n - 24 is S(n-24) * (n(n+1)/2) - S(n-25) * (n(n+1)/2) = floor(log10(n-24)) + 1 + (n-24)(n-23)/2\n#The index of the number n - 25 is S(n-25) * (n(n+1)/2) - S(n-26) * (n(n+1)/2) = floor(log10(n-25)) + 1 + (n-25)(n-24)/2\n#The index of the number n - 26 is S(n-26) * (n(n+1)/2) - S(n-27) * (n(n+1)/2) = floor(log10(n-26)) + 1 + (n-26)(n-25)/2\n#The index of the number n - 27 is S(n-27) * (n(n+1)/2) - S(n-28) * (n(n+1)/2) = floor(log10(n-27)) + 1 + (n-27)(n-26)/2\n#The index of the number n - 28 is S(n-28) * (n(n+1)/2) - S(n-29) * (n(n+1)/2) = floor(log10(n-28)) + 1 + (n-28)(n-27)/2\n#The index of the number n - 29 is S(n-29) * (n(n+1)/2) - S(n-30) * (n(n+1)/2) = floor(log10(n-29)) + 1 + (n-29)(n-28)/2\n#The index of the number n - 30 is S(n-30) * (n(n+1)/2) - S(n-31) * (n(n+1)/2) = floor(log10(n-30)) + 1 + (n-30)(n-29)/2\n#The index of the number n - 31 is S(n-31) * (n(n+1)/2) - S(n-32) * (n(n+1)/2) = floor(log10(n-31)) + 1 + (n-31)(n-30)/2\n#The index of the number n - 32 is S(n-32) * (n(n+1)/2) - S(n-33) * (n(n+1)/2) = floor(log10(n-32)) + 1 + (n-32)(n-31)/2\n#The index of the number n - 33 is S(n-33) * (n(n+1)/2) - S(n-34) * (n(n+1)/2) = floor(log10(n-33)) + 1 + (n-33)(n-32)/2\n#The index of the number n - 34 is S(n-34) * (n(n+1)/2) - S(n-35) * (n(n+1)/2) = floor(log10(n-34)) + 1 + (n-34)(n-33)/2\n#The index of the number n - 35 is S(n-35) * (n(n+1)/2) - S(n-36) * (n(n+1)/2) = floor(log10(n-35)) + 1 + (n-35)(n-34)/2\n#The index of the number n - 36 is S(n-36) * (n(n+1)/2) - S(n-37) * (n(n+1)/2) = floor(log10(n-36)) + 1 + (n-36)(n-35)/2\n#The index of the number n - 37 is S(n-37) * (n(n+1)/2) - S(n-38) * (n(n+1)/2) = floor(log10(n-37)) + 1 + (n-37)(n-36)/2\n#The index of the number n - 38 is S(n-38) * (n(n+1)/2) - S(n-39) * (n(n+1)/2) = floor(log10(n-38)) + 1 + (n-38)(n-37)/2\n#The index of the number n - 39 is S(n-39) * (n(n+1)/2) - S(n-40) * (n(n+1)/2) = floor(log10(n-39)) + 1 + (n-39)(n-38)/2\n#The index of the number n - 40 is S(n-40) * (n(n+1)/2) - S(n-41) * (n(n+1)/2) = floor(log10(n-40)) + 1 + (n-40)(n-39)/2\n#The index of the number n - 41 is S(n-41) * (n(n+1)/2) - S(n-42) * (n(n+1)/2) = floor(log10(n-41)) + 1 + (n-41)(n-40)/2\n#The index of the number n - 42 is S(n-42) * (n(n+1)/2) - S(n-43) * (n(n+1)/2) = floor(log10(n-42)) + 1 + (n-42)(n-41)/2\n#The index of the number n - 43 is S(n-43) * (n(n+1)/2) - S(n-44) * (n(n+1)/2) = floor(log10(n-43)) + 1 + (n-43)(n-42)/2\n#The index of the number n - 44 is S(n-44) * (n(n+1)/2) - S(n-45) * (n(n+1)/2) = floor(log10(n-44)) + 1 + (n-44)(n-43)/2\n#The index of the number n - 45 is S(n-45) * (n(n+1)/2) - S(n-46) * (n(n+1)/2) = floor(log10(n-45)) + 1 + (n-45)(n-44)/2\n#The index of the number n - 46 is S(n-46) * (n(n+1)/2) - S(n-47) * (n(n+1)/2) = floor(log10(n-46)) + 1 + (n-46)(n-45)/2\n#The index of the number n - 47 is S(n-47) * (n(n+1)/2) - S(n-48) * (n(n+1)/2) = floor(log10(n-47)) + 1 + (n-47)(n-46)/2\n#The index of the number n - 48 is S(n-48) * (n(n+1)/2) - S(n-49) * (n(n+1)/2) = floor(log10(n-48)) + 1 + (n-48)(n-47)/2\n#The index of the number n - 49 is S(n-49) * (n(n+1)/2) - S(n-50) * (n(n+1)/2) = floor(log10(n-49)) + 1 + (n-49)(n-48)/2\n#The index of the number n - 50 is S(n-50) * (n(n+1)/2) - S(n-51) * (n(n+1)/2) = floor(log10(n-50)) + 1 + (n-50)(n-49)/2\n#The index of the number n - 51 is S(n-51) * (n(n+1)/2) - S(n-52) * (n(n+1)/2) = floor(log10(n-51)) + 1 + (n-51)(n-50)/2\n#The index of the number n - 52 is S(n-52) * (n(n+1)/2) - S(n-53) * (n(n+1)/2) = floor(log10(n-52)) + 1 + (n-52)(n-51)/2\n#The index of the number n - 53 is S(n-53) * (n(n+1)/2) - S(n-54) * (n(n+1)/2) = floor(log10(n-53)) + 1 + (n-53)(n-52)/2\n#The index of the number n - 54 is S(n-54) * (n(n+1)/2) - S(n-55) * (n(n+1)/2) = floor(log10(n-54)) + 1 + (n-54)(n-53)/2\n#The index of the number n - 55 is S(n-55) * (n(n+1)/2) - S(n-56) * (n(n+1)/2) = floor(log10(n-55)) + 1 + (n-55)(n-54)/2\n#The index of the number n - 56 is S(n-56) * (n(n+1)/2) - S(n-57) * (n(n+1)/2) = floor(log10(n-56)) + 1 + (n-56)(n-55)/2\n#The index of the number n - 57 is S(n-57) * (n(n+1)/2) - S(n-58) * (n(n+1)/2) = floor(log10(n-57)) + 1 + (n-57)(n-56)/2\n#The index of the number n - 58 is S(n-58) * (n(n+1)/2) - S(n-59) * (n"
}
2022-04-13 18:41:23.643922 REASON length
2022-04-13 18:41:23.643931 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        n = 1\n        while k > n:\n            k -= n\n            n += 1\n        print(str(k)[-1])\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:41:23.643972 REASON stop
2022-04-13 18:41:23.674391 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k = int(sys.stdin.readline())\n        print(solve(k))\n\n\ndef solve(k):\n    # Find the block number\n    block = 1\n    while k - block > 0:\n        k -= block\n        block += 1\n\n    # Find the digit in the block\n    return str((block - 1) * block // 2 + k)[-1]\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 18:41:23.674487 REASON stop
2022-04-13 18:41:23.676918 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(get_digit(k))\n\ndef get_digit(k):\n    if k == 1:\n        return 1\n    else:\n        # get kth digit by block\n        block_size = math.floor(math.sqrt(2*k))\n        if block_size * (block_size + 1) / 2 < k:\n            block_size += 1\n        block_start = (block_size - 1) * block_size / 2 + 1\n        block_end = block_size * block_size / 2\n        digit_index = k - block_start\n        digit = math.floor(digit_index / block_size) + 1\n        if digit_index % block_size == 0:\n            digit -= 1\n        return int(digit)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 18:41:23.677003 REASON stop
