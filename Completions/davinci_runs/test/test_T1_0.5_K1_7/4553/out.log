2022-04-13 21:47:05.326042 """
The postal code in Atcoder Kingdom is A+B+1 characters long, its (A+1)-th character is a hyphen -, and the other characters are digits from 0 through 9.
You are given a string S. Determine whether it follows the postal code format in Atcoder Kingdom.

-----Constraints-----
 - 1≤A,B≤5
 - |S|=A+B+1
 - S consists of - and digits from 0 through 9.

-----Input-----
Input is given from Standard Input in the following format:
A B
S

-----Output-----
Print Yes if S follows the postal code format in AtCoder Kingdom; print No otherwise.

-----Sample Input-----
3 4
269-6650

-----Sample Output-----
Yes

The (A+1)-th character of S is -, and the other characters are digits from 0 through 9, so it follows the format.
"""
2022-04-13 21:47:05.326051 --------------------------
2022-04-13 21:47:21.201108 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\"\"\"\nA,B = map(int, input().split())\nS = input()\n\nif S[A] == \"-\" and S[:A].isdecimal() and S[A+1:].isdecimal():\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\"\"\"\n\n\"\"\"\n-----Additional Explanation-----\n\nThe isdecimal() method returns True if all characters in a string are decimal characters. If not, it returns False.\n\n-----Reference-----\nhttps://www.w3schools.com/python/ref_string_isdecimal.asp\n\"\"\""
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nA, B = map(int, input().split())\nS = input()\n\nif S[A] != '-' or not S[:A].isdecimal() or not S[A+1:].isdecimal():\n    print('No')\nelse:\n    print('Yes')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\na, b = map(int, input().split())\ns = input()\n\nif s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# process input\nab = list(map(int, input().split()))\ns = input()\n\n# define functions\ndef is_valid_postal_code(ab, s):\n    \"\"\"\n    Return True if the postal code is valid, False otherwise.\n    \"\"\"\n    # check length and hyphen\n    if len(s) != (ab[0] + ab[1] + 1) or s[ab[0]] != \"-\":\n        return False\n    # check digits\n    for i in range(ab[0] + ab[1] + 1):\n        if s[i] == \"-\":\n            continue\n        if s[i] not in \"0123456789\":\n            return False\n    return True\n\n# main\nif is_valid_postal_code(ab, s):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, input().split())\n    s = input()\n    if len(s) == a + b + 1 and s[a] == \"-\" and s[:a].isdigit() and s[a+1:].isdigit():\n        print(\"Yes\")\n        sys.exit()\n    print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nA, B = map(int, input().split())\nS = input()\n\nif S[A] == '-' and S[:A].isdigit() and S[A+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ninput_str = input()\nA, B = map(int, input_str.split())\nS = input()\n\nif len(S) == A + B + 1 and S[A] == '-' and S[:A].isdigit() and S[A+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
    }
  ],
  "created": 1649886425,
  "id": "cmpl-4wf7Jvwue9eAcfIv6VSB3TiTHOyvz",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:47:21.201461 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\"\"\"\nA,B = map(int, input().split())\nS = input()\n\nif S[A] == \"-\" and S[:A].isdecimal() and S[A+1:].isdecimal():\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\"\"\"\n\n\"\"\"\n-----Additional Explanation-----\n\nThe isdecimal() method returns True if all characters in a string are decimal characters. If not, it returns False.\n\n-----Reference-----\nhttps://www.w3schools.com/python/ref_string_isdecimal.asp\n\"\"\""
}
2022-04-13 21:47:21.201511 REASON stop
2022-04-13 21:47:21.201929 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nA, B = map(int, input().split())\nS = input()\n\nif S[A] != '-' or not S[:A].isdecimal() or not S[A+1:].isdecimal():\n    print('No')\nelse:\n    print('Yes')"
}
2022-04-13 21:47:21.202038 REASON stop
2022-04-13 21:47:21.202457 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\na, b = map(int, input().split())\ns = input()\n\nif s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-13 21:47:21.202505 REASON stop
2022-04-13 21:47:21.215090 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# process input\nab = list(map(int, input().split()))\ns = input()\n\n# define functions\ndef is_valid_postal_code(ab, s):\n    \"\"\"\n    Return True if the postal code is valid, False otherwise.\n    \"\"\"\n    # check length and hyphen\n    if len(s) != (ab[0] + ab[1] + 1) or s[ab[0]] != \"-\":\n        return False\n    # check digits\n    for i in range(ab[0] + ab[1] + 1):\n        if s[i] == \"-\":\n            continue\n        if s[i] not in \"0123456789\":\n            return False\n    return True\n\n# main\nif is_valid_postal_code(ab, s):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 21:47:21.215217 REASON stop
2022-04-13 21:47:21.226242 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b = map(int, input().split())\n    s = input()\n    if len(s) == a + b + 1 and s[a] == \"-\" and s[:a].isdigit() and s[a+1:].isdigit():\n        print(\"Yes\")\n        sys.exit()\n    print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:47:21.226343 REASON stop
2022-04-13 21:47:21.227118 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nA, B = map(int, input().split())\nS = input()\n\nif S[A] == '-' and S[:A].isdigit() and S[A+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-13 21:47:21.227195 REASON stop
2022-04-13 21:47:21.228021 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ninput_str = input()\nA, B = map(int, input_str.split())\nS = input()\n\nif len(S) == A + B + 1 and S[A] == '-' and S[:A].isdigit() and S[A+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-13 21:47:21.228101 REASON stop
