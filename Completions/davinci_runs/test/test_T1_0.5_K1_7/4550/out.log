2022-04-13 21:44:29.049992 """
Two students of AtCoder Kindergarten are fighting over candy packs.
There are three candy packs, each of which contains a, b, and c candies, respectively.
Teacher Evi is trying to distribute the packs between the two students so that each student gets the same number of candies. Determine whether it is possible.
Note that Evi cannot take candies out of the packs, and the whole contents of each pack must be given to one of the students.

-----Constraints-----
 - 1 ≦ a, b, c ≦ 100

-----Input-----
The input is given from Standard Input in the following format:
a b c

-----Output-----
If it is possible to distribute the packs so that each student gets the same number of candies, print Yes. Otherwise, print No.

-----Sample Input-----
10 30 20

-----Sample Output-----
Yes

Give the pack with 30 candies to one student, and give the two packs with 10 and 20 candies to the other. Then, each gets 30 candies.
"""
2022-04-13 21:44:29.050004 --------------------------
2022-04-13 21:44:48.500206 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    candy_packs = list(map(int, input().split()))\n    candy_packs.sort()\n    # If the sum of the smallest and second-smallest packs is greater than the largest pack, then it is possible to\n    # give the largest pack to one student and the remaining two packs to the other student.\n    if candy_packs[0] + candy_packs[1] > candy_packs[2]:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ncandy = input().split()\ncandy = [int(x) for x in candy]\n\nif (candy[0] + candy[1]) == candy[2] or (candy[0] + candy[2]) == candy[1] or (candy[1] + candy[2]) == candy[0]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Read the input\na, b, c = map(int, sys.stdin.readline().split(' '))\n\n# Check if it's possible\nif a + b + c % 2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, raw_input().split())\n    if a + b + c == 0:\n        print \"No\"\n        sys.exit()\n    if a + b + c % 2 == 0:\n        print \"Yes\"\n    else:\n        print \"No\"\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(\"Yes\" if a + b == c or b + c == a or c + a == b else \"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    candy_packs = input().split()\n    candy_packs = [int(candy_packs[i]) for i in range(0, len(candy_packs))]\n    if candy_packs[0] == candy_packs[1] == candy_packs[2]:\n        print(\"Yes\")\n        return\n    if candy_packs[0] == candy_packs[1] or candy_packs[1] == candy_packs[2] or candy_packs[2] == candy_packs[0]:\n        print(\"Yes\")\n        return\n    print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\na, b, c = map(int, input().split())\n\nif (a+b+c) % 2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    }
  ],
  "created": 1649886269,
  "id": "cmpl-4wf4nkOQrEFTC2mmm5crxaAj5S7WQ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:44:48.500502 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    candy_packs = list(map(int, input().split()))\n    candy_packs.sort()\n    # If the sum of the smallest and second-smallest packs is greater than the largest pack, then it is possible to\n    # give the largest pack to one student and the remaining two packs to the other student.\n    if candy_packs[0] + candy_packs[1] > candy_packs[2]:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:44:48.500534 REASON stop
2022-04-13 21:44:48.500949 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ncandy = input().split()\ncandy = [int(x) for x in candy]\n\nif (candy[0] + candy[1]) == candy[2] or (candy[0] + candy[2]) == candy[1] or (candy[1] + candy[2]) == candy[0]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 21:44:48.501057 REASON stop
2022-04-13 21:44:48.501493 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Read the input\na, b, c = map(int, sys.stdin.readline().split(' '))\n\n# Check if it's possible\nif a + b + c % 2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 21:44:48.501547 REASON stop
2022-04-13 21:44:48.528341 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, raw_input().split())\n    if a + b + c == 0:\n        print \"No\"\n        sys.exit()\n    if a + b + c % 2 == 0:\n        print \"Yes\"\n    else:\n        print \"No\"\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:44:48.528438 REASON stop
2022-04-13 21:44:48.529282 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(\"Yes\" if a + b == c or b + c == a or c + a == b else \"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 21:44:48.529375 REASON stop
2022-04-13 21:44:48.540808 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    candy_packs = input().split()\n    candy_packs = [int(candy_packs[i]) for i in range(0, len(candy_packs))]\n    if candy_packs[0] == candy_packs[1] == candy_packs[2]:\n        print(\"Yes\")\n        return\n    if candy_packs[0] == candy_packs[1] or candy_packs[1] == candy_packs[2] or candy_packs[2] == candy_packs[0]:\n        print(\"Yes\")\n        return\n    print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 21:44:48.540873 REASON stop
2022-04-13 21:44:48.541827 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\na, b, c = map(int, input().split())\n\nif (a+b+c) % 2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"
}
2022-04-13 21:44:48.541890 REASON stop
