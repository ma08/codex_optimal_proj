2022-04-13 20:59:13.846178 """
A positive (strictly greater than zero) integer is called round if it is of the form d00...0. In other words, a positive integer is round if all its digits except the leftmost (most significant) are equal to zero. In particular, all numbers from $1$ to $9$ (inclusive) are round.

For example, the following numbers are round: $4000$, $1$, $9$, $800$, $90$. The following numbers are not round: $110$, $707$, $222$, $1001$.

You are given a positive integer $n$ ($1 \le n \le 10^4$). Represent the number $n$ as a sum of round numbers using the minimum number of summands (addends). In other words, you need to represent the given number $n$ as a sum of the least number of terms, each of which is a round number.


-----Input-----

The first line contains an integer $t$ ($1 \le t \le 10^4$) — the number of test cases in the input. Then $t$ test cases follow.

Each test case is a line containing an integer $n$ ($1 \le n \le 10^4$).


-----Output-----

Print $t$ answers to the test cases. Each answer must begin with an integer $k$ — the minimum number of summands. Next, $k$ terms must follow, each of which is a round number, and their sum is $n$. The terms can be printed in any order. If there are several answers, print any of them.


-----Example-----
Input
5
5009
7
9876
10000
10

Output
2
5000 9
1
7 
4
800 70 6 9000 
1
10000 
1
10
"""
2022-04-13 20:59:13.846187 --------------------------
2022-04-13 20:59:30.141575 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ans = []\n        while n > 0:\n            p = 10\n            while p <= n:\n                p *= 10\n            p //= 10\n            ans.append(p)\n            n -= p\n        print(len(ans))\n        print(*ans)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 0\n    while n > 0:\n        if n % 10 == 0:\n            n = int(n / 10)\n            k += 1\n        else:\n            n = n - 1\n            k += 1\n    print(k)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(len(str(n)))\n    for j in range(len(str(n))):\n        print(10**j, end=\" \")"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        k = 0\n        while n > 0:\n            n -= 10 ** int(math.log10(n))\n            k += 1\n        print(k)\n        for i in range(k):\n            print(10 ** i, end=\" \")\n        print(\"\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\tn = int(input())\n\t\ts = str(n)\n\t\tprint(len(s) - 1)\n\t\tfor i in range(len(s) - 1):\n\t\t\tprint(int(s[i]) * 10**(len(s) - i - 1), end = ' ')\n\t\tprint(s[-1])\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef is_round(n):\n    n = str(n)\n    if len(n) == 1:\n        return True\n    for i in range(1, len(n)):\n        if n[i] != '0':\n            return False\n    return True\n\n\ndef round_numbers(n):\n    if is_round(n):\n        return [n]\n    else:\n        for i in range(1, len(str(n))):\n            if is_round(int(str(n)[:i])):\n                return [int(str(n)[:i])] + round_numbers(int(str(n)[i:]))\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(len(round_numbers(n)))\n        print(*round_numbers(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ans = []\n        while n > 0:\n            if n % 10 == 0:\n                ans.append(n)\n                n = 0\n            else:\n                n -= 1\n        print(len(ans))\n        print(*ans)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649883553,
  "id": "cmpl-4weMzjINY3BgasAEXk8DiKtfjXUXd",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:59:30.141836 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ans = []\n        while n > 0:\n            p = 10\n            while p <= n:\n                p *= 10\n            p //= 10\n            ans.append(p)\n            n -= p\n        print(len(ans))\n        print(*ans)\n\nmain()"
}
2022-04-13 20:59:30.141874 REASON stop
2022-04-13 20:59:30.142317 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 0\n    while n > 0:\n        if n % 10 == 0:\n            n = int(n / 10)\n            k += 1\n        else:\n            n = n - 1\n            k += 1\n    print(k)"
}
2022-04-13 20:59:30.142430 REASON stop
2022-04-13 20:59:30.142792 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    print(len(str(n)))\n    for j in range(len(str(n))):\n        print(10**j, end=\" \")"
}
2022-04-13 20:59:30.142835 REASON stop
2022-04-13 20:59:30.168888 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        k = 0\n        while n > 0:\n            n -= 10 ** int(math.log10(n))\n            k += 1\n        print(k)\n        for i in range(k):\n            print(10 ** i, end=\" \")\n        print(\"\")\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 20:59:30.168981 REASON stop
2022-04-13 20:59:30.169661 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\tn = int(input())\n\t\ts = str(n)\n\t\tprint(len(s) - 1)\n\t\tfor i in range(len(s) - 1):\n\t\t\tprint(int(s[i]) * 10**(len(s) - i - 1), end = ' ')\n\t\tprint(s[-1])\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-13 20:59:30.169729 REASON stop
2022-04-13 20:59:30.183749 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef is_round(n):\n    n = str(n)\n    if len(n) == 1:\n        return True\n    for i in range(1, len(n)):\n        if n[i] != '0':\n            return False\n    return True\n\n\ndef round_numbers(n):\n    if is_round(n):\n        return [n]\n    else:\n        for i in range(1, len(str(n))):\n            if is_round(int(str(n)[:i])):\n                return [int(str(n)[:i])] + round_numbers(int(str(n)[i:]))\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(len(round_numbers(n)))\n        print(*round_numbers(n))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 20:59:30.183837 REASON stop
2022-04-13 20:59:30.184707 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ans = []\n        while n > 0:\n            if n % 10 == 0:\n                ans.append(n)\n                n = 0\n            else:\n                n -= 1\n        print(len(ans))\n        print(*ans)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 20:59:30.184779 REASON stop
