["for _ in range(int(input())):\n    n = int(input())\n    # arr = list(map(int, input().split()))\n    # n, m = map(int, input().split())\n    arr = []\n    x = 1\n    while n > 0:\n        if (n % 10):\n            arr.append((n % 10) * x)\n        n //= 10\n        x *= 10\n    print(len(arr))\n    print(*arr)", "t = int(input())\nfor _ in range(t):\n\ts = input()\n\tn = len(s)\n\tans = []\n\tfor i in range(n):\n\t\tif s[i] != \"0\":\n\t\t\tans.append(s[i] + \"0\" * (n-1-i))\n\tprint(len(ans))\n\tprint(*ans)", "for _ in range(int(input())):\n    s = input()\n\n    print(len(s.replace('0', '')))\n\n    for i, j in enumerate(s[::-1]):\n        if j != '0':\n            print(j + '0' * i, end=' ')\n\n    print()", "for t in range(int(input())):\n    st = input()\n    k = len(st) - 1\n    ans = []\n    for i in st:\n        if i != '0':\n            ans.append(i + '0' * k)\n        k -= 1\n    print(len(ans))\n    print(*ans)", "for _ in range(int(input())):\n    n = list(map(int, input()))\n    ans = []\n    for i in range(len(n)):\n        x = str(n[i]) + '0' * (len(n) - i - 1)\n        x = int(x)\n        if x != 0:\n            ans.append(x)\n    print(len(ans))\n    print(*ans)", "from math import *\n\nfor zz in range(int(input())):\n    n = int(input())\n    cp = 10\n    ans = []\n    while n > 0:\n        t = (n % cp) - n % (cp//10)\n        if t > 0:\n            ans.append(t)\n        n -= t\n        cp *= 10\n        #print(n, t, cp)\n\n    print(len(ans))\n    print(*ans)\n", "'''input\n5\n5009\n7\n9876\n10000\n10\n'''\ndef solve():\n\ts = input()\n\tln = len(s)\n\tans = []\n\tfor i in s:\n\t\tnum = int(i+(ln-1)*'0')\n\t\tif num!=0:\n\t\t\tans.append(num)\n\t\tln-=1\n\tprint(len(ans))\n\tfor i in ans:\n\t\tprint(i,end=\" \")\n\tprint()\n\treturn \nt = 1\nt = int(input())\nwhile t>0:\n\tt-=1\n\tsolve()", "\n\nfor _ in range(int(input())):\n\ts=input()\n\tprint(len(s)-s.count('0'))\n\n\tn=int(s)\n\tpw=1\n\twhile(n):\n\t\tif(n%10):\n\t\t\tprint(pw*(n%10),end=\" \")\n\t\tn//=10\n\t\tpw*=10\n\tprint()", "for _ in range(int(input())):\n    s=input()\n    n=len(s)-1\n    k=0\n    a=[]\n    for x in s:\n        if x!=\"0\":\n            k+=1\n            a.append(x+\"0\"*n)\n        n-=1\n    print(k)\n    print(*a)\n", "for _ in range(int(input())):\n\tn = int(input())\n\tl = []\n\ti = 0\n\twhile n:\n\t\tif n % 10:\n\t\t\tl.append((n % 10) * 10 ** i)\n\t\ti += 1\n\t\tn //= 10\n\tprint(len(l))\n\tprint(*l)\n", "import math,sys\nfrom sys import stdin, stdout\nfrom collections import Counter, defaultdict, deque\ninput = stdin.readline\nI = lambda:int(input())\nli = lambda:list(map(int,input().split()))\n\ndef case():\n    n=input().strip()\n    ans=[]\n    for i in range(len(n)):\n        if(n[i]!=\"0\"):\n            ans.append(n[i]+\"0\"*(len(n)-i-1))\n    print(len(ans))\n    print(*ans)\n\nfor _ in range(int(input())):\n    case()", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in str(n):\n        l.append(i)\n    ans = []\n    l = l[-1::-1]\n    cnt = 0\n    for i in l:\n        if i!='0':\n            ans.append(int(i)*pow(10,cnt))\n            cnt+=1\n        else:\n            cnt+=1\n    print(len(ans))\n    print(*ans)\n    # print(l) \n", "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nlargest, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(\" \".join(map(str, var))+end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    n = data()\n    answer = []\n    i = 0\n    while i < len(n):\n        if n[i] != '0':\n            answer.append(int(n[i]) * pow(10, len(n)-i-1))\n        i += 1\n    out(len(answer))\n    out(*answer)\n", "for nt in range(int(input())):\n\tn=int(input())\n\tif n>=1 and n<=9:\n\t\tprint (1)\n\t\tprint (n)\n\t\tcontinue\n\ts=str(n)\n\tcount=0\n\tans=[]\n\tfor i in range(len(s)):\n\t\tif s[i]!=\"0\":\n\t\t\tcount+=1\n\t\t\tans.append(s[i]+\"0\"*(len(s)-i-1))\n\tprint (count)\n\tprint (*ans)", "for t in range(int(input())):\n    n = input()\n    ans = [n[i] + \"0\" * (len(n) - i - 1) for i in range(len(n)) if n[i] != \"0\"]\n    print(len(ans))\n    print(\" \".join(ans))\n", "t = int(input())\nfor i in range(t):\n    n = input()\n    print(len(n) - n.count('0'))\n    for j in range(len(n)):\n        if n[j] != '0':\n            print(n[j], '0' * (len(n) - j - 1),end=' ', sep='')\n    print()", "t = int(input())\nfor y in range(t):\n\tn = input()\n\tans = []\n\tm = len(n)\n\tfor i in range(m):\n\t\tif n[i] != '0':\n\t\t\tans.append(int(n[i])*pow(10,m-i-1))\n\tprint(len(ans))\n\tprint(*ans)\n\n", "from sys import stdin, stdout  \n#input = stdin.readline\n#print = stdout.write\n\nfor _ in range(int(input())):\n    x = input()\n    res = []\n    for ind, i in enumerate(x):\n        if i != '0':\n            res.append(i + '0' * (len(x) - ind - 1))\n    print(len(res))\n    print(*res)\n", "t = int(input())\nfor tests in range(t):\n    n = input()\n    x = len(n)\n    print(x - n.count('0'))\n    for i in range(x):\n        if n[i] != '0':\n            print(n[i] + '0'* (x - i - 1), end =' ')\n    print()\n", "def sol():\n    x=int(input())\n    res=[]\n    pw=0\n    while x>0:\n        p=x%10\n        if p>0:\n            d=p*(10**pw)\n            res.append(d)\n        pw+=1\n        x//=10\n\n    print(len(res))\n    print(*res)\n\nfor n in range(int(input())):\n    sol()\n", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    ans = []\n    s = str(n)\n    l = len(s)\n    for i in range(l):\n        if s[-i-1] != '0':\n            ans.append(int(s[-i-1]) * (10 ** i))\n    print(len(ans))\n    print(' '.join(map(str, ans)))\n", "import math as mt \nimport sys,string\ninput=sys.stdin.readline\nimport random\nfrom collections import deque,defaultdict\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nt=I()\nfor i in range(t):\n    n=input().strip()\n    k=len(n)-1\n    l=[]\n    for i in range(len(n)):\n        if(n[i]!='0'):\n            l.append(int(n[i])*pow(10,k))\n        k-=1\n    print(len(l))\n    print(*l)\n", "import sys\nreadline = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = readline().rstrip()\n    ans = []\n    for i, c in zip(list(range(100)), reversed(n)):\n        if c != '0':\n            ans.append(c + '0'*i)\n    print(len(ans))\n    print(*ans)\n", "t = int(input())\nfor i in range(t):\n    n = input()\n    k = []\n    for i in range(len(n)):\n        if n[i] != \"0\":\n            k.append(int(n[i])*10**(len(n)-i-1))\n    print(len(k))\n    print(*k)"]