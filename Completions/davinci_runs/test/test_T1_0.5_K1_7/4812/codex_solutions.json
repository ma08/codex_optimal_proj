["\n\n# Main\ns = input()\ne = int(input())\nendings = []\nfor i in range(e):\n    endings.append(input().split())\np = int(input())\nfor i in range(p):\n    phrase = input().split()\n    if phrase[-1][-len(s):] in endings[endings.index(list(filter(lambda x: phrase[-1][-len(x):] in x, endings)))]:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\n\n#s = input()\n#e = int(input())\n#endings = [input().split() for i in range(e)]\n#p = int(input())\n#phrases = [input().split() for i in range(p)]\n\n#s = 'stairs'\n#e = 2\n#endings = ['erres airs ears ares aires',\n#           'eet eat']\n#p = 2\n#phrases = ['apples and pears',\n#           'plates of meat']\n\ns = 'drought'\ne = 2\nendings = ['aught ought aut acht',\n           'ought oubt outte out oute']\np = 5\nphrases = ['tasty sprout',\n           'difficult route',\n           'worried and fraught',\n           'forever in doubt',\n           'apples and pears']\n\nendings = [e.split() for e in endings]\nphrases = [p.split() for p in phrases]\n\n#print(s)\n#print(endings)\n#print(phrases)\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if s[-3:] in endings[0] and phrase[0][-3:] in endings[0]:\n            print('YES')\n        elif s[-3:] in endings[1] and phrase[0][-3:] in endings[1]:\n            print('YES')\n        else:\n            print('NO')\n    elif len(phrase) == 3:\n        if s[-3:] in endings[0] and phrase[0][-3:] in endings[0]:\n            print('YES')\n        elif s[-3:] in endings[1] and phrase[0][-3:] in endings[1]:\n            print('YES')\n        elif s[-3:] in endings[0] and phrase[1][-3:] in endings[0]:\n            print('YES')\n        elif s[-3:] in endings[1] and phrase[1][-3:] in endings[1]:\n            print('YES')\n        else:\n            print('NO')", "\n\nimport sys\nimport string\n\ndef main():\n    r = sys.stdin.readline\n    word = r().strip()\n    end_count = int(r())\n    end_lists = []\n    for _ in range(end_count):\n        end_lists.append(set(r().split()))\n    phrase_count = int(r())\n    for _ in range(phrase_count):\n        phrase = r().split()\n        if len(phrase) == 2:\n            end = phrase[1]\n        else:\n            end = phrase[2]\n        if any(end in end_list for end_list in end_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef solution(common_word, endings_list, phrases):\n    for phrase in phrases:\n        if phrase.split()[-1] in endings_list[common_word[-2:]]:\n            print('YES')\n        else:\n            print('NO')\n\ndef main():\n    common_word = input()\n    endings_list_num = int(input())\n    endings_list = {}\n    for i in range(endings_list_num):\n        endings = input().split()\n        for ending in endings:\n            endings_list[ending] = endings\n    phrases_num = int(input())\n    phrases = []\n    for i in range(phrases_num):\n        phrases.append(input())\n    solution(common_word, endings_list, phrases)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef rhyming_slang(s, e, p):\n    endings = [set(line.split()) for line in e]\n    for phrase in p:\n        words = phrase.split()\n        if len(words) > 2:\n            if words[-1] in endings[0]:\n                if words[-2] in endings[1]:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n            else:\n                print(\"NO\")\n        else:\n            if words[-1] in endings[0]:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef main():\n    s = sys.stdin.readline().strip()\n    e = int(sys.stdin.readline().strip())\n    endings = [sys.stdin.readline().strip() for _ in range(e)]\n    p = int(sys.stdin.readline().strip())\n    phrases = [sys.stdin.readline().strip() for _ in range(p)]\n    rhyming_slang(s, endings, phrases)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    common_word = sys.stdin.readline().strip()\n    num_ending_lists = int(sys.stdin.readline().strip())\n    ending_lists = [sys.stdin.readline().strip().split() for _ in range(num_ending_lists)]\n    num_phrases = int(sys.stdin.readline().strip())\n    phrases = [sys.stdin.readline().strip() for _ in range(num_phrases)]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            first_word, second_word = words\n            if common_word[-1] in second_word[-3:]:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            first_word, second_word, third_word = words\n            if common_word[-1] in second_word[-3:]:\n                print('YES')\n            elif common_word[-1] in third_word[-3:]:\n                print('YES')\n            else:\n                print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\nlines = sys.stdin.readlines()\n\n# Read common word\ncommon_word = lines[0].strip()\n\n# Read number of lists\nlist_count = int(lines[1])\n\n# Read lists of endings that sound the same\nlist_of_endings = []\nfor i in range(0, list_count):\n    list_of_endings.append(lines[2+i].strip().split())\n\n# Read number of phrases to test\nphrase_count = int(lines[2+list_count])\n\n# Read phrases to test\nphrases = []\nfor i in range(0, phrase_count):\n    phrases.append(lines[3+list_count+i].strip().split())\n\n# For each phrase, check whether the last word rhymes with the common word\nfor phrase in phrases:\n    last_word = phrase[-1]\n    last_word_len = len(last_word)\n    for endings in list_of_endings:\n        if last_word[last_word_len-3:last_word_len] in endings:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")"]