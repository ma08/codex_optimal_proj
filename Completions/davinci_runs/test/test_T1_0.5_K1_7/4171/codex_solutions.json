["\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\nn, k = 5, 3\na = [1, 2, 2, 4, 5]\n\n# n, k = 5, 3\n# a = [1, 2, 3, 4, 5]\n\n# n, k = 5, 3\n# a = [1, 2, 3, 3, 3]\n\na.sort()\n\nmoves = 0\n\ni = 0\nwhile i < n - k + 1:\n    if a[i] == a[i + k - 1]:\n        break\n    else:\n        if a[i] < a[i + k - 1]:\n            a[i + k - 1] = a[i + k - 1] // 2\n        else:\n            a[i] = a[i] // 2\n        moves += 1\n        a.sort()\n        i = 0\n\nprint(moves)", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# if number of equal numbers required is more than half the size of the array, then we need to make all the numbers equal\nif k > n//2:\n    k = n - k\n\n# we need to make all the numbers equal to the lowest number\ndiff = min(a)\n\n# we will add the difference between the lowest number and the current number to the number of operations required\nfor i in range(n):\n    diff += a[i] - min(a)\n\nprint(diff)", "\n\nimport sys\n\ndef main():\n    n, k = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    min_a = min(a)\n    max_a = max(a)\n\n    if min_a == max_a:\n        print(0)\n    elif k == 1:\n        print(1)\n    else:\n        print(max(0, max_a - min_a - (k-1)))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # Find the largest number in the array\n    max_a = max(a)\n\n    # If any number in the array is larger than k, then there is no way to get a subarray of length k with equal elements\n    if max_a > k:\n        print(-1)\n        return\n\n    # If any number in the array is equal to k, then there is no need to do any operations\n    if k in a:\n        print(0)\n        return\n\n    # If there is no number in the array that is larger than k, then the minimum number of operations is the number of operations to make the largest number in the array equal to k\n    print(a.count(max_a))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# n, k = 5, 3\n# a = [1, 2, 2, 4, 5]\n\n# n, k = 5, 3\n# a = [1, 2, 3, 4, 5]\n\n# n, k = 5, 3\n# a = [1, 2, 3, 3, 3]\n\n# Sorting the array in descending order\na.sort(reverse=True)\n\n# Initializing the count of operations\ncount = 0\n\n# Iterating over the array\nfor i in range(n-1):\n    # If the element at the current index is greater than the one at the next index,\n    # then we have to reduce the current element until it equals to the next element\n    while a[i] > a[i+1]:\n        # Reducing the current element by half\n        a[i] = a[i] // 2\n        # Incrementing the count of operations\n        count += 1\n\n# If the element at the first index is greater than the element at the last index,\n# then we have to reduce the first element until it equals to the last element\nwhile a[0] > a[n-1]:\n    # Reducing the first element by half\n    a[0] = a[0] // 2\n    # Incrementing the count of operations\n    count += 1\n\n# If the element at the first index is not equal to the element at the last index,\n# then we have to reduce the first element until it equals to the last element\nwhile a[0] != a[n-1]:\n    # Reducing the first element by half\n    a[0] = a[0] // 2\n    # Incrementing the count of operations\n    count += 1\n\n# Printing the count of operations\nprint(count)", "\n\nimport bisect\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nleft = a[0]\nright = a[-1]\n\nwhile left < right:\n    mid = (left + right) // 2\n    cnt = 0\n    for i in a:\n        cnt += i // mid\n    if cnt >= k:\n        left = mid + 1\n    else:\n        right = mid\n\nans = right - 1\n\nprint(ans)", "\n\n\ndef solve(n, k, a):\n    \"\"\"\n    :param n: int, number of elements in the array\n    :param k: int, number of equal numbers required\n    :param a: list, array of integers\n    :return: int, minimum possible number of operations required to obtain at least k equal numbers in the array\n    \"\"\"\n    a.sort()\n    min_num = a[0]\n    count = 0\n    for num in a:\n        count += (num - min_num) // 2\n        min_num = num\n    if count >= k:\n        return count - k\n    else:\n        return k - count\n\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, k, a))"]