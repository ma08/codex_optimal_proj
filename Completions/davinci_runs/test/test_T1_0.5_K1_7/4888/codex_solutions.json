["\n\ndef main():\n    n, T = [int(i) for i in input().split()]\n    tasks = [int(i) for i in input().split()]\n    count = 0\n    total = 0\n    for i in range(len(tasks)):\n        total += tasks[i]\n        if total <= T:\n            count += 1\n        else:\n            break\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, T = map(int, input().split())\n    times = [int(x) for x in input().split()]\n    total = 0\n    count = 0\n    for i in range(n):\n        total += times[i]\n        if total > T:\n            break\n        count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, t = input().split()\nn = int(n)\nt = int(t)\ntimes = input().split()\n\ntotal = 0\ncount = 0\nfor i in range(n):\n    total += int(times[i])\n    if total > t:\n        break\n    else:\n        count += 1\n\nprint(count)", "\n\nn, T = [int(x) for x in input().split()]\ntasks = [int(x) for x in input().split()]\n\ntime_used = 0\nnum_completed = 0\nfor task in tasks:\n    if time_used + task <= T:\n        time_used += task\n        num_completed += 1\n    else:\n        break\n\nprint(num_completed)", "\n\nn, T = map(int, input().split())\ntasks = sorted(map(int, input().split()))\n\nt = 0\nfor task in tasks:\n    t += task\n    if t > T:\n        n -= 1\n        break\nprint(n)", "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    n, T = [int(x) for x in line.split()]\n    line = sys.stdin.readline()\n    tasks = [int(x) for x in line.split()]\n    time = 0\n    count = 0\n    while time < T:\n        time += tasks[count]\n        count += 1\n        if time > T:\n            count -= 1\n            break\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncompleted = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        completed += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(completed)"]