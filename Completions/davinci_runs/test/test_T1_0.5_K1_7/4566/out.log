2022-04-13 21:50:00.113361 """
There are N cities and M roads.
The i-th road (1≤i≤M) connects two cities a_i and b_i (1≤a_i,b_i≤N) bidirectionally.
There may be more than one road that connects the same pair of two cities.
For each city, how many roads are connected to the city?

-----Constraints-----
 - 2≤N,M≤50
 - 1≤a_i,b_i≤N
 - a_i ≠ b_i
 - All input values are integers.

-----Input-----
Input is given from Standard Input in the following format:  
N M
a_1 b_1
:  
a_M b_M

-----Output-----
Print the answer in N lines.
In the i-th line (1≤i≤N), print the number of roads connected to city i.

-----Sample Input-----
4 3
1 2
2 3
1 4

-----Sample Output-----
2
2
1
1

 - City 1 is connected to the 1-st and 3-rd roads.
 - City 2 is connected to the 1-st and 2-nd roads.
 - City 3 is connected to the 2-nd road.
 - City 4 is connected to the 3-rd road.
"""
2022-04-13 21:50:00.113390 --------------------------
2022-04-13 21:50:14.210909 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\ncities = [[] for _ in range(N)]\nfor i in range(M):\n    a, b = map(int, input().split())\n    cities[a - 1].append(b - 1)\n    cities[b - 1].append(a - 1)\n\nfor i in range(N):\n    print(len(cities[i]))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\na = []\nb = []\n\nfor i in range(m):\n    a_i, b_i = map(int, input().split())\n    a.append(a_i)\n    b.append(b_i)\n\nd = {}\n\nfor i in range(n):\n    d[i+1] = 0\n\nfor i in range(m):\n    d[a[i]] += 1\n    d[b[i]] += 1\n\nfor i in range(n):\n    print(d[i+1])"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, m = map(int, input().split())\n\nadj_list = [[] for _ in range(n)]\n\nfor _ in range(m):\n    a, b = map(lambda x: int(x) - 1, input().split())\n    adj_list[a].append(b)\n    adj_list[b].append(a)\n\nfor i in range(n):\n    print(len(adj_list[i]))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\nroads = [0] * N\n\nfor i in range(M):\n  a, b = map(int, input().split())\n  roads[a - 1] += 1\n  roads[b - 1] += 1\n\nfor i in range(N):\n  print(roads[i])"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN,M = map(int, input().split())\n\nroads = [0] * (N+1)\nfor i in range(M):\n    a,b = map(int, input().split())\n    roads[a] += 1\n    roads[b] += 1\n\nfor i in range(1,N+1):\n    print(roads[i])"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nN, M = map(int, input().split())\n\n# \u521d\u671f\u5316\ncity_list = [0] * N\n\n# \u5165\u529b\u53d7\u3051\u53d6\u308a\nfor i in range(M):\n    a, b = map(int, input().split())\n    city_list[a-1] += 1\n    city_list[b-1] += 1\n\n# \u51fa\u529b\nfor i in range(N):\n    print(city_list[i])"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nN,M = map(int,input().split())\nroads = [[] for _ in range(N)]\nfor i in range(M):\n    a,b = map(int,input().split())\n    roads[a-1].append(b)\n    roads[b-1].append(a)\nfor i in range(N):\n    print(len(roads[i]))"
    }
  ],
  "created": 1649886600,
  "id": "cmpl-4wfA8VpNxNSXsGwIr0Xc0haywBMkN",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 21:50:14.211178 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\ncities = [[] for _ in range(N)]\nfor i in range(M):\n    a, b = map(int, input().split())\n    cities[a - 1].append(b - 1)\n    cities[b - 1].append(a - 1)\n\nfor i in range(N):\n    print(len(cities[i]))"
}
2022-04-13 21:50:14.211210 REASON stop
2022-04-13 21:50:14.211617 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\na = []\nb = []\n\nfor i in range(m):\n    a_i, b_i = map(int, input().split())\n    a.append(a_i)\n    b.append(b_i)\n\nd = {}\n\nfor i in range(n):\n    d[i+1] = 0\n\nfor i in range(m):\n    d[a[i]] += 1\n    d[b[i]] += 1\n\nfor i in range(n):\n    print(d[i+1])"
}
2022-04-13 21:50:14.211725 REASON stop
2022-04-13 21:50:14.212112 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, m = map(int, input().split())\n\nadj_list = [[] for _ in range(n)]\n\nfor _ in range(m):\n    a, b = map(lambda x: int(x) - 1, input().split())\n    adj_list[a].append(b)\n    adj_list[b].append(a)\n\nfor i in range(n):\n    print(len(adj_list[i]))"
}
2022-04-13 21:50:14.212161 REASON stop
2022-04-13 21:50:14.221607 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\nroads = [0] * N\n\nfor i in range(M):\n  a, b = map(int, input().split())\n  roads[a - 1] += 1\n  roads[b - 1] += 1\n\nfor i in range(N):\n  print(roads[i])"
}
2022-04-13 21:50:14.221676 REASON stop
2022-04-13 21:50:14.222296 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN,M = map(int, input().split())\n\nroads = [0] * (N+1)\nfor i in range(M):\n    a,b = map(int, input().split())\n    roads[a] += 1\n    roads[b] += 1\n\nfor i in range(1,N+1):\n    print(roads[i])"
}
2022-04-13 21:50:14.222358 REASON stop
2022-04-13 21:50:14.244923 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nN, M = map(int, input().split())\n\n# \u521d\u671f\u5316\ncity_list = [0] * N\n\n# \u5165\u529b\u53d7\u3051\u53d6\u308a\nfor i in range(M):\n    a, b = map(int, input().split())\n    city_list[a-1] += 1\n    city_list[b-1] += 1\n\n# \u51fa\u529b\nfor i in range(N):\n    print(city_list[i])"
}
2022-04-13 21:50:14.245012 REASON stop
2022-04-13 21:50:14.245830 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nN,M = map(int,input().split())\nroads = [[] for _ in range(N)]\nfor i in range(M):\n    a,b = map(int,input().split())\n    roads[a-1].append(b)\n    roads[b-1].append(a)\nfor i in range(N):\n    print(len(roads[i]))"
}
2022-04-13 21:50:14.245902 REASON stop
