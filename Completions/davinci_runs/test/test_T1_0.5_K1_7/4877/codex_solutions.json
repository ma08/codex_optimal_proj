["\n\nimport sys\n\ndef main():\n    inp = sys.stdin.readline().strip().split()\n    a = int(inp[0])\n    b = int(inp[1])\n    h = int(inp[2])\n    count = 0\n    while h > 0:\n        count += 1\n        h -= a\n        if h > 0:\n            h += b\n    print(count)\n\nmain()", "\n\nimport sys\n\na, b, h = map(int, sys.stdin.readline().split())\n\n# the worm's position starts at 0, so we need to add 1 to the number of times\n# it crawls up\nprint((h - b - 1) // (a - b) + 1)", "\n\nimport sys\n\ndef main():\n    a, b, h = map(int, sys.stdin.readline().split())\n    count = 0\n    while h > 0:\n        count += 1\n        h -= a\n        if h > 0:\n            h += b\n    print(count)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\na, b, h = [int(i) for i in sys.stdin.readline().split()]\n\nprint(int(math.ceil((h - b) / float(a - b))))", "\n\nimport sys\n\ndef main():\n    a, b, h = map(int, sys.stdin.readline().split())\n    print((h-b)//(a-b) if (h-b)%(a-b) == 0 else (h-b)//(a-b)+1)\n\nmain()", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    line = lines[0].split()\n    a = int(line[0])\n    b = int(line[1])\n    h = int(line[2])\n    c = 0\n    while h > 0:\n        c += 1\n        h -= a\n        if h > 0:\n            h += b\n    print(c)\n\nmain()", "\n\nimport sys\n\ndef main():\n    a, b, h = map(int, sys.stdin.readline().split())\n    print(int(h / (a - b)) + 1)\n    \nif __name__ == '__main__':\n    main()"]