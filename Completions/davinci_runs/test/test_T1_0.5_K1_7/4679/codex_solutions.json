["\n\ndef card_game_for_three():\n    deck_a = input()\n    deck_b = input()\n    deck_c = input()\n    turn = 'A'\n    while deck_a + deck_b + deck_c:\n        if turn == 'A':\n            turn = deck_a[0]\n            deck_a = deck_a[1:]\n        elif turn == 'B':\n            turn = deck_b[0]\n            deck_b = deck_b[1:]\n        else:\n            turn = deck_c[0]\n            deck_c = deck_c[1:]\n    print(turn)\n\nif __name__ == '__main__':\n    card_game_for_three()", "\n\nS_A = input()\nS_B = input()\nS_C = input()\n\ndef cardGameForThree(S_A, S_B, S_C):\n    turn = \"A\"\n    while S_A != \"\" or S_B != \"\" or S_C != \"\":\n        if turn == \"A\":\n            S_A = S_A[1:]\n            if S_A == \"\":\n                return \"A\"\n            else:\n                turn = S_A[0]\n        elif turn == \"B\":\n            S_B = S_B[1:]\n            if S_B == \"\":\n                return \"B\"\n            else:\n                turn = S_B[0]\n        elif turn == \"C\":\n            S_C = S_C[1:]\n            if S_C == \"\":\n                return \"C\"\n            else:\n                turn = S_C[0]\n\nprint(cardGameForThree(S_A, S_B, S_C))", "\n\nimport sys\n\ndef main():\n    # Get input\n    S_A = input()\n    S_B = input()\n    S_C = input()\n\n    # Create players\n    A = Player(S_A)\n    B = Player(S_B)\n    C = Player(S_C)\n\n    # Print winner\n    print(winner(A, B, C))\n\ndef winner(A, B, C):\n    \"\"\"\n    Return the winner of the game.\n\n    :param A: Player A\n    :param B: Player B\n    :param C: Player C\n    :return: String, winner of the game\n    \"\"\"\n    # Create players array\n    players = [A, B, C]\n\n    # Initialize turn counter\n    turn = 0\n\n    # Loop until a player has no cards\n    while all(player.has_cards() for player in players):\n        # Get current player\n        player = players[turn]\n\n        # Discard top card\n        player.discard()\n\n        # Get current card\n        card = player.current_card()\n\n        # Update turn\n        if card == 'a':\n            turn = 0\n        elif card == 'b':\n            turn = 1\n        else:\n            turn = 2\n\n    # Return winner\n    if A.has_cards():\n        return 'A'\n    elif B.has_cards():\n        return 'B'\n    elif C.has_cards():\n        return 'C'\n    else:\n        return 'No winner'\n\nclass Player():\n    \"\"\"\n    Player class.\n\n    :param cards: String, player's cards\n    \"\"\"\n    def __init__(self, cards):\n        \"\"\"\n        Initialize the player.\n\n        :param cards: String, player's cards\n        \"\"\"\n        self.cards = cards\n\n    def discard(self):\n        \"\"\"\n        Discard the top card in the player's deck.\n        \"\"\"\n        self.cards = self.cards[1:]\n\n    def has_cards(self):\n        \"\"\"\n        Return true if the player has cards in their deck.\n\n        :return: Boolean, true if the player has cards in their deck\n        \"\"\"\n        return len(self.cards) > 0\n\n    def current_card(self):\n        \"\"\"\n        Return the current card in the player's deck.\n\n        :return: String, current card in the player's deck\n        \"\"\"\n        return self.cards[0]\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\nS = []\nS.append(input())\nS.append(input())\nS.append(input())\n\nn = 0\nwhile True:\n    if len(S[n]) == 0:\n        if n == 0:\n            print(\"A\")\n        elif n == 1:\n            print(\"B\")\n        else:\n            print(\"C\")\n        sys.exit()\n    else:\n        if S[n][0] == \"a\":\n            n = 0\n        elif S[n][0] == \"b\":\n            n = 1\n        else:\n            n = 2\n        S[n] = S[n][1:]", "\n\n\ndef main():\n    S_A = raw_input()\n    S_B = raw_input()\n    S_C = raw_input()\n\n    current_player = \"A\"\n    while (len(S_A) + len(S_B) + len(S_C)) > 0:\n        if current_player == \"A\":\n            S_A = S_A[1:]\n            if S_A[0] == \"a\":\n                current_player = \"A\"\n            elif S_A[0] == \"b\":\n                current_player = \"B\"\n            elif S_A[0] == \"c\":\n                current_player = \"C\"\n        elif current_player == \"B\":\n            S_B = S_B[1:]\n            if S_B[0] == \"a\":\n                current_player = \"A\"\n            elif S_B[0] == \"b\":\n                current_player = \"B\"\n            elif S_B[0] == \"c\":\n                current_player = \"C\"\n        elif current_player == \"C\":\n            S_C = S_C[1:]\n            if S_C[0] == \"a\":\n                current_player = \"A\"\n            elif S_C[0] == \"b\":\n                current_player = \"B\"\n            elif S_C[0] == \"c\":\n                current_player = \"C\"\n\n    print current_player\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\n\ndef game_for_three(a, b, c):\n    a_count = 0\n    b_count = 0\n    c_count = 0\n    while True:\n        if a_count >= len(a):\n            return \"A\"\n        if b_count >= len(b):\n            return \"B\"\n        if c_count >= len(c):\n            return \"C\"\n        if a[a_count] == \"a\":\n            a_count += 1\n        elif a[a_count] == \"b\":\n            a_count += 1\n            b_count += 1\n        elif a[a_count] == \"c\":\n            a_count += 1\n            c_count += 1\n        if b_count >= len(b):\n            return \"B\"\n        if c_count >= len(c):\n            return \"C\"\n        if b[b_count] == \"a\":\n            b_count += 1\n            a_count += 1\n        elif b[b_count] == \"b\":\n            b_count += 1\n        elif b[b_count] == \"c\":\n            b_count += 1\n            c_count += 1\n        if a_count >= len(a):\n            return \"A\"\n        if c_count >= len(c):\n            return \"C\"\n        if c[c_count] == \"a\":\n            c_count += 1\n            a_count += 1\n        elif c[c_count] == \"b\":\n            c_count += 1\n            b_count += 1\n        elif c[c_count] == \"c\":\n            c_count += 1\n\n\nif __name__ == \"__main__\":\n    a = sys.stdin.readline().rstrip()\n    b = sys.stdin.readline().rstrip()\n    c = sys.stdin.readline().rstrip()\n    print(game_for_three(a, b, c))", "\n\nimport sys\n\ndef card_game_for_three(s_a, s_b, s_c):\n  a_deck = list(s_a)\n  b_deck = list(s_b)\n  c_deck = list(s_c)\n  current_player = 'A'\n  while True:\n    if current_player == 'A':\n      if len(a_deck) == 0:\n        return 'A'\n      current_player = a_deck.pop(0)\n    elif current_player == 'B':\n      if len(b_deck) == 0:\n        return 'B'\n      current_player = b_deck.pop(0)\n    elif current_player == 'C':\n      if len(c_deck) == 0:\n        return 'C'\n      current_player = c_deck.pop(0)\n\ndef main():\n  s_a = sys.stdin.readline().strip()\n  s_b = sys.stdin.readline().strip()\n  s_c = sys.stdin.readline().strip()\n  print(card_game_for_three(s_a, s_b, s_c))\n\nif __name__ == '__main__':\n  main()"]