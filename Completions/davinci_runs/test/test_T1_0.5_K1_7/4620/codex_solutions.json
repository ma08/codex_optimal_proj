["\n\nn = int(input())\nc = [0]*n\ns = [0]*n\nf = [0]*n\nfor i in range(n-1):\n    c[i], s[i], f[i] = map(int, input().split())\n\nfor i in range(n):\n    ans = s[i]\n    for j in range(i, n-1):\n        if ans < s[j]:\n            ans = s[j]\n        elif ans%f[j] != 0:\n            ans += (f[j] - ans%f[j])\n        ans += c[j]\n    print(ans)", "\n\ndef main():\n    N = int(input())\n    C, S, F = [0] * N, [0] * N, [0] * N\n    for i in range(N-1):\n        C[i], S[i], F[i] = map(int, input().split())\n    for i in range(N):\n        t = 0\n        for j in range(i, N-1):\n            if t <= S[j]:\n                t = S[j] + C[j]\n            else:\n                t = ((t - S[j]) // F[j] + 1) * F[j] + S[j] + C[j]\n        print(t)\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    c = []\n    s = []\n    f = []\n    for i in range(n-1):\n        c_, s_, f_ = map(int, input().split())\n        c.append(c_)\n        s.append(s_)\n        f.append(f_)\n\n    for i in range(n):\n        ans = 0\n        for j in range(i, n-1):\n            if ans <= s[j]:\n                ans = s[j]\n            else:\n                ans = (ans - s[j]) // f[j] * f[j] + s[j]\n            ans += c[j]\n\n        print(ans)\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\n\nfor i in range(n):\n    c, s, f = [int(x) for x in stdin.readline().split()]\n    if i != n - 1:\n        print(s + (f - (s % f)) + c)\n    else:\n        print(0)", "\n\n#---Initialize---\nnumStations = int(input())\nstations = []\n\n#---Input---\nfor i in range(numStations-1):\n    stations.append([int(x) for x in input().split()])\n\n#---Calculate---\nfor i in range(numStations):\n    #Start from this station\n    currentStation = i+1 #Station numbers start at 1\n    currentTime = 0 #Time starts at 0\n\n    #While we're not at the last station\n    while currentStation < numStations:\n        #Find the next train that leaves from currentStation\n        #Time at which the next train leaves\n        nextTime = stations[currentStation-1][1]\n        #Time between trains\n        timeBetween = stations[currentStation-1][2]\n        while nextTime <= currentTime:\n            nextTime += timeBetween\n\n        #Add the time it takes to reach the next station\n        currentTime += nextTime - currentTime + stations[currentStation-1][0]\n        #Move to the next station\n        currentStation += 1\n    #---Output---\n    print(currentTime)", "\n\nN = int(input())\n\n# \u5165\u529b\u53d7\u4ed8\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\n\n# \u51fa\u529b\u7528\u30ea\u30b9\u30c8\nans = [0] * N\n\nfor i in range(N-1):\n    # \u5230\u7740\u6642\u9593\n    arrive_time = S[i]\n\n    # \u5230\u7740\u6642\u9593\u304c\u524d\u306e\u8def\u7dda\u306e\u5230\u7740\u6642\u9593\u3092\u8d85\u3048\u308b\u307e\u3067\u5f85\u3064\n    if i > 0:\n        if arrive_time % F[i-1] != 0:\n            arrive_time += F[i-1] - arrive_time % F[i-1]\n        if arrive_time < ans[i]:\n            arrive_time = ans[i]\n\n    # \u6b21\u306e\u8def\u7dda\u306b\u4e57\u308b\n    ans[i+1] = arrive_time + C[i]\n\n# \u51fa\u529b\nfor i in range(N):\n    print(ans[i])"]