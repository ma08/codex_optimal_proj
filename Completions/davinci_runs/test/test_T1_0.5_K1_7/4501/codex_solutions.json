["\n\nN, A = map(int, input().split())\nx = list(map(int, input().split()))\n\ndp = [[0] * (N+1) for _ in range(A+1)]\n\ndp[0][0] = 1\nfor i in range(N):\n    for j in range(A+1):\n        dp[j][i+1] += dp[j][i]\n        if j - x[i] >= 0:\n            dp[j][i+1] += dp[j-x[i]][i]\n\nprint(dp[A][N])", "\n\nN, A = map(int, input().split())\nX = list(map(int, input().split()))\n\n# \u5168\u90e8\u306e\u9078\u3073\u65b9\u3092\u5217\u6319\u3057\u3066\u3001\u5e73\u5747\u304cA\u306b\u306a\u308b\u3082\u306e\u3092\u30ab\u30a6\u30f3\u30c8\n# \u305f\u3060\u3057\u3001\u540c\u3058\u9078\u3073\u65b9\u306f1\u56de\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n# \u540c\u3058\u9078\u3073\u65b9\u304c1\u56de\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u308b\u305f\u3081\u3001\u9078\u3073\u65b9\u306e\u91cd\u8907\u3092\u9632\u3050\u305f\u3081\u306b\u3001\n# \u9806\u5217\u3092\u7528\u3044\u3066\u3044\u308b\ncount = 0\nfor i in range(1, 2**N):\n    selected = []\n    for j in range(N):\n        if i >> j & 1:\n            selected.append(X[j])\n    if sum(selected) / len(selected) == A:\n        count += 1\nprint(count)", "\n\nimport sys\nimport math\n\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n\ndef solve(n, a, x):\n    counter = 0\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            if i == j:\n                if a * i == sum(x[:i]):\n                    counter += 1\n            else:\n                if a * (i + j) == sum(x[:i]) + sum(x[n - j:n]):\n                    counter += comb(n, i)\n    return counter\n\ndef main():\n    n, a = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    print(solve(n, a, x))\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    N, A = map(int, input().split())\n    X = list(map(int, input().split()))\n    dp = [[0 for _ in range(N+1)] for _ in range(N*50+1)]\n    dp[0][0] = 1\n    for i in range(N):\n        for j in range(N*50):\n            if dp[j][i]:\n                dp[j][i+1] += dp[j][i]\n                dp[j+X[i]][i+1] += dp[j][i]\n    print(dp[A*N][N])\n\nif __name__ == \"__main__\":\n    main()", "\n\nN, A = map(int, input().split())\nx = list(map(int, input().split()))\n\n# dp[i][j] = i\u679a\u76ee\u307e\u3067\u304b\u3089j\u679a\u9078\u3093\u3060\u6642\u306e\u548c\ndp = [[0]*(N+1) for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    dp[i][0] = dp[i-1][0]\n    for j in range(1, N+1):\n        dp[i][j] = dp[i-1][j] + x[i-1]\n\nans = 0\nfor i in range(1, N+1):\n    for j in range(i, N+1):\n        if dp[j][i] - dp[j-i][i] == A * i:\n            ans += 1\nprint(ans)", "\n\n# \u5168\u63a2\u7d22\n# \u30fb\u5168\u63a2\u7d22\u306e\u65b9\u6cd5\n#   - \u5404\u6841\u3092\u30d3\u30c3\u30c8\u5217\u3067\u8868\u3059\n#     - \u4f8b) [1, 2, 3] -> 111, 110, 101, 100, 011, 010, 001, 000\n#   - \u5404\u30d3\u30c3\u30c8\u5217\u306b\u3064\u3044\u3066\u3001\u9078\u3093\u3060\u6570\u5b57\u306e\u5e73\u5747\u3092\u8a08\u7b97\n#   - \u5e73\u5747\u304cA\u3068\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u3001\u30ab\u30a6\u30f3\u30c8\n#   - \u5168\u3066\u306e\u30d3\u30c3\u30c8\u5217\u306b\u3064\u3044\u3066\u8a08\u7b97\u3059\u308b\n\n# \u30fb\u5b9f\u88c5\u4e0a\u306e\u30dd\u30a4\u30f3\u30c8\n#   - \u5236\u7d04\u4e0a\u30011 \\leq N \\leq 50\n#     - N\u304c50\u4ee5\u4e0b\u306e\u6642\u306f\u30012^N\u901a\u308a\u306e\u30d3\u30c3\u30c8\u5217\u3092\u5168\u3066\u8a08\u7b97\u3057\u3066\u3082\u554f\u984c\u306a\u3044\n#   - \u5236\u7d04\u4e0a\u30011 \\leq A \\leq 50\n#     - A\u304c50\u4ee5\u4e0b\u306e\u6642\u306f\u300150\u4ee5\u4e0a\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n#     - \u5e73\u5747\u304c50\u4ee5\u4e0a\u306b\u306a\u308b\u5834\u5408\u306f\u3001\u5fc5\u305a\u5e73\u5747\u304c50\u306b\u306a\u308b\n#       - \u4f8b) [50, 50, 50] -> 50\n#       - \u4f8b) [50, 50, 60] -> 53\n#   - \u5236\u7d04\u4e0a\u30011 \\leq x_i \\leq 50\n#     - x_i\u304c50\u4ee5\u4e0b\u306e\u6642\u306f\u3001x_i\u3092\u542b\u3080\u5834\u5408\u3001\u5e73\u5747\u306f50\u4ee5\u4e0b\u306b\u306a\u308b\n#       - \u4f8b) [50, 50, 50] -> 50\n#       - \u4f8b) [50, 50, 60] -> 53\n#   - \u5236\u7d04\u4e0a\u3001N,\\,A,\\,x_i\u306f\u6574\u6570\n#     - \u5207\u308a\u6368\u3066\u3092\u884c\u3046\n#       - \u4f8b) 3 / 2 -> 1\n#       - \u4f8b) (3 + 0.5) / 2 -> 2\n\n# \u30fb\u5b9f\u88c5\u4e0a\u306e\u30dd\u30a4\u30f3\u30c8\n#   - \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3092\u4f7f\u3046\u3068\u3001\u30d3\u30c3\u30c8\u5217\u3092\u8a08\u7b97\u3067\u304d\u308b\n#     - for i in range(2**N):\n#       - print(bin(i))\n\n# \u30fb\u5236\u7d04\u4e0a\u30011 \\leq N \\leq 16\n#   - N\u304c16\u4ee5\u4e0b\u306e\u6642\u306f\u30012^N\u901a\u308a\u306e\u30d3\u30c3\u30c8\u5217\u3092\u5168\u3066\u8a08\u7b97\u3057\u3066\u3082\u554f\u984c\u306a\u3044\n#   - \u305f\u3060\u3057\u30012^16 = 65536\u901a\u308a\u306e\u30d3\u30c3\u30c8\u5217\u3092\u5168\u3066\u8a08\u7b97\u3059\u308b\u3068TLE\u306b\u306a\u308b\n#   - \u305d\u306e\u305f\u3081\u3001N\u304c16\u4ee5\u4e0b\u306e\u6642\u306b\u306f\u3001\u30d3\u30c3\u30c8\u5217\u306e\u8a08\u7b97\u3092\u884c\u308f\u306a\u3044\n#   - N\u304c16\u4ee5\u4e0b\u306e\u6642\u306f\u3001\u5225\u306e\u65b9\u6cd5\u3067\u5168\u63a2\u7d22\u3092\u884c\u3046\n#   - \u3053\u3053\u3067\u306f\u3001N\u304c16\u4ee5\u4e0b\u306e\u6642\u306f\u3001itertools.product\u3092\u4f7f\u3046\n\n# \u30fb\u5b9f\u88c5\u4e0a\u306e\u30dd\u30a4\u30f3\u30c8\n#   - itertools.product\u3092\u4f7f\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u5168\u3066\u8a08\u7b97\u3067\u304d\u308b\n#     - combinations([1, 2, 3], 2) -> [(1, 2), (1, 3), (2, 3)]\n\nimport itertools\n\n# \u5165\u529b\nN, A = map(int, input().split())\nx_list = list(map(int, input().split()))\n\n# \u5168\u63a2\u7d22\ncount = 0\nif N <= 16:\n    for i in itertools.product([0, 1], repeat=N):\n        # \u9078\u3093\u3060\u6570\u5b57\u306e\u5e73\u5747\u3092\u8a08\u7b97\n        total = 0\n        for j in range(N):\n            if i[j] == 1:\n                total += x_list[j]\n        average = total / sum(i)\n        # \u5e73\u5747\u304cA\u3068\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u3001\u30ab\u30a6\u30f3\u30c8\n        if average == A:\n            count += 1\nelse:\n    for i in range(2**N):\n        # \u9078\u3093\u3060\u6570\u5b57\u306e\u5e73\u5747\u3092\u8a08\u7b97\n        total = 0\n        for j in range(N):\n            if (i >> j) & 1:\n                total += x_list[j]\n        average = total / bin(i).count('1')\n        # \u5e73\u5747\u304cA\u3068\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u3001\u30ab\u30a6\u30f3\u30c8\n        if average == A:\n            count += 1\n\n# \u51fa\u529b\nprint(count)", "\n\nimport sys\n\ndef main():\n    N, A = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    print(len([[i, j] for i in range(N) for j in range(i, N) if sum(x[i:j+1]) == A*(j-i+1)]))\n\nif __name__ == \"__main__\":\n    main()"]