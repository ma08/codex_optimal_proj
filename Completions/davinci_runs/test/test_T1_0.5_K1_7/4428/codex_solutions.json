["\n\nn = int(input())\nd = [int(x) for x in input().split()]\n\nd_sum = sum(d)\n\n#print(d_sum)\n\nmax_sum = 0\n\nfor i in range(n):\n    max_sum += d[i]\n    if max_sum > d_sum - max_sum:\n        break\n\nprint(max_sum)", "\n\nn = int(input())\nd = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\nfor i in range(1, n):\n    left[i] = left[i-1] + d[i-1]\n\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + d[i+1]\n\nans = 0\nfor i in range(n):\n    ans = max(ans, left[i] + right[i])\n\nprint(ans)", "", "\n\ndef solve(arr):\n    n = len(arr)\n    left_sum = [0] * n\n    left_sum[0] = arr[0]\n    for i in range(1, n):\n        left_sum[i] = left_sum[i-1] + arr[i]\n    right_sum = [0] * n\n    right_sum[-1] = arr[-1]\n    for i in range(n-2, -1, -1):\n        right_sum[i] = right_sum[i+1] + arr[i]\n    res = 0\n    for i in range(n):\n        if left_sum[i] == right_sum[i]:\n            res = max(res, left_sum[i])\n    return res\n\nn = int(input())\narr = list(map(int, input().split()))\nprint(solve(arr))", "\n\n#-----Solution-----\n\ndef get_max_sum(n, d):\n    left_sum = 0\n    right_sum = sum(d)\n    max_sum = 0\n    for i in range(n):\n        left_sum += d[i]\n        right_sum -= d[i]\n        if left_sum == right_sum:\n            max_sum = left_sum\n    return max_sum\n\nn = int(input())\nd = list(map(int, input().split()))\nprint(get_max_sum(n, d))", "\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    prefix_sum = [0] * (n + 1)\n    for i in range(n):\n        prefix_sum[i + 1] = prefix_sum[i] + d[i]\n    prefix_sum_set = set(prefix_sum)\n    ans = 0\n    for i in range(n + 1):\n        for j in range(i + 1, n + 1):\n            if prefix_sum[j] - prefix_sum[i] in prefix_sum_set:\n                ans = max(ans, prefix_sum[j] - prefix_sum[i])\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nd = list(map(int, input().split()))\n\n# first part of the array\nsum_1 = 0\n# second part of the array\nsum_2 = sum(d)\n# third part of the array\nsum_3 = 0\n# maximum possible value of sum_1\nmax_sum_1 = 0\n\n# iterate over elements of the array\nfor i in range(n):\n    sum_1 += d[i]\n    sum_2 -= d[i]\n    # if sum_1 is equal to sum_3, update max_sum_1\n    if sum_1 == sum_3:\n        max_sum_1 = max(max_sum_1, sum_1)\n    # if sum_2 is equal to sum_3, update max_sum_1\n    if sum_2 == sum_3:\n        max_sum_1 = max(max_sum_1, sum_1)\n    # sum_3 is equal to sum_1 + sum_2\n    sum_3 = sum_1 + sum_2\n\nprint(max_sum_1)"]