["\n\nS = input()\nif S[:len(S)//2] == S[:len(S)//2:-1]:\n    if S[len(S)//2+1:] == S[len(S)//2+1:][::-1]:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "\n\nimport sys\n\nS = input()\n\nif S[:(len(S)-1)//2] == S[(len(S)+3)//2-1:][::-1] and S == S[::-1]:\n    print('Yes')\nelse:\n    print('No')", "\n\ns = input()\nprint(\"Yes\" if s == s[::-1] and s[:len(s)//2] == s[:len(s)//2][::-1] and s[len(s)//2+1:] == s[len(s)//2+1:][::-1] else \"No\")", "\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\ns = input()\n\nprint('Yes' if isPalindrome(s) and isPalindrome(s[:len(s)//2]) and isPalindrome(s[len(s)//2:]) else 'No')", "\n\nimport sys\n\ndef isPalindrome(string):\n    if(string == string[::-1]):\n        return True\n    else:\n        return False\n\ndef isStrongPalindrome(string):\n    if(isPalindrome(string)):\n        if(isPalindrome(string[0:int((len(string)-1)/2)])):\n            if(isPalindrome(string[int((len(string)+3)/2)-1:len(string)])):\n                return True\n            else:\n                return False\n        else:\n            return False\n    else:\n        return False\n\nif __name__ == '__main__':\n    string = sys.stdin.readline().rstrip()\n    if(isStrongPalindrome(string)):\n        print('Yes')\n    else:\n        print('No')", "\n\nS = input()\nif S == S[::-1] and S[:len(S)//2] == S[:len(S)//2][::-1] and S[(len(S)+3)//2-1:] == S[(len(S)+3)//2-1:][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\ns = input()\n\nif s == s[::-1]:\n    if s[:len(s)//2] == s[:len(s)//2][::-1]:\n        if s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")"]