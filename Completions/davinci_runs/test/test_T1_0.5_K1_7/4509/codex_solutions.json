["\n\ndef not_divisible(n, k):\n\t\"\"\"\n\tReturns the k-th positive integer that is not divisible by n.\n\n\tParameters:\n\tn: int\n\tk: int\n\n\tReturns: int\n\t\"\"\"\n\t# Create a list of positive integers that are not divisible by n.\n\t# Then, return the k-th element of the list.\n\tnumbers = [i for i in range(1, k+1) if i % n != 0]\n\treturn numbers[k-1]\n\n\n# Read the input.\nnum_test_cases = int(input())\n\nfor i in range(num_test_cases):\n\tn, k = map(int, input().split())\n\tprint(not_divisible(n, k))", "\n\n# SOLUTION\n\n# Number of test cases\nt = int(input())\n\n# Iterate over all test cases\nfor i in range(t):\n    # Get the two inputs\n    n, k = [int(s) for s in input().split(\" \")]\n    \n    # Get the number of numbers not divisible by n\n    notDivisible = k // n\n    \n    # If the number is not divisible by n, add 1\n    if k % n == 0:\n        print(n * notDivisible)\n    else:\n        print(n * notDivisible + k % n)", "\n\n# Function to return the kth integer that is not divisible by n\ndef kthNotDivisibleByN(n, k):\n    # The number of integers that are not divisible by n\n    # is equal to the number of integers divisible by n\n    # since there is an equal number of integers in both groups\n    # that are less than n.\n    #\n    # The number of integers divisible by n is the number of\n    # integers in the range [1, n] that are divisible by n\n    # which is n // 1.\n    #\n    # Thus, the number of integers that are not divisible by n is\n    # n // 1.\n    #\n    # The kth integer that is not divisible by n is the sum of\n    # the kth multiple of n // 1 and n // 1.\n    return k * (n // 1) + n // 1\n\n# Read the number of test cases\nt = int(input())\n\n# Iterate over the test cases\nfor i in range(t):\n    # Read the input\n    n, k = map(int, input().split())\n\n    # Display the result\n    print(kthNotDivisibleByN(n, k))", "\n\nfrom math import ceil\n\ndef find_kth_not_divisible(n, k):\n    \"\"\"\n    :param n: positive integer\n    :param k: positive integer\n    :return: the k-th positive integer that is not divisible by n\n    \"\"\"\n    # a = n * (k // n) + 1 # floor\n    a = n * ceil(k / n) + 1 # ceil\n    return a + k - 1\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for i in range(t):\n        n, k = map(int, input().split())\n        print(find_kth_not_divisible(n, k))", "\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    print((k-1)*n+1)", "\n\ndef is_divisible(num, divisor):\n    return num % divisor == 0\n\ndef find_kth_number_not_divisible_by_n(n, k):\n    count = 0\n    num = 1\n    while count < k:\n        if not is_divisible(num, n):\n            count += 1\n        num += 1\n    return num - 1\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        print(find_kth_number_not_divisible_by_n(n, k))\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution\n\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    count = 0\n    num = 1\n    while count < k:\n        if num % n != 0:\n            count += 1\n        if count == k:\n            print(num)\n            break\n        num += 1"]