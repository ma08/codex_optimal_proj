["\n\n# Time Limit Exceeded\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\n\nmin_cost = 1001\nfor i in range(n):\n    c, time = map(int, sys.stdin.readline().split())\n    if time <= t:\n        if c < min_cost:\n            min_cost = c\nif min_cost == 1001:\n    print(\"TLE\")\nelse:\n    print(min_cost)", "\n\n\ndef main():\n    n, t = map(int, input().split())\n    routes = []\n    for _ in range(n):\n        c, ti = map(int, input().split())\n        routes.append((c, ti))\n    routes.sort()\n    for c, ti in routes:\n        if ti <= t:\n            print(c)\n            return\n    print(\"TLE\")\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N, T = map(int, input().split())\n    cost = []\n    time = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        cost.append(c)\n        time.append(t)\n    for i in range(N):\n        if time[i] <= T:\n            print(cost[i])\n            break\n    else:\n        print(\"TLE\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    \"\"\"main function\"\"\"\n    num_route, time_limit = map(int, input().split())\n    route_costs = []\n    for _ in range(num_route):\n        cost, time = map(int, input().split())\n        if time <= time_limit:\n            route_costs.append(cost)\n    if len(route_costs) == 0:\n        print(\"TLE\")\n    else:\n        print(min(route_costs))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, t = map(int, input().split())\ncost_time = [tuple(map(int, input().split())) for _ in range(n)]\ncost_time.sort(key=lambda x: (x[1], x[0]))\n\nans = \"TLE\"\nfor i in range(n):\n    if cost_time[i][1] <= t:\n        ans = str(cost_time[i][0])\n        break\nprint(ans)", "\n\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\n\ncosts = []\nfor _ in range(n):\n    c, t_i = map(int, sys.stdin.readline().split())\n    if t_i <= t:\n        costs.append(c)\n\nif len(costs) == 0:\n    print(\"TLE\")\nelse:\n    print(min(costs))", "\n\nn, t = map(int, input().split())\nc_t = [list(map(int, input().split())) for _ in range(n)]\n\nc_t.sort(key=lambda x: x[1])\n\nfor i, c in enumerate(c_t):\n    if c[1] <= t:\n        print(c[0])\n        break\n    elif i == n-1:\n        print('TLE')"]