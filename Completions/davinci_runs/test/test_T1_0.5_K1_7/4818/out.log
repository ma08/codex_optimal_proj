2022-04-13 23:29:55.824483 """
Professor Zac is trying to finish a collection of tasks during the first week at the start of the term. He knows precisely how long each task will take, down to the millisecond. Unfortunately, it is also Frosh Week. Zacâ€™s office window has a clear view of the stage where loud music is played. He cannot focus on any task when music is blaring.

The event organizers are also very precise. They supply Zac with intervals of time when music will not be playing. These intervals are specified by their start and end times down to the millisecond.

Each task that Zac completes must be completed in one quiet interval. He cannot pause working on a task when music plays (he loses his train of thought). Interstingly, the lengths of the tasks and quiet intervals are such that it is impossible to finish more than one task per quiet interval!

Given a list of times $t_ i$ (in milliseconds) that each task will take and a list of times $\ell _ j$ (in milliseconds) specifying the lengths of the intervals when no music is being played, what is the maximum number of tasks that Zac can complete?

-----Input-----
The first line of input contains a pair of integers $n$ and $m$, where $n$ is the number of tasks and $m$ is the number of time intervals when no music is played. The second line consists of a list of integers $t_1, t_2, \ldots , t_ n$ indicating the length of time of each task. The final line consists of a list of times $\ell _1, \ell _2, \ldots , \ell _ m$ indicating the length of time of each quiet interval when Zac is at work this week.

You may assume that $1 \leq n,m \leq 200000$ and $100000 \leq t_ i, \ell _ j \leq 199999$ for each task $i$ and each quiet interval $j$.

-----Output-----
Output consists of a single line containing a single integer indicating the number of tasks that Zac can accomplish from his list during this first week.

-----Examples-----
Sample Input 1:
5 4
150000 100000 160000 100000 180000
190000 170000 140000 160000
Sample Output 1:
4

Sample Input 2:
4 4
180000 185000 199999 100000
199999 180000 170000 120000
Sample Output 2:
3
"""
2022-04-13 23:29:55.824499 --------------------------
2022-04-13 23:30:28.725294 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    tasks = list(map(int, sys.stdin.readline().split()))\n    intervals = list(map(int, sys.stdin.readline().split()))\n\n    tasks.sort(reverse=True)\n    intervals.sort(reverse=True)\n\n    i, j, count = 0, 0, 0\n\n    while i < n and j < m:\n        if tasks[i] <= intervals[j]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            i += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\n# Cmd + D to print the results in the console\n\n\"\"\"\n-----Solution-----\n\n\"\"\"\n\n# Get the input data\nn, m = map(int, sys.stdin.readline().split())\nt = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\n# Sort the lists\nt.sort()\nl.sort()\n\n# Initialize the variables\ni = 0\nj = 0\ncount = 0\n\n# Loop through the lists\nwhile i < n and j < m:\n    # If the task can be done in the quiet interval\n    if t[i] <= l[j]:\n        # Increment the counters\n        i += 1\n        j += 1\n        count += 1\n    # Otherwise\n    else:\n        # Increment the counter\n        j += 1\n\n# Print the results\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n, m = map(int, input().split())\n    t = map(int, input().split())\n    l = map(int, input().split())\n\n    s = 0\n    i = 0\n    j = 0\n    while i < n and j < m:\n        if t[i] <= l[j]:\n            i += 1\n            s += 1\n        j += 1\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    task_times = sorted(map(int, sys.stdin.readline().split()))\n    quiet_times = sorted(map(int, sys.stdin.readline().split()))\n\n    # print(n, m)\n    # print(task_times)\n    # print(quiet_times)\n\n    i = 0\n    j = 0\n    count = 0\n\n    while i < n and j < m:\n        # print(i, j, count)\n        if quiet_times[j] >= task_times[i]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            j += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# Accepted 2019-10-28\n\nn, m = [int(x) for x in input().split()]\nt = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\n\nt.sort()\nl.sort()\n\ntasks = 0\n\ni = 0\nj = 0\n\nwhile i < n and j < m:\n    if t[i] <= l[j]:\n        tasks += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\n\nprint(tasks)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    task_count, quiet_count = [int(x) for x in input().split()]\n    tasks = [int(x) for x in input().split()]\n    quiet = [int(x) for x in input().split()]\n    tasks.sort()\n    quiet.sort()\n    quiet_index = 0\n    task_index = 0\n    while task_index < task_count and quiet_index < quiet_count:\n        if tasks[task_index] <= quiet[quiet_index]:\n            quiet_index += 1\n        task_index += 1\n    print(quiet_index)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nfrom collections import defaultdict\nfrom sys import stdin\n\nn, m = [int(x) for x in stdin.readline().strip().split()]\ntasks = [int(x) for x in stdin.readline().strip().split()]\nmusic = [int(x) for x in stdin.readline().strip().split()]\n\ntasks = sorted(tasks)\nmusic = sorted(music)\n\ntasks_len = len(tasks)\nmusic_len = len(music)\ntasks_index = 0\nmusic_index = 0\n\nans = 0\nwhile tasks_index < tasks_len and music_index < music_len:\n    task = tasks[tasks_index]\n    if task <= music[music_index]:\n        ans += 1\n        tasks_index += 1\n        music_index += 1\n    else:\n        music_index += 1\n\nprint(ans)"
    }
  ],
  "created": 1649892595,
  "id": "cmpl-4wgip1BZCLEQXh8t4uK8EvfQRNVn6",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 23:30:28.725608 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    tasks = list(map(int, sys.stdin.readline().split()))\n    intervals = list(map(int, sys.stdin.readline().split()))\n\n    tasks.sort(reverse=True)\n    intervals.sort(reverse=True)\n\n    i, j, count = 0, 0, 0\n\n    while i < n and j < m:\n        if tasks[i] <= intervals[j]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            i += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:30:28.725660 REASON stop
2022-04-13 23:30:28.725983 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.725997 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\n# Cmd + D to print the results in the console\n\n\"\"\"\n-----Solution-----\n\n\"\"\"\n\n# Get the input data\nn, m = map(int, sys.stdin.readline().split())\nt = list(map(int, sys.stdin.readline().split()))\nl = list(map(int, sys.stdin.readline().split()))\n\n# Sort the lists\nt.sort()\nl.sort()\n\n# Initialize the variables\ni = 0\nj = 0\ncount = 0\n\n# Loop through the lists\nwhile i < n and j < m:\n    # If the task can be done in the quiet interval\n    if t[i] <= l[j]:\n        # Increment the counters\n        i += 1\n        j += 1\n        count += 1\n    # Otherwise\n    else:\n        # Increment the counter\n        j += 1\n\n# Print the results\nprint(count)"
}
2022-04-13 23:30:28.726149 REASON stop
2022-04-13 23:30:28.726392 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.726403 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n, m = map(int, input().split())\n    t = map(int, input().split())\n    l = map(int, input().split())\n\n    s = 0\n    i = 0\n    j = 0\n    while i < n and j < m:\n        if t[i] <= l[j]:\n            i += 1\n            s += 1\n        j += 1\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:30:28.726441 REASON stop
2022-04-13 23:30:28.736126 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.736173 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    task_times = sorted(map(int, sys.stdin.readline().split()))\n    quiet_times = sorted(map(int, sys.stdin.readline().split()))\n\n    # print(n, m)\n    # print(task_times)\n    # print(quiet_times)\n\n    i = 0\n    j = 0\n    count = 0\n\n    while i < n and j < m:\n        # print(i, j, count)\n        if quiet_times[j] >= task_times[i]:\n            count += 1\n            i += 1\n            j += 1\n        else:\n            j += 1\n\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 23:30:28.736241 REASON stop
2022-04-13 23:30:28.754661 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.754696 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# Accepted 2019-10-28\n\nn, m = [int(x) for x in input().split()]\nt = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\n\nt.sort()\nl.sort()\n\ntasks = 0\n\ni = 0\nj = 0\n\nwhile i < n and j < m:\n    if t[i] <= l[j]:\n        tasks += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\n\nprint(tasks)"
}
2022-04-13 23:30:28.754780 REASON stop
2022-04-13 23:30:28.766570 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.766604 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    task_count, quiet_count = [int(x) for x in input().split()]\n    tasks = [int(x) for x in input().split()]\n    quiet = [int(x) for x in input().split()]\n    tasks.sort()\n    quiet.sort()\n    quiet_index = 0\n    task_index = 0\n    while task_index < task_count and quiet_index < quiet_count:\n        if tasks[task_index] <= quiet[quiet_index]:\n            quiet_index += 1\n        task_index += 1\n    print(quiet_index)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 23:30:28.766679 REASON stop
2022-04-13 23:30:28.767470 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
2022-04-13 23:30:28.767498 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nfrom collections import defaultdict\nfrom sys import stdin\n\nn, m = [int(x) for x in stdin.readline().strip().split()]\ntasks = [int(x) for x in stdin.readline().strip().split()]\nmusic = [int(x) for x in stdin.readline().strip().split()]\n\ntasks = sorted(tasks)\nmusic = sorted(music)\n\ntasks_len = len(tasks)\nmusic_len = len(music)\ntasks_index = 0\nmusic_index = 0\n\nans = 0\nwhile tasks_index < tasks_len and music_index < music_len:\n    task = tasks[tasks_index]\n    if task <= music[music_index]:\n        ans += 1\n        tasks_index += 1\n        music_index += 1\n    else:\n        music_index += 1\n\nprint(ans)"
}
2022-04-13 23:30:28.767582 REASON stop
2022-04-13 23:30:28.768278 test/intro-questions.txt_dir/4818/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4818/solutions.json'
