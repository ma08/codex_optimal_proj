["\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    x.sort()\n\n    # print(x)\n\n    # y = [x[0] - 1]\n    # for i in range(1, n):\n    #     y.append((x[i] + x[i - 1]) // 2)\n    #     y.append(x[i])\n    # y.append(x[-1] + 1)\n    #\n    # print(y)\n\n    y = []\n    for i in range(1, n):\n        y.append((x[i] + x[i - 1]) // 2)\n    y = [x[0] - 1] + y + [x[-1] + 1]\n\n    # print(y)\n\n    res = [y[0]]\n    for i in range(1, len(y)):\n        if len(res) < m and y[i] - y[i - 1] > 1:\n            res.append(y[i - 1] + 1)\n\n    # print(res)\n\n    if len(res) < m:\n        res.append(y[-1] + 1)\n    elif len(res) > m:\n        res = res[:m]\n\n    print(sum(map(lambda x: abs(x), res)))\n    print(*res)\n\nif __name__ == '__main__':\n    main()", "\n\nn, m = tuple(map(int, input().split()))\nx = sorted(map(int, input().split()))\n\ny = []\nfor i in range(m):\n    if i % 2 == 0:\n        y.append(x[i // 2])\n    else:\n        y.append(x[n - 1 - i // 2])\n\nprint(sum(y[i] - y[i-1] for i in range(1, m)))\nprint(*y)", "\n\ndef main():\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    y = []\n    y.append(x[0] - 1)\n    for i in range(m - 2):\n        y.append((x[i] + x[i + 1]) // 2)\n    y.append(x[n - 1] + 1)\n    res = 0\n    for i in range(m):\n        res += abs(y[i] - x[i])\n    res += abs(y[m - 1] - x[n - 1])\n    print(res)\n    print(*y)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\nx.sort()\n\nans = []\n\nfor i in range(m):\n    if i % 2 == 0:\n        ans.append(x[i // 2])\n    else:\n        ans.append(x[n - 1 - i // 2])\n\nprint(sum([abs(i - j) for i, j in zip(ans, ans[1:])]) + abs(ans[0] - x[0]))\nprint(*ans)", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    xs = sorted([int(x) for x in sys.stdin.readline().split()])\n    if m == 1:\n        print(0)\n        print(0)\n        return\n    d = (xs[-1] - xs[0]) / float(m - 1)\n    ys = [xs[0] + i * d for i in range(m)]\n    res = 0\n    for y in ys:\n        res += min(abs(y - x) for x in xs)\n    print(int(res))\n    print(\" \".join(map(str, ys)))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    trees = [int(x) for x in input().split()]\n    trees.sort()\n    res = 0\n    for i in range(m):\n        res += min(abs(trees[0] - i), abs(trees[-1] - i))\n    print(res)\n    for i in range(m):\n        print(i, end=\" \")\n\nif __name__ == '__main__':\n    main()", "\n#Solution\nn,m = map(int, input().split())\ntrees = list(map(int, input().split()))\ntrees.sort()\n\ndef dist(x, y):\n    return abs(x - y)\n\ndef get_sum(arr):\n    return sum([dist(arr[i], trees[i]) for i in range(len(arr))])\n\ndef get_min_sum(arr):\n    new_arr = arr.copy()\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            new_arr[i], new_arr[j] = new_arr[j], new_arr[i]\n            if get_sum(new_arr) < get_sum(arr):\n                arr = new_arr.copy()\n            new_arr = arr.copy()\n    return arr\n\ny = [trees[i] - i for i in range(m)]\ny = get_min_sum(y)\n\nprint(get_sum(y))\nprint(*y)"]