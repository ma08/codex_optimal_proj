2022-04-13 19:30:47.052693 """
You are given positive integers A and B.
Find the K-th largest positive integer that divides both A and B.
The input guarantees that there exists such a number.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq A, B \leq 100
 - The K-th largest positive integer that divides both A and B exists.
 - K \geq 1

-----Input-----
Input is given from Standard Input in the following format:
A B K

-----Output-----
Print the K-th largest positive integer that divides both A and B.

-----Sample Input-----
8 12 2

-----Sample Output-----
2

Three positive integers divides both 8 and 12: 1, 2 and 4.
Among them, the second largest is 2.
"""
2022-04-13 19:30:47.052700 --------------------------
2022-04-13 19:31:05.270333 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline()\n    a, b, k = list(map(int, input.split()))\n    candidates = [i for i in range(1, min(a,b)+1) if a % i == 0 and b % i == 0]\n    print(candidates[-k])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# main\nA, B, K = map(int, input().split())\n\nlarger = max(A, B)\nsmaller = min(A, B)\n\nn = 0\nfor i in range(larger, 0, -1):\n    if larger % i == 0 and smaller % i == 0:\n        n += 1\n        if n == K:\n            print(i)\n            exit()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = list(set(divisor(a) + divisor(b)))\n    divisors.sort(reverse=True)\n    print(divisors[k-1])\n\n\ndef divisor(n):\n    i = 1\n    table = []\n    while i * i <= n:\n        if n % i == 0:\n            table.append(i)\n            table.append(n // i)\n        i += 1\n    table = list(set(table))\n    table.sort()\n    return table\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nfrom math import gcd\n\na, b, k = map(int, input().split())\n\n# Find common divisors by Euclidean algorithm.\ndivisors = []\nd = gcd(a, b)\nfor i in range(1, int(d**0.5) + 1):\n    if d % i == 0:\n        divisors.append(i)\n        divisors.append(d // i)\n\n# Sort by descending order.\ndivisors.sort(reverse=True)\n\n# Print the k-th largest.\nprint(divisors[k - 1])"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\n# a, b, c = map(int, input().split())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\n# a, b, c = map(int, input().split())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\na, b, c = map(int, input().split())\n\nresult = []\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        result.append(i)\nprint(result[-c])"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"main function\"\"\"\n    a, b, k = map(int, input().split())\n    divs = set(get_divisors(a)) & set(get_divisors(b))\n    divs = sorted(divs, reverse=True)\n    print(divs[k-1])\n\n\ndef get_divisors(num):\n    \"\"\"get divisors\"\"\"\n    divs = [1]\n    for i in range(2, num):\n        if num % i == 0:\n            divs.append(i)\n    return divs\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef get_common_divisors(A, B):\n    if A < B:\n        A, B = B, A\n\n    divisors = []\n    for i in range(1, math.ceil(math.sqrt(A))+1):\n        if A % i == 0:\n            if B % i == 0:\n                divisors.append(i)\n            if B % (A//i) == 0 and i != A//i:\n                divisors.append(A//i)\n\n    divisors.sort(reverse=True)\n    return divisors\n\ndef main():\n    A, B, K = map(int, input().split())\n    divisors = get_common_divisors(A, B)\n    print(divisors[K-1])\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649878247,
  "id": "cmpl-4wczPI20shjsAXMgCksod0qJixR1E",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 19:31:05.270583 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline()\n    a, b, k = list(map(int, input.split()))\n    candidates = [i for i in range(1, min(a,b)+1) if a % i == 0 and b % i == 0]\n    print(candidates[-k])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:31:05.270615 REASON stop
2022-04-13 19:31:05.271038 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# main\nA, B, K = map(int, input().split())\n\nlarger = max(A, B)\nsmaller = min(A, B)\n\nn = 0\nfor i in range(larger, 0, -1):\n    if larger % i == 0 and smaller % i == 0:\n        n += 1\n        if n == K:\n            print(i)\n            exit()"
}
2022-04-13 19:31:05.271151 REASON stop
2022-04-13 19:31:05.271556 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\n\ndef main():\n    a, b, k = map(int, sys.stdin.readline().split())\n    divisors = list(set(divisor(a) + divisor(b)))\n    divisors.sort(reverse=True)\n    print(divisors[k-1])\n\n\ndef divisor(n):\n    i = 1\n    table = []\n    while i * i <= n:\n        if n % i == 0:\n            table.append(i)\n            table.append(n // i)\n        i += 1\n    table = list(set(table))\n    table.sort()\n    return table\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:31:05.271607 REASON stop
2022-04-13 19:31:05.290260 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nfrom math import gcd\n\na, b, k = map(int, input().split())\n\n# Find common divisors by Euclidean algorithm.\ndivisors = []\nd = gcd(a, b)\nfor i in range(1, int(d**0.5) + 1):\n    if d % i == 0:\n        divisors.append(i)\n        divisors.append(d // i)\n\n# Sort by descending order.\ndivisors.sort(reverse=True)\n\n# Print the k-th largest.\nprint(divisors[k - 1])"
}
2022-04-13 19:31:05.290354 REASON stop
2022-04-13 19:31:05.302839 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\n# a = int(input())\n# b = int(input())\n# c = int(input())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\n# a, b, c = map(int, input().split())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\n# a, b, c = map(int, input().split())\n#\n# result = []\n# for i in range(1, min(a, b)+1):\n#     if a % i == 0 and b % i == 0:\n#         result.append(i)\n# print(result[-c])\n\na, b, c = map(int, input().split())\n\nresult = []\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        result.append(i)\nprint(result[-c])"
}
2022-04-13 19:31:05.302939 REASON stop
2022-04-13 19:31:05.304728 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"main function\"\"\"\n    a, b, k = map(int, input().split())\n    divs = set(get_divisors(a)) & set(get_divisors(b))\n    divs = sorted(divs, reverse=True)\n    print(divs[k-1])\n\n\ndef get_divisors(num):\n    \"\"\"get divisors\"\"\"\n    divs = [1]\n    for i in range(2, num):\n        if num % i == 0:\n            divs.append(i)\n    return divs\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:31:05.304789 REASON stop
2022-04-13 19:31:05.305637 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef get_common_divisors(A, B):\n    if A < B:\n        A, B = B, A\n\n    divisors = []\n    for i in range(1, math.ceil(math.sqrt(A))+1):\n        if A % i == 0:\n            if B % i == 0:\n                divisors.append(i)\n            if B % (A//i) == 0 and i != A//i:\n                divisors.append(A//i)\n\n    divisors.sort(reverse=True)\n    return divisors\n\ndef main():\n    A, B, K = map(int, input().split())\n    divisors = get_common_divisors(A, B)\n    print(divisors[K-1])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 19:31:05.305722 REASON stop
