2022-04-13 20:05:13.900844 """
There is a square in the xy-plane. The coordinates of its four vertices are (x_1,y_1),(x_2,y_2),(x_3,y_3) and (x_4,y_4) in counter-clockwise order.
(Assume that the positive x-axis points right, and the positive y-axis points up.)
Takahashi remembers (x_1,y_1) and (x_2,y_2), but he has forgot (x_3,y_3) and (x_4,y_4).
Given x_1,x_2,y_1,y_2, restore x_3,y_3,x_4,y_4. It can be shown that x_3,y_3,x_4 and y_4 uniquely exist and have integer values.

-----Constraints-----
 - |x_1|,|y_1|,|x_2|,|y_2| \leq 100
 - (x_1,y_1) â‰  (x_2,y_2)
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
x_1 y_1 x_2 y_2

-----Output-----
Print x_3,y_3,x_4 and y_4 as integers, in this order.

-----Sample Input-----
0 0 0 1

-----Sample Output-----
-1 1 -1 0

(0,0),(0,1),(-1,1),(-1,0) is the four vertices of a square in counter-clockwise order.
Note that (x_3,y_3)=(1,1),(x_4,y_4)=(1,0) is not accepted, as the vertices are in clockwise order.
"""
2022-04-13 20:05:13.900854 --------------------------
2022-04-13 20:05:32.983230 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nx1, y1, x2, y2 = map(int, input().split())\n\nif x1 == x2 and y1 == y2:\n    print(x1, y1, x2, y2)\nelif y1 == y2:\n    print(x1, y1, x2, y1+x1-x2)\nelif x1 == x2:\n    print(x1, y1, x1+y1-y2, y2)\nelse:\n    if (x1-x2)**2 + (y1-y2)**2 != 2 * (x1-x2)*(y1-y2):\n        print(x1, y2, x2, y1)\n    else:\n        print(x1, y2, x2, y2)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3 = x1 + y1 - y2\n    y3 = y1 + x2 - x1\n    x4 = x2 + y1 - y2\n    y4 = y2 + x2 - x1\n    print(x3, y3, x4, y4)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nx1,y1,x2,y2=map(int,input().split())\nx3=y1-y2+x2\ny3=x2-x1+y1\nx4=y3-y2+x2\ny4=x3-x1+y1\nprint(x3,y3,x4,y4)\n\n# Note:\n# 1. The square is a parallelogram, with opposite sides parallel and equal in length.\n# 2. The sum of the interior angles of a square is 360\u00b0.\n# 3. The area of a square is equal to the product of its diagonals.\n# 4. The sum of the distances from any point in a square to the four vertices is constant.\n# 5. The diagonals of a square bisect each other.\n# 6. The diagonals of a square are at right angles.\n# 7. The diagonals of a square bisect each other at right angles.\n# 8. The line segments joining the midpoints of the opposite sides of a square are equal.\n# 9. The line segments joining the midpoints of the opposite sides of a square are perpendicular.\n# 10. The line segments joining the midpoints of the opposite sides of a square bisect each other.\n# 11. The line segments joining the midpoints of the opposite sides of a square bisect each other at right angles."
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nx_1, y_1, x_2, y_2 = map(int, input().split())\n\nx_3 = x_1 + y_1 - y_2\ny_3 = y_1 + x_2 - x_1\nx_4 = x_2 + y_1 - y_2\ny_4 = y_2 + x_2 - x_1\n\nprint(x_3, y_3, x_4, y_4)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n\tx1, y1, x2, y2 = map(int, input().split())\n\tx3, y3 = x1 - y1 + y2, y1 + x1 - x2\n\tx4, y4 = x2 - y1 + y2, y2 + x1 - x2\n\tprint(x3, y3, x4, y4)\n\nif __name__ == '__main__':\n\tmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3 = x1 - y2 + y1\n    y3 = y1 + x2 - x1\n    x4 = x2 - y2 + y1\n    y4 = y2 + x2 - x1\n    print(x3, y3, x4, y4)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nx1, y1, x2, y2 = map(int, input().split())\n\nx3 = x2 + y1 - y2\ny3 = y2 + x2 - x1\nx4 = x3 + y2 - y3\ny4 = y3 + x2 - x1\n\nprint(x3, y3, x4, y4)"
    }
  ],
  "created": 1649880314,
  "id": "cmpl-4wdWksUKWDqXkPWAp4OohM5VFhs8Q",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-13 20:05:32.983498 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nx1, y1, x2, y2 = map(int, input().split())\n\nif x1 == x2 and y1 == y2:\n    print(x1, y1, x2, y2)\nelif y1 == y2:\n    print(x1, y1, x2, y1+x1-x2)\nelif x1 == x2:\n    print(x1, y1, x1+y1-y2, y2)\nelse:\n    if (x1-x2)**2 + (y1-y2)**2 != 2 * (x1-x2)*(y1-y2):\n        print(x1, y2, x2, y1)\n    else:\n        print(x1, y2, x2, y2)"
}
2022-04-13 20:05:32.983534 REASON stop
2022-04-13 20:05:32.983990 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3 = x1 + y1 - y2\n    y3 = y1 + x2 - x1\n    x4 = x2 + y1 - y2\n    y4 = y2 + x2 - x1\n    print(x3, y3, x4, y4)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-13 20:05:32.984126 REASON stop
2022-04-13 20:05:32.984503 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nx1,y1,x2,y2=map(int,input().split())\nx3=y1-y2+x2\ny3=x2-x1+y1\nx4=y3-y2+x2\ny4=x3-x1+y1\nprint(x3,y3,x4,y4)\n\n# Note:\n# 1. The square is a parallelogram, with opposite sides parallel and equal in length.\n# 2. The sum of the interior angles of a square is 360\u00b0.\n# 3. The area of a square is equal to the product of its diagonals.\n# 4. The sum of the distances from any point in a square to the four vertices is constant.\n# 5. The diagonals of a square bisect each other.\n# 6. The diagonals of a square are at right angles.\n# 7. The diagonals of a square bisect each other at right angles.\n# 8. The line segments joining the midpoints of the opposite sides of a square are equal.\n# 9. The line segments joining the midpoints of the opposite sides of a square are perpendicular.\n# 10. The line segments joining the midpoints of the opposite sides of a square bisect each other.\n# 11. The line segments joining the midpoints of the opposite sides of a square bisect each other at right angles."
}
2022-04-13 20:05:32.984553 REASON stop
2022-04-13 20:05:33.007758 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nx_1, y_1, x_2, y_2 = map(int, input().split())\n\nx_3 = x_1 + y_1 - y_2\ny_3 = y_1 + x_2 - x_1\nx_4 = x_2 + y_1 - y_2\ny_4 = y_2 + x_2 - x_1\n\nprint(x_3, y_3, x_4, y_4)"
}
2022-04-13 20:05:33.007864 REASON stop
2022-04-13 20:05:33.037106 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n\tx1, y1, x2, y2 = map(int, input().split())\n\tx3, y3 = x1 - y1 + y2, y1 + x1 - x2\n\tx4, y4 = x2 - y1 + y2, y2 + x1 - x2\n\tprint(x3, y3, x4, y4)\n\nif __name__ == '__main__':\n\tmain()"
}
2022-04-13 20:05:33.037210 REASON stop
2022-04-13 20:05:33.038004 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3 = x1 - y2 + y1\n    y3 = y1 + x2 - x1\n    x4 = x2 - y2 + y1\n    y4 = y2 + x2 - x1\n    print(x3, y3, x4, y4)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-13 20:05:33.038076 REASON stop
2022-04-13 20:05:33.038934 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nx1, y1, x2, y2 = map(int, input().split())\n\nx3 = x2 + y1 - y2\ny3 = y2 + x2 - x1\nx4 = x3 + y2 - y3\ny4 = y3 + x2 - x1\n\nprint(x3, y3, x4, y4)"
}
2022-04-13 20:05:33.038992 REASON stop
