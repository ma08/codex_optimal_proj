["\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef nCr(n,r):\n    f = factorial\n    return f(n) / f(r) / f(n-r)\n\ndef prob(n):\n    return 1 - nCr(n,1) / nCr(n,0)\n\nn = int(input())\nprint(prob(n))", "\n\nimport sys\nimport math\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    prob_self_gift = 0\n    for i in range(num_people):\n        prob_self_gift += 1 / num_people\n    print(prob_self_gift)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nfrom math import factorial\n\ndef prob(n):\n    if n == 1:\n        return 0\n    else:\n        return 1 - (factorial(n) / factorial(n-1)) / n\n\nn = int(sys.stdin.readline())\nprint(prob(n))", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    print(1 - (factorial(N) / factorial(N-1)) / factorial(N))\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n-1)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\ndef nCr(n, r):\n    return factorial(n) / (factorial(r) * factorial(n - r))\n\ndef prob(n):\n    return 1 - (nCr(n, 1) / nCr(n, n))\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(prob(n))\n\nif __name__ == \"__main__\":\n    main('gift1')", "\n\nfrom sys import stdin\nfrom math import factorial as f\n\ndef nCr(n, r):\n\treturn f(n)//(f(r)*f(n-r))\n\ndef prob(n):\n\treturn sum([nCr(n, i) * (i/n)**i * (1 - i/n)**(n-i) for i in range(1, n)])\n\nprint(prob(int(stdin.readline())))", "\n\nimport sys\nimport math\n\nfor line in sys.stdin:\n    n = int(line)\n    p = 1 / n\n    q = 1 - p\n    print(1 - q ** n)"]