["", "\n\nimport sys\nsys.stdin = open('input.in', 'r')\nsys.stdout = open('output.out', 'w')\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + a[i]\n    d = dict()\n    for i in range(n + 1):\n        if s[i] not in d:\n            d[s[i]] = 1\n        else:\n            d[s[i]] += 1\n    ans = 0\n    for i in d:\n        ans += d[i] * (d[i] - 1) // 2\n    print(ans)\n\nt = int(input())\nfor i in range(t):\n    solve()", "\n\nimport sys\n\n# We use a prefix sum array to compute the sum of elements in constant time.\n# We also use a hash map to keep track of the indices of the elements.\n# We iterate through the array and for each element i, we check if i is a special element.\n# If i is a special element, we check if i - 1 is a special element.\n# If i - 1 is a special element, we increment the count of special elements by the number of indices of i - 1 in the hash map.\n# If i - 1 is not a special element, we check if i - 2 is a special element.\n# If i - 2 is a special element, we increment the count of special elements by the number of indices of i - 2 in the hash map.\n# If i - 2 is not a special element, we continue to check if i - 3 is a special element and so on.\n# We stop when we reach a negative number, since the sum of all elements starting from the first element will be positive.\n\ndef calculate_special_element_count(n, a):\n    prefix_sum_array = [a[0]]\n    element_index_map = {a[0]: [0]}\n    special_element_count = 0\n\n    for i in range(1, n):\n        prefix_sum_array.append(prefix_sum_array[i - 1] + a[i])\n        if a[i] not in element_index_map:\n            element_index_map[a[i]] = [i]\n        else:\n            element_index_map[a[i]].append(i)\n\n    for i in range(n):\n        j = 0\n        while True:\n            if i - j < 0:\n                break\n            if prefix_sum_array[i] - prefix_sum_array[i - j] in element_index_map:\n                special_element_count += len(element_index_map[prefix_sum_array[i] - prefix_sum_array[i - j]])\n                break\n            j += 1\n\n    return special_element_count\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        print(calculate_special_element_count(n, a))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = [int(x) for x in sys.stdin.readline().split()]\n        a.append(0)\n        count = 0\n        for j in range(n):\n            if a[j] == a[j+1]:\n                count += 1\n        print(count)\n\nif __name__ == \"__main__\":\n    main()", "\n\n# Solution\n\n#input\nt = int(input())\n\n#main\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 0\n    sums = {}\n    for j in range(n):\n        if a[j] in sums:\n            count += sums[a[j]]\n        for k in range(j+1, n):\n            if a[j] + a[k] not in sums:\n                sums[a[j] + a[k]] = 1\n            else:\n                sums[a[j] + a[k]] += 1\n    print(count)", "\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        n = int(sys.stdin.readline().strip())\n        a = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n        print(special_elements(a, n))\n\ndef special_elements(a, n):\n    # This is a solution to the problem, but it fails the time limit.\n    # It is left here for reference.\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if sum(a[i:j+1]) == a[j]:\n                count += 1\n    return count\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    t = int(input())\n\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        count = 0\n\n        for i in range(n):\n            curr_sum = 0\n            for j in range(i, n):\n                curr_sum += a[j]\n                if curr_sum == a[i]:\n                    count += 1\n                    break\n\n        print(count)\n\nif __name__ == '__main__':\n    main()"]