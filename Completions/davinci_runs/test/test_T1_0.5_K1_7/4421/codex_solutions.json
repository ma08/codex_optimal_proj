["\n\nn, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nl = 0\nr = n - 1\nans = 0\nwhile l < r:\n    if (d[l] + d[r]) % k == 0:\n        ans += 1\n        l += 1\n        r -= 1\n    elif d[l] % k > (k - d[l] % k):\n        r -= 1\n    else:\n        l += 1\n\nprint(ans)", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    d = list(map(int, sys.stdin.readline().split()))\n    d.sort()\n    c = 0\n    for i in range(n):\n        for j in range(n-1, i, -1):\n            if (d[i] + d[j]) % k == 0:\n                c += 1\n                d.pop(j)\n                break\n    print(c)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd = [i % k for i in d]\n\ncount = [0] * k\n\nfor i in d:\n    count[i] += 1\n\nans = 0\nfor i in range(k // 2 + 1):\n    if i == 0:\n        ans += min(count[i], 1)\n    else:\n        ans += max(count[i], count[k - i])\n\nif k % 2 == 0:\n    ans += min(count[k // 2], 1)\n\nprint(ans)", "\n\n# SOLUTION\n\nn, k = map(int, input().split())\nd = list(map(int, input().split()))\nd.sort()\n\ni = 0\nj = n - 1\ncnt = 0\nwhile i < j:\n    if d[i] + d[j] < k:\n        i += 1\n    elif d[i] + d[j] > k:\n        j -= 1\n    else:\n        i += 1\n        j -= 1\n        cnt += 2\n\nprint(cnt)", "\n\ndef main():\n    n,k = map(int, input().split())\n    d = list(map(int, input().split()))\n    d.sort()\n    if k == 1:\n        print(n)\n        return\n    if d[0] > k:\n        print(0)\n        return\n    ans = 0\n    for i in range(n):\n        if d[i]%k == 0:\n            continue\n        d1 = d[i]%k\n        d2 = k - d1\n        j = i+1\n        while(j<n and d[j]%k != d1):\n            j += 1\n        if j<n:\n            ans += 1\n            d[i] = 0\n            d[j] = 0\n            j += 1\n            while (j<n and d[j]%k != d1):\n                j += 1\n            if j<n:\n                ans += 1\n                d[j] = 0\n    for i in range(n):\n        if d[i]%k == 0:\n            ans += 1\n    print(ans)\n\nmain()", "\n\nfrom collections import defaultdict\n\n# read input\nn, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\n# create a dictionary with the number of boxes with each remainder\nremainder_count = defaultdict(int)\nfor num in d:\n    remainder_count[num % k] += 1\n\n# add the best pairs of boxes to the total\ntotal = 0\nfor remainder in remainder_count:\n    if remainder == 0:\n        total += remainder_count[remainder] // 2\n    elif remainder_count[remainder] >= remainder_count[k - remainder]:\n        total += remainder_count[remainder]\n    else:\n        total += remainder_count[k - remainder]\n\n# print the total\nprint(total)", "\n\ndef solve(nums, k):\n    mod = [0] * k\n    for num in nums:\n        mod[num % k] += 1\n    count = min(mod[0], 1)\n    for i in range(1, k//2 + 1):\n        if i != k - i:\n            count += max(mod[i], mod[k-i])\n    if k % 2 == 0:\n        count += 1\n    return count\n\nif __name__ == '__main__':\n    n, k = map(int, input().split())\n    nums = list(map(int, input().split()))\n    print(solve(nums, k))"]