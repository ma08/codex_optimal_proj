2022-04-23 16:19:38.078657 num operations 1
2022-04-23 16:19:38.078678 size on input set 1
2022-04-23 16:19:38.078817 using api key jaanu
2022-04-23 16:19:54.009989 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2)) \n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\n# def distanceBetweenHands(hour, minute):\n#     hour *= 30.0\n#     minute *= 6.0\n\n#     x1 = 3.0 * math.cos(math.radians(hour))\n#     y1 = 3.0 * math.sin(math.radians(hour))\n#     x2 = 4.0 * math.cos(math.radians(minute))\n#     y2 = 4.0 * math.sin(math.radians(minute))\n\n#     return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\n# params = sys.stdin.readline().split()\n# a = int(params[0])\n# b = int(params[1])\n# h = int(params[2])\n# m = int(params[3])\n\n# print(distanceBetweenHands(h, m))\n\n\ndef isPrime(x):\n    if x < 2:\n        return False\n    if x == 2:\n        return True\n    if x % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(x)) + 1, 2):\n        if x % i == 0:\n            return False\n    return True\n\n\ndef countPrimes(a, b):\n    count = 0\n    for i in range(a, b + 1):\n        if isPrime(i):\n            count += 1\n    return count\n\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nprint(countPrimes(a, b))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 5.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour + minute / 12.0))\n    y1 = 3.0 * math.sin(math.radians(hour + minute / 12.0))\n    x2 = 4.0 * math.cos(math.radians(minute)) \n    y2 = 4.0 * math.sin(math.radians(minute)) \n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    }
  ],
  "created": 1650730778,
  "object": "edit"
}
2022-04-23 16:19:54.010272 fix syntax errors 4 ['\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n', '\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2)) \n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n', '\n\nimport sys\nimport math\n\n# def distanceBetweenHands(hour, minute):\n#     hour *= 30.0\n#     minute *= 6.0\n\n#     x1 = 3.0 * math.cos(math.radians(hour))\n#     y1 = 3.0 * math.sin(math.radians(hour))\n#     x2 = 4.0 * math.cos(math.radians(minute))\n#     y2 = 4.0 * math.sin(math.radians(minute))\n\n#     return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\n# params = sys.stdin.readline().split()\n# a = int(params[0])\n# b = int(params[1])\n# h = int(params[2])\n# m = int(params[3])\n\n# print(distanceBetweenHands(h, m))\n\n\ndef isPrime(x):\n    if x < 2:\n        return False\n    if x == 2:\n        return True\n    if x % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(x)) + 1, 2):\n        if x % i == 0:\n            return False\n    return True\n\n\ndef countPrimes(a, b):\n    count = 0\n    for i in range(a, b + 1):\n        if isPrime(i):\n            count += 1\n    return count\n\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nprint(countPrimes(a, b))\n', '\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 5.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour + minute / 12.0))\n    y1 = 3.0 * math.sin(math.radians(hour + minute / 12.0))\n    x2 = 4.0 * math.cos(math.radians(minute)) \n    y2 = 4.0 * math.sin(math.radians(minute)) \n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n']
2022-04-23 16:19:54.010318 size on output set 4
2022-04-23 16:19:54.010330 num operations 1
2022-04-23 16:19:54.010337 size on input set 1
2022-04-23 16:19:54.010484 using api key sunu
2022-04-23 16:19:56.622554 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u5165\u529b\nimport math\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n# \u5165\u529b\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    },
    {
      "index": 2,
      "text": "\n# \u5165\u529b\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    },
    {
      "index": 3,
      "text": "\n# \u5165\u529b\n\nimport math\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    }
  ],
  "created": 1650730794,
  "object": "edit"
}
2022-04-23 16:19:56.622754 fix syntax errors 4 ['\n# 入力\nimport math\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n', '\nimport math\n# 入力\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n', '\n# 入力\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n', '\n# 入力\n\nimport math\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n']
2022-04-23 16:19:56.622891 size on output set 4
2022-04-23 16:19:56.622906 num operations 1
2022-04-23 16:19:56.622912 size on input set 1
2022-04-23 16:19:56.623038 using api key jaanu
2022-04-23 16:20:03.132921 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)  # \u6642\u9593\u91dd\u306e\u89d2\u5ea6\nrad_m = 2 * math.pi * (M / 60)  # \u5206\u91dd\u306e\u89d2\u5ea6\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)  # \u6642\u8a08\u306e\u89d2\u5ea6\nrad_m = 2 * math.pi * (M / 60)  # \u5206\u91dd\u306e\u89d2\u5ea6\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    }
  ],
  "created": 1650730796,
  "object": "edit"
}
2022-04-23 16:20:03.133185 fix syntax errors 4 ['# coding: utf-8\n\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)  # 時間針の角度\nrad_m = 2 * math.pi * (M / 60)  # 分針の角度\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n', '\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n', '\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)  # 時計の角度\nrad_m = 2 * math.pi * (M / 60)  # 分針の角度\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n', '\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n']
2022-04-23 16:20:03.133233 size on output set 3
