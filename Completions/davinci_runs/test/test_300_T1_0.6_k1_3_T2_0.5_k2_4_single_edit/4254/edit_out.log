2022-04-23 17:23:28.711592 num operations 1
2022-04-23 17:23:28.711614 size on input set 1
2022-04-23 17:23:28.711763 using api key jaanu
2022-04-23 17:23:33.193950 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nif(N % 2 == 0):\n    print(\"White\")\nelse:\n    print(\"Black\")\n"
    },
    {
      "index": 1,
      "text": "\nA, B, C = map(int, input().split())\nif(A < C and C < B):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\nS, W = map(int, input().split())\nif(W >= S):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    },
    {
      "index": 3,
      "text": "\nS, W = map(int, input().split()) \nif(W >= S): \n    print(\"unsafe\") \nelse: \n    print(\"safe\") \n"
    }
  ],
  "created": 1650734608,
  "object": "edit"
}
2022-04-23 17:23:33.194186 fix syntax errors 4 ['\n\nN = int(input())\nif(N % 2 == 0):\n    print("White")\nelse:\n    print("Black")\n', '\nA, B, C = map(int, input().split())\nif(A < C and C < B):\n    print("Yes")\nelse:\n    print("No")\n', '\nS, W = map(int, input().split())\nif(W >= S):\n    print("unsafe")\nelse:\n    print("safe")\n', '\nS, W = map(int, input().split()) \nif(W >= S): \n    print("unsafe") \nelse: \n    print("safe") \n']
2022-04-23 17:23:33.194212 size on output set 4
2022-04-23 17:23:33.194223 num operations 1
2022-04-23 17:23:33.194228 size on input set 1
2022-04-23 17:23:33.194358 using api key jaanu
2022-04-23 17:23:37.196623 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS, W = map(int, input().split())\n\nif W >= S: print(\"unsafe\")\nelse: print(\"safe\")\n"
    },
    {
      "index": 1,
      "text": "\n\"\"\"\nS, W = map(int, input().split())\n\nif W >= S:\n    print(\"unsafe\")\nelse:\n\"\"\"\nprint(\"unsafe\" if W >= S else \"safe\")\n    print(\"safe\")\n"
    },
    {
      "index": 2,
      "text": "\nS, W = map(int, input().split())\n\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    },
    {
      "index": 3,
      "text": "\n\nS, W = map(int, input().split())  # \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n\nif W >= S:  # \u6761\u4ef6\u5206\u5c90\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    }
  ],
  "created": 1650734613,
  "object": "edit"
}
2022-04-23 17:23:37.196842 fix syntax errors 4 ['\nS, W = map(int, input().split())\n\nif W >= S: print("unsafe")\nelse: print("safe")\n', '\n"""\nS, W = map(int, input().split())\n\nif W >= S:\n    print("unsafe")\nelse:\n"""\nprint("unsafe" if W >= S else "safe")\n    print("safe")\n', '\nS, W = map(int, input().split())\n\nif W >= S:\n    print("unsafe")\nelse:\n    print("safe")\n', '\n\nS, W = map(int, input().split())  # 入力を受け取る\n\nif W >= S:  # 条件分岐\n    print("unsafe")\nelse:\n    print("safe")\n']
2022-04-23 17:23:37.196911 size on output set 4
2022-04-23 17:23:37.196941 num operations 1
2022-04-23 17:23:37.196952 size on input set 1
2022-04-23 17:23:37.197148 using api key kouti
2022-04-23 17:23:41.941907 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())  # \uac15\uc218\ub7c9\uacfc \ub099\ub8b0 \ubc1c\uc0dd\uc5ec\ubd80\n\nif S <= W:  # \uac15\uc218\ub7c9\uc774 \ub099\ub8b0 \ubc1c\uc0dd\uc5ec\ubd80\ubcf4\ub2e4 \uc791\uc744 \ub54c\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W: \n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n"
    }
  ],
  "created": 1650734617,
  "object": "edit"
}
2022-04-23 17:23:41.942119 fix syntax errors 4 ['\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())  # 강수량과 낙뢰 발생여부\n\nif S <= W:  # 강수량이 낙뢰 발생여부보다 작을 때\n    print("unsafe")\nelse:\n    print("safe")\n', '\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W: \n    print("unsafe")\nelse:\n    print("safe")\n', '\nimport sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W:\n    print("unsafe")\nelse:\n    print("safe")\n', 'import sys\n\nS, W = map(int, sys.stdin.readline().split())\n\nif S <= W:\n    print("unsafe")\nelse:\n    print("safe")\n']
2022-04-23 17:23:41.942151 size on output set 4
