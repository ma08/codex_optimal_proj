2022-04-23 16:25:12.727919 num operations 1
2022-04-23 16:25:12.727940 size on input set 1
2022-04-23 16:25:12.728076 using api key sunu
2022-04-23 16:25:19.948037 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef findPairs(arr, n, m):\n    ans = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if m == arr[i] + arr[j]:\n                ans += 1\n    return ans\n\n\nn, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nprint(findPairs(arr, n, m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == arr[(i+j)//2] and i != j:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n"
    },
    {
      "index": 2,
      "text": "\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i,n):\n            if m == arr[(i+j)//2]:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == arr[(i+j)//2] and i!=j:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n"
    }
  ],
  "created": 1650731112,
  "object": "edit"
}
2022-04-23 16:25:19.948294 fix syntax errors 4 ['\n\ndef findPairs(arr, n, m):\n    ans = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if m == arr[i] + arr[j]:\n                ans += 1\n    return ans\n\n\nn, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nprint(findPairs(arr, n, m))\n', '\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == arr[(i+j)//2] and i != j:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n', '\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i,n):\n            if m == arr[(i+j)//2]:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n', '\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == arr[(i+j)//2] and i!=j:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n']
2022-04-23 16:25:19.948328 size on output set 4
2022-04-23 16:25:19.948340 num operations 1
2022-04-23 16:25:19.948345 size on input set 1
2022-04-23 16:25:19.948500 using api key sunu
2022-04-23 16:25:25.534818 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, p):\n    dp = [0] * (n + 2)\n\n    for i in range(n):\n        for j in range(i + 1, n + 2):\n            if p[j - 1] == p[i]:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, p))\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    },
    {
      "index": 3,
      "text": "\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    }
  ],
  "created": 1650731119,
  "object": "edit"
}
2022-04-23 16:25:25.535061 fix syntax errors 4 ['\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n', '\n\ndef solve(n, p):\n    dp = [0] * (n + 2)\n\n    for i in range(n):\n        for j in range(i + 1, n + 2):\n            if p[j - 1] == p[i]:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n = int(input())\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, p))\n', '\n\n\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n', '\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n']
2022-04-23 16:25:25.535096 size on output set 3
2022-04-23 16:25:25.535109 num operations 1
2022-04-23 16:25:25.535114 size on input set 1
2022-04-23 16:25:25.535253 using api key soukgp
2022-04-23 16:25:35.423179 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * \\\n            same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n"
    },
    {
      "index": 2,
      "text": "\n\ndef build_sorted_list(n):\n    sorted_list = [0] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 1)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    same_elements_count = [0] * (n + 1)\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * (n - i - same_elements_count[sorted_list_position + 1])\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position]\n        same_elements_count[sorted_list_position] += 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650731125,
  "object": "edit"
}
2022-04-23 16:25:35.423477 fix syntax errors 4 ["\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * \\\n            same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n", '\n', "\n\ndef build_sorted_list(n):\n    sorted_list = [0] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 1)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    same_elements_count = [0] * (n + 1)\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * (n - i - same_elements_count[sorted_list_position + 1])\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position]\n        same_elements_count[sorted_list_position] += 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 16:25:35.423522 size on output set 4
