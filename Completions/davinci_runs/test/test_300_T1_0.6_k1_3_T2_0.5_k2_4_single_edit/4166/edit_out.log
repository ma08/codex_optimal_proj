2022-04-23 16:50:05.751252 num operations 1
2022-04-23 16:50:05.751274 size on input set 1
2022-04-23 16:50:05.751423 using api key soukgp
2022-04-23 16:50:09.482212 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[i]:\n    print(number)\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[0]:\n    print(''.join(str(i) for i in number))\nelse:\n    print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[i][1]:\n    print(number)\nelse:\n    print(-1)\n"
    },
    {
      "index": 3,
      "text": "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[0]:\n    print(str(number))\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1650732605,
  "object": "edit"
}
2022-04-23 16:50:09.482492 fix syntax errors 4 ['\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[i]:\n    print(number)\nelse:\n    print(-1)\n', "\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[0]:\n    print(''.join(str(i) for i in number))\nelse:\n    print(-1)\n", '\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[i][1]:\n    print(number)\nelse:\n    print(-1)\n', '\n\n#The number of digits\nN = int(input())\n#The number of constraints\nM = int(input())\n#List of constraints\nconstraints = []\nfor i in range(M):\n    constraints.append([int(x) for x in input().split()])\n\n#Determine the least possible number\nnumber = [0] * N\nfor i in range(M):\n    number[constraints[i][0] - 1] = constraints[i][1]\n\n#If the number is less than all constraints\nif number < constraints[0]:\n    print(str(number))\nelse:\n    print(-1)\n']
2022-04-23 16:50:09.482528 size on output set 4
2022-04-23 16:50:09.482539 num operations 1
2022-04-23 16:50:09.482544 size on input set 1
2022-04-23 16:50:09.482672 using api key sunu
2022-04-23 16:50:15.747631 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s-1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0 and n != 1:\n            a[i] = 1\n        print(a[i], end=\"\")\n    print(\"\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * (n+1)\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s] = c\n    for i in range(n+1):\n        if i == 0 and a[i] == 0:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end=\"\")\n        else:\n            print(a[i], end=\"\")\n    print(\"\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s-1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end=\"\")\n        else:\n            print(a[i], end=\"\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s - 1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0 and n != 1:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end=\"\")\n        else:\n            print(a[i], end=\"\")\n    print(\"\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650732609,
  "object": "edit"
}
2022-04-23 16:50:15.747835 fix syntax errors 4 ['\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s-1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0 and n != 1:\n            a[i] = 1\n        print(a[i], end="")\n    print("")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * (n+1)\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s] = c\n    for i in range(n+1):\n        if i == 0 and a[i] == 0:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end="")\n        else:\n            print(a[i], end="")\n    print("")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s-1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end="")\n        else:\n            print(a[i], end="")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        s, c = map(int, input().split())\n        a[s - 1] = c\n    for i in range(n):\n        if i == 0 and a[i] == 0 and n != 1:\n            print(-1)\n            return\n        elif i == 0 and a[i] != 0:\n            print(a[i], end="")\n        else:\n            print(a[i], end="")\n    print("")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-23 16:50:15.747872 size on output set 4
2022-04-23 16:50:15.747883 num operations 1
2022-04-23 16:50:15.747996 size on input set 1
2022-04-23 16:50:15.748132 using api key sunu
2022-04-23 16:50:26.194109 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -*- coding: utf-8 -*-\n\n# Copyright (c) 2019 fuyuno\n# https://github.com/fuyuno/weekly-contest-101\n\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\n\nimport sys\nimport os\nfrom collections import defaultdict\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\n\nans = 0\nfor i in range(N):\n    ans += A[i]\n    ans -= 1\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650732615,
  "object": "edit"
}
2022-04-23 16:50:26.194384 fix syntax errors 4 ['\n# -*- coding: utf-8 -*-\n\n# Copyright (c) 2019 fuyuno\n# https://github.com/fuyuno/weekly-contest-101\n\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n', '\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n', "# coding: utf-8\n\n\nimport sys\nimport os\nfrom collections import defaultdict\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\n\nans = 0\nfor i in range(N):\n    ans += A[i]\n    ans -= 1\nprint(ans)\n", '\nN, M = map(int, input().split())\nfor i in range(10 ** N):\n    if all(str(i).zfill(N)[s - 1] == str(c) for s, c in (map(int, input().split()) for _ in range(M))):\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-23 16:50:26.194425 size on output set 3
