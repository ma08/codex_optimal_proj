2022-04-23 15:55:03.760828 num operations 1
2022-04-23 15:55:03.760847 size on input set 1
2022-04-23 15:55:03.761051 using api key sunu
2022-04-23 15:55:07.307037 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\" * (x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + \"0\"*(x-y)\n    return num.count('0')\n\nif __name__ == \"__main__\":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n"
    }
  ],
  "created": 1650729303,
  "object": "edit"
}
2022-04-23 15:55:07.307439 fix syntax errors 4 ['\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0" * (x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0"*(x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n', '\nimport sys\n\ndef get_min_operations(n, x, y, num):\n    if x < y:\n        num = num[:x]\n    else:\n        num = num[:x] + "0"*(x-y)\n    return num.count(\'0\')\n\nif __name__ == "__main__":\n    n, x, y = map(int, sys.stdin.readline().strip().split())\n    num = sys.stdin.readline().strip()\n    print(get_min_operations(n, x, y, num))\n']
2022-04-23 15:55:07.307490 size on output set 3
2022-04-23 15:55:07.307506 num operations 1
2022-04-23 15:55:07.307513 size on input set 1
2022-04-23 15:55:07.307676 using api key jaanu
2022-04-23 15:55:10.515189 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650729307,
  "object": "edit"
}
2022-04-23 15:55:10.515429 fix syntax errors 4 ["\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    num = list(map(int, sys.stdin.readline().split()))\n    if num[:x+1] == [1] + [0]*x:\n        print 0\n        return\n    if num[:x+1] == [1] + [1]*x:\n        print 1\n        return\n    if num[:y+1] == [1] + [0]*y:\n        print 1\n        return\n    if num[:y+1] == [1] + [1]*y:\n        print 0\n        return\n    for i in xrange(y+1,x+1):\n        if num[i] == 0:\n            print 2\n            return\n    print 1\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 15:55:10.515546 size on output set 1
2022-04-23 15:55:10.515559 num operations 1
2022-04-23 15:55:10.515565 size on input set 1
2022-04-23 15:55:10.515686 using api key jaanu
2022-04-23 15:55:13.802444 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    },
    {
      "index": 3,
      "text": "\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1650729310,
  "object": "edit"
}
2022-04-23 15:55:13.802663 fix syntax errors 4 ['n, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y:x+1]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n', '\n\nn, x, y = [int(x) for x in input().split()]\ns = input()\n\nif int(s[x-y-1:x]) == 0:\n    print(1)\nelse:\n    print(0)\n']
2022-04-23 15:55:13.802689 size on output set 3
