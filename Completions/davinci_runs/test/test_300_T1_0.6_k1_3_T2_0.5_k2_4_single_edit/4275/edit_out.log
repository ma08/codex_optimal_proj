2022-04-23 17:31:17.487948 num operations 1
2022-04-23 17:31:17.487970 size on input set 1
2022-04-23 17:31:17.488130 using api key soukgp
2022-04-23 17:31:29.755269 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# import sys\n#\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n#\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n#\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get Inputs\ns1 = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\n# Check if s2 is substring of s1\nif s2 in s1:\n    print('Yes') # Print Yes if true\nelse:\n    print('No') # Print No if false\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650735077,
  "object": "edit"
}
2022-04-23 17:31:29.755516 fix syntax errors 4 ["\n#\n# import sys\n#\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n#\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n#\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n", "\n\nimport sys\n\n# Get Inputs\ns1 = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\n# Check if s2 is substring of s1\nif s2 in s1:\n    print('Yes') # Print Yes if true\nelse:\n    print('No') # Print No if false\n", "\nimport sys\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n\n# # Get Input\n# s = sys.stdin.readline().rstrip()\n\n# # Split Input\n# s1 = s[0:3]\n# s2 = s[3:6]\n\n# # Check if coffee-like\n# if s1[1] == s1[2] and s2[0] == s2[1]:\n#     print('Yes')\n# else:\n#     print('No')\n\n# Get Input\ns = sys.stdin.readline().rstrip()\n\n# Split Input\ns1 = s[0:3]\ns2 = s[3:6]\n\n# Check if coffee-like\nif s1[1] == s1[2] and s2[0] == s2[1]:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-23 17:31:29.755551 size on output set 4
2022-04-23 17:31:29.755561 num operations 1
2022-04-23 17:31:29.755567 size on input set 1
2022-04-23 17:31:29.755692 using api key kouti
2022-04-23 17:31:33.654584 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input().split()\nif S[0][2] == S[0][3] and S[0][4] == S[0][5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 2,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650735089,
  "object": "edit"
}
2022-04-23 17:31:33.654802 fix syntax errors 4 ['\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n', '\n\nS = input().split()\nif S[0][2] == S[0][3] and S[0][4] == S[0][5]:\n    print("Yes")\nelse:\n    print("No")\n', "\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print('Yes')\nelse:\n    print('No')\n", '\nS = input()\nif S[2] == S[3] and S[4] == S[5]:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-23 17:31:33.654826 size on output set 3
2022-04-23 17:31:33.654837 num operations 1
2022-04-23 17:31:33.654909 size on input set 1
2022-04-23 17:31:33.655046 using api key soukgp
2022-04-23 17:31:37.303066 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[0] == S[1] and S[2] == S[3] and S[0] == S[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650735093,
  "object": "edit"
}
2022-04-23 17:31:37.303274 fix syntax errors 4 ['\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    # input\n    S = input()\n\n    if S[0] == S[1] and S[2] == S[3] and S[0] == S[2]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # input\n    S = input()\n\n    if S[2] == S[3] and S[4] == S[5]:\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 17:31:37.303302 size on output set 2
