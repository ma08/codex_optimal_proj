2022-04-23 16:54:14.540889 num operations 1
2022-04-23 16:54:14.540944 size on input set 1
2022-04-23 16:54:14.541099 using api key sunu
2022-04-23 16:54:18.686783 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print(0)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650732854,
  "object": "edit"
}
2022-04-23 16:54:18.687052 fix syntax errors 4 ["\n\ndef main():\n    print(0)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 16:54:18.687085 size on output set 3
2022-04-23 16:54:18.687096 num operations 1
2022-04-23 16:54:18.687102 size on input set 1
2022-04-23 16:54:18.687228 using api key derek
2022-04-23 16:54:23.460646 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list))))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda y: y <= x, coord_list))))\n"
    },
    {
      "index": 2,
      "text": "\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list))))\n"
    },
    {
      "index": 3,
      "text": "\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list)))) \n"
    }
  ],
  "created": 1650732858,
  "object": "edit"
}
2022-04-23 16:54:23.460835 fix syntax errors 4 ['\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list))))\n', '\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda y: y <= x, coord_list))))\n', '\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list))))\n', '\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda x: x <= x, coord_list)))) \n']
2022-04-23 16:54:23.460879 size on output set 3
2022-04-23 16:54:23.460912 num operations 1
2022-04-23 16:54:23.460920 size on input set 1
2022-04-23 16:54:23.461057 using api key soukgp
2022-04-23 16:54:26.262136 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n    else:\n        break\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n"
    },
    {
      "index": 2,
      "text": "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n"
    },
    {
      "index": 3,
      "text": "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n"
    }
  ],
  "created": 1650732863,
  "object": "edit"
}
2022-04-23 16:54:26.262512 fix syntax errors 4 ['\n\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n    else:\n        break\nprint(count)\n', '\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n', '\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n', '\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n']
2022-04-23 16:54:26.262545 size on output set 2
