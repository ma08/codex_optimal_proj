2022-04-23 16:25:35.826919 num operations 1
2022-04-23 16:25:35.826939 size on input set 1
2022-04-23 16:25:35.827079 using api key sunu
2022-04-23 16:25:45.572059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    print(n)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650731135,
  "object": "edit"
}
2022-04-23 16:25:45.572337 fix syntax errors 4 ['\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    print(n)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    b = [int(x) for x in input().split()]\n\n    if n <= 2:\n        print(0)\n        return\n\n    b.sort()\n\n    min_diff = b[1] - b[0]\n    max_diff = b[1] - b[0]\n    for i in range(1, n - 1):\n        diff = b[i + 1] - b[i]\n        if diff < min_diff:\n            min_diff = diff\n        if diff > max_diff:\n            max_diff = diff\n\n    if min_diff == max_diff:\n        print(0)\n        return\n\n    if max_diff - min_diff > 1:\n        print(-1)\n        return\n\n    if min_diff == 0:\n        print(1)\n        return\n\n    count = 0\n    for i in range(n - 1):\n        diff = b[i + 1] - b[i]\n        if diff == min_diff + 1:\n            count += 1\n        elif diff == min_diff - 1:\n            count += 1\n            b[i] -= 1\n        elif diff == min_diff:\n            continue\n        else:\n            print(-1)\n            return\n\n    for i in range(n - 1):\n        if b[i + 1] - b[i] != min_diff:\n            print(-1)\n            return\n\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 16:25:45.572399 size on output set 2
2022-04-23 16:25:45.572411 num operations 1
2022-04-23 16:25:45.572417 size on input set 1
2022-04-23 16:25:45.572542 using api key kouti
2022-04-23 16:25:52.128055 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef is_arithmetic_progression(arr, n):\n    return n == 1 or len(set([arr[i+1] - arr[i] for i in range(n-1)])) == 1\n\ndef min_changes(arr, n):\n    if n == 2:\n        return 0\n    if n == 3:\n        return -1\n\n    if is_arithmetic_progression(arr, n):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr, n)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i + 1] - arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    },
    {
      "index": 3,
      "text": "\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n"
    }
  ],
  "created": 1650731145,
  "object": "edit"
}
2022-04-23 16:25:52.128348 fix syntax errors 4 ['\n\ndef is_arithmetic_progression(arr, n):\n    return n == 1 or len(set([arr[i+1] - arr[i] for i in range(n-1)])) == 1\n\ndef min_changes(arr, n):\n    if n == 2:\n        return 0\n    if n == 3:\n        return -1\n\n    if is_arithmetic_progression(arr, n):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr, n)\n', '\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr) - 1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n', '\n\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i + 1] - arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n', '\ndef is_arithmetic_progression(arr):\n    return len(set(arr)) == 1 or len(set([arr[i+1] - arr[i] for i in range(len(arr)-1)])) == 1\n\ndef min_changes(arr):\n    if len(arr) == 2:\n        return 0\n    if len(arr) == 3:\n        return -1\n\n    if is_arithmetic_progression(arr):\n        return 0\n    else:\n        return 1\n\nif __name__ == "__main__":\n    n = int(raw_input())\n    arr = list(map(int, raw_input().split()))\n    print min_changes(arr)\n']
2022-04-23 16:25:52.128386 size on output set 4
2022-04-23 16:25:52.128398 num operations 1
2022-04-23 16:25:52.128404 size on input set 1
2022-04-23 16:25:52.128553 using api key jaanu
2022-04-23 16:25:59.715168 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, sequence):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i - 1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 2,
      "text": "\n#\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n#  file.py\n#  \n#  Copyright 2020 contributors of cardgame\n#  \n#  This file is part of cardgame.\n#\n#  cardgame is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  cardgame is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with cardgame.  If not, see <http://www.gnu.org/licenses/>.\n#\n\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"
    }
  ],
  "created": 1650731152,
  "object": "edit"
}
2022-04-23 16:25:59.715466 fix syntax errors 4 ["\ndef solve(n, sequence):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i - 1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "\n#\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n#  file.py\n#  \n#  Copyright 2020 contributors of cardgame\n#  \n#  This file is part of cardgame.\n#\n#  cardgame is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  cardgame is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with cardgame.  If not, see <http://www.gnu.org/licenses/>.\n#\n\n\ndef solve(n, sequence):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        diff = sequence[1] - sequence[0]\n        i = 2\n        while i < n:\n            if sequence[i] - sequence[i-1] != diff:\n                return -1\n            i += 1\n        return 0\n\n\nif __name__ == '__main__':\n    n = int(input())\n    sequence = [int(x) for x in input().split()]\n    print(solve(n, sequence))\n"]
2022-04-23 16:25:59.715519 size on output set 4
