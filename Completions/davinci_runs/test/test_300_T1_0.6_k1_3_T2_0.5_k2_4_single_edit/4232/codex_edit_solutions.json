["from sys import stdin\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else -1)\n", "#!/usr/bin/env python\n\nimport os\nimport sys\n\n# file = open(\"/etc/passwd\", \"r\")\n\n# for line in file:\n#     print(line)\n\n# file.close()\n\nwith open(\"/etc/passwd\", \"r\") as file:\n    for line in file:\n        print(line)\n\nfile.close()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    if n == k:\n        print(0)\n    else:\n        l = list(map(int, input().split()))\n        l.sort()\n        if k == 0:\n            print(1)\n            return\n        if k == n:\n            print(l[-1])\n            return\n        if l[k-1] == l[k]:\n            print(-1)\n            return\n        print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    if k == 0:\n        print(1)\n        return\n    if k == n:\n        print(l[-1])\n        return\n    if l[k-1] == l[k]:\n        print(-1)\n        return\n    print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else -1)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    if k == 0:\n        print(l[0])\n        return\n    if k == n:\n        print(l[-1])\n        return\n    if l[k-1] == l[k]:\n        print(-1)\n        return\n    print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "var fs = require('fs');\n\nvar data = fs.readFileSync('input.txt');\n\nconsole.log(data.toString());\nconsole.log(\"Program Ended\");\n", "from sys import stdin\nfrom bisect import bisect_left\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else -1)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    if k == 0:\n        print(1)\n        return\n    if k == n-1:\n        print(l[-1])\n        return\n    if l[k-1] == l[k]:\n        print(-1)\n        return\n    print(l[k-1])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\nimport os\nimport re\n\n\n\ndef is_binary(filename):\n    \"\"\"Return true if the given filename appears to be binary.\n    File is considered to be binary if it contains a NULL byte.\n    FIXME: This approach incorrectly reports UTF-16 as binary.\n    \"\"\"\n    with open(filename, 'rb') as f:\n        for block in f:\n            if '\\0' in block:\n                return True\n    return False\n\n\ndef is_text_file(filename):\n    import mimetypes\n    return mimetypes.guess_type(filename)[0] == 'text/plain'\n\n\ndef is_image_file(filename):\n    import mimetypes\n    return mimetypes.guess_type(filename)[0] in ['image/jpeg', 'image/png']\n\n\ndef is_music_file(filename):\n    import mimetypes\n    return mimetypes.guess_type(filename)[0] in ['audio/mpeg', 'audio/mp4']\n\n\ndef is_video_file(filename):\n    import mimetypes\n    return mimetypes.guess_type(filename)[0] in ['video/mp4']\n\n\n\n\ndef main():\n    print is_text_file('text.txt')\n    print is_text_file('text.pdf')\n    print is_image_file('image.jpg')\n    print is_image_file('image.txt')\n    print is_music_file('music.mp3')\n    print is_music_file('music.txt')\n    print is_video_file('video.mp4')\n    print is_video_file('video.txt')\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\nfrom bisect import bisect_left\nn, k = map(int, stdin.readline().split())\na = sorted(map(int, stdin.readline().split()))\n\nprint(a[k - 1] if k else None)\n"]