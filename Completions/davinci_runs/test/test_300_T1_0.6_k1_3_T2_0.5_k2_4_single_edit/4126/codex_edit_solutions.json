["\ns = raw_input()\n\nif s == s[::-1]:\n    if s[:(len(s)-1)//2] == s[:(len(s)-1)//2][::-1]:\n        if s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n            print('Yes')\n            exit()\nprint('No')\n", "\ns = list(input())\n\nif s == s[::-1] and s[:(len(s)-1)//2] == s[:(len(s)-1)//2][::-1] and s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n    print('Yes')\n    exit()\nelse:\n    print('No')\n", "\n\ns = input()\n\nif s == s[::-1] and s[0:int((len(s)-1)/2)] == s[0:int((len(s)-1)/2)][::-1] and s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1] and s[int((len(s)+1)/2)-1:] == s[int((len(s)+1)/2)-1:][::-1]:\n    print('Yes')\nelse:\n    print('No')\n", "\ns = input()\n\nif s == s[::-1]:\n    if s[:(len(s)-1)//2] == s[:(len(s)-1)//2][::-1] and s[(len(s)+3)//2-1:] == s[(len(s)+3)//2-1:][::-1]:\n            print('Yes')\n            exit()\nprint('No')\n", "\n\ns = input()\n\nprint(\"Yes\" if s == s[::-1] and s[:int((len(s)-1)/2)] == s[:int((len(s)-1)/2)][::-1] and s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1] else \"No\") \n", "\nn, m = map(int, input().split())\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nb = []\nfor _ in range(m):\n    b.append(int(input()))\n\n\nfor i in range(n):\n    c = 0\n    for j in range(m):\n        c += a[i][j] * b[j]\n    print(c)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans ^= a[i]\n\nfor i in range(n):\n    print(ans ^ a[i])\n", "\n\ns = input()\n\nif s == s[::-1] and s[0:int((len(s)-1)/2)] == s[0:int((len(s)-1)/2)][::-1] and s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1] :\n    print('Yes')\nelse:\n    print('No')\n", "\ns = input()\n\nprint(\"Yes\" if s == s[::-1] and s[:int((len(s)-1)/2)] == s[:int((len(s)-1)/2)][::-1] and s[int((len(s)+3)/2)-1:] == s[int((len(s)+3)/2)-1:][::-1] else \"No\")\n"]