2022-04-23 17:37:42.999801 num operations 1
2022-04-23 17:37:42.999822 size on input set 1
2022-04-23 17:37:42.999971 using api key kouti
2022-04-23 17:37:46.095154 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\n\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N / (2 * D + 1)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650735463,
  "object": "edit"
}
2022-04-23 17:37:46.095402 fix syntax errors 4 ['import math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == "__main__":\n    main()\n', 'import math\n\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N/(2*D+1)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N, D = map(int, input().split())\n    print(math.ceil(N / (2 * D + 1)))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 17:37:46.095430 size on output set 4
2022-04-23 17:37:46.095440 num operations 1
2022-04-23 17:37:46.095446 size on input set 1
2022-04-23 17:37:46.095599 using api key sunu
2022-04-23 17:37:50.200932 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1, N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D + 1:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1, N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i-1)\n            Inspectors.append(i+1)\n            break\n    print(len(Inspectors))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650735466,
  "object": "edit"
}
2022-04-23 17:37:50.201212 fix syntax errors 4 ['\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1, N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n', '\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D + 1:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n', '\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1, N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i)\n            Inspectors.append(i)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n', '\n\nInspectors = []\n\ndef main():\n    N, D = map(int, input().split())\n    for i in range(1,N+1):\n        if i < D or i > N - D:\n            Inspectors.append(i)\n        else:\n            Inspectors.append(i-1)\n            Inspectors.append(i+1)\n            break\n    print(len(Inspectors))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 17:37:50.201252 size on output set 3
2022-04-23 17:37:50.201267 num operations 1
2022-04-23 17:37:50.201274 size on input set 1
2022-04-23 17:37:50.201447 using api key jaanu
2022-04-23 17:37:59.023978 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\nnum_inspectors = 0\nstart = 1\nwhile start <= n:\n    num_inspectors += 1\n    start += 2 * d + 1\n\nprint(num_inspectors)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\n# assert (main(6, 2) == 2)\n# assert (main(15, 4) == 4)\n# assert (main(20, 5) == 4)\n# assert (main(1, 1) == 1)\n\nprint(main(n, d))\n"
    },
    {
      "index": 2,
      "text": "\n\n\n# n = int(input().split()[0])\n# d = int(input().split()[1])\n\ndef main(n, d):\n    # n = int(input().split()[0])\n    # d = int(input().split()[1])\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\nassert (main(1, 1) == 1)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\n\nprint(main(n, d))\nassert (main(1, 1) == 1)\n"
    }
  ],
  "created": 1650735470,
  "object": "edit"
}
2022-04-23 17:37:59.024285 fix syntax errors 4 ['\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\nnum_inspectors = 0\nstart = 1\nwhile start <= n:\n    num_inspectors += 1\n    start += 2 * d + 1\n\nprint(num_inspectors)\n', '\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\n# assert (main(6, 2) == 2)\n# assert (main(15, 4) == 4)\n# assert (main(20, 5) == 4)\n# assert (main(1, 1) == 1)\n\nprint(main(n, d))\n', '\n\n\n# n = int(input().split()[0])\n# d = int(input().split()[1])\n\ndef main(n, d):\n    # n = int(input().split()[0])\n    # d = int(input().split()[1])\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\nassert (main(1, 1) == 1)\n', '\n\nn = int(input().split()[0])\nd = int(input().split()[1])\n\ndef main(n, d):\n    num_inspectors = 0\n    start = 1\n    while start <= n:\n        num_inspectors += 1\n        start += 2 * d + 1\n    return num_inspectors\n\nassert (main(6, 2) == 2)\nassert (main(15, 4) == 4)\nassert (main(20, 5) == 4)\n\nprint(main(n, d))\nassert (main(1, 1) == 1)\n']
2022-04-23 17:37:59.024326 size on output set 4
