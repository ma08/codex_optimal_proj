["import os\nimport json\nfrom datetime import datetime\n\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n\n\ndef get_contest_data(problemset):\n    pass\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\nn = int(input())\na = list(map(int, input().split())\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n", "\n\nm = int(input())\na = list(map(int, input().split()))  # a = [1, 2, 3, 4, 5]\n\nq = [a[0]]  # q = [1]\nfor i in range(1, m):\n    if a[i] <= 2 * q[-1]:  # 5 <= 2 * 1\n        q[-1] = a[i]  # q = [5]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n", "\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]: # \u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u306e\u4e2d\u3067\u30012\u500d\u4ee5\u4e0b\u306e\u6570\u5b57\u304c\u3042\u3063\u305f\u3089\u3001\u305d\u308c\u3092\u4ee3\u5165\u3057\u3066\u3044\u308b\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n", "\n\n# TODO: make solution, do not forget to add tests\n\n\ndef get_max_contest(problemset):\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\ndef getMaxContest(A):\n    n = len(A)\n    dp = [1] * n # dp[i] = longest increasing subsequence ending at index i\n    for i in range(1, n):\n        for j in range(i):\n            if A[i] <= 2 * A[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp) # return the maximum of dp\n\na = list(map(int, input().split()))\nprint(getMaxContest(a))\n", "\n\ndef get_max_contest(problemset):\n    print(get_max_contest([1, 2, 3, 4]))\n\n\nif __name__ == \"__main__\":\n    pass\n", "\ndef getMaxContest(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContest(a))\n"]