["\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems)) #reverse the list\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n", "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n        solved += 1\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        solved += 1\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        solved += 1\n        i += 1\n    else:\n        break\nprint(solved)\n", "# \u554f\u984c\u6587\n# \u9ad8\u6a4b\u541b\u306f\u3059\u306c\u3051\u541b\u3068\u6574\u6570\u30b2\u30fc\u30e0\u3092\u3057\u307e\u3057\u305f\u3002\n# \u3059\u306c\u3051\u541b\u306f\u9ad8\u6a4b\u541b\u306b \u6574\u6570\u3092\u9078\u3093\u3067\u805e\u304d\u307e\u3057\u305f\u3002\n# \u3059\u306c\u3051\u541b\u306f\u9ad8\u6a4b\u541b\u304c\u9078\u3093\u3060\u6574\u6570\u306b\u5bfe\u3057\u3066\u3001\u6b21\u306e\u3069\u3061\u3089\u304b\u306e\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\n# \u9078\u3093\u3060\u6574\u6570\u3092 \u4e00\u3064\u6e1b\u3089\u3059\u3002\n# \u9078\u3093\u3060\u6574\u6570\u3092 \u4e00\u3064\u5897\u3084\u3059\u3002\n# \n# \u3059\u306c\u3051\u541b\u306f\u6700\u7d42\u7684\u306b \u4efb\u610f\u306e\u6574\u6570\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u305f\u3044\u3067\u3059\u3002\n# \u4efb\u610f\u306e\u6574\u6570\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3089 YES \u3092\u3001\u3067\u304d\u306a\u3044\u306a\u3089 NO \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# \n# \u5236\u7d04\n# 1\u2264N\u2264100\n# 1\u2264a1,a2,\u2026,aN\u22641,000\n# 1\u2264x\u22641,000\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\u3002\n# \u5165\u529b\n# \u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \n# N\n# a1 a2 \u2026 aN\n# x\n# \u51fa\u529b\n# \u4efb\u610f\u306e\u6574\u6570\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3089 YES \u3092\u3001\u3067\u304d\u306a\u3044\u306a\u3089 NO \u3092\u51fa\u529b\u305b\u3088\u3002\n# \n# \u5165\u529b\u4f8b 1\n# 3\n# 1 2 3\n# 2\n# \u51fa\u529b\u4f8b 1\n# YES\n# \u5165\u529b\u4f8b 2\n# 3\n# 1 2 3\n# 4\n# \u51fa\u529b\u4f8b 2\n# NO\n# \u5165\u529b\u4f8b 3\n# 3\n# 1 2 3\n# 3\n# \u51fa\u529b\u4f8b 3\n# YES\n# \u5165\u529b\u4f8b 4\n# 2\n# 2 5\n# 3\n# \u51fa\u529b\u4f8b 4\n# NO\n# \u5165\u529b\u4f8b 5\n# 4\n# 5 5 5 5\n# 5\n# \u51fa\u529b\u4f8b 5\n# YES\n# \u5165\u529b\u4f8b 6\n# 4\n# 5 5 5 5\n# 4\n# \u51fa\u529b\u4f8b 6\n# NO\n\nn, k = map(int, input().split())\na_list = list(map(int, input().split()))\nx = int(input())\n\nif x in a_list:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\n\ndef solve(problems, k, d):\n    i = 0\n    problems.sort()\n    problems.reverse()\n    while i < len(problems):\n        if problems[i] > k: break\n        k -= problems[i]\n        d -= 1\n        if d == 0:\n            i += 1\n            d = 1\n    return i\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\n\ndef solve(problems, k):\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nprint(a)\n", "\n\ndef solve(problems, k, n):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(n):\n        if problems[i] > k:\n            break\n    return i\n", "# coding: utf-8\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n"]