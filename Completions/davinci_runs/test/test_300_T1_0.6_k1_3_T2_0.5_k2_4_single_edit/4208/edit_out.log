2022-04-23 17:06:23.800185 num operations 1
2022-04-23 17:06:23.800201 size on input set 1
2022-04-23 17:06:23.800323 using api key sunu
2022-04-23 17:06:41.303521 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don't match\nfor i in range(n):\n    if left[i] != \"?\" and right[i] != \"?\":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n"
    },
    {
      "index": 1,
      "text": "\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don't match\nfor i in range(n):\n    if left[i] != \"?\" and right[i] != \"?\" and left[i] != right[i]:\n        pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n"
    },
    {
      "index": 2,
      "text": "\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don't match\nfor i in range(n):\n    if left[i] != \"?\" and right[i] != \"?\":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs if pair[0] != -1]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs if pair[1] != -1]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # I/O\n    n = int(input())\n    left = input()\n    right = input()\n\n    # Solution\n\n    # Create a list of all possible left/right pairs\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            pairs.append((i+1, j+1))\n\n    # Filter out pairs where colors don't match\n    for i in range(n):\n        if left[i] != \"?\" and right[i] != \"?\":\n            if left[i] != right[i]:\n                pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n    # Filter out pairs where left boots repeat\n    left = [pair[0] for pair in pairs]\n    dups = [i for i in left if left.count(i) > 1]\n    pairs = [pair for pair in pairs if pair[0] not in dups]\n\n    # Filter out pairs where right boots repeat\n    right = [pair[1] for pair in pairs]\n    dups = [i for i in right if right.count(i) > 1]\n    pairs = [pair for pair in pairs if pair[1] not in dups]\n\n    # Print pairs\n    print(len(pairs))\n    for pair in pairs:\n        print(pair[0], pair[1])\n\nmain()\n"
    }
  ],
  "created": 1650733583,
  "object": "edit"
}
2022-04-23 17:06:41.303766 fix syntax errors 4 ['\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don\'t match\nfor i in range(n):\n    if left[i] != "?" and right[i] != "?":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n', '\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don\'t match\nfor i in range(n):\n    if left[i] != "?" and right[i] != "?" and left[i] != right[i]:\n        pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n', '\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don\'t match\nfor i in range(n):\n    if left[i] != "?" and right[i] != "?":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nleft = [pair[0] for pair in pairs if pair[0] != -1]\ndups = [i for i in left if left.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups]\n\n# Filter out pairs where right boots repeat\nright = [pair[1] for pair in pairs if pair[1] != -1]\ndups = [i for i in right if right.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n', '\n\ndef main():\n    # I/O\n    n = int(input())\n    left = input()\n    right = input()\n\n    # Solution\n\n    # Create a list of all possible left/right pairs\n    pairs = []\n    for i in range(n):\n        for j in range(n):\n            pairs.append((i+1, j+1))\n\n    # Filter out pairs where colors don\'t match\n    for i in range(n):\n        if left[i] != "?" and right[i] != "?":\n            if left[i] != right[i]:\n                pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n    # Filter out pairs where left boots repeat\n    left = [pair[0] for pair in pairs]\n    dups = [i for i in left if left.count(i) > 1]\n    pairs = [pair for pair in pairs if pair[0] not in dups]\n\n    # Filter out pairs where right boots repeat\n    right = [pair[1] for pair in pairs]\n    dups = [i for i in right if right.count(i) > 1]\n    pairs = [pair for pair in pairs if pair[1] not in dups]\n\n    # Print pairs\n    print(len(pairs))\n    for pair in pairs:\n        print(pair[0], pair[1])\n\nmain()\n']
2022-04-23 17:06:41.303815 size on output set 4
2022-04-23 17:06:41.303832 num operations 1
2022-04-23 17:06:41.303838 size on input set 1
2022-04-23 17:06:41.304059 using api key soukgp
2022-04-23 17:06:41.377284 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-23 17:06:42.879136 using api key sunu
2022-04-23 17:06:42.951490 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-23 17:06:45.954850 using api key soukgp
2022-04-23 17:06:46.029489 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-23 17:06:52.035811 using api key sunu
2022-04-23 17:06:52.108994 in retry 3 12.0 <class 'Exception'>, Retrying in 12 seconds...
2022-04-23 17:07:04.121291 using api key derek
2022-04-23 17:07:04.196959 in retry 2 24.0 <class 'Exception'>, Retrying in 24 seconds...
2022-04-23 17:07:28.221336 using api key kouti
