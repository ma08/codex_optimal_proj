2022-04-23 16:32:35.978897 num operations 1
2022-04-23 16:32:35.978919 size on input set 1
2022-04-23 16:32:35.979077 using api key soukgp
2022-04-23 16:32:43.113225 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\narr = [list(map(int, input().split())) for i in range(n)]\nk = int(input())\ntmp = [arr[i][k] for i in range(n)]\ntmp.sort()\nfor i in range(n):\n    arr[i].append(tmp[i])\narr.sort(key=lambda x: x[-1])\nfor i in range(n):\n    print(*arr[i][:-1])\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) / 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) / 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1]) \nprint(cx, cy, h)\n"
    },
    {
      "index": 3,
      "text": "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0])/2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1])/2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])/2\nprint(cx, cy, h)\n"
    }
  ],
  "created": 1650731556,
  "object": "edit"
}
2022-04-23 16:32:43.113468 fix syntax errors 4 ['\nn, m = map(int, input().split())\narr = [list(map(int, input().split())) for i in range(n)]\nk = int(input())\ntmp = [arr[i][k] for i in range(n)]\ntmp.sort()\nfor i in range(n):\n    arr[i].append(tmp[i])\narr.sort(key=lambda x: x[-1])\nfor i in range(n):\n    print(*arr[i][:-1])\n', 'n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) // 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) // 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])\nprint(cx, cy, h)\n', 'n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0]) / 2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1]) / 2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1]) \nprint(cx, cy, h)\n', 'n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\n\ncx = (arr[0][0] + arr[1][0] + arr[2][0] - arr[3][0])/2\ncy = (arr[0][1] + arr[1][1] + arr[3][1] - arr[2][1])/2\nh = arr[0][2] - abs(cx - arr[0][0]) - abs(cy - arr[0][1])/2\nprint(cx, cy, h)\n']
2022-04-23 16:32:43.113513 size on output set 4
2022-04-23 16:32:43.113524 num operations 1
2022-04-23 16:32:43.113529 size on input set 1
2022-04-23 16:32:43.113641 using api key sunu
2022-04-23 16:32:47.105799 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1 or h == h_ + abs(x - x_) + abs(y - y_):\n                h = h_ + abs(x - x_) + abs(y - y_)\n            else:\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    },
    {
      "index": 3,
      "text": "n = int(input())\ncoord_dict = {}\n\n\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = None\n        for (x_, y_), h_ in coord_dict.items():\n            if h is None:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n"
    }
  ],
  "created": 1650731563,
  "object": "edit"
}
2022-04-23 16:32:47.106022 fix syntax errors 4 ['\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n', '\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1 or h == h_ + abs(x - x_) + abs(y - y_):\n                h = h_ + abs(x - x_) + abs(y - y_)\n            else:\n                break\n        else:\n            print(x, y, h)\n            exit()\n', '# coding: utf-8\n\nn = int(input())\n\ncoord_dict = {}\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = -1\n        for (x_, y_), h_ in coord_dict.items():\n            if h == -1:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n', 'n = int(input())\ncoord_dict = {}\n\n\nfor i in range(n):\n    x, y, h = map(int, input().split())\n    coord_dict[(x, y)] = h\n\nfor x in range(101):\n    for y in range(101):\n        h = None\n        for (x_, y_), h_ in coord_dict.items():\n            if h is None:\n                h = h_ + abs(x - x_) + abs(y - y_)\n            elif h != h_ + abs(x - x_) + abs(y - y_):\n                break\n        else:\n            print(x, y, h)\n            exit()\n']
2022-04-23 16:32:47.106062 size on output set 4
2022-04-23 16:32:47.106075 num operations 1
2022-04-23 16:32:47.106082 size on input set 1
2022-04-23 16:32:47.106206 using api key derek
2022-04-23 16:32:54.670610 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(0, 101):\n    for cy in range(0, 101):\n        h = math.inf\n        for i in range(n):\n            h = min(h, points[i][2] + abs(points[i][0] - cx) + abs(points[i][1] - cy))\n        print(cx, cy, h)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n"
    }
  ],
  "created": 1650731567,
  "object": "edit"
}
2022-04-23 16:32:54.671000 fix syntax errors 4 ['\nimport math\n\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(0, 101):\n    for cy in range(0, 101):\n        h = math.inf\n        for i in range(n):\n            h = min(h, points[i][2] + abs(points[i][0] - cx) + abs(points[i][1] - cy))\n        print(cx, cy, h)\n', '\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n', '\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\n# C_X, C_Y is on the line that connects points with altitude 10^9\n# C_X, C_Y is on the line that connects points with altitude 10^9-1\n# C_X, C_Y is on the line that connects points with altitude 10^9-2\n# ...\n# C_X, C_Y is on the line that connects points with altitude 1\n# C_X, C_Y is on the line that connects points with altitude 0\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n', '\n\nn = int(input())\npoints = []\nfor _ in range(n):\n    x, y, h = map(int, input().split())\n    points.append((x, y, h))\n\nfor cx in range(101):\n    for cy in range(101):\n        h = 0\n        for p in points:\n            h = max(h, p[2] - abs(p[0] - cx) - abs(p[1] - cy))\n        if h > 0:\n            print(cx, cy, h)\n            exit()\n']
2022-04-23 16:32:54.671042 size on output set 3
