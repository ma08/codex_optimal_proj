["\n\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + \"x\" + s[i + 1:]\nprint(s) \n", "\ns = input(\"Enter a string: \")\nprint(s.replace('s', 'x'))\n", "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Nov  6 23:56:00 2017\n@author: alexander\n\"\"\"\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport pandas as pd\nimport os\nimport glob\nimport re\nimport random\nimport time\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.decomposition import LatentDirichletAllocation\nimport gensim\nfrom gensim.models.word2vec import Word2Vec\nfrom gensim.models import KeyedVectors\nfrom nltk.corpus import stopwords\nimport nltk\nnltk.download('stopwords')\nimport sys\nimport csv\nimport math\nimport pickle\nfrom scipy import spatial\nimport tensorflow as tf\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc\nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import average_precision_score\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport pandas as pd\nimport os\nimport glob\nimport re\nimport random\nimport time\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.decomposition import LatentDirichletAllocation\nimport gensim\nfrom gensim.models.word2vec import Word2Vec\nfrom gensim.models import KeyedVectors\nfrom nltk.corpus import stopwords\nimport nltk\nnltk.download('stopwords')\nimport sys\nimport csv\nimport math\nimport pickle\nfrom scipy import spatial\nimport tensorflow as tf\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc\nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import average_precision_score\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport pandas as pd\nimport os\nimport glob\nimport re\nimport random\nimport time\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.decomposition import LatentDirichletAllocation\nimport gensim\nfrom gensim.models.word2vec import Word2Vec\nfrom gensim.models import KeyedVectors\nfrom nltk.corpus import stopwords\nimport nltk\nnltk.download('stopwords')\nimport sys\nimport csv\nimport math\nimport pickle\nfrom scipy import spatial\nimport tensorflow as tf\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import recall_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc\nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.metrics import average_precision_score\n", "\ns = input(\"Enter your name: \")\n\nfor i in range(len(s)):\n    s = s[:i] + \"x\" + s[i+1:]\nprint(s)\n", "\n\ns = raw_input()\n\nprint(s.replace('s', 'x'))\n", "s = input()\nprint(s.replace('s', 'x'))\n\n", "\ns = input()\n\nprint(s.replace('s', 'x'))\n", "\n\ns = input()\nprint(s.replace('s', 'x')) \n", "\nprint(len(s))\ns = input()\n\nfor i in range(len(s)):\n    s = s[:i] + \"x\" + s[i+1:]\nprint(s)\n", "\n\ns = input()\nprint(s.replace('s', 'x')\n", "\n\n\ns = input()\nprint(s.replace('s', 'x'))\n"]