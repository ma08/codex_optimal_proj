["\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD if k > 0 else 1\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == \"__main__\":\n    main()\n", "import math\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    return math.factorial(max_len)\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "#!/usr/bin/env python3\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "# SOLUTION\nn=int(input())\na=list(map(int,input().split()))\nd={}\nfor i in a:\n    if i in d:\n        d[i]+=1\n    else:\n        d[i]=1\nif len(d)==1:\n    print(1)\n    quit()\nl=list(d.values())\nres=1\nfor i in l:\n    res*=(i+1)\nres-=1\nprint(res)\n\n", "\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n", "\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nif len(d) == 1:\n    print(1)\n    quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n    res *= (i + 1)\n\nres -= 1\n\nprint(res)\n", "\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)  # debug\n    # print(m.items())  # debug\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)  # debug\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN + 1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n - k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD - 2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n + 1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k - 1)\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            for j in range(i * 2, n + 1, i):\n                count[j] = (count[j] - count[i]) % MOD if count[j] > count[i] else count[j]\n    result = 1 % MOD\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION 1\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n\n# SOLUTION 2\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n\n# SOLUTION 3\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n\n# SOLUTION 4\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"]