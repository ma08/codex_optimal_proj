2022-04-23 17:30:03.722946 num operations 1
2022-04-23 17:30:03.722968 size on input set 1
2022-04-23 17:30:03.723164 using api key soukgp
2022-04-23 17:30:06.636280 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\n\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n"
    }
  ],
  "created": 1650735003,
  "object": "edit"
}
2022-04-23 17:30:06.636517 fix syntax errors 4 ['\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n', '\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n', '# coding: utf-8\n\n\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n', '\nn = input()\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(len(a)):\n    ans += b[a[i]-1]\n    if i != 0 and a[i] == a[i-1] + 1:\n        ans += c[a[i-1]-1]\n\nprint(ans)\n']
2022-04-23 17:30:06.636545 size on output set 2
2022-04-23 17:30:06.636555 num operations 1
2022-04-23 17:30:06.636560 size on input set 1
2022-04-23 17:30:06.636671 using api key sunu
2022-04-23 17:30:11.908090 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# A\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\norder_A = sorted(A, reverse=True)\n# \u98df\u3079\u3066\u3044\u304f\u9806\u756a\u306bB\u3068C\u3092\u4e26\u3073\u66ff\u3048\u308b\nB = [B[order_A.index(i)] for i in range(1,N+1)]\nC = [C[order_A.index(i)] for i in range(1,N)]\n\n# \u5408\u8a08\u3092\u8a08\u7b97\ntotal = sum(B) + sum(C)\n\n# \u76f4\u524d\u306b\u98df\u3079\u305f\u6599\u7406\u3068\u540c\u3058\u3082\u306e\u3092\u98df\u3079\u305f\u3068\u304d\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# A\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\norder_A = sorted(A, reverse=True)\n# \u98df\u3079\u3066\u3044\u304f\u9806\u756a\u306bB\u3068C\u3092\u4e26\u3073\u66ff\u3048\u308b\nB = [B[order_A.index(i)-1] for i in range(1, N+1)]\nC = [C[order_A.index(i)-1] for i in range(1, N)]\n\n# \u5408\u8a08\u3092\u8a08\u7b97\ntotal = sum(B) + sum(C)\n\n# \u76f4\u524d\u306b\u98df\u3079\u305f\u6599\u7406\u3068\u540c\u3058\u3082\u306e\u3092\u98df\u3079\u305f\u3068\u304d\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\nfor i in range(N-1):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# A\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\norder_A = sorted(A, reverse=True)\n# \u98df\u3079\u3066\u3044\u304f\u9806\u756a\u306bB\u3068C\u3092\u4e26\u3073\u66ff\u3048\u308b\nB = [B[A.index(i)-1] for i in order_A]\nC = [C[A.index(i)-1] for i in order_A[:-1]]\n\n# \u5408\u8a08\u3092\u8a08\u7b97\ntotal = sum(B) + sum(C)\n\n# \u76f4\u524d\u306b\u98df\u3079\u305f\u6599\u7406\u3068\u540c\u3058\u3082\u306e\u3092\u98df\u3079\u305f\u3068\u304d\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# A\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5927\u304d\u3044\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\norder_A = sorted(A, reverse=True)\n# \u98df\u3079\u3066\u3044\u304f\u9806\u756a\u306bB\u3068C\u3092\u4e26\u3073\u66ff\u3048\u308b\nB = [B[order_A.index(i)] for i in range(1,N+1)]\nC = [C[order_A.index(i)] for i in range(1,N)]\n\n# \u5408\u8a08\u3092\u8a08\u7b97\ntotal = sum(B) + sum(C)\n\n# \u76f4\u524d\u306b\u98df\u3079\u305f\u6599\u7406\u3068\u540c\u3058\u3082\u306e\u3092\u98df\u3079\u305f\u3068\u304d\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n"
    }
  ],
  "created": 1650735006,
  "object": "edit"
}
2022-04-23 17:30:11.908321 fix syntax errors 4 ['\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# Aをインデックスの大きい順に並び替える\norder_A = sorted(A, reverse=True)\n# 食べていく順番にBとCを並び替える\nB = [B[order_A.index(i)] for i in range(1,N+1)]\nC = [C[order_A.index(i)] for i in range(1,N)]\n\n# 合計を計算\ntotal = sum(B) + sum(C)\n\n# 直前に食べた料理と同じものを食べたときのポイントを減算する\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# Aをインデックスの大きい順に並び替える\norder_A = sorted(A, reverse=True)\n# 食べていく順番にBとCを並び替える\nB = [B[order_A.index(i)-1] for i in range(1, N+1)]\nC = [C[order_A.index(i)-1] for i in range(1, N)]\n\n# 合計を計算\ntotal = sum(B) + sum(C)\n\n# 直前に食べた料理と同じものを食べたときのポイントを減算する\nfor i in range(N-1):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# Aをインデックスの大きい順に並び替える\norder_A = sorted(A, reverse=True)\n# 食べていく順番にBとCを並び替える\nB = [B[A.index(i)-1] for i in order_A]\nC = [C[A.index(i)-1] for i in order_A[:-1]]\n\n# 合計を計算\ntotal = sum(B) + sum(C)\n\n# 直前に食べた料理と同じものを食べたときのポイントを減算する\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\n# Aをインデックスの大きい順に並び替える\norder_A = sorted(A, reverse=True)\n# 食べていく順番にBとCを並び替える\nB = [B[order_A.index(i)] for i in range(1,N+1)]\nC = [C[order_A.index(i)] for i in range(1,N)]\n\n# 合計を計算\ntotal = sum(B) + sum(C)\n\n# 直前に食べた料理と同じものを食べたときのポイントを減算する\nfor i in range(N-2):\n    if order_A[i] == order_A[i+1]:\n        total -= C[i]\n\nprint(total)\n']
2022-04-23 17:30:11.908464 size on output set 3
2022-04-23 17:30:11.908483 num operations 1
2022-04-23 17:30:11.908489 size on input set 1
2022-04-23 17:30:11.908626 using api key soukgp
2022-04-23 17:30:20.912920 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        points += (B[A[i]-1] + C[A[i]])\n    else:\n        points += B[A[i]-1]\npoints += B[A[N-1]-1]\nprint(points)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n# C = [int(x) for x in input().split()]\n#\n# points = 0\n# for i in range(N-1):\n#     if A[i+1] - A[i] == 1:\n#         points += (B[A[i]-1] + C[A[i]-1])\n#     else:\n#         points += B[A[i]-1]\n# points += B[A[N-1]-1]\n# print(points)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        points += (B[A[i]-1] + C[A[i]-1])\n    else:\n        points += B[A[i]-1]\npoints += B[A[N-1]-1]\nprint(points)\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N):\n    points += B[A[i]-1]\n    if i != N-1 and A[i+1] - A[i] == 1:\n        points += C[A[i]-1]\nprint(points)\n"
    }
  ],
  "created": 1650735011,
  "object": "edit"
}
2022-04-23 17:30:20.913128 fix syntax errors 4 ['\n\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        points += (B[A[i]-1] + C[A[i]])\n    else:\n        points += B[A[i]-1]\npoints += B[A[N-1]-1]\nprint(points)\n', '\n#\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n# C = [int(x) for x in input().split()]\n#\n# points = 0\n# for i in range(N-1):\n#     if A[i+1] - A[i] == 1:\n#         points += (B[A[i]-1] + C[A[i]-1])\n#     else:\n#         points += B[A[i]-1]\n# points += B[A[N-1]-1]\n# print(points)\n', '\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N-1):\n    if A[i+1] - A[i] == 1:\n        points += (B[A[i]-1] + C[A[i]-1])\n    else:\n        points += B[A[i]-1]\npoints += B[A[N-1]-1]\nprint(points)\n', '\n\nN = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\npoints = 0\nfor i in range(N):\n    points += B[A[i]-1]\n    if i != N-1 and A[i+1] - A[i] == 1:\n        points += C[A[i]-1]\nprint(points)\n']
2022-04-23 17:30:20.913160 size on output set 4
