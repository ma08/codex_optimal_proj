2022-04-23 16:19:01.298410 num operations 1
2022-04-23 16:19:01.298431 size on input set 1
2022-04-23 16:19:01.298583 using api key sunu
2022-04-23 16:19:07.397747 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(N, K)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels <= 0:\n        return None\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels <= 0:\n        return None\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650730741,
  "object": "edit"
}
2022-04-23 16:19:07.397985 fix syntax errors 4 ['import sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(N, K)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels <= 0:\n        return None\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels <= 0:\n        return None\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 16:19:07.398039 size on output set 3
2022-04-23 16:19:07.398051 num operations 1
2022-04-23 16:19:07.398056 size on input set 1
2022-04-23 16:19:07.398184 using api key sunu
2022-04-23 16:19:11.398425 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(n // k)\n    else:\n        print(n // k + 1)\n"
    },
    {
      "index": 1,
      "text": "# this is a comment\n\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    },
    {
      "index": 3,
      "text": "# this is a test\n\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    }
  ],
  "created": 1650730747,
  "object": "edit"
}
2022-04-23 16:19:11.398692 fix syntax errors 4 ['\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    if n % k == 0:\n        print(n // k)\n    else:\n        print(n // k + 1)\n', '# this is a comment\n\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n', '\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n', '# this is a test\n\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n']
2022-04-23 16:19:11.398719 size on output set 4
2022-04-23 16:19:11.398731 num operations 1
2022-04-23 16:19:11.398737 size on input set 1
2022-04-23 16:19:11.398874 using api key jaanu
2022-04-23 16:19:14.761263 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k + 1):\n        if n % i == 0:\n            packages = n // i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    }
  ],
  "created": 1650730751,
  "object": "edit"
}
2022-04-23 16:19:14.761646 fix syntax errors 4 ["#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n", "\n\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k + 1):\n        if n % i == 0:\n            packages = n // i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n", "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n", "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"]
2022-04-23 16:19:14.761687 size on output set 3
