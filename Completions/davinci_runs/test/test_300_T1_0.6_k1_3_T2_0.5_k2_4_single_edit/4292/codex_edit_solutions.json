["\nimport heapq\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\nprices = list(map(int, sys.stdin.readline().rstrip().split()))\nheapq.heapify(prices)\n\ntotal = 0\nfor i in range(K):\n    total += heapq.heappop(prices)\n\nprint(total)\n", "#!/usr/bin/python\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().strip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n", "#\n\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n", "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\n\nprint(sum(fruit[:K]))\n", "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K])\n", "\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n", "\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\nprint(sum(fruits[:K]))\n", "\n\nN, K = map(int, input().split())\nfruits = sorted(list(map(int, input().split())))\n\n\n# \nprint(sum(fruits[:K]))\n", "\nN, K = map(int, input().split())\n\nfruit = list(map(int, input().split()))\nfruit.sort()\nprint(sum(fruit[:K]))\n", "\n\nimport numpy as np\n\nN, K = map(int, input().split())\n\nfruit = np.array(list(map(int, input().split())))\nfruit = np.sort(fruit)\n\nprint(sum(fruit[:K]))\n", "#!/usr/bin/env python3\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\n\nprices = sorted(list(map(int, sys.stdin.readline().rstrip().split())))\n\ntotal = 0\nfor i in range(K):\n    total += prices[i]\n\nprint(total)\n"]