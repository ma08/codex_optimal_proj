["\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef solve(grades):\n    final = []\n    for grade in grades:\n        if grade < 38:\n            final.append(grade)\n        else:\n            if grade % 5 == 0:\n                final.append(grade)\n            elif grade % 5 >= 3:\n                final.append(grade + (5 - grade % 5))\n            else:\n                final.append(grade)\n    return final\n\nn = int(raw_input().strip())\ngrades = []\ngrades_i = 0\nfor grades_i in xrange(n):\n   grades_t = int(raw_input().strip())\n   grades.append(grades_t)\nresult = solve(grades)\nprint \"\\n\".join(map(str, result))\n", "\n\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2 * a, b)\n    else:\n        return min(n * a, n // 2 * b + n % 2 * a)\n\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "def minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n % 2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print solve(n, a, b)\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        print(min(n*a, (n//2)*b + (n%2)*a))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a) #// for division in python\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nif __name__ == '__main__':\n    q = int(input().strip())\n    for a0 in range(q):\n        n, a, b = input().strip().split(' ')\n        n, a, b = [int(n), int(a), int(b)]\n        print(solve(n, a, b))\n", "\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n"]