2022-04-23 17:14:55.788783 num operations 1
2022-04-23 17:14:55.788813 size on input set 1
2022-04-23 17:14:55.789028 using api key jaanu
2022-04-23 17:14:59.298305 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, l = map(int, input().split())\n    print( (n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650734095,
  "object": "edit"
}
2022-04-23 17:14:59.298545 fix syntax errors 4 ["\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, l = map(int, input().split())\n    print( (n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, l = map(int, input().split())\n    print((n - 1) * (n) // 2 + n * l)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 17:14:59.298573 size on output set 2
2022-04-23 17:14:59.298583 num operations 1
2022-04-23 17:14:59.298588 size on input set 1
2022-04-23 17:14:59.298711 using api key jaanu
2022-04-23 17:15:03.287479 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    n,l = map(int, input().split())\n    flavor_list = [l + i for i in range(1,n+1)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    n, l = map(int, input().split())\n    flavor_list = [l + i for i in range(1, n + 1)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    n, l = map(int, input().split())\n    flavor_list = [l + i for i in range(n)]\n    print(sum(flavor_list[1:]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n,l = map(int, input().split())\n    flavor_list = [l + i for i in range(n)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650734099,
  "object": "edit"
}
2022-04-23 17:15:03.287753 fix syntax errors 4 ['\n\n\ndef main():\n    n,l = map(int, input().split())\n    flavor_list = [l + i for i in range(1,n+1)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    n, l = map(int, input().split())\n    flavor_list = [l + i for i in range(1, n + 1)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    n, l = map(int, input().split())\n    flavor_list = [l + i for i in range(n)]\n    print(sum(flavor_list[1:]))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n,l = map(int, input().split())\n    flavor_list = [l + i for i in range(n)]\n    print(sum(flavor_list[1:]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 17:15:03.287792 size on output set 4
2022-04-23 17:15:03.287809 num operations 1
2022-04-23 17:15:03.287819 size on input set 1
2022-04-23 17:15:03.288015 using api key sunu
2022-04-23 17:15:07.908146 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l + n - 1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l + n - 1) // 2 * n)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l+n-1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l+n-1) // 2 * n)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l+n-1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l+n-1) // 2 * n)\n"
    },
    {
      "index": 3,
      "text": "\n\n#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l + n - 1) / 2.\nprint(sum([l + i for i in range(n - 1)]) - (l + l + n - 1) // 2 * n)\n"
    }
  ],
  "created": 1650734103,
  "object": "edit"
}
2022-04-23 17:15:07.908421 fix syntax errors 4 ['\n\n#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l + n - 1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l + n - 1) // 2 * n)\n', '#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l+n-1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l+n-1) // 2 * n)\n', '#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l+n-1) / 2.\nprint(sum([l+i for i in range(n-1)]) - (l + l+n-1) // 2 * n)\n', '\n\n#!/usr/bin/env python3\n\nn, l = list(map(int, input().split()))\n\n# The optimal choice is to eat the apple with the smallest absolute difference from the average flavor of all apples.\n# The average flavor of all apples is (l + l + n - 1) / 2.\nprint(sum([l + i for i in range(n - 1)]) - (l + l + n - 1) // 2 * n)\n']
2022-04-23 17:15:07.908464 size on output set 3
