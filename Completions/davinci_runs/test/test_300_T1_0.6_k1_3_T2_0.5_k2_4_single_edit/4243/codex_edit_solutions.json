["\n\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5] + d[50] + d[10]\n\nx = int(input())\nprint(happiness(x))\n", "\n\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n\n    print(coins)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5  \n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n\n\n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a,b,c = map(int,input().split())\n    k = int(input())\n    if a >= b and a >= c:\n        if b >= c:\n            print(a*2**k + b)\n        else:\n            print(a*2**k + c)\n    elif b >= a and b >= c:\n        if a >= c:\n            print(b*2**k + a)\n        else:\n            print(b*2**k + c)\n    elif c >= a and c >= b:\n        if a >= b:\n            print(c*2**k + a)\n        else:\n            print(c*2**k + b)\n    else:\n        print('error')\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom collections import defaultdict\n\ndef happiness(x, n):\n    d = defaultdict(int)  # d: \u5404\u7a2e\u984d\u306e\u56de\u6570\n    for i in n:\n        d[i] = x // i\n        x %= i\n    return 1000 * d[500] + 5 * d[5]  # \u5e78\u305b\u5ea6\u3092\u8a08\u7b97\n\nx = int(input())\nprint(happiness(x))\n", "\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n\n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n", "\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 5\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n", "import sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n"]