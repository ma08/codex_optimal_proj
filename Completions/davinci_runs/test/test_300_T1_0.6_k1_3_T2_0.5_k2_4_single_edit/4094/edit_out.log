2022-04-23 16:25:01.432279 num operations 1
2022-04-23 16:25:01.432299 size on input set 1
2022-04-23 16:25:01.432490 using api key soukgp
2022-04-23 16:25:05.735904 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while (current % k != 0) and (current % 2 != 0):\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while (current % k != 0) and (current % 2 != 0):\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    while (current % k != 0) and (current % 2 != 0):\n        current = current * 10 + 7\n        index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650731101,
  "object": "edit"
}
2022-04-23 16:25:05.736148 fix syntax errors 4 ["\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while (current % k != 0) and (current % 2 != 0):\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while (current % k != 0) and (current % 2 != 0):\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    if k % 2 == 1:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    else:\n        while current % k != 0:\n            current = current * 10 + 7\n            index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    k = int(input())\n    current = 7\n    index = 1\n    while (current % k != 0) and (current % 2 != 0):\n        current = current * 10 + 7\n        index += 1\n    if current % k == 0:\n        print(index)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 16:25:05.736185 size on output set 3
2022-04-23 16:25:05.736196 num operations 1
2022-04-23 16:25:05.736202 size on input set 1
2022-04-23 16:25:05.736330 using api key kouti
2022-04-23 16:25:09.084613 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int(\"7\"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int(\"7\" * i) % k == 0:\n        print(i)\n        break\n    i += 1\n"
    },
    {
      "index": 2,
      "text": "from sys import stdin\n\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int(\"7\"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n"
    },
    {
      "index": 3,
      "text": "\nfrom sys import stdin\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int(\"7\"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n"
    }
  ],
  "created": 1650731105,
  "object": "edit"
}
2022-04-23 16:25:09.084845 fix syntax errors 4 ['\n\nfrom sys import stdin\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int("7"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n', '\n\nfrom sys import stdin\n\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int("7" * i) % k == 0:\n        print(i)\n        break\n    i += 1\n', 'from sys import stdin\n\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int("7"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n', '\nfrom sys import stdin\nk = int(stdin.readline())\n\ni = 1\nwhile True:\n    if int("7"*i)%k == 0:\n        print(i)\n        break\n    i += 1\n']
2022-04-23 16:25:09.084940 size on output set 4
2022-04-23 16:25:09.084979 num operations 1
2022-04-23 16:25:09.084993 size on input set 1
2022-04-23 16:25:09.085133 using api key jaanu
2022-04-23 16:25:12.341886 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:  # use str(7) * count to multiple 7s\n        print(count)\n        break\n    count += 1\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\n\nimport sys\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n"
    }
  ],
  "created": 1650731109,
  "object": "edit"
}
2022-04-23 16:25:12.342116 fix syntax errors 4 ['\nimport sys\n\nK = int(sys.stdin.readline())\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n', '\n\nimport sys\n\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:  # use str(7) * count to multiple 7s\n        print(count)\n        break\n    count += 1\n', 'import sys\n\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n', '#!/usr/bin/env python3\n\n\nimport sys\nK = int(sys.stdin.readline())\n\ncount = 0\n\nwhile True:\n    if int(str(7) * count) % K == 0:\n        print(count)\n        break\n    count += 1\n']
2022-04-23 16:25:12.342153 size on output set 4
