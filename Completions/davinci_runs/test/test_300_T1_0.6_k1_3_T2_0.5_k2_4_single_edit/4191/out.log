2022-04-18 03:15:40.515654 """
[Image] 


-----Input-----

The input consists of four lines, each line containing a single digit 0 or 1.


-----Output-----

Output a single digit, 0 or 1.


-----Example-----
Input
0
1
1
0

Output
0
"""
2022-04-18 03:15:40.515682 --------------------------
2022-04-18 03:16:13.003315 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))"
    }
  ],
  "created": 1650251740,
  "id": "cmpl-4yC9UNiK6CnaQ9V48AIAefk19DbbX",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 03:16:13.003650 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))"
}
2022-04-18 03:16:13.003718 REASON stop
2022-04-18 03:16:13.025039 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))"
}
2022-04-18 03:16:13.025098 REASON stop
2022-04-18 03:16:13.025520 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))"
}
2022-04-18 03:16:13.025572 REASON stop
