["import sys\n\nn = int(sys.stdin.readline())\n\nprint(n)\n", "import sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "import sys\n\nn, a, b = map(int,sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "\n# \uc22b\uc790 \uc785\ub825\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "import sys\nN = int(sys.stdin.readline())\nnums = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(1, N):\n    for j in range(i, 0, -1):\n        if nums[j] < nums[j - 1]:\n            nums[j], nums[j - 1] = nums[j - 1], nums[j]\n        else:\n            break\n    print(' '.join(map(str, nums)))\n", "import sys\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\nn, a, b = map(int,sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "import sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())  # input line\n\n\ndef min_expense(N, A, B):  # function to calculate min expense\n    if N * A <= B:  # if the cost of all tickets is less than or equal to the cost of a group ticket\n        return N * A  # return the cost of all tickets\n    else:\n        return B  # return the cost of a group ticket\n\n\n\nprint(min_expense(N, A, B))  # print the result\n"]