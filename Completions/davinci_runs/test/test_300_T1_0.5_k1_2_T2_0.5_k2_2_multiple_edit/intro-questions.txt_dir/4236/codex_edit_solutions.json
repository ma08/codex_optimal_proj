["\nn, m, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\nres = [0] * n\n\nfor i in range(n):\n    for j in range(n):\n        if abs(a[i] - a[j]) > k:\n            res[i] += 1\n\nprint(*res)\n", "\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\nsegments.sort(key=lambda x: x[0])\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n", "\ndef get_points(n, m, segments):\n    segments.sort(key=lambda x: x[0])\n    # print(segments)\n\n    res = []\n    for i in range(1, m + 1):\n        if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n            res.append(i)\n\n    print(len(res))\n    print(*res)\n\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n\n    segments = []\n    for i in range(n):\n        l, r = map(int, input().split())\n        segments.append((l, r))\n\n    get_points(n, m, segments)\n", "\n\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n", "\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\nprint(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n        res.append(i)\n\nprint(len(res))\n\n\n\n\n\nprint(*res)\n", "\n# #\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"]