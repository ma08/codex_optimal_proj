2022-04-24 09:15:53.923206 num operations 2
2022-04-24 09:15:53.923228 size on input set 1
2022-04-24 09:15:53.923364 using api key sunu
2022-04-24 09:15:59.459017 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650791754,
  "object": "edit"
}
2022-04-24 09:15:59.459226 fix spelling mistakes 2 ['\n\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:15:59.459249 size on output set 2
2022-04-24 09:15:59.459257 size on input set 2
2022-04-24 09:15:59.459405 using api key jaanu
2022-04-24 09:16:06.243253 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650791759,
  "object": "edit"
}
2022-04-24 09:16:06.243437 fix syntax errors 2 ['\ndef main():\n    print("Hello World!")\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:16:06.243584 using api key soukgp
2022-04-24 09:16:11.904529 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\nimport itertools\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650791766,
  "object": "edit"
}
2022-04-24 09:16:11.904703 fix syntax errors 2 ['import math\nimport itertools\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n', 'import math\nimport itertools\n\ndef main():\n    N, D = map(int, input().split())\n    if N <= D:\n        print(1)\n    else:\n        print(math.ceil((N - D) / (2 * D + 1)) + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:16:11.904724 size on output set 4
2022-04-24 09:16:11.904735 num operations 2
2022-04-24 09:16:11.904741 size on input set 1
2022-04-24 09:16:11.904862 using api key soukgp
2022-04-24 09:16:17.652011 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, D = map(int, input().split())\nprint(N // (D * 2 + 1))\n"
    }
  ],
  "created": 1650791771,
  "object": "edit"
}
2022-04-24 09:16:17.652210 fix spelling mistakes 2 ['\n\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n', '\n\nN, D = map(int, input().split())\nprint(N // (D * 2 + 1))\n']
2022-04-24 09:16:17.652228 size on output set 2
2022-04-24 09:16:17.652236 size on input set 2
2022-04-24 09:16:17.652370 using api key soukgp
2022-04-24 09:16:23.844397 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, D = map(int, input().split())\nprint((N + 2 * D) // (D * 2 + 1))\n"
    },
    {
      "index": 1,
      "text": "\nn, d = map(int, input().split())\nprint(n // (d * 2 + 1))\n"
    }
  ],
  "created": 1650791777,
  "object": "edit"
}
2022-04-24 09:16:23.844571 fix syntax errors 2 ['\n\nN, D = map(int, input().split())\nprint((N + 2 * D) // (D * 2 + 1))\n', '\nn, d = map(int, input().split())\nprint(n // (d * 2 + 1))\n']
2022-04-24 09:16:23.844703 using api key sunu
2022-04-24 09:16:29.826882 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, D = map(int, input().split())\n\nprint((N + 2 * D) // (2 * D + 1))\n"
    },
    {
      "index": 1,
      "text": "\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n"
    }
  ],
  "created": 1650791783,
  "object": "edit"
}
2022-04-24 09:16:29.827067 fix syntax errors 2 ['\nN, D = map(int, input().split())\n\nprint((N + 2 * D) // (2 * D + 1))\n', '\nN, D = map(int, input().split())\n\nprint(N//(D*2+1) + 1)\n']
2022-04-24 09:16:29.827106 size on output set 4
