2022-04-24 08:42:59.272043 num operations 2
2022-04-24 08:42:59.272062 size on input set 1
2022-04-24 08:42:59.272198 using api key soukgp
2022-04-24 08:43:05.370988 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    r = int(input())\n    print(3 * r * r)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\ndef main():\n    r = int(input())\n    print(3*r*r)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789779,
  "object": "edit"
}
2022-04-24 08:43:05.371197 fix spelling mistakes 2 ["\n\ndef main():\n    r = int(input())\n    print(3 * r * r)\n\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\ndef main():\n    r = int(input())\n    print(3*r*r)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:43:05.371220 size on output set 2
2022-04-24 08:43:05.371227 size on input set 2
2022-04-24 08:43:05.371353 using api key derek
2022-04-24 08:43:12.192783 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    print(n*(n+1)//2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\ndef main():\n    a,b,c = map(int, input().split())\n    if a < b:\n        if b < c:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789785,
  "object": "edit"
}
2022-04-24 08:43:12.192958 fix syntax errors 2 ["# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    print(n*(n+1)//2)\n\nif __name__ == '__main__':\n    main()\n", '# -*- coding: utf-8 -*-\n\ndef main():\n    a,b,c = map(int, input().split())\n    if a < b:\n        if b < c:\n            print("Yes")\n        else:\n            print("No")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-24 08:43:12.193094 using api key jaanu
2022-04-24 08:43:18.265329 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    r = int(input())\n    print(3 * r * r)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x, y = map(int, input().split())\n    print(x + y // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789792,
  "object": "edit"
}
2022-04-24 08:43:18.265514 fix syntax errors 2 ["\ndef main():\n    r = int(input())\n    print(3 * r * r)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    x, y = map(int, input().split())\n    print(x + y // 2)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:43:18.265533 size on output set 4
2022-04-24 08:43:18.265545 num operations 2
2022-04-24 08:43:18.265550 size on input set 1
2022-04-24 08:43:18.265718 using api key derek
2022-04-24 08:43:24.935278 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip()) # get the radius\n    print(3 * r**2) # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789798,
  "object": "edit"
}
2022-04-24 08:43:24.935450 fix spelling mistakes 2 ["\n#\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip()) # get the radius\n    print(3 * r**2) # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:43:24.935470 size on output set 2
2022-04-24 08:43:24.935477 size on input set 2
2022-04-24 08:43:24.935594 using api key jaanu
2022-04-24 08:43:32.096768 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())  # get the radius\n    print(3 * r**2)  # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())  # get the radius\n    print(3 * r**2)  # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789804,
  "object": "edit"
}
2022-04-24 08:43:32.096943 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())  # get the radius\n    print(3 * r**2)  # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())  # get the radius\n    print(3 * r**2)  # print the area of the circle\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:43:32.097081 using api key kouti
2022-04-24 08:43:37.900204 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#https://atcoder.jp/contests/abc081/tasks/abc081_a\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789812,
  "object": "edit"
}
2022-04-24 08:43:37.900373 fix syntax errors 2 ["import sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n", "\n#https://atcoder.jp/contests/abc081/tasks/abc081_a\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    print(3 * r**2)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:43:37.900393 size on output set 3
