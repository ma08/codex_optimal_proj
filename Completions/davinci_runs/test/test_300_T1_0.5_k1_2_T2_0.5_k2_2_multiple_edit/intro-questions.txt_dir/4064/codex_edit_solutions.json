["\nimport sys\n\nn, h, l, r = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\ndp = [[0] * h for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(h):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + a[i - 1]) % h])\n\n        if l <= (j + a[i - 1]) % h <= r:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1)\n\nprint(max(dp[n]))\n", "import sys\nsys.setrecursionlimit(10**9)\n\nn,h,l,r = map(int, input().split()) # n,h,l,r\u306e\u5165\u529b\na = list(map(int, input().split())) # a\u306e\u5165\u529b\n\ndp = [[[-1 for _ in range(h)] for _ in range(n+1)] for _ in range(n+1)]\ndef dfs(i, j, k):\n    if dp[i][j][k] != -1:\n        return dp[i][j][k]\n    if i == n:\n        return 0\n    else:\n        if l <= (k+a[i])%h <= r:\n            dp[i][j][k] = max(dfs(i+1, j+1, (k+a[i])%h), dfs(i+1, j, k))+1\n        else:\n            dp[i][j][k] = max(dfs(i+1, j+1, (k+a[i])%h), dfs(i+1, j, k))\n        return dp[i][j][k]\n\nprint(dfs(0, 0, 0))\n", "import sys\n\nn, h, l, r = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\ndp = [[0] * h for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(h):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + a[i - 1]) % h])\n\n        if l <= (j + a[i - 1]) % h <= r:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1)\n\nprint(max(dp[n]))\n", "import sys\n\nn, h, l, r = map(int, sys.stdin.readline().split())\na = list(map(int,sys.stdin.readline().split()))\n\ndp = [[0] * h for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(h):\n        dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + a[i - 1]) % h])\n\n        if l <= (j + a[i - 1]) % h <= r:\n            dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1)\n\nprint(max(dp[n]))\n", "import sys\n\nn,h,l,r = map(int,sys.stdin.readline().split())\na = list(map(int,sys.stdin.readline().split()))\n\ndp = [[0] * h for _ in range(n+1)]\n\nfor i in range(1,n+1):\n    for j in range(h):\n        dp[i][j] = max(dp[i-1][j],dp[i-1][(j+a[i-1])%h])\n\n        if l<=(j+a[i-1])%h<=r:\n            dp[i][j] = max(dp[i][j],dp[i-1][j]+1)\n\nprint(max(dp[n]))\n", "n,h,l,r = map(int, input().split())\na = list(map(int, input().split()))\n\nif l == 0:\n    if r == h-1:\n        print(n)\n    else:\n        print(n-1)\nelse:\n    t = 0\n    c = 0\n    for i in range(n):\n        t += a[i]\n        if l <= t%h <= r:\n            c += 1\n    print(c)\n", "import sys\nsys.setrecursionlimit(10**6)\n\nn,h,l,r = map(int, input().split()) # n,h,l,r\u306e\u5165\u529b\na = list(map(int, input().split())) # a\u306e\u5165\u529b\n\ndef dfs(i,t):\n    if i >= n:\n        return 0\n    t += a[i]\n    t = t % h\n    if l <= t <= r:\n        return max(dfs(i+1,t)+1,dfs(i+1,t-1)+1)\n    else:\n        return max(dfs(i+1,t),dfs(i+1,t-1))\n\nprint(dfs(0,0))\n"]