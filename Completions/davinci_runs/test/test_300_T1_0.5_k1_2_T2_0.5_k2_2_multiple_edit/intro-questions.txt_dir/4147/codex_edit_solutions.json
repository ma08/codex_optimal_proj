["\n\nN, A, B, C = map(int, input().split()) # \u5165\u529b\nls = [int(input()) for _ in range(N)] # \u5165\u529b\n\ndef dfs(cur, a, b, c): # \u6df1\u3055\u512a\u5148\u63a2\u7d22\n    if a == A and b == B and c == C: # \u5168\u3066\u306e\u9577\u3055\u304c\u63c3\u3063\u305f\u3089\u7d42\u4e86\n        return 0\n    if cur == N: # \u5168\u3066\u306e\u6728\u3092\u898b\u7d42\u308f\u3063\u305f\u3089\u7d42\u4e86\n        return float('inf')\n    res = float('inf') # \u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u521d\u671f\u5024\u3092inf\u306b\u3059\u308b\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10) # a\u306b\u52a0\u3048\u308b\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10) # b\u306b\u52a0\u3048\u308b\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10) # c\u306b\u52a0\u3048\u308b\n    if ls[cur] - 1 >= 0: # \u6728\u306e\u9577\u3055\u304c1\u4ee5\u4e0a\u306a\u3089\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9) # a\u306b\u52a0\u3048\u308b\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9) # b\u306b\u52a0\u3048\u308b\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9) # c\u306b\u52a0\u3048\u308b\n    if ls[cur] - 2 >= 0: # \u6728\u306e\u9577\u3055\u304c2\u4ee5\u4e0a\u306a\u3089\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8) # a\u306b\u52a0\u3048\u308b\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8) # b\u306b\u52a0\u3048\u308b\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8) # c\u306b\u52a0\u3048\u308b\n    return res # \u7b54\u3048\u3092\u8fd4\u3059\n\nprint(dfs(0, 0, 0, 0)) # \u5b9f\u884c\n", "N = int(input())\nA = list(map(int, input().split()))\nprint(sum(A))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10) \n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "N = int(input())\nA = list(map(int, input().split()))\nprint(A)\n"]