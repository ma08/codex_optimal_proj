2022-04-24 08:54:55.764736 num operations 2
2022-04-24 08:54:55.764757 size on input set 1
2022-04-24 08:54:55.764901 using api key kouti
2022-04-24 08:55:02.249683 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\n\nif s[1] == s[2] or s[2] == s[3] or s[3] == s[4]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    }
  ],
  "created": 1650790495,
  "object": "edit"
}
2022-04-24 08:55:02.249895 fix spelling mistakes 2 ['\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print("Bad")\nelse:\n    print("Good")\n', '\ns = input()\n\nif s[1] == s[2] or s[2] == s[3] or s[3] == s[4]:\n    print("Bad")\nelse:\n    print("Good")\n']
2022-04-24 08:55:02.249922 size on output set 2
2022-04-24 08:55:02.249932 size on input set 2
2022-04-24 08:55:02.250108 using api key soukgp
2022-04-24 08:55:26.082073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ns = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4] or s[4] == s[5]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input()) # 5\na = list(map(int, input().split())) # 1 2 3 4 5\n"
    }
  ],
  "created": 1650790502,
  "object": "edit"
}
2022-04-24 08:55:26.082246 fix syntax errors 2 ['\n\ns = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4] or s[4] == s[5]:\n    print("Bad")\nelse:\n    print("Good")\n', '\nn = int(input()) # 5\na = list(map(int, input().split())) # 1 2 3 4 5\n']
2022-04-24 08:55:26.082389 using api key derek
2022-04-24 08:55:32.514707 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "s = input()\n\nif s[1] == s[2] or s[2] == s[3] or s[3] == s[4]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    }
  ],
  "created": 1650790526,
  "object": "edit"
}
2022-04-24 08:55:32.514875 fix syntax errors 2 ['\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print("Bad")\nelse:\n    print("Good")\n', 's = input()\n\nif s[1] == s[2] or s[2] == s[3] or s[3] == s[4]:\n    print("Bad")\nelse:\n    print("Good")\n']
2022-04-24 08:55:32.514894 size on output set 4
2022-04-24 08:55:32.514904 num operations 2
2022-04-24 08:55:32.514909 size on input set 1
2022-04-24 08:55:32.515030 using api key jaanu
2022-04-24 08:55:38.446965 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input()\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print(\"bad\")\nelse:\n    print(\"good\")\n"
    }
  ],
  "created": 1650790532,
  "object": "edit"
}
2022-04-24 08:55:38.447136 fix spelling mistakes 2 ['\ns = input()\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print("Bad")\nelse:\n    print("Good")\n', '\n\ns = input()\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print("bad")\nelse:\n    print("good")\n']
2022-04-24 08:55:38.447155 size on output set 2
2022-04-24 08:55:38.447162 size on input set 2
2022-04-24 08:55:38.447292 using api key jaanu
2022-04-24 08:55:45.632775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nif(N % 2 == 0):\n    print(N // 2)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input()\n# if(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n#     print(\"bad\")\n# else:\n#     print(\"good\")\n\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650790538,
  "object": "edit"
}
2022-04-24 08:55:45.632946 fix syntax errors 2 ['\nN = int(input())\nif(N % 2 == 0):\n    print(N // 2)\n', '\n\ns = input()\n# if(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n#     print("bad")\n# else:\n#     print("good")\n\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-24 08:55:45.633088 using api key soukgp
2022-04-24 08:55:53.098212 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "s = input() #\u6587\u5b57\u5217\u306e\u5165\u529b\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]): #\u6587\u5b57\u5217\u3092\u4e00\u6587\u5b57\u305a\u3064\u6bd4\u8f03\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "\ns = str(input())\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4]):\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    }
  ],
  "created": 1650790545,
  "object": "edit"
}
2022-04-24 08:55:53.098392 fix syntax errors 2 ['s = input() #文字列の入力\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3]): #文字列を一文字ずつ比較\n    print("Bad")\nelse:\n    print("Good")\n', '\ns = str(input())\n\nif(s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4]):\n    print("Bad")\nelse:\n    print("Good")\n']
2022-04-24 08:55:53.098418 size on output set 4
