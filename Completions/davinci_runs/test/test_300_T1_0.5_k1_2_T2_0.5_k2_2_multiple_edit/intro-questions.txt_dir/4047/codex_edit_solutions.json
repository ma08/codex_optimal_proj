["\n\nN = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\n\nmin_cost = float('inf')\nfor i in range(N):\n    cost = 0  # cost is 0 at the beginning\n    for j in range(N):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\n\nprint(min_cost)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(a[j] - a[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "#!/usr/bin/env python3\n\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nimport bisect\nimport math\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    s = input()\n    t = input()\n    gcd = math.gcd(n, m)\n    lcm = n * m // gcd\n    lcm_n = lcm // n\n    lcm_m = lcm // m\n    for i in range(gcd):\n        if s[i*lcm_n] != t[i*lcm_m]:\n            print(-1)\n            sys.exit()\n    print(lcm)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    s = input()\n    print(s[::-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())  # input the number of elements of the array\nx = list(map(int, input().split()))  # input the elements of the array\n\nx.sort()  # sort the elements of the array\n\n\nmin_cost = float('inf')  # set the minimum cost to infinity\nfor i in range(n):\n    cost = 0  # cost is 0 at the beginning, it is used to calculate the cost\n    for j in range(n):\n        cost += abs(x[j] - x[i])  # calculate the cost\n    min_cost = min(min_cost, cost)  # set the minimum cost\n\n\nprint(min_cost)  # print the minimum cost\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    y = list(map(int, input().split()))\n    y.sort()\n    print(y[n//2] - y[n//2 - 1])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    s = input()\n    print(s[::-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# a = [1, 2, 3]\n# n = 3\n\na.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(a[j] - a[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"]