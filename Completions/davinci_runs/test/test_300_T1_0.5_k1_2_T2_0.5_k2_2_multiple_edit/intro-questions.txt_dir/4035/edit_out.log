2022-04-24 05:50:07.348235 num operations 2
2022-04-24 05:50:07.348253 size on input set 1
2022-04-24 05:50:07.348388 using api key kouti
2022-04-24 05:50:12.908353 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650779407,
  "object": "edit"
}
2022-04-24 05:50:12.908566 fix spelling mistakes 2 ['\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-24 05:50:12.908590 size on output set 2
2022-04-24 05:50:12.908598 size on input set 2
2022-04-24 05:50:12.908722 using api key derek
2022-04-24 05:50:18.288231 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "#\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650779412,
  "object": "edit"
}
2022-04-24 05:50:18.288432 fix syntax errors 2 ['\n\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '#\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-24 05:50:18.288583 using api key derek
2022-04-24 05:50:25.327866 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # math.floor()\u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u308b\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650779418,
  "object": "edit"
}
2022-04-24 05:50:25.328066 fix syntax errors 2 ['import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # math.floor()は小数点以下を切り捨てる\n        print(i)\n        exit()\nprint(-1)\n', 'import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-24 05:50:25.328095 size on output set 4
2022-04-24 05:50:25.328106 num operations 2
2022-04-24 05:50:25.328112 size on input set 1
2022-04-24 05:50:25.328247 using api key kouti
2022-04-24 05:50:31.258125 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650779425,
  "object": "edit"
}
2022-04-24 05:50:31.258340 fix spelling mistakes 2 ["\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-24 05:50:31.258365 size on output set 1
2022-04-24 05:50:31.258373 size on input set 1
2022-04-24 05:50:31.258497 using api key sunu
2022-04-24 05:50:39.725307 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n\tif B % A == 0:\n\t\treturn B // A\n\telse:\n\t\treturn -1\n\nclass TestMain(unittest.TestCase):\n\tdef test_main(self):\n\t\tself.assertEqual(main(2, 2), 1)\n\t\tself.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n\tunittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\nimport math\n\nclass Main:\n    def main(self, A, B):\n        if B % A == 0:\n            return B // A\n        else:\n            return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(Main.main(2, 2), 1)\n        self.assertEqual(Main.main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650779431,
  "object": "edit"
}
2022-04-24 05:50:39.725494 fix syntax errors 2 ["\n\nimport unittest\nimport math\n\ndef main(A, B):\n\tif B % A == 0:\n\t\treturn B // A\n\telse:\n\t\treturn -1\n\nclass TestMain(unittest.TestCase):\n\tdef test_main(self):\n\t\tself.assertEqual(main(2, 2), 1)\n\t\tself.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n\tunittest.main()\n", "\n\nimport unittest\nimport math\n\nclass Main:\n    def main(self, A, B):\n        if B % A == 0:\n            return B // A\n        else:\n            return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(Main.main(2, 2), 1)\n        self.assertEqual(Main.main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-24 05:50:39.725520 size on output set 2
