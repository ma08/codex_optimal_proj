["\n\nimport unittest\nimport math\n\ndef main(A, B):\n\tif B % A == 0:\n\t\treturn B // A\n\telse:\n\t\treturn -1\n\nclass TestMain(unittest.TestCase):\n\tdef test_main(self):\n\t\tself.assertEqual(main(2, 2), 1)\n\t\tself.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n\tunittest.main()\n", "#\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # math.floor()\u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u308b\n        print(i)\n        exit()\nprint(-1)\n", "\n\n\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\nimport math\n\nclass Main:\n    def main(self, A, B):\n        if B % A == 0:\n            return B // A\n        else:\n            return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(Main.main(2, 2), 1)\n        self.assertEqual(Main.main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]