["\n\nimport sys\n\nN = int(input())\n\nbreak_flag = False\nbreak_flag2 = False\nbreak_flag3 = False\nbreak_flag4 = False\nbreak_flag5 = False\nbreak_flag6 = False\nbreak_flag7 = False\nbreak_flag8 = False\nbreak_flag9 = False\nbreak_flag10 = False\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\n    for j in range(N):\n        for k in range(N):\n            if x_y_h[i][0] == x_y_h[j][0] and x_y_h[i][1] != x_y_h[j][1] and x_y_h[i][2] == x_y_h[j][2]:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n            elif x_y_h[i][0] != x_y_h[j][0] and x_y_h[i][1] == x_y_h[j][1] and x_y_h[i][2] == x_y_h[j][2]:\n                C_X = (x_y_h[i][0] + x_y_h[j][0]) / 2\n                C_Y = x_y_h[i][1]\n                H = abs(x_y_h[i][0] - x_y_h[j][0]) + x_y_h[i][2]\n            elif x_y_h[i][0] == x_y_h[j][0] and x_y_h[i][1] == x_y_h[j][1] and x_y_h[i][2] != x_y_h[j][2]:\n                print(\"No\")\n                exit()\n            elif x_y_h[i][0] == x_y_h[k][0] and x_y_h[i][1] != x_y_h[k][1] and x_y_h[i][2] == x_y_h[k][2]:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[k][1]) / 2\n                H = abs(x_y_h[i][1] - x_y_h[k][1]) + x_y_h[i][2]\n            elif x_y_h[i][0] != x_y_h[k][0] and x_y_h[i][1] == x_y_h[k][1] and x_y_h[i][2] == x_y_h[k][2]:\n                C_X = (x_y_h[i][0] + x_y_h[k][0]) / 2\n                C_Y = x_y_h[i][1]\n                H = abs(x_y_h[i][0] - x_y_h[k][0]) + x_y_h[i][2]\n            elif x_y_h[i][0] == x_y_h[k][0] and x_y_h[i][1] == x_y_h[k][1] and x_y_h[i][2] != x_y_h[k][2]:\n                print(\"No\")\n                exit()\n        if break_flag:\n            break\n    if break_flag2:\n        break\n    if break_flag3:\n        break\n    if break_flag4:\n        break\n    if break_flag5:\n        break\n    if break_flag6:\n        break\n    if break_flag7:\n        break\n    if break_flag8:\n        break\n    if break_flag9:\n        break\n    if break_flag10:\n        break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[k][1]) / 2\n                H = abs(x_y_h[i][1] - x_y_h[k][1]) + x_y_h[i][2]\n                break_flag = True\n                break_flag2 = True\n                break_flag3 = True\n                break_flag4 = True\n                break_flag5 = True\n                break_flag6 = True\n                break_flag7 = True\n                break_flag8 = True\n                break_flag9 = True\n                break_flag10 = True\n            elif x_y_h[i][0] != x_y_h[k][0] and x_y_h[i][1] == x_y_h[k][1] and x_y_h[i][2] == x_y_h[k][2]:\n                C_X = (x_y_h[i][0] + x_y_h[k][0]) / 2\n                C_Y = x_y_h[i][1]\n                H = abs(x_y_h[i][0] - x_y_h[k][0]) + x_y_h[i][2]\n                break_flag = True\n                break_flag2 = True\n                break_flag3 = True\n                break_flag4 = True\n                break_flag5 = True\n                break_flag6 = True\n                break_flag7 = True\n                break_flag8 = True\n                break_flag9 = True\n                break_flag10 = True\n            elif x_y_h[i][0] == x_y_h[k][0] and x_y_h[i][1] == x_y_h[k][1] and x_y_h[i][2] != x_y_h[k][2]:\n                print(\"No\")\n                exit()\n        if break_flag:\n            break\n    if break_flag2:\n        break\n    if break_flag3:\n        break\n    if break_flag4:\n        break\n    if break_flag5:\n        break\n    if break_flag6:\n        break\n    if break_flag7:\n        break\n    if break_flag8:\n        break\n    if break_flag9:\n        break\n    if break_flag10:\n        break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\n\nimport sys\nN = int(input())\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "\n\nimport sys\nN = int(input())\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().strip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n\tn = int(sys.stdin.readline().strip())\n\tpoints = []\n\tfor i in range(n):\n\t\tx, y, h = map(int, sys.stdin.readline().strip().split())\n\t\tpoints.append((x, y, h))\n\t# print(points)\n\tcenter_x = 0\n\tcenter_y = 0\n\theight = 0\n\tfor i in range(n):\n\t\tfor j in range(i + 1, n):\n\t\t\tx1, y1, h1 = points[i]\n\t\t\tx2, y2, h2 = points[j]\n\t\t\tif x1 == x2:\n\t\t\t\tcenter_x = x1\n\t\t\t\tcenter_y = (y1 + y2) // 2\n\t\t\t\theight = h1 + abs(y1 - center_y)\n\t\t\telif y1 == y2:\n\t\t\t\tcenter_x = (x1 + x2) // 2\n\t\t\t\tcenter_y = y1\n\t\t\t\theight = h1 + abs(x1 - center_x)\n\t\t\telse:\n\t\t\t\tcenter_x = (x1 + x2) // 2\n\t\t\t\tcenter_y = (y1 + y2) // 2\n\t\t\t\theight = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n\t\t\t# print(center_x, center_y, height)\n\t\t\tif all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n\t\t\t\tprint(center_x, center_y, height)\n\t\t\t\tbreak\n\nif __name__ == \"__main__\":\n\tmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y) + h2\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x) + h2\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y) + h2\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"]