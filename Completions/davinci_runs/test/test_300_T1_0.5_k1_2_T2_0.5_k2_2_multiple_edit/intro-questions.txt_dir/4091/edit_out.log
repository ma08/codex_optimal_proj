2022-04-24 06:35:11.388933 num operations 2
2022-04-24 06:35:11.388953 size on input set 1
2022-04-24 06:35:11.389087 using api key kouti
2022-04-24 06:35:19.824531 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1650782111,
  "object": "edit"
}
2022-04-24 06:35:19.824755 fix spelling mistakes 2 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-24 06:35:19.824792 size on output set 2
2022-04-24 06:35:19.824800 size on input set 2
2022-04-24 06:35:19.824928 using api key kouti
2022-04-24 06:35:29.738477 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:i]), dp[i - 2][j - 1] + max(a[i - 2:i]), ...dp[i - k][j - 1] + max(a[i - k:i]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:i]), dp[i - 2][j - 1] + max(a[i - 2:i]), ...dp[i - k][j - 1] + max(a[i - k:i]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1650782119,
  "object": "edit"
}
2022-04-24 06:35:29.738688 fix syntax errors 2 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:i]), dp[i - 2][j - 1] + max(a[i - 2:i]), ...dp[i - k][j - 1] + max(a[i - k:i]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:i]), dp[i - 2][j - 1] + max(a[i - 2:i]), ...dp[i - k][j - 1] + max(a[i - k:i]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-24 06:35:29.738848 using api key kouti
2022-04-24 06:35:43.976042 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split()) # n = number of problems, k = number of days\na = list(map(int, input().split())) # a = list of problems\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1)) # min(k, i) because we can't use more than k days for i problems\n\nprint(dp[n][k]) # max profit\n\ni, j = n, k # starting from the bottom right corner of the dp table\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]): # when we reach the optimal solution for i problems in j days, we get the number of problems solved in the jth day\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1]) # print the days in reverse order\n"
    }
  ],
  "created": 1650782129,
  "object": "edit"
}
2022-04-24 06:35:43.976337 fix syntax errors 2 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', "\n\nn, k = map(int, input().split()) # n = number of problems, k = number of days\na = list(map(int, input().split())) # a = list of problems\n\n# dp[i][j] = max profit for i problems in j days.\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:])...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1)) # min(k, i) because we can't use more than k days for i problems\n\nprint(dp[n][k]) # max profit\n\ni, j = n, k # starting from the bottom right corner of the dp table\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]): # when we reach the optimal solution for i problems in j days, we get the number of problems solved in the jth day\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1]) # print the days in reverse order\n"]
2022-04-24 06:35:43.976381 size on output set 3
2022-04-24 06:35:43.976393 num operations 2
2022-04-24 06:35:43.976399 size on input set 1
2022-04-24 06:35:43.976524 using api key derek
2022-04-24 06:35:56.625722 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))\n    print(ans, end=\" \")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(j - i, end=\" \")\n        i = j\n\nmain()\n"
    }
  ],
  "created": 1650782144,
  "object": "edit"
}
2022-04-24 06:35:56.625903 fix spelling mistakes 2 ['\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', '\n\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))\n    print(ans, end=" ")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(j - i, end=" ")\n        i = j\n\nmain()\n']
2022-04-24 06:35:56.625933 size on output set 2
2022-04-24 06:35:56.625947 size on input set 2
2022-04-24 06:35:56.626085 using api key derek
2022-04-24 06:36:10.153164 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print(\"\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n+1)\n    for i in range(1, n+1):\n        dp[i] = max(dp[i-1], a[i-1])\n\n    ans = sum(dp[k:])\n    print(ans, end=\" \")\n    for i in range(k, n+1):\n        if dp[i-k] == dp[i]:\n            print(0, end=\" \")\n        else:\n            print(dp[i-k], end=\" \")\n\n\nmain()\n"
    }
  ],
  "created": 1650782156,
  "object": "edit"
}
2022-04-24 06:36:10.153403 fix syntax errors 2 ['\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[i] == dp[j]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print("")\n\nmain()\n', '\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n+1)\n    for i in range(1, n+1):\n        dp[i] = max(dp[i-1], a[i-1])\n\n    ans = sum(dp[k:])\n    print(ans, end=" ")\n    for i in range(k, n+1):\n        if dp[i-k] == dp[i]:\n            print(0, end=" ")\n        else:\n            print(dp[i-k], end=" ")\n\n\nmain()\n']
2022-04-24 06:36:10.153552 using api key jaanu
2022-04-24 06:36:20.826352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))\n    print(ans, end=\"\")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(\" \" + str(j - i), end=\"\")\n        i = j\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))  # \u548c\n    print(ans, end=\" \")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(j - i, end=\" \")\n        i = j\n\nmain()\n"
    }
  ],
  "created": 1650782170,
  "object": "edit"
}
2022-04-24 06:36:20.826542 fix syntax errors 2 ['\n\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))\n    print(ans, end="")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(" " + str(j - i), end="")\n        i = j\n\nmain()\n', '\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1], a[i - 1])\n    ans = sum(dp[i - k] for i in range(k, n + 1))  # 和\n    print(ans, end=" ")\n    for i in range(n):\n        j = i + k\n        if j > n: j = n\n        while j > i and dp[i] == dp[j]: j -= 1\n        print(j - i, end=" ")\n        i = j\n\nmain()\n']
2022-04-24 06:36:20.826650 size on output set 4
