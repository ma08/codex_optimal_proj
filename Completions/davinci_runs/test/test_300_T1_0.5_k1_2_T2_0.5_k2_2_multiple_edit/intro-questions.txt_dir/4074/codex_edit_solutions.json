["\n\n# cook your dish here.\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest = int(input())\nfor i in range(test):\n    n,k = map(int,input().split())\n    print(find(n,k))\n", "\n\ndef find(n, k):\n    if n % k == 0:\n        return n // k\n    else:\n        return n // k + 1\n\ntest = int(input())\nfor i in range(test):\n    n, k = map(int, input().split())\n    print(find(n, k))\n", "\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k) \n", "from typing import List\n\n\nclass Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        nums = sorted(nums1 + nums2)\n        n = len(nums)\n        if n % 2 == 0:\n            return (nums[n // 2] + nums[n // 2 - 1]) / 2\n        return nums[n // 2]\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    answer = s.findMedianSortedArrays([1, 3], [2])\n    print(answer)\n", "\n\n# cook your dish here\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"]