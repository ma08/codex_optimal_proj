2022-04-24 08:37:50.604918 num operations 2
2022-04-24 08:37:50.604937 size on input set 1
2022-04-24 08:37:50.605093 using api key derek
2022-04-24 08:37:56.516645 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input()\nt = input()\n \ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1650789470,
  "object": "edit"
}
2022-04-24 08:37:56.516848 fix spelling mistakes 2 ['\n\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\n\ns = input()\nt = input()\n \ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-24 08:37:56.516870 size on output set 2
2022-04-24 08:37:56.516877 size on input set 2
2022-04-24 08:37:56.516997 using api key kouti
2022-04-24 08:38:02.129685 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1650789476,
  "object": "edit"
}
2022-04-24 08:38:02.129897 fix syntax errors 2 ['# -*- coding: utf-8 -*-\n\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\ns = input() # string\nt = input() # string\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-24 08:38:02.130102 using api key kouti
2022-04-24 08:38:09.206412 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\nwith open('input.txt') as f:\n    data = f.read()\n    print(data)\n"
    }
  ],
  "created": 1650789482,
  "object": "edit"
}
2022-04-24 08:38:09.206579 fix syntax errors 2 ['\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', "\nwith open('input.txt') as f:\n    data = f.read()\n    print(data)\n"]
2022-04-24 08:38:09.206599 size on output set 4
2022-04-24 08:38:09.206609 num operations 2
2022-04-24 08:38:09.206615 size on input set 1
2022-04-24 08:38:09.206736 using api key sunu
2022-04-24 08:38:17.669674 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip() \n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys, os\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789489,
  "object": "edit"
}
2022-04-24 08:38:17.669867 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip() \n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys, os\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:38:17.669889 size on output set 2
2022-04-24 08:38:17.669895 size on input set 2
2022-04-24 08:38:17.670015 using api key soukgp
2022-04-24 08:38:24.627748 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys \n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789497,
  "object": "edit"
}
2022-04-24 08:38:24.627919 fix syntax errors 2 ['\nimport sys \n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n', "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:38:24.628069 using api key derek
2022-04-24 08:38:30.409689 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport os\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789504,
  "object": "edit"
}
2022-04-24 08:38:30.409883 fix syntax errors 2 ["\n\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport os\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:38:30.409909 size on output set 4
