2022-04-24 06:01:08.027581 num operations 2
2022-04-24 06:01:08.027601 size on input set 1
2022-04-24 06:01:08.027736 using api key soukgp
2022-04-24 06:01:22.988532 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a) # Counter is a dictionary storing elements and their corresponding counts\n    cnt_b = Counter(b) # Counter is a dictionary storing elements and their corresponding counts\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in \"RSP\")\n    w_b = sum(min(a_cnt[k], b_cnt[\"RSP\".replace(k, \"\")]) for k in \"RSP\")\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(\" \"))\n    b_cnt = Counter(stdin.readline().strip().split(\" \"))\n    print(\" \".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780068,
  "object": "edit"
}
2022-04-24 06:01:22.988752 fix spelling mistakes 2 ['\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a) # Counter is a dictionary storing elements and their corresponding counts\n    cnt_b = Counter(b) # Counter is a dictionary storing elements and their corresponding counts\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in "RSP")\n    w_b = sum(min(a_cnt[k], b_cnt["RSP".replace(k, "")]) for k in "RSP")\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(" "))\n    b_cnt = Counter(stdin.readline().strip().split(" "))\n    print(" ".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:01:22.988786 size on output set 2
2022-04-24 06:01:22.988793 size on input set 2
2022-04-24 06:01:22.988912 using api key jaanu
2022-04-24 06:01:30.668546 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a) # Counter is a dictionary storing elements and their corresponding counts\n    cnt_b = Counter(b) # Counter is a dictionary storing elements and their corresponding counts\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780083,
  "object": "edit"
}
2022-04-24 06:01:30.668732 fix syntax errors 2 ['\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a) # Counter is a dictionary storing elements and their corresponding counts\n    cnt_b = Counter(b) # Counter is a dictionary storing elements and their corresponding counts\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:01:30.668885 using api key kouti
2022-04-24 06:01:41.702183 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in \"RSP\".split())\n    w_b = sum(min(a_cnt[k], b_cnt[\"RSP\".replace(k, \"\")]) for k in \"RSP\".split())\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(\" \"))\n    b_cnt = Counter(stdin.readline().strip().split(\" \"))\n    print(\" \".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in \"RSP\") \n    w_b = sum(min(a_cnt[k], b_cnt[k.replace(k, \"\")]) for k in \"RSP\")\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(\" \")) #split() returns a list of splitted strings\n    b_cnt = Counter(stdin.readline().strip().split(\" \")) #Counter() returns a dict of the number of occurrences of each string\n    print(\" \".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780090,
  "object": "edit"
}
2022-04-24 06:01:41.702536 fix syntax errors 2 ['\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in "RSP".split())\n    w_b = sum(min(a_cnt[k], b_cnt["RSP".replace(k, "")]) for k in "RSP".split())\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(" "))\n    b_cnt = Counter(stdin.readline().strip().split(" "))\n    print(" ".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in "RSP") \n    w_b = sum(min(a_cnt[k], b_cnt[k.replace(k, "")]) for k in "RSP")\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(" ")) #split() returns a list of splitted strings\n    b_cnt = Counter(stdin.readline().strip().split(" ")) #Counter() returns a dict of the number of occurrences of each string\n    print(" ".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:01:41.702572 size on output set 4
2022-04-24 06:01:41.702583 num operations 2
2022-04-24 06:01:41.702588 size on input set 1
2022-04-24 06:01:41.702717 using api key jaanu
2022-04-24 06:01:48.241768 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780101,
  "object": "edit"
}
2022-04-24 06:01:48.241979 fix spelling mistakes 2 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:01:48.242014 size on output set 2
2022-04-24 06:01:48.242023 size on input set 2
2022-04-24 06:01:48.242159 using api key jaanu
2022-04-24 06:01:54.422052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780108,
  "object": "edit"
}
2022-04-24 06:01:54.422243 fix syntax errors 2 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:01:54.422408 using api key sunu
2022-04-24 06:02:04.341172 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins \n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650780114,
  "object": "edit"
}
2022-04-24 06:02:04.341445 fix syntax errors 2 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins \n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:02:04.341474 size on output set 3
