["\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in \"RSP\") \n    w_b = sum(min(a_cnt[k], b_cnt[k.replace(k, \"\")]) for k in \"RSP\")\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(\" \")) #split() returns a list of splitted strings\n    b_cnt = Counter(stdin.readline().strip().split(\" \")) #Counter() returns a dict of the number of occurrences of each string\n    print(\" \".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a_cnt, b_cnt):\n    w_a = sum(min(a_cnt[k], b_cnt[k]) for k in \"RSP\".split())\n    w_b = sum(min(a_cnt[k], b_cnt[\"RSP\".replace(k, \"\")]) for k in \"RSP\".split())\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a_cnt = Counter(stdin.readline().strip().split(\" \"))\n    b_cnt = Counter(stdin.readline().strip().split(\" \"))\n    print(\" \".join(map(str, min_max_wins(n, a_cnt, b_cnt))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a) # Counter is a dictionary storing elements and their corresponding counts\n    cnt_b = Counter(b) # Counter is a dictionary storing elements and their corresponding counts\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins \n    min_wins, max_wins = 0, 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"]