2022-04-24 08:34:13.511691 num operations 2
2022-04-24 08:34:13.511712 size on input set 1
2022-04-24 08:34:13.511862 using api key jaanu
2022-04-24 08:34:22.485271 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n"
    }
  ],
  "created": 1650789253,
  "object": "edit"
}
2022-04-24 08:34:22.485491 fix spelling mistakes 2 ['\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，横方向のループを縦方向のループとすることで，効率的に解くことができる\n', '\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，縦方向のループを横方向のループとすることで，効率的に解くことができる．\n']
2022-04-24 08:34:22.485524 size on output set 2
2022-04-24 08:34:22.485532 size on input set 2
2022-04-24 08:34:22.485726 using api key kouti
2022-04-24 08:34:31.428791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nT = input()\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\n"
    }
  ],
  "created": 1650789262,
  "object": "edit"
}
2022-04-24 08:34:31.428965 fix syntax errors 2 ['# 文字列の部分文字列を求める問題では，横方向のループを縦方向のループとすることで，効率的に解くことができる\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n', '\n\nS = input()\nT = input()\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，横方向のループを縦方向のループとすることで，効率的に解くことができる\n']
2022-04-24 08:34:31.429113 using api key sunu
2022-04-24 08:34:42.477041 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\n"
    },
    {
      "index": 1,
      "text": "\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S) - len(T) + 1):\n    count = 0\n    for j in range(len(T)):\n        if S[i + j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\n"
    }
  ],
  "created": 1650789271,
  "object": "edit"
}
2022-04-24 08:34:42.477215 fix syntax errors 2 ['\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，縦方向のループを横方向のループとすることで，効率的に解くことができる\n', '\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S) - len(T) + 1):\n    count = 0\n    for j in range(len(T)):\n        if S[i + j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，縦方向のループを横方向のループとすることで，効率的に解くことができる\n']
2022-04-24 08:34:42.477257 size on output set 4
2022-04-24 08:34:42.477268 num operations 2
2022-04-24 08:34:42.477273 size on input set 1
2022-04-24 08:34:42.477400 using api key derek
2022-04-24 08:34:50.321192 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_changes(s, t): # count min changes\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_changes(s, t, n):\n    count = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    n = len(t)\n    print(min_changes(s, t, n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789282,
  "object": "edit"
}
2022-04-24 08:34:50.321387 fix spelling mistakes 2 ["\n\ndef min_changes(s, t): # count min changes\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t, n):\n    count = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    n = len(t)\n    print(min_changes(s, t, n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:34:50.321411 size on output set 2
2022-04-24 08:34:50.321498 size on input set 2
2022-04-24 08:34:50.321621 using api key sunu
2022-04-24 08:34:58.550861 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789290,
  "object": "edit"
}
2022-04-24 08:34:58.551054 fix syntax errors 2 ["\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:34:58.551225 using api key sunu
2022-04-24 08:35:04.978507 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_changes(s, t): # count min changes\n    count = 0\n    for i in range(len(s)):\n        if t[i] != s[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789298,
  "object": "edit"
}
2022-04-24 08:35:04.978679 fix syntax errors 2 ["\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t): # count min changes\n    count = 0\n    for i in range(len(s)):\n        if t[i] != s[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:35:04.978702 size on output set 3
