["\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()][:n]\n    sums = [0] * (n + 1)\n    for i in range(n):\n        sums[i + 1] = sums[i] + a[i]\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0] * (n + 1)\n    for i in range(n):\n        sums[i + 1] = sums[i] + a[i]\n    blocks = []\n    for i in range(n-1):\n        for j in range(i+2, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1], reverse=True)\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n", "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n", "# https://codeforces.com/problemset/problem/1259/B\n\ndef main():\n    n, m, k = [int(s) for s in input().split()]\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    a.sort()\n    b.sort()\n\n    \n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n", "# https://codeforces.com/problemset/problem/1259/C\n\ndef find_max(a, n):\n    for i in range(n-1, -1, -1):\n        if a[i] == n-i:\n            return i\n\ndef find_min(a, n):\n    for i in range(n):\n        if a[i] == i+1:\n            return i\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()][::-1]\n    m = find_max(a, n)\n    a = a[::-1]\n    m = n-m-1\n    res = []\n    while True:\n        m = find_min(a, n)\n        if m == 0:\n            break\n        res.append(m)\n        a = a[m:] + a[:m]\n    print(len(res))\n    print(\" \".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef find_blocks(a, d):\n    n = len(a)\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\ndef find_ans(a):\n    n = len(a)\n    d = {}\n    find_blocks(a, d)\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_ans(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"]