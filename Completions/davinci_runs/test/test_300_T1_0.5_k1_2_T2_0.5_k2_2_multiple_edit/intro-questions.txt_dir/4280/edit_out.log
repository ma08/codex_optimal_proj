2022-04-24 09:03:16.052006 num operations 2
2022-04-24 09:03:16.052024 size on input set 1
2022-04-24 09:03:16.052153 using api key kouti
2022-04-24 09:03:22.626144 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650790996,
  "object": "edit"
}
2022-04-24 09:03:22.626349 fix spelling mistakes 2 ['\n\n\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:03:22.626383 size on output set 2
2022-04-24 09:03:22.626390 size on input set 2
2022-04-24 09:03:22.626514 using api key sunu
2022-04-24 09:03:29.034497 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#------------------------------------------------------------------------------#\n\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\n\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650791002,
  "object": "edit"
}
2022-04-24 09:03:29.034672 fix syntax errors 2 ['#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # edges[i] = [u, v]\n    for i in range(n - 1):\n\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\n\n\ndef solve(n, k, edges):\n    # TODO: Implement solution here\n    pass\n\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:03:29.034810 using api key soukgp
2022-04-24 09:03:34.708462 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650791009,
  "object": "edit"
}
2022-04-24 09:03:34.708637 fix syntax errors 2 ['\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#-----------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#-----------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 09:03:34.708665 size on output set 3
2022-04-24 09:03:34.708676 num operations 2
2022-04-24 09:03:34.708684 size on input set 1
2022-04-24 09:03:34.708820 using api key kouti
2022-04-24 09:03:47.107569 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    }
  ],
  "created": 1650791014,
  "object": "edit"
}
2022-04-24 09:03:47.107878 fix spelling mistakes 2 ["\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end = ' ')\n", "\n\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"]
2022-04-24 09:03:47.107914 size on output set 2
2022-04-24 09:03:47.107923 size on input set 2
2022-04-24 09:03:47.108065 using api key soukgp
2022-04-24 09:03:53.073361 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"
    }
  ],
  "created": 1650791027,
  "object": "edit"
}
2022-04-24 09:03:53.073526 fix syntax errors 2 ["\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n", "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"]
2022-04-24 09:03:53.073701 using api key soukgp
2022-04-24 09:03:58.523820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 1,
      "text": "n, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    }
  ],
  "created": 1650791033,
  "object": "edit"
}
2022-04-24 09:03:58.523994 fix syntax errors 2 ["\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "n, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"]
2022-04-24 09:03:58.524022 size on output set 3
