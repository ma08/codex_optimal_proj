2022-04-24 08:18:41.289234 num operations 2
2022-04-24 08:18:41.289254 size on input set 1
2022-04-24 08:18:41.289406 using api key kouti
2022-04-24 08:18:49.032933 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650788321,
  "object": "edit"
}
2022-04-24 08:18:49.033143 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:18:49.033170 size on output set 2
2022-04-24 08:18:49.033177 size on input set 2
2022-04-24 08:18:49.033310 using api key sunu
2022-04-24 08:18:54.558863 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650788329,
  "object": "edit"
}
2022-04-24 08:18:54.559058 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivor = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivor -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivor))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:18:54.559214 using api key jaanu
2022-04-24 08:19:01.169193 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(*survivors)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650788334,
  "object": "edit"
}
2022-04-24 08:19:01.169392 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(*survivors)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:19:01.169419 size on output set 3
2022-04-24 08:19:01.169431 num operations 2
2022-04-24 08:19:01.169437 size on input set 1
2022-04-24 08:19:01.169573 using api key sunu
2022-04-24 08:19:11.279029 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom functools import partial, reduce\n\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n"
    }
  ],
  "created": 1650788341,
  "object": "edit"
}
2022-04-24 08:19:11.279226 fix spelling mistakes 2 ['\n\nfrom functools import partial, reduce\n\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n']
2022-04-24 08:19:11.279250 size on output set 2
2022-04-24 08:19:11.279257 size on input set 2
2022-04-24 08:19:11.279379 using api key sunu
2022-04-24 08:19:16.696018 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n"
    },
    {
      "index": 1,
      "text": "\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n"
    }
  ],
  "created": 1650788351,
  "object": "edit"
}
2022-04-24 08:19:16.696208 fix syntax errors 2 ['\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n', '\nN, A, B = map(int, input().split())\n\nprint(min(A * N, B))\n']
2022-04-24 08:19:16.696350 using api key jaanu
2022-04-24 08:19:22.723764 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1650788356,
  "object": "edit"
}
2022-04-24 08:19:22.723937 fix syntax errors 2 ['\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(K)]\n\n# A = []\n# for i in range(K):\n#     d = int(input())\n#     A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-24 08:19:22.724054 size on output set 3
