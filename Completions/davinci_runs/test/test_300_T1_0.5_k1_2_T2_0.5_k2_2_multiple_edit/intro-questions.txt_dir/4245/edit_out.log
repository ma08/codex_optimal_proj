2022-04-24 08:37:13.169751 num operations 2
2022-04-24 08:37:13.169771 size on input set 1
2022-04-24 08:37:13.169910 using api key jaanu
2022-04-24 08:37:18.830368 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "# coding=utf-8\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    }
  ],
  "created": 1650789433,
  "object": "edit"
}
2022-04-24 08:37:18.830599 fix spelling mistakes 2 ['\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '# coding=utf-8\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n']
2022-04-24 08:37:18.830622 size on output set 2
2022-04-24 08:37:18.830629 size on input set 2
2022-04-24 08:37:18.830753 using api key jaanu
2022-04-24 08:37:25.456764 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding=utf-8\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\nprint(b // a + (b % a != 0))\n"
    },
    {
      "index": 1,
      "text": "# coding=utf-8\n\nimport sys\n\nA, B, C = map(int, sys.stdin.readline().rstrip().split())\nprint(C // A + (C % A != 0))\n"
    }
  ],
  "created": 1650789438,
  "object": "edit"
}
2022-04-24 08:37:25.456930 fix syntax errors 2 ['# coding=utf-8\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\nprint(b // a + (b % a != 0))\n', '# coding=utf-8\n\nimport sys\n\nA, B, C = map(int, sys.stdin.readline().rstrip().split())\nprint(C // A + (C % A != 0))\n']
2022-04-24 08:37:25.457069 using api key sunu
2022-04-24 08:37:31.214792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    }
  ],
  "created": 1650789445,
  "object": "edit"
}
2022-04-24 08:37:31.215005 fix syntax errors 2 ['import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n']
2022-04-24 08:37:31.215027 size on output set 4
2022-04-24 08:37:31.215038 num operations 2
2022-04-24 08:37:31.215045 size on input set 1
2022-04-24 08:37:31.215187 using api key soukgp
2022-04-24 08:37:37.097578 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B)\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B): # A: power per strip, B: total power required\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789451,
  "object": "edit"
}
2022-04-24 08:37:37.097797 fix spelling mistakes 2 ["\n\nimport math\n\ndef minPowerStrips(A, B)\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B): # A: power per strip, B: total power required\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:37:37.097820 size on output set 2
2022-04-24 08:37:37.097827 size on input set 2
2022-04-24 08:37:37.097945 using api key kouti
2022-04-24 08:37:44.410033 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef minPowerStrips(A, B): # A: power per strip, B: total power required\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\n\ndef minPowerStrips(A, B):  # A: power per strip, B: total power required\n\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789457,
  "object": "edit"
}
2022-04-24 08:37:44.410216 fix syntax errors 2 ["\nimport math\n\ndef minPowerStrips(A, B): # A: power per strip, B: total power required\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\n\ndef minPowerStrips(A, B):  # A: power per strip, B: total power required\n\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:37:44.410365 using api key kouti
2022-04-24 08:37:50.228487 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789464,
  "object": "edit"
}
2022-04-24 08:37:50.228675 fix syntax errors 2 ["\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:37:50.228709 size on output set 3
