["import sys\nfrom collections import deque\n\ndef solve(n, m, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef find_subseq(n, m, a, dp):\n    res = deque()\n    for i in range(n):\n        if dp[i] == m:\n            res.append(a[i])\n    return res\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n", "import sys\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "import doctest\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    doctest.testmod()\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Author: Shuailong\n# @Email: liangshuailong@gmail.com\n# @Date: 2019-06-26 17:20:08\n# @Last Modified by: Shuailong\n# @Last Modified time: 2019-06-26 17:20:15\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) #doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) #doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) #doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n", "import sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    s = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"]