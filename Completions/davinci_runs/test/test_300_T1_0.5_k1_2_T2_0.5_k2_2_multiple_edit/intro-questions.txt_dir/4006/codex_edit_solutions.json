["\ndef f(n, k):\n    if n >= k:\n        return n - k\n    else:\n        return f(n * 2, k) + 1\n\ndef main():\n    n = int(input())\n    k = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n, k)\n    print(len(memo))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    f_in = open(\"f.in\", \"r\")  # open the file with name 'f.in'\n    n = int(f_in.readline())\n    print(count_reachable(n))  # print the answer\n\n# count the number of reachable numbers\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n - 1) + is_reachable(n - 1, n)\n\n# check if the number is reachable\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:  # if last digit is 0, we can divide by 10\n        return is_reachable(n // 10, m)\n    return is_reachable(n - 1, m)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n - 1) + is_reachable(n - 1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n\n    if n < 1:\n        return 0\n\n    if n % 10 == 0:  # if last digit is 0, we can divide by 10\n        return is_reachable(n // 10, m)\n    return is_reachable(n - 1, m)\ndef main():\n    f_in = open(\"f.in\", \"r\")  # open the file with name 'f.in'\n    n = int(f_in.readline())\n    print(count_reachable(n))  # print the answer\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input(\"Input: \"))\n    print(count_reachable(n))\n\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n - 1) + is_reachable(n - 1, n)\n\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n // 10, m)\n    return is_reachable(n - 1, m)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def f(x):\n    x = x + 1\n    while x % 10 == 0:\n        x = x // 10\n    return x\n\ndef main():\n    x = int(input())\n    s = set()\n    while x not in s:\n        s.add(x)\n        x = f(x)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    f_in = open(\"input.txt\", \"r\")\n    n = int(f_in.readline().strip())\n    print(count_reachable_numbers(n))\n\ndef count_reachable_numbers(n):\n    if n == 1:\n        return 2\n    return count_reachable_numbers(n-1) + is_reachable(n-1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef f(x, y):\n    return x + y\n\ndef main():\n    x = int(input())\n    y = int(input())\n    print(f(x, y))\n\nif __name__ == \"__main__\":\n    main()\n"]