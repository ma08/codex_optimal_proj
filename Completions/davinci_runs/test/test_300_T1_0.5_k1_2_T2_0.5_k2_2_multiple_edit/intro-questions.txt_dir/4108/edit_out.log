2022-04-24 06:50:59.432726 num operations 2
2022-04-24 06:50:59.432745 size on input set 1
2022-04-24 06:50:59.432876 using api key derek
2022-04-24 06:51:05.951155 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650783059,
  "object": "edit"
}
2022-04-24 06:51:05.951390 fix spelling mistakes 2 ["\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 06:51:05.951419 size on output set 2
2022-04-24 06:51:05.951426 size on input set 2
2022-04-24 06:51:05.951546 using api key derek
2022-04-24 06:51:16.313742 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef is_anagram(s, t):\n    return sorted(s) == sorted(t)\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650783065,
  "object": "edit"
}
2022-04-24 06:51:16.313971 fix syntax errors 2 ["\nimport sys\n\ndef is_anagram(s, t):\n    return sorted(s) == sorted(t)\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 06:51:16.314121 using api key derek
2022-04-24 06:51:23.758906 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()  # \u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u53d6\u5f97\nt = sys.stdin.readline().rstrip()  # \u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u53d6\u5f97\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650783076,
  "object": "edit"
}
2022-04-24 06:51:23.759081 fix syntax errors 2 ["\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq_sort(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()  # 入力された文字列を取得\nt = sys.stdin.readline().rstrip()  # 入力された文字列を取得\n\nif can_eq_sort(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 06:51:23.759113 size on output set 4
2022-04-24 06:51:23.759124 num operations 2
2022-04-24 06:51:23.759130 size on input set 1
2022-04-24 06:51:23.759269 using api key soukgp
2022-04-24 06:51:30.787088 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650783083,
  "object": "edit"
}
2022-04-24 06:51:30.787275 fix spelling mistakes 2 ["\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 06:51:30.787314 size on output set 1
2022-04-24 06:51:30.787322 size on input set 1
2022-04-24 06:51:30.787453 using api key jaanu
2022-04-24 06:51:36.373054 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----#\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650783090,
  "object": "edit"
}
2022-04-24 06:51:36.373272 fix syntax errors 2 ["\n\n# -----Answer-----#\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 06:51:36.373385 size on output set 2
