["\nimport sys\n\ndef read_int():\n  return int(sys.stdin.readline())\n\ndef read_line():\n  return sys.stdin.readline().strip()\n\ndef read_ints():\n  return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n  s = read_line()\n  m = read_int()\n  b = read_ints()\n  t = [''] * len(s)\n  for i in range(len(s)-1, -1, -1):\n    t[i] = chr(ord(s[i])+b[i])\n  return ''.join(t)\n\ndef main():\n  q = read_int()\n  for _ in range(q):\n    print(solve())\n\nif __name__ == '__main__':\n  main()\n", "import sys\nimport math\n\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve(s, m, b):\n    t = [''] * (len(s) + m)\n    for i in range(len(s)):\n        t[i] = chr(ord(s[i]) + b[i])\n    for i in range(len(s), len(s) + m):\n        t[i] = chr(ord('a') + b[i])\n    return ''.join(t[::-1])\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input().strip()\n        m = int(input())\n        b = list(map(int, input().strip().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string \n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    return\n\ndef main():\n    print(solve())\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    n = read_int()\n    b = read_ints()\n    t = [''] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"]