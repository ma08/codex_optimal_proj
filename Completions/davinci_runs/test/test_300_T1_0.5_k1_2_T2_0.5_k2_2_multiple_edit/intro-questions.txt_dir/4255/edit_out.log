2022-04-24 08:44:20.459285 num operations 2
2022-04-24 08:44:20.459305 size on input set 1
2022-04-24 08:44:20.459451 using api key sunu
2022-04-24 08:44:26.856783 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b = map(int, input().split())\nprint(int((a * b) / 2))\n"
    },
    {
      "index": 1,
      "text": "\n\nab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / ca))\n"
    }
  ],
  "created": 1650789860,
  "object": "edit"
}
2022-04-24 08:44:26.856988 fix spelling mistakes 2 ['\n\na, b = map(int, input().split())\nprint(int((a * b) / 2))\n', '\n\nab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / ca))\n']
2022-04-24 08:44:26.857008 size on output set 2
2022-04-24 08:44:26.857016 size on input set 2
2022-04-24 08:44:26.857144 using api key sunu
2022-04-24 08:44:32.970670 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b = map(int, input().split())\nprint(int((a * b) / 2))\n"
    },
    {
      "index": 1,
      "text": "\n\na = int(input())\nprint(int(a * 1.8 + 32))\n"
    }
  ],
  "created": 1650789866,
  "object": "edit"
}
2022-04-24 08:44:32.970834 fix syntax errors 2 ['\na, b = map(int, input().split())\nprint(int((a * b) / 2))\n', '\n\na = int(input())\nprint(int(a * 1.8 + 32))\n']
2022-04-24 08:44:32.970967 using api key soukgp
2022-04-24 08:44:39.632772 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "ab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / ca))\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    ab, bc, ca = map(int, input().split())\n    print(int((ab * bc) / ca))\n    \nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650789873,
  "object": "edit"
}
2022-04-24 08:44:39.632942 fix syntax errors 2 ['ab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / ca))\n', "\ndef main():\n    ab, bc, ca = map(int, input().split())\n    print(int((ab * bc) / ca))\n    \nif __name__ == '__main__':\n    main()\n"]
2022-04-24 08:44:39.632961 size on output set 4
2022-04-24 08:44:39.632972 num operations 2
2022-04-24 08:44:39.632978 size on input set 1
2022-04-24 08:44:39.633103 using api key sunu
2022-04-24 08:44:52.525767 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n# \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n"
    }
  ],
  "created": 1650789879,
  "object": "edit"
}
2022-04-24 08:44:52.525953 fix spelling mistakes 2 ['\n\nimport math\n# Ввод данных и присваивание переменным\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# Сравнение и вычисление\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n', "\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n"]
2022-04-24 08:44:52.525996 size on output set 2
2022-04-24 08:44:52.526003 size on input set 2
2022-04-24 08:44:52.526127 using api key derek
2022-04-24 08:45:02.497686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n# \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\n"
    },
    {
      "index": 1,
      "text": "import math\n# \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n"
    }
  ],
  "created": 1650789892,
  "object": "edit"
}
2022-04-24 08:45:02.497963 fix syntax errors 2 ['\n\nimport math\n# Ввод данных и присваивание переменным\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# Сравнение и вычисление\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(p)\n    else:\n        p = (a + b + c) / 2\n        print(p)\n', 'import math\n# Ввод данных и присваивание переменным\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n# Сравнение и вычисление\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n']
2022-04-24 08:45:02.498187 using api key jaanu
2022-04-24 08:45:37.228131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\na = int(input())\nb = int(input())\nc = int(input())\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n"
    }
  ],
  "created": 1650789902,
  "object": "edit"
}
2022-04-24 08:45:37.228331 fix syntax errors 2 ["\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n\n# import math\n#\n# abc = input().split()\n# a, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n#\n# if a >= b and a >= c:\n#     if b >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# elif b >= a and b >= c:\n#     if a >= c:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n# else:\n#     if a >= b:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n#     else:\n#         p = (a + b + c) / 2\n#         print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n", "\nimport math\n\na = int(input())\nb = int(input())\nc = int(input())\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))  # Heron's formula\n"]
2022-04-24 08:45:37.228452 size on output set 4
