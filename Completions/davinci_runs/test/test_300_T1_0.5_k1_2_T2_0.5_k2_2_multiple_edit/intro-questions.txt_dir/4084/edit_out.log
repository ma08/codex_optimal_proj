2022-04-24 06:30:19.344734 num operations 2
2022-04-24 06:30:19.344755 size on input set 1
2022-04-24 06:30:19.344904 using api key jaanu
2022-04-24 06:30:26.831014 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,a,b = map(int, input().split())\n\nif a > b:\n    a,b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n"
    },
    {
      "index": 1,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    }
  ],
  "created": 1650781819,
  "object": "edit"
}
2022-04-24 06:30:26.831315 fix spelling mistakes 2 ['\n\nn,a,b = map(int, input().split())\n\nif a > b:\n    a,b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n', '\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n']
2022-04-24 06:30:26.831338 size on output set 2
2022-04-24 06:30:26.831346 size on input set 2
2022-04-24 06:30:26.831468 using api key jaanu
2022-04-24 06:30:37.005708 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 1,
      "text": "a,b = map(int,input().split())\n\nif a % b == 0:\n    print(0) # \u4f59\u308a\u304c\u306a\u3044\u5834\u5408\u306f0\nelse:\n    print(min(n,a))\n"
    }
  ],
  "created": 1650781826,
  "object": "edit"
}
2022-04-24 06:30:37.005922 fix syntax errors 2 ['n,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n', 'a,b = map(int,input().split())\n\nif a % b == 0:\n    print(0) # 余りがない場合は0\nelse:\n    print(min(n,a))\n']
2022-04-24 06:30:37.006125 using api key kouti
2022-04-24 06:30:45.591903 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,a,b = map(int, input().split())\n\nif a > b: a,b = b, a\n\nif a == 0: print(0)\nelse:\n    print(min(n, a))\n"
    },
    {
      "index": 1,
      "text": "\nn,a,b = map(int, input().split())\n\nif a > b:\n    a,b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n"
    }
  ],
  "created": 1650781837,
  "object": "edit"
}
2022-04-24 06:30:45.592089 fix syntax errors 2 ['\n\nn,a,b = map(int, input().split())\n\nif a > b: a,b = b, a\n\nif a == 0: print(0)\nelse:\n    print(min(n, a))\n', '\nn,a,b = map(int, input().split())\n\nif a > b:\n    a,b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n']
2022-04-24 06:30:45.592110 size on output set 4
2022-04-24 06:30:45.592122 num operations 2
2022-04-24 06:30:45.592127 size on input set 1
2022-04-24 06:30:45.592260 using api key jaanu
2022-04-24 06:30:51.664027 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    }
  ],
  "created": 1650781845,
  "object": "edit"
}
2022-04-24 06:30:51.664247 fix spelling mistakes 2 ["\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n", "\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n % (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"]
2022-04-24 06:30:51.664274 size on output set 1
2022-04-24 06:30:51.664281 size on input set 1
2022-04-24 06:30:51.664406 using api key jaanu
2022-04-24 06:31:02.345690 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, a, b, c = map(int, input().split())\n\n# The pattern is repeated every (a + b + c) balls.\n# We can find our answer by finding the remainder of n % (a + b + c)\n# and counting the number of blue balls in that pattern\nn = n % (a + b + c)\n\n# If we don't have enough balls to fill out a pattern\n# we can simply count the number of blue balls we have\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern\n    print(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, a, b = map(int, input().split())\n\nif n <= a:\n    print(n)\nelif n <= a + b:\n    print(a)\nelse:\n    n = n - a - b\n    print(a - n % (a + b))\n\n"
    }
  ],
  "created": 1650781851,
  "object": "edit"
}
2022-04-24 06:31:02.345895 fix syntax errors 2 ["\n\nn, a, b, c = map(int, input().split())\n\n# The pattern is repeated every (a + b + c) balls.\n# We can find our answer by finding the remainder of n % (a + b + c)\n# and counting the number of blue balls in that pattern\nn = n % (a + b + c)\n\n# If we don't have enough balls to fill out a pattern\n# we can simply count the number of blue balls we have\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern\n    print(a)\n", '\n\nn, a, b = map(int, input().split())\n\nif n <= a:\n    print(n)\nelif n <= a + b:\n    print(a)\nelse:\n    n = n - a - b\n    print(a - n % (a + b))\n\n']
2022-04-24 06:31:02.345928 size on output set 2
