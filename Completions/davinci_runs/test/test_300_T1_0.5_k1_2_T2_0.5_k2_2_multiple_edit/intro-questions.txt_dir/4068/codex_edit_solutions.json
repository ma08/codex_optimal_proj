["\n\nn, m = map(int, input().split())\nbroken = set(map(int, input().split()))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 0\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n", "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    broken_steps.sort()\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nsys.setrecursionlimit(1000000)\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    broken_steps.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, m = map(int, input().split())\nbroken = set(map(int, [input() for _ in range(m)]))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 0\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n", "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += b[a[i]-1]\n    if i != n-1 and a[i] == a[i+1]-1:\n        ans += c[a[i]-1]\nprint(ans)\n", "\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    broken_steps.sort()\n    dp = np.zeros((N+1))\n    dp[0] = 1\n    dp[1] = 2\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n", "x = int(input())\nprint(x)\n"]