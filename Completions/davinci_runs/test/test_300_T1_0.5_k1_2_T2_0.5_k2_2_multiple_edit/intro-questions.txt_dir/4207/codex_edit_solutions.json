["\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    \n    if a == [0] * n:\n        print(0)\n        return\n    if b == [0] * n:\n        print(n // 2)\n        return\n    \n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] * b[n - 1 - i] >= 0:\n            break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import bisect\n\ndef solve(a, b):\n    c = [a1+b1 for a1, b1 in zip(a, b)]\n    c.sort()\n    zero_idx = bisect.bisect_left(c, 0)\n    return zero_idx + (len(c) - zero_idx - 1)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(solve(a, b))\n", "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]  # \u6a19\u6e96\u5165\u529b\n    b = [int(i) for i in input().split()]  # \u6a19\u6e96\u5165\u529b\n\n    if a == [0] * n:  # n\u500b\u306e0\u304c\u5165\u3063\u305f\u30ea\u30b9\u30c8\n        print(0)\n        return\n    if b == [0] * n:  # n\u500b\u306e0\u304c\u5165\u3063\u305f\u30ea\u30b9\u30c8\n        print(n)\n        return\n\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] * b[n - 1 - i] > 0:\n            break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport bisect\n\ndef solve(a, b):\n    c = [a1+b1 for a1, b1 in zip(a, b)]\n    c.sort()\n    zero_idx = bisect.bisect_left(c, 0)\n    return zero_idx + (len(c) - zero_idx - 1)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(solve(a, b))\n", "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    \n    if a == [0] * n:\n        print(0)\n        return\n    if b == [0] * n:\n        print(n)\n        return\n    \n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] * b[n - 1 - i] >= 0:\n            break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n\n    if a == [0] * n:\n        print(0)\n        return\n    if b == [0] * n:\n        print(n)\n        return\n\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] * b[n - 1 - i] > 0:\n            break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef solve(a):\n    a.sort()\n    n = len(a)\n    d = defaultdict(int)\n    for i, ai in enumerate(a):\n        d[ai] = i\n    ans = 0\n    for i, ai in enumerate(a):\n        j = d[ai]\n        if j == i:\n            continue\n        ans += min(abs(i - j), n - abs(i - j))\n    return ans\n\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(a))\n", "\n\nimport bisect\n\ndef solve(a, b):\n    c = [a1+b1 for a1, b1 in zip(a, b)]\n    c.sort()\n    zero_idx = bisect.bisect_left(c, 0)\n    return zero_idx + len(c) - zero_idx - 1\n\n\nif __name__ == '__main__':\n    n = int(input())  # read a line with a single integer\n    a = [int(s) for s in input().split(\" \")]  # read a list of integers, 2 in this case\n    b = [int(s) for s in input().split(\" \")]  # read a list of integers, 2 in this case\n    print(solve(a, b))\n"]