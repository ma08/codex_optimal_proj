["import sys\nsys.setrecursionlimit(10**6)\n\ndef dfs(curr_node, curr_cost):\n    global min_cost\n    if curr_node == dst:\n        min_cost = min(min_cost, curr_cost)\n        return\n    elif curr_cost > min_cost:\n        return\n    else:\n        for i in range(n):\n            if not visited[i] and cost[curr_node][i] != -1:\n                visited[i] = True\n                dfs(i, curr_cost + cost[curr_node][i])\n                visited[i] = False\n\ndef main():\n    global n, cost, visited, min_cost, dst\n    n = int(sys.stdin.readline())\n    cost = [[-1 for _ in range(n)] for _ in range(n)]\n    for _ in range(n):\n        line = list(map(int, sys.stdin.readline().split()))\n        for i in range(n):\n            cost[line[0] - 1][i] = line[i + 1]\n    k = int(sys.stdin.readline())\n    for _ in range(k):\n        src, dst = map(int, sys.stdin.readline().split())\n        src -= 1\n        dst -= 1\n        visited = [False for _ in range(n)]\n        min_cost = 10**8\n        visited[src] = True\n        dfs(src, 0)\n        if min_cost == 10**8:\n            print(-1)\n        else:\n            print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "print('Hello World!')\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())  # type: int, int\n    min_cost = t + 1  # type: int\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())  # type: int, int\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = [] \n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "#https://atcoder.jp/contests/abc123/tasks/abc123_a\n\n\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = [] \n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N,T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c,t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i]<=T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]