2022-04-24 06:00:35.123891 num operations 2
2022-04-24 06:00:35.123911 size on input set 1
2022-04-24 06:00:35.124054 using api key kouti
2022-04-24 06:00:42.903487 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(2+2)\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650780035,
  "object": "edit"
}
2022-04-24 06:00:42.903690 fix spelling mistakes 2 ['\nprint(2+2)\n', '\n#\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-24 06:00:42.903711 size on output set 2
2022-04-24 06:00:42.903718 size on input set 2
2022-04-24 06:00:42.903836 using api key sunu
2022-04-24 06:00:48.503280 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650780042,
  "object": "edit"
}
2022-04-24 06:00:48.503475 fix syntax errors 2 ['\n# \nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-24 06:00:48.503612 using api key soukgp
2022-04-24 06:00:54.381269 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(2 + 2)\n"
    },
    {
      "index": 1,
      "text": "\nprint(2 + 2)\n"
    }
  ],
  "created": 1650780048,
  "object": "edit"
}
2022-04-24 06:00:54.381443 fix syntax errors 2 ['\nprint(2 + 2)\n', '\nprint(2 + 2)\n']
2022-04-24 06:00:54.381460 size on output set 3
2022-04-24 06:00:54.381471 num operations 2
2022-04-24 06:00:54.381477 size on input set 1
2022-04-24 06:00:54.381597 using api key derek
2022-04-24 06:00:59.841678 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650780054,
  "object": "edit"
}
2022-04-24 06:00:59.841855 fix spelling mistakes 2 ["\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 06:00:59.841880 size on output set 1
2022-04-24 06:00:59.841887 size on input set 1
2022-04-24 06:00:59.842028 using api key jaanu
2022-04-24 06:01:07.656915 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x = y = 1\n    moves = 0\n    while True:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        elif n == x * y:\n            return moves\n        else:\n            x += 1  # n > x * y\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650780059,
  "object": "edit"
}
2022-04-24 06:01:07.657107 fix syntax errors 2 ["\ndef min_moves(n):\n    x = y = 1\n    moves = 0\n    while True:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        elif n == x * y:\n            return moves\n        else:\n            x += 1  # n > x * y\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 06:01:07.657136 size on output set 2
