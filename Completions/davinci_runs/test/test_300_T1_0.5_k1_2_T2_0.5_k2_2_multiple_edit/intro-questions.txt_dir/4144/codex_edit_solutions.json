["N, K = map(int, input().split())\nA = list(map(int, input().split()))\n\n\nmax_a = max(A)\n\nif max_a < K:\n    print('IMPOSSIBLE')\n    exit()\n\nif max_a == K:\n    print('POSSIBLE')\n    exit()\n\nif K % 2 == 1:\n    print('IMPOSSIBLE')\n    exit()\n\nif K % 2 == 0:\n    if K in A:\n        print('POSSIBLE')\n        exit()\n\n    for a in A:\n        if a % 2 == 0:\n            print('POSSIBLE')\n            exit()\n\n    print('IMPOSSIBLE')\n    exit()\n\n", "\n\n# ---- answer ----\n\nn = int(input())\n\n# dp[i][j] ... i \u6841\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u306b\u3001j=0 \u306e\u3068\u304d\u306f 0 \u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3001j=1 \u306e\u3068\u304d\u306f 9 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\ndp = [[0]*2 for _ in range(n+1)]\ndp[0][0] = 1\nmod = 10**9+7\n\nfor i in range(1,n+1):\n    dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % mod\n    dp[i][1] = dp[i-1][0]\n\nprint((dp[n][0] + dp[n][1]) % mod)\n", "\n\n# ---- answer\n\nn = int(input())\n\n# dp[i][j] ... i \u6841\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u306b\u3001j=0 \u306e\u3068\u304d\u306f 0 \u304c\u542b\u307e\u308c\u3066\u3044\u308b, j=1 \u306e\u3068\u304d\u306f 9 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\ndp = [[0]*2 for _ in range(n+1)]\ndp[0][0] = 1\nmod = 10**9+7\n\nfor i in range(1,n+1):\n    dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % mod\n    dp[i][1] = dp[i-1][0]\n\nprint((dp[n][0] + dp[n][1]) % mod)\n", "# Python 3\n\n# ---- answer ----\n\nn = int(input())\n\n# dp[i][j] ... i \u6841\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u306b\u3001j=0 \u306e\u3068\u304d\u306f 0 \u304c\u542b\u307e\u308c\u3066\u3044\u308b, j=1 \u306e\u3068\u304d\u306f 9 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\ndp = [[0]*2 for _ in range(n+1)]\ndp[0][0] = 1\nmod = 10**9+7\n\nfor i in range(1,n+1):\n    dp[i][0] = (dp[i-1][0] + dp[i-1][1])%mod\n    dp[i][1] = dp[i-1][0] % mod\n\nprint((dp[n][0] + dp[n][1]) % mod)\n", "# ---- answer ----\n\nn = int(input())\n\n# dp[i][j] ... i \u6841\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u306b\u3001j=0 \u306e\u3068\u304d\u306f 0 \u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3001j=1 \u306e\u3068\u304d\u306f 9 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\ndp = [[0]*2 for _ in range(n+1)]\ndp[0][0] = 1\nmod = 10**9+7\n\nfor i in range(1,n+1):\n    dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % mod\n    dp[i][1] = dp[i-1][0]\n\nprint((dp[n][0] + dp[n][1]) % mod)\n", "import heapq\n\nN, M = map(int, input().split())\ngraph = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b, c = map(int, input().split())\n    graph[a - 1].append((b - 1, -c))\n\nINF = 10**18\ndist = [INF] * N\ndist[0] = 0\n\n\nq = []\nheapq.heappush(q, (0, 0))\nwhile q:\n    d, v = heapq.heappop(q)\n    if dist[v] < d:\n        continue\n    for nv, nd in graph[v]:\n        nd += d\n        if dist[nv] > nd:\n            dist[nv] = nd\n            heapq.heappush(q, (nd, nv))\n\n\nprint(-dist[N - 1])\n"]