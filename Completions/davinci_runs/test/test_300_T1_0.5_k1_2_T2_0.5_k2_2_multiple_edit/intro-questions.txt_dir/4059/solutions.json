["N = int(input())\nANS = 1\nfor i in range(1,N-1):\n  ANS += (N-1)//i\n  \nprint(ANS)", "N = int(input())\nans = 0\nfor i in range(1, N):\n    ans += (N-1) // i\n\nprint(ans)\n", "\nimport math\n\n# ------------->>>>>>>>>>>>|<<<<<<<<<<<<<<<--------------\nN = int(input())\ncnt = 0\nfor i in range(1, N + 1):\n    cnt += ((N-1 )// i)\n\n\n    \n\n\nprint(cnt)\n", "N = int(input())\n\nb_num = 0\nfor a in range(1, N):\n    if N % a == 0:\n        b_num += int(N / a) - 1\n    else:\n        b_num += N // a\n        \nprint(b_num)", "def main():\n    n = int(input())\n    m = int(n**0.5)+1\n    ans = 0\n    for a in range(1, m):\n        for b in range(a, n):\n            if a*b < n:\n                if a != b:\n                    ans += 2\n                else:\n                    ans += 1\n            else:\n                break\n    print(ans)\n\n\nmain()\n", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)", "N = int(input())\nans = 0\nfor i in range(1, N):\n    ans += (N - 1) // i\nprint(ans)", "N = int(input())\n\ncnt = 0\nfor i in range(1,N):\n    cnt += (N-1)//i\n\nprint(cnt)\n", "N = int(input())\ncnt = 0\nfor i in range(1, N):\n  add =  (N-1)//i\n#  print(add)\n  cnt += add\n  if add < 1:\n    break\n    \nprint(cnt)", "N = int(input())\nans = 0\nfor i in range(1, N):\n    if N % i != 0:\n        ans += N // i\n    else:\n        ans += N // i - 1\nprint(ans)", "from sys import stdin\nN = int(stdin.readline().rstrip())\nans = 0\nfor i in range(1, N):\n    ans += (N-1) // i\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(1,n):\n  ans += ((n-1)//i)\nprint(ans)", "n=int(input())\nsum=0\nfor a in range(1,n):\n  sum=sum+(n-1)//a\nprint(sum)", "n = int(input())\nans = 0\nfor i in range(n-1):\n    ans += (n-1)//(i+1)\n    \nprint(ans)", "N=int(input())\ncount=0\nfor A in range(1,N):\n  count+=(N-1)//A\nprint(count)\n  \n", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)\n\n", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)\n", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)", "# -*- coding: utf-8 -*-\n\n\ndef run_prime_factorization(max_number: int) -> dict:\n    '''Run prime factorization.\n    Args:\n        max_number: Int of number (greater than 1).\n    Returns:\n        A dictionary's items ((base, exponent) pairs).\n    Landau notation: O(log n)\n    '''\n\n    from math import sqrt\n\n    ans = dict()\n    remain = max_number\n\n    for base in range(2, int(sqrt(max_number)) + 1):\n        if remain % base == 0:\n            exponent_count = 0\n\n            while remain % base == 0:\n                exponent_count += 1\n                remain //= base\n\n            ans[base] = exponent_count\n\n    if remain != 1:\n        ans[remain] = 1\n\n    return ans\n\n\ndef main():\n    from math import floor\n    import sys\n    input = sys.stdin.readline\n\n    n = int(input())\n    ans = 0\n\n    for a in range(1, n):\n        b = floor(n / a)\n        ans += b\n\n    p = list(run_prime_factorization(n).values())\n\n    if len(p) == 1:\n        ans -= list(p)[0]\n    else:\n        count = 1\n\n        for pi in p:\n            count *= (pi + 1)\n\n        ans -= count\n        ans += 1\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\ncn=0\nfor i in range(1,n):\n    cn+=(n-1)//i\nprint(cn)", "N = int(input())\nans = 0\n\nfor a in range(1, N):\n    ans += (N - 1) // a\n\nprint(ans)\n", "n = int(input())\nans = 0\nfor i in range(1, n):\n    ans += (n-1)//i\nprint(ans)", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    n = int(input())\n    ans = 0\n\n    # KeyInsight:\n    # \u5909\u6570\u3092\u4e00\u3064\u56fa\u5b9a\n    # \u5f0f\u3092\u6027\u8cea\u3092\u4fdd\u6301\u3057\u306a\u304c\u3089\u3001\u5358\u7d14\u5316\u3059\u308b\n    for a in range(1, n):\n        # a * b <= n - 1\n        ans += (n - 1) // a\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = int(input())\n    ans, i = 0, 1\n    while i < n:\n        ans += (n-1) // i\n        i += 1\n    print(ans)\n\n\nmain()", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)", "import math\n\nn = int(input())\n\nans = 0\n\nfor i in range(1,n):\n    ans += math.floor((n-1)/i)\n\nprint(ans)\n", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n - 1) // a\nprint(ans)", "def main():\n    n = int(input())\n    ans = 0\n    for a in range(1, 10 ** 6 + 1):\n        b = 1\n        while a * b < n:\n            ans += 1\n            b += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ncount = 0\nfor a in range(1,n):\n    count += (n-1) // a\nprint(count)", "N = int(input())\ncount=0\nfor a in range(1, N):\n    g = N // a\n    if N % a ==0:\n        g += -1\n    count += g\nprint(count)", "n = int(input())\nsumn = 0\nfor a in range(1,n+1):\n  if n % a == 0:\n    sumn += n // a - 1\n  else:\n    sumn += n // a\nprint(sumn)", "n = int(input())\nans = 0\n\nfor a in range(1, n):\n    ans += (n-1) // a\n\nprint(ans)", "#\uff43\u306f\u8003\u3048\u306a\u304f\u3066\u826f\u3044\u3000A*B = N - c \u3088\u308a\u3000A*B < N\u3068\u8003\u3048\u308c\u3070OK\n# N%a == 0 \u306e\u3068\u304d\nN = int(input())\nans = 0\nfor a in range(1, N):\n    if N % a == 0:\n        ans += (N // a - 1)\n    else:\n        ans += (N // a)\nprint(ans)", "N = int(input())\nans = 0\nfor a in range(1,N):\n    ans += (N-1)//a\nprint(ans)", "N = int(input())\n        \ncount = 0\nfor A in range(1,N):\n    count += (N-1)//A\nprint(count)  ", "def kai():\n    n = int(input())\n    ans = 0\n    for a in range(1,n):\n        for b in range(1,n):\n            c = n - a*b\n            if c > 0:\n                ans += 1\n                \n            else:\n                break\n    return ans\nprint(kai())", "# -*- coding: utf-8 -*-\n\n\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef input_int():\n    return int(input())\n\n\n# \u30de\u30a4\u30ca\u30b91\u3057\u305f\u5024\u3092\u8fd4\u5374\ndef int1(x):\n    return int(x) - 1\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066Map\u3067\u53d7\u3051\u53d6\u308b\ndef input_to_int_map():\n    return list(map(int, input().split()))\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef input_to_int_tuple():\n    return tuple(map(int, input().split()))\n\n\n# \u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u5165\u529b\u3092Int\u306b\u5909\u63db\u3057\u3066\u30de\u30a4\u30ca\u30b91\u3057\u305f\u5024\u3092\u53d7\u3051\u53d6\u308b\ndef input_to_int_tuple_minus1():\n    return tuple(map(int1, input().split()))\n\ncache = {}\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5//1))+1):\n        if temp // i in cache:\n            arr = cache[temp // i]\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp //= i\n            arr.append([i, cnt])\n\n    if temp!=1:\n        arr.append([temp, 1])\n\n    if arr==[]:\n        arr.append([n, 1])\n\n    cache[n] = arr\n    return arr\n\ndef main():\n    N = input_int()\n\n    cnt = 0\n    for a in range(1, N):\n        for b in range(1, N):\n            if a * b - N < 0:\n                cnt += 1\n            else:\n                break\n\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\ncount=0\nfor i in range(1,N):\n    h=(N-1) // i \n    count+=h\nprint(count)", "N = int(input())\ncount=0\n\nfor A in range(1,N-1):\n    B =  (N-1)//A\n    count += B\n\nprint(count+1)     ", "n = int(input())\nans = 0\nfor a in range(1, n + 1):\n    ans += (n - 1) // a\nprint(ans)", "n = int(input())\nans = 0\nfor a in range(1, n):\n  ans += (n-1) // a\nprint(ans)", "n = int(input())\nx = 0\nfor i in range(1,n):\n  x += (n-1) // i\nprint(x)\n", "n = int(input())\n\nans = 0\nfor i in range(1, n):\n    ans += (n - 1) // i\nprint(ans)\n", "n = int(input())\ncount = 0\nfor a in range(1,n):\n  count += (n-1) // a\n\nprint(count)\n", "import math\n\nN = int(input())\n\nres = 0\nfor a in range(1, N):\n  res += math.floor((N-1) / a)\n\nprint(res)", "n = int(input())\nans = 0\nfor i in range(1,n):\n    ans += (n-1)//i\nprint(ans)", "import math\n\nN = int(input())\n\nS = 0\n\nfor A in range(1, N):\n  S += max(0, int(math.ceil(N/A) - 1))\n\nprint(S)", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\n\nn = ri()\nans = 0\nfor a in range(1, n):\n    ans += (n-1)//a\nprint(ans)\n\n", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    cnt = 0\n    for a in range(1, n):\n        for b in range(1, n):\n            if a * b < n:\n                cnt += 1\n            else:\n                break\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\n\nk = 0\nfor i in range(1, n):\n    k += (n-1)//i\n\nprint(k)", "n = int(input())\nans = 0;\nfor a in range(1,n):\n  ans += (n-1)//a\nprint(ans)", "n=int(input())\ncnt=0\nfor a in range(1,n+1):\n    cnt += (n-1)//a\nprint(cnt)", "#abc179c\nn=int(input())\nres=0\nfor i in range(1,n):\n res+=(n-1)//i\nprint(res)\n", "n = int(input())\ncount = 0\n\nfor a in range(1, n + 1):\n  for b in range(a, n + 1):\n    if a * b >= n:\n      break\n    count += 2 if a != b else 1\n     \nprint(count)", "#C\n#A*B+C=N A*B=N-C\nn = int(input())\nans=0\nfor i in range(1, n):\n    ans += (n - 1) // i\nprint(ans)", "N = int(input())\n\nans = 0\n\nfor i in range(1,N):\n    ans += int((N-1)/i)\nprint(ans)", "N=int(input())\ncount=0\nfor A in range(1,10**6+1):\n  if A > N:\n    break\n  else:\n    count+=(N-1)//A\nprint(count)", "n=int(input())\nans=0\nfor i in range(1,n):\n    if n%i==0:\n        ans+=n//i -1\n    else:\n        ans+=n//i\n\nprint(ans)", "n = int(input())\nans= 0\nfor i in range(1, n):\n    ans += (n - 1) // i\nprint(ans)", "import math\nn=int(input())\nk=0\nl=int(math.sqrt(n-1))\nfor i in range(1,l+1):\n    k+=(n-1)//i-i\nprint(k*2+l)", "def solve():\n    ans = 0\n\n    for a in range(1, n):\n        for b in range(1, n):\n            c = n - a * b\n            if c <= 0:\n                break\n            else:\n                ans += 1\n\n    return ans\n\n\nn = int(input())\n\nprint((solve()))\n", "N = int(input())\ncount = 0\n\nfor a in range(1, N):\n    count +=int((N-1)/a)\n\nprint(count)", "# -*- coding: utf-8 -*-\n\nn = int(input())\n\ncount = 0\nmax_divisor_n = n // 2\nfor a in range(1, n):\n    # \u30eb\u30fc\u30d7\u306f a >= b \u3067\u56de\u3057\u3001a != b \u306e\u6642\u306f\u5165\u308c\u66ff\u3048\u305f\u30b1\u30fc\u30b9\u3082\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n    for b in range(1, a+1):\n        if a*b >= n:\n            break\n        # c = n - a*b \u3068\u3059\u308c\u3070\u3088\u3044\n        count += 1\n        if a != b:\n            count += 1\nprint(count)", "#\u6642\u9593\u5236\u9650\u304c\u304b\u304b\u308bn > a*b\u306e\u6642\u3092\u8003\u3048\u308b1< a < n-1\nn = int(input())\nans = 0\nfor i in range(1,n):\n    if n % i == 0:\n        ans += n // i - 1\n    else:\n        ans += n // i\n    \nprint(ans)\n\n", "import numpy as np\n\nN = int(input())\n\nLS = np.array([sum([1 for i in range((N - 1)//(j + 1))]) for j in range(N)])\n\nprint((sum(LS)))\n", "import math\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N):\n    count += math.ceil(N / i) - 1\n\nprint(count)\n", "n = int(input())\nans = 0\nfor a in range(1,n):\n    ans += (n-1)//a\nprint(ans)\n\n", "N = int(input())\ncount = 0\nfor i in range(1,N):\n    count += (N-1)//i\nprint(count)", "n = int(input())\nans = 0\nfor i in range(n-1):\n    ans += (n-1)//(i+1)\n\nprint(ans)", "N=int(input())\ncount=0\nfor A in range(1,N):\n    count+=(N-1)//A\n\n\nprint(count)", "N = int(input())\nans = 0\nfor A in range(1, N):\n    ans += (N - 1) // A\nprint(ans)", "\nn = int(input())\ncount = 0\n\nfor i in range(1, n):\n    count += (n-1) // i\nprint(count)\n", "n = int(input())\n\nans = 0\nfor i in range(1, n):\n    ans += (n - 1) // i\n\nprint(ans)\n", "N=int(input())\nans=0\n\nfor a in range(1,N):\n  n=(N-1)//a\n  ans+=n\nprint(ans)", "n = int(input())\nt = int(n**(1/2))\na = 0\nfor i in range(1,t+1):\n  if i**2 == n:\n    a += i-1\n  else:\n    if int((n-1)/i) > t:\n      a += int((n-1)/i)*2 - t\n    else:\n      a += int((n-1)/i)\nprint(a)", "N = int(input())\nans = 0\nfor i in range(1, N):\n  ans += int((N-1)/i)\n\nprint(ans)", "n = int(input())\n# def make_divisors(n):\n#     lower_divisors , upper_divisors = [], []\n#     i = 1\n#     while i*i <= n:\n#         if n % i == 0:\n#             lower_divisors.append(i)\n#             if i != n // i:\n#                 upper_divisors.append(n//i)\n#         i += 1\n#     return lower_divisors + upper_divisors[::-1]\n# cnt=0\n# for c in range(1,n):\n#     ab = n-c\n#     ls = make_divisors(ab)\n#     cnt+=len(ls)\n# print(cnt, flush=True)\n\n# C will be decided automatically\ncnt=0\nfor a in range(1,n):\n    b = (n-1)//a\n    cnt += b\nprint(cnt, flush=True)\n\n", "N = int(input())\nans = 0\nfor a in range(1, N):\n    ans += (N-1) // a\nprint(ans)", "# coding:utf-8\n\nn = int(input())\ncount = 0\n\nfor a in range(1, n):\n    count += (n-1)//a\n\n\nprint(count)\n", "N=int(input())\nans=0\nfor a in range(1,N):\n  ans+=(N-1)//a\nprint(ans)", "n = int(input())\nans = 0\nfor i in range(n-1):\n    ans += (n-1)//(i+1)\n    \nprint(ans)\n", "n = int(input())\nans = 0\nfor a in range(1,n):\n    ans+=(n-1)//a\nprint(ans)\n", "import math\nn=int(input())\nsumm=0\nfor i in range(1,n):\n    summ+=(n-1)//i\nprint(summ)    ", "N = int(input())\nans = 0\nfor i in range(1, N):\n    ans += (N - 1) // i\nprint(ans)", "n = int(input())\nout = 0\nfor i in range(1, n):\n  out += n // i\n  if n % i == 0:\n    out -= 1\nprint(out)", "n = int(input())\nans = 0\nfor i in range(1,n):\n    ans += (n - 1) // i\nprint(ans)", "import math\n\n\ndef main():\n    n = int(input())\n    cnt = 0\n    for a in range(1, n):\n        for b in range(1, n):\n            if n - a * b > 0:\n                cnt += 1\n            else:\n                break\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\nans = 0\n\nfor i in range(1,n):\n    ans += (n-1)//i\n\nprint(ans)", "N = int(input())\ncnt = 0\nfor i in range(1,N):\n  cnt += (N-1)//i\nprint(cnt)", "n = int(input())\n\nans = 0\nfor i in range(1, n):\n    ans += (n - 1) // i\nprint(ans)\n", "N = int(input())\ntupes = 0\nfor a in range(1,N):\n    tupes += (N-1)//a\n        \nprint(tupes)", "\ndef parse():\n  N = int(input())\n  return N\n\ndef main():\n  N = parse()\n\n  limit_n = 10 ** 6\n\n  ans = 0\n  for A in range(1, min(limit_n, N)):\n    for B in range(1, min(limit_n, N)):\n      if A * B >= N: break\n\n      # C = N - A * B\n      # if C == 0: continue\n\n      # if A * B + C == N:\n        # print(A, B, C)\n      ans += 1\n\n  print(ans)\n\ndef __starting_point():\n  main()\n\n__starting_point()", "n=int(input())\nr=0\nfor i in range(1,n):\n    r+=(n-1)//i\nprint(r)", "n = int(input())\nans = 0\nfor i in range(1, 10**6):\n    ans += (n-1) // i\n\nprint(ans)\n", "N=int(input());print(sum(~-N//i for i in range(1,-~N)))", "# def cin():\n#     return list(map(int, input().split()))\n\n# count = 0\n# N = cin()[0]\n\n# for i in range(1, N+1):\n#     num = N - i\n#     for j in range(1, N+1):\n#         if num != 0 and num % j == 0:\n#             count += 1\n    \n# print(count)\nimport math\n\n\ndef cin():\n    return list(map(int, input().split()))\n\ncount = 0\nN = cin()[0]\n\nfor A in range(1, N+1):\n    B = math.floor(N / A)\n    C = N % A\n    \n    if B != 0 and C != 0:\n        count += B\n    elif B != 0 and C == 0:\n        count += B - 1\n    \nprint(count)", "n = int(input())\nans = 0\nfor i in range(1, n):\n    ans += (n - 1) // i\nprint(ans)\n", "n = int(input())\n\ncount = 0\n\nfor i in range(1, n):\n    res = (n - 1) // i\n#    print(res)\n    count += res\n\nprint(count)\n", "n=int(input())\nu=0\nfor i in range(1,n):\n    u=u+(n-1)//i\n\nprint(u)\n"]