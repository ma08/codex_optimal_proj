2022-04-24 06:36:21.201096 num operations 2
2022-04-24 06:36:21.201116 size on input set 1
2022-04-24 06:36:21.201282 using api key jaanu
2022-04-24 06:36:32.507496 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    print(\"Hello World!\")\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650782181,
  "object": "edit"
}
2022-04-24 06:36:32.507720 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    print("Hello World!")\nif __name__ == \'__main__\':\n    main()\n', "\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 06:36:32.507741 size on output set 2
2022-04-24 06:36:32.507748 size on input set 2
2022-04-24 06:36:32.507868 using api key sunu
2022-04-24 06:36:38.609447 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650782192,
  "object": "edit"
}
2022-04-24 06:36:38.609613 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n', "#!/usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 06:36:38.609800 using api key kouti
2022-04-24 06:36:45.050031 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nprint(\"Hello World!\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n\n\n    print(\"Hello World!\")\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650782198,
  "object": "edit"
}
2022-04-24 06:36:45.050253 fix syntax errors 2 ['\n\nimport sys\nprint("Hello World!")\n', '\nimport sys\n\n\ndef main():\n\n\n    print("Hello World!")\nif __name__ == \'__main__\':\n    main()\n']
2022-04-24 06:36:45.050275 size on output set 4
2022-04-24 06:36:45.050287 num operations 2
2022-04-24 06:36:45.050294 size on input set 1
2022-04-24 06:36:45.050414 using api key soukgp
2022-04-24 06:36:53.108325 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"
    }
  ],
  "created": 1650782205,
  "object": "edit"
}
2022-04-24 06:36:53.108514 fix spelling mistakes 2 ['\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__=="__main__":\n    main()\n']
2022-04-24 06:36:53.108546 size on output set 2
2022-04-24 06:36:53.108553 size on input set 2
2022-04-24 06:36:53.108676 using api key derek
2022-04-24 06:37:03.941696 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) \n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # input\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    # processing\n    prefix_sum = [0] * n\n    for i in range(n):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i] if i > 0 else arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict.keys():\n        ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\n    # output\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650782213,
  "object": "edit"
}
2022-04-24 06:37:03.941910 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) \n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__=="__main__":\n    main()\n', '\ndef main():\n    # input\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    # processing\n    prefix_sum = [0] * n\n    for i in range(n):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i] if i > 0 else arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict.keys():\n        ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\n    # output\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 06:37:03.942210 using api key derek
2022-04-24 06:37:11.711627 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n+1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n+1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key, value in prefix_sum_dict.items():\n        ans += len(value) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"
    }
  ],
  "created": 1650782223,
  "object": "edit"
}
2022-04-24 06:37:11.711817 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1) # prefix sum\n\n    for i in range(1, n+1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {} # prefix sum dictionary\n    for i in range(n+1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key, value in prefix_sum_dict.items():\n        ans += len(value) - 1\n\n    print(ans)\n\nif __name__=="__main__":\n    main()\n']
2022-04-24 06:37:11.711849 size on output set 4
