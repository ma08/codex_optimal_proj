["\n\ns = input()\nif len(s) % 2 == 0 and (s[0] in 'RDL') and (s[-1] in 'RDL'):\n    print('Yes')\nelse:\n    print('No')\n", "\nn = int(input())\ns = input()\n\nodds = [s[i] for i in range(n) if i % 2 == 0]\nevens = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "s = input()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD') and (s.count('U') == s.count('D')) and (s.count('R') == s.count('L')):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = input().split()\n\nif (len(s) % 2 == 0) and (s[0] in 'RUD') and (s[-1] in 'LUD'):\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = list(input())\n\nn = len(s)\n\nodds = [s[i] for i in range(n) if i % 2 == 0]\nevens = [s[i] for i in range(n) if i % 2 == 1]\n\nif all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    s = list(input())\n\n    n = len(s)\n\n    odds = [s[i] for i in range(n) if i % 2 == 0]\n    evens = [s[i] for i in range(n) if i % 2 == 1]\n\n    if all(x in ['R', 'U', 'D'] for x in odds) and all(x in ['L', 'U', 'D'] for x in evens):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n", "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Feb  4 23:55:54 2020\n@author: yuzhang\n\"\"\"\nimport sys\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm\nfrom scipy.stats import ttest_1samp\nfrom scipy.stats import ttest_ind\nfrom scipy.stats import ttest_rel\nfrom statsmodels.stats.power import ttest_power\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nfrom statsmodels.stats.multicomp import MultiComparison\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.anova import anova_lm\nfrom statsmodels.graphics.regressionplots import *\nfrom statsmodels.graphics.factorplots import interaction_plot\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom statsmodels.stats.diagnostic import het_breuschpagan\nfrom statsmodels.stats.diagnostic import het_white\nfrom statsmodels.stats.diagnostic import het_goldfeldquandt\nfrom statsmodels.stats.diagnostic import het_arch\nfrom statsmodels.stats.stattools import durbin_watson\nfrom statsmodels.stats.stattools import jarque_bera\nfrom statsmodels.stats.stattools import omni_normtest\nfrom statsmodels.stats.stattools import levene\nfrom statsmodels.stats.stattools import shapiro\nfrom statsmodels.stats.stattools import kstest\nfrom statsmodels.stats.stattools import sms\nfrom statsmodels.stats.stattools import coint\nfrom statsmodels.stats.stattools import kpss\nfrom statsmodels.stats.stattools import adfuller\nfrom statsmodels.stats.stattools import q_stat\nfrom statsmodels.stats.stattools import grangercausalitytests\nfrom statsmodels.stats.stattools import acorr_ljungbox\nfrom statsmodels.stats.stattools import acf\nfrom statsmodels.stats.stattools import pacf\nfrom statsmodels.stats.stattools import medcouple\nfrom statsmodels.stats.stattools import het_breuschpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats.stattools import het_white\nfrom statsmodels.stats.stattools import het_goldfeldquandt\nfrom statsmodels.stats.stattools import het_arch\nfrom statsmodels.stats.stattools import het_breushpagan\nfrom statsmodels.stats\n", "\ns = input()[::-1]\nprint('Yes' if (len(s) % 2 == 0) and (s[0] in 'RDL') and (s[-1] in 'RDL') else 'No')\n"]