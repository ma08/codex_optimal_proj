["\n\ninput_str = input() \n\n#is_palindrome = True \n#for i in range(int(len(input_str) / 2)):\n#    if input_str[i] != input_str[-i - 1]:\n#        is_palindrome = False\n\n#if is_palindrome:\n#    print('Yes')\n#else:\n#    print('No')\n\nprint(input_str[::-1])\n", "\ninput_str = input() \n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second (from end to start)\nsecond = second[::-1]\n\n#sets first to reversed first (from end to start)\nfirst = first[::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line (if odd, it will be rounded up)\nfirst = line[:ln/2+1]\n\n#sets second to second half of line (if odd, it will be rounded up)\nsecond = line[ln/2:]\n\n#reverses second\nsecond = second[::-1]\n\n#reverses first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) // 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line (if odd, it will be rounded down) \nfirst = line[:ln/2] \n\n#sets second to second half of line (if odd, it will be rounded up) \nsecond = line[ln/2+1:]\n\n#reverses second \nsecond = second[::-1]\n\n#reverses first \nfirst = first[::-1]\n\n#sets middle to middle of line \nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line \nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second (from end to start)\nsecond = second[::-1]\n\n#sets first to reversed first (from end to start)\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and middle == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"]