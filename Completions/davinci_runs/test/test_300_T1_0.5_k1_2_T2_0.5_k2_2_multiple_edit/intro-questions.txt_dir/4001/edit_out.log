2022-04-24 05:20:22.015368 num operations 2
2022-04-24 05:20:22.015385 size on input set 1
2022-04-24 05:20:22.015535 using api key jaanu
2022-04-24 05:20:32.138163 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ndivisor = list(map(int, input().split()))\na = 1\nb = 1\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    }
  ],
  "created": 1650777622,
  "object": "edit"
}
2022-04-24 05:20:32.138388 fix spelling mistakes 2 ['\nn = int(input())\ndivisor = list(map(int, input().split()))\na = 1\nb = 1\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n', '\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n']
2022-04-24 05:20:32.138417 size on output set 2
2022-04-24 05:20:32.138425 size on input set 2
2022-04-24 05:20:32.138552 using api key kouti
2022-04-24 05:20:41.200092 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = y = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans += a[i] * a[j]\nprint(ans)\n"
    }
  ],
  "created": 1650777632,
  "object": "edit"
}
2022-04-24 05:20:41.200269 fix syntax errors 2 ['\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = y = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\nn = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans += a[i] * a[j]\nprint(ans)\n']
2022-04-24 05:20:41.200431 using api key sunu
2022-04-24 05:20:49.500362 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ndivisor = list(map(int, input().split()))\na = divisor[0]\nb = divisor[0]\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Dec 13 12:24:04 2018\n\n@author: alexandreboyker\n\"\"\"\nn = int(input())\ndivisor = list(map(int, input().split()))\na = 1\nb = 1\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n"
    }
  ],
  "created": 1650777641,
  "object": "edit"
}
2022-04-24 05:20:49.500543 fix syntax errors 2 ['\nn = int(input())\ndivisor = list(map(int, input().split()))\na = divisor[0]\nb = divisor[0]\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Dec 13 12:24:04 2018\n\n@author: alexandreboyker\n"""\nn = int(input())\ndivisor = list(map(int, input().split()))\na = 1\nb = 1\nfor i in range(n):\n    if divisor[i] == 1:\n        pass\n    elif divisor[i] == divisor[i + 1]:\n        a *= divisor[i]\n    elif divisor[i] != divisor[i + 1]:\n        b *= divisor[i]\nprint(a, b)\n']
2022-04-24 05:20:49.500568 size on output set 4
2022-04-24 05:20:49.500579 num operations 2
2022-04-24 05:20:49.500584 size on input set 1
2022-04-24 05:20:49.500718 using api key sunu
2022-04-24 05:20:56.382556 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650777649,
  "object": "edit"
}
2022-04-24 05:20:56.382760 fix spelling mistakes 2 ['\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n', '\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n']
2022-04-24 05:20:56.382784 size on output set 2
2022-04-24 05:20:56.382791 size on input set 2
2022-04-24 05:20:56.382923 using api key derek
2022-04-24 05:21:05.589750 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# output numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "\n# read N\nN = int(input())\n# read list\nL = [int(i) for i in input().split()]\n\n# create dictionary for numbers\nD = {}\nfor i in range(N):\n    D[L[i]] = D.get(L[i], 0) + 1\n\n# create list of numbers\nX = []\nfor i in range(N):\n    if D[L[i]] % 2:\n        X.append(L[i])\n\n# print numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650777656,
  "object": "edit"
}
2022-04-24 05:21:05.589942 fix syntax errors 2 ['\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# output numbers\nprint(X[0], X[1])\n', '\n# read N\nN = int(input())\n# read list\nL = [int(i) for i in input().split()]\n\n# create dictionary for numbers\nD = {}\nfor i in range(N):\n    D[L[i]] = D.get(L[i], 0) + 1\n\n# create list of numbers\nX = []\nfor i in range(N):\n    if D[L[i]] % 2:\n        X.append(L[i])\n\n# print numbers\nprint(X[0], X[1])\n']
2022-04-24 05:21:05.590093 using api key derek
2022-04-24 05:21:14.047850 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# read N\nN = int(input())\n# read numbers\nL = input().split()\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1 # get(key, default)\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2: # check if number occurs odd times\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "\n\n# read N, and create empty list\nL = []\n\nN = int(input())\n# read list\nfor i in range(N):\n    L.append(int(input()))\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650777665,
  "object": "edit"
}
2022-04-24 05:21:14.048186 fix syntax errors 2 ['\n\n# read N\nN = int(input())\n# read numbers\nL = input().split()\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1 # get(key, default)\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2: # check if number occurs odd times\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n', '\n\n# read N, and create empty list\nL = []\n\nN = int(input())\n# read list\nfor i in range(N):\n    L.append(int(input()))\n\n# create dictionary for numbers and count them\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers that occur odd times\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print odd numbers\nprint(X[0], X[1])\n']
2022-04-24 05:21:14.048227 size on output set 4
