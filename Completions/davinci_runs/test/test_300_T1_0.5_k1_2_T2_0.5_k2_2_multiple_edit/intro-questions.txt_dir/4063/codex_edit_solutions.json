["n = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\n\ncnt = 0\nfor i in range(n//2):\n    if d[i] == d[i+n//2]:\n        cnt += 1\n    else:\n        break\nprint(n//2 + cnt)\n", "\n# Import\nimport sys\nimport math\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve \nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    elif d[i] < d[N//2]:\n        break\n\nprint(count)\n", "\n# Import\nimport sys\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    elif d[i] < d[N//2]:\n        break\n\nprint(count)\n", "n = int(input())\nd = list(map(int, input().split()))\n\nd.sort(reverse=True)\n\ncnt = 0\nfor i in range(n // 2):\n    if d[i] == d[i + n // 2]:\n        cnt += 1\n    else:\n        break\nprint(n // 2 + cnt)\n", "\nn = int(input())\nd = list(map(int, input().split()))\nd.sort(reverse=True)\n\ncnt = 0\nfor i in range(n//2):\n    if d[i] == d[i+n//2]:\n        cnt += 1\n    else:\n        break\nprint(n//2 + cnt)\n", "\n# Import\nimport sys\nimport math\nimport os\nimport glob\nimport re\nimport operator\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\ndef get_file_list(dir_name):\n    return glob.glob(dir_name+'/*')\n\ndef get_file_name(file_name):\n    return re.findall(r'/([a-zA-Z0-9_]+).txt', file_name)[0]\n\ndef get_file_size(file_name):\n    return os.path.getsize(file_name)\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Get file list\nfile_list = get_file_list('.')\n\n# Make dictionary\nfile_dict = dict()\nfor file_name in file_list:\n    file_dict[get_file_name(file_name)] = get_file_size(file_name)\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    elif d[i] < d[N//2]:\n        break\n\nprint(count)\n"]