2022-04-24 07:55:25.341960 num operations 2
2022-04-24 07:55:25.341980 size on input set 1
2022-04-24 07:55:25.342106 using api key jaanu
2022-04-24 07:55:31.985423 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {\n        \"soft\": 0,\n        \"hard\": 0\n    }\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650786925,
  "object": "edit"
}
2022-04-24 07:55:31.985670 fix spelling mistakes 2 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {\n        "soft": 0,\n        "hard": 0\n    }\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 07:55:31.985710 size on output set 2
2022-04-24 07:55:31.985718 size on input set 2
2022-04-24 07:55:31.985842 using api key jaanu
2022-04-24 07:55:38.311723 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {\"soft\": 0, \"hard\": 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {\n        \"soft\": 0,\n        \"hard\": 0\n    }\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"]) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650786932,
  "object": "edit"
}
2022-04-24 07:55:38.311897 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    cheeses = {"soft": 0, "hard": 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {\n        "soft": 0,\n        "hard": 0\n    }\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"]) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 07:55:38.312039 using api key sunu
2022-04-24 07:55:45.365846 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese, hardness = input().split()\n        if hardness not in cheeses:\n            cheeses[hardness] = 0\n        cheeses[hardness] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])  # noqa: E501\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650786938,
  "object": "edit"
}
2022-04-24 07:55:45.366034 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese, hardness = input().split()\n        if hardness not in cheeses:\n            cheeses[hardness] = 0\n        cheeses[hardness] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])  # noqa: E501\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 07:55:45.366060 size on output set 4
2022-04-24 07:55:45.366071 num operations 2
2022-04-24 07:55:45.366076 size on input set 1
2022-04-24 07:55:45.366212 using api key kouti
2022-04-24 07:55:54.986676 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650786945,
  "object": "edit"
}
2022-04-24 07:55:54.986876 fix spelling mistakes 2 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-24 07:55:54.986909 size on output set 2
2022-04-24 07:55:54.986916 size on input set 2
2022-04-24 07:55:54.987052 using api key jaanu
2022-04-24 07:56:01.861696 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    }
  ],
  "created": 1650786955,
  "object": "edit"
}
2022-04-24 07:56:01.861988 fix syntax errors 2 ["\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"]
2022-04-24 07:56:01.862197 using api key sunu
2022-04-24 07:56:11.997023 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    }
  ],
  "created": 1650786961,
  "object": "edit"
}
2022-04-24 07:56:11.997203 fix syntax errors 2 ["\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft * hard)\n"]
2022-04-24 07:56:11.997231 size on output set 4
