2022-04-20 00:45:20.302620 num operations 1
2022-04-20 00:45:20.302639 size on input set 1
2022-04-20 00:45:20.302799 using api key soukgp
2022-04-20 00:45:23.202258 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(a)\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print(\"Hello\")\n\nmain()\n"
    }
  ],
  "created": 1650415520,
  "object": "edit"
}
2022-04-20 00:45:23.202525 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print("YES" if sorted(a) == a else "NO")\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print(a)\n    print("YES" if sorted(a) == a else "NO")\n\n\nmain()\n', '\n\ndef main():\n    print("Hello")\n\nmain()\n']
2022-04-20 00:45:23.202556 size on output set 3
2022-04-20 00:45:23.202567 num operations 1
2022-04-20 00:45:23.202573 size on input set 1
2022-04-20 00:45:23.202720 using api key derek
2022-04-20 00:45:23.568307 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 00:45:25.070181 using api key jaanu
2022-04-20 00:45:31.700124 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\nprint(check_ravioli_sort(arr))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr, n):\n    for i in range(n):\n        for j in range(n-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\n\ndef check_ravioli_sort(arr, n):\n    if sort_ravioli(arr, n) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr, n))\n"
    }
  ],
  "created": 1650415525,
  "object": "edit"
}
2022-04-20 00:45:31.700351 fix syntax errors 3 ['\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr))\n', '\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\nprint(check_ravioli_sort(arr))\n', '\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr, n):\n    for i in range(n):\n        for j in range(n-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\n\ndef check_ravioli_sort(arr, n):\n    if sort_ravioli(arr, n) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr, n))\n']
2022-04-20 00:45:31.700388 size on output set 3
