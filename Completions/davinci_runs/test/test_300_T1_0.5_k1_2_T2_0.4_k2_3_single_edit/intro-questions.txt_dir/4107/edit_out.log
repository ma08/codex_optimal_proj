2022-04-20 00:54:59.277046 num operations 1
2022-04-20 00:54:59.277065 size on input set 1
2022-04-20 00:54:59.277250 using api key sunu
2022-04-20 00:55:06.810390 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    n, k = map(int, input().split())\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = []\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()] # n: number of rooms, k: range of router\n    s = input() # s: string of room states\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n # cost: array of cost of placing a router in the room\n    for i in range(n):\n        if s[i] == '1': # if room is occupied\n            cost[i] = i + 1 # cost of placing a router in the room is the room number\n\n    # Update the cost based on the routers' range\n    for i in range(k, n): # update cost of room i based on the cost of room i - k\n        cost[i] = min(cost[i], cost[i - k] + i + 1) # cost of room i is the minimum of cost of room i and cost of room i - k + room i\n\n    # Sum the cost\n    total_cost = sum(cost) # total cost is the sum of cost of placing routers in all rooms\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Read input from file\n    infile = open('input.txt', 'r')\n    n, k = [int(i) for i in infile.readline().split()]\n    s = infile.readline()\n    infile.close()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output to file\n    outfile = open('output.txt', 'w')\n    outfile.write(str(total_cost))\n    outfile.close()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650416099,
  "object": "edit"
}
2022-04-20 00:55:06.810652 fix syntax errors 3 ['\n\ndef main():\n    # Read input\n    n, k = map(int, input().split())\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = []\n    for i in range(n):\n        if s[i] == \'1\':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()] # n: number of rooms, k: range of router\n    s = input() # s: string of room states\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n # cost: array of cost of placing a router in the room\n    for i in range(n):\n        if s[i] == \'1\': # if room is occupied\n            cost[i] = i + 1 # cost of placing a router in the room is the room number\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n): # update cost of room i based on the cost of room i - k\n        cost[i] = min(cost[i], cost[i - k] + i + 1) # cost of room i is the minimum of cost of room i and cost of room i - k + room i\n\n    # Sum the cost\n    total_cost = sum(cost) # total cost is the sum of cost of placing routers in all rooms\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input from file\n    infile = open(\'input.txt\', \'r\')\n    n, k = [int(i) for i in infile.readline().split()]\n    s = infile.readline()\n    infile.close()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == \'1\':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers\' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output to file\n    outfile = open(\'output.txt\', \'w\')\n    outfile.write(str(total_cost))\n    outfile.close()\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 00:55:06.810699 size on output set 3
2022-04-20 00:55:06.810710 num operations 1
2022-04-20 00:55:06.810715 size on input set 1
2022-04-20 00:55:06.810867 using api key jaanu
2022-04-20 00:55:07.914704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\nprint(cost)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"
    }
  ],
  "created": 1650416106,
  "object": "edit"
}
2022-04-20 00:55:07.914933 fix syntax errors 3 ["# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\nprint(cost)\n", "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"]
2022-04-20 00:55:07.914964 size on output set 3
