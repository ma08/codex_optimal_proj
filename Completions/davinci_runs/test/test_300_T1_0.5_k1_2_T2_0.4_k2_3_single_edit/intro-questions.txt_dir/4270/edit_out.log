2022-04-20 01:20:39.395571 num operations 1
2022-04-20 01:20:39.395591 size on input set 1
2022-04-20 01:20:39.395799 using api key jaanu
2022-04-20 01:20:43.161237 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef solve(ingredients):\n    ingredients.sort()\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n    return ingredients[0]\n\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    print(solve(ingredients))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650417639,
  "object": "edit"
}
2022-04-20 01:20:43.161487 fix syntax errors 3 ["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef solve(ingredients):\n    ingredients.sort()\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n    return ingredients[0]\n\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    print(solve(ingredients))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 01:20:43.161514 size on output set 2
2022-04-20 01:20:43.161525 num operations 1
2022-04-20 01:20:43.161531 size on input set 1
2022-04-20 01:20:43.161685 using api key sourya
2022-04-20 01:20:44.582133 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n"
    }
  ],
  "created": 1650417643,
  "object": "edit"
}
2022-04-20 01:20:44.582373 fix syntax errors 3 ['\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n', 'import sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n', 'import sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n']
2022-04-20 01:20:44.582400 size on output set 2
