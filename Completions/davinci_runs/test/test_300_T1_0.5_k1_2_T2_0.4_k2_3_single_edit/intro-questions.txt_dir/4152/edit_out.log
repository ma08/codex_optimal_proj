2022-04-20 01:03:18.858893 num operations 1
2022-04-20 01:03:18.858914 size on input set 1
2022-04-20 01:03:18.859094 using api key sunu
2022-04-20 01:03:28.622310 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# Copyright (c) 2016 Felipe Gallego. All rights reserved.\n#\n# This is free software: you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\"\"\"Script to solve the problem.\n\"\"\"\n\nimport sys\n\ndef read_int():\n    \"\"\"Read an integer from standard input.\n    \"\"\"\n    return int(sys.stdin.readline())\n\ndef read_list_int():\n    \"\"\"Read a list of integers from standard input.\n    \"\"\"\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve(n, a):\n    \"\"\"Solve the problem.\n    \"\"\"\n    s = set()\n    for i in range(n):\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            s.remove(a[i])\n\n    return n-len(s)\n\nif __name__ == \"__main__\":\n    \n    n = read_int()\n    \n    a = read_list_int()\n    \n    print(solve(n, a))\n\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    if a[i] not in s:\n        s.add(a[i])\n    else:\n        s.remove(a[i])\n\nprint(n-len(s))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    if a[i] not in s:\n        s.add(a[i])\n    else:\n        s.remove(a[i])\n\nprint(n-len(s))\n"
    }
  ],
  "created": 1650416598,
  "object": "edit"
}
2022-04-20 01:03:28.622572 fix syntax errors 3 ['#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n# Copyright (c) 2016 Felipe Gallego. All rights reserved.\n#\n# This is free software: you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n"""Script to solve the problem.\n"""\n\nimport sys\n\ndef read_int():\n    """Read an integer from standard input.\n    """\n    return int(sys.stdin.readline())\n\ndef read_list_int():\n    """Read a list of integers from standard input.\n    """\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve(n, a):\n    """Solve the problem.\n    """\n    s = set()\n    for i in range(n):\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            s.remove(a[i])\n\n    return n-len(s)\n\nif __name__ == "__main__":\n    \n    n = read_int()\n    \n    a = read_list_int()\n    \n    print(solve(n, a))\n\n', '\n# Solution\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    if a[i] not in s:\n        s.add(a[i])\n    else:\n        s.remove(a[i])\n\nprint(n-len(s))\n', '\n# Solution\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = set()\nfor i in range(n):\n    if a[i] not in s:\n        s.add(a[i])\n    else:\n        s.remove(a[i])\n\nprint(n-len(s))\n']
2022-04-20 01:03:28.622613 size on output set 2
2022-04-20 01:03:28.622624 num operations 1
2022-04-20 01:03:28.622631 size on input set 1
2022-04-20 01:03:28.622787 using api key derek
2022-04-20 01:03:28.658753 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 01:03:30.160628 using api key sourya
2022-04-20 01:03:31.103318 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650416610,
  "object": "edit"
}
2022-04-20 01:03:31.103548 fix syntax errors 3 ['\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef solve(arr):\n    memo = [False] * (2 ** 20)\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] < 2 ** 20:\n                memo[arr[i] + arr[j]] = True\n    return len(arr) - sum(memo)\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 01:03:31.103596 size on output set 1
