2022-04-20 00:50:35.837499 num operations 1
2022-04-20 00:50:35.837520 size on input set 1
2022-04-20 00:50:35.837695 using api key kouti
2022-04-20 00:50:42.827496 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\n\ndef remove_duplicates(a, n):\n    if n == 0 or n == 1:\n        return n\n    temp = []\n    j = 0\n    for i in range(0, n - 1):\n        if a[i] != a[i + 1]:\n            temp.append(a[i])\n            j += 1\n    temp.append(a[n - 1])\n    for i in range(0, j + 1):\n        a[i] = temp[i]\n    return j + 1\n\nn = remove_duplicates(a, n)\nprint(n)\nprint(*a[:n])\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a): \n    b = [] \n    for i in range(len(a)): \n        if a[i] in b: \n            continue \n        else: \n            b.append(a[i]) \n    return b \n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    }
  ],
  "created": 1650415835,
  "object": "edit"
}
2022-04-20 00:50:42.827746 fix syntax errors 3 ['\nn = int(input())\na = [int(x) for x in input().split()]\n\n\ndef remove_duplicates(a, n):\n    if n == 0 or n == 1:\n        return n\n    temp = []\n    j = 0\n    for i in range(0, n - 1):\n        if a[i] != a[i + 1]:\n            temp.append(a[i])\n            j += 1\n    temp.append(a[n - 1])\n    for i in range(0, j + 1):\n        a[i] = temp[i]\n    return j + 1\n\nn = remove_duplicates(a, n)\nprint(n)\nprint(*a[:n])\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a): \n    b = [] \n    for i in range(len(a)): \n        if a[i] in b: \n            continue \n        else: \n            b.append(a[i]) \n    return b \n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n']
2022-04-20 00:50:42.827787 size on output set 3
2022-04-20 00:50:42.827797 num operations 1
2022-04-20 00:50:42.827803 size on input set 1
2022-04-20 00:50:42.827958 using api key derek
2022-04-20 00:50:42.866871 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 00:50:44.368800 using api key sunu
2022-04-20 00:50:47.585053 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) #remove duplicates\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    nums = []\n    for i in range(n):\n        num = int(input())\n        if num not in nums:\n            nums.append(num)\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # remove duplicates\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    }
  ],
  "created": 1650415844,
  "object": "edit"
}
2022-04-20 00:50:47.585289 fix syntax errors 3 ['\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) #remove duplicates\n    print(len(nums))\n    print(*nums)\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    nums = []\n    for i in range(n):\n        num = int(input())\n        if num not in nums:\n            nums.append(num)\n    print(len(nums))\n    print(*nums)\n\nmain()\n', '\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # remove duplicates\n    print(len(nums))\n    print(*nums)\n\nmain()\n']
2022-04-20 00:50:47.585322 size on output set 3
