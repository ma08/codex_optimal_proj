2022-04-20 00:48:11.436837 num operations 1
2022-04-20 00:48:11.436859 size on input set 1
2022-04-20 00:48:11.437038 using api key soukgp
2022-04-20 00:48:16.202885 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # \u521d\u3081\u3066\u79fb\u52d5\u3067\u304d\u308b\u307e\u3067\u306e\u79fb\u52d5\u8ddd\u96e2\u304ck*d\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\n        print(abs(x - (x // d) * d))  # \u521d\u3081\u3066\u79fb\u52d5\u3067\u304d\u308b\u307e\u3067\u306e\u79fb\u52d5\u8ddd\u96e2\n    else:\n        print(abs(x) - (k * d))  # \u521d\u3081\u3066\u79fb\u52d5\u3067\u304d\u308b\u307e\u3067\u306e\u79fb\u52d5\u8ddd\u96e2\u304ck*d\u3088\u308a\u5927\u304d\u3044\u5834\u5408\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))  # \u5c0f\u3055\u3044\u65b9\u3092\u51fa\u529b\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650415691,
  "object": "edit"
}
2022-04-20 00:48:16.203150 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # 初めて移動できるまでの移動距離がk*dより小さい場合\n        print(abs(x - (x // d) * d))  # 初めて移動できるまでの移動距離\n    else:\n        print(abs(x) - (k * d))  # 初めて移動できるまでの移動距離がk*dより大きい場合\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))  # 小さい方を出力\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 00:48:16.203196 size on output set 3
2022-04-20 00:48:16.203208 num operations 1
2022-04-20 00:48:16.203214 size on input set 1
2022-04-20 00:48:16.203362 using api key soukgp
2022-04-20 00:48:21.642220 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination\n# First, find the absolute value of (X - K * D)\n# Then, find the remainder of (X - K * D) / (2 * D)\n# If the remainder is 0, the distance is (X - K * D) / 2\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K -= (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    }
  ],
  "created": 1650415696,
  "object": "edit"
}
2022-04-20 00:48:21.642451 fix syntax errors 3 ['\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination\n# First, find the absolute value of (X - K * D)\n# Then, find the remainder of (X - K * D) / (2 * D)\n# If the remainder is 0, the distance is (X - K * D) / 2\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K -= (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n']
2022-04-20 00:48:21.642490 size on output set 3
