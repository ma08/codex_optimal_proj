2022-04-20 00:49:39.868656 num operations 1
2022-04-20 00:49:39.868676 size on input set 1
2022-04-20 00:49:39.868879 using api key sourya
2022-04-20 00:49:42.678357 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650415779,
  "object": "edit"
}
2022-04-20 00:49:42.678626 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print \'cur\', cur\n        # print \'s\', s\n        # print \'b\', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 00:49:42.678677 size on output set 2
2022-04-20 00:49:42.678688 num operations 1
2022-04-20 00:49:42.678695 size on input set 1
2022-04-20 00:49:42.678843 using api key kouti
2022-04-20 00:49:46.213082 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n"
    }
  ],
  "created": 1650415782,
  "object": "edit"
}
2022-04-20 00:49:46.213310 fix syntax errors 3 ['\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n', '\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n', '\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    pass\n\nif __name__ == \'__main__\':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n']
2022-04-20 00:49:46.213444 size on output set 1
