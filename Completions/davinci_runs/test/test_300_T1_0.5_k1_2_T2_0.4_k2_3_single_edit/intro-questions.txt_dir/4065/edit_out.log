2022-04-20 00:47:45.357954 num operations 1
2022-04-20 00:47:45.357976 size on input set 1
2022-04-20 00:47:45.358158 using api key gabby
2022-04-20 00:47:46.583843 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650415665,
  "object": "edit"
}
2022-04-20 00:47:46.584111 fix syntax errors 3 ["\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 00:47:46.584155 size on output set 1
2022-04-20 00:47:46.584166 num operations 1
2022-04-20 00:47:46.584172 size on input set 1
2022-04-20 00:47:46.584321 using api key kouti
2022-04-20 00:47:48.597027 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1650415666,
  "object": "edit"
}
2022-04-20 00:47:48.597255 fix syntax errors 3 ['\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-20 00:47:48.597405 size on output set 2
