2022-04-21 00:29:24.147263 num operations 2
2022-04-21 00:29:24.147273 size on input set 1
2022-04-21 00:29:24.147412 using api key soukgp
2022-04-21 00:29:26.831278 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n"
    }
  ],
  "created": 1650500964,
  "object": "edit"
}
2022-04-21 00:29:26.831525 fix spelling mistakes 2 ['\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n', '\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n']
2022-04-21 00:29:26.831566 size on output set 1
2022-04-21 00:29:26.831574 size on input set 1
2022-04-21 00:29:26.831729 using api key kouti
2022-04-21 00:29:31.407552 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + 1)\n"
    }
  ],
  "created": 1650500966,
  "object": "edit"
}
2022-04-21 00:29:31.407770 fix syntax errors 2 ['t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + n % k)\n', '\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    if n < k:\n        print(1)\n    else:\n        print(n // k + 1)\n']
2022-04-21 00:29:31.407794 size on output set 2
2022-04-21 00:29:31.407804 num operations 2
2022-04-21 00:29:31.407810 size on input set 1
2022-04-21 00:29:31.407964 using api key jaanu
2022-04-21 00:29:34.444975 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# cook your dish here.\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# cook your dish here \ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"
    }
  ],
  "created": 1650500971,
  "object": "edit"
}
2022-04-21 00:29:34.445192 fix spelling mistakes 2 ['\n\n# cook your dish here.\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n', '\n\n# cook your dish here \ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n']
2022-04-21 00:29:34.445216 size on output set 2
2022-04-21 00:29:34.445223 size on input set 2
2022-04-21 00:29:34.445402 using api key derek
2022-04-21 00:29:34.484552 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 00:29:39.489936 using api key sourya
2022-04-21 00:29:39.529536 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 00:29:49.539918 using api key gabby
2022-04-21 00:29:49.579701 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 00:30:09.600125 using api key sunu
2022-04-21 00:30:19.142535 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# cook your dish here.\ndef find(n, k):\n    if n % k == 0:\n        return n // k\n    else:\n        return n // k + 1\n\ntest = int(input())\nfor i in range(test):\n    n, k = map(int, input().split())\n    print(find(n, k))\n"
    },
    {
      "index": 1,
      "text": "\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"
    }
  ],
  "created": 1650501009,
  "object": "edit"
}
2022-04-21 00:30:19.142743 fix syntax errors 2 ['\n\n# cook your dish here.\ndef find(n, k):\n    if n % k == 0:\n        return n // k\n    else:\n        return n // k + 1\n\ntest = int(input())\nfor i in range(test):\n    n, k = map(int, input().split())\n    print(find(n, k))\n', '\ndef find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n']
2022-04-21 00:30:19.142922 using api key kouti
2022-04-21 00:30:31.220348 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"
    },
    {
      "index": 1,
      "text": "\n\n# cook your dish here \ndef find(n, k):\n    return n // k + 1 if n % k else n // k\n\ntest = int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n"
    }
  ],
  "created": 1650501019,
  "object": "edit"
}
2022-04-21 00:30:31.220655 fix syntax errors 2 ['def find(n,k):\n    if n%k==0:\n        return n//k\n    else:\n        return n//k+1\n\ntest=int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n', '\n\n# cook your dish here \ndef find(n, k):\n    return n // k + 1 if n % k else n // k\n\ntest = int(input())\nfor i in range(test):\n    n,k=map(int,input().split())\n    print(find(n,k))\n']
2022-04-21 00:30:31.220683 size on output set 4
