2022-04-20 22:46:12.903159 num operations 2
2022-04-20 22:46:12.903170 size on input set 1
2022-04-20 22:46:12.903318 using api key kouti
2022-04-20 22:46:28.700997 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n\"\"\"\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        \"\"\"\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == '__main__':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n"
    },
    {
      "index": 1,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    }
  ],
  "created": 1650494773,
  "object": "edit"
}
2022-04-20 22:46:28.701265 fix spelling mistakes 2 ['\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n"""\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        """\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        """\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == \'__main__\':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n']
2022-04-20 22:46:28.701305 size on output set 2
2022-04-20 22:46:28.701313 size on input set 2
2022-04-20 22:46:28.701478 using api key gabby
2022-04-20 22:46:28.737664 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 22:46:33.743088 using api key sourya
2022-04-20 22:46:33.779603 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-20 22:46:43.790040 using api key kouti
2022-04-20 22:46:46.505059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n\"\"\"\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        \"\"\"\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == '__main__':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n\"\"\"\n\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        \"\"\"\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        \"\"\"\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == '__main__':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n"
    }
  ],
  "created": 1650494803,
  "object": "edit"
}
2022-04-20 22:46:46.505296 fix syntax errors 2 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n"""\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        """\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        """\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == \'__main__\':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Sep  3 15:33:22 2020\n@author: jinwensun\n"""\n\nclass Solution(object):\n    def findMedianSortedArrays(self, nums1, nums2):\n        """\n        :type nums1: List[int]\n        :type nums2: List[int]\n        :rtype: float\n        """\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if (len1 + len2) % 2 == 1:\n            return self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)\n        else:\n            return (self.findKth(nums1, nums2, (len1 + len2) // 2) + self.findKth(nums1, nums2, (len1 + len2) // 2 + 1)) * 0.5\n        \n    def findKth(self, nums1, nums2, k):\n        len1 = len(nums1)\n        len2 = len(nums2)\n        if len1 > len2:\n            return self.findKth(nums2, nums1, k)\n        \n        if len1 == 0:\n            return nums2[k-1]\n        if k == 1:\n            return min(nums1[0], nums2[0])\n        \n        pa = min(k // 2, len1)\n        pb = k - pa\n        \n        if nums1[pa-1] <= nums2[pb-1]:\n            return self.findKth(nums1[pa:], nums2, k - pa)\n        else:\n            return self.findKth(nums1, nums2[pb:], k - pb)\n        \nif __name__ == \'__main__\':\n    nums1 = [1,2]\n    nums2 = [3,4]\n    s = Solution()\n    print(s.findMedianSortedArrays(nums1, nums2))\n']
2022-04-20 22:46:46.505608 using api key jaanu
2022-04-20 22:46:49.428329 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2 + 1:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 1,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2 and i >= k:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    }
  ],
  "created": 1650494806,
  "object": "edit"
}
2022-04-20 22:46:49.428565 fix syntax errors 2 ['\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2 + 1:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2 and i >= k:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n']
2022-04-20 22:46:49.428606 size on output set 4
2022-04-20 22:46:49.428621 num operations 2
2022-04-20 22:46:49.428631 size on input set 1
2022-04-20 22:46:49.428914 using api key sunu
2022-04-20 22:46:52.047160 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 1,
      "text": "\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    }
  ],
  "created": 1650494809,
  "object": "edit"
}
2022-04-20 22:46:52.047411 fix spelling mistakes 2 ['# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n']
2022-04-20 22:46:52.047441 size on output set 2
2022-04-20 22:46:52.047448 size on input set 2
2022-04-20 22:46:52.047614 using api key gabby
2022-04-20 22:46:52.083353 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 22:46:57.088833 using api key sunu
2022-04-20 22:47:03.267274 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix, n, m, k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1] % (10**9 + 7)\n\nprint(max_sum(matrix, n, m, k))\n"
    },
    {
      "index": 1,
      "text": "\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j > 0 else max(dp[i-1][j],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    }
  ],
  "created": 1650494817,
  "object": "edit"
}
2022-04-20 22:47:03.267617 fix syntax errors 2 ['n,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix, n, m, k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1] % (10**9 + 7)\n\nprint(max_sum(matrix, n, m, k))\n', '\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j > 0 else max(dp[i-1][j],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n']
2022-04-20 22:47:03.267888 using api key sourya
2022-04-20 22:47:03.304884 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 22:47:08.310300 using api key soukgp
2022-04-20 22:47:19.102131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 1,
      "text": "# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = [[0 for i in range(m)] for j in range(n)]\n\nfor i in range(n):\n    matrix[i] = list(map(int, input().split()))\n\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m+1)] for j in range(n+1)]\n    for i in range(1,n+1):\n        for j in range(1,m+1):\n            dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i-1][j-1]\n    return dp[n][m]\n\nprint(max_sum(matrix,n,m))\n"
    }
  ],
  "created": 1650494828,
  "object": "edit"
}
2022-04-20 22:47:19.102567 fix syntax errors 2 ['# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '# this is a comment\n\nn,m,k = map(int, input().split())\n\nmatrix = [[0 for i in range(m)] for j in range(n)]\n\nfor i in range(n):\n    matrix[i] = list(map(int, input().split()))\n\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m+1)] for j in range(n+1)]\n    for i in range(1,n+1):\n        for j in range(1,m+1):\n            dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i-1][j-1]\n    return dp[n][m]\n\nprint(max_sum(matrix,n,m))\n']
2022-04-20 22:47:19.102619 size on output set 4
