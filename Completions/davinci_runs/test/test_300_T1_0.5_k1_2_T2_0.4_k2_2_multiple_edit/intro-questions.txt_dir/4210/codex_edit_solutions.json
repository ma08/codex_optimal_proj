["\n# Solution 1 (Time Limit Exceeded)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num = str(a[i]) + str(a[j])\n            num = int(num)\n            if num % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2 (Accepted)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num = str(a[i]) + str(a[j])\n        num = int(num)\n        if num % k == 0:\n            res += 1\n\nprint(res)\n", "\n# Solution 1 (Time Limit Exceeded)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2 (Accepted)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\n\n# Solution 1 (Time Limit Exceeded) \nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2 (Time Limit Exceeded)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10**len(str(y))) + y\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n-1):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n-1):\n    total += count_divisible(a[i])\n\nprint(total)\n", "\"\"\"\nhttps://atcoder.jp/contests/abc065/tasks/arc076_c\n\"\"\"\n\nn, m = map(int, input().split())\n\nif abs(n - m) > 1:\n    print(0)\n    exit()\n\ndef fact(n):\n    if n == 0:\n        return 1\n    return n * fact(n - 1)\n\nif n == m:\n    print(2 * fact(n) * fact(m) % (10**9 + 7))\nelse:\n    print(fact(n) * fact(m) % (10**9 + 7))\n", "\n# Solution 1 (Time Limit Exceeded)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            num1 = str(a[i]) + str(a[j])\n            num1 = int(num1)\n            if num1 % k == 0:\n                res += 1\n\nprint(res)\n\n# Solution 2 (Time Limit Exceeded)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        num1 = str(a[i]) + str(a[j])\n        num1 = int(num1)\n        if num1 % k == 0:\n            res += 1\n\nprint(res)\n", "\"\"\"\nhttps://atcoder.jp/contests/abc065/tasks/arc076_a\n\"\"\"\n\nx, a, b = map(int, input().split())\n\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef concat(x, y):\n    return (x * 10 ** len(str(y))) + y\n\ndef count_divisible(x):\n    count = 0\n    for i in range(n):\n        if concat(x, a[i]) % k == 0:\n            count += 1\n    return count\n\ntotal = 0\nfor i in range(n):\n    total += count_divisible(a[i])\n\nprint(total)\n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n\n# def concat(x, y):\n#     return (x * 10**len(str(y))) + y\n\n# def count_divisible(x):\n#     count = 0\n#     for i in range(n):\n#         if concat(x, a[i]) % k == 0:\n#             count += 1\n#     return count\n\n# total = 0\n# for i in range(n):\n#     total += count_divisible(a[i])\n\n# print(total)\n"]