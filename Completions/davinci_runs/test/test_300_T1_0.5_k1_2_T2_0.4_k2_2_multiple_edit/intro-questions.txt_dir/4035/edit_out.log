2022-04-20 23:30:42.246622 num operations 2
2022-04-20 23:30:42.246633 size on input set 1
2022-04-20 23:30:42.246777 using api key soukgp
2022-04-20 23:30:45.128291 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n# \u5165\u529b\n\na, b = map(int, input().split())\n# \u51fa\u529b\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650497442,
  "object": "edit"
}
2022-04-20 23:30:45.128545 fix spelling mistakes 2 ['\n\nimport math\n# 入力\n\na, b = map(int, input().split())\n# 出力\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '\n#\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-20 23:30:45.128585 size on output set 2
2022-04-20 23:30:45.128594 size on input set 2
2022-04-20 23:30:45.128792 using api key kouti
2022-04-20 23:30:47.789119 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n# \u5165\u529b\na, b = map(int, input().split())\n# \u51fa\u529b\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n# \u5165\u529b\na, b = map(int, input().split())\n# \u51fa\u529b\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650497445,
  "object": "edit"
}
2022-04-20 23:30:47.789337 fix syntax errors 2 ['\nimport math\n# 入力\na, b = map(int, input().split())\n# 出力\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '\n\nimport math\n# 入力\na, b = map(int, input().split())\n# 出力\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-20 23:30:47.789538 using api key soukgp
2022-04-20 23:30:50.796503 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# coding: utf-8\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\n# coding: utf-8\n\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650497447,
  "object": "edit"
}
2022-04-20 23:30:50.796757 fix syntax errors 2 ['\n# coding: utf-8\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '\n# coding: utf-8\n\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-20 23:30:50.796785 size on output set 4
2022-04-20 23:30:50.796798 num operations 2
2022-04-20 23:30:50.796804 size on input set 1
2022-04-20 23:30:50.796972 using api key sunu
2022-04-20 23:30:53.726436 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650497450,
  "object": "edit"
}
2022-04-20 23:30:53.726643 fix spelling mistakes 2 ["\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-20 23:30:53.726668 size on output set 2
2022-04-20 23:30:53.726676 size on input set 2
2022-04-20 23:30:53.726848 using api key jaanu
2022-04-20 23:30:57.120101 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\n\ndef main(A, B):\n    return B // A if B % A == 0 else -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650497453,
  "object": "edit"
}
2022-04-20 23:30:57.120336 fix syntax errors 2 ["\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\n\ndef main(A, B):\n    return B // A if B % A == 0 else -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-20 23:30:57.120536 using api key derek
2022-04-20 23:30:57.156777 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:31:02.161070 using api key gabby
2022-04-20 23:31:02.198546 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-20 23:31:12.208988 using api key jaanu
2022-04-20 23:31:17.889110 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport unittest\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\n\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650497472,
  "object": "edit"
}
2022-04-20 23:31:17.889338 fix syntax errors 2 ["\nimport unittest\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\n\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-20 23:31:17.889470 size on output set 4
