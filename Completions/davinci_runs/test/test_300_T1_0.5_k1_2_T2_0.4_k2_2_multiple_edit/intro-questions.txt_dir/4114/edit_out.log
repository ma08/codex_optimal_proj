2022-04-21 01:24:20.028287 num operations 2
2022-04-21 01:24:20.028299 size on input set 1
2022-04-21 01:24:20.028454 using api key sunu
2022-04-21 01:24:23.075080 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650504260,
  "object": "edit"
}
2022-04-21 01:24:23.075372 fix spelling mistakes 2 ['\n# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 01:24:23.075420 size on output set 2
2022-04-21 01:24:23.075428 size on input set 2
2022-04-21 01:24:23.075601 using api key gabby
2022-04-21 01:24:23.112744 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:24:28.118130 using api key derek
2022-04-21 01:24:28.154829 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:24:38.165230 using api key sunu
2022-04-21 01:24:40.922287 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650504278,
  "object": "edit"
}
2022-04-21 01:24:40.922508 fix syntax errors 2 ['# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 01:24:40.922806 using api key sourya
2022-04-21 01:24:40.959997 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:24:45.965405 using api key derek
2022-04-21 01:24:46.002533 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:24:56.012963 using api key sunu
2022-04-21 01:25:00.547347 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, input().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y)\n                   for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650504296,
  "object": "edit"
}
2022-04-21 01:25:00.547581 fix syntax errors 2 ['# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(input())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, input().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y)\n                   for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 01:25:00.547627 size on output set 4
2022-04-21 01:25:00.547642 num operations 2
2022-04-21 01:25:00.547649 size on input set 1
2022-04-21 01:25:00.547822 using api key gabby
2022-04-21 01:25:00.584591 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:25:05.589996 using api key sourya
2022-04-21 01:25:05.627226 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:25:15.637638 using api key gabby
2022-04-21 01:25:15.674884 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 01:25:35.695303 using api key sunu
2022-04-21 01:25:38.206621 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    }
  ],
  "created": 1650504335,
  "object": "edit"
}
2022-04-21 01:25:38.206861 fix spelling mistakes 2 ['\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n', '\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n']
2022-04-21 01:25:38.206991 size on output set 1
2022-04-21 01:25:38.207000 size on input set 1
2022-04-21 01:25:38.207164 using api key derek
2022-04-21 01:25:38.245079 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:25:43.250463 using api key jaanu
2022-04-21 01:25:56.501138 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2]\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2] / 2\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n        else:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                C_Y = x_y_h[i][1]\n                C_X = (x_y_h[i][0] + x_y_h[j][0]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][0] - x_y_h[j][0]) + x_y_h[i][2] / 2\n                else:\n                    H = abs(x_y_h[i][0] - x_y_h[j][0]) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n            else:\n                C_X = (x_y_h[i][0] + x_y_h[j][0]) / 2\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = max(abs(x_y_h[i][0] - x_y_h[j][0]), abs(x_y_h[i][1] - x_y_h[j][1])) + x_y_h[i][2] / 2\n                else:\n                    H = max(abs(x_y_h[i][0] - x_y_h[j][0]), abs(x_y_h[i][1] - x_y_h[j][1])) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n\n\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    }
  ],
  "created": 1650504343,
  "object": "edit"
}
2022-04-21 01:25:56.501383 fix syntax errors 2 ['\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2]\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n', 'import sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2] / 2\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n        else:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                C_Y = x_y_h[i][1]\n                C_X = (x_y_h[i][0] + x_y_h[j][0]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][0] - x_y_h[j][0]) + x_y_h[i][2] / 2\n                else:\n                    H = abs(x_y_h[i][0] - x_y_h[j][0]) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n            else:\n                C_X = (x_y_h[i][0] + x_y_h[j][0]) / 2\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = max(abs(x_y_h[i][0] - x_y_h[j][0]), abs(x_y_h[i][1] - x_y_h[j][1])) + x_y_h[i][2] / 2\n                else:\n                    H = max(abs(x_y_h[i][0] - x_y_h[j][0]), abs(x_y_h[i][1] - x_y_h[j][1])) + max(x_y_h[i][2], x_y_h[j][2]) / 2\n                break\n\n\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n']
2022-04-21 01:25:56.501429 size on output set 2
