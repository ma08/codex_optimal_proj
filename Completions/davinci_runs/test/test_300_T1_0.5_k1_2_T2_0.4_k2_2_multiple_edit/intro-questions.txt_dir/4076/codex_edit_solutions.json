["\nimport math\nimport sys\n\n\na, b, h, m = map(int, sys.stdin.readline().split())\n\nh_angle = (h * 30 + m * 0.5) * math.pi / 180\nm_angle = (m * 6) * math.pi / 180\nangle = abs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle)))\n", "\nimport sys\nimport math\n\na, b, h, m = [int(i) for i in input().split()]\n\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\n\nangle = math.fabs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180))\n", "\n\nimport math\n\n# Set up\nA, B, H, M = map(int, input().split())  # A, B: \u76f4\u89d2\u306e\u8fba, H, M: \u6642\u9593\n\n# Solve\ntheta_h = H * 360 / 12  # \u6642\u91dd\u306e\u89d2\u5ea6\ntheta_m = M * 360 / 60  # \u5206\u91dd\u306e\u89d2\u5ea6\ntheta_hm = theta_h - theta_m\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm  # \u6642\u91dd\u306e\u89d2\u5ea6\u304c\u5c0f\u3055\u3044\u3068\u304d\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)  # \u4f59\u5f26\u5b9a\u7406\nc = math.sqrt(c)\n\n# Output\nprint(c)  # \u51fa\u529b\n", "\nimport sys\nimport math\n\na, b, h, m = map(int, sys.stdin.readline().split())\n\nh_angle = (h * 30 + m * 0.5) * math.pi / 180\nm_angle = (m * 6) * math.pi / 180\n\nangle = abs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle)))\n", "\nimport math\n# Set up \nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = theta_h - theta_m\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "\nimport sys\nimport math\n\na, b, h, m = [int(i) for i in input().split()]\n\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\n\nangle = abs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180))\n"]