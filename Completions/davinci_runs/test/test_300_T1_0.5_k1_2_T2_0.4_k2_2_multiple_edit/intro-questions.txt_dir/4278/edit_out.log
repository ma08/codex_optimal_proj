2022-04-21 04:51:56.630042 num operations 2
2022-04-21 04:51:56.630053 size on input set 1
2022-04-21 04:51:56.630193 using api key sourya
2022-04-21 04:51:56.759066 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:52:01.761048 using api key soukgp
2022-04-21 04:52:08.691139 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault(\"\".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\n# my solution with a dictionary\nimport sys\n\n# read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution with a dictionary\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault(\"\".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n"
    }
  ],
  "created": 1650516721,
  "object": "edit"
}
2022-04-21 04:52:08.691399 fix spelling mistakes 2 ['\n\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault("".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n', '\n\n# my solution with a dictionary\nimport sys\n\n# read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution with a dictionary\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault("".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n']
2022-04-21 04:52:08.691440 size on output set 2
2022-04-21 04:52:08.691449 size on input set 2
2022-04-21 04:52:08.691605 using api key gabby
2022-04-21 04:52:08.731488 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:52:13.736936 using api key soukgp
2022-04-21 04:52:21.237006 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# my solution with a dictionary\nimport sys\n\n# read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n\n\n# a better solution with a dictionary\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault(\"\".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nanagrams = {}\nfor i in range(n):\n    chars = list(s[i])\n    chars.sort()\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\nprint(count)\n"
    }
  ],
  "created": 1650516733,
  "object": "edit"
}
2022-04-21 04:52:21.237255 fix syntax errors 2 ['\n\n# my solution with a dictionary\nimport sys\n\n# read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n\n\n# a better solution with a dictionary\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault("".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nanagrams = {}\nfor i in range(n):\n    chars = list(s[i])\n    chars.sort()\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\nprint(count)\n']
2022-04-21 04:52:21.237481 using api key derek
2022-04-21 04:52:21.277627 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:52:26.283134 using api key kouti
2022-04-21 04:52:29.094457 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault(\"\".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = \"\".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault(\"\".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n"
    }
  ],
  "created": 1650516746,
  "object": "edit"
}
2022-04-21 04:52:29.094687 fix syntax errors 2 ['\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault("".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n', '\n# My solution\nimport sys\n\n# Read input\nn = int(sys.stdin.readline().rstrip())\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\n# Create a dictionary of anagrams\nanagrams = {}\nfor i in range(n):\n    # sort characters\n    chars = list(s[i])\n    chars.sort()\n    # create a key for the dictionary\n    key = "".join(chars)\n    if key in anagrams:\n        anagrams[key].append(i)\n    else:\n        anagrams[key] = [i]\n\n# count the number of pairs\ncount = 0\nfor key in anagrams:\n    if len(anagrams[key]) >= 2:\n        count += len(anagrams[key]) * (len(anagrams[key]) - 1) // 2\n\n# print the result\nprint(count)\n\n# a better solution\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = []\nfor _ in range(n):\n    s.append(sys.stdin.readline().rstrip())\n\nm = dict()\nfor i in range(n):\n    m.setdefault("".join(sorted(s[i])), []).append(i)\n\nans = 0\nfor i in m.values():\n    ans += len(i) * (len(i) - 1) // 2\n\nprint(ans)\n']
2022-04-21 04:52:29.094726 size on output set 3
2022-04-21 04:52:29.094738 num operations 2
2022-04-21 04:52:29.094745 size on input set 1
2022-04-21 04:52:29.094913 using api key sunu
2022-04-21 04:52:31.533781 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516749,
  "object": "edit"
}
2022-04-21 04:52:31.534023 fix spelling mistakes 2 ["\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:52:31.534058 size on output set 1
2022-04-21 04:52:31.534065 size on input set 1
2022-04-21 04:52:31.534229 using api key sourya
2022-04-21 04:52:31.574548 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:52:36.579938 using api key jaanu
2022-04-21 04:52:40.093838 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = [''.join(sorted(s)) for s in S]\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c - 1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516756,
  "object": "edit"
}
2022-04-21 04:52:40.094155 fix syntax errors 2 ["\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = [''.join(sorted(s)) for s in S]\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c-1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    S = []\n    for _ in range(N):\n        s = input()\n        S.append(s)\n    S_sort = []\n    for s in S:\n        S_sort.append(''.join(sorted(s)))\n    from collections import Counter\n    C = Counter(S_sort)\n    ans = 0\n    for c in C.values():\n        ans += c * (c - 1) // 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:52:40.094269 size on output set 2
