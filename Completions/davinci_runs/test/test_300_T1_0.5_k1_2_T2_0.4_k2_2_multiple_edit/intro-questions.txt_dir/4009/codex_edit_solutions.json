["\n\ndef solve(n, x, y, numbers):\n    operations = 0\n    for i in range(n-x+1):\n        if numbers[i] != numbers[i+x-y]:\n            operations += 1\n    return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    numbers = input()\n    print(solve(n, x, y, numbers))\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, x, y = map(int, input().split())\nn = list(map(int, input().split()))\n\nif n[x-1] == 0:\n    n[x-1] = 1\nelse:\n    n[x-1] = 0\n    for i in range(x, y):\n        if n[i] == 0:\n            n[i] = 1\n            break\n        else:\n            n[i] = 0\n\nprint(n.count('0'))\n", "\nn, x, y = map(int, input().split())\nn = list(input())\n\nif n[y] == '0':\n    n[y] = '1'\nelse:\n    n[y] = '0'\n    for i in range(y+1, x):\n        if n[i] == '0':\n            n[i] = '1'\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "\nn, x, y = map(int, input().split())\nn = list(input()) \n\nif n[y] == '0':\n    n[y] = '1'\nelse:\n    n[y] = '0'\n    for i in range(y+1, x):\n        if n[i] == '0':\n            n[i] = '1'\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "\nn, x, y = map(int, input().split())\nn = input()\n\nif n[y-1] == '0':\n    n = n[:y-1] + '1' + n[y:]\nelse:\n    n = n[:y-1] + '0' + n[y:]\n    for i in range(y, x+1):\n        if n[i-1] == '0':\n            n = n[:i-1] + '1' + n[i:]\n            break\n        else:\n            n[i] = '0'\n\nprint(n.count('0'))\n", "\n\ndef solve(n, x, y, numbers, operations):\n    operations = 0\n    for i in range(n-x):\n        if numbers[i] != numbers[i+x-y]:\n            operations += 1\n    if x != y:\n        return solve(n, x, y, numbers, operations)\n    else:\n        return operations\n\ndef main():\n    n, x, y = map(int, input().split())\n    numbers = input()\n    print(solve(n, x, y, numbers, 0))\n\nif __name__ == \"__main__\":\n    main()\n"]