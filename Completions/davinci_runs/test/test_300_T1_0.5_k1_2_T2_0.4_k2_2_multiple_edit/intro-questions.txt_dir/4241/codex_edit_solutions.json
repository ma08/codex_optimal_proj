["S = input()\n\n\nprint(S[:5])\n", "\ndef min_changes(s, t, n):\n    count = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    n = len(t)\n    print(min_changes(s, t, n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t):\n    n = len(s)\n    m = len(t)\n    dp = [[0 for i in range(m+1)] for j in range(n+1)]\n    for i in range(n+1):\n        for j in range(m+1):\n            if i == 0:\n                dp[i][j] = j\n            elif j == 0:\n                dp[i][j] = i\n            elif s[i-1] == t[j-1]:\n                dp[i][j] = dp[i-1][j-1]\n            else:\n                dp[i][j] = 1 + min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1])\n    return dp[n][m]\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t):  # s = source, t = target\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n", "\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n"]