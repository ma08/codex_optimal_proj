["\n\nfrom operator import itemgetter\n\n\ndef get_max_possible_sum(numbers):\n    numbers.sort(key=itemgetter(1), reverse=True)\n    return sum(number[1] for number in numbers[:k])\n\n\nA, B, C, K = map(int, input().split())\n\nnumbers = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(numbers))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\n\nA, B, C, K = map(int, input().split())  # \u6a19\u6e96\u5165\u529b\n# A, B, C, K = 2, 1, 1, 3  # \u30c6\u30b9\u30c8\u7528\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "\n\na, b, c, k = map(int, input().split())\n# a, b, c, k = 2, 1, 1, 3\n\nif k <= a:\n    print(k)\nelif k <= a+b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(numbers):\n    numbers.sort(key=itemgetter(1), reverse=True)\n    return sum(number[1] for number in numbers[:K]) \n\nA, B, C, K = map(int, input().split())\nnumbers = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(numbers))\n", "\n\n# A, B, K = map(int, input().split())  # \u6a19\u6e96\u5165\u529b\nA, B, K = 2, 1, 3  # \u30c6\u30b9\u30c8\u7528\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "\n\n# a, b, c, k = map(int, input().split())\na, b, c, k = 2, 1, 1, 4\n\nif k <= a:\n    print(k)\nelif k <= a+b:\n    print(a)\nelse:\n    print(a - (k - a - b))\n"]