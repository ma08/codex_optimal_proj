2022-04-21 02:41:36.610272 num operations 2
2022-04-21 02:41:36.610282 size on input set 1
2022-04-21 02:41:36.610434 using api key jaanu
2022-04-21 02:41:47.348981 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # \u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u79cd\u7c7b\u7684\u4ef7\u683c\u548c\u6570\u91cf\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])  # \u5c06\u8f93\u5165\u7684\u4ef7\u683c\u548c\u6570\u91cf\u5b58\u653e\u5230\u5217\u8868\u4e2d\n    price_list.sort()  # \u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f\n    total = 0\n    while M > 0:  # \u5982\u679c\u8fd8\u6709\u9700\u6c42\n        if price_list[0][1] >= M:  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5927\u4e8e\u9700\u6c42\n            total += price_list[0][0] * M\n            M = 0  # \u9700\u6c42\u6e05\u96f6\n        else:\n            total += price_list[0][0] * price_list[0][1]  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5c0f\u4e8e\u9700\u6c42\n            M -= price_list[0][1]  # \u9700\u6c42\u51cf\u53bb\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\n            price_list.pop(0)  # \u5220\u9664\u7b2c\u4e00\u4e2a\u79cd\u7c7b\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key = lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650508896,
  "object": "edit"
}
2022-04-21 02:41:47.349242 fix spelling mistakes 2 ["\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # 定义一个列表用来存放每个种类的价格和数量\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])  # 将输入的价格和数量存放到列表中\n    price_list.sort()  # 对列表进行排序\n    total = 0\n    while M > 0:  # 如果还有需求\n        if price_list[0][1] >= M:  # 如果第一个种类的数量大于需求\n            total += price_list[0][0] * M\n            M = 0  # 需求清零\n        else:\n            total += price_list[0][0] * price_list[0][1]  # 如果第一个种类的数量小于需求\n            M -= price_list[0][1]  # 需求减去第一个种类的数量\n            price_list.pop(0)  # 删除第一个种类\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key = lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 02:41:47.349289 size on output set 2
2022-04-21 02:41:47.349329 size on input set 2
2022-04-21 02:41:47.349506 using api key soukgp
2022-04-21 02:42:07.841736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # \u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u79cd\u7c7b\u7684\u4ef7\u683c\u548c\u6570\u91cf\uff0cprice_list[i][0]\u4e3a\u7b2ci\u79cd\u7c7b\u7684\u4ef7\u683c\uff0cprice_list[i][1]\u4e3a\u7b2ci\u79cd\u7c7b\u7684\u6570\u91cf\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])  # \u5c06\u8f93\u5165\u7684\u4ef7\u683c\u548c\u6570\u91cf\u5b58\u653e\u5230\u5217\u8868\u4e2d\n    price_list.sort(key=lambda x: x[0])  # \u5bf9\u5217\u8868\u6309\u7b2c\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\n    total = 0\n    while M > 0:  # \u5982\u679c\u8fd8\u6709\u9700\u6c42\n        if price_list[0][1] >= M:  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5927\u4e8e\u9700\u6c42\n            total += price_list[0][0] * M\n            M = 0  # \u9700\u6c42\u6e05\u96f6\n        else:\n            total += price_list[0][0] * price_list[0][1]  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5c0f\u4e8e\u9700\u6c42\n            M -= price_list[0][1]  # \u9700\u6c42\u51cf\u53bb\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\n            price_list.pop(0)  # \u5220\u9664\u7b2c\u4e00\u4e2a\u79cd\u7c7b\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    N, M = [int(x) for x in input().split()]  # \u5206\u522b\u8f93\u5165\u79cd\u7c7b\u548c\u9700\u6c42\n    price_list = []  # \u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u79cd\u7c7b\u7684\u4ef7\u683c\u548c\u6570\u91cf\n    for i in range(N):  # \u5faa\u73af\u8f93\u5165\u6bcf\u4e2a\u79cd\u7c7b\u7684\u4ef7\u683c\u548c\u6570\u91cf\n        price_list.append([int(x) for x in input().split()])  # \u5c06\u8f93\u5165\u7684\u4ef7\u683c\u548c\u6570\u91cf\u5b58\u653e\u5230\u5217\u8868\u4e2d\n    price_list.sort()  # \u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f\n    total = 0  # \u5b9a\u4e49\u603b\u4ef7\u683c\n    while M > 0:  # \u5982\u679c\u8fd8\u6709\u9700\u6c42\n        if price_list[0][1] >= M:  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5927\u4e8e\u9700\u6c42\n            total += price_list[0][0] * M  # \u603b\u4ef7\u683c\u589e\u52a0\n            M = 0  # \u9700\u6c42\u6e05\u96f6\n        else:\n            total += price_list[0][0] * price_list[0][1]  # \u5982\u679c\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\u5c0f\u4e8e\u9700\u6c42\n            M -= price_list[0][1]  # \u9700\u6c42\u51cf\u53bb\u7b2c\u4e00\u4e2a\u79cd\u7c7b\u7684\u6570\u91cf\n            price_list.pop(0)  # \u5220\u9664\u7b2c\u4e00\u4e2a\u79cd\u7c7b\n    print(total)  # \u8f93\u51fa\u603b\u4ef7\u683c\n\n\nif __name__ == '__main__':  # \u5982\u679c\u662f\u4e3b\u7a0b\u5e8f\n    main()\n"
    }
  ],
  "created": 1650508907,
  "object": "edit"
}
2022-04-21 02:42:07.841996 fix syntax errors 2 ["\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # 定义一个列表用来存放每个种类的价格和数量，price_list[i][0]为第i种类的价格，price_list[i][1]为第i种类的数量\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])  # 将输入的价格和数量存放到列表中\n    price_list.sort(key=lambda x: x[0])  # 对列表按第一个元素进行排序\n    total = 0\n    while M > 0:  # 如果还有需求\n        if price_list[0][1] >= M:  # 如果第一个种类的数量大于需求\n            total += price_list[0][0] * M\n            M = 0  # 需求清零\n        else:\n            total += price_list[0][0] * price_list[0][1]  # 如果第一个种类的数量小于需求\n            M -= price_list[0][1]  # 需求减去第一个种类的数量\n            price_list.pop(0)  # 删除第一个种类\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    N, M = [int(x) for x in input().split()]  # 分别输入种类和需求\n    price_list = []  # 定义一个列表用来存放每个种类的价格和数量\n    for i in range(N):  # 循环输入每个种类的价格和数量\n        price_list.append([int(x) for x in input().split()])  # 将输入的价格和数量存放到列表中\n    price_list.sort()  # 对列表进行排序\n    total = 0  # 定义总价格\n    while M > 0:  # 如果还有需求\n        if price_list[0][1] >= M:  # 如果第一个种类的数量大于需求\n            total += price_list[0][0] * M  # 总价格增加\n            M = 0  # 需求清零\n        else:\n            total += price_list[0][0] * price_list[0][1]  # 如果第一个种类的数量小于需求\n            M -= price_list[0][1]  # 需求减去第一个种类的数量\n            price_list.pop(0)  # 删除第一个种类\n    print(total)  # 输出总价格\n\n\nif __name__ == '__main__':  # 如果是主程序\n    main()\n"]
2022-04-21 02:42:07.842289 using api key kouti
2022-04-21 02:42:10.779682 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key = lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650508927,
  "object": "edit"
}
2022-04-21 02:42:10.779907 fix syntax errors 2 ["\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key = lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 02:42:10.779937 size on output set 4
2022-04-21 02:42:10.779949 num operations 2
2022-04-21 02:42:10.779955 size on input set 1
2022-04-21 02:42:10.780116 using api key jaanu
2022-04-21 02:42:15.903335 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    }
  ],
  "created": 1650508930,
  "object": "edit"
}
2022-04-21 02:42:15.903586 fix spelling mistakes 2 ['\n\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', '\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n']
2022-04-21 02:42:15.903613 size on output set 2
2022-04-21 02:42:15.903621 size on input set 2
2022-04-21 02:42:15.903778 using api key sunu
2022-04-21 02:42:18.464787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    }
  ],
  "created": 1650508935,
  "object": "edit"
}
2022-04-21 02:42:18.464994 fix syntax errors 2 ['\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n', '\nn, m = map(int, input().split()) # n: number of kinds of apples, m: number of apples\n\ncost = [] # cost: list of tuples of price and number of apples\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n']
2022-04-21 02:42:18.465193 using api key sunu
2022-04-21 02:42:23.642456 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n"
    },
    {
      "index": 1,
      "text": "n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n"
    }
  ],
  "created": 1650508938,
  "object": "edit"
}
2022-04-21 02:42:23.642676 fix syntax errors 2 ['\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n', 'n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n']
2022-04-21 02:42:23.642708 size on output set 3
