["def main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n+1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i+1][0] -= 1\n        a[i+1][1] -= 1\n    for i in range(n):\n        if len(a[i+1]) == 2:\n            j = a[i][0]\n            if a[j][0] == i+1:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i+1\n            if a[j][0] == j+1:\n                a[j].pop()\n            a[i+1].pop()\n    for i in range(n):\n        a[i+1] = a[i+1][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i+1]\n        ans[i+1], ans[j+1] = ans[j+1], ans[i+1]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(len(a)):\n    for j in range(len(b)):\n        if a[i]+b[j]==k:\n            c.append(a[i])\n            c.append(b[j])\n            break\n        else:\n            continue\nif len(c)==0:\n    print(\"empty\")\nelse:\n    for i in range(0,len(c),2):\n        print(c[i],c[i+1])\n", "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = [int(x) for x in input().split()]\nprint(solve(n, a))\n", "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n - 1):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "from collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[b[i][0]].add(i)\n        d[b[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = b[start][0] if b[start][0] != res[-1] else b[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))[1:]\nb = defaultdict(list)\nfor i in range(n):\n    b[i + 1] = list(map(int, input().split()))[1:]\nprint(solve(n, a, b))\n", "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [0] * n\n    for i in range(n):\n        a[i] = int(input()) - 1\n    for i in range(n):\n        a[i] = a[a[i]]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"]