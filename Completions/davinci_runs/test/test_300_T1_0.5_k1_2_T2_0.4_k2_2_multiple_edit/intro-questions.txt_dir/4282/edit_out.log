2022-04-21 04:54:53.095058 num operations 2
2022-04-21 04:54:53.095071 size on input set 1
2022-04-21 04:54:53.095211 using api key kouti
2022-04-21 04:55:03.768239 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516893,
  "object": "edit"
}
2022-04-21 04:55:03.768510 fix spelling mistakes 2 ["\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:55:03.768553 size on output set 2
2022-04-21 04:55:03.768560 size on input set 2
2022-04-21 04:55:03.768748 using api key kouti
2022-04-21 04:55:13.623967 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n+1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i+1][0] -= 1\n        a[i+1][1] -= 1\n    for i in range(n):\n        if len(a[i+1]) == 2:\n            j = a[i][0]\n            if a[j][0] == i+1:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i+1\n            if a[j][0] == j+1:\n                a[j].pop()\n            a[i+1].pop()\n    for i in range(n):\n        a[i+1] = a[i+1][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i+1]\n        ans[i+1], ans[j+1] = ans[j+1], ans[i+1]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [0] * n\n    for i in range(n):\n        a[i] = int(input()) - 1\n    for i in range(n):\n        a[i] = a[a[i]]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516903,
  "object": "edit"
}
2022-04-21 04:55:13.624189 fix syntax errors 2 ["\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n+1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i+1][0] -= 1\n        a[i+1][1] -= 1\n    for i in range(n):\n        if len(a[i+1]) == 2:\n            j = a[i][0]\n            if a[j][0] == i+1:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i+1\n            if a[j][0] == j+1:\n                a[j].pop()\n            a[i+1].pop()\n    for i in range(n):\n        a[i+1] = a[i+1][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i+1]\n        ans[i+1], ans[j+1] = ans[j+1], ans[i+1]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# https://atcoder.jp/contests/abc177/tasks/abc177_d\n\n\ndef main():\n    n = int(input())\n    a = [0] * n\n    for i in range(n):\n        a[i] = int(input()) - 1\n    for i in range(n):\n        a[i] = a[a[i]]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:55:13.624409 using api key kouti
2022-04-21 04:55:16.419490 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516913,
  "object": "edit"
}
2022-04-21 04:55:16.419849 fix syntax errors 2 ["def main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n + 1)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[a[i][0]].append(a[i][1])\n        a[a[i][1]].append(a[i][0])\n    q = [1]\n    used = [False] * (n + 1)\n    used[1] = True\n    while q:\n        v = q.pop()\n        for u in a[v]:\n            if not used[u]:\n                used[u] = True\n                q.append(u)\n    for i in range(1, n + 1):\n        if not used[i]:\n            print(-1)\n            return\n    ans = [0] * n\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:55:16.419888 size on output set 4
2022-04-21 04:55:16.419902 num operations 2
2022-04-21 04:55:16.419908 size on input set 1
2022-04-21 04:55:16.420079 using api key gabby
2022-04-21 04:55:16.456934 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:55:21.462353 using api key kouti
2022-04-21 04:55:28.882854 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[b[i][0]].add(i)\n        d[b[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = b[start][0] if b[start][0] != res[-1] else b[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nb = defaultdict(list)\nfor i in range(n):\n    b[i + 1] = list(map(int, input().split()))\nprint(solve(n, a, b))\n"
    }
  ],
  "created": 1650516921,
  "object": "edit"
}
2022-04-21 04:55:28.883085 fix spelling mistakes 2 ["\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\nfrom collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[b[i][0]].add(i)\n        d[b[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = b[start][0] if b[start][0] != res[-1] else b[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nb = defaultdict(list)\nfor i in range(n):\n    b[i + 1] = list(map(int, input().split()))\nprint(solve(n, a, b))\n"]
2022-04-21 04:55:28.883122 size on output set 2
2022-04-21 04:55:28.883129 size on input set 2
2022-04-21 04:55:28.883290 using api key gabby
2022-04-21 04:55:28.919418 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:55:33.924881 using api key jaanu
2022-04-21 04:55:45.643780 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[b[i][0]].add(i)\n        d[b[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = b[start][0] if b[start][0] != res[-1] else b[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))[1:]\nb = defaultdict(list)\nfor i in range(n):\n    b[i + 1] = list(map(int, input().split()))[1:]\nprint(solve(n, a, b))\n"
    },
    {
      "index": 1,
      "text": "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(len(a)):\n    for j in range(len(b)):\n        if a[i]+b[j]==k:\n            c.append(a[i])\n            c.append(b[j])\n            break\n        else:\n            continue\nif len(c)==0:\n    print(\"empty\")\nelse:\n    for i in range(0,len(c),2):\n        print(c[i],c[i+1])\n"
    }
  ],
  "created": 1650516933,
  "object": "edit"
}
2022-04-21 04:55:45.644003 fix syntax errors 2 ["from collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[b[i][0]].add(i)\n        d[b[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = b[start][0] if b[start][0] != res[-1] else b[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))[1:]\nb = defaultdict(list)\nfor i in range(n):\n    b[i + 1] = list(map(int, input().split()))[1:]\nprint(solve(n, a, b))\n", 'n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=[]\nfor i in range(len(a)):\n    for j in range(len(b)):\n        if a[i]+b[j]==k:\n            c.append(a[i])\n            c.append(b[j])\n            break\n        else:\n            continue\nif len(c)==0:\n    print("empty")\nelse:\n    for i in range(0,len(c),2):\n        print(c[i],c[i+1])\n']
2022-04-21 04:55:45.644273 using api key kouti
2022-04-21 04:55:49.026503 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = [int(x) for x in input().split()]\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n - 1):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"
    }
  ],
  "created": 1650516945,
  "object": "edit"
}
2022-04-21 04:55:49.026798 fix syntax errors 2 ["\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = [int(x) for x in input().split()]\nprint(solve(n, a))\n", "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n - 1):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n"]
2022-04-21 04:55:49.026831 size on output set 4
