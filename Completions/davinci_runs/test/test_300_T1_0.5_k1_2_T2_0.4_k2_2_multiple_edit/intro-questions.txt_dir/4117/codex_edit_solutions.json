["import math\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n", "\n\nfrom itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        break\n        print(i[0], i[1], i[2])\n", "\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n", "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        print(i[0], i[1], i[2])\n"]