2022-04-21 01:28:17.329189 num operations 2
2022-04-21 01:28:17.329199 size on input set 1
2022-04-21 01:28:17.329349 using api key soukgp
2022-04-21 01:28:23.849119 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinatio\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n"
    }
  ],
  "created": 1650504497,
  "object": "edit"
}
2022-04-21 01:28:23.849368 fix spelling mistakes 2 ['\n\nfrom itertools import combinatio\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n"]
2022-04-21 01:28:23.849397 size on output set 2
2022-04-21 01:28:23.849405 size on input set 2
2022-04-21 01:28:23.849570 using api key kouti
2022-04-21 01:28:26.546760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650504503,
  "object": "edit"
}
2022-04-21 01:28:26.546981 fix syntax errors 2 ['\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-21 01:28:26.547163 using api key jaanu
2022-04-21 01:28:30.054965 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n"
    },
    {
      "index": 1,
      "text": "import math\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n"
    }
  ],
  "created": 1650504506,
  "object": "edit"
}
2022-04-21 01:28:30.055198 fix syntax errors 2 ["\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n", "import math\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nN = int(input())\n\nif is_prime(N):\n    print('YES')\nelse:\n    print('NO')\n"]
2022-04-21 01:28:30.055224 size on output set 3
2022-04-21 01:28:30.055236 num operations 2
2022-04-21 01:28:30.055242 size on input set 1
2022-04-21 01:28:30.055447 using api key gabby
2022-04-21 01:28:30.090653 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:28:35.096085 using api key sourya
2022-04-21 01:28:35.133570 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:28:45.137127 using api key sunu
2022-04-21 01:28:49.666919 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        print(i[0], i[1], i[2])\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650504525,
  "object": "edit"
}
2022-04-21 01:28:49.667142 fix spelling mistakes 2 ['\n\nfrom itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        print(i[0], i[1], i[2])\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-21 01:28:49.667167 size on output set 2
2022-04-21 01:28:49.667175 size on input set 2
2022-04-21 01:28:49.667364 using api key derek
2022-04-21 01:28:49.702913 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:28:54.708317 using api key sunu
2022-04-21 01:28:57.133851 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        break\n        print(i[0], i[1], i[2])\n"
    },
    {
      "index": 1,
      "text": "from itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        print(i[0], i[1], i[2])\n"
    }
  ],
  "created": 1650504534,
  "object": "edit"
}
2022-04-21 01:28:57.134176 fix syntax errors 2 ['\n\nfrom itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        break\n        print(i[0], i[1], i[2])\n', 'from itertools import permutations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] != i[1] and i[1] != i[2]:\n        print(i[0], i[1], i[2])\n']
2022-04-21 01:28:57.134399 using api key sunu
2022-04-21 01:28:59.535891 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650504537,
  "object": "edit"
}
2022-04-21 01:28:59.536122 fix syntax errors 2 ['from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-21 01:28:59.536285 size on output set 3
