2022-04-20 23:10:16.044300 num operations 2
2022-04-20 23:10:16.044310 size on input set 1
2022-04-20 23:10:16.044456 using api key jaanu
2022-04-20 23:10:18.576971 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1650496216,
  "object": "edit"
}
2022-04-20 23:10:18.577203 fix spelling mistakes 2 ["\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-20 23:10:18.577231 size on output set 1
2022-04-20 23:10:18.577240 size on input set 1
2022-04-20 23:10:18.577399 using api key soukgp
2022-04-20 23:10:28.943034 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nh1, m1 = map(int, input().split(':')) # \u0432\u0432\u043e\u0434\u0438\u043c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435\nh2, m2 = map(int, input().split(':')) # \u0432\u0432\u043e\u0434\u0438\u043c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435\n\nm3 = (m1 + m2) // 2 # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043c\u0438\u043d\u0443\u0442\nh3 = h1 + (m1 + m2) // 120 # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0447\u0430\u0441\u043e\u0432\n\nif h3 > 23: # \u0435\u0441\u043b\u0438 \u0447\u0430\u0441\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435 23\n    h3 -= 24 # \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u043c 24\n\nprint('{:02}:{:02}'.format(h3, m3)) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0447\u0430\u0441\u044b \u0438 \u043c\u0438\u043d\u0443\u0442\u044b\n"
    },
    {
      "index": 1,
      "text": "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1650496218,
  "object": "edit"
}
2022-04-20 23:10:28.943269 fix syntax errors 2 ["#!/usr/bin/env python3\n\nh1, m1 = map(int, input().split(':')) # вводим два числа через двоеточие\nh2, m2 = map(int, input().split(':')) # вводим два числа через двоеточие\n\nm3 = (m1 + m2) // 2 # считаем среднее арифметическое минут\nh3 = h1 + (m1 + m2) // 120 # считаем среднее арифметическое часов\n\nif h3 > 23: # если часов больше 23\n    h3 -= 24 # вычитаем 24\n\nprint('{:02}:{:02}'.format(h3, m3)) # выводим полученные часы и минуты\n", "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-20 23:10:28.943306 size on output set 2
2022-04-20 23:10:28.943318 num operations 2
2022-04-20 23:10:28.943324 size on input set 1
2022-04-20 23:10:28.943482 using api key sourya
2022-04-20 23:10:28.979685 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:10:33.981122 using api key sunu
2022-04-20 23:10:42.762296 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650496234,
  "object": "edit"
}
2022-04-20 23:10:42.762551 fix spelling mistakes 2 ["\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 23:10:42.762586 size on output set 2
2022-04-20 23:10:42.762593 size on input set 2
2022-04-20 23:10:42.762762 using api key gabby
2022-04-20 23:10:42.798522 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:10:47.803908 using api key kouti
2022-04-20 23:10:52.214887 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]  # noqa: E741\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]  # noqa: E741\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650496247,
  "object": "edit"
}
2022-04-20 23:10:52.215212 fix syntax errors 2 ["#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]  # noqa: E741\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]  # noqa: E741\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 23:10:52.215403 using api key gabby
2022-04-20 23:10:52.251809 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:10:57.257220 using api key soukgp
2022-04-20 23:10:59.685187 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650496257,
  "object": "edit"
}
2022-04-20 23:10:59.685514 fix syntax errors 2 ["\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split()]\n    end_time = [int(x) for x in sys.stdin.readline().split()]\n    start_minutes = time_to_minutes(start_time) # convert start time to minutes\n    end_minutes = time_to_minutes(end_time) # convert end time to minutes\n    middle_minutes = (start_minutes + end_minutes) // 2 # calculate middle time in minutes\n    middle_time = minutes_to_time(middle_minutes) # convert middle time to time\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # print middle time\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 23:10:59.685548 size on output set 3
