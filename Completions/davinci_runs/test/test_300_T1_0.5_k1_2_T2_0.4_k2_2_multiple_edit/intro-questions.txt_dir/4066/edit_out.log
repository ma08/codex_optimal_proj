2022-04-21 00:14:36.381065 num operations 2
2022-04-21 00:14:36.381081 size on input set 1
2022-04-21 00:14:36.381236 using api key sunu
2022-04-21 00:14:50.270691 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm=lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i],a[j])<min_lcm:\n                min_lcm=lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500076,
  "object": "edit"
}
2022-04-21 00:14:50.270939 fix spelling mistakes 2 ["\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm=lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i],a[j])<min_lcm:\n                min_lcm=lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:14:50.270975 size on output set 2
2022-04-21 00:14:50.270983 size on input set 2
2022-04-21 00:14:50.271146 using api key jaanu
2022-04-21 00:14:57.763416 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm=lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i],a[j])<min_lcm:\n                min_lcm=lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm = lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i],a[j]) < min_lcm:\n                min_lcm = lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500090,
  "object": "edit"
}
2022-04-21 00:14:57.763669 fix syntax errors 2 ["\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm=lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i],a[j])<min_lcm:\n                min_lcm=lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n    min_lcm = lcm(a[0],a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i],a[j]) < min_lcm:\n                min_lcm = lcm(a[i],a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:14:57.763942 using api key gabby
2022-04-21 00:14:57.807367 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 00:15:02.809058 using api key gabby
2022-04-21 00:15:02.851063 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 00:15:12.861483 using api key kouti
2022-04-21 00:15:18.673117 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])  # initialize max_lcm\n    min_i = 1\n    min_j = 2  # initialize min_i and min_j\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500112,
  "object": "edit"
}
2022-04-21 00:15:18.673333 fix syntax errors 2 ["\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])  # initialize max_lcm\n    min_i = 1\n    min_j = 2  # initialize min_i and min_j\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) > max_lcm:\n                max_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:15:18.673374 size on output set 4
2022-04-21 00:15:18.673388 num operations 2
2022-04-21 00:15:18.673394 size on input set 1
2022-04-21 00:15:18.673547 using api key derek
2022-04-21 00:15:18.714020 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 00:15:23.715617 using api key gabby
2022-04-21 00:15:23.755847 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 00:15:33.761060 using api key jaanu
2022-04-21 00:15:44.793776 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y%x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    }
  ],
  "created": 1650500133,
  "object": "edit"
}
2022-04-21 00:15:44.793990 fix spelling mistakes 2 ['\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y%x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n', '\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n']
2022-04-21 00:15:44.794022 size on output set 2
2022-04-21 00:15:44.794030 size on input set 2
2022-04-21 00:15:44.794188 using api key sourya
2022-04-21 00:15:44.833923 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 00:15:49.839320 using api key sunu
2022-04-21 00:15:52.288873 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    },
    {
      "index": 1,
      "text": "\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    }
  ],
  "created": 1650500149,
  "object": "edit"
}
2022-04-21 00:15:52.289193 fix syntax errors 2 ['\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n', '\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n']
2022-04-21 00:15:52.289373 using api key sunu
2022-04-21 00:15:59.959258 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y % x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    },
    {
      "index": 1,
      "text": "\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y % x, x)\n\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    }
  ],
  "created": 1650500152,
  "object": "edit"
}
2022-04-21 00:15:59.959500 fix syntax errors 2 ['\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y % x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n', '\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y % x, x)\n\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n']
2022-04-21 00:15:59.959535 size on output set 3
