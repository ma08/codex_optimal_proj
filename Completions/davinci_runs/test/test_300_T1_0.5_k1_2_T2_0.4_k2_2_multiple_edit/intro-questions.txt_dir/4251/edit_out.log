2022-04-21 04:21:31.833671 num operations 2
2022-04-21 04:21:31.833681 size on input set 1
2022-04-21 04:21:31.833822 using api key kouti
2022-04-21 04:21:35.696235 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solution(matrix, n, m):  # O(n*m*log(n))\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n"
    }
  ],
  "created": 1650514891,
  "object": "edit"
}
2022-04-21 04:21:35.696487 fix spelling mistakes 2 ["\n\ndef solution(matrix, n, m):  # O(n*m*log(n))\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\n\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n"]
2022-04-21 04:21:35.696520 size on output set 2
2022-04-21 04:21:35.696527 size on input set 2
2022-04-21 04:21:35.696685 using api key sunu
2022-04-21 04:21:38.105934 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n"
    }
  ],
  "created": 1650514895,
  "object": "edit"
}
2022-04-21 04:21:38.106158 fix syntax errors 2 ["\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n", "\n\ndef max_diff(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(max_diff(matrix, n, m))\n"]
2022-04-21 04:21:38.106347 using api key soukgp
2022-04-21 04:21:42.205668 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n - 1):\n            diff = column[i + 1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solution(matrix, n, m):  # O(n*m*log(n)) time complexity\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n"
    }
  ],
  "created": 1650514898,
  "object": "edit"
}
2022-04-21 04:21:42.205884 fix syntax errors 2 ["\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n - 1):\n            diff = column[i + 1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\n\ndef solution(matrix, n, m):  # O(n*m*log(n)) time complexity\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n"]
2022-04-21 04:21:42.205917 size on output set 4
2022-04-21 04:21:42.205930 num operations 2
2022-04-21 04:21:42.205936 size on input set 1
2022-04-21 04:21:42.206091 using api key kouti
2022-04-21 04:21:46.023051 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]\n    # Now, the max k is the maximum difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650514902,
  "object": "edit"
}
2022-04-21 04:21:46.023397 fix spelling mistakes 2 ['\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]\n    # Now, the max k is the maximum difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 04:21:46.023433 size on output set 2
2022-04-21 04:21:46.023442 size on input set 2
2022-04-21 04:21:46.023619 using api key derek
2022-04-21 04:21:46.065046 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:21:51.070487 using api key soukgp
2022-04-21 04:21:57.379313 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())  # n is rows, m is columns\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # list comprehension\n    # Now, the max k is the maximum difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))  # abs is absolute value\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the maximum value in each row\n    max_vals = [max(row) for row in matrix]\n    # Now, the min k is the minimum difference between any two elements in max_vals\n    min_k = float('inf')\n    for i in range(n - 1):\n        min_k = min(min_k, abs(max_vals[i] - max_vals[i + 1]))\n    return min_k\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650514911,
  "object": "edit"
}
2022-04-21 04:21:57.379558 fix syntax errors 2 ['\ndef main():\n    n, m = map(int, input().split())  # n is rows, m is columns\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each column\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # list comprehension\n    # Now, the max k is the maximum difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))  # abs is absolute value\n    return max_k\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the maximum value in each row\n    max_vals = [max(row) for row in matrix]\n    # Now, the min k is the minimum difference between any two elements in max_vals\n    min_k = float(\'inf\')\n    for i in range(n - 1):\n        min_k = min(min_k, abs(max_vals[i] - max_vals[i + 1]))\n    return min_k\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 04:21:57.379750 using api key jaanu
2022-04-21 04:22:02.048759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # list comprehension\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))  # max() is a built-in function\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min([row[i] for row in matrix]) for i in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650514917,
  "object": "edit"
}
2022-04-21 04:22:02.048971 fix syntax errors 2 ['\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # list comprehension\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))  # max() is a built-in function\n    return max_k\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min([row[i] for row in matrix]) for i in range(m)]\n    # Now, the max k is the max difference between any two elements in min_vals,\n    # which is the max difference between any two rows\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 04:22:02.049013 size on output set 4
