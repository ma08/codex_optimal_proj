["import sys\nsys.setrecursionlimit(10**6)\n\ndef dfs(n, m, q, abcd, i, j, dp):\n    if j == m:\n        return 0\n    if i == n:\n        return 0\n    if dp[i][j] != -1:\n        return dp[i][j]\n\n    ret = dfs(n, m, q, abcd, i+1, j, dp)\n    for a, b, c, d in abcd:\n        if a <= i and b > i:\n            ret = max(ret, dfs(n, m, q, abcd, i+1, j+c, dp) + d)\n    dp[i][j] = ret\n    return ret\n\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    # print(abcd)\n    dp = [[-1 for _ in range(m+1)] for _ in range(n+1)]\n\n    print(dfs(n, m, q, abcd, 1, 0, dp))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], -x[0]))  # \u964d\u9806\u30bd\u30fc\u30c8\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # \u554f\u984c\u3092\u305d\u306e\u307e\u307e\u5165\u529b\n    abcd.sort(key=lambda x: (x[1], -x[0]))  # b\u3067\u6607\u9806\u3001a\u3067\u964d\u9806\u306b\u30bd\u30fc\u30c8\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):  # n+1\u307e\u3067\u56de\u3059\u306e\u306f\u3001\u6700\u5f8c\u306e\u884c\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (-x[1], -x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(m):\n            if j - c >= 0 and dp[a][j-c] != 0:\n                dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]