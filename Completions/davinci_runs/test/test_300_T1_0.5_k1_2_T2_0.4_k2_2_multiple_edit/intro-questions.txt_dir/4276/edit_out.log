2022-04-21 04:50:16.366584 num operations 2
2022-04-21 04:50:16.366594 size on input set 1
2022-04-21 04:50:16.366735 using api key jaanu
2022-04-21 04:50:18.931266 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650516616,
  "object": "edit"
}
2022-04-21 04:50:18.931525 fix spelling mistakes 2 ["\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-21 04:50:18.931555 size on output set 1
2022-04-21 04:50:18.931563 size on input set 1
2022-04-21 04:50:18.931732 using api key sourya
2022-04-21 04:50:18.968696 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:50:23.974111 using api key sunu
2022-04-21 04:50:28.070963 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(N) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split()) # N = number of items, T = time limit\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split()) # c = cost, t = time\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650516624,
  "object": "edit"
}
2022-04-21 04:50:28.071184 fix syntax errors 2 ["N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(N) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split()) # N = number of items, T = time limit\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split()) # c = cost, t = time\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-21 04:50:28.071212 size on output set 2
2022-04-21 04:50:28.071224 num operations 2
2022-04-21 04:50:28.071230 size on input set 1
2022-04-21 04:50:28.071390 using api key sunu
2022-04-21 04:50:32.461158 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # \u521d\u671f\u5024\u3092\u6700\u5927\u5024\u306b\u3059\u308b\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: # \u5168\u3066\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650516628,
  "object": "edit"
}
2022-04-21 04:50:32.461428 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # 初期値を最大値にする\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: # 全てのコンピュータが条件を満たさない場合\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 04:50:32.461491 size on output set 2
2022-04-21 04:50:32.461499 size on input set 2
2022-04-21 04:50:32.461653 using api key derek
2022-04-21 04:50:32.498900 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:50:37.504299 using api key sourya
2022-04-21 04:50:37.541932 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 04:50:47.545205 using api key sourya
2022-04-21 04:50:47.582924 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 04:51:07.600030 using api key soukgp
2022-04-21 04:51:11.742588 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print 'TLE'\n    else:\n        print min_cost\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516667,
  "object": "edit"
}
2022-04-21 04:51:11.742809 fix syntax errors 2 ['import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print 'TLE'\n    else:\n        print min_cost\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:51:11.742996 using api key sourya
2022-04-21 04:51:11.780781 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:51:16.786172 using api key sourya
2022-04-21 04:51:16.823144 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 04:51:26.833639 using api key jaanu
2022-04-21 04:51:32.638913 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # \u521d\u671f\u5024\u3092\u6700\u5927\u5024\u306b\u3059\u308b\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: # \u5168\u3066\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # \u521d\u671f\u5024\u3092\u6700\u5927\u5024\u306b\u3059\u308b\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:  # \u5168\u3066\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650516686,
  "object": "edit"
}
2022-04-21 04:51:32.639138 fix syntax errors 2 ['#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # 初期値を最大値にする\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: # 全てのコンピュータが条件を満たさない場合\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # 初期値を最大値にする\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:  # 全てのコンピュータが条件を満たさない場合\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 04:51:32.639181 size on output set 4
