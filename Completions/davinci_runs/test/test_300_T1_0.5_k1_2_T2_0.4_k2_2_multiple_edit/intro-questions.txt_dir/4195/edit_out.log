2022-04-21 03:15:50.065477 num operations 2
2022-04-21 03:15:50.065488 size on input set 1
2022-04-21 03:15:50.065629 using api key gabby
2022-04-21 03:15:50.218624 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 03:15:55.224043 using api key sunu
2022-04-21 03:15:58.854883 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n) \n"
    }
  ],
  "created": 1650510955,
  "object": "edit"
}
2022-04-21 03:15:58.855159 fix spelling mistakes 2 ['\n#\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n) \n']
2022-04-21 03:15:58.855184 size on output set 2
2022-04-21 03:15:58.855193 size on input set 2
2022-04-21 03:15:58.855358 using api key jaanu
2022-04-21 03:16:02.292520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n#\n#\n#\n#\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\n# https://atcoder.jp/contests/abc071/tasks/arc081_a\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650510958,
  "object": "edit"
}
2022-04-21 03:16:02.292757 fix syntax errors 2 ['#\n#\n#\n#\n#\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n# https://atcoder.jp/contests/abc071/tasks/arc081_a\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-21 03:16:02.293010 using api key kouti
2022-04-21 03:16:05.810256 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650510962,
  "object": "edit"
}
2022-04-21 03:16:05.810494 fix syntax errors 2 ['\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-21 03:16:05.810517 size on output set 4
2022-04-21 03:16:05.810528 num operations 2
2022-04-21 03:16:05.810534 size on input set 1
2022-04-21 03:16:05.810698 using api key gabby
2022-04-21 03:16:05.846108 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 03:16:10.851530 using api key gabby
2022-04-21 03:16:10.886819 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 03:16:20.897227 using api key soukgp
2022-04-21 03:16:23.876810 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 1,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1650510980,
  "object": "edit"
}
2022-04-21 03:16:23.877021 fix spelling mistakes 2 ['\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-21 03:16:23.877043 size on output set 1
2022-04-21 03:16:23.877054 size on input set 1
2022-04-21 03:16:23.877217 using api key jaanu
2022-04-21 03:16:27.806074 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n    print(10000**N)\n"
    },
    {
      "index": 1,
      "text": "D, N = map(int, input().split())\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1650510983,
  "object": "edit"
}
2022-04-21 03:16:27.806285 fix syntax errors 2 ['\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n    print(10000**N)\n', 'D, N = map(int, input().split())\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-21 03:16:27.806309 size on output set 2
