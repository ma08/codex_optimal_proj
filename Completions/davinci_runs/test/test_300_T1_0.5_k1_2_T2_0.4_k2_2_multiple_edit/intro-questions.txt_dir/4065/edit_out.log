2022-04-21 00:13:53.594455 num operations 2
2022-04-21 00:13:53.594467 size on input set 1
2022-04-21 00:13:53.594610 using api key kouti
2022-04-21 00:13:59.473429 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500033,
  "object": "edit"
}
2022-04-21 00:13:59.473680 fix spelling mistakes 2 ["\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:13:59.473718 size on output set 1
2022-04-21 00:13:59.473725 size on input set 1
2022-04-21 00:13:59.473893 using api key sunu
2022-04-21 00:14:07.710744 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500039,
  "object": "edit"
}
2022-04-21 00:14:07.710974 fix syntax errors 2 ["\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:14:07.711012 size on output set 1
2022-04-21 00:14:07.711025 num operations 2
2022-04-21 00:14:07.711033 size on input set 1
2022-04-21 00:14:07.711189 using api key soukgp
2022-04-21 00:14:11.523059 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1650500047,
  "object": "edit"
}
2022-04-21 00:14:11.523377 fix spelling mistakes 2 ['\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-21 00:14:11.523413 size on output set 1
2022-04-21 00:14:11.523420 size on input set 1
2022-04-21 00:14:11.523578 using api key sourya
2022-04-21 00:14:11.562883 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 00:14:16.568278 using api key soukgp
2022-04-21 00:14:35.981604 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, a):\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    return max_len\n\n\nn = int(input())\na = [int(x) for x in input().split()]\n\nprint(solve(n, a))\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500056,
  "object": "edit"
}
2022-04-21 00:14:35.981825 fix syntax errors 2 ['\ndef solve(n, a):\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    return max_len\n\n\nn = int(input())\na = [int(x) for x in input().split()]\n\nprint(solve(n, a))\n', "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i+1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:14:35.981875 size on output set 2
