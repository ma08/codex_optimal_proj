2022-04-21 04:11:10.624888 num operations 2
2022-04-21 04:11:10.624902 size on input set 1
2022-04-21 04:11:10.625049 using api key soukgp
2022-04-21 04:11:13.493391 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    }
  ],
  "created": 1650514270,
  "object": "edit"
}
2022-04-21 04:11:13.493641 fix spelling mistakes 2 ['\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n']
2022-04-21 04:11:13.493664 size on output set 2
2022-04-21 04:11:13.493672 size on input set 2
2022-04-21 04:11:13.493852 using api key sunu
2022-04-21 04:11:15.896638 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    },
    {
      "index": 1,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    }
  ],
  "created": 1650514273,
  "object": "edit"
}
2022-04-21 04:11:15.896901 fix syntax errors 2 ['import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n']
2022-04-21 04:11:15.897086 using api key sunu
2022-04-21 04:11:18.659642 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    }
  ],
  "created": 1650514275,
  "object": "edit"
}
2022-04-21 04:11:18.659853 fix syntax errors 2 ['import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n']
2022-04-21 04:11:18.659872 size on output set 3
2022-04-21 04:11:18.659885 num operations 2
2022-04-21 04:11:18.659891 size on input set 1
2022-04-21 04:11:18.660051 using api key kouti
2022-04-21 04:11:22.024834 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B): # A is the power of each strip and B is the total power\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650514278,
  "object": "edit"
}
2022-04-21 04:11:22.025056 fix spelling mistakes 2 ["\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B): # A is the power of each strip and B is the total power\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:11:22.025081 size on output set 2
2022-04-21 04:11:22.025089 size on input set 2
2022-04-21 04:11:22.025256 using api key kouti
2022-04-21 04:11:27.103261 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef minPowerStrips(A, B): # A is the power of each strip and B is the total power\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split() \n    A = int(line[0]) \n    B = int(line[1]) \n    print(minPowerStrips(A, B)) \n\nif __name__ == '__main__':\n    main() \n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\n\ndef minPowerStrips(A, B):  # A is the power of each strip and B is the total power\n\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650514282,
  "object": "edit"
}
2022-04-21 04:11:27.103521 fix syntax errors 2 ["\nimport math\n\ndef minPowerStrips(A, B): # A is the power of each strip and B is the total power\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split() \n    A = int(line[0]) \n    B = int(line[1]) \n    print(minPowerStrips(A, B)) \n\nif __name__ == '__main__':\n    main() \n", "\nimport math\n\n\ndef minPowerStrips(A, B):  # A is the power of each strip and B is the total power\n\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:11:27.103722 using api key gabby
2022-04-21 04:11:27.141633 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:11:32.147040 using api key derek
2022-04-21 04:11:32.184885 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 04:11:42.195318 using api key gabby
2022-04-21 04:11:42.233062 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 04:12:02.253046 using api key gabby
2022-04-21 04:12:02.292373 in retry 3 40 <class 'Exception'>, Retrying in 40 seconds...
2022-04-21 04:12:42.330189 using api key sourya
2022-04-21 04:12:42.368119 in retry 2 80 <class 'Exception'>, Retrying in 80 seconds...
2022-04-21 04:14:02.445099 using api key derek
