["\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 6]\n", "#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# s = sum(a)\n#\n#\n# def is_good(a, s):\n#     for i in range(len(a)):\n#         if a[i] == s - a[i]:\n#             return True\n#     return False\n#\n# res = []\n# for i in range(n):\n#     if is_good(a[:i] + a[i + 1:], s - a[i]):\n#         res.append(i+1)\n#\n# print(len(res))\n# print(*res)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2] # noqa\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3] # noqa\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2] # noqa\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2] # noqa\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2] # noqa\n", "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a, s):\n    for i in range(len(a)):\n        if a[i] == s - a[i]:\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i + 1:], s - a[i]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices_2 = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices_3 = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices_4 = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices_5 = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices_6 = [i for i, x in enumerate(a) if x == 6]\n", "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\nprint(len(res))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(*res)\n"]