2022-04-21 01:22:00.733641 num operations 2
2022-04-21 01:22:00.733654 size on input set 1
2022-04-21 01:22:00.733796 using api key soukgp
2022-04-21 01:22:05.006041 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i + 1 >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i + 1 >= k and j - i + 1 >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"
    }
  ],
  "created": 1650504120,
  "object": "edit"
}
2022-04-21 01:22:05.006297 fix spelling mistakes 2 ['\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n', '\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i + 1 >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i + 1 >= k and j - i + 1 >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n']
2022-04-21 01:22:05.006344 size on output set 2
2022-04-21 01:22:05.006351 size on input set 2
2022-04-21 01:22:05.006512 using api key jaanu
2022-04-21 01:22:07.644658 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"
    },
    {
      "index": 1,
      "text": "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"
    }
  ],
  "created": 1650504125,
  "object": "edit"
}
2022-04-21 01:22:07.644918 fix syntax errors 2 ['\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n', '\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n']
2022-04-21 01:22:07.645211 using api key sunu
2022-04-21 01:22:31.479731 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# n, k, x = map(int, input().split())\n# pictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# # dp[i][j] = max sum of pictures from range [i, j]\n# # with j - i + 1 >= k\n# dp = [[0 for _ in range(n)] for _ in range(n)]\n\n# for i in range(n):\n#     dp[i][i] = pictures[i]\n\n# for width in range(1, n):\n#     for i in range(n - width):\n#         j = i + width\n#         if j - i + 1 < k:\n#             dp[i][j] = 0\n#         else:\n#             dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# # for row in dp:\n# #     print(row)\n\n# if x == n:\n#     print(dp[0][n - 1])\n# elif x > n:\n#     print(-1)\n# else:\n#     # dp[i][j] = max sum of pictures from range [i, j]\n#     # with j - i + 1 >= k and j - i + 1 >= x\n#     dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n#     for i in range(n):\n#         dp2[i][i] = pictures[i]\n\n#     for width in range(1, n):\n#         for i in range(n - width):\n#             j = i + width\n#             if j - i + 1 < k or j - i + 1 < x:\n#                 dp2[i][j] = 0\n#             else:\n#                 dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n#     # for row in dp2:\n#     #     print(row)\n\n#     print(dp2[0][n - 1])\n\n\nn = int(input())\n\ndp = [0 for _ in range(n + 1)]\n\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    dp[i] = dp[i - 1] + dp[i - 2]\n\nprint(dp[n])\n"
    },
    {
      "index": 1,
      "text": "\n\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"
    }
  ],
  "created": 1650504127,
  "object": "edit"
}
2022-04-21 01:22:31.479971 fix syntax errors 2 ['\n\n# n, k, x = map(int, input().split())\n# pictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# # dp[i][j] = max sum of pictures from range [i, j]\n# # with j - i + 1 >= k\n# dp = [[0 for _ in range(n)] for _ in range(n)]\n\n# for i in range(n):\n#     dp[i][i] = pictures[i]\n\n# for width in range(1, n):\n#     for i in range(n - width):\n#         j = i + width\n#         if j - i + 1 < k:\n#             dp[i][j] = 0\n#         else:\n#             dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# # for row in dp:\n# #     print(row)\n\n# if x == n:\n#     print(dp[0][n - 1])\n# elif x > n:\n#     print(-1)\n# else:\n#     # dp[i][j] = max sum of pictures from range [i, j]\n#     # with j - i + 1 >= k and j - i + 1 >= x\n#     dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n#     for i in range(n):\n#         dp2[i][i] = pictures[i]\n\n#     for width in range(1, n):\n#         for i in range(n - width):\n#             j = i + width\n#             if j - i + 1 < k or j - i + 1 < x:\n#                 dp2[i][j] = 0\n#             else:\n#                 dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n#     # for row in dp2:\n#     #     print(row)\n\n#     print(dp2[0][n - 1])\n\n\nn = int(input())\n\ndp = [0 for _ in range(n + 1)]\n\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n + 1):\n    dp[i] = dp[i - 1] + dp[i - 2]\n\nprint(dp[n])\n', '\n\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n']
2022-04-21 01:22:31.480018 size on output set 3
2022-04-21 01:22:31.480031 num operations 2
2022-04-21 01:22:31.480037 size on input set 1
2022-04-21 01:22:31.480198 using api key sunu
2022-04-21 01:22:39.772738 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650504151,
  "object": "edit"
}
2022-04-21 01:22:39.773012 fix spelling mistakes 2 ["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:22:39.773062 size on output set 2
2022-04-21 01:22:39.773073 size on input set 2
2022-04-21 01:22:39.773258 using api key sourya
2022-04-21 01:22:39.808851 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:22:44.814271 using api key gabby
2022-04-21 01:22:44.850002 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:22:54.860398 using api key soukgp
2022-04-21 01:22:57.286933 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650504174,
  "object": "edit"
}
2022-04-21 01:22:57.287227 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2-1])\n        return\n    print(a[n//2])\n    return\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:22:57.287505 using api key kouti
2022-04-21 01:23:07.502914 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if n < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n - 1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n - 2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n - 3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n - 4])))\n    return\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n - 1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n - 2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n - 3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n - 4])))\n    return\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650504177,
  "object": "edit"
}
2022-04-21 01:23:07.503138 fix syntax errors 2 ["\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if n < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n - 1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n - 2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n - 3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n - 4])))\n    return\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n - 1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n - 2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n - 3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n - 4])))\n    return\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:23:07.503172 size on output set 3
