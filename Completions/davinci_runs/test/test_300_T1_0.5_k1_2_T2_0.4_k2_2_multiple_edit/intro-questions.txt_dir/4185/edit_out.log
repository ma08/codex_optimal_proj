2022-04-21 03:00:35.793465 num operations 2
2022-04-21 03:00:35.793477 size on input set 1
2022-04-21 03:00:35.793621 using api key sunu
2022-04-21 03:00:38.983681 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#\n\n\ndef get_min_moves(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n\n    moves = 0\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_min_moves(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n\n    moves = 0\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n"
    }
  ],
  "created": 1650510035,
  "object": "edit"
}
2022-04-21 03:00:38.983952 fix spelling mistakes 2 ['#\n\n\ndef get_min_moves(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n\n    moves = 0\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n', '\ndef get_min_moves(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n\n    moves = 0\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n']
2022-04-21 03:00:38.983984 size on output set 2
2022-04-21 03:00:38.983992 size on input set 2
2022-04-21 03:00:38.984150 using api key jaanu
2022-04-21 03:00:46.905449 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_min_moves(matrix):\n    n = len(matrix[0])\n    m = len(matrix)\n\n    moves = 0\n    for i in range(m):\n        for j in range(n):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == \"__main__\":\n    m, n = list(map(int, input().split()))\n    matrix = []\n    for _ in range(m):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_min_moves(matrix):\n    n = len(matrix) - 1\n    m = len(matrix[0]) - 1\n\n    moves = 0\n    for i in range(n + 1):\n        for j in range(m + 1):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n"
    }
  ],
  "created": 1650510039,
  "object": "edit"
}
2022-04-21 03:00:46.905674 fix syntax errors 2 ['\ndef get_min_moves(matrix):\n    n = len(matrix[0])\n    m = len(matrix)\n\n    moves = 0\n    for i in range(m):\n        for j in range(n):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == "__main__":\n    m, n = list(map(int, input().split()))\n    matrix = []\n    for _ in range(m):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n', '\ndef get_min_moves(matrix):\n    n = len(matrix) - 1\n    m = len(matrix[0]) - 1\n\n    moves = 0\n    for i in range(n + 1):\n        for j in range(m + 1):\n            if matrix[i][j] != (i * m) + j + 1:\n                moves += 1\n    return moves\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n\n    print(get_min_moves(matrix))\n']
2022-04-21 03:00:46.905864 using api key sourya
2022-04-21 03:00:46.946119 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 03:00:51.951526 using api key sourya
2022-04-21 03:00:51.991858 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 03:01:02.001065 using api key derek
2022-04-21 03:01:02.042541 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 03:01:22.062976 using api key sourya
2022-04-21 03:01:22.102849 in retry 3 40 <class 'Exception'>, Retrying in 40 seconds...
2022-04-21 03:02:02.141082 using api key derek
2022-04-21 03:02:02.182911 in retry 2 80 <class 'Exception'>, Retrying in 80 seconds...
2022-04-21 03:03:22.260603 using api key sourya
