2022-04-21 03:04:04.148581 num operations 2
2022-04-21 03:04:04.148593 size on input set 1
2022-04-21 03:04:04.148764 using api key soukgp
2022-04-21 03:04:12.243392 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_cont = 0\ncont = 0\n\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\n\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650510244,
  "object": "edit"
}
2022-04-21 03:04:12.243648 fix spelling mistakes 2 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_cont = 0\ncont = 0\n\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\n\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-21 03:04:12.243682 size on output set 2
2022-04-21 03:04:12.243690 size on input set 2
2022-04-21 03:04:12.243860 using api key jaanu
2022-04-21 03:04:17.240417 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmax_cont = 0\ncont = 0\n\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\n\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nmax_cont = 0\ncont = 0\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n"
    }
  ],
  "created": 1650510252,
  "object": "edit"
}
2022-04-21 03:04:17.240619 fix syntax errors 2 ['import sys\n\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmax_cont = 0\ncont = 0\n\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\n\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n', '\nn = int(input())\na = list(map(int, input().split()))\nmax_cont = 0\ncont = 0\nfor i in a:\n    if i == 0:\n        max_cont = max(max_cont, cont)\n        cont = 0\n    else:\n        cont += 1\nmax_cont = max(max_cont, cont)\nprint(max_cont)\n']
2022-04-21 03:04:17.240823 using api key kouti
2022-04-21 03:04:19.760135 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650510257,
  "object": "edit"
}
2022-04-21 03:04:19.760378 fix syntax errors 2 ['n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', 'n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-21 03:04:19.760406 size on output set 3
2022-04-21 03:04:19.760419 num operations 2
2022-04-21 03:04:19.760425 size on input set 1
2022-04-21 03:04:19.760598 using api key sunu
2022-04-21 03:04:23.073259 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1650510259,
  "object": "edit"
}
2022-04-21 03:04:23.073512 fix spelling mistakes 2 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-21 03:04:23.073542 size on output set 1
2022-04-21 03:04:23.073549 size on input set 1
2022-04-21 03:04:23.073733 using api key derek
2022-04-21 03:04:23.110907 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 03:04:28.113110 using api key derek
2022-04-21 03:04:28.151240 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 03:04:38.161118 using api key sunu
2022-04-21 03:04:41.054965 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile i < n and a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1650510278,
  "object": "edit"
}
2022-04-21 03:04:41.055204 fix syntax errors 2 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile i < n and a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '#!/usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-21 03:04:41.055341 size on output set 2
