2022-04-21 03:07:23.356941 num operations 2
2022-04-21 03:07:23.356953 size on input set 1
2022-04-21 03:07:23.357102 using api key derek
2022-04-21 03:07:23.473976 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 03:07:28.479394 using api key gabby
2022-04-21 03:07:28.515359 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 03:07:38.525739 using api key sunu
2022-04-21 03:07:45.011429 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {'soft': 0, 'hard': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650510458,
  "object": "edit"
}
2022-04-21 03:07:45.011717 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {\'soft\': 0, \'hard\': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 03:07:45.011763 size on output set 2
2022-04-21 03:07:45.011773 size on input set 2
2022-04-21 03:07:45.012028 using api key sunu
2022-04-21 03:07:49.555786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {'soft': 0, 'hard': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses['soft'] if cheeses['soft'] < cheeses['hard'] else cheeses['hard'])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {'soft': 0, 'hard': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"]\n          else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650510465,
  "object": "edit"
}
2022-04-21 03:07:49.556000 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n    cheeses = {'soft': 0, 'hard': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses['soft'] if cheeses['soft'] < cheeses['hard'] else cheeses['hard'])\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    n = int(input())\n    cheeses = {\'soft\': 0, \'hard\': 0}\n    for i in range(n):\n        cheese = input().split()\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"]\n          else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 03:07:49.556177 using api key soukgp
2022-04-21 03:07:55.271071 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])  # noqa\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"]\n          else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650510469,
  "object": "edit"
}
2022-04-21 03:07:55.271301 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])  # noqa\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()[1]\n        if cheese not in cheeses:\n            cheeses[cheese] = 0\n        cheeses[cheese] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"]\n          else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 03:07:55.271328 size on output set 4
2022-04-21 03:07:55.271348 num operations 2
2022-04-21 03:07:55.271355 size on input set 1
2022-04-21 03:07:55.271506 using api key jaanu
2022-04-21 03:08:06.771334 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter \n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    }
  ],
  "created": 1650510475,
  "object": "edit"
}
2022-04-21 03:08:06.771558 fix spelling mistakes 2 ["\n\n# from collections import Counter \n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"]
2022-04-21 03:08:06.771588 size on output set 2
2022-04-21 03:08:06.771596 size on input set 2
2022-04-21 03:08:06.771758 using api key soukgp
2022-04-21 03:08:10.911622 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft'] * c['hard'])\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c[\"soft\"]*c[\"hard\"])\n"
    }
  ],
  "created": 1650510486,
  "object": "edit"
}
2022-04-21 03:08:10.911830 fix syntax errors 2 ["\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft'] * c['hard'])\n", '\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c["soft"]*c["hard"])\n']
2022-04-21 03:08:10.912001 using api key soukgp
2022-04-21 03:08:23.363036 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter \nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter \nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650510490,
  "object": "edit"
}
2022-04-21 03:08:23.363252 fix syntax errors 2 ["\n\nfrom collections import Counter \nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter \nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-21 03:08:23.363278 size on output set 4
