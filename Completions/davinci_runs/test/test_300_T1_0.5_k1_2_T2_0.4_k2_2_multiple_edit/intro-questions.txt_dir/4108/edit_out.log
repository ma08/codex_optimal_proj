2022-04-21 01:18:47.364391 num operations 2
2022-04-21 01:18:47.364403 size on input set 1
2022-04-21 01:18:47.364549 using api key soukgp
2022-04-21 01:18:50.875358 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503927,
  "object": "edit"
}
2022-04-21 01:18:50.875612 fix spelling mistakes 2 ["\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:18:50.875643 size on output set 2
2022-04-21 01:18:50.875651 size on input set 2
2022-04-21 01:18:50.875845 using api key kouti
2022-04-21 01:18:56.999223 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef can_equal(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_list = list(s1)\n    s2_list = list(s2)\n    s1_list.sort()\n    s2_list.sort()\n    return s1_list == s2_list\n\ns = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\nif can_equal(s, s2):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503930,
  "object": "edit"
}
2022-04-21 01:18:56.999498 fix syntax errors 2 ["import sys\n\ndef can_equal(s1, s2):\n    if len(s1) != len(s2):\n        return False\n    s1_list = list(s1)\n    s2_list = list(s2)\n    s1_list.sort()\n    s2_list.sort()\n    return s1_list == s2_list\n\ns = sys.stdin.readline().rstrip()\ns2 = sys.stdin.readline().rstrip()\n\nif can_equal(s, s2):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:18:56.999704 using api key soukgp
2022-04-21 01:18:59.872763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# https://atcoder.jp/contests/abc049/tasks/arc065_a\n\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503937,
  "object": "edit"
}
2022-04-21 01:18:59.872992 fix syntax errors 2 ["\n\n# https://atcoder.jp/contests/abc049/tasks/arc065_a\n\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq_str(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq_str(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:18:59.873025 size on output set 4
2022-04-21 01:18:59.873039 num operations 2
2022-04-21 01:18:59.873046 size on input set 1
2022-04-21 01:18:59.873221 using api key sourya
2022-04-21 01:18:59.915115 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:19:04.920524 using api key sourya
2022-04-21 01:19:04.961693 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:19:14.972158 using api key kouti
2022-04-21 01:19:18.942429 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503955,
  "object": "edit"
}
2022-04-21 01:19:18.942660 fix spelling mistakes 2 ["\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:19:18.942692 size on output set 2
2022-04-21 01:19:18.942700 size on input set 2
2022-04-21 01:19:18.942868 using api key jaanu
2022-04-21 01:19:21.964784 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503958,
  "object": "edit"
}
2022-04-21 01:19:21.964999 fix syntax errors 2 ["\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:19:21.965395 using api key sunu
2022-04-21 01:19:25.886880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650503962,
  "object": "edit"
}
2022-04-21 01:19:25.887112 fix syntax errors 2 ["\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-21 01:19:25.887148 size on output set 4
