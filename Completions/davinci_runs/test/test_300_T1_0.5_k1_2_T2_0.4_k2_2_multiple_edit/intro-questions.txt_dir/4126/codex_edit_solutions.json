["\n\ninput_str = input() \n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('yes')\nelse:\n    print('no')\n", "\n\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv[1:]\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2:]\n\n#sets second to reverse second\nsecond = second[::-1]\n\n#sets first to reverse first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reverse line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i -1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('yes')\nelse:\n    print('no')\n", "\n\ninput_str = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \n\nis_palindrome = True  # \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u043c\nfor i in range(int(len(input_str) / 2)):  # \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n    if input_str[i] != input_str[-i - 1]:  # \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b \u0441 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u044b\u043c \u0435\u043c\u0443\n        is_palindrome = False  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u043b\u0438, \u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u043c\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line -1\nln = len(line)\n\n#sets first to first half of line +1\nfirst = line[:ln/2]\n\n#sets second to second half of line -1\nsecond = line[ln/2-1:]\n\n#sets second to reversed second -1\nsecond = second[::-1]\n\n#sets first to reversed first -1\nfirst = first[::-1]\n\n#sets middle to middle of line -1\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line -1\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reverse line\nif first == second[::-1] and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n", "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt and removes newlines\nline = txt.read().replace('\\n','')\n\n#sets ln to length of line\nln = len(line)\n\nfirst = line[:ln/2]\n\nsecond = line[ln/2+1:]\n\n#sets second to reversed second\nsecond = second[::-1]\n\n#sets first to reversed first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1] and middle == middle[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"]