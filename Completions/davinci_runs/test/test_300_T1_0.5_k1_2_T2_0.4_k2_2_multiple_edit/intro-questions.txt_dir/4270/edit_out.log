2022-04-21 04:40:32.533682 num operations 2
2022-04-21 04:40:32.533692 size on input set 1
2022-04-21 04:40:32.533847 using api key sourya
2022-04-21 04:40:32.711434 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:40:37.716872 using api key soukgp
2022-04-21 04:40:43.441682 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516037,
  "object": "edit"
}
2022-04-21 04:40:43.441957 fix spelling mistakes 2 ["\n\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:40:43.441997 size on output set 1
2022-04-21 04:40:43.442006 size on input set 1
2022-04-21 04:40:43.442177 using api key sourya
2022-04-21 04:40:43.481937 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:40:48.487377 using api key sourya
2022-04-21 04:40:48.526988 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 04:40:58.537440 using api key jaanu
2022-04-21 04:41:01.741010 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main(): \n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) // 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650516058,
  "object": "edit"
}
2022-04-21 04:41:01.741238 fix syntax errors 2 ["\ndef main(): \n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) // 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 04:41:01.741267 size on output set 2
2022-04-21 04:41:01.741280 num operations 2
2022-04-21 04:41:01.741287 size on input set 1
2022-04-21 04:41:01.741459 using api key gabby
2022-04-21 04:41:01.781634 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 04:41:06.787008 using api key derek
2022-04-21 04:41:06.826775 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 04:41:16.837167 using api key gabby
2022-04-21 04:41:16.876813 in retry 4 20 <class 'Exception'>, Retrying in 20 seconds...
2022-04-21 04:41:36.897209 using api key sourya
2022-04-21 04:41:36.937523 in retry 3 40 <class 'Exception'>, Retrying in 40 seconds...
2022-04-21 04:42:16.977960 using api key soukgp
2022-04-21 04:42:20.189566 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x + y) / 2)\n\nprint(v[0])\n"
    }
  ],
  "created": 1650516137,
  "object": "edit"
}
2022-04-21 04:42:20.189779 fix spelling mistakes 2 ['\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n', '\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x + y) / 2)\n\nprint(v[0])\n']
2022-04-21 04:42:20.189817 size on output set 2
2022-04-21 04:42:20.189825 size on input set 2
2022-04-21 04:42:20.189997 using api key sunu
2022-04-21 04:42:23.284304 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x + y) / 2))\n\nprint(v[0])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x + y) / 2))\n\nprint(v[0])\n"
    }
  ],
  "created": 1650516140,
  "object": "edit"
}
2022-04-21 04:42:23.284531 fix syntax errors 2 ['\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x + y) / 2))\n\nprint(v[0])\n', '\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x + y) / 2))\n\nprint(v[0])\n']
2022-04-21 04:42:23.284748 using api key kouti
2022-04-21 04:42:25.836097 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n"
    }
  ],
  "created": 1650516143,
  "object": "edit"
}
2022-04-21 04:42:25.836477 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n', '#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n']
2022-04-21 04:42:25.836505 size on output set 2
