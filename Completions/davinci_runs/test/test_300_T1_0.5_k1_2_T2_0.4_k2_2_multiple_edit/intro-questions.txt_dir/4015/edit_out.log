2022-04-20 23:04:21.756465 num operations 2
2022-04-20 23:04:21.756478 size on input set 1
2022-04-20 23:04:21.756623 using api key gabby
2022-04-20 23:04:21.885457 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:04:26.890943 using api key kouti
2022-04-20 23:04:29.469847 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    }
  ],
  "created": 1650495866,
  "object": "edit"
}
2022-04-20 23:04:29.470092 fix spelling mistakes 2 ["\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"]
2022-04-20 23:04:29.470121 size on output set 1
2022-04-20 23:04:29.470129 size on input set 1
2022-04-20 23:04:29.470283 using api key sourya
2022-04-20 23:04:29.509996 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:04:34.515423 using api key jaanu
2022-04-20 23:04:40.367690 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return 1 + solve(n * 2, m) if m % (n * 2) == 0 else 1 + solve(n * 3, m)\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m or n > m or m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    }
  ],
  "created": 1650495874,
  "object": "edit"
}
2022-04-20 23:04:40.367898 fix syntax errors 2 ["\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return 1 + solve(n * 2, m) if m % (n * 2) == 0 else 1 + solve(n * 3, m)\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m or n > m or m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"]
2022-04-20 23:04:40.367926 size on output set 2
2022-04-20 23:04:40.367938 num operations 2
2022-04-20 23:04:40.367944 size on input set 1
2022-04-20 23:04:40.368099 using api key soukgp
2022-04-20 23:04:48.120842 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650495880,
  "object": "edit"
}
2022-04-20 23:04:48.121067 fix spelling mistakes 2 ['\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-20 23:04:48.121101 size on output set 1
2022-04-20 23:04:48.121108 size on input set 1
2022-04-20 23:04:48.121281 using api key sourya
2022-04-20 23:04:48.160574 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-20 23:04:53.165991 using api key jaanu
2022-04-20 23:05:03.736033 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport os\nprint(os.getcwd())\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650495893,
  "object": "edit"
}
2022-04-20 23:05:03.736301 fix syntax errors 2 ['\nimport os\nprint(os.getcwd())\n', '\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-20 23:05:03.736440 size on output set 2
