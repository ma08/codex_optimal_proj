2022-04-21 01:46:57.385889 num operations 2
2022-04-21 01:46:57.385901 size on input set 1
2022-04-21 01:46:57.386050 using api key sunu
2022-04-21 01:47:00.939738 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1650505617,
  "object": "edit"
}
2022-04-21 01:47:00.939978 fix spelling mistakes 2 ['\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-21 01:47:00.940007 size on output set 1
2022-04-21 01:47:00.940014 size on input set 1
2022-04-21 01:47:00.940189 using api key derek
2022-04-21 01:47:00.977966 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:47:05.983349 using api key sunu
2022-04-21 01:47:10.026237 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])-1):\n        print(str(i+1).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j, p in enumerate(prefectures[i]):\n        print(str(i+1).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1650505626,
  "object": "edit"
}
2022-04-21 01:47:10.026510 fix syntax errors 2 ['\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])-1):\n        print(str(i+1).zfill(6) + str(j+1).zfill(6))\n', '\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j, p in enumerate(prefectures[i]):\n        print(str(i+1).zfill(6) + str(j+1).zfill(6))\n']
2022-04-21 01:47:10.026542 size on output set 2
2022-04-21 01:47:10.026554 num operations 2
2022-04-21 01:47:10.026561 size on input set 1
2022-04-21 01:47:10.026729 using api key gabby
2022-04-21 01:47:10.063883 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:47:15.069326 using api key gabby
2022-04-21 01:47:15.107084 in retry 5 10 <class 'Exception'>, Retrying in 10 seconds...
2022-04-21 01:47:25.115960 using api key jaanu
2022-04-21 01:47:29.818523 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # \u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\n    prefecture_cities = defaultdict(list)  # \u8f9e\u66f8\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650505645,
  "object": "edit"
}
2022-04-21 01:47:29.818740 fix spelling mistakes 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # リストのリスト\n    prefecture_cities = defaultdict(list)  # 辞書\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:47:29.818777 size on output set 2
2022-04-21 01:47:29.818785 size on input set 2
2022-04-21 01:47:29.818948 using api key kouti
2022-04-21 01:47:33.240462 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:06d}{:06d}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650505649,
  "object": "edit"
}
2022-04-21 01:47:33.240821 fix syntax errors 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:06d}{:06d}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_city = [[] for _ in range(N)]\n    prefecture_city = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_city[P].append(Y)\n    for P, cities in prefecture_city.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:47:33.241140 using api key gabby
2022-04-21 01:47:33.280437 in retry 6 5 <class 'Exception'>, Retrying in 5 seconds...
2022-04-21 01:47:38.285806 using api key soukgp
2022-04-21 01:47:43.305489 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of lists\n    prefecture_cities = defaultdict(list)  # \u8f9e\u66f8\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = [[] for _ in range(N)]  # \u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\n    # prefecture_cities = defaultdict(list)  # \u8f9e\u66f8\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P-1].append(Y)\n    for P, cities in enumerate(prefecture_cities, 1):\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650505658,
  "object": "edit"
}
2022-04-21 01:47:43.305798 fix syntax errors 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # list of lists\n    prefecture_cities = defaultdict(list)  # 辞書\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = [[] for _ in range(N)]  # リストのリスト\n    # prefecture_cities = defaultdict(list)  # 辞書\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P-1].append(Y)\n    for P, cities in enumerate(prefecture_cities, 1):\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 01:47:43.305837 size on output set 4
