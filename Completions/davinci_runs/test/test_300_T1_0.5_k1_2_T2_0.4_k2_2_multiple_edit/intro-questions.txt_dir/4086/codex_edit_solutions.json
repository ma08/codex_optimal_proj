["n = int(input())\na = [int(x) for x in input().split()]\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "from collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "# print all permutations of string\n\ndef permutation(s):\n    if len(s) == 1:\n        return s\n    else:\n        perm = []\n        for i in range(len(s)):\n            for j in permutation(s[:i] + s[i+1:]):\n                perm.append(s[i] + j)\n        return perm\n\ns = input()\n\nfor i in permutation(s):\n    print(i)\n", "# find max in array\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef find_max(a):\n    max = a[0]\n    for i in a:\n        if i > max:\n            max = i\n    return max\n\nmax = find_max(a)\nprint(max)\n", "def remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\nfrom collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))  # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n"]