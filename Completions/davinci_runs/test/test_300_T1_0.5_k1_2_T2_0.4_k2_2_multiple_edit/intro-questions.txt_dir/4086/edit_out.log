2022-04-21 00:49:16.545897 num operations 2
2022-04-21 00:49:16.545907 size on input set 1
2022-04-21 00:49:16.546050 using api key soukgp
2022-04-21 00:49:19.238938 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# remove duplicates from array\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    }
  ],
  "created": 1650502156,
  "object": "edit"
}
2022-04-21 00:49:19.239209 fix spelling mistakes 2 ['# remove duplicates from array\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n']
2022-04-21 00:49:19.239239 size on output set 2
2022-04-21 00:49:19.239248 size on input set 2
2022-04-21 00:49:19.239443 using api key jaanu
2022-04-21 00:49:24.474279 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = [int(x) for x in input().split()]\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"
    }
  ],
  "created": 1650502159,
  "object": "edit"
}
2022-04-21 00:49:24.474503 fix syntax errors 2 ['def remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n', 'n = int(input())\na = [int(x) for x in input().split()]\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n']
2022-04-21 00:49:24.474685 using api key soukgp
2022-04-21 00:49:31.568357 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# print all permutations of string\n\ndef permutation(s):\n    if len(s) == 1:\n        return s\n    else:\n        perm = []\n        for i in range(len(s)):\n            for j in permutation(s[:i] + s[i+1:]):\n                perm.append(s[i] + j)\n        return perm\n\ns = input()\n\nfor i in permutation(s):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "# find max in array\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef find_max(a):\n    max = a[0]\n    for i in a:\n        if i > max:\n            max = i\n    return max\n\nmax = find_max(a)\nprint(max)\n"
    }
  ],
  "created": 1650502164,
  "object": "edit"
}
2022-04-21 00:49:31.568595 fix syntax errors 2 ['# print all permutations of string\n\ndef permutation(s):\n    if len(s) == 1:\n        return s\n    else:\n        perm = []\n        for i in range(len(s)):\n            for j in permutation(s[:i] + s[i+1:]):\n                perm.append(s[i] + j)\n        return perm\n\ns = input()\n\nfor i in permutation(s):\n    print(i)\n', '# find max in array\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef find_max(a):\n    max = a[0]\n    for i in a:\n        if i > max:\n            max = i\n    return max\n\nmax = find_max(a)\nprint(max)\n']
2022-04-21 00:49:31.568623 size on output set 4
2022-04-21 00:49:31.568636 num operations 2
2022-04-21 00:49:31.568642 size on input set 1
2022-04-21 00:49:31.568870 using api key sunu
2022-04-21 00:49:35.447053 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n"
    }
  ],
  "created": 1650502171,
  "object": "edit"
}
2022-04-21 00:49:35.447265 fix spelling mistakes 2 ['\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # вызываем функцию для удаления дубликатов из списка\n    print(len(nums))\n    print(*nums)\n\nmain()\n', '\nfrom collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n']
2022-04-21 00:49:35.447297 size on output set 2
2022-04-21 00:49:35.447305 size on input set 2
2022-04-21 00:49:35.447466 using api key soukgp
2022-04-21 00:49:39.451792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n"
    }
  ],
  "created": 1650502175,
  "object": "edit"
}
2022-04-21 00:49:39.452011 fix syntax errors 2 ['\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n', '\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n']
2022-04-21 00:49:39.452210 using api key sunu
2022-04-21 00:49:42.804261 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))  # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n"
    }
  ],
  "created": 1650502179,
  "object": "edit"
}
2022-04-21 00:49:42.804659 fix syntax errors 2 ['from collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n', '\nfrom collections import deque\n\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))  # удаление дубликатов\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n']
2022-04-21 00:49:42.804696 size on output set 3
