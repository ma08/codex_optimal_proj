["\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n \nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n", "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i in range(n):\n        if dp[i] == max(dp):\n            print(i - dp[i] + 2, i + 1)\n \nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[j] < a[i]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp), min(dp))\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nimport sys\n\ndef solve(s):\n    dp = [0] * len(s)\n    for i in range(len(s)):\n        if s[i] == 'R':\n            dp[i] = 0\n        else:\n            dp[i] = dp[i - 1] + 1\n    return max(dp)\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) #doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) #doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) #doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"]