2022-04-21 00:50:14.272962 num operations 2
2022-04-21 00:50:14.272977 size on input set 1
2022-04-21 00:50:14.273122 using api key kouti
2022-04-21 00:50:20.170757 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings.\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string \n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502214,
  "object": "edit"
}
2022-04-21 00:50:20.171019 fix spelling mistakes 2 ['\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings.\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string \n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:50:20.171061 size on output set 2
2022-04-21 00:50:20.171072 size on input set 2
2022-04-21 00:50:20.171227 using api key sunu
2022-04-21 00:50:24.874676 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string \n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord('a') + mapping[j]))\n\n        # print the result\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502220,
  "object": "edit"
}
2022-04-21 00:50:24.874888 fix syntax errors 2 ['\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string \n        res = []\n        for j in range(len(s)):\n            res.append(chr(ord(\'a\') + mapping[j]))\n\n        # print the result\n        print(res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:50:24.875093 using api key kouti
2022-04-21 00:50:28.661684 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string.\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result.\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings.\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string.\n        res = ''\n        for j in range(len(s)):\n            res += chr(ord('a') + mapping[j])\n\n        # print the result.\n        print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502224,
  "object": "edit"
}
2022-04-21 00:50:28.661905 fix syntax errors 2 ['\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string.\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result.\n        print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases.\n    t = int(input())\n\n    # iterate over test cases\n    for i in range(t):\n        # read the input.\n        s = input()\n        m = int(input())\n        b = list(map(int, input().split()))\n\n        # create a dictionary for the mappings.\n        mapping = {}\n        for j in range(len(b)):\n            mapping[b[j]] = j\n\n        # create the result string.\n        res = \'\'\n        for j in range(len(s)):\n            res += chr(ord(\'a\') + mapping[j])\n\n        # print the result.\n        print(res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:50:28.662023 size on output set 4
2022-04-21 00:50:28.662037 num operations 2
2022-04-21 00:50:28.662043 size on input set 1
2022-04-21 00:50:28.662198 using api key kouti
2022-04-21 00:50:31.696566 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650502228,
  "object": "edit"
}
2022-04-21 00:50:31.696813 fix spelling mistakes 2 ["\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:50:31.696861 size on output set 2
2022-04-21 00:50:31.696870 size on input set 2
2022-04-21 00:50:31.697043 using api key soukgp
2022-04-21 00:50:37.039494 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s) - 1, -1, -1):\n        t[i] = chr(ord(s[i]) + b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    print(''.join(t))\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        solve()\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650502231,
  "object": "edit"
}
2022-04-21 00:50:37.039705 fix syntax errors 2 ["import sys\n\n\n\ndef read_int():\n    return int(sys.stdin.readline())\n\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\n\ndef read_ints():\n\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s) - 1, -1, -1):\n        t[i] = chr(ord(s[i]) + b[i])\n    return ''.join(t)\n\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    b = read_ints()\n    t = ['a'] * len(s)\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    print(''.join(t))\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        solve()\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:50:37.039886 using api key jaanu
2022-04-21 00:50:39.533218 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650502237,
  "object": "edit"
}
2022-04-21 00:50:39.533461 fix syntax errors 2 ["\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_line():\n    return sys.stdin.readline().strip()\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    s = read_line()\n    m = read_int()\n    b = read_ints()\n    t = ['a'] * len(s)  # a is the smallest character\n    for i in range(len(s)-1, -1, -1):\n        t[i] = chr(ord(s[i])+b[i])\n    return ''.join(t)\n\ndef main():\n    q = read_int()\n    for _ in range(q):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:50:39.533495 size on output set 3
