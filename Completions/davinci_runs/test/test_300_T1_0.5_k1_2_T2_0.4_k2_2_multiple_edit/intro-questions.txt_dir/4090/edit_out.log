2022-04-21 00:52:02.514542 num operations 2
2022-04-21 00:52:02.514563 size on input set 1
2022-04-21 00:52:02.514781 using api key jaanu
2022-04-21 00:52:06.351448 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502322,
  "object": "edit"
}
2022-04-21 00:52:06.351690 fix spelling mistakes 2 ['\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:52:06.351723 size on output set 2
2022-04-21 00:52:06.351731 size on input set 2
2022-04-21 00:52:06.351893 using api key sunu
2022-04-21 00:52:10.687527 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper() + words[i][1:]] + words[i+1:j] + [words[j][0].upper() + words[j][1:]] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:n]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502326,
  "object": "edit"
}
2022-04-21 00:52:10.687741 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper() + words[i][1:]] + words[i+1:j] + [words[j][0].upper() + words[j][1:]] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:n]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:52:10.687933 using api key sunu
2022-04-21 00:52:14.324283 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650502330,
  "object": "edit"
}
2022-04-21 00:52:14.324528 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:52:14.324558 size on output set 4
2022-04-21 00:52:14.324570 num operations 2
2022-04-21 00:52:14.324576 size on input set 1
2022-04-21 00:52:14.324801 using api key sunu
2022-04-21 00:52:18.407707 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words):  # n is the number of words\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:  # compare the current word and the next word\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n-1):\n        if words[i][k] != words[i+1][k]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n"
    }
  ],
  "created": 1650502334,
  "object": "edit"
}
2022-04-21 00:52:18.407940 fix spelling mistakes 2 ['\n\ndef min_length(n, words):  # n is the number of words\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:  # compare the current word and the next word\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n-1):\n        if words[i][k] != words[i+1][k]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n']
2022-04-21 00:52:18.408064 size on output set 2
2022-04-21 00:52:18.408074 size on input set 2
2022-04-21 00:52:18.408227 using api key sunu
2022-04-21 00:52:23.457119 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n - 1):\n        if words[i][k] != words[i + 1][k]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n-1):\n        if words[i][k] != words[i+1][k]:\n            count += 1\n    return count\nk = int(input())\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n"
    }
  ],
  "created": 1650502338,
  "object": "edit"
}
2022-04-21 00:52:23.457378 fix syntax errors 2 ['\n\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n - 1):\n        if words[i][k] != words[i + 1][k]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n', '\n\ndef min_length(n, words, k):\n    count = 1\n    for i in range(n-1):\n        if words[i][k] != words[i+1][k]:\n            count += 1\n    return count\nk = int(input())\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words, k))\n']
2022-04-21 00:52:23.457562 using api key jaanu
2022-04-21 00:52:27.189059 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, words):  # n is the number of words\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:  # compare the current word and the next word\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    }
  ],
  "created": 1650502343,
  "object": "edit"
}
2022-04-21 00:52:27.189266 fix syntax errors 2 ['\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words):  # n is the number of words\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:  # compare the current word and the next word\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n']
2022-04-21 00:52:27.189292 size on output set 4
