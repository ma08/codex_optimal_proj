2022-04-20 06:38:25.112463 num operations 1
2022-04-20 06:38:25.112489 size on input set 1
2022-04-20 06:38:25.112746 using api key jaanu
2022-04-20 06:38:31.297535 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 1,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 2,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 3,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 4,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 5,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Apr  9 13:39:18 2020\n@author: abhijithneilabraham\n\"\"\"\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    },
    {
      "index": 7,
      "text": "\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n"
    }
  ],
  "created": 1650436705,
  "object": "edit"
}
2022-04-20 06:38:31.297957 fix syntax errors 8 ['\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Apr  9 13:39:18 2020\n@author: abhijithneilabraham\n"""\n\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n', '\nn, x = map(int, input().split())\ncities = list(map(int, input().split()))\n\n# Find the minimum distance between the starting point and the cities\nmin_dist = min([abs(x - city) for city in cities])\n\n# Find the maximum distance between the cities\nmax_dist = max([abs(city1 - city2) for city1 in cities for city2 in cities])\n\n# Find the maximum distance that can be traveled\nprint(max(min_dist, max_dist // 2))\n']
2022-04-20 06:38:31.298044 size on output set 2
2022-04-20 06:38:31.298061 num operations 1
2022-04-20 06:38:31.298071 size on input set 1
2022-04-20 06:38:31.298295 using api key kouti
2022-04-20 06:38:40.263505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/12/17 \u4e0b\u53486:03\n# @Author  : Frankie\n# @Email   : zaihuazhao@163.com\n# @File    : test.py\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = [int(i) for i in sys.stdin.readline().split()]\n    x_list.sort()\n\n    if x in x_list:\n        x_list.remove(x)\n\n    min_d = max(x_list[0] - x, x - x_list[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_list[i] - x_list[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650436711,
  "object": "edit"
}
2022-04-20 06:38:40.264026 fix syntax errors 8 ["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2018/12/17 下午6:03\n# @Author  : Frankie\n# @Email   : zaihuazhao@163.com\n# @File    : test.py\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_list = [int(i) for i in sys.stdin.readline().split()]\n    x_list.sort()\n\n    if x in x_list:\n        x_list.remove(x)\n\n    min_d = max(x_list[0] - x, x - x_list[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_list[i] - x_list[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x = map(int, sys.stdin.readline().split())\n    x_lst = [int(i) for i in sys.stdin.readline().split()]\n    x_lst.sort()\n\n    if x in x_lst:\n        x_lst.remove(x)\n\n    min_d = max(x_lst[0] - x, x - x_lst[-1])\n    for i in range(1, n):\n        min_d = max(min_d, (x_lst[i] - x_lst[i - 1]) // 2)\n\n    print(min_d)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:38:40.264133 size on output set 5
