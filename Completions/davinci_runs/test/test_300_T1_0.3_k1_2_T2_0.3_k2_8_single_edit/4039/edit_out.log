2022-04-20 06:10:51.036391 num operations 1
2022-04-20 06:10:51.036412 size on input set 1
2022-04-20 06:10:51.036607 using api key soukgp
2022-04-20 06:11:00.051671 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n        else:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n    if r < 0:\n        print(\"NO\")\n        return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    if n == 1:\n        print(\"YES\")\n    else:\n        projects = []\n        for _ in range(n):\n            projects.append(list(map(int, input().split())))\n        projects.sort(key=lambda x: x[1])\n        for project in projects:\n            if r >= project[0]:\n                r += project[1]\n                if r < 0:\n                    print(\"NO\")\n                    return\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n        else:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, r = map(int, input().split())  # n is number of projects, r is initial money\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])  # sort by profit\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print(\"NO\")\n                return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650435051,
  "object": "edit"
}
2022-04-20 06:11:00.051990 fix syntax errors 8 ['\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n        else:\n            print("NO")\n            return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n    if r < 0:\n        print("NO")\n        return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, r = map(int, input().split())\n    if n == 1:\n        print("YES")\n    else:\n        projects = []\n        for _ in range(n):\n            projects.append(list(map(int, input().split())))\n        projects.sort(key=lambda x: x[1])\n        for project in projects:\n            if r >= project[0]:\n                r += project[1]\n                if r < 0:\n                    print("NO")\n                    return\n        print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1], reverse=True)\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n        else:\n            print("NO")\n            return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n, r = map(int, input().split())  # n is number of projects, r is initial money\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])  # sort by profit\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            if r < 0:\n                print("NO")\n                return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 06:11:00.052046 size on output set 8
2022-04-20 06:11:00.052058 num operations 1
2022-04-20 06:11:00.052063 size on input set 1
2022-04-20 06:11:00.052220 using api key gabby
2022-04-20 06:11:07.372941 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial rating\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))  # [rating, difficulty]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = [list(map(int, input().split())) for _ in range(n)]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print(\"NO\")\n            return\n        r += project[1]\n        if r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0], reverse=True)\n    for project in projects:\n        r += project[1]\n        if r < project[0]:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        r += project[1]\n        if r < project[0] or r < 0:\n            print(\"NO\")\n            return\n    print(\"YES\")\n\nmain()\n"
    }
  ],
  "created": 1650435060,
  "object": "edit"
}
2022-04-20 06:11:07.373340 fix syntax errors 8 ['\n\ndef main():\n    n, r = map(int, input().split())  # n: number of projects, r: initial rating\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))  # [rating, difficulty]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = [list(map(int, input().split())) for _ in range(n)]\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        if r < project[0]:\n            print("NO")\n            return\n        r += project[1]\n        if r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0], reverse=True)\n    for project in projects:\n        r += project[1]\n        if r < project[0]:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n', '\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[0])\n    for project in projects:\n        r += project[1]\n        if r < project[0] or r < 0:\n            print("NO")\n            return\n    print("YES")\n\nmain()\n']
2022-04-20 06:11:07.373397 size on output set 8
