["\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]) + max(0, min(a[2], b[0]) - max(a[0], b[2])))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i + 1) % 3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i + 1) % 3] -= wins\n    max_wins += min(a[0], b[0])\n\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2]) - max(0, min(a[2], b[0]) - max(a[0], b[2])))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2])) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[1]) - max(a[0], b[1])) + min(a[2], b[2]))\n\nif __name__ == \"__main__\":\n    main()\n", "# SOLUTION\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\n# SOLUTION\n\ndef rockPaperScissors(n, a, b, c):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], c[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        c[(i+1)%3] -= wins\n    max_wins += min(a[0], c[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b, c))\n", "# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "#!/bin/python3\n\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    return 0, 0\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    print(max(0, min(a[2], b[0]) - max(a[0], b[2])), max(0, min(a[2], b[0]) - max(a[0], b[2])) + min(a[2], b[2])\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\ndef rockPaperScissors(n, a, b):\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        wins = min(a[i], b[(i+1)%3])\n        min_wins += wins\n        max_wins += wins\n        a[i] -= wins\n        b[(i+1)%3] -= wins\n    max_wins += min(a[0], b[0])\n    return min_wins, max_wins\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(*rockPaperScissors(n, a, b))\n"]