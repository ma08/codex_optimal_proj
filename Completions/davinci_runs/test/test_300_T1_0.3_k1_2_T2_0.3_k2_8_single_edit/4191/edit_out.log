2022-04-20 06:58:45.214851 num operations 1
2022-04-20 06:58:45.214872 size on input set 1
2022-04-20 06:58:45.215114 using api key kouti
2022-04-20 06:58:50.588807 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) \n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 3,
      "text": "\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 4,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 5,
      "text": "\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n"
    },
    {
      "index": 6,
      "text": "\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) # 0 or 1\n"
    },
    {
      "index": 7,
      "text": "\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n"
    }
  ],
  "created": 1650437925,
  "object": "edit"
}
2022-04-20 06:58:50.589224 fix syntax errors 8 ['\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) \n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n', '\n#-----main-----\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n# output\nprint(int(not(a or b or c or d)))\n', '\n\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d))) # 0 or 1\n', '\n#-----main-----\n\n# input\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# output\nprint(int(not(a or b or c or d)))\n']
2022-04-20 06:58:50.589282 size on output set 4
2022-04-20 06:58:50.589300 num operations 1
2022-04-20 06:58:50.589309 size on input set 1
2022-04-20 06:58:50.589553 using api key kouti
2022-04-20 06:58:55.764798 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a or b or c or d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650437930,
  "object": "edit"
}
2022-04-20 06:58:55.765183 fix syntax errors 8 ["\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a or b or c or d)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not (a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    print(int(not(a and b and c and d)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:58:55.765359 size on output set 5
