2022-04-20 06:04:37.717274 num operations 1
2022-04-20 06:04:37.717293 size on input set 1
2022-04-20 06:04:37.717498 using api key soukgp
2022-04-20 06:05:06.932427 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nh1, m1 = input().split(':') # input time 1\nh2, m2 = input().split(':') # input time 2\n\nh1 = int(h1) # convert to int\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2: # if minutes are equal\n    if h1 == h2: # if hours are equal\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else: # if hours are not equal\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse: # if minutes are not equal\n    if h1 == h2: # if hours are equal\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 1,
      "text": "\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif h1 == h2:\n    if m1 == m2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\nelse:\n    if m1 == m2:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 2,
      "text": "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) // 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) // 2)).zfill(2))\n"
    },
    {
      "index": 3,
      "text": "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif h1 == h2:\n    if m1 == m2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n        exit()\n    print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    exit()\n\nprint(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 4,
      "text": "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2)) \n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 5,
      "text": "\n\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 6,
      "text": "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    },
    {
      "index": 7,
      "text": "\n\nh1, m1 = input().split(':') # \u0432\u0432\u043e\u0434 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438\nh2, m2 = input().split(':') # \u0432\u0432\u043e\u0434 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\nh1 = int(h1) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\nm1 = int(m1) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u043f\u0435\u0440\u0432\u043e\u0439 \u043c\u0438\u043d\u0443\u0442\u044b \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\nh2 = int(h2) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\nm2 = int(m2) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0432\u0442\u043e\u0440\u043e\u0439 \u043c\u0438\u043d\u0443\u0442\u044b \u0432 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"
    }
  ],
  "created": 1650434677,
  "object": "edit"
}
2022-04-20 06:05:06.932809 fix syntax errors 8 ["\n\nh1, m1 = input().split(':') # input time 1\nh2, m2 = input().split(':') # input time 2\n\nh1 = int(h1) # convert to int\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2: # if minutes are equal\n    if h1 == h2: # if hours are equal\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else: # if hours are not equal\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse: # if minutes are not equal\n    if h1 == h2: # if hours are equal\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif h1 == h2:\n    if m1 == m2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\nelse:\n    if m1 == m2:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) // 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) // 2)).zfill(2))\n", "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif h1 == h2:\n    if m1 == m2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n        exit()\n    print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    exit()\n\nprint(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2)) \n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\n\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\nh1, m1 = input().split(':')\nh2, m2 = input().split(':')\n\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n", "\n\nh1, m1 = input().split(':') # ввод первого времени\nh2, m2 = input().split(':') # ввод второго времени\n\nh1 = int(h1) # перевод первого часа в целое число\nm1 = int(m1) # перевод первой минуты в целое число\nh2 = int(h2) # перевод второго часа в целое число\nm2 = int(m2) # перевод второй минуты в целое число\n\nif m1 == m2:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(m1).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(m1).zfill(2))\nelse:\n    if h1 == h2:\n        print(str(h1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n    else:\n        print(str(h1 + 1).zfill(2) + ':' + str(int((m1 + m2) / 2)).zfill(2))\n"]
2022-04-20 06:05:06.932979 size on output set 8
2022-04-20 06:05:06.932994 num operations 1
2022-04-20 06:05:06.933000 size on input set 1
2022-04-20 06:05:06.933163 using api key kouti
2022-04-20 06:05:15.763375 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) / 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) / 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nh3 = h1\nm3 = (m1 + m2) // 2\n\nif m3 >= 60:\n    h3 += 1\n    m3 -= 60\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) / 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) / 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 3,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 <= m2:\n    h3 = h1\n    m3 = m1\nelse:\n    if h1 == h2:\n        h3 = h1 + 1\n        m3 = (m1 + m2) // 2\n    else:\n        h3 = h1\n        m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 4,
      "text": "\n\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1 if h1 < 23 else 0\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 5,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':')) # input 1\nh2, m2 = map(int, input().split(':')) # input 2\n\nif m1 == m2: # if minutes are equal\n    h3 = h1\n    m3 = m1\nelif m1 < m2: # if minutes of input 1 is less than minutes of input 2\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse: # if minutes of input 1 is greater than minutes of input 2\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 6,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    },
    {
      "index": 7,
      "text": "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"
    }
  ],
  "created": 1650434706,
  "object": "edit"
}
2022-04-20 06:05:15.763684 fix syntax errors 8 ["\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) / 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) / 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nh3 = h1\nm3 = (m1 + m2) // 2\n\nif m3 >= 60:\n    h3 += 1\n    m3 -= 60\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) / 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) / 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 <= m2:\n    h3 = h1\n    m3 = m1\nelse:\n    if h1 == h2:\n        h3 = h1 + 1\n        m3 = (m1 + m2) // 2\n    else:\n        h3 = h1\n        m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1 if h1 < 23 else 0\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':')) # input 1\nh2, m2 = map(int, input().split(':')) # input 2\n\nif m1 == m2: # if minutes are equal\n    h3 = h1\n    m3 = m1\nelif m1 < m2: # if minutes of input 1 is less than minutes of input 2\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse: # if minutes of input 1 is greater than minutes of input 2\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\n#-----main-----\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m1 == m2:\n    h3 = h1\n    m3 = m1\nelif m1 < m2:\n    h3 = h1\n    m3 = (m1 + m2) // 2\nelse:\n    h3 = h1 + 1\n    m3 = (m1 + m2) // 2\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n"]
2022-04-20 06:05:15.763734 size on output set 6
