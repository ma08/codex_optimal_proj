["\n\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4] or s[4] == s[5]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n", "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\n\ndef main():\n    code = sys.stdin.readline().rstrip() # read the code\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\n\ndef main():\n    code = sys.stdin.readline().rstrip()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\n\n\ndef main():\n    code = sys.stdin.readline().rstrip()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i + 1]:\n            return True\n    return False\n\ndef main():\n    code = sys.stdin.readline().rstrip()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(1, len(code)):\n        if code[i] == code[i - 1]:\n            return True\n    return False\n\ndef main():\n    code = sys.stdin.readline().rstrip()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ns = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[4] or s[4] == s[5]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n", "\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n", "\na = 1\nb = 2\nc = a + b\nprint(c)\n", "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1): \n        if code[i] == code[i+1]: \n            return True\n    return False \n\ndef main():\n    code = sys.stdin.readline().rstrip() \n    if is_hard_to_enter(code):\n        print(\"Bad\") \n    else:\n        print(\"Good\") \n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 2):\n        if code[i] == code[i+2]:\n            return True\n    return False\n\ndef main():\n    code = sys.stdin.readline().rstrip()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n"]