2022-04-18 20:00:09.628966 """
You are given a bracket sequence $s$ consisting of $n$ opening '(' and closing ')' brackets.

A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example, bracket sequences "()()", "(())" are regular (the resulting expressions are: "(1)+(1)", "((1+1)+1)"), and ")(" and "(" are not.

You can change the type of some bracket $s_i$. It means that if $s_i = $ ')' then you can change it to '(' and vice versa.

Your task is to calculate the number of positions $i$ such that if you change the type of the $i$-th bracket, then the resulting bracket sequence becomes regular.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 10^6$) — the length of the bracket sequence.

The second line of the input contains the string $s$ consisting of $n$ opening '(' and closing ')' brackets.


-----Output-----

Print one integer — the number of positions $i$ such that if you change the type of the $i$-th bracket, then the resulting bracket sequence becomes regular.


-----Examples-----
Input
6
(((())

Output
3

Input
6
()()()

Output
0

Input
1
)

Output
0

Input
8
)))(((((

Output
0
"""
2022-04-18 20:00:09.628989 --------------------------
2022-04-18 20:00:34.051132 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\nif n % 2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(n):\n        if s[i] == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            print(0)\n            break\n    else:\n        print(cnt // 2)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ndef is_regular(s):\n    cnt = 0\n    for i in s:\n        if i == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            return False\n    return cnt == 0\n\ndef solve(s):\n    if is_regular(s):\n        return 0\n    cnt = 0\n    for i in s:\n        if i == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt == -1:\n            return 1\n    return 1\n\nprint(solve(s))"
    }
  ],
  "created": 1650312009,
  "id": "cmpl-4yRpZD5XO2C1039KvWYw2eV3lUTBy",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:00:34.051399 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\nif n % 2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(n):\n        if s[i] == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            print(0)\n            break\n    else:\n        print(cnt // 2)"
}
2022-04-18 20:00:34.051436 REASON stop
2022-04-18 20:00:34.091488 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ndef is_regular(s):\n    cnt = 0\n    for i in s:\n        if i == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            return False\n    return cnt == 0\n\ndef solve(s):\n    if is_regular(s):\n        return 0\n    cnt = 0\n    for i in s:\n        if i == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt == -1:\n            return 1\n    return 1\n\nprint(solve(s))"
}
2022-04-18 20:00:34.091615 REASON stop
