2022-04-20 06:37:03.937535 num operations 1
2022-04-20 06:37:03.937564 size on input set 1
2022-04-20 06:37:03.937811 using api key soukgp
2022-04-20 06:37:11.992784 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(n)]\n    print(n, m)\n    for i in range(n):\n        print(roads[i])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom collections import defaultdict\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    roads = sorted(roads, key=lambda x: x[2])\n    graph = defaultdict(list)\n    for road in roads:\n        graph[road[0]].append((road[1], road[2]))\n        graph[road[1]].append((road[0], road[2]))\n    print(graph)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    roads = [[int(x) for x in input().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [int(x) for x in sys.stdin.readline().split()]\n    print(n, m, k)\n    print(roads)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    roads = [[int(x) for x in input().split()] for _ in range(m)]\n    print(roads[0])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for i in range(m)]\n    print(n, m, k)\n    print(roads)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650436624,
  "object": "edit"
}
2022-04-20 06:37:11.993183 fix syntax errors 8 ['\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(n)]\n    print(n, m)\n    for i in range(n):\n        print(roads[i])\n\nif __name__ == "__main__":\n    main()\n', '\nfrom collections import defaultdict\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    roads = sorted(roads, key=lambda x: x[2])\n    graph = defaultdict(list)\n    for road in roads:\n        graph[road[0]].append((road[1], road[2]))\n        graph[road[1]].append((road[0], road[2]))\n    print(graph)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    roads = [[int(x) for x in input().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [int(x) for x in sys.stdin.readline().split()]\n    print(n, m, k)\n    print(roads)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for _ in range(m)]\n    print(n, m, k, roads)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    roads = [[int(x) for x in input().split()] for _ in range(m)]\n    print(roads[0])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m, k = [int(x) for x in sys.stdin.readline().split()]\n    roads = [[int(x) for x in sys.stdin.readline().split()] for i in range(m)]\n    print(n, m, k)\n    print(roads)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:37:11.993251 size on output set 7
