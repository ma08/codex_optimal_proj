2022-04-20 07:17:14.277067 num operations 1
2022-04-20 07:17:14.277092 size on input set 1
2022-04-20 07:17:14.277316 using api key gabby
2022-04-20 07:17:20.643068 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 4,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 5,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 6,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    },
    {
      "index": 7,
      "text": "\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == \"__main__\":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n"
    }
  ],
  "created": 1650439034,
  "object": "edit"
}
2022-04-20 07:17:20.643517 fix syntax errors 8 ['\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[0])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][0] - a[i-1][0])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n', '\n# Solution\n\ndef solve(n, m, a):\n    a.sort(key=lambda x: x[1])\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, a[i][1] - a[i-1][1])\n    return ans\n\nif __name__ == "__main__":\n    n, m = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print(solve(n, m, a))\n']
2022-04-20 07:17:20.643588 size on output set 2
2022-04-20 07:17:20.643607 num operations 1
2022-04-20 07:17:20.643616 size on input set 1
2022-04-20 07:17:20.643872 using api key derek
2022-04-20 07:17:20.685902 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 07:17:22.187902 using api key jaanu
2022-04-20 07:17:30.928893 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 1,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 2,
      "text": "\ndef solution(matrix):\n    n = len(matrix)  # number of rows\n    m = len(matrix[0])  # number of columns\n    k = 0  # max difference\n    for i in range(m):  # iterate through columns\n        col = [matrix[j][i] for j in range(n)]  # get column\n        col.sort()  # sort column\n        for j in range(1, n):  # iterate through sorted column\n            k = max(k, col[j] - col[j - 1])  # get max difference\n    return k  # return max difference\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 3,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 4,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 5,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 6,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    },
    {
      "index": 7,
      "text": "\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == \"__main__\":\n    n, m = [int(s) for s in input().split(\" \")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(\" \")])\n    print(solution(matrix))\n"
    }
  ],
  "created": 1650439042,
  "object": "edit"
}
2022-04-20 07:17:30.929372 fix syntax errors 8 ['\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)  # number of rows\n    m = len(matrix[0])  # number of columns\n    k = 0  # max difference\n    for i in range(m):  # iterate through columns\n        col = [matrix[j][i] for j in range(n)]  # get column\n        col.sort()  # sort column\n        for j in range(1, n):  # iterate through sorted column\n            k = max(k, col[j] - col[j - 1])  # get max difference\n    return k  # return max difference\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n', '\ndef solution(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    k = 0\n    for i in range(m):\n        col = [matrix[j][i] for j in range(n)]\n        col.sort()\n        for j in range(1, n):\n            k = max(k, col[j] - col[j - 1])\n    return k\n\nif __name__ == "__main__":\n    n, m = [int(s) for s in input().split(" ")]\n    matrix = []\n    for i in range(n):\n        matrix.append([int(s) for s in input().split(" ")])\n    print(solution(matrix))\n']
2022-04-20 07:17:30.929469 size on output set 3
