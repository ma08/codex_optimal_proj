["\n\ndef main():\n    # Read input and convert to int\n    N, M = map(int, input().split()) \n    a = set(map(int, [input() for _ in range(M)])) \n\n    # Initialize DP table with 0\n    dp = [0] * (N + 1)\n    dp[0] = 1\n\n    # Fill in DP table\n\n    for i in range(1, N + 1):\n        if i - 1 not in a:\n        # If i - 1 not in a, add dp[i - 1] to dp[i]\n            dp[i] += dp[i - 1]\n        if i - 2 not in a:\n        # If i - 2 not in a, add dp[i - 2] to dp[i]\n            dp[i] += dp[i - 2]\n\n    # Print answer\n    print(dp[N] % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = [int(input()) for _ in range(m)]\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(2, n + 1):\n        if i not in a:\n            dp[i] = 0\n        else:\n            dp[i] = dp[i - 1] + dp[i - 2]\n    print(dp[n] % 1000000007)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    N, M = map(int, input().split())\n    a = set(map(int, input().split()))\n\n    # Initialize DP table\n    dp = [0] * (N + 1)\n    dp[0] = 1\n\n    # Fill in DP table\n    for i in range(1, N + 1):\n        if i - 1 not in a:\n            dp[i] += dp[i - 1]\n        if i - 2 not in a:\n            dp[i] += dp[i - 2]\n\n    # Print answer\n    print(dp[N] % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    N, M = map(int, input().split())\n    a = set(map(int, input().split()))\n\n    # Initialize DP table\n    dp = [0] * (N + 1)  # dp[i] = number of ways to reach i\n    dp[0] = 1\n\n    # Fill in DP table\n    for i in range(1, N + 1):\n        if i - 1 not in a:\n            dp[i] += dp[i - 1]\n        if i - 2 not in a:\n            dp[i] += dp[i - 2]\n\n    # Print answer\n    print(dp[N] % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    input = sys.stdin.readline\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[k - 1])\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = [int(input()) for _ in range(m)]\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        if i in a:\n            dp[i] = 0\n        else:\n            dp[i] = dp[i - 1] + dp[i - 2]\n    print(dp[n] % 1000000007)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = [int(input()) for _ in range(m)]\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        if i in a:\n            dp[i] = 0\n        else:\n            dp[i] = dp[i - 1] + dp[i - 2]\n    print(dp[n] % 1000000007)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    N, M = map(int, input().split())\n    a = set(map(int, input().split()))\n\n    # Initialize DP table\n    dp = [0] * (N + 1)\n    dp[0] = 1\n\n    # Fill in DP table\n    for i in range(1, N + 1):\n        if i - 1 not in a:\n            dp[i] += dp[i - 1]\n        if i - 2 not in a:\n            dp[i] += dp[i - 2]\n\n    # Print answer\n    print(dp[N] % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    #\n\nif __name__ == '__main__':\n    main()\n"]