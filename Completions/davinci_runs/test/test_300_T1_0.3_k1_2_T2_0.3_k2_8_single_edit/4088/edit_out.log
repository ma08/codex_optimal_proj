2022-04-20 06:25:51.250384 num operations 1
2022-04-20 06:25:51.250408 size on input set 1
2022-04-20 06:25:51.250629 using api key derek
2022-04-20 06:25:51.390822 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 06:25:52.892825 using api key sunu
2022-04-20 06:26:06.176843 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # create an empty array\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the array\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the array\n                    t.append(s[j])\n        # print the array\n        print(\"\".join(t))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # create an empty string\n        t = \"\"\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t += s[j]\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # create an empty array\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t.append(s[j])\n        # print the array\n        print(\"\".join(t))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # create an empty list\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t.append(s[j])\n        # print the list\n        print(\"\".join(t))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # create an empty string\n        t = \"\"\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string and remove the character from the array\n                t += chr(b[j])\n                b.remove(b[j])\n            # otherwise\n            else:\n                # iterate over the array\n                for k in range(len(b)):\n                    # check if the value of the array is greater than the value of the array\n                    if b[k] > b[j]:\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(b[j] - b[k])\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string and remove the character from the array\n                    t += chr(b[j])\n                    b.remove(b[j])\n        # print the string\n        print(t)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # create an empty string\n        t = \"\"\n        # iterate over the string\n        for j in range(len(s)):\n            # check if the value of the array is greater than zero\n            if b[j] > 0:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string and the value of the array is greater than zero\n                    if ord(s[k]) > ord(s[j]) and b[j] > 0:\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n            # check if the value of the array is greater than zero\n            if b[j] > 0:\n                # if so, then add the character to the string\n                t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print(\"ERROR!\")\n            # exit the program\n            exit()\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                print(s[j], end=\"\")\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    print(s[j], end=\"\")\n        # print a new line\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # create an empty string\n        t = \"\"\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t += s[j]\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650435952,
  "object": "edit"
}
2022-04-20 06:26:06.177465 fix syntax errors 8 ['\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # create an empty array\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the array\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the array\n                    t.append(s[j])\n        # print the array\n        print("".join(t))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # create an empty string\n        t = ""\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t += s[j]\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # create an empty array\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t.append(s[j])\n        # print the array\n        print("".join(t))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # create an empty list\n        t = []\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t.append(s[j])\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t.append(s[j])\n        # print the list\n        print("".join(t))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # create an empty string\n        t = ""\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string and remove the character from the array\n                t += chr(b[j])\n                b.remove(b[j])\n            # otherwise\n            else:\n                # iterate over the array\n                for k in range(len(b)):\n                    # check if the value of the array is greater than the value of the array\n                    if b[k] > b[j]:\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(b[j] - b[k])\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string and remove the character from the array\n                    t += chr(b[j])\n                    b.remove(b[j])\n        # print the string\n        print(t)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # create an empty string\n        t = ""\n        # iterate over the string\n        for j in range(len(s)):\n            # check if the value of the array is greater than zero\n            if b[j] > 0:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string and the value of the array is greater than zero\n                    if ord(s[k]) > ord(s[j]) and b[j] > 0:\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n            # check if the value of the array is greater than zero\n            if b[j] > 0:\n                # if so, then add the character to the string\n                t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # check if the length of the array is equal to the length of the string\n        if len(b) != len(s):\n            # if not, then print an error message\n            print("ERROR!")\n            # exit the program\n            exit()\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                print(s[j], end="")\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    print(s[j], end="")\n        # print a new line\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read the number of test cases\n    t = int(input())\n    # iterate over test cases\n    for i in range(t):\n        # read the string\n        s = input()\n        # read the length of the array\n        m = int(input())\n        # read the array\n        b = [int(x) for x in input().split()]\n        # create an empty string\n        t = ""\n        # iterate over the array\n        for j in range(len(b)):\n            # check if the value of the array is equal to zero\n            if b[j] == 0:\n                # if so, then add the character to the string\n                t += s[j]\n            # otherwise\n            else:\n                # iterate over the string\n                for k in range(len(s)):\n                    # check if the character of the string is greater than the character of the string\n                    if ord(s[k]) > ord(s[j]):\n                        # if so, then subtract the value of the array\n                        b[j] -= abs(j - k)\n                # check if the value of the array is equal to zero\n                if b[j] == 0:\n                    # if so, then add the character to the string\n                    t += s[j]\n        # print the string\n        print(t)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:26:06.177703 size on output set 8
2022-04-20 06:26:06.177729 num operations 1
2022-04-20 06:26:06.177740 size on input set 1
2022-04-20 06:26:06.177988 using api key sourya
2022-04-20 06:26:50.173355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# def get_b(s):\n#     b = []\n#     for i in range(len(s)):\n#         b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n#     return b\n\n# def get_s(b):\n#     s = ''\n#     for i in range(len(b)):\n#         s += chr(ord('a')+i)\n#     return s\n\n# def get_t(s, b):\n#     t = ''\n#     for i in range(len(b)):\n#         t += s[b[i]]\n#     return t\n\n# for _ in range(int(input())):\n#     s = input()\n#     m = int(input())\n#     b = [int(i) for i in input().split()]\n#     print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n# def get_t(s, b):\n#     t = ''\n#     for i in range(len(b)):\n#         t += s[b[i]]\n#     return t\n\n# for _ in range(int(input())):\n#     s = input()\n#     m = int(input())\n#     b = [int(i) for i in input().split()]\n#     print(get_t(s, b))\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    },
    {
      "index": 7,
      "text": "\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"
    }
  ],
  "created": 1650435966,
  "object": "edit"
}
2022-04-20 06:26:50.173749 fix syntax errors 8 ["\n\n# def get_b(s):\n#     b = []\n#     for i in range(len(s)):\n#         b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n#     return b\n\n# def get_s(b):\n#     s = ''\n#     for i in range(len(b)):\n#         s += chr(ord('a')+i)\n#     return s\n\n# def get_t(s, b):\n#     t = ''\n#     for i in range(len(b)):\n#         t += s[b[i]]\n#     return t\n\n# for _ in range(int(input())):\n#     s = input()\n#     m = int(input())\n#     b = [int(i) for i in input().split()]\n#     print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n# def get_t(s, b):\n#     t = ''\n#     for i in range(len(b)):\n#         t += s[b[i]]\n#     return t\n\n# for _ in range(int(input())):\n#     s = input()\n#     m = int(input())\n#     b = [int(i) for i in input().split()]\n#     print(get_t(s, b))\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n\n\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_b(s):\n    b = []\n    for i in range(len(s)):\n        b.append(sum([abs(i-j) for j in range(len(s)) if s[j] > s[i]]))\n    return b\n\ndef get_s(b):\n    s = ''\n    for i in range(len(b)):\n        s += chr(ord('a')+i)\n    return s\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n", "\n\ndef get_t(s, b):\n    t = ''\n    for i in range(len(b)):\n        t += s[b[i]]\n    return t\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(get_t(s, b))\n"]
2022-04-20 06:26:50.173997 size on output set 6
