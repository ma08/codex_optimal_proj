["\n\nimport math\n\ndef main():\n    N,K = map(int, input().split())\n    print(math.ceil(N/K) * math.ceil(N/K) * math.ceil(N/K))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    N, K = map(int, input().split())\n    print(math.ceil(N / K) * math.ceil(N / K) * math.ceil(N / K))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    N,K = map(int, input().split())\n    print(math.ceil(N/K)*math.ceil(N/K)*math.ceil(N/K)) \n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    N,K = map(int, input().split())\n    print(math.ceil(N/K)*math.ceil(N/K)*math.ceil(N/K))\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef main():\n    N = int(input())\n    A = np.array(list(map(int, input().split())))\n    B = np.array(list(map(int, input().split())))\n    C = np.array(list(map(int, input().split())))\n    A_sort = np.sort(A)\n    C_sort = np.sort(C)\n    ans = 0\n    for b in B:\n        ans += np.searchsorted(A_sort, b) * (N - np.searchsorted(C_sort, b, side='right'))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    N,K = map(int, input().split())\n    print(math.ceil(N/K)*math.ceil(N/K)*math.ceil(N/K))\n\nif __name__ == '__main__':\n    main()\n"]