["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    ans = 0\n    for i in range(1, n+1):\n        ans += i * (n-i+1)\n    print(ans % (10**9+7))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    dp = [[0 for _ in range(2)] for _ in range(N+1)]\n    dp[0][0] = 1\n    for i in range(1,N+1):\n        dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % 1000000007\n        dp[i][1] = dp[i-1][0]\n    print((dp[N][0] + dp[N][1]) % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    ans = 0\n    for i in range(1, n+1):\n        ans += i * (n-i+1)\n    print(ans % (10**9+7))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    dp = [[0 for _ in range(2)] for _ in range(N+1)]\n    dp[0][0] = 1\n    for i in range(1,N+1):\n        dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % 1000000007\n        dp[i][1] = dp[i-1][0]\n    print((dp[N][0] + dp[N][1]) % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    ans = 0\n    for i in range(1, n+1):\n        ans += i * (n-i+1)\n    print(ans % (10**9+7))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().rstrip().split())\n    print(a*b*2 + b*c*2 + c*a*2)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    dp = [[0 for _ in range(2)] for _ in range(N + 1)]\n    dp[0][0] = 1\n    for i in range(1, N + 1):\n        dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % 1000000007\n        dp[i][1] = dp[i-1][0]\n    print((dp[N][0] + dp[N][1]) % 1000000007, end='')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    dp = [[0 for _ in range(2)] for _ in range(N+1)]\n    dp[0][0] = 1\n    for i in range(1,N+1):\n        dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % 1000000007\n        dp[i][1] = dp[i-1][0]\n    print((dp[N][0] + dp[N][1]) % 1000000007)\n\nif __name__ == '__main__':\n    main()\n", "import sys\nfrom collections import deque\nsys.setrecursionlimit(10**6)\n\nimport sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    graph = [[] for _ in range(N+1)]\n    for _ in range(M):\n        a, b = map(int, sys.stdin.readline().split())\n        graph[a].append(b)\n        graph[b].append(a)\n    visited = [False] * (N+1)\n    visited[0] = True\n    q = deque([0])\n    while q:\n        node = q.popleft()\n        for n in graph[node]:\n            if not visited[n]:\n                visited[n] = True\n                q.append(n)\n    print(sum(visited))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    dp = [[0 for _ in range(2)] for _ in range(N + 1)]\n    dp[0][0] = 1\n    for i in range(1, N + 1):\n        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) % 1000000007\n        dp[i][1] = dp[i - 1][0]\n    print((dp[N][0] + dp[N][1]) % 1000000007)\n\nif __name__ == '__main__':\n    main()\n"]