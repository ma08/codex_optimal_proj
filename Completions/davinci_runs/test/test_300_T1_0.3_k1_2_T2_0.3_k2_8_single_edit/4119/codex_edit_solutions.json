["\nimport sys\n\ndef main():\n\t# read input\n\tn, m = map(int, input().split())\n\tx = list(map(int, input().split()))\n\n\t# sort the coordinates\n\tx.sort()\n\n\t# find the minimum number of moves required to achieve the objective\n\tans = 0\n\tfor i in range(m):\n\t\tans += abs(x[i] - x[i-1])\n\tprint(ans)\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:n]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, sys.stdin.readline().split())\n    x = list(map(int, input().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:m]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\n\nprint(ans)\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))[:m]\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = sum(abs(x[i] - x[i-1]) for i in range(m))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0.0\n    for i in range(m):\n        ans += abs(x[i] - x[i - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    m, n = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(1, m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # read input\n    n, m = map(int, input().split())\n    x = list(map(int, input().split())) \n\n    # sort the coordinates\n    x.sort()\n\n    # find the minimum number of moves required to achieve the objective\n    ans = 0\n    for i in range(m):\n        ans += abs(x[i] - x[i-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# coding:utf-8\n\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median (\u4e2d\u592e\u5024)\nmedian = x[m // 2]  # \u5272\u308a\u7b97\u306e\u4f59\u308a\u3092\u5207\u308a\u6368\u3066\u308b\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n", "\n# input\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\n\n# sort\nx.sort()\n\n# get the median\nmedian = x[m // 2]\n\n# calculate the distance\nans = 0\nfor i in range(m):\n    ans += abs(x[i] - median)\n\nprint(ans)\n"]