2022-04-20 06:15:18.588477 num operations 1
2022-04-20 06:15:18.588498 size on input set 1
2022-04-20 06:15:18.588743 using api key derek
2022-04-20 06:15:18.775291 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 06:15:20.277225 using api key derek
2022-04-20 06:15:20.319192 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 06:15:23.322667 using api key jaanu
2022-04-20 06:15:29.876124 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='') if prefixes[i] < suffixes[i] else print('S', end='')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = [''] * n\n    suffixes = [''] * n\n    for i in range(n):\n        prefixes[i] = input()\n    for i in range(n):\n        suffixes[i] = input()\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='')\n        print('S', end='')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end=''),\n        print('S', end=''),\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = [0] * n\n    suffixes = [0] * n\n    for i in range(n):\n        prefixes[i] = input()\n    for i in range(n):\n        suffixes[i] = input()\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='')\n        print('S', end='')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end=''),\n        print('S', end=''),\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='') if prefixes[i] < suffixes[i] else print('S', end='')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='') \n        print('S', end='') \n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='') if prefixes[i] < suffixes[i] else print('S', end='')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650435323,
  "object": "edit"
}
2022-04-20 06:15:29.876678 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\') if prefixes[i] < suffixes[i] else print(\'S\', end=\'\')\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = [\'\'] * n\n    suffixes = [\'\'] * n\n    for i in range(n):\n        prefixes[i] = input()\n    for i in range(n):\n        suffixes[i] = input()\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\')\n        print(\'S\', end=\'\')\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\'),\n        print(\'S\', end=\'\'),\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = [0] * n\n    suffixes = [0] * n\n    for i in range(n):\n        prefixes[i] = input()\n    for i in range(n):\n        suffixes[i] = input()\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\')\n        print(\'S\', end=\'\')\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\'),\n        print(\'S\', end=\'\'),\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\') if prefixes[i] < suffixes[i] else print(\'S\', end=\'\')\n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\') \n        print(\'S\', end=\'\') \n    print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print(\'P\', end=\'\') if prefixes[i] < suffixes[i] else print(\'S\', end=\'\')\n    print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:15:29.876792 size on output set 5
2022-04-20 06:15:29.876813 num operations 1
2022-04-20 06:15:29.876822 size on input set 1
2022-04-20 06:15:29.877048 using api key kouti
2022-04-20 06:15:39.239365 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2*n-2):\n    if i < n-1:\n        print(\"P\", end=\" \")\n    else:\n        print(\"S\", end=\" \")\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == n-1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2*n-2):\n    if i < n-1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n\ts = input()\n\tif len(s) == 1:\n\t\tprefixes.append(s)\n\telse:\n\t\tsuffixes.append(s)\n\nfor i in range(2*n-2):\n\tif i < n-1:\n\t\tprint(\"P\", end=\"\")\n\telse:\n\t\tprint(\"S\", end=\"\")\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/python3\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == n-1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(n-1):\n    if i < n-1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input().strip()\n    if len(s) == n-1:\n        prefixes.append(s.strip())\n    elif len(s) == n:\n        suffixes.append(s.strip())\n\nfor i in range(n-1):\n    for j in range(n-1):\n        if prefixes[i] == suffixes[j]:\n            print(\"P\", end=\"\")\n        else:\n            print(\"S\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1650435329,
  "object": "edit"
}
2022-04-20 06:15:39.239831 fix syntax errors 8 ['\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2*n-2):\n    if i < n-1:\n        print("P", end=" ")\n    else:\n        print("S", end=" ")\n', '\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == n-1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2*n-2):\n    if i < n-1:\n        print("P", end="")\n    else:\n        print("S", end="")\n', '\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print("P", end="")\n    else:\n        print("S", end="")\n', '\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print("P", end="")\n    else:\n        print("S", end="")\n', '\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print("P", end="")\n    else:\n        print("S", end="")\n', '\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n\ts = input()\n\tif len(s) == 1:\n\t\tprefixes.append(s)\n\telse:\n\t\tsuffixes.append(s)\n\nfor i in range(2*n-2):\n\tif i < n-1:\n\t\tprint("P", end="")\n\telse:\n\t\tprint("S", end="")\n', '#!/usr/bin/python3\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == n-1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(n-1):\n    if i < n-1:\n        print("P", end="")\n    else:\n        print("S", end="")\n', '\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input().strip()\n    if len(s) == n-1:\n        prefixes.append(s.strip())\n    elif len(s) == n:\n        suffixes.append(s.strip())\n\nfor i in range(n-1):\n    for j in range(n-1):\n        if prefixes[i] == suffixes[j]:\n            print("P", end="")\n        else:\n            print("S", end="")\n    print()\n']
2022-04-20 06:15:39.239924 size on output set 7
