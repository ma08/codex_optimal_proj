2022-04-20 06:22:28.594694 num operations 1
2022-04-20 06:22:28.594715 size on input set 1
2022-04-20 06:22:28.594932 using api key sunu
2022-04-20 06:22:42.383196 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport os\nimport sys\n\ndef main():\n    with open('input.txt', 'r') as f:\n        n, m = map(int, f.readline().split())\n        a = list(map(int, f.readline().split()))\n        segments = []\n        for i in range(m):\n            l, r = map(int, f.readline().split())\n            segments.append((l, r))\n        segments.sort(key=lambda x: x[1] - x[0])\n        ans = 0\n        for i in range(m):\n            l, r = segments[i]\n            if a[l - 1] > a[r - 1]:\n                a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n            ans = max(ans, a[l - 1] - a[r - 1])\n        with open('output.txt', 'w') as g:\n            g.write(str(ans) + '\\n')\n            g.write(str(0))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0], reverse=True)\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n    print(0)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n    print(0)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650435748,
  "object": "edit"
}
2022-04-20 06:22:42.383604 fix syntax errors 8 ["\nimport os\nimport sys\n\ndef main():\n    with open('input.txt', 'r') as f:\n        n, m = map(int, f.readline().split())\n        a = list(map(int, f.readline().split()))\n        segments = []\n        for i in range(m):\n            l, r = map(int, f.readline().split())\n            segments.append((l, r))\n        segments.sort(key=lambda x: x[1] - x[0])\n        ans = 0\n        for i in range(m):\n            l, r = segments[i]\n            if a[l - 1] > a[r - 1]:\n                a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n            ans = max(ans, a[l - 1] - a[r - 1])\n        with open('output.txt', 'w') as g:\n            g.write(str(ans) + '\\n')\n            g.write(str(0))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0], reverse=True)\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n    print(0)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n    print(0)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[1] - x[0])\n    ans = 0\n    for i in range(m):\n        l, r = segments[i]\n        if a[l - 1] > a[r - 1]:\n            a[l - 1], a[r - 1] = a[r - 1], a[l - 1]\n        ans = max(ans, a[l - 1] - a[r - 1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:22:42.383859 size on output set 5
2022-04-20 06:22:42.383885 num operations 1
2022-04-20 06:22:42.383895 size on input set 1
2022-04-20 06:22:42.384176 using api key sunu
2022-04-20 06:22:50.584915 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n\n    return 0, 0, []\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0, 0]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [1, 2]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution \n    return 0, 0, []\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply, sep=' ')\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef get_max_diff(n, m, a, segments, dp):\n    # TODO: Implement solution\n    return 0, 0, [], dp\n\nif __name__ == \"__main__\":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply, dp = get_max_diff(n, m, a, segments, dp)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n"
    }
  ],
  "created": 1650435762,
  "object": "edit"
}
2022-04-20 06:22:50.585299 fix syntax errors 8 ['\n\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n\n    return 0, 0, []\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0, 0]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [1, 2]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution \n    return 0, 0, []\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply, sep=\' \')\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments):\n    # TODO: Implement solution\n    return 0, 0, [0]\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply = get_max_diff(n, m, a, segments)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n', '\n\nimport sys\n\ndef get_max_diff(n, m, a, segments, dp):\n    # TODO: Implement solution\n    return 0, 0, [], dp\n\nif __name__ == "__main__":\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n    segments = []\n    for i in range(m):\n        segments.append(list(map(int, sys.stdin.readline().split())))\n\n    max_diff, num_segments, segments_to_apply, dp = get_max_diff(n, m, a, segments, dp)\n\n    print(max_diff)\n    print(num_segments)\n    print(*segments_to_apply)\n']
2022-04-20 06:22:50.585488 size on output set 7
