["\n\ndef main():\n    N, M = map(int, input().split())\n    foods = [0] * M\n    for i in range(N):\n        K = int(input().split()[0])\n        for j in range(K):\n            foods[int(input().split()[0]) - 1] += 1\n    print(foods.count(N)) \n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M = map(int, input().split())\n    foods = [0] * M\n    for i in range(N):\n        K = int(input().split()[0])\n        for j in range(K):\n            foods[int(input().split()[0]) - 1] += 1\n    print(foods.count(N))\n\n\nif __name__ == '__main__':\n    main()\n", "\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n", "\n# My answer\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\n# print(likes)\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\n# print(foods)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n\n# Reference answer\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n", "\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in range(k):\n            foods[int(input().split()[0]) - 1] += 1  # \u5bff\u53f8\u304c\u98df\u3079\u3089\u308c\u308b\u4eba\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n    print(foods.count(n))  # \u5168\u54e1\u304c\u98df\u3079\u3089\u308c\u308b\u5bff\u53f8\u306e\u500b\u6570\u3092\u51fa\u529b\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    foods = [0] * (M + 1)\n    for i in range(N):\n        K = int(input().split()[0]) - 1\n        for j in range(K):\n            foods[int(input().split()[0])] += 1\n    print(foods.count(N))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# My answer\nn, m = map(int, input().split())\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\nprint(len(foods))\n\n# Reference answer\nn, m = map(int, input().split())\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\nprint(len(foods))\n", "\n# My answer\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\n# print(likes)\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\n# print(foods)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n\n# Reference answer\n\n# My answer\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\n# print(likes)\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\n# print(foods)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n\n# Reference answer\nn, m = map(int, input().split())\n\nlikes = []\nfor i in range(n):\n    likes.append(list(map(int, input().split()))[1:])\n\nfoods = []\nfor i in range(m):\n    foods.append(i+1)\n\nfor i in range(n):\n    foods = list(set(foods) & set(likes[i]))\n\nprint(len(foods))\n", "\ndef main():\n    N, M = map(int, input().split())\n    foods = [0] * M\n    for i in range(N):\n        K = int(input().split()[0])\n        for j in range(K):\n            foods[int(input().split()[0]) - 1] += 1\n    print(foods.count(N))\n\nif __name__ == '__main__':\n    main()\n"]