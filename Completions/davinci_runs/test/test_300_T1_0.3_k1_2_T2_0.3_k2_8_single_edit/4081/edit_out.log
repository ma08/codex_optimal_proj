2022-04-20 06:23:25.123225 num operations 1
2022-04-20 06:23:25.123249 size on input set 1
2022-04-20 06:23:25.123484 using api key sunu
2022-04-20 06:23:38.020844 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n)]\n    dp[0][0] = 1\n    dp[0][1] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[n - 1]))\n    ans = \"\"\n    i = n - 1\n    while i >= 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1] = [1, 1]\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i] = [dp[i - 1][0] + 1, max(dp[i - 1][1], dp[i - 1][0])]\n        else:\n            dp[i] = [1, max(dp[i - 1][1], dp[i - 1][0])]\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n+1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n+1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[n]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1 + dp[i - 1][1]\n            dp[i][1] = dp[i - 1][1]\n        else:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = dp[i - 1][1] + 1\n    print(max(dp[-1]) - 1)\n    print(dp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 2):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]) - 1)\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 2)]\n    dp[2][0] = 1\n    dp[2][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n + 1\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [float(\"-inf\")] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650435805,
  "object": "edit"
}
2022-04-20 06:23:38.021258 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n)]\n    dp[0][0] = 1\n    dp[0][1] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[n - 1]))\n    ans = ""\n    i = n - 1\n    while i >= 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1] = [1, 1]\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i] = [dp[i - 1][0] + 1, max(dp[i - 1][1], dp[i - 1][0])]\n        else:\n            dp[i] = [1, max(dp[i - 1][1], dp[i - 1][0])]\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n+1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n+1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[n]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1 + dp[i - 1][1]\n            dp[i][1] = dp[i - 1][1]\n        else:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = dp[i - 1][1] + 1\n    print(max(dp[-1]) - 1)\n    print(dp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a + [0]\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 2):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]) - 1)\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 2)]\n    dp[2][0] = 1\n    dp[2][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n + 1\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [float("-inf")] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = ""\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += "L"\n            i -= 1\n        else:\n            ans += "R"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:23:38.021590 size on output set 8
2022-04-20 06:23:38.021617 num operations 1
2022-04-20 06:23:38.021628 size on input set 1
2022-04-20 06:23:38.021876 using api key jaanu
2022-04-20 06:23:45.316905 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) \n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) and len(a) == n\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # n = int(input())\n    # a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) and len(a) == n\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) \n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    print(a)\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)  # TODO: Remove this line\n    assert len(set(a)) == n\n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650435818,
  "object": "edit"
}
2022-04-20 06:23:45.317288 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) \n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) and len(a) == n\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # n = int(input())\n    # a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) and len(a) == n\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # assert len(a) == n\n    # assert all(1 <= x <= n for x in a)\n    # assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) \n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)\n    print(a)\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a)  # TODO: Remove this line\n    assert len(set(a)) == n\n\n\n    # TODO: Solve the problem\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:23:45.317358 size on output set 6
