2022-04-20 06:58:16.152873 num operations 1
2022-04-20 06:58:16.152897 size on input set 1
2022-04-20 06:58:16.153161 using api key jaanu
2022-04-20 06:58:21.294526 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 2,
      "text": "\n# -----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 3,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 4,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 5,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 6,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    },
    {
      "index": 7,
      "text": "\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == \"soft\":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n"
    }
  ],
  "created": 1650437896,
  "object": "edit"
}
2022-04-20 06:58:21.294931 fix syntax errors 8 ['\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n# -----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n', '\n#-----Solution-----\n\nn = int(input())\nsoft = 0\nhard = 0\n\nfor i in range(n):\n    cheese = input().split()\n    if cheese[1] == "soft":\n        soft += 1\n    else:\n        hard += 1\n\nprint(min(soft, hard))\n']
2022-04-20 06:58:21.295021 size on output set 2
2022-04-20 06:58:21.295041 num operations 1
2022-04-20 06:58:21.295069 size on input set 1
2022-04-20 06:58:21.295300 using api key sunu
2022-04-20 06:58:27.595396 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 4,
      "text": "\n\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\n\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\nprint(len(soft))\n"
    },
    {
      "index": 5,
      "text": "\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 6,
      "text": "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    },
    {
      "index": 7,
      "text": "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"
    }
  ],
  "created": 1650437901,
  "object": "edit"
}
2022-04-20 06:58:27.595759 fix syntax errors 8 ["n = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\n\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\nprint(len(soft))\n", "\n# SOLUTION\n\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n", "\n# SOLUTION\nn = int(input())\n\nsoft = []\nhard = []\n\nfor i in range(n):\n    cheese, type = input().split()\n    if type == 'soft':\n        soft.append(cheese)\n    else:\n        hard.append(cheese)\n\nprint(len(soft))\n"]
2022-04-20 06:58:27.595942 size on output set 5
