2022-04-20 06:19:37.405860 num operations 1
2022-04-20 06:19:37.405884 size on input set 1
2022-04-20 06:19:37.406112 using api key gabby
2022-04-20 06:20:03.444753 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s, n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[0])\n    print(s[1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  4 22:15:46 2019\n@author: y56\n\"\"\"\n#%%\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#%%\ndf = pd.read_csv('/Users/y56/Desktop/train.csv')\n#%%\ndf.head()\n#%%\ndf.info()\n#%%\ndf.describe()\n#%%\ndf.isnull().sum()\n#%%\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n#%%\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',data=df,palette='RdBu_r')\n#%%\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=df,palette='RdBu_r')\n#%%\nsns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=df,palette='rainbow')\n#%%\nsns.distplot(df['Age'].dropna(),kde=False,color='darkred',bins=30)\n#%%\ndf['Age'].hist(bins=30,color='darkred',alpha=0.7)\n#%%\nsns.countplot(x='SibSp',data=df)\n#%%\ndf['Fare'].hist(color='green',bins=40,figsize=(8,4))\n#%%\nimport cufflinks as cf\ncf.go_offline()\n#%%\ndf['Fare'].iplot(kind='hist',bins=30,color='green')\n#%%\nplt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=df,palette='winter')\n#%%\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age\n#%%\ndf['Age'] = df[['Age','Pclass']].apply(impute_age,axis=1)\n#%%\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n#%%\ndf.drop('Cabin',axis=1,inplace=True)\n#%%\ndf.head()\n#%%\ndf.dropna(inplace=True)\n#%%\nsex = pd.get_dummies(df['Sex'],drop_first=True)\nembark = pd.get_dummies(df['Embarked'],drop_first=True)\n#%%\ndf.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)\n#%%\ndf = pd.concat([df,sex,embark],axis=1)\n#%%\ndf.head()\n#%%\nfrom sklearn.model_selection import train_test_split\n#%%\nX_train, X_test, y_train, y_test = train_test_split(df.drop('Survived',axis=1), \n                                                    df['Survived'], test_size=0.30, \n                                                    random_state=101)\n#%%\nfrom sklearn.linear_model import LogisticRegression\n#%%\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)\n#%%\npredictions = logmodel.predict(X_test)\n#%%\nfrom sklearn.metrics import classification_report\n#%%\nprint(classification_report(y_test,predictions))\n#%%\nfrom sklearn.metrics import confusion_matrix\n#%%\nconfusion_matrix(y_test,predictions)\n#%%\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[::-1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()[:n]\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[:n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650435577,
  "object": "edit"
}
2022-04-20 06:20:03.445097 fix syntax errors 8 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s, n)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[0])\n    print(s[1])\n\nif __name__ == '__main__':\n    main()\n", '\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Wed Sep  4 22:15:46 2019\n@author: y56\n"""\n#%%\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#%%\ndf = pd.read_csv(\'/Users/y56/Desktop/train.csv\')\n#%%\ndf.head()\n#%%\ndf.info()\n#%%\ndf.describe()\n#%%\ndf.isnull().sum()\n#%%\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap=\'viridis\')\n#%%\nsns.set_style(\'whitegrid\')\nsns.countplot(x=\'Survived\',data=df,palette=\'RdBu_r\')\n#%%\nsns.set_style(\'whitegrid\')\nsns.countplot(x=\'Survived\',hue=\'Sex\',data=df,palette=\'RdBu_r\')\n#%%\nsns.set_style(\'whitegrid\')\nsns.countplot(x=\'Survived\',hue=\'Pclass\',data=df,palette=\'rainbow\')\n#%%\nsns.distplot(df[\'Age\'].dropna(),kde=False,color=\'darkred\',bins=30)\n#%%\ndf[\'Age\'].hist(bins=30,color=\'darkred\',alpha=0.7)\n#%%\nsns.countplot(x=\'SibSp\',data=df)\n#%%\ndf[\'Fare\'].hist(color=\'green\',bins=40,figsize=(8,4))\n#%%\nimport cufflinks as cf\ncf.go_offline()\n#%%\ndf[\'Fare\'].iplot(kind=\'hist\',bins=30,color=\'green\')\n#%%\nplt.figure(figsize=(12, 7))\nsns.boxplot(x=\'Pclass\',y=\'Age\',data=df,palette=\'winter\')\n#%%\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age\n#%%\ndf[\'Age\'] = df[[\'Age\',\'Pclass\']].apply(impute_age,axis=1)\n#%%\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap=\'viridis\')\n#%%\ndf.drop(\'Cabin\',axis=1,inplace=True)\n#%%\ndf.head()\n#%%\ndf.dropna(inplace=True)\n#%%\nsex = pd.get_dummies(df[\'Sex\'],drop_first=True)\nembark = pd.get_dummies(df[\'Embarked\'],drop_first=True)\n#%%\ndf.drop([\'Sex\',\'Embarked\',\'Name\',\'Ticket\'],axis=1,inplace=True)\n#%%\ndf = pd.concat([df,sex,embark],axis=1)\n#%%\ndf.head()\n#%%\nfrom sklearn.model_selection import train_test_split\n#%%\nX_train, X_test, y_train, y_test = train_test_split(df.drop(\'Survived\',axis=1), \n                                                    df[\'Survived\'], test_size=0.30, \n                                                    random_state=101)\n#%%\nfrom sklearn.linear_model import LogisticRegression\n#%%\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)\n#%%\npredictions = logmodel.predict(X_test)\n#%%\nfrom sklearn.metrics import classification_report\n#%%\nprint(classification_report(y_test,predictions))\n#%%\nfrom sklearn.metrics import confusion_matrix\n#%%\nconfusion_matrix(y_test,predictions)\n#%%\n', "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[::-1])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()[:n]\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s[:n])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    print(s)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:20:03.445265 size on output set 8
2022-04-20 06:20:03.445286 num operations 1
2022-04-20 06:20:03.445294 size on input set 1
2022-04-20 06:20:03.445521 using api key jaanu
2022-04-20 06:20:13.737367 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = list(sys.stdin.readline())\n    zeros = s.count(\"0\")\n    ones = s.count(\"1\")\n    twos = s.count(\"2\")\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = \"1\"\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = \"0\"\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = \"2\"\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = \"0\"\n    print(\"\".join(s))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = list(sys.stdin.readline())\n    zeros = s.count('0') \n    ones = s.count('1') \n    twos = s.count('2') \n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros == ones:\n        if twos > zeros:\n            for i in range(twos - zeros):\n                s[i] = '2'\n        elif zeros > twos:\n            for i in range(zeros - twos):\n                s[i] = '0'\n    else:\n        if zeros > ones:\n            for i in range(zeros - ones):\n                s[i] = '1'\n        elif ones > zeros:\n            for i in range(ones - zeros):\n                s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s.strip())\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650435603,
  "object": "edit"
}
2022-04-20 06:20:13.737746 fix syntax errors 8 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = list(sys.stdin.readline())\n    zeros = s.count("0")\n    ones = s.count("1")\n    twos = s.count("2")\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = "1"\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = "0"\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = "2"\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = "0"\n    print("".join(s))\n\nif __name__ == "__main__":\n    main()\n', "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = list(sys.stdin.readline())\n    zeros = s.count('0') \n    ones = s.count('1') \n    twos = s.count('2') \n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s)\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros == ones:\n        if twos > zeros:\n            for i in range(twos - zeros):\n                s[i] = '2'\n        elif zeros > twos:\n            for i in range(zeros - twos):\n                s[i] = '0'\n    else:\n        if zeros > ones:\n            for i in range(zeros - ones):\n                s[i] = '1'\n        elif ones > zeros:\n            for i in range(ones - zeros):\n                s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    s = list(s.strip())\n    zeros = s.count('0')\n    ones = s.count('1')\n    twos = s.count('2')\n    if zeros > ones:\n        for i in range(zeros - ones):\n            s[i] = '1'\n    elif ones > zeros:\n        for i in range(ones - zeros):\n            s[i] = '0'\n    if twos > zeros:\n        for i in range(twos - zeros):\n            s[i] = '2'\n    elif zeros > twos:\n        for i in range(zeros - twos):\n            s[i] = '0'\n    print(''.join(s))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:20:13.737936 size on output set 7
