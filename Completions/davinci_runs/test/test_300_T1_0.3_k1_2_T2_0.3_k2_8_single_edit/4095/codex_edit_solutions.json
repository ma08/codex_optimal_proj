["\n\ndef median(arr):\n    if len(arr) % 2 == 0:\n        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2.0\n    else:\n        return arr[int(len(arr)/2)]\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(arr[i:j+1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef median(arr):\n    if len(arr) % 2 == 0:\n        return (arr[int(len(arr) / 2)] + arr[int(len(arr) / 2) - 1]) / 2\n    else:\n        return arr[int(len(arr) / 2)]\n\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(arr[i:j + 1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split()) # n:\u914d\u5217\u306e\u8981\u7d20\u6570, m:\u63a2\u3059\u5024\n    p = list(map(int, input().split())) # \u914d\u5217\n    count = 0\n    for i in range(n): # \u914d\u5217\u306e\u8981\u7d20\u6570\u5206\u30eb\u30fc\u30d7\n        for j in range(i, n): # \u914d\u5217\u306e\u8981\u7d20\u6570\u5206\u30eb\u30fc\u30d7\n            if p[i:j+1].count(m) > 0: # \u914d\u5217\u306e\u8981\u7d20\u6570\u5206\u30eb\u30fc\u30d7\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef median(arr):\n    if len(arr) % 2 == 0:\n        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2\n    else:\n        return arr[int(len(arr)/2)]\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(arr[i:j+1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if p[i:j+1].count(m) > 0 and i != j:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef median(arr):\n    if len(arr) % 2 == 0:\n        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2.0\n    else:\n        return arr[int(len(arr)/2)]\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(arr[i:j+1]) == float(m):\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))[:n]\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if p[i:j+1].count(m) > 0:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if p[i:j+1].count(m) > 0:  # j+1\u306f\u7bc4\u56f2\u306e\u305f\u3081\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if p[i:j + 1].count(m) > 0:\n                count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef median(arr):\n    if len(arr) % 2 == 0:\n        return (arr[int(len(arr) / 2)] + arr[int(len(arr) / 2) - 1]) / 2\n    else:\n        return arr[int(len(arr) / 2)]\n\n\ndef main():\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(arr[i:j + 1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"]