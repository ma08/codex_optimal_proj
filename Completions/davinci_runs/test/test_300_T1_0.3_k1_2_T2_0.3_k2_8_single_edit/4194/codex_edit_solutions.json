["\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > m:\n    print(-1)\nelse:\n    print(m - sum(a))\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n", "\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop()\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop()\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] >= n:\n    print(-1)\nelse:\n    print(n - sum(a))\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()] # n is the number of days left, m is the number of assignments\n    assignments = [int(x) for x in stdin.readline().split()] # list of assignments\n    assignments.sort() # sort the assignments in ascending order\n    assignments.reverse() # reverse the list\n\n    if sum(assignments) > n: # if the sum of assignments is greater than the number of days left, then there is no way to finish all assignments\n        print(-1)\n        return\n\n    days_left = n - sum(assignments) # the number of days left after finishing all assignments\n    days_left += assignments.pop() # add the last assignment to the days left\n    days_left -= 1 # subtract 1 day to account for the last assignment\n\n    while days_left >= 0 and assignments: # while there are still days left and assignments\n        days_left -= assignments.pop() # subtract the assignment from the days left\n        days_left -= 1 # subtract 1 day to account for the assignment\n\n    if days_left < 0: # if there are no days left, then there is no way to finish all assignments\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop(0)\n    days_left -= 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop(0)\n        days_left -= 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = [int(x) for x in stdin.readline().split()]\n    assignments = [int(x) for x in stdin.readline().split()]\n    assignments.sort()\n    assignments.reverse()\n\n    if sum(assignments) > n:\n        print(-1)\n        return\n\n    days_left = n - sum(assignments)\n    days_left += assignments.pop() - 1\n\n    while days_left >= 0 and assignments:\n        days_left -= assignments.pop() - 1\n\n    if days_left < 0:\n        print(-1)\n    else:\n        print(days_left)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\nelse:\n    print(n - sum(a))\n", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nprint(n - sum(a)) if a[-1] <= n else print(-1)\n"]