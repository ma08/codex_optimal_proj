2022-04-20 06:40:33.713422 num operations 1
2022-04-20 06:40:33.713445 size on input set 1
2022-04-20 06:40:33.713669 using api key derek
2022-04-20 06:40:33.881571 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 06:40:35.383519 using api key derek
2022-04-20 06:40:35.421414 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 06:40:38.424910 using api key sunu
2022-04-20 06:40:51.486831 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)\u304b\u3089(i,j)\u307e\u3067\u306e1\u306e\u6570\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # (i,j)\u307e\u3067\u306e1\u306e\u6570\u306f(i-1,j)\u307e\u3067\u306e1\u306e\u6570\u3068(i,j-1)\u307e\u3067\u306e1\u306e\u6570\u306e\u548c\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = i\u884cj\u5217\u307e\u3067\u306e1\u306e\u6570\n    dp[1][1] = 1\n    for i in range(1, n+1):  # \u521d\u671f\u5316\n        for j in range(1, m+1):  # \u521d\u671f\u5316\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    for i in range(1, n+1):  # \u5dee\u5206\u3092\u53d6\u308b\n        for j in range(1, m+1):  # \u5dee\u5206\u3092\u53d6\u308b\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):  # \u56de\u7b54\u3092\u6c42\u3081\u308b\n        for j in range(1, m+1):  # \u56de\u7b54\u3092\u6c42\u3081\u308b\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)\u304b\u3089(i,j)\u307e\u3067\u306e\u8fba\u304c\u5168\u3066k\u3068\u306a\u308b\u7d4c\u8def\u306e\u6570\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # \u5de6\u304b\u4e0a\u304b\u3089\u6765\u308b\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]  # \u5de6\u4e0a\u304b\u3089\u6765\u308b\u306e\u3092\u5f15\u304f\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)\u304b\u3089(i,j)\u307e\u3067\u306e1\u306e\u500b\u6570\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1] + a[i-1][j-1]\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] == 1:\n                a[i-1][j-1] = 0\n            else:\n                a[i-1][j-1] = 1\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if dp[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n+1)]\n    dp = [[0]*(m+1) for _ in range(n+1)]\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i][j] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = i\u884cj\u5217\u307e\u3067\u306e1\u306e\u6570\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # \u5de6\u3068\u4e0a\u304b\u3089\u6765\u305f1\u306e\u6570\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]  # \u5de6\u4e0a\u304b\u3089\u6765\u305f1\u306e\u6570\u3092\u5f15\u304f\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    dp[1][1] = 1\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] -= dp[i - 1][j - 1]\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i - 1][j - 1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650436838,
  "object": "edit"
}
2022-04-20 06:40:51.487250 fix syntax errors 8 ['\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)から(i,j)までの1の数\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # (i,j)までの1の数は(i-1,j)までの1の数と(i,j-1)までの1の数の和\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = i行j列までの1の数\n    dp[1][1] = 1\n    for i in range(1, n+1):  # 初期化\n        for j in range(1, m+1):  # 初期化\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    for i in range(1, n+1):  # 差分を取る\n        for j in range(1, m+1):  # 差分を取る\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):  # 回答を求める\n        for j in range(1, m+1):  # 回答を求める\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)から(i,j)までの辺が全てkとなる経路の数\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # 左か上から来る\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]  # 左上から来るのを引く\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = (1,1)から(i,j)までの1の個数\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1] + a[i-1][j-1]\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] == 1:\n                a[i-1][j-1] = 0\n            else:\n                a[i-1][j-1] = 1\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if dp[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n+1)]\n    dp = [[0]*(m+1) for _ in range(n+1)]\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i][j] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0]*(m+1) for _ in range(n+1)]  # dp[i][j] = i行j列までの1の数\n    dp[1][1] = 1\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # 左と上から来た1の数\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            dp[i][j] -= dp[i-1][j-1]  # 左上から来た1の数を引く\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, m+1):\n            if a[i-1][j-1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    dp[1][1] = 1\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] -= dp[i - 1][j - 1]\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            if a[i - 1][j - 1] ^ k == 0:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:40:51.487514 size on output set 8
2022-04-20 06:40:51.487541 num operations 1
2022-04-20 06:40:51.487551 size on input set 1
2022-04-20 06:40:51.487783 using api key kouti
2022-04-20 06:41:12.342626 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)]\n    dp2[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j]\n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)] \n    dp2[0][0] = 1 \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j] \n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j] \n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j] \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)]\n    dp2[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j]\n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    print(n * (n - 1) // 2 + m * (m - 1) // 2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[[0 for _ in range(k + 1)] for _ in range(m)] for _ in range(n)]\n    dp[0][0][a[0][0]] = 1\n    for i in range(n):  # i\u884c\u76ee\n        for j in range(m):  # j\u5217\u76ee\n            for l in range(k + 1):  # l\u500b\u76ee\n                if i + 1 < n:\n                    dp[i + 1][j][l] += dp[i][j][l]\n                if j + 1 < m:\n                    dp[i][j + 1][l] += dp[i][j][l]\n                if i + 1 < n and j + 1 < m:\n                    dp[i + 1][j + 1][l ^ a[i + 1][j + 1]] += dp[i][j][l]\n    print(dp[n - 1][m - 1][k])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)] \n    dp2[0][0] = 1 \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j] \n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j] \n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    if k == 0:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    ans += dp[i][j]\n        print(ans)\n    else:\n        dp2 = [[0 for _ in range(m)] for _ in range(n)]\n        dp2[0][0] = 1\n        for i in range(n):\n            for j in range(m):\n                if i + 1 < n:\n                    dp2[i + 1][j] += dp2[i][j]\n                if j + 1 < m:\n                    dp2[i][j + 1] += dp2[i][j]\n        for i in range(n):\n            for j in range(m):\n                dp2[i][j] = dp2[i][j] * a[i][j]\n        for i in range(n):\n            for j in range(m):\n                if i + 1 < n:\n                    dp2[i + 1][j] ^= dp2[i][j]\n                if j + 1 < m:\n                    dp2[i][j + 1] ^= dp2[i][j]\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if dp2[i][j] == k:\n                    ans += dp[i][j]\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650436851,
  "object": "edit"
}
2022-04-20 06:41:12.343051 fix syntax errors 8 ["\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)]\n    dp2[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j]\n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)] \n    dp2[0][0] = 1 \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j] \n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j] \n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j] \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)]\n    dp2[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j]\n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    print(n * (n - 1) // 2 + m * (m - 1) // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[[0 for _ in range(k + 1)] for _ in range(m)] for _ in range(n)]\n    dp[0][0][a[0][0]] = 1\n    for i in range(n):  # i行目\n        for j in range(m):  # j列目\n            for l in range(k + 1):  # l個目\n                if i + 1 < n:\n                    dp[i + 1][j][l] += dp[i][j][l]\n                if j + 1 < m:\n                    dp[i][j + 1][l] += dp[i][j][l]\n                if i + 1 < n and j + 1 < m:\n                    dp[i + 1][j + 1][l ^ a[i + 1][j + 1]] += dp[i][j][l]\n    print(dp[n - 1][m - 1][k])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    dp2 = [[0 for _ in range(m)] for _ in range(n)] \n    dp2[0][0] = 1 \n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] += dp2[i][j] \n            if j + 1 < m:\n                dp2[i][j + 1] += dp2[i][j] \n    for i in range(n):\n        for j in range(m):\n            dp2[i][j] = dp2[i][j] * a[i][j]\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp2[i + 1][j] ^= dp2[i][j]\n            if j + 1 < m:\n                dp2[i][j + 1] ^= dp2[i][j]\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if dp2[i][j] == k:\n                ans += dp[i][j]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(m):\n            if i + 1 < n:\n                dp[i + 1][j] += dp[i][j]\n            if j + 1 < m:\n                dp[i][j + 1] += dp[i][j]\n    if k == 0:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    ans += dp[i][j]\n        print(ans)\n    else:\n        dp2 = [[0 for _ in range(m)] for _ in range(n)]\n        dp2[0][0] = 1\n        for i in range(n):\n            for j in range(m):\n                if i + 1 < n:\n                    dp2[i + 1][j] += dp2[i][j]\n                if j + 1 < m:\n                    dp2[i][j + 1] += dp2[i][j]\n        for i in range(n):\n            for j in range(m):\n                dp2[i][j] = dp2[i][j] * a[i][j]\n        for i in range(n):\n            for j in range(m):\n                if i + 1 < n:\n                    dp2[i + 1][j] ^= dp2[i][j]\n                if j + 1 < m:\n                    dp2[i][j + 1] ^= dp2[i][j]\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if dp2[i][j] == k:\n                    ans += dp[i][j]\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:41:12.343365 size on output set 7
