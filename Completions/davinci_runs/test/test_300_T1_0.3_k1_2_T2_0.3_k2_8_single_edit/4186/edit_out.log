2022-04-20 06:57:09.320766 num operations 1
2022-04-20 06:57:09.320786 size on input set 1
2022-04-20 06:57:09.321038 using api key sourya
2022-04-20 06:57:20.626190 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their count\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be form\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solve\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answers\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input()) \na = list(map(int, input().split())) \n \n# Create a dictionary of skills and their counts \nskills = {} \nfor i in a: \n    if i not in skills: \n        skills[i] = 1 \n    else: \n        skills[i] += 1 \n \n# Find the number of teams that can be formed \nnum_teams = 0 \nfor i in skills: \n    num_teams += skills[i] // 2 \n \n# Find the number of problems that need to be solved \nnum_problems = 0 \nfor i in skills: \n    num_problems += skills[i] % 2 \n \n# Print the answer \nprint(num_problems + (n // 2) - num_teams) \n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n"
    }
  ],
  "created": 1650437829,
  "object": "edit"
}
2022-04-20 06:57:20.626601 fix syntax errors 8 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their count\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be form\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solve\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answers\nprint(num_problems + (n // 2) - num_teams)\n', '\nn = int(input()) \na = list(map(int, input().split())) \n \n# Create a dictionary of skills and their counts \nskills = {} \nfor i in a: \n    if i not in skills: \n        skills[i] = 1 \n    else: \n        skills[i] += 1 \n \n# Find the number of teams that can be formed \nnum_teams = 0 \nfor i in skills: \n    num_teams += skills[i] // 2 \n \n# Find the number of problems that need to be solved \nnum_problems = 0 \nfor i in skills: \n    num_problems += skills[i] % 2 \n \n# Print the answer \nprint(num_problems + (n // 2) - num_teams) \n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n', '#!/usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Create a dictionary of skills and their counts\nskills = {}\nfor i in a:\n    if i not in skills:\n        skills[i] = 1\n    else:\n        skills[i] += 1\n\n# Find the number of teams that can be formed\nnum_teams = 0\nfor i in skills:\n    num_teams += skills[i] // 2\n\n# Find the number of problems that need to be solved\nnum_problems = 0\nfor i in skills:\n    num_problems += skills[i] % 2\n\n# Print the answer\nprint(num_problems + (n // 2) - num_teams)\n']
2022-04-20 06:57:20.626815 size on output set 4
2022-04-20 06:57:20.626841 num operations 1
2022-04-20 06:57:20.626851 size on input set 1
2022-04-20 06:57:20.627121 using api key jaanu
2022-04-20 06:57:27.654627 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[-1] - a[0]\n        if diff > 0:\n            ans += diff\n            a[0] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650437840,
  "object": "edit"
}
2022-04-20 06:57:27.654997 fix syntax errors 8 ['\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[-1] - a[0]\n        if diff > 0:\n            ans += diff\n            a[0] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    while len(a) > 1:\n        diff = a[0] - a[-1]\n        if diff > 0:\n            ans += diff\n            a[-1] += diff\n        else:\n            a.pop()\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 06:57:27.655097 size on output set 5
