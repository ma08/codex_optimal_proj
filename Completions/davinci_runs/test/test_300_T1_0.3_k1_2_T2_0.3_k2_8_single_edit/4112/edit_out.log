2022-04-20 06:33:50.606371 num operations 1
2022-04-20 06:33:50.606398 size on input set 1
2022-04-20 06:33:50.606634 using api key gabby
2022-04-20 06:34:01.524757 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    },
    {
      "index": 1,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    },
    {
      "index": 2,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            if i >= k:\n                dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n            else:\n                dp[i][j] = dp[i - 1][j]\n    print(dp[n][x])\n"
    },
    {
      "index": 3,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    },
    {
      "index": 4,
      "text": "n, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    },
    {
      "index": 5,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    },
    {
      "index": 6,
      "text": "\n#\n# n, k, x = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# if x < k:\n#     print(-1)\n# else:\n#     dp = [[0] * (x + 1) for _ in range(n + 1)]\n#     for i in range(1, n + 1):\n#         for j in range(1, x + 1):\n#             dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n#     print(dp[n][x])\n"
    },
    {
      "index": 7,
      "text": "\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"
    }
  ],
  "created": 1650436430,
  "object": "edit"
}
2022-04-20 06:34:01.525140 fix syntax errors 8 ['\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            if i >= k:\n                dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n            else:\n                dp[i][j] = dp[i - 1][j]\n    print(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n', 'n, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n', '\n#\n# n, k, x = map(int, input().split())\n# a = list(map(int, input().split()))\n#\n# if x < k:\n#     print(-1)\n# else:\n#     dp = [[0] * (x + 1) for _ in range(n + 1)]\n#     for i in range(1, n + 1):\n#         for j in range(1, x + 1):\n#             dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n#     print(dp[n][x])\n', '\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n']
2022-04-20 06:34:01.525212 size on output set 4
2022-04-20 06:34:01.525228 num operations 1
2022-04-20 06:34:01.525237 size on input set 1
2022-04-20 06:34:01.525461 using api key kouti
2022-04-20 06:34:13.363751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)] # dp[i][j][l] = i\ubc88\uc9f8 \uc218\uae4c\uc9c0 \ubd24\uc744 \ub54c, j\ubc88\uc9f8 \uc218\ub97c \uc120\ud0dd\ud588\uc744 \ub54c, l\ubc88\uc9f8 \uc120\ud0dd\ud588\uc744 \ub54c \ucd5c\ub300\uac12\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)]\n          for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l],\n                                      dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l],\n                                          dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l],\n                                          dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]  # dp[i][j][l] = i\u756a\u76ee\u307e\u3067\u306e\u8981\u7d20\u3067j\u756a\u76ee\u307e\u3067\u3092\u4f7f\u3063\u3066l\u56de\u79fb\u52d5\u3057\u305f\u3068\u304d\u306e\u6700\u5927\u5024\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650436441,
  "object": "edit"
}
2022-04-20 06:34:13.364348 fix syntax errors 8 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)] # dp[i][j][l] = i번째 수까지 봤을 때, j번째 수를 선택했을 때, l번째 선택했을 때 최대값\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)]\n          for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l],\n                                      dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l],\n                                          dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l],\n                                          dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]  # dp[i][j][l] = i番目までの要素でj番目までを使ってl回移動したときの最大値\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 06:34:13.364538 size on output set 6
