2022-04-18 20:02:40.846023 """
You are given an array $a$ consisting of $n$ integers $a_1, a_2, \dots, a_n$.

Your problem is to find such pair of indices $i, j$ ($1 \le i < j \le n$) that $lcm(a_i, a_j)$ is minimum possible.

$lcm(x, y)$ is the least common multiple of $x$ and $y$ (minimum positive number such that both $x$ and $y$ are divisors of this number).


-----Input-----

The first line of the input contains one integer $n$ ($2 \le n \le 10^6$) â€” the number of elements in $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^7$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

Print two integers $i$ and $j$ ($1 \le i < j \le n$) such that the value of $lcm(a_i, a_j)$ is minimum among all valid pairs $i, j$. If there are multiple answers, you can print any.


-----Examples-----
Input
5
2 4 8 3 6

Output
1 2

Input
5
5 2 11 3 7

Output
2 4

Input
6
2 5 10 1 10 2

Output
1 4
"""
2022-04-18 20:02:40.846041 --------------------------
2022-04-18 20:03:01.407414 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)"
    }
  ],
  "created": 1650312161,
  "id": "cmpl-4yRs17F2bope1sdkP9E3n5tJ0lcEn",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:03:01.407684 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)"
}
2022-04-18 20:03:01.407724 REASON stop
2022-04-18 20:03:01.409281 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)"
}
2022-04-18 20:03:01.409401 REASON stop
