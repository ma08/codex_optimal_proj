2022-04-20 06:19:21.479150 num operations 1
2022-04-20 06:19:21.479176 size on input set 1
2022-04-20 06:19:21.479445 using api key jaanu
2022-04-20 06:19:26.655113 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 3,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 4,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 5,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 6,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    },
    {
      "index": 7,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n"
    }
  ],
  "created": 1650435561,
  "object": "edit"
}
2022-04-20 06:19:26.655505 fix syntax errors 8 ['\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '#!/usr/bin/env python3\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (1, 2)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = (0, 1)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < lcm(a[ans[0]], a[ans[1]]):\n            ans = (i, j)\n\nprint(ans[0] + 1, ans[1] + 1)\n']
2022-04-20 06:19:26.655593 size on output set 4
2022-04-20 06:19:26.655609 num operations 1
2022-04-20 06:19:26.655619 size on input set 1
2022-04-20 06:19:26.655858 using api key derek
2022-04-20 06:19:26.694308 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 06:19:28.196281 using api key derek
2022-04-20 06:19:28.233890 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 06:19:31.237361 using api key jaanu
2022-04-20 06:19:36.827852 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n"
    }
  ],
  "created": 1650435571,
  "object": "edit"
}
2022-04-20 06:19:36.828431 fix syntax errors 8 ['\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', 'import sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_lcm = 10 ** 7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n', '\nimport sys\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nmin_lcm = 10**7 + 1\nmin_i = 0\nmin_j = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i\n            min_j = j\n\nprint(min_i + 1, min_j + 1)\n']
2022-04-20 06:19:36.828529 size on output set 5
