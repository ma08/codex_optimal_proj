2022-04-20 06:39:49.652992 num operations 1
2022-04-20 06:39:49.653027 size on input set 1
2022-04-20 06:39:49.653239 using api key derek
2022-04-20 06:39:49.809598 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 06:39:51.311536 using api key derek
2022-04-20 06:39:51.353550 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 06:39:54.357041 using api key gabby
2022-04-20 06:40:05.152758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\nprint(N, M)\nprint(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 3,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 4,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 5,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 6,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    },
    {
      "index": 7,
      "text": "\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u6570\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u30bd\u30fc\u30c8\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092ID\u306b\u5909\u63db\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# \u5404\u770c\u306e\u90fd\u5e02\u306eID\u3092\u7d50\u5408\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# \u51fa\u529b\nfor id in id_per_pref:\n    print(id)\n"
    }
  ],
  "created": 1650436794,
  "object": "edit"
}
2022-04-20 06:40:05.153294 fix syntax errors 8 ['\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\nprint(N, M)\nprint(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n', '\n\nN, M = map(int, input().split())\nP_Y = [list(map(int, input().split())) for _ in range(M)]\n#N, M = 2, 3\n#P_Y = [[1, 32], [2, 63], [1, 12]]\n\n#print(N, M)\n#print(P_Y)\n\n# 各県の都市数\ncity_num_per_pref = [0] * N\nfor p, y in P_Y:\n    city_num_per_pref[p-1] += 1\n\n#print(city_num_per_pref)\n\n# 各県の都市のID\nid_per_pref = [[0] * c for c in city_num_per_pref]\nfor p, y in P_Y:\n    id_per_pref[p-1][city_num_per_pref[p-1]-1] = y\n    city_num_per_pref[p-1] -= 1\n\n#print(id_per_pref)\n\n# 各県の都市のIDをソート\nfor pref in id_per_pref:\n    pref.sort()\n\n#print(id_per_pref)\n\n# 各県の都市のIDをIDに変換\nid_per_pref = [[str(p).zfill(6) + str(i+1).zfill(6) for i in range(len(pref))] for p, pref in enumerate(id_per_pref, 1)]\n\n#print(id_per_pref)\n\n# 各県の都市のIDを結合\nid_per_pref = [id for pref in id_per_pref for id in pref]\n\n#print(id_per_pref)\n\n# 出力\nfor id in id_per_pref:\n    print(id)\n']
2022-04-20 06:40:05.153508 size on output set 2
2022-04-20 06:40:05.153525 num operations 1
2022-04-20 06:40:05.153534 size on input set 1
2022-04-20 06:40:05.153778 using api key soukgp
2022-04-20 06:40:16.588321 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p) + 1, i + 1))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p - 1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p) + 1, i + 1))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\nn, m = map(int, sys.stdin.readline().split())\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\nfor p in prefectures:\n    p.sort()\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p)+1, i+1))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p) + 1, i + 1))\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n\n        print(\"{:06}{:06}\".format(prefectures.index(p)+1, i+1))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p - 1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p) + 1, i + 1))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p)+1, i+1))\n"
    },
    {
      "index": 7,
      "text": "# -*- coding: utf-8 -*-\n# AtCoder Beginner Contest\n# Problem A\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    print(a + b)\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print(\"{:06}{:06}\".format(prefectures.index(p)+1, i+1))\n"
    }
  ],
  "created": 1650436805,
  "object": "edit"
}
2022-04-20 06:40:16.588840 fix syntax errors 8 ['# coding: utf-8\n\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p) + 1, i + 1))\n', '\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p - 1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p) + 1, i + 1))\n', '\nimport sys\nimport math\nn, m = map(int, sys.stdin.readline().split())\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\nfor p in prefectures:\n    p.sort()\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p)+1, i+1))\n', '\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p) + 1, i + 1))\n', '\n\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n\n        print("{:06}{:06}".format(prefectures.index(p)+1, i+1))\n', '\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p - 1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p) + 1, i + 1))\n', '\nimport sys\nimport math\n\nn, m = map(int, sys.stdin.readline().split())\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p)+1, i+1))\n', '# -*- coding: utf-8 -*-\n# AtCoder Beginner Contest\n# Problem A\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    print(a + b)\n\nprefectures = [[] for _ in range(n)]\nfor _ in range(m):\n    p, y = map(int, sys.stdin.readline().split())\n    prefectures[p-1].append(y)\n\nfor p in prefectures:\n    p.sort()\n\nfor p in prefectures:\n    for i, y in enumerate(p):\n        print("{:06}{:06}".format(prefectures.index(p)+1, i+1))\n']
2022-04-20 06:40:16.588945 size on output set 7
