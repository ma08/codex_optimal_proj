2022-04-20 07:23:33.988417 num operations 1
2022-04-20 07:23:33.988440 size on input set 1
2022-04-20 07:23:33.988645 using api key kouti
2022-04-20 07:23:54.712843 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\" and names[i][0] != \"T\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\" and names[j][0] != \"T\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\" and names[k][0] != \"T\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n\tn = int(input())\n\tnames = []\n\tfor i in range(n):\n\t\tnames.append(input())\n\tcount = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tfor k in range(j+1, n):\n\t\t\t\tif names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n\t\t\t\t\tcontinue\n\t\t\t\tif names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n\t\t\t\t\tcontinue\n\t\t\t\tcount += 1\n\tprint(count)\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\" and names[i][0] != \"T\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\" and names[j][0] != \"T\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\" and names[k][0] != \"T\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    names = [sys.stdin.readline() for _ in range(n)]\n    count = sum(1 for i in range(n) for j in range(i+1, n) for k in range(j+1, n) if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0] and names[i][0] in \"MARCH\" and names[j][0] in \"MARCH\" and names[k][0] in \"MARCH\")\n    print(count) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650439414,
  "object": "edit"
}
2022-04-20 07:23:54.713265 fix syntax errors 8 ['import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H" and names[i][0] != "T":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H" and names[j][0] != "T":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H" and names[k][0] != "T":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n\tn = int(input())\n\tnames = []\n\tfor i in range(n):\n\t\tnames.append(input())\n\tcount = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tfor k in range(j+1, n):\n\t\t\t\tif names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n\t\t\t\t\tcontinue\n\t\t\t\tif names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tif names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n\t\t\t\t\tcontinue\n\t\t\t\tcount += 1\n\tprint(count)\n\nif __name__ == \'__main__\':\n\tmain()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H" and names[i][0] != "T":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H" and names[j][0] != "T":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H" and names[k][0] != "T":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    names = [sys.stdin.readline() for _ in range(n)]\n    count = sum(1 for i in range(n) for j in range(i+1, n) for k in range(j+1, n) if names[i][0] != names[j][0] and names[i][0] != names[k][0] and names[j][0] != names[k][0] and names[i][0] in "MARCH" and names[j][0] in "MARCH" and names[k][0] in "MARCH")\n    print(count) \n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != "M" and names[i][0] != "A" and names[i][0] != "R" and names[i][0] != "C" and names[i][0] != "H":\n                    continue\n                if names[j][0] != "M" and names[j][0] != "A" and names[j][0] != "R" and names[j][0] != "C" and names[j][0] != "H":\n                    continue\n                if names[k][0] != "M" and names[k][0] != "A" and names[k][0] != "R" and names[k][0] != "C" and names[k][0] != "H":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 07:23:54.713550 size on output set 6
2022-04-20 07:23:54.713580 num operations 1
2022-04-20 07:23:54.713592 size on input set 1
2022-04-20 07:23:54.713826 using api key sunu
2022-04-20 07:24:02.620755 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']] # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067M,A,R,C,H\u306e\u6587\u5b57\u3060\u3051\u53d6\u308a\u51fa\u3059\n    s = list(set(s)) # \u91cd\u8907\u3092\u6d88\u3059\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6) # \u9806\u5217\u306e\u516c\u5f0f\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in 'MARCH']\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]  # \u5148\u982d\u6587\u5b57\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650439434,
  "object": "edit"
}
2022-04-20 07:24:02.621096 fix syntax errors 8 ["\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']] # リスト内包表記でM,A,R,C,Hの文字だけ取り出す\n    s = list(set(s)) # 重複を消す\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6) # 順列の公式\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in 'MARCH']\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]  # 先頭文字のリストを作る\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 07:24:02.621186 size on output set 8
