["\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for exam in exams:\n        s, d, c = exam\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n            for i in range(c):\n                schedule[s + i] = exam[0]\n            schedule[d - 1] = m + 1\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for exam in exams:\n        s, d, c = exam\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n        for i in range(c):\n            schedule[s + i] = exam[0]\n        schedule[d - 1] = m + 1  # to distinguish between exams and free time\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(1, n):\n        a = set(s[:i])\n        b = set(s[i:])\n        ans = max(ans, len(a & b))\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for exam in exams:\n        s, d, c = exam[0], exam[1], exam[2]\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n        for i in range(c):\n            schedule[s + i] = exam[3]\n        schedule[d - 1] = m + 1\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for i in range(m):\n        s, d, c = exams[i]\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n        for i in range(c):\n            schedule[s + i] = i + 1\n        schedule[d - 1] = m + 1\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for exam in exams:\n        s, d, c = exam\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n        for i in range(c):\n            schedule[s + i] = exam[0]\n        schedule[d - 1] = m + 1  # \u907f\u514d\u6392\u8ab2\u6642\u9593\u88ab\u64e0\u58d3\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(list(map(int, input().split())))\n    exams.sort(key=lambda x: x[1])\n    schedule = [0] * n\n    for exam in exams:\n        s, d, c = exam[0], exam[1], exam[2]\n        if d - s < c:\n            print(-1)\n            return\n        for i in range(s, d):\n            if schedule[i] != 0:\n                print(-1)\n                return\n        for i in range(c):\n            schedule[s + i] = s\n        schedule[d - 1] = m + 1\n    print(*schedule)\n\nif __name__ == \"__main__\":\n    main()\n"]