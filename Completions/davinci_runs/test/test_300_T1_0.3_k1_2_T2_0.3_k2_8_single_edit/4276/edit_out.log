2022-04-20 07:24:21.789756 num operations 1
2022-04-20 07:24:21.789779 size on input set 1
2022-04-20 07:24:21.790004 using api key gabby
2022-04-20 07:24:30.725355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nprint('Hello World!')\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 4,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 5,
      "text": "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 6,
      "text": "# coding: utf-8\n\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, T = map(int, input().split())\n\n    costs = []\n    for _ in range(N):\n        cost, time = map(int, input().split())\n        if time <= T:\n            costs.append(cost)\n\n    if len(costs) == 0:\n        print('TLE')\n    else:\n        print(min(costs))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650439461,
  "object": "edit"
}
2022-04-20 07:24:30.725744 fix syntax errors 8 ["\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nprint('Hello World!')\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "# coding: utf-8\n\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, T = map(int, input().split())\n\n    costs = []\n    for _ in range(N):\n        cost, time = map(int, input().split())\n        if time <= T:\n            costs.append(cost)\n\n    if len(costs) == 0:\n        print('TLE')\n    else:\n        print(min(costs))\n\nif __name__ == '__main__':\n    main()\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-20 07:24:30.725812 size on output set 4
2022-04-20 07:24:30.725827 num operations 1
2022-04-20 07:24:30.725836 size on input set 1
2022-04-20 07:24:30.726087 using api key gabby
2022-04-20 07:24:43.214558 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[1])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 4,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 5,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[0])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 6,
      "text": "import sys\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts, times = zip(*sorted(zip(costs, times)))\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 7,
      "text": "def main():\n    N, T = map(int, input().split())\n    costs = []\n    times = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        costs.append(c)\n        times.append(t)\n\n\n    costs = sorted(costs)\n    times = sorted(times)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    }
  ],
  "created": 1650439470,
  "object": "edit"
}
2022-04-20 07:24:43.214944 fix syntax errors 8 ['\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[1])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[0])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', 'import sys\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts, times = zip(*sorted(zip(costs, times)))\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', 'def main():\n    N, T = map(int, input().split())\n    costs = []\n    times = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        costs.append(c)\n        times.append(t)\n\n\n    costs = sorted(costs)\n    times = sorted(times)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n']
2022-04-20 07:24:43.215135 size on output set 8
