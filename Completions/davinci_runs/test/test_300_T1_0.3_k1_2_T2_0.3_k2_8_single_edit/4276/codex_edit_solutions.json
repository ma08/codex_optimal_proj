["def main():\n    N, T = map(int, input().split())\n    costs = []\n    times = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        costs.append(c)\n        times.append(t)\n\n\n    costs = sorted(costs)\n    times = sorted(times)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "# coding: utf-8\n\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, T = map(int, input().split())\n\n    costs = []\n    for _ in range(N):\n        cost, time = map(int, input().split())\n        if time <= T:\n            costs.append(cost)\n\n    if len(costs) == 0:\n        print('TLE')\n    else:\n        print(min(costs))\n\nif __name__ == '__main__':\n    main()\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[0])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, key=lambda x: x[1])\ntimes = sorted(times, key=lambda x: x[1])\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nprint('Hello World!')\n", "N, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "# coding: utf-8\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "import sys\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts, times = zip(*sorted(zip(costs, times)))\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n", "\n\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"]