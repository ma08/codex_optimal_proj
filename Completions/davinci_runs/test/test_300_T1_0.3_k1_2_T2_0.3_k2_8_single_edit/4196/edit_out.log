2022-04-20 07:00:45.192151 num operations 1
2022-04-20 07:00:45.192174 size on input set 1
2022-04-20 07:00:45.192394 using api key jaanu
2022-04-20 07:00:50.234178 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "import math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650438045,
  "object": "edit"
}
2022-04-20 07:00:50.234576 fix syntax errors 8 ["from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "from functools import reduce\n\nimport math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef gcd(a, b):\n    return math.gcd(a, b)\n\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\ndef main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(gcd_list(numbers))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 07:00:50.234647 size on output set 2
2022-04-20 07:00:50.234666 num operations 1
2022-04-20 07:00:50.234676 size on input set 1
2022-04-20 07:00:50.234932 using api key sunu
2022-04-20 07:00:56.102483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "# coding: utf-8\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "# -*- coding: utf-8 -*-\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()] # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650438050,
  "object": "edit"
}
2022-04-20 07:00:56.102987 fix syntax errors 8 ["def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()] # スペース区切りの整数の入力\n    ans = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            ans = max(ans, gcd(a[i], a[j]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 07:00:56.103095 size on output set 7
