2022-04-18 19:35:56.773872 """
Polycarp plays "Game 23". Initially he has a number $n$ and his goal is to transform it to $m$. In one move, he can multiply $n$ by $2$ or multiply $n$ by $3$. He can perform any number of moves.

Print the number of moves needed to transform $n$ to $m$. Print -1 if it is impossible to do so.

It is easy to prove that any way to transform $n$ to $m$ contains the same number of moves (i.e. number of moves doesn't depend on the way of transformation).


-----Input-----

The only line of the input contains two integers $n$ and $m$ ($1 \le n \le m \le 5\cdot10^8$).


-----Output-----

Print the number of moves to transform $n$ to $m$, or -1 if there is no solution.


-----Examples-----
Input
120 51840

Output
7

Input
42 42

Output
0

Input
48 72

Output
-1



-----Note-----

In the first example, the possible sequence of moves is: $120 \rightarrow 240 \rightarrow 720 \rightarrow 1440 \rightarrow 4320 \rightarrow 12960 \rightarrow 25920 \rightarrow 51840.$ The are $7$ steps in total.

In the second example, no moves are needed. Thus, the answer is $0$.

In the third example, it is impossible to transform $48$ to $72$.
"""
2022-04-18 19:35:56.773893 --------------------------
2022-04-18 19:36:17.987040 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    count = 0\n    while n < m:\n        if n * 2 <= m:\n            n *= 2\n        elif n * 3 <= m:\n            n *= 3\n        else:\n            print(-1)\n            return\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    if n == m:\n        print(0)\n    elif n > m:\n        print(-1)\n    else:\n        count = 0\n        while n < m:\n            if m % 2 == 0:\n                m = m // 2\n            elif m % 3 == 0:\n                m = m // 3\n            else:\n                print(-1)\n                return\n            count += 1\n        print(count)\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1650310557,
  "id": "cmpl-4yRS90JcksXROvvh1udmuOtHtootc",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 19:36:17.987345 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    if n == m:\n        print(0)\n        return\n    if n > m:\n        print(-1)\n        return\n    count = 0\n    while n < m:\n        if n * 2 <= m:\n            n *= 2\n        elif n * 3 <= m:\n            n *= 3\n        else:\n            print(-1)\n            return\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 19:36:17.987384 REASON stop
2022-04-18 19:36:18.012037 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    if n == m:\n        print(0)\n    elif n > m:\n        print(-1)\n    else:\n        count = 0\n        while n < m:\n            if m % 2 == 0:\n                m = m // 2\n            elif m % 3 == 0:\n                m = m // 3\n            else:\n                print(-1)\n                return\n            count += 1\n        print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 19:36:18.012183 REASON stop
