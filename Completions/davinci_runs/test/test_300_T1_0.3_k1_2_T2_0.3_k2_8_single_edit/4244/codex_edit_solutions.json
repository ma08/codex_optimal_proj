["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [int(i) for i in sys.stdin.readline().split()]\n    x.sort()\n    m = x[0]\n    for i in range(1, n):\n        m = (m + x[i]) / 2\n    print(sum([(i - m) ** 2 for i in x]))  # noqa\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [int(i) for i in sys.stdin.readline().split()]\n    x.sort()\n    m = x[0]\n    for i in range(1, n):\n        m = (m + x[i]) / 2\n    print(sum([(i - m) ** 2 for i in x]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [int(i) for i in sys.stdin.readline().split()] # list comprehension\n    x.sort()\n    m = x[0]\n    for i in range(1, n):\n        m = (m + x[i]) / 2\n    print(sum([(i - m) ** 2 for i in x])) # list comprehension\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [int(i) for i in sys.stdin.readline().split()]\n    x.sort()\n    m = x[0]\n    for i in range(1, n):\n        m = (m + x[i]) / 2\n    print(sum([(i - m) ** 2 for i in x]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    ans = 0\n    for i in range(n):\n        ans += (x[i] - x[n // 2]) ** 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    a.sort()\n    m = a[0]\n    for i in range(1, n): m = (m + a[i]) / 2\n    print(sum([(i - m) ** 2 for i in a]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [int(i) for i in sys.stdin.readline().split()]\n    x.sort()\n    m = x[0]\n    for i in range(1, n):\n        m = (m + x[i]) / 2\n    print(sum([(i - m) ** 2 for i in x])\n\nif __name__ == '__main__':\n    main()\n"]