2022-04-18 09:34:30.542330 num operations 1
2022-04-18 09:34:30.542353 size on input set 1
2022-04-18 09:34:34.112599 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    s = input().split()\n    t = input().split()\n    result = 0\n    for i in range(3):\n        if s[i] == t[i] or s[i] == t[i].lower() or s[i].lower() == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    s = input()[::-1]\n    t = input()[::-1]\n    result = 0\n    for i in range(3):\n        if s[i] == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    s = input()\n    t = input()\n    result = 0\n    for i in range(3):\n        if s[i] == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650274470,
  "object": "edit"
}
2022-04-18 09:34:34.112927 fix syntax errors 3 ["\n\ndef main():\n    s = input().split()\n    t = input().split()\n    result = 0\n    for i in range(3):\n        if s[i] == t[i] or s[i] == t[i].lower() or s[i].lower() == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()[::-1]\n    t = input()[::-1]\n    result = 0\n    for i in range(3):\n        if s[i] == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    s = input()\n    t = input()\n    result = 0\n    for i in range(3):\n        if s[i] == t[i]:\n            result += 1\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 09:34:34.112995 size on output set 3
2022-04-18 09:34:34.113016 num operations 1
2022-04-18 09:34:34.113026 size on input set 1
2022-04-18 09:34:36.298056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nS = input()\nT = input()\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\n\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1650274474,
  "object": "edit"
}
2022-04-18 09:34:36.298335 fix syntax errors 3 ['\nS = input()\nT = input()\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\nprint(count)\n', '\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\n\nprint(count)\n', '# -*- coding: utf-8 -*-\n\n\n\nS = input()\nT = input()\n\ncount = 0\n\nfor i in range(3):\n    if S[i] == T[i]:\n        count += 1\nprint(count)\n']
2022-04-18 09:34:36.298378 size on output set 3
2022-04-18 09:34:36.298397 num operations 1
2022-04-18 09:34:36.298407 size on input set 1
2022-04-18 09:34:51.658580 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom io import StringIO\nimport unittest\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n \ndef resolve():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[0:k]))\n \nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n    def test_input_1(self):\n        print(\"test_input_1\")\n        input = \"\"\"5 3\n50 100 80 120 80\"\"\"\n        output = \"\"\"210\"\"\"\n        self.assertIO(input, output)\n    def test_input_2(self):\n        print(\"test_input_2\")\n        input = \"\"\"1 1\n1000\"\"\"\n        output = \"\"\"1000\"\"\"\n        self.assertIO(input, output)\n \nif __name__ == \"__main__\":\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n#\n# S = input()\n# T = input()\n# ans = 0\n# for i in range(3):\n#     if S[i] == T[i]:\n#         ans += 1\n# print(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nS = str(input())\nT = str(input())\nans = 0\nfor i in range(3):\n    if S[i] == T[i]:\n        ans += 1\nprint(ans)\n"
    }
  ],
  "created": 1650274476,
  "object": "edit"
}
2022-04-18 09:34:51.658796 fix syntax errors 3 ['\nimport sys\nfrom io import StringIO\nimport unittest\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n \ndef resolve():\n    n, k = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[0:k]))\n \nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n    def test_input_1(self):\n        print("test_input_1")\n        input = """5 3\n50 100 80 120 80"""\n        output = """210"""\n        self.assertIO(input, output)\n    def test_input_2(self):\n        print("test_input_2")\n        input = """1 1\n1000"""\n        output = """1000"""\n        self.assertIO(input, output)\n \nif __name__ == "__main__":\n    unittest.main()\n', '\n#\n# S = input()\n# T = input()\n# ans = 0\n# for i in range(3):\n#     if S[i] == T[i]:\n#         ans += 1\n# print(ans)\n', '\n\nS = str(input())\nT = str(input())\nans = 0\nfor i in range(3):\n    if S[i] == T[i]:\n        ans += 1\nprint(ans)\n']
2022-04-18 09:34:51.658865 size on output set 3
