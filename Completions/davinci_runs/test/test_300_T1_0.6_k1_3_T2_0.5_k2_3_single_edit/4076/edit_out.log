2022-04-18 08:43:42.545845 num operations 1
2022-04-18 08:43:42.545866 size on input set 1
2022-04-18 08:43:45.256279 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n"
    }
  ],
  "created": 1650271422,
  "object": "edit"
}
2022-04-18 08:43:45.256463 fix syntax errors 3 ['#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n', '\n\nimport sys\nimport math\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n', '\nimport sys\nimport math\n\ndef distanceBetweenHands(hour, minute):\n    hour *= 30.0\n    minute *= 6.0\n\n    x1 = 3.0 * math.cos(math.radians(hour))\n    y1 = 3.0 * math.sin(math.radians(hour))\n    x2 = 4.0 * math.cos(math.radians(minute))\n    y2 = 4.0 * math.sin(math.radians(minute))\n\n    return math.sqrt(math.pow(x1 - x2, 2) + math.pow(y1 - y2, 2))\n\nparams = sys.stdin.readline().split()\na = int(params[0])\nb = int(params[1])\nh = int(params[2])\nm = int(params[3])\n\nprint(distanceBetweenHands(h, m))\n']
2022-04-18 08:43:45.256495 size on output set 3
2022-04-18 08:43:45.256506 num operations 1
2022-04-18 08:43:45.256512 size on input set 1
2022-04-18 08:43:51.839113 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\n# \u5165\u529b\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    },
    {
      "index": 1,
      "text": "import math\n\n# \u5165\u529b\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m)) # sin(math.radians(x))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m)) # cos(math.radians(x))\nx_m = b * math.sin(math.radians(6 * m)) # sin(math.radians(x))\ny_m = b * math.cos(math.radians(6 * m)) # cos(math.radians(x))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    },
    {
      "index": 2,
      "text": "import math\n\n\n# \u5165\u529b\n[a, b, h, m] = map(int, input().split())\n\n# \u5ea6\u6570\u6cd5\n# \u6642\u8a08\u306e\u91dd\u306e\u5ea7\u6a19\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# \u5ea7\u6a19\nx = x_h - x_m\ny = y_h - y_m\n\n# \u51fa\u529b\nprint(math.sqrt(x ** 2 + y ** 2))\n"
    }
  ],
  "created": 1650271425,
  "object": "edit"
}
2022-04-18 08:43:51.839322 fix syntax errors 3 ['import math\n\n# 入力\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n', 'import math\n\n# 入力\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m)) # sin(math.radians(x))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m)) # cos(math.radians(x))\nx_m = b * math.sin(math.radians(6 * m)) # sin(math.radians(x))\ny_m = b * math.cos(math.radians(6 * m)) # cos(math.radians(x))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n', 'import math\n\n\n# 入力\n[a, b, h, m] = map(int, input().split())\n\n# 度数法\n# 時計の針の座標\nx_h = a * math.sin(math.radians(30 * h + 0.5 * m))\ny_h = a * math.cos(math.radians(30 * h + 0.5 * m))\nx_m = b * math.sin(math.radians(6 * m))\ny_m = b * math.cos(math.radians(6 * m))\n\n# 座標\nx = x_h - x_m\ny = y_h - y_m\n\n# 出力\nprint(math.sqrt(x ** 2 + y ** 2))\n']
2022-04-18 08:43:51.839380 size on output set 3
2022-04-18 08:43:51.839392 num operations 1
2022-04-18 08:43:51.839399 size on input set 1
2022-04-18 08:43:53.803621 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n"
    }
  ],
  "created": 1650271431,
  "object": "edit"
}
2022-04-18 08:43:53.803784 fix syntax errors 3 ['import math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n', '\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n', '\nimport math\n\nA, B, H, M = map(int, input().split())\n\nrad_h = 2 * math.pi * (H / 12 + M / 60 / 12)\nrad_m = 2 * math.pi * (M / 60)\n\nrad = abs(rad_h - rad_m)\n\nprint(math.sqrt(A ** 2 + B ** 2 - 2 * A * B * math.cos(rad)))\n']
2022-04-18 08:43:53.803944 size on output set 2
