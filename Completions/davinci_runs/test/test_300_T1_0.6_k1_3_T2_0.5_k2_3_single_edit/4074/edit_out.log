2022-04-18 08:42:41.510766 num operations 1
2022-04-18 08:42:41.510787 size on input set 1
2022-04-18 08:42:43.904869 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650271361,
  "object": "edit"
}
2022-04-18 08:42:43.905098 fix syntax errors 3 ['\n\nimport sys\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef get_min_packets(shovels, types):\n    if shovels < 0:\n        return None\n    if shovels == 0:\n        return 0\n    if shovels == 1:\n        return 1\n\n    min_packets = sys.maxsize\n    for t in range(types, 0, -1):\n        packets = get_min_packets(shovels - t, types)\n        if packets is not None and packets < min_packets:\n            min_packets = packets\n    if min_packets == sys.maxsize:\n        return None\n    return min_packets + 1\n\ndef main():\n    T = int(sys.stdin.readline().strip())\n    for t in range(T):\n        N, K = map(int, sys.stdin.readline().strip().split())\n        print(get_min_packets(N, K))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-18 08:42:43.905133 size on output set 3
2022-04-18 08:42:43.905143 num operations 1
2022-04-18 08:42:43.905148 size on input set 1
2022-04-18 08:42:45.846986 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n"
    }
  ],
  "created": 1650271363,
  "object": "edit"
}
2022-04-18 08:42:45.847180 fix syntax errors 3 ['\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n', '\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n', '\nt = int(input())\nfor i in range(t):\n    n,k = map(int,input().split())\n    if n%k == 0:\n        print(n//k)\n    else:\n        print(n//k + 1)\n']
2022-04-18 08:42:45.847203 size on output set 1
2022-04-18 08:42:45.847213 num operations 1
2022-04-18 08:42:45.847219 size on input set 1
2022-04-18 08:43:27.228307 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(input())\n    for i in range(n_tests):\n        n, k = [int(x) for x in input().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n // k\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n // i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"
    }
  ],
  "created": 1650271365,
  "object": "edit"
}
2022-04-18 08:43:27.228595 fix syntax errors 3 ["\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(input())\n    for i in range(n_tests):\n        n, k = [int(x) for x in input().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n", "\nimport sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n//i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\ndef get_min_packages(n, k):\n    if n <= k:\n        return 1\n    min_packages = n // k\n    for i in range(1, k+1):\n        if n % i == 0:\n            packages = n // i\n            if packages < min_packages:\n                min_packages = packages\n    return min_packages\n\nif __name__ == '__main__':\n    n_tests = int(sys.stdin.readline())\n    for i in range(n_tests):\n        n, k = [int(x) for x in sys.stdin.readline().split()]\n        min_packages = get_min_packages(n, k)\n        print(min_packages)\n"]
2022-04-18 08:43:27.228637 size on output set 3
