["\n\ndef main():\n    n = int(input())  # Number of elements which make up the association table.\n    q = int(input())  # Number Q of file names to be analyzed.\n    a = [input().lower() for _ in range(n)]  # File extensions\n    b = [input().lower() for _ in range(n)]  # MIME types\n    for _ in range(q):\n        fname = input()  # One file name per line.\n        fname = fname.split('.')\n        if len(fname) > 1:\n            ext = fname[-1]\n            if ext in a:\n                print(b[a.index(ext)])\n            else:\n                print('UNKNOWN')\n        else:\n            print('UNKNOWN')\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = []\nfor i in range(n):\n    c.append((a[i]+b[i]) % n)\n\nc2 = sorted(c)\n\nfor i in range(n):\n    b[c.index(c2[i])] = i\n\nprint(\" \".join(map(str, b)))\n", "\n\n#-----Solution-----\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [a[i]+b[i] for i in range(n)]\n\n    c.sort()\n    l = [c[i]%n for i in range(n)]\n\n    print(*l)\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = [str((x + y) % n) for (x, y) in zip(a, b)]\n    c.sort()\n    print(' '.join(c))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#-----Solution-----\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(a[i]+b[i])\n\n    l = []\n    for i in range(n):\n        l.append(c[i]%n+1)\n\n    print(*l)\n\nmain()\n", "\ndef main():\n    n = int(raw_input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = [(x + y) % n for (x, y) in zip(a, b)]\n    c.sort()\n    print(' '.join([str(x) for x in c]))\n\nif __name__ == '__main__':\n    main()\n", "\n#-----Solution-----\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(a[i]+b[i])\n\n    c.sort()\n    l = []\n    for i in range(n):\n        l.append(c[i]%n)\n\n    print(*l)\n\nmain()\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(a[i]+b[i])\n\n    c.sort()\n    l = []\n    for i in range(n):\n        l.append(c[i]%n)\n\n    print(*l)\n\nmain()\n", "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = []\nfor i in range(n):\n    c.append((a[i] + b[i]) % n)\n\nc2 = sorted(c)\n\nfor i in range(n):\n    b[c.index(c2[i])] = i\n\nprint(\" \".join(map(str, b)))\n"]