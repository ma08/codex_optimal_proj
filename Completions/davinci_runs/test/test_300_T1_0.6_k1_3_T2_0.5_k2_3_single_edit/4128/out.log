2022-04-18 02:39:13.729559 """
There are two sisters Alice and Betty. You have $n$ candies. You want to distribute these $n$ candies between two sisters in such a way that:  Alice will get $a$ ($a > 0$) candies;  Betty will get $b$ ($b > 0$) candies;  each sister will get some integer number of candies;  Alice will get a greater amount of candies than Betty (i.e. $a > b$);  all the candies will be given to one of two sisters (i.e. $a+b=n$). 

Your task is to calculate the number of ways to distribute exactly $n$ candies between sisters in a way described above. Candies are indistinguishable.

Formally, find the number of ways to represent $n$ as the sum of $n=a+b$, where $a$ and $b$ are positive integers and $a>b$.

You have to answer $t$ independent test cases.


-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — the number of test cases. Then $t$ test cases follow.

The only line of a test case contains one integer $n$ ($1 \le n \le 2 \cdot 10^9$) — the number of candies you have.


-----Output-----

For each test case, print the answer — the number of ways to distribute exactly $n$ candies between two sisters in a way described in the problem statement. If there is no way to satisfy all the conditions, print $0$.


-----Example-----
Input
6
7
1
2
3
2000000000
763243547

Output
3
0
0
1
999999999
381621773



-----Note-----

For the test case of the example, the $3$ possible ways to distribute candies are:  $a=6$, $b=1$;  $a=5$, $b=2$;  $a=4$, $b=3$.
"""
2022-04-18 02:39:13.729583 --------------------------
2022-04-18 02:39:42.238453 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650249553,
  "id": "cmpl-4yBaDrbc8LjeQzFqgu1ACE6u0ONsU",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:39:42.238715 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))"
}
2022-04-18 02:39:42.238756 REASON stop
2022-04-18 02:39:42.268367 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 02:39:42.268436 REASON stop
2022-04-18 02:39:42.268888 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:39:42.268941 REASON stop
