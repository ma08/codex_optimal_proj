2022-04-18 02:07:56.545880 """
Takahashi, who lives on the number line, is now at coordinate X. He will make exactly K moves of distance D in the positive or negative direction.
More specifically, in one move, he can go from coordinate x to x + D or x - D.
He wants to make K moves so that the absolute value of the coordinate of the destination will be the smallest possible.
Find the minimum possible absolute value of the coordinate of the destination.

-----Constraints-----
 - -10^{15} \leq X \leq 10^{15}
 - 1 \leq K \leq 10^{15}
 - 1Â \leq D \leq 10^{15}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
X K D

-----Output-----
Print the minimum possible absolute value of the coordinate of the destination.

-----Sample Input-----
6 2 4

-----Sample Output-----
2

Takahashi is now at coordinate 6. It is optimal to make the following moves:
 - Move from coordinate 6 to (6 - 4 =) 2.
 - Move from coordinate 2 to (2 - 4 =) -2.
Here, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.
"""
2022-04-18 02:07:56.545896 --------------------------
2022-04-18 02:08:26.046925 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n\n\n\"\"\"\nTakahashi is now at coordinate 6. It is optimal to make the following moves:\n - Move from coordinate 6 to (6 - 4 =) 2.\n - Move from coordinate 2 to (2 - 4 =) -2.\nHere, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\n\"\"\"\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\nprint(min(abs(X + D * K), abs(X - D * K)))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nX, K, D = map(int, input().split())\n\nif (K * D) > X:\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)\n    X = X % D\n    if K % 2 == 0:\n        print(abs(X))\n    else:\n        print(abs(X - D))"
    }
  ],
  "created": 1650247676,
  "id": "cmpl-4yB5w6NbHbDqU0vsWngRgsVILoTKY",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:08:26.047148 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n\n\n\"\"\"\nTakahashi is now at coordinate 6. It is optimal to make the following moves:\n - Move from coordinate 6 to (6 - 4 =) 2.\n - Move from coordinate 2 to (2 - 4 =) -2.\nHere, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\n\"\"\"\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))"
}
2022-04-18 02:08:26.047190 REASON stop
2022-04-18 02:08:26.048565 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\nprint(min(abs(X + D * K), abs(X - D * K)))"
}
2022-04-18 02:08:26.048652 REASON stop
2022-04-18 02:08:26.049142 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nX, K, D = map(int, input().split())\n\nif (K * D) > X:\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)\n    X = X % D\n    if K % 2 == 0:\n        print(abs(X))\n    else:\n        print(abs(X - D))"
}
2022-04-18 02:08:26.049191 REASON stop
