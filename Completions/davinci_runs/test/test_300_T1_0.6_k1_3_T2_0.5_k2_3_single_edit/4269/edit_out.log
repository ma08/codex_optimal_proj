2022-04-18 09:41:55.978097 num operations 1
2022-04-18 09:41:55.978117 size on input set 1
2022-04-18 09:41:59.021816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]: \n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    s = list(input())\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n    \n    \nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650274916,
  "object": "edit"
}
2022-04-18 09:41:59.022094 fix syntax errors 3 ['\n\ndef main():\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]: \n        print("Bad")\n    else:\n        print("Good")\n    \n    \nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    s = list(input())\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print("Bad")\n    else:\n        print("Good")\n    \n    \nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n\n    s = input()\n    \n    if s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n        print("Bad")\n    else:\n        print("Good")\n    \n    \nif __name__ == \'__main__\':\n    main()\n']
2022-04-18 09:41:59.022152 size on output set 3
2022-04-18 09:41:59.022168 num operations 1
2022-04-18 09:41:59.022177 size on input set 1
2022-04-18 09:42:03.510604 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # Read in the 4-digit number\n    s = input()\n    # Initialize the previous digit\n    p = 0\n    # Loop through each digit\n    for i in s:\n        # Check if the current digit is the same as the previous digit\n        if i == p:\n            # If so, then print Bad and exit\n            print(\"Bad\")\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print(\"Good\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read in the 4-digit number\n    s = raw_input()\n    # Initialize the previous digit\n    p = 0\n    # Loop through each digit\n    for i in s:\n        # Check if the current digit is the same as the previous digit\n        if i == p:\n            # If so, then print Bad and exit\n            print \"Bad\"\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print \"Good\"\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650274919,
  "object": "edit"
}
2022-04-18 09:42:03.510816 fix syntax errors 3 ['\ndef main():\n    # Read in the 4-digit number\n    s = input()\n    # Initialize the previous digit\n    p = 0\n    # Loop through each digit\n    for i in s:\n        # Check if the current digit is the same as the previous digit\n        if i == p:\n            # If so, then print Bad and exit\n            print("Bad")\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print("Good")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    # Read in the 4-digit number\n    s = raw_input()\n    # Initialize the previous digit\n    p = 0\n    # Loop through each digit\n    for i in s:\n        # Check if the current digit is the same as the previous digit\n        if i == p:\n            # If so, then print Bad and exit\n            print "Bad"\n            return\n        # Otherwise, set the previous digit to the current digit\n        p = i\n    # If no digit is the same as the previous digit, then print Good\n    print "Good"\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    print("Hello World")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-18 09:42:03.510864 size on output set 3
2022-04-18 09:42:03.510882 num operations 1
2022-04-18 09:42:03.510892 size on input set 1
2022-04-18 09:42:28.079686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer-----\n\nS = input()\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\nS = input()\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit() and S[0] != S[1] and S[1] != S[2] and S[2] != S[3]:\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n"
    },
    {
      "index": 2,
      "text": "# \n\n# -----Answer-----\n\nS = input()\n\n# \u5165\u529b\u3055\u308c\u308b\u6587\u5b57\u5217\u306e\u9577\u3055\u304c4\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3059\u308b\nif len(S) == 4:\n    # \u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u304c\u6570\u5b57\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # \u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3068\u305d\u306e\u4e00\u3064\u524d\u306e\u8981\u7d20\u3092\u6bd4\u8f03\u3057\u3066\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print(\"Bad\")\n        else:\n            print(\"Good\")\n    else:\n        print(\"Bad\")\nelse:\n    print(\"Bad\")\n"
    }
  ],
  "created": 1650274923,
  "object": "edit"
}
2022-04-18 09:42:28.079925 fix syntax errors 3 ['\n# -----Answer-----\n\nS = input()\n\n# 入力される文字列の長さが4であることを利用する\nif len(S) == 4:\n    # 文字列をリストに変換して、それぞれの要素が数字かどうかを判定する\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # リストに変換して、それぞれの要素とその一つ前の要素を比較して等しいかどうかを判定する\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print("Bad")\n        else:\n            print("Good")\n    else:\n        print("Bad")\nelse:\n    print("Bad")\n', '\n\n# -----Answer-----\n\nS = input()\n\n# 入力される文字列の長さが4であることを利用する\nif len(S) == 4:\n    # 文字列をリストに変換して、それぞれの要素が数字かどうかを判定する\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit() and S[0] != S[1] and S[1] != S[2] and S[2] != S[3]:\n        # リストに変換して、それぞれの要素とその一つ前の要素を比較して等しいかどうかを判定する\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print("Bad")\n        else:\n            print("Good")\n    else:\n        print("Bad")\nelse:\n    print("Bad")\n', '# \n\n# -----Answer-----\n\nS = input()\n\n# 入力される文字列の長さが4であることを利用する\nif len(S) == 4:\n    # 文字列をリストに変換して、それぞれの要素が数字かどうかを判定する\n    if S[0].isdigit() and S[1].isdigit() and S[2].isdigit() and S[3].isdigit():\n        # リストに変換して、それぞれの要素とその一つ前の要素を比較して等しいかどうかを判定する\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[3]:\n            print("Bad")\n        else:\n            print("Good")\n    else:\n        print("Bad")\nelse:\n    print("Bad")\n']
2022-04-18 09:42:28.080101 size on output set 3
