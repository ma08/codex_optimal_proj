["print(\"Hello World\")\n", "\n# n = int(input())\n# s = input()\n\nn = 6\ns = '(((())'\n\n# n = 6\n# s = '()()()'\n\n# n = 1\n# s = ')'\n\n# n = 8\n# s = ')))(((((('\n\ncount_open = 0\ncount_close = 0\nres = 0\n\nfor i in s:\n\tif i == '(':\n\t\tcount_open += 1\n\telse:\n\t\tcount_close += 1\n\t\tif count_close > count_open:\n\t\t\tres += 1\n\t\t\tcount_open, count_close = count_close, count_open\n\nprint(res)\n", "\n\n\nn = int(input())\ns = input()\n\n# n = 6\n# s = '(((())'\n\n# n = 6\n# s = '()()()'\n\n# n = 1\n# s = ')'\n\n# n = 8\n# s = ')))(((((('\n\ncount_open = 0\ncount_close = 0\nres = 0\n\nfor i in s:\n\tif i == '(':\n\t\tcount_open += 1\n\telse:\n\t\tcount_close += 1\n\t\tif count_close > count_open:\n\t\t\tres += 1\n\t\t\tcount_open += count_close\n\t\t\tcount_close = 0\n\nprint(res)\n", "\nn = int(input())\ns = input()\n\ncounts = [0, 0]\nfor i in range(n):\n    counts[0 if s[i] == '(' else 1] += 1\n\nif counts[0] != counts[1]:\n    print(0)\nelse:\n    print(n // 2)\n", "def get_closing_bracket_positions(s):\n    closing_brackets = []\n    for i, bracket in enumerate(s):\n        if bracket == \")\":\n            closing_brackets.append(i)\n    return closing_brackets\n\n\ndef get_opening_bracket_positions(s):\n    opening_brackets = []\n    for i, bracket in enumerate(s):\n        if bracket == \"(\":\n            opening_brackets.append(i)\n    return opening_brackets\n\n\ndef get_number_of_brackets_to_change(s):\n    opening_brackets = get_opening_bracket_positions(s)\n    closing_brackets = get_closing_bracket_positions(s)\n\n    number_of_brackets = 0\n\n    while len(opening_brackets) > 0 and len(closing_brackets) > 0:\n        if opening_brackets[0] < closing_brackets[0]:\n            opening_brackets.pop(0)\n        else:\n            number_of_brackets += 1\n            closing_brackets.pop(0)\n\n    return number_of_brackets\n\nif __name__ == \"__main__\":\n    s = input()\n    print(get_number_of_brackets_to_change(s))\n", "\n\nn = int(input())\ns = input()\n\ncounts = [0, 0]\nfor i in range(n):\n    counts[0 if s[i] == '(' else 1] += 1\n\nif counts[0] != counts[1]:\n    print(0)\nelse:\n    print(n // 2 - 1)\n", "\ndef get_closing_bracket_positions(s):\n    closing_brackets = []\n    for i, bracket in enumerate(s):\n        if bracket == \")\":\n            closing_brackets.append(i)\n    return closing_brackets\n\n\ndef get_opening_bracket_positions(s):\n    opening_brackets = []\n    for i, bracket in enumerate(s):\n        if bracket == \"(\":\n            opening_brackets.append(i)\n    return opening_brackets\n\n\ndef get_number_of_brackets_to_change(s):\n    opening_brackets = get_opening_bracket_positions(s)\n    closing_brackets = get_closing_bracket_positions(s)\n\n    number_of_brackets = 0\n\n    while len(opening_brackets) > 0 and len(closing_brackets) > 0:\n        if opening_brackets[0] < closing_brackets[0]:\n            opening_brackets.pop(0)\n        else:\n            number_of_brackets += 1\n            closing_brackets.pop(0)\n    return number_of_brackets\n\nif __name__ == \"__main__\":\n    s = input()\n    print(get_number_of_brackets_to_change(s))\n", "\n\n\n# n = int(input())\n# s = input()\n\n# n = 6\n# s = '(((())'\n\nn = 6\ns = '()()()'\n\n# n = 1\n# s = ')'\n\n# n = 10\n# s = '((((((()'\n\ncount = 0\nres = 0\n\nfor i in s:\n\tif i == '(':\n\t\tcount += 1\n\telse:\n\t\tcount -= 1\n\t\tif count < 0:\n\t\t\tres += 1\n\t\t\tcount = 0\n\nprint(res)\n"]