2022-04-18 08:47:24.507275 num operations 1
2022-04-18 08:47:24.507301 size on input set 1
2022-04-18 08:47:30.867927 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == (arr[i]+arr[j])//2:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\narr = list(map(int,input().split()))\nmax_ele = max(arr)\nmin_ele = min(arr)\narr.remove(max_ele)\narr.remove(min_ele)\n\nprint(max_ele,min_ele)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef findPairs(arr, n, m):\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if m == arr[(i+j)//2] and arr[i] != arr[j]:\n                count += 1\n    return count\n\n\nn, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nprint(findPairs(arr, n, m))\n"
    }
  ],
  "created": 1650271644,
  "object": "edit"
}
2022-04-18 08:47:30.868199 fix syntax errors 3 ['\n\ndef findPairs(arr,n,m):\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if m == (arr[i]+arr[j])//2:\n                count += 1\n    return count\n\nn,m = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprint(findPairs(arr,n,m))\n', '\n\nn = int(input())\narr = list(map(int,input().split()))\nmax_ele = max(arr)\nmin_ele = min(arr)\narr.remove(max_ele)\narr.remove(min_ele)\n\nprint(max_ele,min_ele)\n', '\n\ndef findPairs(arr, n, m):\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if m == arr[(i+j)//2] and arr[i] != arr[j]:\n                count += 1\n    return count\n\n\nn, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nprint(findPairs(arr, n, m))\n']
2022-04-18 08:47:30.868229 size on output set 3
2022-04-18 08:47:30.868240 num operations 1
2022-04-18 08:47:30.868246 size on input set 1
2022-04-18 08:47:33.812246 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n"
    }
  ],
  "created": 1650271650,
  "object": "edit"
}
2022-04-18 08:47:33.812418 fix syntax errors 3 ['\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n', '\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n', '\ndef solve(n, m, p):\n    dp = [0] * (n + 1)\n\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if p[j - 1] == m:\n                dp[j] += 1\n\n    return sum(dp)\n\n\nif __name__ == "__main__":\n    n, m = [int(i) for i in input().split()]\n    p = [int(i) for i in input().split()]\n\n    print(solve(n, m, p))\n']
2022-04-18 08:47:33.812448 size on output set 2
2022-04-18 08:47:33.812459 num operations 1
2022-04-18 08:47:33.812464 size on input set 1
2022-04-18 08:47:39.002246 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(n):\n        sorted_list[i + 1] = i + 1\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * \\\n                 same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n\n    sorted_list[0] = 0\n\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650271653,
  "object": "edit"
}
2022-04-18 08:47:39.002488 fix syntax errors 3 ["\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    sorted_list[0] = 0\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef build_sorted_list(n):\n    sorted_list = [None] * (n + 2)\n    for i in range(n):\n        sorted_list[i + 1] = i + 1\n    return sorted_list\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = build_sorted_list(n)\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * \\\n                 same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef count_pairs(p):\n    n = len(p)\n    sorted_list = [None] * (n + 2)\n    for i in range(1, n + 1):\n        sorted_list[i] = i\n\n    sorted_list[0] = 0\n\n    sorted_list[n + 1] = n + 1\n    same_elements_count = [0] * (n + 2)\n    same_elements_count[0] = 1\n    same_elements_count[n + 1] = 1\n    pairs = 0\n\n    for i in range(n):\n        current_element = p[i]\n        sorted_list_position = sorted_list[current_element]\n        pairs += (i + 1 - same_elements_count[sorted_list_position - 1]) * same_elements_count[sorted_list_position + 1]\n        sorted_list[sorted_list_position] = sorted_list_position - same_elements_count[sorted_list_position - 1]\n\n        same_elements_count[sorted_list_position - 1] += 1\n        same_elements_count[sorted_list_position + 1] -= 1\n\n    return pairs\n\ndef main():\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(count_pairs(p))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 08:47:39.002745 size on output set 3
