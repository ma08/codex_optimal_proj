2022-04-18 09:06:52.446868 num operations 1
2022-04-18 09:06:52.446889 size on input set 1
2022-04-18 09:06:58.542181 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\nimport numpy as np\n\nN, M = map(int, input().split())\nx_list = list(map(int, input().split()))\n\nx_list.sort()\n\ndiff_list = [x_list[i+1]-x_list[i] for i in range(M-1)]\ndiff_list.sort()\n\nif M > N:\n    print(sum(diff_list[:(M-N)]))\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n"
    }
  ],
  "created": 1650272812,
  "object": "edit"
}
2022-04-18 09:06:58.542365 fix syntax errors 3 ['\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += 1\n\nprint(count)\n', '\n\nimport math\nimport numpy as np\n\nN, M = map(int, input().split())\nx_list = list(map(int, input().split()))\n\nx_list.sort()\n\ndiff_list = [x_list[i+1]-x_list[i] for i in range(M-1)]\ndiff_list.sort()\n\nif M > N:\n    print(sum(diff_list[:(M-N)]))\nelse:\n    print(0)\n', '\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)\n']
2022-04-18 09:06:58.542388 size on output set 3
2022-04-18 09:06:58.542398 num operations 1
2022-04-18 09:06:58.542403 size on input set 1
2022-04-18 09:07:22.048790 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i + 1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nsys.setrecursionlimit(10 ** 7)\nrl = sys.stdin.readline\n\n\ndef solve():\n    N = int(rl())\n    h = list(map(int, rl().split()))\n    \n    # h_i - i\u3092\u6c42\u3081\u308b\n    tmp = [0] * N\n    for i in range(N):\n        tmp[i] = h[i] - (i + 1)\n    \n    # tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n    # tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n    # \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\n    tmp_dict = {}\n    for i in range(N):\n        if tmp[i] in tmp_dict:\n            tmp_dict[tmp[i]].append(i)\n        else:\n            tmp_dict[tmp[i]] = [i]\n    \n    # \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n    for key in tmp_dict.keys():\n        tmp_dict[key].sort()\n    \n    # \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\n    ans = []\n    for key in tmp_dict.keys():\n        tmp_list = []\n        for i in range(len(tmp_dict[key])):\n            if i == 0:\n                tmp_list.append(tmp_dict[key][i])\n                tmp_list.append(tmp_dict[key][i])\n            elif tmp_dict[key][i - 1] + 1 == tmp_dict[key][i]:\n                tmp_list[1] = tmp_dict[key][i]\n            else:\n                ans.append(tmp_list)\n                tmp_list = []\n                tmp_list.append(tmp_dict[key][i])\n                tmp_list.append(tmp_dict[key][i])\n        ans.append(tmp_list)\n    \n    print(len(ans))\n\n\n\nN = int(input())\nsolve()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n"
    }
  ],
  "created": 1650272818,
  "object": "edit"
}
2022-04-18 09:07:22.049012 fix syntax errors 3 ['\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i + 1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n', 'import sys\n\nsys.setrecursionlimit(10 ** 7)\nrl = sys.stdin.readline\n\n\ndef solve():\n    N = int(rl())\n    h = list(map(int, rl().split()))\n    \n    # h_i - iを求める\n    tmp = [0] * N\n    for i in range(N):\n        tmp[i] = h[i] - (i + 1)\n    \n    # tmpの値が同じものはまとめる\n    # tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n    # まとめた後、番号の小さいものから順にまとめる\n    tmp_dict = {}\n    for i in range(N):\n        if tmp[i] in tmp_dict:\n            tmp_dict[tmp[i]].append(i)\n        else:\n            tmp_dict[tmp[i]] = [i]\n    \n    # 同じ値のものをまとめる\n    for key in tmp_dict.keys():\n        tmp_dict[key].sort()\n    \n    # 同じ値のものをまとめたものを出力する\n    ans = []\n    for key in tmp_dict.keys():\n        tmp_list = []\n        for i in range(len(tmp_dict[key])):\n            if i == 0:\n                tmp_list.append(tmp_dict[key][i])\n                tmp_list.append(tmp_dict[key][i])\n            elif tmp_dict[key][i - 1] + 1 == tmp_dict[key][i]:\n                tmp_list[1] = tmp_dict[key][i]\n            else:\n                ans.append(tmp_list)\n                tmp_list = []\n                tmp_list.append(tmp_dict[key][i])\n                tmp_list.append(tmp_dict[key][i])\n        ans.append(tmp_list)\n    \n    print(len(ans))\n\n\n\nN = int(input())\nsolve()\n', '\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - iを求める\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmpの値が同じものはまとめる\n# tmpの値をkeyとする辞書を作り、同じ値のものをまとめる\n# まとめた後、番号の小さいものから順にまとめる\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# 同じ値のものをまとめる\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# 同じ値のものをまとめたものを出力する\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))\n']
2022-04-18 09:07:22.049195 size on output set 3
2022-04-18 09:07:22.049209 num operations 1
2022-04-18 09:07:22.049214 size on input set 1
2022-04-18 09:07:24.334069 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nh = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\nprint(ans)\n"
    }
  ],
  "created": 1650272842,
  "object": "edit"
}
2022-04-18 09:07:24.334245 fix syntax errors 3 ['\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)\n', '\nN = int(input())\nh = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\nprint(ans)\n']
2022-04-18 09:07:24.334278 size on output set 3
