["import collections\n\nn, x = map(int, input().split())\nq = int(input())\nquery_list = [input().split() for _ in range(q)]\nl_list = list(map(int, input().split()))\n\ncoord_list = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    coord_list[i] = coord_list[i - 1] + l_list[i - 1]\n\nprint(len(list(filter(lambda x: x <= x, coord_list))))\n", "\ndef main():\n    n, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    cnt = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda coord: coord <= x, coord_list))))\n", "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(c // min(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count + 1)\n", "\n\nn, x = map(int, input().split())\nl_list = list(map(int, input().split()))\n\ncoord_list = [0]\n\nfor i in range(n):\n    coord_list.append(coord_list[i] + l_list[i])\n\nprint(len(list(filter(lambda i: i <= x, coord_list))))\n", "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\n\nfor i in range(n-1):\n    d += l[i]\n    if d <= x:\n        count += 1\n\nprint(count)\n", "\nn, x = map(int, input().split())\nl = list(map(int, input().split()))\n\ncount = 0\nd = 0\nprint(d)\nfor i in range(n):\n    d += l[i]\n    if d <= x:\nprint(d)\n        count += 1\n\nprint(count + 1)\n"]