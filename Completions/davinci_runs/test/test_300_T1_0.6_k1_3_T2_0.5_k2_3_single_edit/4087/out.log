2022-04-18 02:15:50.613878 """
Polycarp knows that if the sum of the digits of a number is divisible by $3$, then the number itself is divisible by $3$. He assumes that the numbers, the sum of the digits of which is divisible by $4$, are also somewhat interesting. Thus, he considers a positive integer $n$ interesting if its sum of digits is divisible by $4$.

Help Polycarp find the nearest larger or equal interesting number for the given number $a$. That is, find the interesting number $n$ such that $n \ge a$ and $n$ is minimal.


-----Input-----

The only line in the input contains an integer $a$ ($1 \le a \le 1000$).


-----Output-----

Print the nearest greater or equal interesting number for the given number $a$. In other words, print the interesting number $n$ such that $n \ge a$ and $n$ is minimal.


-----Examples-----
Input
432

Output
435

Input
99

Output
103

Input
237

Output
237

Input
42

Output
44
"""
2022-04-18 02:15:50.613892 --------------------------
2022-04-18 02:16:20.162156 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef get_digit_sum(n):\n\t\"\"\"\n\tReturn the sum of the digits of n\n\t\"\"\"\n\tdigit_sum = 0\n\twhile n > 0:\n\t\tdigit_sum += n % 10\n\t\tn /= 10\n\treturn digit_sum\n\ndef is_interesting(n):\n\t\"\"\"\n\tReturn True if the sum of the digits of n is divisible by 4\n\t\"\"\"\n\treturn get_digit_sum(n) % 4 == 0\n\ndef get_nearest_interesting(n):\n\t\"\"\"\n\tReturn the nearest interesting number greater or equal to n\n\t\"\"\"\n\tif is_interesting(n):\n\t\treturn n\n\telif is_interesting(n + 1):\n\t\treturn n + 1\n\telse:\n\t\treturn get_nearest_interesting(n + 1)\n\nn = int(raw_input())\nprint get_nearest_interesting(n)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef sumDigits(n):\n    return sum(map(int, list(str(n))))\n\ndef isInteresting(n):\n    return sumDigits(n) % 4 == 0\n\na = int(input())\n\nif isInteresting(a):\n    print(a)\nelse:\n    print(a + (4 - (sumDigits(a) % 4)))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Getting input\na = int(input())\n\n\n# Defining function for checking if a number is interesting\ndef is_interesting(n):\n    \"\"\"\n    Returns true if number is interesting else returns false.\n    \"\"\"\n    return int(sum(list(map(int, list(str(n))))) % 4) == 0\n\n\n# Finding the nearest interesting number\nn = a\nwhile not is_interesting(n):\n    n += 1\n\n# Printing the answer\nprint(n)"
    }
  ],
  "created": 1650248151,
  "id": "cmpl-4yBDb3Z8jg3JS2i0LqNsbQHj9rOQL",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:16:20.162378 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef get_digit_sum(n):\n\t\"\"\"\n\tReturn the sum of the digits of n\n\t\"\"\"\n\tdigit_sum = 0\n\twhile n > 0:\n\t\tdigit_sum += n % 10\n\t\tn /= 10\n\treturn digit_sum\n\ndef is_interesting(n):\n\t\"\"\"\n\tReturn True if the sum of the digits of n is divisible by 4\n\t\"\"\"\n\treturn get_digit_sum(n) % 4 == 0\n\ndef get_nearest_interesting(n):\n\t\"\"\"\n\tReturn the nearest interesting number greater or equal to n\n\t\"\"\"\n\tif is_interesting(n):\n\t\treturn n\n\telif is_interesting(n + 1):\n\t\treturn n + 1\n\telse:\n\t\treturn get_nearest_interesting(n + 1)\n\nn = int(raw_input())\nprint get_nearest_interesting(n)"
}
2022-04-18 02:16:20.162420 REASON stop
2022-04-18 02:16:20.210354 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef sumDigits(n):\n    return sum(map(int, list(str(n))))\n\ndef isInteresting(n):\n    return sumDigits(n) % 4 == 0\n\na = int(input())\n\nif isInteresting(a):\n    print(a)\nelse:\n    print(a + (4 - (sumDigits(a) % 4)))"
}
2022-04-18 02:16:20.210432 REASON stop
2022-04-18 02:16:20.210903 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Getting input\na = int(input())\n\n\n# Defining function for checking if a number is interesting\ndef is_interesting(n):\n    \"\"\"\n    Returns true if number is interesting else returns false.\n    \"\"\"\n    return int(sum(list(map(int, list(str(n))))) % 4) == 0\n\n\n# Finding the nearest interesting number\nn = a\nwhile not is_interesting(n):\n    n += 1\n\n# Printing the answer\nprint(n)"
}
2022-04-18 02:16:20.210972 REASON stop
