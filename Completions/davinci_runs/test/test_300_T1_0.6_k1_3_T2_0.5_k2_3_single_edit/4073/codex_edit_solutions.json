["#!/usr/bin/python\n\n# for each possible number of people,\n# determine whether it is possible to have\n# exactly that many people\n\ndef solve(a):\n\tn = len(a)\n\tb = [0]\n\tfor i in range(n):\n\t\tb.append(b[i] + a[i])\n\t\tb.append(b[i] - a[i])\n\tb.sort()\n\tc = [0]\n\tfor i in range(1, len(b)):\n\t\tif b[i] != b[i-1]:\n\t\t\tc.append(b[i])\n\tm = len(c)\n\t# dp[i][j] = whether it's possible to have j people\n\t# and use people from the first i groups\n\tdp = [[False for j in range(m)] for i in range(n)]\n\tfor i in range(n):\n\t\tdp[i][0] = True\n\tfor i in range(n):\n\t\tfor j in range(1, m):\n\t\t\tdp[i][j] = dp[i][j-1] or (dp[i-1][j-1] and c[j] == c[j-1] + a[i])\n\tfor j in range(m):\n\t\tif dp[n-1][j]:\n\t\t\treturn j + 1\n\nif __name__ == '__main__':\n\tn = int(raw_input())\n\ta = map(int, raw_input().split())\n\tprint solve(a)\n", "\n#!/bin/python3\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Compute and print answer\nprint(sum(a) - n)\n", "def solve(a):\n    n = len(a)\n    b = [0]\n    for i in range(n):\n        b.append(b[i] + a[i])\n        b.append(b[i] - a[i])\n    b.sort()\n    c = [0]\n    for i in range(1, len(b)):\n        if b[i] != b[i-1]:\n            c.append(b[i])\n    m = len(c)\n    # dp[i][j] = whether it's possible to have j people\n    # and use people from the first i groups\n    dp = [[False for j in range(m)] for i in range(n)]\n    for i in range(n):\n        dp[i][0] = True\n    for i in range(n):\n        for j in range(1, m):\n            dp[i][j] = dp[i][j-1] or (dp[i-1][j-1] and c[j] == c[j-1] + a[i])\n    for j in range(m):\n        if dp[n-1][j]:\n            return j + 1\n\n\nn = int(raw_input())\na = map(int, raw_input().split())\nprint solve(a)\n", "\n\n# for each possible number of people,\n# determine whether it is possible to have\n# exactly that many people\n\ndef solve(a):\n\tn = len(a)\n\tb = [0]\n\tfor i in range(n):\n\t\tb.append(b[i] + a[i])\n\t\tb.append(b[i] - a[i])\n\tb.sort()\n\tc = [0]\n\tfor i in range(1, len(b)):\n\t\tif b[i] != b[i-1]:\n\t\t\tc.append(b[i])\n\tm = len(c)\n\t# dp[i][j] = whether it's possible to have j people\n\t# and use people from the first i groups\n\tdp = [[False for j in range(m)] for i in range(n)]\n\tfor i in range(n):\n\t\tdp[i][0] = True\n\tfor i in range(1, n):\n\t\tfor j in range(1, m):\n\t\t\tdp[i][j] = dp[i][j-1] or (dp[i-1][j-1] and c[j] == c[j-1] + a[i])\n\tfor j in range(m):\n\t\tif dp[n-1][j]:\n\t\t\treturn j + 1\n\t\t\t\nn = int(raw_input())\na = map(int, raw_input().split())\nprint solve(a)\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    result = 2\n    for i in range(1, n):\n        if a[i-1] + 1 == a[i]:\n            result += 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Compute and print answer\nprint(sum(a) - n)\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    result = 2\n    for i in range(1, n):\n        if a[i-1] + 1 == a[i]:  # \uac00\uc7a5 \uc9e7\uc740 \uae38\uc774\ub97c \ucc3e\ub294 \ubb38\uc81c.\n            result += 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    result = 2\n    for i in range(1, n):\n        if a[i - 1] + 1 == a[i]:\n            result += 1\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n"]