["\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n", "\n#\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[-1] < 0:\n        return n\n    if a[0] == a[-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[-1])\n\nprint(solve(n, a, b))\n", "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == [2, 4, 3]\nassert s.solve([13, 37, 39], [1, 2, 3]) == [13, 37]\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == [0, 0, 0, 0]\nassert s.solve([1, 2, -1], [-6, -12, 6]) == [-6, -12, 6]\n", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\ndef solve(n, a, b):\n    pos = [[] for _ in range(n)]\n    neg = [[] for _ in range(n)]\n    zero = [[] for _ in range(n)]\n    for i in range(n):\n        if b[i] > 0:\n            pos[i].append(b[i] / a[i])\n        elif b[i] < 0:\n            neg[i].append(b[i] / a[i])\n        else:\n            zero[i].append(i)\n\n    for i in range(n):\n        pos[i].sort()\n        neg[i].sort()\n\n    dp = [[[-1 for _ in range(2)] for _ in range(2)] for _ in range(n)]\n    res = dfs(0, 0, 0, n, pos, neg, zero, dp)\n    return res\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\n# assert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n# assert s.solve([13, 37, 39], [1, 2, 3]) == 2\n# assert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\n# assert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n"]