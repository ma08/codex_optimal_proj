2022-04-18 08:46:50.487483 num operations 1
2022-04-18 08:46:50.487506 size on input set 1
2022-04-18 08:46:54.656342 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - max/2,\n# then filling in the max,\n# then filling in the sum of m - max/2,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m // 2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max, then filling in the sum of m - max,\n# then filling in the max, then filling in the sum of m - max, and so on, until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - 2 * max,\n# then filling in the max,\n# then filling in the sum of m - 2 * max,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"
    }
  ],
  "created": 1650271610,
  "object": "edit"
}
2022-04-18 08:46:54.656662 fix syntax errors 3 ["\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - max/2,\n# then filling in the max,\n# then filling in the sum of m - max/2,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m // 2)\n", "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max, then filling in the sum of m - max,\n# then filling in the max, then filling in the sum of m - max, and so on, until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n", "\n\n# SOLUTION\n# Use pen and paper to visualize the problem\n# We want to maximize the sum of absolute differences between adjacent elements\n# The sum of the elements of the array is m\n# Let's say the max is x. Then we have m - x = x.\n# The max can be no more than half the sum of m\n# We can build the array by filling in the max,\n# then filling in the sum of m - 2 * max,\n# then filling in the max,\n# then filling in the sum of m - 2 * max,\n# and so on,\n# until we reach the last element.\n# We can do this because the sum of the array is m which is an even number\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m - 1)\n"]
2022-04-18 08:46:54.656701 size on output set 3
2022-04-18 08:46:54.656713 num operations 1
2022-04-18 08:46:54.656719 size on input set 1
2022-04-18 08:47:08.098415 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef add_num(arr, num):\n    if not arr:\n        arr.append(num)\n        return arr\n    if num == 0:\n        arr.append(num)\n        return arr\n    if num < arr[-1]:\n        arr.append(num)\n        return arr\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr[i] = num\n            return arr\n        if arr[i] > num:\n            arr[i] = num\n            return arr\n    arr.append(num)\n    return arr\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = []\n        while m > 0:\n            if m > n-1:\n                arr = add_num(arr, n-1)\n                m -= n-1\n            else:\n                arr = add_num(arr, m)\n                break\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-1)\n        if m > n-1:\n            arr.append(m - (n-1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-1)\n        if m > n-1:\n            arr.append(m - (n-1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# def add_num(arr, num):\n#     if not arr:\n#         arr.append(num)\n#         return arr\n#     if num == 0:\n#         arr.append(num)\n#         return arr\n#     if num < arr[-1]:\n#         arr.append(num)\n#         return arr\n#     for i in range(len(arr)):\n#         if arr[i] == 0:\n#             arr[i] = num\n#             return arr\n#         if arr[i] > num:\n#             arr[i] = num\n#             return arr\n#     arr.append(num)\n#     return arr\n\n# def main():\n#     t = int(input())\n#     for _ in range(t):\n#         n, m = list(map(int, input().split()))\n#         arr = []\n#         while m > 0:\n#             if m > n-1:\n#                 arr = add_num(arr, n-1)\n#                 m -= n-1\n#             else:\n#                 arr = add_num(arr, m)\n#                 break\n#         print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-2)\n        if m > n-2:\n            arr.append(m - (n-2))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650271614,
  "object": "edit"
}
2022-04-18 08:47:08.098613 fix syntax errors 3 ['\n\ndef add_num(arr, num):\n    if not arr:\n        arr.append(num)\n        return arr\n    if num == 0:\n        arr.append(num)\n        return arr\n    if num < arr[-1]:\n        arr.append(num)\n        return arr\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr[i] = num\n            return arr\n        if arr[i] > num:\n            arr[i] = num\n            return arr\n    arr.append(num)\n    return arr\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = []\n        while m > 0:\n            if m > n-1:\n                arr = add_num(arr, n-1)\n                m -= n-1\n            else:\n                arr = add_num(arr, m)\n                break\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-1)\n        if m > n-1:\n            arr.append(m - (n-1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-1)\n        if m > n-1:\n            arr.append(m - (n-1))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n# def add_num(arr, num):\n#     if not arr:\n#         arr.append(num)\n#         return arr\n#     if num == 0:\n#         arr.append(num)\n#         return arr\n#     if num < arr[-1]:\n#         arr.append(num)\n#         return arr\n#     for i in range(len(arr)):\n#         if arr[i] == 0:\n#             arr[i] = num\n#             return arr\n#         if arr[i] > num:\n#             arr[i] = num\n#             return arr\n#     arr.append(num)\n#     return arr\n\n# def main():\n#     t = int(input())\n#     for _ in range(t):\n#         n, m = list(map(int, input().split()))\n#         arr = []\n#         while m > 0:\n#             if m > n-1:\n#                 arr = add_num(arr, n-1)\n#                 m -= n-1\n#             else:\n#                 arr = add_num(arr, m)\n#                 break\n#         print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = list(map(int, input().split()))\n        arr = [1]*(n-2)\n        if m > n-2:\n            arr.append(m - (n-2))\n        else:\n            arr[-1] = m\n        print(sum([abs(arr[i+1] - arr[i]) for i in range(len(arr)-1)]))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-18 08:47:08.098772 size on output set 3
2022-04-18 08:47:08.098788 num operations 1
2022-04-18 08:47:08.098794 size on input set 1
2022-04-18 08:47:10.352516 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n"
    },
    {
      "index": 1,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n"
    },
    {
      "index": 2,
      "text": "\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n <= 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n"
    }
  ],
  "created": 1650271628,
  "object": "edit"
}
2022-04-18 08:47:10.352742 fix syntax errors 3 ['\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n', '\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n == 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n', '\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n <= 1:\n        print(0)\n    else:\n        print(m * 2 - n)\n']
2022-04-18 08:47:10.352781 size on output set 2
