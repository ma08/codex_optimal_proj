["# -*- coding: utf-8 -*-\n\n\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n", "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    # bit\u5168\u63a2\u7d22\n    # \u5168\u554f\u6b63\u89e3\u3057\u305f\u5834\u5408\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 1000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nn, k = list(map(int, sys.stdin.readline().split()))\na = list(map(int, sys.stdin.readline().split()))\n\na.sort(reverse=True)\nprint(a[k - 1])\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n", "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p, c = list(map(int, sys.stdin.readline().split()))\n    p_c.append((p, c, i))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n", "\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"]