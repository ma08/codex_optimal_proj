["\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())  # \uacf5\uc5f0\uc7a5 \ud06c\uae30\nm = int(input())  # \uc0ac\ub78c \uc218\nk = int(input())  # \uc88c\uc11d \uc218\n\n# \ube48\uc790\ub9ac\ub97c \ucc3e\uc544\uc11c \ub123\ub294\ub2e4.\n# \uc5f0\uc18d\uc73c\ub85c \uba87 \uc790\ub9ac \ube44\uc6cc\uc57c \ud558\ub294\uc9c0 \uacc4\uc0b0\ud574\uc57c \ud55c\ub2e4.\n\nseat = [0] * n\nfor i in range(m):\n    seat[int(input()) - 1] = 1\n\nans = 0\nstart = 0\nend = 0\n\nwhile end < n:\n    if seat[end] == 0:\n        end += 1\n    else:\n        length = end - start\n        if length > k:\n            ans += length - k\n        end += 1\n        start = end\n\nlength = end - start\nif length > k:\n    ans += length - k\n\nprint(ans)\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"]