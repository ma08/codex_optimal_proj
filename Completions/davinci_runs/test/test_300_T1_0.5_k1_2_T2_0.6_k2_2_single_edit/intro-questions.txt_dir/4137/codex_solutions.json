["\n\nimport sys, re\n\ndef solve(expr):\n    result = eval(expr)\n    print(result)\n    return result\n\ndef bf_solve(expr):\n    result = eval(expr)\n    # print(result)\n    return result\n\ndef encode(expr):\n    result = bf_solve(expr)\n    print(result)\n\ndef main():\n    expr = sys.stdin.readline().strip()\n    # print(expr)\n    solve(expr)\n    # encode(expr)\n\nif __name__ == '__main__':\n    main()", "\n\nimport re\n\ndef brainfuck(expr):\n    expr = re.sub(r'([0-9]+)([+-])', r'\\1 \\2', expr)\n    expr = re.sub(r'([+-])([0-9]+)', r'\\1 \\2', expr)\n    expr = re.sub(r'([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10 \\11 \\12', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10 \\11 \\12 \\13 \\14', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10 \\11 \\12 \\13 \\14 \\15 \\16', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10 \\11 \\12 \\13 \\14 \\15 \\16 \\17 \\18', expr)\n    expr = re.sub(r'([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)([+-])([0-9]+)', r'\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\10 \\11 \\12 \\13 \\14 \\15 \\16 \\17 \\18 \\19 \\20', expr)\n    expr = expr.split()\n    result = 0\n    for i in range(0, len(expr), 2):\n        if expr[i] == '+':\n            result += int(expr[i+1])\n        else:\n            result -= int(expr[i+1])\n    expr = ' ' + expr[0] + ' '\n    for i in range(1, len(expr), 2):\n        expr = expr[:i] + ' ' + expr[i] + ' '\n    while '  ' in expr:\n        expr = expr.replace('  ', ' ')\n    expr = expr.split()\n    result_bf = ''\n    for i in range(len(expr)):\n        if expr[i] == '+':\n            result_bf += '+'\n        elif expr[i] == '-':\n            result_bf += '-'\n        else:\n            result_bf += '>'\n    result_bf += '>'\n    result_bf += '<' * len(expr)\n    result_bf += '['\n    for i in range(len(expr)):\n        if expr[i] == '+':\n            result_bf += '<+>'\n        elif expr[i] == '-':\n            result_bf += '<->'\n    result_bf += '-]<'\n    result_bf += '+' * result\n    result_bf += '.'\n    return result_bf\n\ndef main():\n    expr = input()\n    print(brainfuck(expr))\n\nif __name__ == '__main__':\n    main()"]