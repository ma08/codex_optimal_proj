2022-04-20 20:19:48.544157 num operations 1
2022-04-20 20:19:48.544174 size on input set 1
2022-04-20 20:19:48.544331 using api key jaanu
2022-04-20 20:19:55.013874 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\nT = input()\n\nans = len(T)\nfor i in range(len(T)-len(S)+1):\n    count = 0\n    for j in range(len(S)):\n        if T[i+j] != S[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# \u6587\u5b57\u5217\u306e\u90e8\u5206\u6587\u5b57\u5217\u3092\u6c42\u3081\u308b\u554f\u984c\u3067\u306f\uff0c\u6a2a\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3092\u7e26\u65b9\u5411\u306e\u30eb\u30fc\u30d7\u3068\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\uff0e\n"
    }
  ],
  "created": 1650485988,
  "object": "edit"
}
2022-04-20 20:19:55.014132 fix syntax errors 2 ['\n\nS = input()\nT = input()\n\nans = len(T)\nfor i in range(len(T)-len(S)+1):\n    count = 0\n    for j in range(len(S)):\n        if T[i+j] != S[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，横方向のループを縦方向のループとすることで，効率的に解くことができる．\n', '\n\nS = input()\nT = input()\n\nans = len(S)\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            count += 1\n    ans = min(ans, count)\n\nprint(ans)\n\n# 文字列の部分文字列を求める問題では，横方向のループを縦方向のループとすることで，効率的に解くことができる．．\n']
2022-04-20 20:19:55.014170 size on output set 2
2022-04-20 20:19:55.014183 num operations 1
2022-04-20 20:19:55.014188 size on input set 1
2022-04-20 20:19:55.014350 using api key sourya
2022-04-20 20:19:55.053980 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:19:56.555863 using api key gabby
2022-04-20 20:19:56.596102 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 20:19:59.599587 using api key soukgp
2022-04-20 20:20:03.412018 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if t[i] in s:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650485999,
  "object": "edit"
}
2022-04-20 20:20:03.412282 fix syntax errors 2 ["\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if s[i] != t[i]:\n            count += 1\n\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef min_changes(s, t):\n    count = 0\n    for i in range(len(t)):\n        if t[i] in s:\n            count += 1\n    return count\n\ndef main():\n    s = input()\n    t = input()\n    print(min_changes(s, t))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:20:03.412318 size on output set 2
