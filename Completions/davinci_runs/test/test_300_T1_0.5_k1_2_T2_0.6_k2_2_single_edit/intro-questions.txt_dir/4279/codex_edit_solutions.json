["\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    \n    num = 3\n    start = 3\n    end = 6\n    while num < k:\n        num += 1\n        if num > k:\n            return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    num += 1\n    if num > k:\n        return find(k - (num - 1) + 1)\n    \n    return find(k - (num - 1) + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\n\ndef get_digits(n):\n    return [int(i) for i in str(n)]\n\n\ndef is_lucky(n):\n    digits = get_digits(n)\n    for i in digits:\n        if i != 4 and i != 7:\n            return False\n    return True\n\n\ndef is_lucky_or_almost(n):\n    if is_lucky(n):\n        return True\n\n    digits = get_digits(n)\n    for i in range(len(digits)):\n        if digits[i] == 4 or digits[i] == 7:\n            continue\n        if is_lucky(n - digits[i]):\n            return True\n\n    return False\n\n\ndef main():\n    n = int(input())\n    print(\"YES\" if is_lucky_or_almost(n) else \"NO\")\n\n\nmain()\n", "\nimport math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n // 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1:\n        return 1\n    digits = count_digits(n)\n    # print(digits)\n    group_len = 9 * 10 ** (digits - 1) * digits\n    # print(group_len)\n    groups = math.ceil(n / group_len)\n    # print(groups)\n    group_num = n % group_len\n    if group_num == 0:\n        group_num = group_len\n    # print(group_num)\n    num = group_num - 1\n    # print(num)\n    num_in_group = math.ceil(num / digits)\n    # print(num_in_group)\n    num_in_group_pos = num % digits\n    if num_in_group_pos == 0:\n        num_in_group_pos = digits\n    # print(num_in_group_pos)\n    return int(str(num_in_group)[num_in_group_pos - 1])\n\nif __name__ == \"__main__\":\n    # q = int(input())\n    # for _ in range(q):\n    #     n = int(input())\n    #     print(find_digit(n))\n    print(find_digit(int(input())))\n"]