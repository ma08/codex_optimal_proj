2022-04-20 20:27:42.864228 num operations 1
2022-04-20 20:27:42.864249 size on input set 1
2022-04-20 20:27:42.864427 using api key kouti
2022-04-20 20:27:46.929521 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\n\nn, d = map(int, input().split())\n\npoints = []\nfor _ in range(n):\n\n    points.append(list(map(int, input().split())))\n\ndef distance(p1, p2):\n    dist = 0\n    for i in range(d):\n        dist += (p1[i] - p2[i]) ** 2\n    return math.sqrt(dist)\n\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if distance(points[i], points[j]).is_integer():\n            count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nn, d = map(int, input().split())\n\npoints = []\nfor _ in range(n):\n    points.append(list(map(int, input().split())))\n\ndef distance(p1, p2):\n    dist = 0\n    for i in range(d):\n        dist += (p1[i] - p2[i]) ** 2\n    return math.sqrt(dist)\n\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if distance(points[i], points[j]).is_integer():\n            count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650486462,
  "object": "edit"
}
2022-04-20 20:27:46.929790 fix syntax errors 2 ['\nimport math\n\n\nn, d = map(int, input().split())\n\npoints = []\nfor _ in range(n):\n\n    points.append(list(map(int, input().split())))\n\ndef distance(p1, p2):\n    dist = 0\n    for i in range(d):\n        dist += (p1[i] - p2[i]) ** 2\n    return math.sqrt(dist)\n\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if distance(points[i], points[j]).is_integer():\n            count += 1\n\nprint(count)\n', '\nimport math\n\nn, d = map(int, input().split())\n\npoints = []\nfor _ in range(n):\n    points.append(list(map(int, input().split())))\n\ndef distance(p1, p2):\n    dist = 0\n    for i in range(d):\n        dist += (p1[i] - p2[i]) ** 2\n    return math.sqrt(dist)\n\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if distance(points[i], points[j]).is_integer():\n            count += 1\n\nprint(count)\n']
2022-04-20 20:27:46.929822 size on output set 2
2022-04-20 20:27:46.929834 num operations 1
2022-04-20 20:27:46.929840 size on input set 1
2022-04-20 20:27:46.930000 using api key jaanu
2022-04-20 20:27:52.328445 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# TODO: implement\n\nimport sys\nimport math\n\ndef distance(p1, p2):\n    return math.sqrt(sum([(p1[i] - p2[i])**2 for i in range(len(p1))]))\n\ndef main():\n    n, d = [int(x) for x in sys.stdin.readline().split()]\n    points = []\n    for _ in range(n):\n        points.append(tuple([int(x) for x in sys.stdin.readline().split()]))\n\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if distance(points[i], points[j]) % 1.0 == 0.0:\n                count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# TODO: implement\n\nimport sys\nimport math\n\ndef distance(p1, p2):\n    return math.sqrt(sum([(p1[i] - p2[i]) ** 2 for i in range(len(p1))]))\n\ndef main():\n    n, d = [int(x) for x in sys.stdin.readline().split()]\n    points = []\n    for _ in range(n):\n        points.append(tuple([int(x) for x in sys.stdin.readline().split()]))\n\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if distance(points[i], points[j]) % 1 == 0:\n                count += 1.0\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650486466,
  "object": "edit"
}
2022-04-20 20:27:52.328679 fix syntax errors 2 ["\n# TODO: implement\n\nimport sys\nimport math\n\ndef distance(p1, p2):\n    return math.sqrt(sum([(p1[i] - p2[i])**2 for i in range(len(p1))]))\n\ndef main():\n    n, d = [int(x) for x in sys.stdin.readline().split()]\n    points = []\n    for _ in range(n):\n        points.append(tuple([int(x) for x in sys.stdin.readline().split()]))\n\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if distance(points[i], points[j]) % 1.0 == 0.0:\n                count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# TODO: implement\n\nimport sys\nimport math\n\ndef distance(p1, p2):\n    return math.sqrt(sum([(p1[i] - p2[i]) ** 2 for i in range(len(p1))]))\n\ndef main():\n    n, d = [int(x) for x in sys.stdin.readline().split()]\n    points = []\n    for _ in range(n):\n        points.append(tuple([int(x) for x in sys.stdin.readline().split()]))\n\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if distance(points[i], points[j]) % 1 == 0:\n                count += 1.0\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:27:52.328741 size on output set 2
