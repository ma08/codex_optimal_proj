2022-04-20 19:06:13.387722 num operations 1
2022-04-20 19:06:13.387758 size on input set 1
2022-04-20 19:06:13.387976 using api key jaanu
2022-04-20 19:06:22.869638 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(n):\n    for j in range(m):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 1,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m + 1)] for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = dp[i - 1][j]\n\nprint(dp[n][m])\n"
    }
  ],
  "created": 1650481573,
  "object": "edit"
}
2022-04-20 19:06:22.869920 fix syntax errors 2 ['\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(n):\n    for j in range(m):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m + 1)] for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = dp[i - 1][j]\n\nprint(dp[n][m])\n']
2022-04-20 19:06:22.869953 size on output set 2
2022-04-20 19:06:22.869964 num operations 1
2022-04-20 19:06:22.869970 size on input set 1
2022-04-20 19:06:22.870126 using api key derek
2022-04-20 19:06:22.909918 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:06:24.411825 using api key derek
2022-04-20 19:06:24.452471 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:06:27.455870 using api key jaanu
2022-04-20 19:06:33.581549 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n+1)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] \n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    }
  ],
  "created": 1650481587,
  "object": "edit"
}
2022-04-20 19:06:33.581808 fix syntax errors 2 ['\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n+1)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] \n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n']
2022-04-20 19:06:33.581846 size on output set 2
