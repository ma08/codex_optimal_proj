2022-04-20 19:10:50.290862 num operations 1
2022-04-20 19:10:50.290901 size on input set 1
2022-04-20 19:10:50.291096 using api key kouti
2022-04-20 19:10:58.865985 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = [int(i) for i in input().split()]\n\n\ndef is_good(a, i):\n    return a[i] == sum(a[:i]) + sum(a[i+1:])\n\nres = []\nfor i in range(n):\n    if is_good(a, i):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1650481850,
  "object": "edit"
}
2022-04-20 19:10:58.866254 fix syntax errors 2 ['def is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', 'n = int(input())\na = [int(i) for i in input().split()]\n\n\ndef is_good(a, i):\n    return a[i] == sum(a[:i]) + sum(a[i+1:])\n\nres = []\nfor i in range(n):\n    if is_good(a, i):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n']
2022-04-20 19:10:58.866280 size on output set 2
2022-04-20 19:10:58.866292 num operations 1
2022-04-20 19:10:58.866298 size on input set 1
2022-04-20 19:10:58.866456 using api key derek
2022-04-20 19:10:58.907204 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:11:00.409105 using api key derek
2022-04-20 19:11:00.449351 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 19:11:03.452817 using api key kouti
2022-04-20 19:11:10.821183 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    }
  ],
  "created": 1650481863,
  "object": "edit"
}
2022-04-20 19:11:10.821408 fix syntax errors 2 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n']
2022-04-20 19:11:10.821445 size on output set 1
