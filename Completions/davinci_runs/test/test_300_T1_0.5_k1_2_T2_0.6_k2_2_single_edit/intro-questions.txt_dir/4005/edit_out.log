2022-04-20 19:06:49.244218 num operations 1
2022-04-20 19:06:49.244258 size on input set 1
2022-04-20 19:06:49.244465 using api key derek
2022-04-20 19:06:49.365834 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 19:06:50.867740 using api key jaanu
2022-04-20 19:07:37.083292 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/php\n<?php\n    if ($argc > 1) {\n        $file = file_get_contents($argv[1]);\n        $regex = '/<a.*?title=\"(.*?)\">/';\n        preg_match_all($regex, $file, $matches);\n        $regex = '/<a.*?>(.*?)</';\n        preg_match_all($regex, $file, $matches2);\n        $i = 0;\n        foreach ($matches2[1] as $match) {\n            $match = trim(strip_tags($match));\n            if ($matches[1][$i])\n                echo \"$match\\t\".$matches[1][$i].\"\\n\";\n            $i++;\n        }\n    }\n?>\n"
    },
    {
      "index": 1,
      "text": "\nrequire \"fileutils\"\n\n#copy the file\nFileUtils.cp(\"test.txt\", \"test_copy.txt\")\n\n\nFile.open(\"test.txt\", \"r\") do |file|\n    while line = file.gets\n        puts line\n    end\nend\n\n\n\nFile.open(\"test.txt\", \"r\") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open(\"test.txt\", \"r\") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open(\"test.txt\", \"r\") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open(\"test.txt\", \"r\") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\nFile.open(\"new_file.txt\", \"w\") do |file|\n    file.write(\"Hello File!\\n\")\n    file.write(\"Goodbye File!\\n\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"w\") do |file|\n    file.puts(\"Hello File!\")\n    file.puts(\"Goodbye File!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n\n\nFile.open(\"new_file.txt\", \"a\") do |file|\n    file.puts(\"Hello Again!\")\nend\n\n"
    }
  ],
  "created": 1650481610,
  "object": "edit"
}
2022-04-20 19:07:37.083579 fix syntax errors 2 ['#!/usr/bin/php\n<?php\n    if ($argc > 1) {\n        $file = file_get_contents($argv[1]);\n        $regex = \'/<a.*?title="(.*?)">/\';\n        preg_match_all($regex, $file, $matches);\n        $regex = \'/<a.*?>(.*?)</\';\n        preg_match_all($regex, $file, $matches2);\n        $i = 0;\n        foreach ($matches2[1] as $match) {\n            $match = trim(strip_tags($match));\n            if ($matches[1][$i])\n                echo "$match\\t".$matches[1][$i]."\\n";\n            $i++;\n        }\n    }\n?>\n', '\nrequire "fileutils"\n\n#copy the file\nFileUtils.cp("test.txt", "test_copy.txt")\n\n\nFile.open("test.txt", "r") do |file|\n    while line = file.gets\n        puts line\n    end\nend\n\n\n\nFile.open("test.txt", "r") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open("test.txt", "r") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open("test.txt", "r") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\n\nFile.open("test.txt", "r") do |file|\n    file.each_line do |line|\n        puts line\n    end\nend\n\n\nFile.open("new_file.txt", "w") do |file|\n    file.write("Hello File!\\n")\n    file.write("Goodbye File!\\n")\nend\n\n\n\nFile.open("new_file.txt", "w") do |file|\n    file.puts("Hello File!")\n    file.puts("Goodbye File!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n\n\nFile.open("new_file.txt", "a") do |file|\n    file.puts("Hello Again!")\nend\n\n']
2022-04-20 19:07:37.083724 size on output set 2
2022-04-20 19:07:37.083738 num operations 1
2022-04-20 19:07:37.083745 size on input set 1
2022-04-20 19:07:37.083916 using api key sunu
2022-04-20 19:07:46.968825 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef is_inside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4)\n\ndef is_overlap(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4) or (x2 > x3 and x2 < x4 and y2 > y3 and y2 < y4)\n\ndef is_outside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 < x3 or x2 > x4 or y1 < y3 or y2 > y4)\n\ndef is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_inside(x1, y1, x3, y3, x4, y4, x5, y5)) and (not is_inside(x2, y2, x3, y3, x4, y4, x5, y5)) and (not is_inside(x1, y1, x3, y3, x4, y4, x6, y6)) and (not is_inside(x2, y2, x3, y3, x4, y4, x6, y6))\n\ndef is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\n\nif __name__ == \"__main__\":\n    x1, y1, x2, y2 = tuple(map(int, input().split()))\n    x3, y3, x4, y4 = tuple(map(int, input().split()))\n    x5, y5, x6, y6 = tuple(map(int, input().split()))\n\n    if (is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6)):\n        print('YES')\n    else:\n        print('NO')\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_inside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4)\n\ndef is_overlap(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 >= x3 and x1 <= x4 and y1 >= y3 and y1 <= y4) or (x2 >= x3 and x2 <= x4 and y2 >= y3 and y2 <= y4)\n\ndef is_outside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 < x3 and x2 > x4 and y1 < y3 and y2 > y4)\n\ndef is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_inside(x1, y1, x3, y3, x4, y4, x5, y5)) and (not is_inside(x2, y2, x3, y3, x4, y4, x5, y5)) and (not is_inside(x1, y1, x3, y3, x4, y4, x6, y6)) and (not is_inside(x2, y2, x3, y3, x4, y4, x6, y6))\n\ndef is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\n\nif __name__ == \"__main__\":\n    x1, y1, x2, y2 = tuple(map(int, input().split()))\n    x3, y3, x4, y4 = tuple(map(int, input().split()))\n    x5, y5, x6, y6 = tuple(map(int, input().split()))\n\n    if (is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6)):\n        print('YES')\n    else:\n        print('NO')\n"
    }
  ],
  "created": 1650481657,
  "object": "edit"
}
2022-04-20 19:07:46.969067 fix syntax errors 2 ['\ndef is_inside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4)\n\ndef is_overlap(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4) or (x2 > x3 and x2 < x4 and y2 > y3 and y2 < y4)\n\ndef is_outside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 < x3 or x2 > x4 or y1 < y3 or y2 > y4)\n\ndef is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_inside(x1, y1, x3, y3, x4, y4, x5, y5)) and (not is_inside(x2, y2, x3, y3, x4, y4, x5, y5)) and (not is_inside(x1, y1, x3, y3, x4, y4, x6, y6)) and (not is_inside(x2, y2, x3, y3, x4, y4, x6, y6))\n\ndef is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\n\nif __name__ == "__main__":\n    x1, y1, x2, y2 = tuple(map(int, input().split()))\n    x3, y3, x4, y4 = tuple(map(int, input().split()))\n    x5, y5, x6, y6 = tuple(map(int, input().split()))\n\n    if (is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6)):\n        print(\'YES\')\n    else:\n        print(\'NO\')\n', '\n\ndef is_inside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 > x3 and x1 < x4 and y1 > y3 and y1 < y4)\n\ndef is_overlap(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 >= x3 and x1 <= x4 and y1 >= y3 and y1 <= y4) or (x2 >= x3 and x2 <= x4 and y2 >= y3 and y2 <= y4)\n\ndef is_outside(x1, y1, x2, y2, x3, y3, x4, y4):\n    return (x1 < x3 and x2 > x4 and y1 < y3 and y2 > y4)\n\ndef is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_inside(x1, y1, x3, y3, x4, y4, x5, y5)) and (not is_inside(x2, y2, x3, y3, x4, y4, x5, y5)) and (not is_inside(x1, y1, x3, y3, x4, y4, x6, y6)) and (not is_inside(x2, y2, x3, y3, x4, y4, x6, y6))\n\ndef is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (is_overlap(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (is_overlap(x1, y1, x2, y2, x5, y5, x6, y6))\n\ndef is_inside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6):\n    return (not is_outside(x1, y1, x2, y2, x3, y3, x4, y4)) and (not is_outside(x1, y1, x2, y2, x5, y5, x6, y6))\n\n\nif __name__ == "__main__":\n    x1, y1, x2, y2 = tuple(map(int, input().split()))\n    x3, y3, x4, y4 = tuple(map(int, input().split()))\n    x5, y5, x6, y6 = tuple(map(int, input().split()))\n\n    if (is_outside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_outside_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_overlap_and_inside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_overlap(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6) or\n    is_inside_and_outside(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6)):\n        print(\'YES\')\n    else:\n        print(\'NO\')\n']
2022-04-20 19:07:46.969237 size on output set 2
