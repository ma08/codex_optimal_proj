2022-04-20 19:25:29.626242 num operations 1
2022-04-20 19:25:29.626279 size on input set 1
2022-04-20 19:25:29.626474 using api key jaanu
2022-04-20 19:25:34.130429 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 0\n    min_j = 1\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650482729,
  "object": "edit"
}
2022-04-20 19:25:34.130709 fix syntax errors 2 ["\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 1\n    min_j = 2\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_lcm = lcm(a[0], a[1])\n    min_i = 0\n    min_j = 1\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                min_i = i + 1\n                min_j = j + 1\n    print(min_i, min_j)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:25:34.130745 size on output set 2
2022-04-20 19:25:34.130758 num operations 1
2022-04-20 19:25:34.130764 size on input set 1
2022-04-20 19:25:34.130923 using api key soukgp
2022-04-20 19:25:42.609492 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n"
    },
    {
      "index": 1,
      "text": "import math\n\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y%x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) <= min_lcm:\n            min_lcm = math.gcd(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\nprint(min_i, min_j)\n"
    }
  ],
  "created": 1650482734,
  "object": "edit"
}
2022-04-20 19:25:42.609719 fix syntax errors 2 ['\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) < min_lcm:\n            min_lcm = lcm(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\n\nprint(min_i, min_j)\n', 'import math\n\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y%x, x)\n\ndef lcm(a, b):\n    return (a*b)//gcd(a, b)\n\nmin_lcm = lcm(a[0], a[1])\nmin_i = 1\nmin_j = 2\nfor i in range(n):\n    for j in range(i+1, n):\n        if lcm(a[i], a[j]) <= min_lcm:\n            min_lcm = math.gcd(a[i], a[j])\n            min_i = i + 1\n            min_j = j + 1\nprint(min_i, min_j)\n']
2022-04-20 19:25:42.609750 size on output set 2
