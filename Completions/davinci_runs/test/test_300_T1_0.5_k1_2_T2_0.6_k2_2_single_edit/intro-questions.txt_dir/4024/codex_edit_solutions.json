["\n\ndef count_substr(s):\n    dp = [0] * (len(s) + 1)\n    for i in range(1, len(s) + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + len(s) - i + j)\n    return dp[len(s)]\n\ndef main():\n    n, k = map(int, input().split())\n    s = []\n    for _ in range(n):\n        s.append(input())\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            if count_substr(s[i:j + 1]) >= k:\n                ans = max(ans, j - i + 1)\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n\n\n    s = input()\n\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\n\nif __name__ == '__main__':\n    main()\n", "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"]