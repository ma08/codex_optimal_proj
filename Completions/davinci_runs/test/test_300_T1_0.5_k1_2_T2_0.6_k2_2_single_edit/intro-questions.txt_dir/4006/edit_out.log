2022-04-20 19:07:47.393773 num operations 1
2022-04-20 19:07:47.393811 size on input set 1
2022-04-20 19:07:47.394036 using api key soukgp
2022-04-20 19:07:53.227596 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    f_in = open(\"file.in\", \"r\")\n    n = int(f_in.readline())\n    print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n-1) + is_reachable(n-1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    f_in = open(\"f.in\", \"r\")\n    n = int(f_in.readline())\n    print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n - 1) + is_reachable(n - 1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n // 10, m)\n    return is_reachable(n - 1, m)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650481667,
  "object": "edit"
}
2022-04-20 19:07:53.227865 fix syntax errors 2 ['\n\ndef main():\n    f_in = open("file.in", "r")\n    n = int(f_in.readline())\n    print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n-1) + is_reachable(n-1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    f_in = open("f.in", "r")\n    n = int(f_in.readline())\n    print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n - 1) + is_reachable(n - 1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n // 10, m)\n    return is_reachable(n - 1, m)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:07:53.227909 size on output set 2
2022-04-20 19:07:53.227919 num operations 1
2022-04-20 19:07:53.227925 size on input set 1
2022-04-20 19:07:53.228079 using api key kouti
2022-04-20 19:07:57.326960 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650481673,
  "object": "edit"
}
2022-04-20 19:07:57.327171 fix syntax errors 2 ["\ndef f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == '__main__':\n    main()\n", 'def f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:07:57.327198 size on output set 2
