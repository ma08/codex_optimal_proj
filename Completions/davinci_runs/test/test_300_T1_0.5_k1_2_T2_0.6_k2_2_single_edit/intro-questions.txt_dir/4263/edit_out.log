2022-04-20 20:26:54.389259 num operations 1
2022-04-20 20:26:54.389279 size on input set 1
2022-04-20 20:26:54.389475 using api key derek
2022-04-20 20:26:54.506227 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 20:26:56.008153 using api key kouti
2022-04-20 20:27:00.240434 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    }
  ],
  "created": 1650486416,
  "object": "edit"
}
2022-04-20 20:27:00.240770 fix syntax errors 2 ['\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n']
2022-04-20 20:27:00.240827 size on output set 2
2022-04-20 20:27:00.241545 num operations 1
2022-04-20 20:27:00.241555 size on input set 1
2022-04-20 20:27:00.241811 using api key jaanu
2022-04-20 20:27:05.275194 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#coding: utf-8\n\n\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print('{}'.format(max_len))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650486420,
  "object": "edit"
}
2022-04-20 20:27:05.275413 fix syntax errors 2 ["#coding: utf-8\n\n\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print('{}'.format(max_len))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 20:27:05.275443 size on output set 2
