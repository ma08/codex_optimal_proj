["\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))  # sort the sides of the triangle\n\ncount = 0  # count the number of possible triangles\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", "\n#\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "\n\nimport itertools\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in itertools.combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"]