2022-04-20 20:30:40.604471 num operations 1
2022-04-20 20:30:40.604484 size on input set 1
2022-04-20 20:30:40.604626 using api key soukgp
2022-04-20 20:30:45.852425 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# coding: utf-8\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n# N\u500b\u306e\u6599\u7406\u3001T\u79d2\u4ee5\u5185\u306b\u3067\u304d\u308b\u6599\u7406\u3092\u62bd\u51fa\u3059\u308b\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n# T\u79d2\u4ee5\u5185\u306b\u3067\u304d\u308b\u6599\u7406\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3001\u3042\u308c\u3070\u6700\u5b89\u5024\u3092\u51fa\u529b\u3059\u308b\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650486640,
  "object": "edit"
}
2022-04-20 20:30:45.852676 fix syntax errors 2 ["\n# coding: utf-8\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n# N個の料理、T秒以内にできる料理を抽出する\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n# T秒以内にできる料理があるかどうか、あれば最安値を出力する\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-20 20:30:45.852824 size on output set 2
2022-04-20 20:30:45.852853 num operations 1
2022-04-20 20:30:45.852861 size on input set 1
2022-04-20 20:30:45.853053 using api key jaanu
2022-04-20 20:30:50.264802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print('TLE')\n    else:\n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650486645,
  "object": "edit"
}
2022-04-20 20:30:50.265018 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print('TLE')\n    else:\n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 20:30:50.265050 size on output set 2
