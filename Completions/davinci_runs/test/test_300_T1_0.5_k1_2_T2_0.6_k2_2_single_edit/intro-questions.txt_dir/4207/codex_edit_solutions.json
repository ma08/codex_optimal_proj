["\nN = int(input())\nA = [int(i) for i in input().split()]\nB = [int(i) for i in input().split()]\n    \nif A == [0] * N:\n    print(0)\n    exit()\nif B == [0] * N:\n    print(N)\n    exit()\n    \nA.sort()\nB.sort()\nans = 0\nfor i in range(N):\n    if A[i] * B[N - 1 - i] > 0:\n        break\n    else:\n        ans += 1\nprint(ans)\n", "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    \n    if a == [0] * n:\n        print(0)\n        return\n    if b == [0] * n:\n        print(n//2)\n        return\n    \n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if a[i] * b[n - 1 - i] >= 0:\n            break\n        else:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport bisect\n\ndef solve(a, b, n):\n    c = [a1+b1 for a1, b1 in zip(a, b)]\n    c.sort()\n    zero_idx = bisect.bisect_left(c, 0)\n    return zero_idx + (len(c) - zero_idx - 1)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(solve(a, b, n))\n", "import bisect\n\nimport math\n\ndef solve(a, b):\n    c = [a1+b1 for a1, b1 in zip(a, b)]\n    c.sort()\n    zero_idx = bisect.bisect_left(c, 0)\n    return zero_idx + (len(c) - zero_idx - 1)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(solve(a, b))\n"]