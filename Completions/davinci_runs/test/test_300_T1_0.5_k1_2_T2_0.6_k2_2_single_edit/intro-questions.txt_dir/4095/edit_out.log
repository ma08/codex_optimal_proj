2022-04-20 19:33:01.821990 num operations 1
2022-04-20 19:33:01.822030 size on input set 1
2022-04-20 19:33:01.822343 using api key kouti
2022-04-20 19:33:11.468458 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print('hello world')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef median(n, m, seq):\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if len(seq[i:j+1]) % 2 == 0:\n                med = seq[i:j+1][len(seq[i:j+1])//2] + seq[i:j+1][len(seq[i:j+1])//2 - 1]\n            else:\n                med = seq[i:j+1][len(seq[i:j+1])//2]\n            if med == m:\n                c += 1\n    return c\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    print(median(n, m, seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650483181,
  "object": "edit"
}
2022-04-20 19:33:11.468839 fix syntax errors 2 ["\n\ndef main():\n    print('hello world')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef median(n, m, seq):\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if len(seq[i:j+1]) % 2 == 0:\n                med = seq[i:j+1][len(seq[i:j+1])//2] + seq[i:j+1][len(seq[i:j+1])//2 - 1]\n            else:\n                med = seq[i:j+1][len(seq[i:j+1])//2]\n            if med == m:\n                c += 1\n    return c\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    print(median(n, m, seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 19:33:11.468892 size on output set 2
2022-04-20 19:33:11.468911 num operations 1
2022-04-20 19:33:11.468923 size on input set 1
2022-04-20 19:33:11.469216 using api key soukgp
2022-04-20 19:33:24.631760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    r = [0] * n\n    for i in range(n):\n        r[i] = int(input())\n    print(solve(n, r))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650483191,
  "object": "edit"
}
2022-04-20 19:33:24.632031 fix syntax errors 2 ['\nimport sys\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    r = [0] * n\n    for i in range(n):\n        r[i] = int(input())\n    print(solve(n, r))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 19:33:24.632073 size on output set 2
