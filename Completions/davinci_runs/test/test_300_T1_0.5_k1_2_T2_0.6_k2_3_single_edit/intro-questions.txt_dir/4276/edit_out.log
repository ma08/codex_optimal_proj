2022-04-21 00:25:03.051297 num operations 1
2022-04-21 00:25:03.051316 size on input set 1
2022-04-21 00:25:03.051528 using api key sourya
2022-04-21 00:25:03.185219 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-21 00:25:04.687111 using api key gabby
2022-04-21 00:25:04.723606 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-21 00:25:07.727014 using api key kouti
2022-04-21 00:25:30.998672 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())  # N:num of program, T:max time\ncosts = []                         # list of cost\ntimes = []                         # list of time\nfor i in range(N):                 # input\n    c, t = map(int, input().split())  # cost, time\n    costs.append(c)                 \n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]  # get programs which can be done in T\nif len(costs) == 0:                                             # if there are no programs, print TLE\n    print('TLE')                   \nelse:                               # if there is at least one program, print min of cost\n    print(min(costs))              \n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# coding: utf-8\n\n# In[ ]:\n\n\n#N\u500b\u306e\u30ec\u30b7\u30d4\n\n#T\u5206\u4ee5\u5185\u3067\u4f5c\u308c\u308b\u30ec\u30b7\u30d4\u3092\u63a2\u3059\nN, T = map(int, input().split())\n\n#\u305d\u308c\u305e\u308c\u306e\u30ec\u30b7\u30d4\u306e\u6599\u7406\u6642\u9593\ncosts = []\n#\u305d\u308c\u305e\u308c\u306e\u30ec\u30b7\u30d4\u306e\u6599\u91d1\ntimes = []\n#\u5404\u30ec\u30b7\u30d4\u3092\u5165\u529b\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n#T\u5206\u4ee5\u5185\u306b\u4f5c\u308c\u308b\u30ec\u30b7\u30d4\u306e\u307f\u62bd\u51fa\n\n#T\u5206\u4ee5\u5185\u306b\u4f5c\u308c\u308b\u30ec\u30b7\u30d4\u304c\u7121\u3044\u5834\u5408\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\n    #TLE\nif len(costs) == 0:\n#T\u5206\u4ee5\u5185\u306b\u4f5c\u308c\u308b\u30ec\u30b7\u30d4\u304c\u3042\u308b\u5834\u5408\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650500707,
  "object": "edit"
}
2022-04-21 00:25:30.998955 fix syntax errors 3 ["\nN, T = map(int, input().split())  # N:num of program, T:max time\ncosts = []                         # list of cost\ntimes = []                         # list of time\nfor i in range(N):                 # input\n    c, t = map(int, input().split())  # cost, time\n    costs.append(c)                 \n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]  # get programs which can be done in T\nif len(costs) == 0:                                             # if there are no programs, print TLE\n    print('TLE')                   \nelse:                               # if there is at least one program, print min of cost\n    print(min(costs))              \n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[ ]:\n\n\n#N個のレシピ\n\n#T分以内で作れるレシピを探す\nN, T = map(int, input().split())\n\n#それぞれのレシピの料理時間\ncosts = []\n#それぞれのレシピの料金\ntimes = []\n#各レシピを入力\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n#T分以内に作れるレシピのみ抽出\n\n#T分以内に作れるレシピが無い場合\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\n    #TLE\nif len(costs) == 0:\n#T分以内に作れるレシピがある場合\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-21 00:25:30.999025 size on output set 3
2022-04-21 00:25:30.999037 num operations 1
2022-04-21 00:25:30.999043 size on input set 1
2022-04-21 00:25:30.999200 using api key sourya
2022-04-21 00:25:31.035823 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-21 00:25:32.537752 using api key soukgp
2022-04-21 00:25:37.561020 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\"\"\"\nhttps://atcoder.jp/contests/abc141/tasks/abc141_b\n\"\"\"\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print('TLE')\n    else:\n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650500732,
  "object": "edit"
}
2022-04-21 00:25:37.561238 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '"""\nhttps://atcoder.jp/contests/abc141/tasks/abc141_b\n"""\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\'TLE\')\n    else:\n        print(min_cost)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-21 00:25:37.561270 size on output set 2
