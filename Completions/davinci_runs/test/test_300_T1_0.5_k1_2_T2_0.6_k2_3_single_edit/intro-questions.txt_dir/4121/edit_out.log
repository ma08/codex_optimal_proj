2022-04-20 23:19:34.237480 num operations 1
2022-04-20 23:19:34.237495 size on input set 1
2022-04-20 23:19:34.237641 using api key sunu
2022-04-20 23:19:37.093166 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:\n        print('NO')\n    if a.count(mx) == 1 and a.count(mn) == 1:\n        print('YES')\n        return\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n    #input\ndef main():\n    n = int(input())\n    #\n    a = list(map(int, input().split()))\n    mx = max(a)\n    #\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n    #\n        return\n    if mx - mn > 1:\n        print('NO')\n    #\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:\n        print('NO')\n        return\n    if a.count(mx) > 1 or a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650496774,
  "object": "edit"
}
2022-04-20 23:19:37.093441 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print(\'YES\')\n        return\n    if mx - mn > 1:\n        print(\'NO\')\n    if a.count(mx) == 1 and a.count(mn) == 1:\n        print(\'YES\')\n        return\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print(\'NO\')\n        return\n    print(\'YES\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n    #input\ndef main():\n    n = int(input())\n    #\n    a = list(map(int, input().split()))\n    mx = max(a)\n    #\n    mn = min(a)\n    if mx == mn:\n        print(\'YES\')\n    #\n        return\n    if mx - mn > 1:\n        print(\'NO\')\n    #\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print(\'NO\')\n        return\n    print(\'YES\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print(\'YES\')\n        return\n    if mx - mn > 1:\n        print(\'NO\')\n        return\n    if a.count(mx) > 1 or a.count(mn) > 1:\n        print(\'NO\')\n        return\n    print(\'YES\')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 23:19:37.093477 size on output set 3
2022-04-20 23:19:37.093488 num operations 1
2022-04-20 23:19:37.093494 size on input set 1
2022-04-20 23:19:37.093655 using api key soukgp
2022-04-20 23:19:41.872041 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    >>> solver(3, [1, 2, 1])\n    'NO'\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:  # all same\n        return 'YES'\n    if len(set(a)) == 2:  # 2 types of input\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:  # more than 2 types of input\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n"
    },
    {
      "index": 2,
      "text": "\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n\n\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n"
    }
  ],
  "created": 1650496777,
  "object": "edit"
}
2022-04-20 23:19:41.872292 fix syntax errors 3 ['def solver(n, a):\n    """\n    >>> solver(5, [2, 1, 1, 2, 5])\n    \'YES\'\n    >>> solver(3, [4, 5, 3])\n    \'YES\'\n    >>> solver(2, [10, 10])\n    \'YES\'\n    >>> solver(3, [1, 2, 3])\n    \'NO\'\n    """\n    if len(set(a)) == 1:\n        return \'YES\'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return \'YES\'\n        else:\n            return \'NO\'\n    if len(set(a)) > 2:\n        return \'NO\'\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n', '\n\n\ndef solver(n, a):\n    """\n    >>> solver(5, [2, 1, 1, 2, 5])\n    \'YES\'\n    >>> solver(3, [4, 5, 3])\n    \'YES\'\n    >>> solver(2, [10, 10])\n    \'YES\'\n    >>> solver(3, [1, 2, 3])\n    >>> solver(3, [1, 2, 1])\n    \'NO\'\n    \'NO\'\n    """\n    if len(set(a)) == 1:  # all same\n        return \'YES\'\n    if len(set(a)) == 2:  # 2 types of input\n        if a.count(max(set(a))) == 1:\n            return \'YES\'\n        else:\n            return \'NO\'\n    if len(set(a)) > 2:  # more than 2 types of input\n        return \'NO\'\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n', '\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n\n\ndef solver(n, a):\n    """\n    >>> solver(5, [2, 1, 1, 2, 5])\n    \'YES\'\n    >>> solver(3, [4, 5, 3])\n    \'YES\'\n    >>> solver(2, [10, 10])\n    \'YES\'\n    >>> solver(3, [1, 2, 3])\n    \'NO\'\n    """\n    if len(set(a)) == 1:\n        return \'YES\'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return \'YES\'\n        else:\n            return \'NO\'\n    if len(set(a)) > 2:\n        return \'NO\'\n']
2022-04-20 23:19:41.872332 size on output set 3
