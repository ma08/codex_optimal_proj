2022-04-20 22:58:58.242647 num operations 1
2022-04-20 22:58:58.242686 size on input set 1
2022-04-20 22:58:58.242887 using api key derek
2022-04-20 22:58:58.360058 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 22:58:59.861941 using api key sunu
2022-04-20 22:59:02.367995 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(a[::-1])\n    print(\"YES\" if sorted(a, reverse=True) == a else \"NO\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\nmain()\n"
    }
  ],
  "created": 1650495539,
  "object": "edit"
}
2022-04-20 22:59:02.368280 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print(a[::-1])\n    print("YES" if sorted(a, reverse=True) == a else "NO")\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print("YES" if sorted(a) == a else "NO")\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print("YES" if sorted(a) == a else "NO")\n\nmain()\n']
2022-04-20 22:59:02.368333 size on output set 2
2022-04-20 22:59:02.368350 num operations 1
2022-04-20 22:59:02.368358 size on input set 1
2022-04-20 22:59:02.368623 using api key kouti
2022-04-20 22:59:12.937930 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nn = int(raw_input())\narr = list(map(int, raw_input().split()))\n\nprint check_ravioli_sort(arr)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef sort_ravioli(arr):\n    sorted_stacks = []\n    stack_heights = []\n\n    for stack in arr:\n        stack_heights.append(stack)\n\n    while len(stack_heights) > 0:\n        tallest_stack = max(stack_heights)\n        tallest_stack_index = stack_heights.index(tallest_stack)\n        sorted_stacks.append(tallest_stack)\n        del stack_heights[tallest_stack_index]\n\n    return sorted_stacks\n\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n"
    }
  ],
  "created": 1650495542,
  "object": "edit"
}
2022-04-20 22:59:12.938163 fix syntax errors 3 ['\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr))\n', '\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nn = int(raw_input())\narr = list(map(int, raw_input().split()))\n\nprint check_ravioli_sort(arr)\n', '\nimport sys\n\ndef sort_ravioli(arr):\n    sorted_stacks = []\n    stack_heights = []\n\n    for stack in arr:\n        stack_heights.append(stack)\n\n    while len(stack_heights) > 0:\n        tallest_stack = max(stack_heights)\n        tallest_stack_index = stack_heights.index(tallest_stack)\n        sorted_stacks.append(tallest_stack)\n        del stack_heights[tallest_stack_index]\n\n    return sorted_stacks\n\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n']
2022-04-20 22:59:12.938203 size on output set 3
