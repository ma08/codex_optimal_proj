2022-04-20 23:47:37.659443 num operations 1
2022-04-20 23:47:37.659456 size on input set 1
2022-04-20 23:47:37.659601 using api key sourya
2022-04-20 23:47:37.779936 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:47:39.281829 using api key kouti
2022-04-20 23:47:51.987898 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\n    exit()\n\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nif a[-1] > n:\n    print(-1)\n    exit()\n\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())  # n: \u5e73\u5747\u5024, m: \u6570\u5024\u6570\na = list(map(int, input().split()))\na.sort()\na.reverse()  # \u964d\u9806\u306b\u4e26\u3079\u66ff\u3048\u308b\nif a[0] > n:\n    print(-1)  # m\u500b\u306e\u548c\u304cn\u4ee5\u4e0a\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3089-1\n    exit()  # \u7d42\u4e86\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n"
    }
  ],
  "created": 1650498459,
  "object": "edit"
}
2022-04-20 23:47:51.988167 fix syntax errors 3 ['\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > n:\n    print(-1)\n    exit()\n\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nif a[-1] > n:\n    print(-1)\n    exit()\n\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n', '\nn, m = map(int, input().split())  # n: 平均値, m: 数値数\na = list(map(int, input().split()))\na.sort()\na.reverse()  # 降順に並べ替える\nif a[0] > n:\n    print(-1)  # m個の和がn以上になってしまったら-1\n    exit()  # 終了\ns = 0\nfor i in range(m):\n    s += a[i]\n\nprint(n - s)\n']
2022-04-20 23:47:51.988215 size on output set 3
2022-04-20 23:47:51.988230 num operations 1
2022-04-20 23:47:51.988240 size on input set 1
2022-04-20 23:47:51.988432 using api key sunu
2022-04-20 23:48:13.021271 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import heapq\n\n# Input\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# Sort A in ascending order\nA.sort()\n\n# If N is smaller than A[-1], Takahashi cannot finish all of the assignments\nif N < A[-1]:\n    print(-1)\n    exit()\n\n# Initialize a heap\nh = []\n\n# Put the last element of A into the heap\nheapq.heappush(h, -A[-1])\n\n# Put the second-last element of A into the heap\nheapq.heappush(h, -A[-2])\n\n# Repeat M-2 times\nfor i in range(M-2):\n    # Pop the largest element in the heap\n    a = -heapq.heappop(h)\n\n    # If a is greater than N, Takahashi cannot finish all of the assignments\n    if a > N:\n        print(-1)\n        exit()\n\n    # Push a-1 into the heap\n    heapq.heappush(h, -(a-1))\n\n# Pop the largest element in the heap\na = -heapq.heappop(h)\n\n# If a is greater than N, Takahashi cannot finish all of the assignments\nif a > N:\n    print(-1)\n    exit()\n\n# Print N-(a-1)\nprint(N-(a-1))\n"
    },
    {
      "index": 1,
      "text": "import heapq\n\n# Input\nN = int(input())\nM = int(input())\nA = list(map(int, input().split().split()))\n\n# Sort A in ascending order\nA.sort(reverse=True)\n\n# If N is smaller than A[-1], Takahashi cannot finish all of the assignments\nif N < A[-1]:\n    print(-1)\n    exit()\n\n# Initialize a heap\nh = []\n\n# Put the last element of A into the heap\nheapq.heappush(h, A[-1])\n\n# Put the second-last element of A into the heap\nheapq.heappush(h, A[-2])\n\n# Repeat M-2 times\nfor i in range(M - 2):\n    # Pop the largest element in the heap\n    a = heapq.heappop(h)\n\n    # If a is greater than N, Takahashi cannot finish all of the assignments\n    if a > N:\n        print(-1)\n        exit()\n\n    # Push a-1 into the heap\n    heapq.heappush(h, a - 1)\n\n# Pop the largest element in the heap\na = heapq.heappop(h)\n\n# If a is greater than N, Takahashi cannot finish all of the assignments\nif a > N:\n    print(-1)\n    exit()\n\n# Print N-(a-1)\nprint(N - (a - 1))\n"
    },
    {
      "index": 2,
      "text": "# coding:utf-8\n# \u6587\u5b57\u5217\u3092\u6271\u3046\ns = 'Hello World!'\ns = s.replace('World','Python')\nprint(s)\n\n# \u6570\u5024\u3092\u6271\u3046\na = 1\nb = 2\nc = a + b\nprint(c)\n\n# \u914d\u5217\u3092\u6271\u3046\nsample_list = [1,2,3,4,5]\nprint(sample_list)\n\n# \u30ea\u30b9\u30c8\u751f\u6210\nsample_list = range(1,10)\nprint(sample_list)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\nsample_list = range(1,10)\nsum = 0\nfor i in sample_list:\n    sum += i\nprint(sum)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\nsample_list = range(1,10)\nsum = 0\nfor i in sample_list:\n    if i % 2 == 1:\n        sum += i\nprint(sum)\n\n# if\u6587\na = 5\nif a < 5:\n    print('a\u306f5\u3088\u308a\u5c0f\u3055\u3044')\nelif a > 5:\n    print('a\u306f5\u3088\u308a\u5927\u304d\u3044')\nelse:\n    print('a\u306f5\u3068\u7b49\u3057\u3044')\n\n# \u95a2\u6570\ndef func1():\n    print('func1')\nfunc1()\n"
    }
  ],
  "created": 1650498472,
  "object": "edit"
}
2022-04-20 23:48:13.021534 fix syntax errors 3 ['import heapq\n\n# Input\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n# Sort A in ascending order\nA.sort()\n\n# If N is smaller than A[-1], Takahashi cannot finish all of the assignments\nif N < A[-1]:\n    print(-1)\n    exit()\n\n# Initialize a heap\nh = []\n\n# Put the last element of A into the heap\nheapq.heappush(h, -A[-1])\n\n# Put the second-last element of A into the heap\nheapq.heappush(h, -A[-2])\n\n# Repeat M-2 times\nfor i in range(M-2):\n    # Pop the largest element in the heap\n    a = -heapq.heappop(h)\n\n    # If a is greater than N, Takahashi cannot finish all of the assignments\n    if a > N:\n        print(-1)\n        exit()\n\n    # Push a-1 into the heap\n    heapq.heappush(h, -(a-1))\n\n# Pop the largest element in the heap\na = -heapq.heappop(h)\n\n# If a is greater than N, Takahashi cannot finish all of the assignments\nif a > N:\n    print(-1)\n    exit()\n\n# Print N-(a-1)\nprint(N-(a-1))\n', 'import heapq\n\n# Input\nN = int(input())\nM = int(input())\nA = list(map(int, input().split().split()))\n\n# Sort A in ascending order\nA.sort(reverse=True)\n\n# If N is smaller than A[-1], Takahashi cannot finish all of the assignments\nif N < A[-1]:\n    print(-1)\n    exit()\n\n# Initialize a heap\nh = []\n\n# Put the last element of A into the heap\nheapq.heappush(h, A[-1])\n\n# Put the second-last element of A into the heap\nheapq.heappush(h, A[-2])\n\n# Repeat M-2 times\nfor i in range(M - 2):\n    # Pop the largest element in the heap\n    a = heapq.heappop(h)\n\n    # If a is greater than N, Takahashi cannot finish all of the assignments\n    if a > N:\n        print(-1)\n        exit()\n\n    # Push a-1 into the heap\n    heapq.heappush(h, a - 1)\n\n# Pop the largest element in the heap\na = heapq.heappop(h)\n\n# If a is greater than N, Takahashi cannot finish all of the assignments\nif a > N:\n    print(-1)\n    exit()\n\n# Print N-(a-1)\nprint(N - (a - 1))\n', "# coding:utf-8\n# 文字列を扱う\ns = 'Hello World!'\ns = s.replace('World','Python')\nprint(s)\n\n# 数値を扱う\na = 1\nb = 2\nc = a + b\nprint(c)\n\n# 配列を扱う\nsample_list = [1,2,3,4,5]\nprint(sample_list)\n\n# リスト生成\nsample_list = range(1,10)\nprint(sample_list)\n\n# リストの要素を足し合わせる\nsample_list = range(1,10)\nsum = 0\nfor i in sample_list:\n    sum += i\nprint(sum)\n\n# リストの要素を足し合わせる\nsample_list = range(1,10)\nsum = 0\nfor i in sample_list:\n    if i % 2 == 1:\n        sum += i\nprint(sum)\n\n# if文\na = 5\nif a < 5:\n    print('aは5より小さい')\nelif a > 5:\n    print('aは5より大きい')\nelse:\n    print('aは5と等しい')\n\n# 関数\ndef func1():\n    print('func1')\nfunc1()\n"]
2022-04-20 23:48:13.021687 size on output set 3
