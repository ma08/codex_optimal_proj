2022-04-20 22:53:52.460346 num operations 1
2022-04-20 22:53:52.460378 size on input set 1
2022-04-20 22:53:52.460572 using api key jaanu
2022-04-20 22:54:00.572891 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import defaultdict\n\ndef main():\n    n, k = map(int, input().split()) # n - number of vertices, k - number of edges\n    edges = defaultdict(list)\n    is_visited = defaultdict(lambda: False)\n\n    for i in range(k):\n        f, s = map(int, input().split())\n        edges[f].append(s)\n        edges[s].append(f)\n\n    for i in range(1, n + 1):\n        if(not is_visited[i]):\n            for j in edges[i]:\n                is_visited[j] = True\n\n            for j in edges[i]:\n                for k in edges[j]:\n                    is_visited[k] = True\n\n    for i in range(1, n + 1):\n        if(not is_visited[i]):\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    if(n == 1 and k == 1):\n        print(\"YES\")\n        print(\"1\")\n    elif(n < k):\n        print(\"NO\")\n    elif(n > k):\n        a = [1]\n        for i in range(k - 1):\n            a.append(2 * a[i])\n        if(sum(a) <= n):\n            print(\"YES\")\n            print(\" \".join(map(str, a)))\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650495232,
  "object": "edit"
}
2022-04-20 22:54:00.573145 fix syntax errors 3 ['from collections import defaultdict\n\ndef main():\n    n, k = map(int, input().split()) # n - number of vertices, k - number of edges\n    edges = defaultdict(list)\n    is_visited = defaultdict(lambda: False)\n\n    for i in range(k):\n        f, s = map(int, input().split())\n        edges[f].append(s)\n        edges[s].append(f)\n\n    for i in range(1, n + 1):\n        if(not is_visited[i]):\n            for j in edges[i]:\n                is_visited[j] = True\n\n            for j in edges[i]:\n                for k in edges[j]:\n                    is_visited[k] = True\n\n    for i in range(1, n + 1):\n        if(not is_visited[i]):\n            print(i)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    if(n == 1 and k == 1):\n        print("YES")\n        print("1")\n    elif(n < k):\n        print("NO")\n    elif(n > k):\n        a = [1]\n        for i in range(k - 1):\n            a.append(2 * a[i])\n        if(sum(a) <= n):\n            print("YES")\n            print(" ".join(map(str, a)))\n        else:\n            print("NO")\n    else:\n        print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 22:54:00.573187 size on output set 3
2022-04-20 22:54:00.573198 num operations 1
2022-04-20 22:54:00.573203 size on input set 1
2022-04-20 22:54:00.573393 using api key jaanu
2022-04-20 22:54:05.978914 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k-1, -1, -1): \n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i-1] * 2:\n            arr[i-1] = arr[i] // 2\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k - 1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i - 1] * 2:\n            arr[i - 1] = arr[i] // 2\n\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_min_arr(a, b):\n    if a == b:\n        return [b]\n    return [a, b]\n\na, b = [int(x) for x in input().split()]\narr = find_min_arr(a, b)\nif arr:\n    print(\"YES\")\n    print(*arr)\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650495240,
  "object": "edit"
}
2022-04-20 22:54:05.979146 fix syntax errors 3 ['\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k-1, -1, -1): \n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i-1] * 2:\n            arr[i-1] = arr[i] // 2\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print("YES")\n    print(*arr)\nelse:\n    print("NO")\n', '\n\ndef find_min_arr(n, k):\n    arr = [1] * k\n    for i in range(k - 1, -1, -1):\n        if sum(arr) > n:\n            arr[i] -= sum(arr) - n\n        if arr[i] == 0:\n            return False\n        if i == 0:\n            break\n        if arr[i] > arr[i - 1] * 2:\n            arr[i - 1] = arr[i] // 2\n\n    return arr\n\nn, k = [int(x) for x in input().split()]\narr = find_min_arr(n, k)\nif arr:\n    print("YES")\n    print(*arr)\nelse:\n    print("NO")\n', '\n\ndef find_min_arr(a, b):\n    if a == b:\n        return [b]\n    return [a, b]\n\na, b = [int(x) for x in input().split()]\narr = find_min_arr(a, b)\nif arr:\n    print("YES")\n    print(*arr)\nelse:\n    print("NO")\n']
2022-04-20 22:54:05.979181 size on output set 3
