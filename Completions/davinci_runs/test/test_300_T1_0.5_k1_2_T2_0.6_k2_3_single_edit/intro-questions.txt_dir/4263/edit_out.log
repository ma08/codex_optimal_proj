2022-04-21 00:19:17.338854 num operations 1
2022-04-21 00:19:17.338870 size on input set 1
2022-04-21 00:19:17.339023 using api key soukgp
2022-04-21 00:19:24.915449 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == \"A\" or S[j] == \"C\" or S[j] == \"G\" or S[j] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] != \"A\" and S[j] != \"C\" and S[j] != \"G\" and S[j] != \"T\":\n            break\n    ans = max(ans, j-i)\n\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    }
  ],
  "created": 1650500357,
  "object": "edit"
}
2022-04-21 00:19:24.915721 fix syntax errors 3 ['\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == "A" or S[j] == "C" or S[j] == "G" or S[j] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] != "A" and S[j] != "C" and S[j] != "G" and S[j] != "T":\n            break\n    ans = max(ans, j-i)\n\n\nprint(ans)\n', '\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n']
2022-04-21 00:19:24.915753 size on output set 3
2022-04-21 00:19:24.915764 num operations 1
2022-04-21 00:19:24.915769 size on input set 1
2022-04-21 00:19:24.915948 using api key kouti
2022-04-21 00:19:34.965617 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(a*b)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # \u30c8\u30fc\u30af\u30f3\u3092\u8aad\u307f\u53d6\u308a\u3001\u6700\u5f8c\u306e\u6539\u884c\u6587\u5b57\u3092\u524a\u9664\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c in ['A', 'C', 'G', 'T']:\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500364,
  "object": "edit"
}
2022-04-21 00:19:34.965859 fix syntax errors 3 ["import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().rstrip().split())\n    print(a*b)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # トークンを読み取り、最後の改行文字を削除\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c in ['A', 'C', 'G', 'T']:\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:19:34.965900 size on output set 3
