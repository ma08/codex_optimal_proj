["from sys import stdin\n\n\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1 and dish >= 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n", "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = list(map(int, stdin.readline().split()))\nadditional_points = list(map(int, stdin.readline().split()))\n\nprint(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\n\n# base_points = [1, 2, 3]\n# additional_points = [2, 3, 4]\n\n# total_points = 0\n# for i in range(n):\n#     dish = dishes[i]\n#     total_points += base_points[dish]\n#     if i != 0 and dishes[i - 1] == dish - 1:\n#         total_points += additional_points[dish - 1]\n\n# print(total_points)\nprint(total_points)\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\na.sort()\nb.sort(reverse=True)\n\nans = 0\nfor i in range(n):\n    ans += a[i] * b[i]\n\nprint(ans)\n", "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\n\n'''\ndef solve(n, dishes, base_points, additional_points):\n    total_points = 0\n    for i in range(n):\n        dish = dishes[i]\n        total_points += base_points[dish]\n        if i != 0 and dishes[i - 1] == dish - 1:\n            total_points += additional_points[dish - 1]\n\n    return total_points\n'''\nprint(total_points)\n"]