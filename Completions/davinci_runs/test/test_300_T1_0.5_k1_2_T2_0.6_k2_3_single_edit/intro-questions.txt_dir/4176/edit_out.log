2022-04-20 23:40:23.665547 num operations 1
2022-04-20 23:40:23.665557 size on input set 1
2022-04-20 23:40:23.665700 using api key gabby
2022-04-20 23:40:23.833013 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:40:25.334892 using api key derek
2022-04-20 23:40:25.371236 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 23:40:28.374666 using api key gabby
2022-04-20 23:40:28.411163 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-20 23:40:34.417660 using api key kouti
2022-04-20 23:40:41.079601 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # input(a, b)\n    a, b = map(int, sys.stdin.readline().split()) # split()\n    # output\n    print(lcm(a, b)) # print()\n\ndef lcm(a, b):\n    \"\"\"\n    \u6700\u5c0f\u516c\u500d\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    \"\"\"\n    \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef main():\n    # input\n    a, b = map(int, sys.stdin.readline().split())\n    # output\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    \"\"\"\n    \u6700\u5c0f\u516c\u500d\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    \"\"\"\n    \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    # input\n    a, b = map(int, sys.stdin.readline().split())\n    # output\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    \"\"\"\n    \u6700\u5c0f\u516c\u500d\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    \"\"\"\n    \u6700\u5927\u516c\u7d04\u6570\u3092\u6c42\u3081\u308b\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650498034,
  "object": "edit"
}
2022-04-20 23:40:41.079870 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    # input(a, b)\n    a, b = map(int, sys.stdin.readline().split()) # split()\n    # output\n    print(lcm(a, b)) # print()\n\ndef lcm(a, b):\n    """\n    最小公倍数を求める\n    """\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    """\n    最大公約数を求める\n    """\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    # input\n    a, b = map(int, sys.stdin.readline().split())\n    # output\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    """\n    最小公倍数を求める\n    """\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    """\n    最大公約数を求める\n    """\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    # input\n    a, b = map(int, sys.stdin.readline().split())\n    # output\n    print(lcm(a, b))\n\ndef lcm(a, b):\n    """\n    最小公倍数を求める\n    """\n    return a * b // gcd(a, b)\n\ndef gcd(a, b):\n    """\n    最大公約数を求める\n    """\n    while b:\n        a, b = b, a % b\n    return a\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-20 23:40:41.079913 size on output set 3
2022-04-20 23:40:41.079924 num operations 1
2022-04-20 23:40:41.079930 size on input set 1
2022-04-20 23:40:41.080096 using api key jaanu
2022-04-20 23:40:52.761687 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport heapq\nimport math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))#coding:utf-8\n    # heapq.heappush(h, (a, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650498041,
  "object": "edit"
}
2022-04-20 23:40:52.761920 fix syntax errors 3 ["\n\nimport heapq\nimport math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))#coding:utf-8\n    # heapq.heappush(h, (a, i))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    A, B = map(int, input().split())\n    print(A * B // math.gcd(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 23:40:52.761948 size on output set 2
