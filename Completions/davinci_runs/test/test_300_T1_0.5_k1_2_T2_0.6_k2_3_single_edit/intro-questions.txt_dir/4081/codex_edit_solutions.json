["\n# aaaa\n# SOLUTION\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "# SOLUTION\n\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n   # array of length n with all 0s\n    right = [0] * n  # array of length n with all 0s\n\n    left[0] = 1   # the first element in left array will be 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]  # left[i] will be equal to left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1  # if a[i] is greater than a[i-1], left[i] will be increased by 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]  # right[i] will be equal to right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1  # if a[i] is less than a[i+1], right[i] will be increased by 1\n\n    max_len = 0  # max_len starts with 0\n    max_len_idx = -1  # max_len_idx starts with -1\n    for i in range(n):\n        if left[i] + right[i] - 1 > max_len:  # if left[i] + right[i] - 1 is greater than max_len\n            max_len = left[i] + right[i] - 1  # max_len will be equal to left[i] + right[i] - 1\n            max_len_idx = i  # max_len_idx will be equal to i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):  # for i in range max_len_idx to -1\n        if left[i] == 1:  # if left[i] is equal to 1\n            break\n        seq.append('L')  # left[i] will be appended to seq\n\n    for i in range(max_len_idx, n):  # for i in range max_len_idx to n\n        if right[i] == 1:  # if right[i] is equal to 1\n            break\n        seq.append('R')  # right[i] will be appended to seq\n\n    print(''.join(seq))  # seq will be printed without spaces\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\n\ndef problem_C2():\n    def read():\n        n = int(input())\n        a = list(map(int, input().split()))\n        return n, a\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 0\n    right[n - 1] = 0\n\n    for i in range(1, n - 1):\n        left[i] = left[i - 1]\n        if a[i] > a[i - 1]:\n            left[i] += 1\n\n    for i in range(n - 2, 0, -1):\n        right[i] = right[i + 1]\n        if a[i] > a[i + 1]:\n            right[i] += 1\n\n    max_len_idx = 0\n    for i in range(n):\n        if left[i] + right[i] > left[max_len_idx] + right[max_len_idx]:\n    ans = []\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 0:\n            break\n        seq.append(\"L\")\n\n    for i in range(max_len_idx, n - 1):\n        if right[i] == 0:\n            break\n        seq.append(\"R\")\n    ans.append(len(seq))\n    ans.append(\"\".join(seq))\n\n    print(\"\\n\".join(map(str, ans)))\n\n\nif __name__ == '__main__':\n    main()\n"]