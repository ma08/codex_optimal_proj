["\n\nimport math\n\nN, D = map(int, input().split())\n\nX = [list(map(int, input().split())) for i in range(N)]\n\ncount = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        dist = 0\n        for k in range(D):\n            dist += (X[i][k]-X[j][k])**2\n        if math.sqrt(dist) % 1 == 0:\n            count += 1\n\nprint(count)\n", "import math\n\n\nprint(\"{0:.3f}\".format(math.sqrt(int(input()))))\n", "\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ntry:\n    P, Q, R = map(int, input().split())\nexcept EOFError:\n    sys.exit()\n\nprint(min(P+Q, Q+R, R+P))\n", "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"]