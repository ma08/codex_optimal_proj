["\n# https://codeforces.com/contest/1353/problem/C\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to\n# and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n", "#!/usr/bin/env python3\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "n = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != -1:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == -1:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to\n# and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1 # because index starts from 0\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1 # because index starts from 0\n\nprint(\" \".join(str(x) for x in f))\n", "\n\n# n = int(input())\n# f = [int(x) for x in input().split()]\n\n# # Find friends who don't know who to give gifts to\n# # and friends who don't know who gives them gifts\n# no_gift_to = []\n# no_gift_from = []\n# for i in range(n):\n#     if f[i] == 0:\n#         no_gift_to.append(i)\n#     else:\n#         if f[f[i] - 1] == 0:\n#             no_gift_from.append(f[i] - 1)\n\n# # Give gifts to friends who don't know who gives them gifts\n# for i in range(len(no_gift_to)):\n#     f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# # Give gifts to friends who don't know who to give gifts to\n# for i in range(len(no_gift_to)):\n#     f[no_gift_to[i]] = no_gift_from[i] + 1\n\n# print(\" \".join(str(x) for x in f))\n\n# for i in range(len(numbers)):\n#     print(numbers[i])\n\n# def find_sum(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum(numbers, 7)\n# print(x, y)\n\n# def find_sum2(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum2(numbers, 7)\n# print(x, y)\n\n# def find_sum3(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum3(numbers, 7)\n# print(x, y)\n\n# def find_sum4(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum4(numbers, 7)\n# print(x, y)\n\n\n# def find_sum5(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum5(numbers, 7)\n# print(x, y)\n\n# def find_sum6(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum6(numbers, 7)\n# print(x, y)\n\n\n# def find_sum7(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum7(numbers, 7)\n# print(x, y)\n\n\n# def find_sum8(data, target):\n#     for i in range(len(data)):\n#         for j in range(i + 1, len(data)):\n#             if data[i] + data[j] == target:\n#                 return data[i], data[j]\n#     return None\n\n\n# numbers = [1, 2, 3, 4, 5]\n# x, y = find_sum8(numbers, 7)\n# print(x, y)\n"]