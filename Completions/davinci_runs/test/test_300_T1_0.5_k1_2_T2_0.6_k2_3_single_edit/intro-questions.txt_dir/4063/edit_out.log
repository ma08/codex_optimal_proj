2022-04-20 23:02:04.134920 num operations 1
2022-04-20 23:02:04.134963 size on input set 1
2022-04-20 23:02:04.135256 using api key soukgp
2022-04-20 23:02:10.585268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nd = list(map(int, input().split()))\nd.sort(reverse=True)\n\ncnt = 0\nfor i in range(n//2):\n    if d[i] == d[i+n//2]:\n        cnt += 1\n    else:\n        break\nprint(n//2 + cnt)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# coding: utf-8\n\n\n# In[ ]:\n\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\ncnt = 1\nfor i in range(N - 1):\n    if A[i] == A[i + 1]:\n        cnt += 1\n        i += 1\nprint(cnt)\n"
    },
    {
      "index": 2,
      "text": "\n#\n"
    }
  ],
  "created": 1650495724,
  "object": "edit"
}
2022-04-20 23:02:10.585585 fix syntax errors 3 ['\n\nn = int(input())\nd = list(map(int, input().split()))\nd.sort(reverse=True)\n\ncnt = 0\nfor i in range(n//2):\n    if d[i] == d[i+n//2]:\n        cnt += 1\n    else:\n        break\nprint(n//2 + cnt)\n', '#!/usr/bin/env python\n# coding: utf-8\n\n\n# In[ ]:\n\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\ncnt = 1\nfor i in range(N - 1):\n    if A[i] == A[i + 1]:\n        cnt += 1\n        i += 1\nprint(cnt)\n', '\n#\n']
2022-04-20 23:02:10.585614 size on output set 3
2022-04-20 23:02:10.585626 num operations 1
2022-04-20 23:02:10.585632 size on input set 1
2022-04-20 23:02:10.585792 using api key jaanu
2022-04-20 23:02:21.750729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Import\nimport sys\nimport math\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    elif d[i] < d[N//2]:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Import\nimport sys\nimport math\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    else:\n        break\n\nprint(count * (count - 1) // 2)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Import\nimport sys\nimport bisect\nfrom copy import deepcopy\nfrom collections import *\nfrom itertools import *\nfrom functools import *\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\nimport math\n\n# Functions\ndef read(): return sys.stdin.readline().strip()\ndef read_list(t): return list(map(t, read().split()))\ndef read_line(t): return t(read())\ndef read_lines(t, N): return [t(read()) for _ in range(N)]\n\ndef main():\n    N = read_line(int)\n    d = read_list(int)\n\n    # Sorting\n    d.sort()\n\n    # Number of problems\n    count = 0\n\n    # Solve\n    for i in range(N//2):\n        if d[i] == d[N//2]:\n            count += 1\n        elif d[i] < d[N//2]:\n            break\n\n    print(count)\n\n# Main\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650495730,
  "object": "edit"
}
2022-04-20 23:02:21.750969 fix syntax errors 3 ['\n# Import\nimport sys\nimport math\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    elif d[i] < d[N//2]:\n        break\n\nprint(count)\n', '\n\n# Import\nimport sys\nimport math\n\n# Functions\ndef input():\n    return sys.stdin.readline().strip()\n\n# Main\nN = int(input())\nd = list(map(int, input().split()))\n\n# Sorting\nd.sort()\n\n# Number of problems\ncount = 0\n\n# Solve\nfor i in range(N//2):\n    if d[i] == d[N//2]:\n        count += 1\n    else:\n        break\n\nprint(count * (count - 1) // 2)\n', '\n\n# Import\nimport sys\nimport bisect\nfrom copy import deepcopy\nfrom collections import *\nfrom itertools import *\nfrom functools import *\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\nimport math\n\n# Functions\ndef read(): return sys.stdin.readline().strip()\ndef read_list(t): return list(map(t, read().split()))\ndef read_line(t): return t(read())\ndef read_lines(t, N): return [t(read()) for _ in range(N)]\n\ndef main():\n    N = read_line(int)\n    d = read_list(int)\n\n    # Sorting\n    d.sort()\n\n    # Number of problems\n    count = 0\n\n    # Solve\n    for i in range(N//2):\n        if d[i] == d[N//2]:\n            count += 1\n        elif d[i] < d[N//2]:\n            break\n\n    print(count)\n\n# Main\nif __name__ == "__main__":\n    main()\n']
2022-04-20 23:02:21.751005 size on output set 3
