["n = int(input())\na = [int(i) for i in input().split()]\n\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n", "import sys\nsys.setrecursionlimit(10**6)\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef solve(n, a):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    cnt = 1\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            cnt += 1\n    return cnt\n\nprint(solve(n, a))\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n# n = 6\n# a = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n", "\nf = open('file.txt','r')\nfor line in f:\n    print(line)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ndef calc_max(a):\n    max_a = a[-1]\n    for i in range(n - 2, -1, -1):\n        if max_a == a[i]:\n            max_a += 1\n            if max_a == a[i - 1]:\n                max_a += 1\n                if max_a == a[i - 2]:\n                    max_a += 1\n                    if max_a == a[i - 3]:\n                        max_a += 1\n        else:\n            break\n    return max_a\n\ndef calc_min(a):\n    min_a = a[0]\n    for i in range(n - 1):\n        if min_a == a[i + 1]:\n            min_a += 1\n            if min_a == a[i + 2]:\n                min_a += 1\n                if min_a == a[i + 3]:\n                    min_a += 1\n                    if min_a == a[i + 4]:\n                        min_a += 1\n        else:\n            break\n    return min_a\n\nprint(calc_max(a) - calc_min(a) + 1)\n"]