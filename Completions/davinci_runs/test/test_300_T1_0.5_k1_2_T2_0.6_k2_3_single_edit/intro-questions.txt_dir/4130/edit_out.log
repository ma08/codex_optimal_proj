2022-04-20 23:21:09.958000 num operations 1
2022-04-20 23:21:09.958011 size on input set 1
2022-04-20 23:21:09.958154 using api key sunu
2022-04-20 23:21:20.536639 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Let's sort the list and then go over it.\n# Let's assume that we are at the i-th element in the list.\n# If it is the first element, we will just choose it.\n# If it is not the first, we will compare it with the previous element.\n# If the previous element is bigger, we will choose the current element.\n# If the previous element is smaller, we will choose the previous element again.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650496870,
  "object": "edit"
}
2022-04-20 23:21:20.536969 fix syntax errors 3 ["\n\n# Let's sort the list and then go over it.\n# Let's assume that we are at the i-th element in the list.\n# If it is the first element, we will just choose it.\n# If it is not the first, we will compare it with the previous element.\n# If the previous element is bigger, we will choose the current element.\n# If the previous element is smaller, we will choose the previous element again.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# SOLUTION\n# The idea is to sort the weights and then go over them.\n# If we are at a weight that is the same as the previous one,\n# we can increase it by one and then we are sure that it will be\n# different from the previous weight.\n# If we are at a weight that is bigger than the previous one\n# by more than one, we can decrease it by one, and we are sure\n# that it will be different from the previous weight.\n# Otherwise, we can't change the weight at all.\n# We can do this in linear time, so overall complexity is O(n).\n\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n    n = int(readline())\n    a = list(map(int, readline().split()))\n    a.sort()\n    ans = 1\n    prev = a[0]\n    for i in range(1, n):\n        if a[i] == prev:\n            prev += 1\n        elif a[i] > prev + 1:\n            prev = a[i] - 1\n        ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 23:21:20.537022 size on output set 2
2022-04-20 23:21:20.537034 num operations 1
2022-04-20 23:21:20.537039 size on input set 1
2022-04-20 23:21:20.537201 using api key sourya
2022-04-20 23:21:20.573832 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:21:22.075738 using api key soukgp
2022-04-20 23:21:32.018369 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from collections import defaultdict\n\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\nn = int(input())\na = list(map(int, input().split()))\n\ndict = defaultdict(int)\nfor x in a:\n    dict[x] += 1\n\ncount = len(dict)\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input()) \na = list(map(int, input().split())) \n \na.sort() \n \ncount = 1 \nfor i in range(1, n): \n    if a[i] != a[i-1]: \n        count += 1 \n \nprint(count) \n"
    }
  ],
  "created": 1650496882,
  "object": "edit"
}
2022-04-20 23:21:32.018596 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\ncount = 1\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n', 'from collections import defaultdict\n\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# a.sort()\n#\n# count = 1\n# for i in range(1, n):\n#     if a[i] != a[i-1]:\n#         count += 1\n#\n# print(count)\n\nn = int(input())\na = list(map(int, input().split()))\n\ndict = defaultdict(int)\nfor x in a:\n    dict[x] += 1\n\ncount = len(dict)\n\nprint(count)\n', '\nn = int(input()) \na = list(map(int, input().split())) \n \na.sort() \n \ncount = 1 \nfor i in range(1, n): \n    if a[i] != a[i-1]: \n        count += 1 \n \nprint(count) \n']
2022-04-20 23:21:32.018727 size on output set 3
