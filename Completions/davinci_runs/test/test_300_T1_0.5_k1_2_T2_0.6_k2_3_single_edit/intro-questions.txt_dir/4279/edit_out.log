2022-04-21 00:26:34.603449 num operations 1
2022-04-21 00:26:34.603460 size on input set 1
2022-04-21 00:26:34.603602 using api key jaanu
2022-04-21 00:26:55.822175 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    else:\n        if k == 2:\n            return 1\n        else:\n            if k == 3:\n                return 2\n            else:\n                num = 3\n                start = 3\n                end = 6\n                while num < k:\n                    num += 1\n                    if num == k:\n                        return 1\n                    num += 1\n                    if num == k:\n                        return 1\n                    num += 1\n                    if num == k:\n                        return 2\n                    num += 1\n                    if num == k:\n                        return 3\n                    num += 1\n                    if num == k:\n                        return 3\n                    num += 1\n                    if num == k:\n                        return 4\n                    num += 1\n                    if num == k:\n                        return 4\n                    num += 1\n                    if num == k:\n                        return 5\n                    num += 1\n                    if num == k:\n                        return 5\n                    num += 1\n                    if num == k:\n                        return 6\n\n                return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    \n    num = 3\n    start = 3\n    end = 6\n    while num < k:\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 2\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 6\n    \n    return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    \n    num = 3\n    while num < k:\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 2\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 6\n    \n    return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500794,
  "object": "edit"
}
2022-04-21 00:26:55.822512 fix syntax errors 3 ["\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    else:\n        if k == 2:\n            return 1\n        else:\n            if k == 3:\n                return 2\n            else:\n                num = 3\n                start = 3\n                end = 6\n                while num < k:\n                    num += 1\n                    if num == k:\n                        return 1\n                    num += 1\n                    if num == k:\n                        return 1\n                    num += 1\n                    if num == k:\n                        return 2\n                    num += 1\n                    if num == k:\n                        return 3\n                    num += 1\n                    if num == k:\n                        return 3\n                    num += 1\n                    if num == k:\n                        return 4\n                    num += 1\n                    if num == k:\n                        return 4\n                    num += 1\n                    if num == k:\n                        return 5\n                    num += 1\n                    if num == k:\n                        return 5\n                    num += 1\n                    if num == k:\n                        return 6\n\n                return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    \n    num = 3\n    start = 3\n    end = 6\n    while num < k:\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 2\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 6\n    \n    return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        k = int(input())\n        print(find(k))\n\ndef find(k):\n    if k == 1:\n        return 1\n    if k == 2:\n        return 1\n    if k == 3:\n        return 2\n    \n    num = 3\n    while num < k:\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 1\n        num += 1\n        if num == k:\n            return 2\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 3\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 4\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 5\n        num += 1\n        if num == k:\n            return 6\n    \n    return find(k - num + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:26:55.822570 size on output set 3
2022-04-21 00:26:55.822581 num operations 1
2022-04-21 00:26:55.822586 size on input set 1
2022-04-21 00:26:55.822752 using api key sourya
2022-04-21 00:26:55.858559 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-21 00:26:57.360464 using api key derek
2022-04-21 00:26:57.395986 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-21 00:27:00.399402 using api key soukgp
2022-04-21 00:27:19.313733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n // 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1:\n        return 1\n    digits = count_digits(n)\n    group_len = 9 * 10 ** (digits - 1) * digits\n    groups = math.ceil(n / group_len)\n    group_num = n % group_len\n    if group_num == 0:\n        group_num = group_len\n    num = group_num - 1\n    num_in_group = math.ceil(num / digits)\n    num_in_group_pos = num % digits\n    if num_in_group_pos == 0:\n        num_in_group_pos = digits\n    return int(str(num_in_group)[num_in_group_pos - 1])\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n / 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1:\n        return 1\n    digits = count_digits(n)\n    # print(digits)\n    group_len = 9 * 10 ** (digits - 1)\n    group_len = group_len * digits\n    # print(group_len)\n    groups = math.ceil(n / group_len) - 1\n    # print(groups)\n    num = n - (groups * group_len)\n    # print(num)\n    num_in_group = math.ceil(num / digits)\n    # print(num_in_group)\n    num_in_group_pos = num % digits\n    if num_in_group_pos == 0:\n        num_in_group_pos = digits\n    # print(num_in_group_pos)\n    return int(str(num_in_group)[num_in_group_pos - 1])\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n"
    },
    {
      "index": 2,
      "text": "import math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n // 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1: return 1\n    digits = count_digits(n) # print(digits)\n    group_len = 9 * 10 ** (digits - 1) * digits # print(group_len)\n    groups = math.ceil(n / group_len) # print(groups)\n    group_num = n % group_len # print(group_num)\n    if group_num == 0: group_num = group_len\n    num = group_num - 1 # print(num)\n    num_in_group = math.ceil(num / digits) # print(num_in_group)\n    num_in_group_pos = num % digits # print(num_in_group_pos)\n    if num_in_group_pos == 0: num_in_group_pos = digits\n    return int(str(num_in_group)[num_in_group_pos - 1]) # print(num_in_group_pos)\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n"
    }
  ],
  "created": 1650500820,
  "object": "edit"
}
2022-04-21 00:27:19.314063 fix syntax errors 3 ['\nimport math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n // 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1:\n        return 1\n    digits = count_digits(n)\n    group_len = 9 * 10 ** (digits - 1) * digits\n    groups = math.ceil(n / group_len)\n    group_num = n % group_len\n    if group_num == 0:\n        group_num = group_len\n    num = group_num - 1\n    num_in_group = math.ceil(num / digits)\n    num_in_group_pos = num % digits\n    if num_in_group_pos == 0:\n        num_in_group_pos = digits\n    return int(str(num_in_group)[num_in_group_pos - 1])\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n', '\nimport math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n / 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1:\n        return 1\n    digits = count_digits(n)\n    # print(digits)\n    group_len = 9 * 10 ** (digits - 1)\n    group_len = group_len * digits\n    # print(group_len)\n    groups = math.ceil(n / group_len) - 1\n    # print(groups)\n    num = n - (groups * group_len)\n    # print(num)\n    num_in_group = math.ceil(num / digits)\n    # print(num_in_group)\n    num_in_group_pos = num % digits\n    if num_in_group_pos == 0:\n        num_in_group_pos = digits\n    # print(num_in_group_pos)\n    return int(str(num_in_group)[num_in_group_pos - 1])\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n', 'import math\n\ndef count_digits(n):\n    digits = 0\n    while n > 0:\n        n = n // 10\n        digits += 1\n    return digits\n\ndef find_digit(n):\n    if n == 1: return 1\n    digits = count_digits(n) # print(digits)\n    group_len = 9 * 10 ** (digits - 1) * digits # print(group_len)\n    groups = math.ceil(n / group_len) # print(groups)\n    group_num = n % group_len # print(group_num)\n    if group_num == 0: group_num = group_len\n    num = group_num - 1 # print(num)\n    num_in_group = math.ceil(num / digits) # print(num_in_group)\n    num_in_group_pos = num % digits # print(num_in_group_pos)\n    if num_in_group_pos == 0: num_in_group_pos = digits\n    return int(str(num_in_group)[num_in_group_pos - 1]) # print(num_in_group_pos)\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        print(find_digit(n))\n']
2022-04-21 00:27:19.314110 size on output set 3
