["\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\nprint(ans)\n", "from collections import Counter\n\n\n# n = int(input())\n# a = list(map(int, input().split()))\n\n# d = {}\n# for i in a:\n#     if i in d:\n#         d[i] += 1\n#     else:\n#         d[i] = 1\n\n# ans = 0\n# for i in d:\n#     ans += d[i] - 2\n\n# print(ans)\n\nn = int(raw_input())\na = map(int, raw_input().split())\n\nc = Counter(a)\n\nprint sum(v - 2 for v in c.values())\n", "\n\nfrom sys import stdin\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        n = int(stdin.readline())\n        skill_list = [int(x) for x in stdin.readline().split()]\n        min_skill = min(skill_list)\n\n        # create a list of tuples of each skill and the number of students\n        # with that skill\n        skill_counts = []\n        for i in range(min_skill, max(skill_list) + 1):\n            skill_counts.append((i, skill_list.count(i)))\n\n        # sort the skill counts by the number of students with that skill\n        skill_counts.sort(key=lambda x: x[1])\n\n        # find the minimum number of students needed to form a team\n        # of each skill level\n        min_students = 0\n        for i, count in skill_counts:\n            if count <= n:\n                min_students += (n - count)\n                n = count\n            else:\n                min_students += n\n                break\n\n        print(min_students)\n\nmain()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill.\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill.\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team of each skill level.\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] // 2\n\nprint(ans)\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n    print(min_students)\n\nmain()\n"]