2022-04-20 22:44:54.687204 num operations 1
2022-04-20 22:44:54.687236 size on input set 1
2022-04-20 22:44:54.687420 using api key soukgp
2022-04-20 22:45:00.412516 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 2,
      "text": "\n\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    }
  ],
  "created": 1650494694,
  "object": "edit"
}
2022-04-20 22:45:00.412836 fix syntax errors 3 ['\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', 'N = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\n\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n']
2022-04-20 22:45:00.412874 size on output set 3
2022-04-20 22:45:00.412885 num operations 1
2022-04-20 22:45:00.412891 size on input set 1
2022-04-20 22:45:00.413049 using api key kouti
2022-04-20 22:45:08.032985 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# read N and M\nN = int(input())\nM = int(input())\n# read lists\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\n# create dictionary for numbers A\nD = {}\nfor i in A:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers B\nY = []\nfor i in B:\n    if D.get(i, 0) > 0:\n        Y.append(i)\n\n# print numbers Y\nprint(*Y)\n"
    },
    {
      "index": 2,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650494700,
  "object": "edit"
}
2022-04-20 22:45:08.033212 fix syntax errors 3 ["\n\ndef main():\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n\nif __name__ == '__main__':\n    main()\n", '\n\n# read N and M\nN = int(input())\nM = int(input())\n# read lists\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nL = list(map(int, input().split()))\n\n# create dictionary for numbers A\nD = {}\nfor i in A:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers B\nY = []\nfor i in B:\n    if D.get(i, 0) > 0:\n        Y.append(i)\n\n# print numbers Y\nprint(*Y)\n', '\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n']
2022-04-20 22:45:08.033245 size on output set 3
