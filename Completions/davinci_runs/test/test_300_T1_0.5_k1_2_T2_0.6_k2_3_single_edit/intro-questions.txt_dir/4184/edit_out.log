2022-04-20 23:43:24.106982 num operations 1
2022-04-20 23:43:24.106995 size on input set 1
2022-04-20 23:43:24.107142 using api key kouti
2022-04-20 23:43:43.525139 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint('hello world')\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(arr, money):\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == money:\n                return i + 1, j + 1\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for t_itr in range(t):\n        money = int(input())\n        n = int(input())\n        arr = list(map(int, input().rstrip().split()))\n        result = solve(arr, money)\n        print(result)\n"
    }
  ],
  "created": 1650498204,
  "object": "edit"
}
2022-04-20 23:43:43.525446 fix syntax errors 3 ["\nprint('hello world')\n", '#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', "\n\ndef solve(arr, money):\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] == money:\n                return i + 1, j + 1\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for t_itr in range(t):\n        money = int(input())\n        n = int(input())\n        arr = list(map(int, input().rstrip().split()))\n        result = solve(arr, money)\n        print(result)\n"]
2022-04-20 23:43:43.525491 size on output set 3
2022-04-20 23:43:43.525502 num operations 1
2022-04-20 23:43:43.525507 size on input set 1
2022-04-20 23:43:43.525677 using api key sourya
2022-04-20 23:43:43.563247 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:43:45.065198 using api key sunu
2022-04-20 23:43:53.708992 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport itertools\n\nN = int(input())\nt = tuple(map(int, input().split()))\n\nans = 0\nfor comb in itertools.combinations(t, 3):\n    if comb[0] != comb[1] and comb[0] != comb[2] and comb[1] != comb[2]:\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    }
  ],
  "created": 1650498225,
  "object": "edit"
}
2022-04-20 23:43:53.709218 fix syntax errors 3 ['\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nimport itertools\n\nN = int(input())\nt = tuple(map(int, input().split()))\n\nans = 0\nfor comb in itertools.combinations(t, 3):\n    if comb[0] != comb[1] and comb[0] != comb[2] and comb[1] != comb[2]:\n        ans += 1\n\nprint(ans)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n']
2022-04-20 23:43:53.709248 size on output set 2
