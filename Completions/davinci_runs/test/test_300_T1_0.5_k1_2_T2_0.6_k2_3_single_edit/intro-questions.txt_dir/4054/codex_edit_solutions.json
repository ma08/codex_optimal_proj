["\n\nimport sys\n\ndef main():\n    pass\n    \nif __name__ == '__main__':\n    main()\n", "\n# def gcd(a,b):\n# \tif(a==0):\n# \t\treturn b\n# \telse:\n# \t\treturn gcd(b%a,a)\n# def lcm(a,b):\n# \treturn (a*b)//gcd(a,b)\n# def main():\n# \ta = [int(x) for x in input().split()]\n# \tb = a[0]\n# \tfor i in range(1,len(a)):\n# \t\tb = lcm(b,a[i])\n# \tprint(b)\n# if __name__ == '__main__':\n# \tmain()\n#SOLUTION\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    a = [int(x) for x in input().split()]\n    b = a[0]\n    for i in range(1, len(a)):\n        b = lcm(b, a[i])\n    print(b)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read input\n    a = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Compute and print answer\n    print(min(a))\n    \nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    a = [int(x) for x in input().split()]\n    b = a[0]\n    for i in range(1, len(a)):\n        b = lcm(b, a[i])\n    print(b)\n\nif __name__ == '__main__':\n    main()\n", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    b = [int(x) for x in input().split()]\n    c = b[0]\n    for i in range(1, len(b)):\n        c = lcm(c, b[i])\n    print(b)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read input\n    a = [int(x) for x in sys.stdin.readline().split()]\n\n    # Compute and print answer\n    print(min(a))\n\nif __name__ == '__main__':\n    main()\n"]