["<?php\n\n$file = fopen(\"file.txt\", \"r\") or die(\"Unable to open file!\");\n\n$data = fread($file,filesize(\"file.txt\"));\n\necho $data;\n\n$file = fopen(\"file.txt\", \"w\") or die(\"Unable to open file!\");\n\n$txt = \"Rohan\\n\";\nfwrite($file, $txt);\n$txt = \"Sanket\\n\";\nfwrite($file, $txt);\n\nfclose($file);\n\n?>\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            if count > 10000:\n                print(-1)\n            else:\n                print(count)\n                i = 0\n                j = 0\n                while i < n and j < n:\n                    if s[i] == t[j]:\n                        i += 1\n                        j += 1\n                    else:\n                        print(i, end=' ')\n                        i += 1\n                        j += 1\n        else:\n            print(-1)\n\nmain()\n", "from pprint import pprint\nimport os\nimport sys\n\n\ndef is_pos_int(x):\n    try:\n        x = int(x)\n        if x > 0:\n            return True\n        else:\n            return False\n    except ValueError:\n        return False\n\n\ndef is_valid_count(x):\n    try:\n        x = int(x)\n        if 0 <= x <= 10:\n            return True\n        else:\n            return False\n    except ValueError:\n        return False\n\n\ndef list_file(path):\n    try:\n        files = os.listdir(path)\n        if len(files) == 0:\n            return 'Folder is empty'\n        else:\n            return files\n    except FileNotFoundError:\n        return 'Folder not found'\n\n\ndef count_files(files):\n    count = 0\n    for file in files:\n        if os.path.isfile(file):\n            count += 1\n    return count\n\n\ndef count_bytes(files):\n    total_bytes = 0\n    for file in files:\n        if os.path.isfile(file):\n            total_bytes += os.path.getsize(file)\n    return total_bytes\n\n\ndef get_file_info(file):\n    file_info = {}\n    file_info['name'] = os.path.basename(file)\n    file_info['size'] = os.path.getsize(file)\n    file_info['date'] = os.path.getmtime(file)\n    return file_info\n\n\ndef get_top_files(files, count):\n    top_files = []\n    for file in files:\n        if os.path.isfile(file):\n            top_files.append(get_file_info(file))\n\n    top_files.sort(key=lambda x: x['size'], reverse=True)\n    return top_files[:count]\n\n\nif __name__ == '__main__':\n    if len(sys.argv) < 2:\n        print('No path provided')\n        sys.exit()\n\n    path = sys.argv[1]\n    files = list_file(path)\n    if files == 'Folder is empty':\n        print('Folder is empty')\n        sys.exit()\n    elif files == 'Folder not found':\n        print('Folder not found')\n        sys.exit()\n\n    print('Total files: ', count_files(files))\n    print('Total bytes: ', count_bytes(files))\n\n    if len(sys.argv) > 2:\n        count = sys.argv[2]\n        if is_valid_count(count):\n            top_files = get_top_files(files, int(count))\n            pprint(top_files)\n        else:\n            print('Count must be between 0 and 10')\n            sys.exit()\n\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            print(count)\n            i = 0\n            j = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    print(i, end=' ')\n                    i += 1\n                    count += 1\n        else:\n            print(-1)\n\nmain()\n", "#!/bin/bash\n\necho \"Hello World\"\n", "\n\ndef main():\n    # read data for n sequences\n    n = int(input())\n    s = input()\n    t = input()\n\n    # solve\n    if s == t:\n        print(0)\n    else:\n        # create a dictionary to store the number of occurences of each character\n        d = {}\n        for i in range(n):\n            if s[i] in d:\n                d[s[i]] += 1\n            else:\n                d[s[i]] = 1\n            if t[i] in d:\n                d[t[i]] -= 1\n            else:\n                d[t[i]] = -1\n        flag = True\n        for key in d:\n            if d[key] != 0:\n                flag = False\n                break\n        if flag:\n            i = 0\n            j = 0\n            count = 0\n            while i < n and j < n:\n                if s[i] == t[j]:\n                    i += 1\n                    j += 1\n                else:\n                    i += 1\n                    count += 1\n            if count > 10000: # output -1 if count is more than 10000\n                print(-1)\n            else:\n                print(count)\n                if count <= 10000: # output index if count is less than or equal to 10000\n                    i = 0\n                    j = 0\n                    while i < n and j < n:\n                        if s[i] == t[j]:\n                            i += 1\n                            j += 1\n                        else:\n                            print(i, end=' ')\n                            i += 1\n                            count += 1\n        else:\n            print(-1)\n\nmain()\n"]