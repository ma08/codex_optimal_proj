2022-04-20 23:44:45.590021 num operations 1
2022-04-20 23:44:45.590047 size on input set 1
2022-04-20 23:44:45.590210 using api key gabby
2022-04-20 23:44:45.719858 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:44:47.221759 using api key kouti
2022-04-20 23:44:52.995422 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = -1\nrest = 0\n\nfor i in a:\n    if i == 0:\n        if max_rest < rest:\n            max_rest = rest\n        rest = 0\n    else:\n        rest += 1\n\nif max_rest < rest:\n    max_rest = rest\n\nprint(max_rest)\n"
    }
  ],
  "created": 1650498287,
  "object": "edit"
}
2022-04-20 23:44:52.995678 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = -1\nrest = 0\n\nfor i in a:\n    if i == 0:\n        if max_rest < rest:\n            max_rest = rest\n        rest = 0\n    else:\n        rest += 1\n\nif max_rest < rest:\n    max_rest = rest\n\nprint(max_rest)\n']
2022-04-20 23:44:52.995710 size on output set 3
2022-04-20 23:44:52.995721 num operations 1
2022-04-20 23:44:52.995727 size on input set 1
2022-04-20 23:44:52.995900 using api key derek
2022-04-20 23:44:53.036446 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 23:44:54.538413 using api key derek
2022-04-20 23:44:54.578898 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 23:44:57.582304 using api key sunu
2022-04-20 23:45:03.822328 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximal length of 0s\nmax_length = 1\nlength = 0\n    if a[j] == 0:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 0s\nmax_length += sum(a[:n-1])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0 and count the 1s before it\ncount = 0\ni = 0\nwhile a[i] == 1:\n    count += 1\n    i += 1\n\n# Find the maximal length of 1s between 0s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the 1s before the first 0\nmax_length += count\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\nnn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1650498297,
  "object": "edit"
}
2022-04-20 23:45:03.822615 fix syntax errors 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximal length of 0s\nmax_length = 1\nlength = 0\n    if a[j] == 0:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 0s\nmax_length += sum(a[:n-1])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0 and count the 1s before it\ncount = 0\ni = 0\nwhile a[i] == 1:\n    count += 1\n    i += 1\n\n# Find the maximal length of 1s between 0s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the 1s before the first 0\nmax_length += count\n\nprint(max_length)\n', '\nnn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-20 23:45:03.822665 size on output set 3
