2022-04-21 00:17:34.104883 num operations 1
2022-04-21 00:17:34.104896 size on input set 1
2022-04-21 00:17:34.105044 using api key sunu
2022-04-21 00:17:36.756323 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500254,
  "object": "edit"
}
2022-04-21 00:17:36.756585 fix syntax errors 3 ["\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:17:36.756613 size on output set 3
2022-04-21 00:17:36.756624 num operations 1
2022-04-21 00:17:36.756630 size on input set 1
2022-04-21 00:17:36.756832 using api key sourya
2022-04-21 00:17:36.794095 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-21 00:17:38.296009 using api key derek
2022-04-21 00:17:38.334043 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-21 00:17:41.337460 using api key sourya
2022-04-21 00:17:41.375127 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-21 00:17:47.381588 using api key gabby
2022-04-21 00:17:47.419174 in retry 3 12.0 <class 'Exception'>, Retrying in 12 seconds...
2022-04-21 00:17:59.431595 using api key derek
2022-04-21 00:17:59.469262 in retry 2 24.0 <class 'Exception'>, Retrying in 24 seconds...
2022-04-21 00:18:23.477520 using api key jaanu
2022-04-21 00:18:39.708580 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\ndef read_strs():\n    return read_line().split(' ')\n\n\n    # T = int(input())\n    # X = int(input())\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 #\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650500303,
  "object": "edit"
}
2022-04-21 00:18:39.708909 fix syntax errors 3 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\ndef read_strs():\n    return read_line().split(' ')\n\n\n    # T = int(input())\n    # X = int(input())\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 #\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-21 00:18:39.708954 size on output set 3
