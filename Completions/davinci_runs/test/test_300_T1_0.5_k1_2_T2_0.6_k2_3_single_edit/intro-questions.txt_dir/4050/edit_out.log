2022-04-20 22:58:34.554008 num operations 1
2022-04-20 22:58:34.554040 size on input set 1
2022-04-20 22:58:34.554238 using api key soukgp
2022-04-20 22:58:39.509603 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0, 0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = []\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j-1] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1650495514,
  "object": "edit"
}
2022-04-20 22:58:39.509878 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0, 0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = []\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j-1] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-20 22:58:39.509921 size on output set 3
2022-04-20 22:58:39.509932 num operations 1
2022-04-20 22:58:39.509938 size on input set 1
2022-04-20 22:58:39.510097 using api key gabby
2022-04-20 22:58:39.547587 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-20 22:58:41.049540 using api key gabby
2022-04-20 22:58:41.087117 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-20 22:58:44.090531 using api key derek
2022-04-20 22:58:44.127877 in retry 4 6.0 <class 'Exception'>, Retrying in 6 seconds...
2022-04-20 22:58:50.134284 using api key sunu
2022-04-20 22:58:57.822438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a: list) -> list:\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main() -> None:\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\ndef main():\n    input = sys.stdin.read()\n    data = list(map(int, input.split()))\n    n = data[0]\n    a = data[1:]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\ndef find_blocks(a, n):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650495530,
  "object": "edit"
}
2022-04-20 22:58:57.822661 fix syntax errors 3 ['\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a: list) -> list:\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main() -> None:\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    input = sys.stdin.read()\n    data = list(map(int, input.split()))\n    n = data[0]\n    a = data[1:]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\ndef find_blocks(a, n):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 22:58:57.822802 size on output set 3
