2022-04-20 22:58:15.206779 num operations 1
2022-04-20 22:58:15.206798 size on input set 1
2022-04-20 22:58:15.206951 using api key jaanu
2022-04-20 22:58:24.867543 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import defaultdict\nfrom itertools import permutations\n\ndef min_max_wins(n, a, b):\n    cnt_a = defaultdict(int)\n    cnt_b = defaultdict(int)\n    for i in a:\n        cnt_a[i] += 1\n    for i in b:\n        cnt_b[i] += 1\n    w_a = 0\n    w_b = 0\n    w_a += min(cnt_a[\"R\"], cnt_b[\"S\"])\n    w_a += min(cnt_a[\"S\"], cnt_b[\"P\"])\n    w_a += min(cnt_a[\"P\"], cnt_b[\"R\"])\n    w_b += min(cnt_b[\"R\"], cnt_a[\"S\"])\n    w_b += min(cnt_b[\"S\"], cnt_a[\"P\"])\n    w_b += min(cnt_b[\"P\"], cnt_a[\"R\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650495495,
  "object": "edit"
}
2022-04-20 22:58:24.867812 fix syntax errors 3 ['\nfrom sys import stdin\nfrom collections import defaultdict\nfrom itertools import permutations\n\ndef min_max_wins(n, a, b):\n    cnt_a = defaultdict(int)\n    cnt_b = defaultdict(int)\n    for i in a:\n        cnt_a[i] += 1\n    for i in b:\n        cnt_b[i] += 1\n    w_a = 0\n    w_b = 0\n    w_a += min(cnt_a["R"], cnt_b["S"])\n    w_a += min(cnt_a["S"], cnt_b["P"])\n    w_a += min(cnt_a["P"], cnt_b["R"])\n    w_b += min(cnt_b["R"], cnt_a["S"])\n    w_b += min(cnt_b["S"], cnt_a["P"])\n    w_b += min(cnt_b["P"], cnt_a["R"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 22:58:24.867860 size on output set 3
2022-04-20 22:58:24.867871 num operations 1
2022-04-20 22:58:24.867878 size on input set 1
2022-04-20 22:58:24.868044 using api key sunu
2022-04-20 22:58:34.139120 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % n == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = input().split()\n    b = input().split()\n    \n    # get counts\n    a_count = [0] * 3\n    b_count = [0] * 3\n    for i in range(n):\n        if a[i] == b[i]:\n            continue\n        elif (a[i] + 1) % 3 == b[i]:\n            a_count[b[i]] += 1\n            b_count[(b[i] + 1) % 3] += 1\n        else:\n            a_count[b[i]] += 1\n            b_count[(b[i] - 1) % 3] += 1\n    \n    # get winner\n    if a_count[0] > b_count[0]:\n        print(\"Anton\")\n    elif a_count[0] < b_count[0]:\n        print(\"Danik\")\n    else:\n        print(\"Friendship\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650495504,
  "object": "edit"
}
2022-04-20 22:58:34.139404 fix syntax errors 3 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % n == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = input().split()\n    b = input().split()\n    \n    # get counts\n    a_count = [0] * 3\n    b_count = [0] * 3\n    for i in range(n):\n        if a[i] == b[i]:\n            continue\n        elif (a[i] + 1) % 3 == b[i]:\n            a_count[b[i]] += 1\n            b_count[(b[i] + 1) % 3] += 1\n        else:\n            a_count[b[i]] += 1\n            b_count[(b[i] - 1) % 3] += 1\n    \n    # get winner\n    if a_count[0] > b_count[0]:\n        print("Anton")\n    elif a_count[0] < b_count[0]:\n        print("Danik")\n    else:\n        print("Friendship")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-20 22:58:34.139552 size on output set 3
