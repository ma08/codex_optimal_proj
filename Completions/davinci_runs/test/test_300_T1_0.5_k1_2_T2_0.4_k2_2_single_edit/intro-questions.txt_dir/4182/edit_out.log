2022-04-17 20:18:32.210534 num operations 1
2022-04-17 20:18:32.210551 size on input set 1
2022-04-17 20:18:33.718145 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, x, y = map(int, input().split())\nx_list = [int(i) for i in input().split()]\ny_list = [int(i) for i in input().split()]\n\nx_list.sort()\ny_list.sort()\n\nif x_list[-1] >= y_list[0]:\n    print('War')\nelse:\n    print('No War')\n"
    },
    {
      "index": 1,
      "text": "\nn, m, x, y = map(int, input().split())\nx_list = [int(i) for i in input().split()]\ny_list = [int(i) for i in input().split()]\n\nx_list.sort()\ny_list.sort()\n\nif x_list[-1] >= y_list[0]:\n    print('War')\nelse:\n    print('No War')\n"
    }
  ],
  "created": 1650226712,
  "object": "edit"
}
2022-04-17 20:18:33.718341 fix syntax errors 2 ["\nn, m, x, y = map(int, input().split())\nx_list = [int(i) for i in input().split()]\ny_list = [int(i) for i in input().split()]\n\nx_list.sort()\ny_list.sort()\n\nif x_list[-1] >= y_list[0]:\n    print('War')\nelse:\n    print('No War')\n", "\nn, m, x, y = map(int, input().split())\nx_list = [int(i) for i in input().split()]\ny_list = [int(i) for i in input().split()]\n\nx_list.sort()\ny_list.sort()\n\nif x_list[-1] >= y_list[0]:\n    print('War')\nelse:\n    print('No War')\n"]
2022-04-17 20:18:33.718363 size on output set 1
2022-04-17 20:18:33.718375 num operations 1
2022-04-17 20:18:33.718379 size on input set 1
2022-04-17 20:18:42.958448 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m, x, y = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    y_list = list(map(int, input().split()))\n\n    for z in range(x + 1, y):\n        if all(z > x_i for x_i in x_list) and all(z <= y_i for y_i in y_list):\n            print(\"No War\")\n            sys.exit()\n\n    print(\"War\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import math\nimport heapq\nimport bisect\nimport random\nimport numpy as np\nfrom collections import Counter, deque\nfrom itertools import combinations, permutations, accumulate, product, combinations_with_replacement\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect_left, bisect_right\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\nfrom decimal import Decimal, getcontext\n# input = sys.stdin.readline \ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef lcm(a, b): return a * b // gcd(a, b)\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\nnum_list = []\nstr_list = []\ndef main():\n    n = i_input()\n    num_list = i_list()\n    num_list.sort()\n    print(num_list[0])\nif __name__ == '__main__':\n    main()\n\nimport sys\n\ndef main():\n    n, m, x, y = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    y_list = list(map(int, input().split()))\n\n    for z in range(x + 1, y):\n        if all(z > x_i for x_i in x_list) and all(z <= y_i for y_i in y_list):\n            print(\"No War\")\n            sys.exit()\n\n    print(\"War\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650226713,
  "object": "edit"
}
2022-04-17 20:18:42.958619 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, m, x, y = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    y_list = list(map(int, input().split()))\n\n    for z in range(x + 1, y):\n        if all(z > x_i for x_i in x_list) and all(z <= y_i for y_i in y_list):\n            print("No War")\n            sys.exit()\n\n    print("War")\n\nif __name__ == \'__main__\':\n    main()\n', 'import math\nimport heapq\nimport bisect\nimport random\nimport numpy as np\nfrom collections import Counter, deque\nfrom itertools import combinations, permutations, accumulate, product, combinations_with_replacement\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect_left, bisect_right\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\nfrom decimal import Decimal, getcontext\n# input = sys.stdin.readline \ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef lcm(a, b): return a * b // gcd(a, b)\nsys.setrecursionlimit(10 ** 6)\nINF = float(\'inf\')\nMOD = 10 ** 9 + 7\nnum_list = []\nstr_list = []\ndef main():\n    n = i_input()\n    num_list = i_list()\n    num_list.sort()\n    print(num_list[0])\nif __name__ == \'__main__\':\n    main()\n\nimport sys\n\ndef main():\n    n, m, x, y = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    y_list = list(map(int, input().split()))\n\n    for z in range(x + 1, y):\n        if all(z > x_i for x_i in x_list) and all(z <= y_i for y_i in y_list):\n            print("No War")\n            sys.exit()\n\n    print("War")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-17 20:18:42.958657 size on output set 2
