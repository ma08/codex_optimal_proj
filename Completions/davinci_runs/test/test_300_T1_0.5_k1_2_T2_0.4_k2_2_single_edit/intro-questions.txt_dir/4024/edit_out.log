2022-04-17 19:55:33.963792 num operations 1
2022-04-17 19:55:33.963810 size on input set 1
2022-04-17 19:55:37.523495 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())  # n = 3, k = 3\n\nif k > n or k == 0:\n    print(-1)\n\nprint(n - k)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    }
  ],
  "created": 1650225334,
  "object": "edit"
}
2022-04-17 19:55:37.523698 fix syntax errors 2 ['\nn, k = map(int, input().split())  # n = 3, k = 3\n\nif k > n or k == 0:\n    print(-1)\n\nprint(n - k)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n']
2022-04-17 19:55:37.523721 size on output set 2
2022-04-17 19:55:37.523731 num operations 1
2022-04-17 19:55:37.523736 size on input set 1
2022-04-17 19:55:42.346217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n // 2] - a[n // 2 - 1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    s_set = set()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s_set:\n        s_set.add(s[i])\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650225337,
  "object": "edit"
}
2022-04-17 19:55:42.346388 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n // 2] - a[n // 2 - 1])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    s_set = set()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s_set:\n        s_set.add(s[i])\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-17 19:55:42.346411 size on output set 2
