2022-04-17 20:11:34.129335 num operations 1
2022-04-17 20:11:34.129354 size on input set 1
2022-04-17 20:11:40.016029 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt and strips newlines\nline = line.rstrip()\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2:]\n\n#sets first and second to reversed first and second\nfirst = first[::-1] \nsecond = second[::-1] \n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line, it's a palindrome.\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    },
    {
      "index": 1,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second\nsecond = second[::-1]\n\n#sets first to reversed first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1650226294,
  "object": "edit"
}
2022-04-17 20:11:40.016232 fix syntax errors 2 ['\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt and strips newlines\nline = line.rstrip()\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2:]\n\n#sets first and second to reversed first and second\nfirst = first[::-1] \nsecond = second[::-1] \n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line, it\'s a palindrome.\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n', '\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename\ntxt = open(filename)\n\n#sets line to read txt\nline = txt.read()\n\n#sets ln to length of line\nln = len(line)\n\n#sets first to first half of line\nfirst = line[:ln/2]\n\n#sets second to second half of line\nsecond = line[ln/2+1:]\n\n#sets second to reversed second\nsecond = second[::-1]\n\n#sets first to reversed first\nfirst = first[::-1]\n\n#sets middle to middle of line\nmiddle = line[ln/2]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-17 20:11:40.016263 size on output set 2
2022-04-17 20:11:40.016273 num operations 1
2022-04-17 20:11:40.016278 size on input set 1
2022-04-17 20:11:43.009102 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\ninput_str = input(\"Enter a string: \")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('It is palindrome')\nelse:\n    print('It is not palindrome')\n"
    }
  ],
  "created": 1650226300,
  "object": "edit"
}
2022-04-17 20:11:43.009416 fix syntax errors 2 ["\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", '\n\ninput_str = input("Enter a string: ")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print(\'It is palindrome\')\nelse:\n    print(\'It is not palindrome\')\n']
2022-04-17 20:11:43.009446 size on output set 2
