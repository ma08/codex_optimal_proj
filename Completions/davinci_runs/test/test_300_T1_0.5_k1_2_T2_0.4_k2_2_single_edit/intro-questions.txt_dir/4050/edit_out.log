2022-04-17 19:59:42.143654 num operations 1
2022-04-17 19:59:42.143669 size on input set 1
2022-04-17 19:59:48.759476 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1650225582,
  "object": "edit"
}
2022-04-17 19:59:48.759690 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', 'def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-17 19:59:48.759729 size on output set 2
2022-04-17 19:59:48.759738 num operations 1
2022-04-17 19:59:48.759743 size on input set 1
2022-04-17 19:59:54.608028 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()][:n]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650225588,
  "object": "edit"
}
2022-04-17 19:59:54.608243 fix syntax errors 2 ['\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()][:n]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 19:59:54.608271 size on output set 2
