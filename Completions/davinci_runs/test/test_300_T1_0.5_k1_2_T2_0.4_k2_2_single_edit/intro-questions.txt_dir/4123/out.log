2022-04-09 18:40:44.684590 """
Two-gram is an ordered pair (i.e. string of length two) of capital Latin letters. For example, "AZ", "AA", "ZA" — three distinct two-grams.

You are given a string $s$ consisting of $n$ capital Latin letters. Your task is to find any two-gram contained in the given string as a substring (i.e. two consecutive characters of the string) maximal number of times. For example, for string $s$ = "BBAABBBA" the answer is two-gram "BB", which contained in $s$ three times. In other words, find any most frequent two-gram.

Note that occurrences of the two-gram can overlap with each other.


-----Input-----

The first line of the input contains integer number $n$ ($2 \le n \le 100$) — the length of string $s$. The second line of the input contains the string $s$ consisting of $n$ capital Latin letters.


-----Output-----

Print the only line containing exactly two capital Latin letters — any two-gram contained in the given string $s$ as a substring (i.e. two consecutive characters of the string) maximal number of times.


-----Examples-----
Input
7
ABACABA

Output
AB

Input
5
ZZZAA

Output
ZZ



-----Note-----

In the first example "BA" is also valid answer.

In the second example the only two-gram "ZZ" can be printed because it contained in the string "ZZZAA" two times.
"""
2022-04-09 18:40:44.684627 --------------------------
2022-04-09 18:40:57.629346 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\ns = input()\n\ndef solve(s):\n    max_count = 0\n    max_gram = \"\"\n    for i in range(len(s) - 1):\n        gram = s[i:i+2]\n        count = s.count(gram)\n        if count > max_count:\n            max_count = count\n            max_gram = gram\n    return max_gram\n\nprint(solve(s))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef solve(s):\n    \"\"\"\n    >>> solve(\"BBAABBBA\")\n    'BB'\n    >>> solve(\"ABACABA\")\n    'AB'\n    >>> solve(\"ZZZAA\")\n    'ZZ'\n    \"\"\"\n    counter = dict()\n    for i in range(len(s) - 1):\n        two_gram = s[i:i+2]\n        counter[two_gram] = counter.get(two_gram, 0) + 1\n    max_value = max(counter.values())\n    for k, v in counter.items():\n        if v == max_value:\n            return k\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    result = solve(s)\n    print(result)"
    }
  ],
  "created": 1649544045,
  "id": "cmpl-4vE332avUEsTrchEJP2OmhoLkfuNM",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 18:40:57.629814 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\ns = input()\n\ndef solve(s):\n    max_count = 0\n    max_gram = \"\"\n    for i in range(len(s) - 1):\n        gram = s[i:i+2]\n        count = s.count(gram)\n        if count > max_count:\n            max_count = count\n            max_gram = gram\n    return max_gram\n\nprint(solve(s))"
}
2022-04-09 18:40:57.629959 REASON stop
2022-04-09 18:40:57.643239 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef solve(s):\n    \"\"\"\n    >>> solve(\"BBAABBBA\")\n    'BB'\n    >>> solve(\"ABACABA\")\n    'AB'\n    >>> solve(\"ZZZAA\")\n    'ZZ'\n    \"\"\"\n    counter = dict()\n    for i in range(len(s) - 1):\n        two_gram = s[i:i+2]\n        counter[two_gram] = counter.get(two_gram, 0) + 1\n    max_value = max(counter.values())\n    for k, v in counter.items():\n        if v == max_value:\n            return k\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    result = solve(s)\n    print(result)"
}
2022-04-09 18:40:57.643366 REASON stop
