["K = int(input())\n\na = [7] * (K + 1)\na[0] %= K\nfor i in range(1, K+1):\n    a[i] = (10*a[i-1] + 7) % K\n\nans = [i+1 for i, ai in enumerate(a) if ai == 0]\n\nif len(ans) > 0:\n    print((ans[0]))\nelse:\n    print((-1))\n", "k = int(input())\naaa = [0] * k\naaa[0] = 7 % k\nfor i in range(1, k):\n    aaa[i] = (aaa[i - 1] * 10 + 7) % k\nans = -1\nfor j in range(k):\n    if aaa[j] == 0:\n        ans = j + 1\n        break\nprint(ans)\n", "k = int(input())\n\nif 7 % k == 0:\n    print(1)\n    return\n\na = [7 % k]\nfor i in range(2, k+1):\n    aa = (10 % k) * a[-1] + a[0]\n    a.append(aa % k)\n    if a[-1] % k == 0:\n        print(i)\n        return\n\nprint(-1)", "K = int(input())\n\nt = 7\nfor i in range(K):\n    if t % K == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % K\nelse:\n    print(-1)", "def main(K):\n    ans = -1\n    if K%2==0 or K%5==0:\n        return ans\n    else:\n        seven = 7\n        for i in range(K):\n            if seven % K == 0:\n                ans = i + 1\n                return ans\n            seven = (seven * 10 + 7) % K\n\ndef __starting_point():\n    K = int(input())\n    ans = main(K)\n    print(ans)\n\n\n\n__starting_point()", "ans = -1\na = 0\nK = int(input())\nif K % 2 == 0:\n    ans = -1\nelif K % 5 == 0:\n    ans = -1\nelse:\n    for i in range(0, K):\n        a = (10 * a + 7) % K\n        if a == 0:\n            ans = i + 1\n            break\nprint(ans)", "K = int(input())\n\ni = 7%K\nse = set([i])\ncnt = 1\nwhile True:\n  if i == 0:\n    print(cnt)\n    break\n  cnt += 1\n  i = (i*10 + 7)%K\n  if i in se:\n    print((-1))\n    break\n  else:\n    se.add(i)\n", "K = int(input())\n\nfrag = [0]*(K+1)\nfrag[1] = 7%K\nfor i in range(2,K+1):\n   frag[i] = (frag[i-1] * 10 + 7) % K\n\nfor i in range(1,K+1):\n    if frag[i] == 0:\n        print(i)\n        break\nelse:\n    print(-1)", "import sys\nread = sys.stdin.read\n#readlines = sys.stdin.readlines\nfrom collections import defaultdict\ndef main():\n    k = int(input())\n    if k % 2 == 0:\n        print((-1))\n        return\n    rems = defaultdict(int)\n    n = 7 % k\n    next_digit = 70 % k\n    r = 1\n    while True:\n        if n == 0:\n            print(r)\n            return\n        elif rems[n]:\n            print((-1))\n            return\n        else:\n            rems[n] = 1\n            n += next_digit\n            n = n % k\n            next_digit = (next_digit * 10) % k\n            r += 1\ndef __starting_point():\n    main()\n\n__starting_point()", "k = int(input())\na = [0] * (10**6+1)\na[1] = 7 % k\nfor i in range(2, k+1):\n    a[i] = (a[i-1]*10+7) % k\nfor i in range(1, k+1):\n    if a[i] == 0:\n        print(i)\n        break\nelse:\n    print((-1))\n", "k = int(input())\nans = -1\nsm = 7\ni = 1\nif k % 2 == 0 or k % 5 == 0:\n    ans = -1\nelif sm % k == 0:\n    ans = 1\nelse:\n    while True:\n        sm = (sm * 10 + 7) % k\n        if sm == 0:\n            ans = i + 1\n            break\n        i += 1\nprint(ans)\n", "K = int(input())\nif K%2 == 0 or K%5 == 0:\n    print(-1)\n    return\nr = 7%K\nans = 1\nwhile r != 0:\n    r = (r*10 + 7)%K\n    ans += 1\nprint(ans)", "k = int(input())\n\nnum = 7 % k\nans = 1\nmod = [0 for _ in range(k)]\nmod[num] = 1\nwhile(num):\n    num = (num * 10 + 7) % k\n    if mod[num] > 0:\n        ans = -1\n        break\n    ans += 1\n    mod[num] += 1\n\nprint(ans)\n", "N = int(input())\nops = 0\nif N%2 == 0 or N%5 == 0:\n    ops = 1\n\nelse:\n    if N%7 == 0:\n        L = 9*N//7\n    \n    else:\n        L = 9*N\n\n    ch = 10%L\n    for i in range(1, N+1):\n        if ch == 1:\n            ans = i\n            break\n\n        ch = (10*ch)%L\n\n        if i == N+1:\n            ops = 1\n\nif ops:\n    print((-1))\n\nelse:\n    print(ans)\n\n\n", "K = int(input())\n\nt = 7\nfor i in range(K):\n    if t % K == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % K\nelse:\n    print(-1)", "def main():\n\tK = int(input())\n\trn = [0]\n\tr = [0] * K\n\tfor i in range(K):\n\t\tri = (rn[-1] * 10 + 7) % K\n\t\tif ri == 0:\n\t\t\tprint(i + 1)\n\t\t\treturn 0\n\t\telif r[ri] == 0:\n\t\t\tr[ri] = 1\n\t\t\trn.append(ri)\n\t\telif r[ri] == 1:\n\t\t\tprint(-1)\n\t\t\treturn 0\n\nmain()", "k = int(input())\na = [0] * (10 ** 6+1)\na[0] = 7 % k\nfor i in range(k):\n    a[i+1] = (a[i] * 10 + 7) % k\nfor i in range(k):\n    if a[i] == 0:\n        print(i+1)\n        return\nprint(-1)", "k = int(input())\n\ndef cal(k):\n    n = 7\n    for i in range(1,10000000):\n        if n % k == 0:\n            return i\n        else:\n            n = (n *10 + 7) % k\n    return -1\n\nprint(cal(k))", "k = int(input())\ncnt = 1\nmod = 7\n\nfor i in range(k):\n    if mod%k == 0:\n        break\n    cnt += 1\n    mod = (mod*10+7)%k\n\nif mod%k == 0:\n    print(cnt)\nelse:\n    print(-1)", "k = int(input())\n\nif k%7==0:\n    l = 9*(k//7)\nelif k%5==0 or k%2==0:\n    print(-1)\n    return\nelse:\n    l = 9*k\n\nn = 10\nfor i in range(1, l):\n    if n % l == 1:\n        print(i)\n        return\n    n = 10*(n%l)\n\nprint(-1)", "K = int(input())\nmod = 7 % K\nans = -1\n\nfor k in range(K):\n    if mod == 0:\n        ans = k + 1\n        break\n    mod = (mod * 10 + 7) % K\n\nprint(ans)", "k=int(input())\na=0\nc=0\nt=1\nfor i in range(k):\n  a=(a*10+7)%k\n  c+=1\n  if a==0:\n    t=0\n    print(c)\n    break\nif t:\n  print((-1))\n", "k = int(input())\n\n\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\nelse:\n    exc = 0\n    for i in range(1, 10 ** 8):\n        exc = exc * 10 + 7\n        exc = exc % k\n        if exc % k == 0:\n            ans = i\n            break\n    print(ans)", "def main():\n  K = int(input())\n  ans = False\n  if K % 2 == 0:\n    print(-1)\n    return\n  cnt = 7 % K\n  for i in range(1, K+1):\n    if cnt == 0:\n      ans = True\n      print(i)\n      return\n    cnt = (10 * cnt + 7) % K\n  if ans == False:\n    print(-1)\n    return\nmain()", "k = int(input())\na = 7\nfor i in range(k+1):\n  b = a%k\n  if b == 0:\n    print(i+1)\n    return\n  a = b*10+7\nprint('-1')", "\nk = int(input())\nr = 7 % k\nfor i in range(k):\n    if r == 0:\n        print(i+1)\n        return\n    r = (r * 10 + 7) % k\nprint(-1)", "k=int(input())\n\nif k%2==0 or k%5==0:\n  print(-1)\n  return\n\nans=1\nnum=7\nwhile num%k!=0:\n  num=10*num+7\n  num%=k\n  ans+=1\n\nprint(ans)", "mod = int(input())\na = {}\nb = int(0)\nflag = int(0)\nans = int(0)\nfor i in range(mod):\n  b = b * 10 + 7\n  b = b % mod\n  if b == 0:\n    flag = 1\n    ans = int(i) + 1\n    break\n  else:\n    pass\n\nif flag == 1:\n  print(ans)\nelse:\n  print(\"-1\")", "k=int(input())\nrem=0\n\nfor i in range(k):\n    rem=(10*rem+7)%k\n    if rem==0:\n        print(i+1)\n\n        break\n    if i==k-1:\n        print(-1)", "K = int(input())\nmod = 7\nfor i in range(K):\n    mod = mod % K\n    if(mod == 0):\n        print(i+1)\n        return\n    else:\n        mod *=10\n        mod += 7\nprint(\"-1\")", "def ans(k):\n    arry = [None] * k\n    arry[0] = 7 % k\n    for i in range(k - 1):\n        arry[i+1] = (10*arry[i]+7) % k\n\n    for i in range(k):\n        if arry[i] == 0:\n            return i+1\n\n    return -1\n\n\nK = int(input())\nprint(ans(K))", "K = int(input())\n\na = 7\nfor i in range(1, K+1):\n    b = a%K\n    if b == 0:\n        print(i)\n        return\n    a = b*10+7\nprint(-1)", "#                               #\n    # author : samars_diary #\n    # 17-09-2020 \u2502 16:21:14 #\n#                               #\n\nimport sys, os.path\n\n#if(os.path.exists('input.txt')):\n    #sys.stdin = open('input.txt',\"r\")\n    #sys.stdout = open('output.txt',\"w\")\n\nsys.setrecursionlimit(10 ** 5)\n\ndef mod(): return 10**9+7\ndef i(): return sys.stdin.readline().strip()\ndef ii(): return int(sys.stdin.readline())\ndef li(): return list(sys.stdin.readline().strip())\ndef mii(): return map(int, sys.stdin.readline().split())\ndef lii(): return list(map(int, sys.stdin.readline().strip().split()))\n\n#print=sys.stdout.write\n\ndef solve():\n    a=ii()\n    val=7%a\n    for i in range(1,10**7):\n        if val==0:\n            print(i)\n            return\n        val=(val*10+7)%a\n    print(-1)\nfor _ in range(1):\n    solve()", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n# mod = 9982443453\n# mod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nk = I()\ni = 0\na = 0\nwhile i < k:\n    a = (a * 10 + 7)%k\n    if a == 0:\n        print((i+1))\n        return\n    i += 1\nprint((-1))\n", "import sys\n\nk = int(input())\nr = 0\n\n\nfor i in range(1, k+10):\n\tr *= 10\n\tr += 7\n\tr %= k\n\tif r == 0:\n\t\tprint(i)\n\t\treturn\n\nprint('-1')", "K = int(input())\na = 7\nans = -1\nfor i in range(K+1):\n  if a % K == 0:\n    ans = i + 1\n    break\n  a = (a * 10 + 7) % K\n\nprint(ans)", "k=int(input())\na=0\ncnt=-1\nfor i in range(1,k+1):\n  a=(10*a+7)%k\n  if a==0:\n    cnt=i\n    break\nprint(cnt)", "K = int(input())\n\nmod = 7\ncnt = 0\n\nfor i in range(K):\n    if mod % K == 0:\n        cnt += 1\n        break\n    else:\n        cnt += 1\n        mod = (mod * 10 + 7) % K\nif mod % K == 0:\n    print(cnt)\nelse:\n    print((-1))\n", "K = int(input())\n\ndef calc(K):\n    if K % 2 == 0:\n        return -1\n    seven =0\n    for i in range(1,10**6):\n        seven *= 10\n        seven += 7\n        seven %= K\n        if seven == 0 :\n            return i\n    return -1\n\nprint((calc(K)))\n\n", "\nk = int(input()) # 101, 999983\na = 7\nfor i in range(k+1):\n  if a % k ==0:\n    print((i + 1))\n    break\n  else:\n    a = (a * 10 + 7) % k\nelse:\n  print((-1))\n", "k=int(input())\n\nif k%2==0:\n  print(-1)\n  return\n  \nif k%5==0:\n  print(-1)\n  return\n  \nif k%7==0:\n  k=k//7\n\n# m(r)=10**0+10**1+...+10**(r-1)\n# 10*m(r)=10**1+10**2+...+10**r\n# 9*m(r)=10**r-10**0\n# m(r)=(10**r-1)/9\n\n# m(r)%n=(10**r-1)/9%k=0\n# (10**r-1)%(9*k)=0\n\n# 10**r%(9*k)=1\n# 10**r%(9*k)=(10**(r-1)%(9*k))*10%(9*k)=1\n\nr=1\nm=10\nwhile True:\n  m%=(9*k)\n  #print(r,m)\n  if m==1:\n    print(r)\n    return\n  r+=1\n  m*=10", "k = int(input())\nt = 7\nt %= k\n\nfor i in range(k+1):\n    if t == 0:\n        print((i+1))\n        break\n    t = (t*10+7) % k\nelse:\n    print((-1))\n", "import sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nINF = float('inf')\n\n\nk = I()\nans = -1\na = [0] * (k+1)\na[1] = 7 % k\nfor i in range(2, k+1):\n    a[i] = (a[i-1]*10 + 7) % k\n\nfor i in range(1, k+1):\n    if a[i] == 0:\n        print(i)\n        return\nprint((-1))\n", "def calc(k):\n    cur = 7 % k\n    for i in range(1, k + 1):\n        if cur == 0:\n            return i\n        else:\n            cur *= 10\n            cur += 7\n            cur %= k\n    return -1\n\n\nk = int(input())\nprint(calc(k))", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nk = int(input())\n\ntmp = 7\nres = 1\n\nfor i in range(k):\n    tmp %= k\n    if tmp == 0:\n        break\n    tmp = tmp * 10 + 7\n    res += 1\nif res > k and tmp > 0:\n    res = -1\n\nprint(res)\n", "k = int(input())\nkkk = [0] * k\nkkk[0] = 7 % k\nans = -1\nfor i in range(1, k):\n    kkk[i] = (kkk[i - 1] * 10 + 7) % k\nfor j in range(k):\n    if kkk[j] == 0:\n        ans = j + 1\n        break\nprint(ans)\n", "k = int(input())\nx = 7%k\nans = 1\nfor i in range(k):\n    if x == 0:\n        print(ans)\n        break\n    x = (10*x+7) % k\n    ans += 1\nelse:\n    print(-1)", "K=int(input())\nwa=0\nkake=1\nfor i in range(1,K+2):\n  if i!=1:\n    kake=kake*10%K\n  wa+=7*kake\n  if wa%K==0:\n    print(i)\n    return\nprint(-1)", "K = int(input())\n\nans = -1\n\nr = 7 % K\nSUM = r\nif SUM % K == 0:\n    ans = 1\nelse:\n    for i in range(1, K):\n        r = (r * 10) % K\n        SUM += r\n        if SUM % K == 0:\n            ans = i + 1\n            break\n    \nprint(ans)", "import sys\nk = int(input())\n\na = 7\na = a % k\nfor i in range(1000000):\n  if a ==0:\n    print((i+1))\n    return\n  else:\n    a = 10*a+7\n    a = a % k\n\nprint(\"-1\")\n", "k = int(input())\nans = -1\ns = 7\nfor i in range(k + 1):\n    if s % k == 0:\n        ans = i + 1\n        break\n    s = (s * 10 + 7) % k\nprint(ans)\n", "k = int(input())\nans = -1\nmod = 7%k\n\nfor i in range(k):\n    if mod == 0:\n        ans = i+1\n        break\n    mod = (mod*10+7)%k\nprint(ans)\n", "k=int(input())\nk *= 9\namari = 63\nfor i in range(1, 10 ** 6 + 1):\n  amari %= k\n  if amari == 0:\n    print(i)\n    break\n  else:\n    amari = amari * 10 + 63\nelse:\n  print(-1)", "K = int(input())\na = 7\nfor i in range(K+1):\n  if a % K ==0:\n    print(i + 1)\n    break\n  else:\n    a = (a * 10 + 7) % K\nelse:\n  print(-1)", "K = int(input())\n\ndef calc(K):\n    if K % 2 == 0:\n        return -1\n    seven =0\n    for i in range(1,K+1):\n        seven *= 10\n        seven += 7\n        seven %= K\n        if seven == 0 :\n            return i\n    return -1\n\nprint(calc(K))", "k = int(input())\nt = 7\nt %= k\nfor i in range(k + 1):\n    if t == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % k\nelse:\n    print(-1)", "K = int(input())\n\nt = 7\nfor i in range(K):\n    if t % K == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % K\nelse:\n    print(-1)", "K=int(input())\na=7\nflag=-1\nfor i in range (K):\n  if a%K==0:\n    flag=i+1\n    break\n  else:\n    a=(10*a+7)%K\nprint(flag)", "def main():\n    K = int(input())\n\n    if K % 2 == 0 or K % 5 == 0:\n        print((-1))\n        return\n\n    r = 7 % K\n    n = 1\n    while r != 0:\n        r = (10 * r + 7) % K\n        n += 1\n    print(n)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "k = int(input())\na = 7\nif k == 1 or k == 7 :\n    print((1))\n    return\n\nfor i in range(k):\n    a *= 10\n    a += 7\n    a %= k\n    if a == 0 :\n        print((i+2))\n        return\nprint((-1))\n", "a = int(input())\ntemp = 7\nmod = temp % a\ni = 1\n\nif a % 2 == 0 or a % 5 == 0:\n  print((-1))\n  return\n\nwhile mod != 0:\n  mod = (mod * 10 + 7) % a\n  i+=1\n\nprint(i)\n", "K = int(input())\nA = 7\ncount = 1\n\nfor i in range(K):\n  if A%K == 0:\n    print(count)\n    break\n  count += 1\n  A = (10*A + 7)%K\nelse:\n  print(\"-1\")", "k = int(input())\n\na = 0\nfor i in range(k):\n  a = (a * 10 + 7) % k\n  if a == 0:\n    print(i + 1)\n    return\nprint(-1)", "k = int(input())\nseven = 7\nans = -1\n\nfor i in range(1,k+1):\n    seven %= k\n    if seven  == 0:\n        ans = i\n        break\n    else:\n        seven = seven * 10 + 7\n\nprint(ans)", "# author:  Taichicchi\n# created: 19.09.2020 00:06:44\n\nimport sys\n\nK = int(input())\n\na = 7 % K\n\nfor k in range(K + 2):\n    if a == 0:\n        print((k + 1))\n        break\n    a = (a * 10 + 7) % K\nelse:\n    print((-1))\n", "import sys\nK = int(input())\na = 7%K\n\nif a==0:\n    print(1)\n    return\n\nfor i in range(1,K):\n    a = (10 * a + 7)%K\n    if a == 0:\n        print(i+1)\n        return\n\nprint(-1)", "\nk = int(input())\nr = 7 % k\nfor i in range(2*k):\n    if r == 0:\n        print(i+1)\n        return\n    r = (r * 10 + 7) % k\nprint(-1)", "k=int(input())\n\nif k%2==0 or k%5==0:\n  print(-1); return\n\ncnt=num=0\nwhile 1:\n  num+=7*pow(10,cnt,k)\n  num%=k\n  cnt+=1\n  if num==0:\n    break\nprint(cnt)", "K = int(input())\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\n    return\n\nstart = j = 7 % K\ncount = 1\n\n#\u7121\u9650\u30eb\u30fc\u30d7\nwhile True:\n    #0\u306e\u6642\n    if j == 0:\n        print(count)\n        return\n        \n    j = 10 * j + 7\n    j = j % K\n    count += 1\n    \n    #\u540c\u3058\u6570\u306e\u30eb\u30fc\u30d7\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    if j == start:\n        print(-1)\n        return", "k = int(input())\n#x, k, d = map(int, input().split())\n#al = list(map(int, input().split()))\n#al=[list(input()) for i in range(n)]\nans = -1\nai = 0\nfor i in range(1, k+1):\n    ai = (ai*10+7) % k\n    if ai == 0:\n        ans = i\n        break\nprint(ans)\n", "def main():\n    K = int(input())\n\n    ans = -1\n    r = 7 % K\n    for i in range(1, K+1):\n        if r == 0:\n            ans = i\n            break\n        r = (10 * r + 7) % K\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def calc(n):\n    mod = 0\n    for i in range(1, n+1):\n        mod = mod *10\n        mod = mod + 7\n        mod = mod % n\n        if mod == 0:\n            return i\n    return -1\n\nk = int(input())\nprint(calc(k))", "k = int(input())\nt = 7\nt %= k\nfor i in range(k + 1):\n    if t == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % k\nelse:\n    print(-1)", "k = int(input())\ncount = 0\nn = 0\nfor i in range(k):\n    n = (10*n + 7)%k\n    if n % k == 0:\n        print(i+1)\n        count+=1\n        break\nif count == 0:\n    print(-1)", "K = int(input())\nR = 0\nfor i in range(1, K + 10):\n  R *= 10\n  R += 7\n  R %= K\n  if R == 0:\n    print(i)\n    import sys\n    return\nprint((-1))\n", "import sys\n#import time\nfrom collections import deque, Counter, defaultdict\n#from fractions import gcd\nimport bisect\nimport heapq\n#import math\nimport itertools\nimport numpy as np\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\ninf = 10**18\nMOD = 1000000007\nri = lambda : int(input())\nrs = lambda : input().strip()\nrl = lambda : list(map(int, input().split()))\n\nk = ri()\nreses=[]\ncnt = 1\ntmp = 7\nfor i in range(k+1):\n    res = tmp % k\n    if res==0:\n        print(cnt)\n        return\n    tmp = res * 10 + 7\n    cnt += 1\nprint(-1)", "K=int(input())\nwa=0\nkake=1\nfor i in range(1,K+1):\n  if i!=1:\n    kake=kake*10%K\n  wa+=7*kake\n  if wa%K==0:\n    print(i)\n    return\nprint(-1)", "K = int(input())\nif K%2 == 0 or K%5 == 0:\n    ans = -1\nelse:\n    a = 1\n    r = 7\n    d = 70\n    while True:\n        if r%K ==0:\n            ans = a\n            break\n        else:\n            r, d, a = (r+d)%K, d*10%K, a+1\nprint(ans)", "k = int(input())\nstart = 7 % k\nans = start\ncon = 1\n\nif k % 2 == 0 or k % 5 == 0:\n  print(\"-1\")\n  return\nwhile True:\n  if ans == 0:\n    print(con)\n    break\n  else:\n    con += 1\n    ans = ans * 10 + 7\n    ans = ans % k\n    if ans == start:\n      print(\"-1\")\n      break\n", "from time import time\n\nK = int(input())\nt = time()\n\ni = 1\nn = 7%K\nm = 10%K\nwhile time()-t < 1.95:\n    if n == 0:\n        print(i)\n        break\n    n += 7*m\n    n %= K\n    m = m*10%K\n    i += 1\nelse:\n    print(-1)", "k=int(input())\n\nif k%2==0 or k%5==0:\n  print((-1))\nelse:\n  s=1\n  a=7\n  while a%k!=0:\n    a=(10*a+7)%k\n    s+=1\n  print(s)\n", "K=int(input())\nt=7\nfor i in range(10**6):\n  if t%K==0:\n    print(i+1)\n    return\n  t=(t*10+7)%K\nprint(-1)", "def c174(k):\n\n    ans = -1\n    sebun = 7\n\n    for i in range(k):\n        if sebun % k == 0:\n            ans = i + 1\n            return ans\n        sebun = (sebun%k) * 10 + 7\n    return ans\n\ndef main():\n    k = int(input())\n    print(c174(k))\n\ndef __starting_point():\n    main()\n__starting_point()", "K = int(input())\n\nMOD = 7%K\nif MOD == 0:\n    print(1)\n    return\n\nfor i in range(2, K+1):\n    MOD = (MOD * 10 + 7) % K\n    if MOD == 0:\n        print(i)\n        return\n\nprint(-1)", "k = int(input())\ncnt = 1\nmod = 7\n\nfor _ in range(k):\n    if mod%k == 0:\n        break\n    cnt += 1\n    mod = (mod*10+7)%k\n\nif mod%k == 0:\n    print(cnt)\nelse:\n    print(-1)", "k=int(input())\na,bk=7,7\nfor i in range(1,k+1):\n  if i!=1:\n    bk=bk*10%k\n    a+=bk\n  a%=k\n  if a==0:\n    print(i)\n    return\nprint(-1)", "k = int(input())\nans = -1\nsm = 7\ni = 1\nif k % 2 == 0 or k % 5 == 0:\n    ans = -1\nelif sm % k == 0:\n    ans = 1\nelse:\n    for i in range(1, k):\n        sm = (sm * 10 + 7) % k\n        if sm == 0:\n            ans = i + 1\n            break\n        i += 1\nprint(ans)\n", "K = int(input())\nif K%2 == 0 or K%5 == 0:\n    print(-1)\nelse:\n    a = 7\n    i = 0\n    while True:\n        if a % K ==0:\n            print(i + 1)\n            break\n        else:\n            a, i = (a * 10 + 7) % K, i+1", "K = int(input())\n\nseven = [0]*K\nseven[0] = 7%K\nfor i in range(1,K):\n    seven[i] = (10*seven[i-1]+7)%K\n\n\nfor i in range(K):\n    if seven[i] == 0:\n        print(i+1)\n        return\nprint(-1)", "def main():\n    k = int(input())\n    li = 7\n    \n    if k % 2 == 0:\n        print(-1)\n        return\n    \n    for i in range(k):\n        if li % k == 0:\n            print(i+1)\n            break\n        li = (li * 10 + 7) % k\n    else:\n        print(-1)\n    \n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "K = int(input())\n\na=[7 % K]\nfor i in range(1, K):\n  a.append((10*a[i-1] + 7) % K)\n\nflag = False\nfor i in range(len(a)):\n  if a[i] == 0:\n    print((i+1))\n    flag = True\n    break\nif not flag:\n  print((-1))\n", "#!/Library/Frameworks/Python.framework/Versions/3.5/bin/python3\n\nk = int(input())\n\nt = 7\nfor i in range(k):\n    t = t % k\n    if t == 0:\n        print((i + 1))\n        return\n    else:\n        t = t * 10 + 7\nprint((-1))\n", "k = int(input())\nn = 7\nn = n%k\nj = 0\ni = 1\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\n    return\nif n == 0:\n    print(i)\n    return\nwhile n != 0:\n    j = n\n    n = (n*10 + 7) % k \n    if j == n:\n        print(-1)\n        return\n    i += 1\n\nprint(i)", "K = int(input())\na = 7\nfor i in range(K+1):\n  if a % K ==0:\n    print(i + 1)\n    break\n  else:\n    a = (a * 10 + 7) % K\nelse:\n  print(-1)", "K=int(input())\nres=1\nx=0\nfor i in range(K):\n    x+=7*res\n    x%=K\n    if x%K==0:\n        print((i+1))\n        break\n    res*=10\n    res%=K\nelse:\n    print((-1))\n", "k=int(input())\na=7%k\nfor i in range(k+1):\n  if a==0:\n    print(i+1)\n    break\n  a=(a*10+7)%k\nelse:\n  print(-1)", "k = int(input())\n\nif 7 % k == 0:\n    print((1))\nelse:\n    a = []\n    a.append(7 % k)\n    t = 0\n    for i in range(2, k+1):\n        x = (10 * a[i - 2] + 7) % k\n        if x == 0:\n            print(i)\n            break\n        else:\n            a.append(x)\n            t += 1\n    if t == k - 1:\n        print((-1))\n"]