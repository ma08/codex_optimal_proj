["\nn = int(input())\nt = input()\n\n# Reverse the string\nt = t[::-1]\n\nfor i in reversed(range(1, n + 1)):\n    if n % i == 0:\n        # Reverse the substring\n        t = t[:i][::-1] + t[i:]\n\nprint(t)\n", "import math\n\n\ndef s(n):  # sieve of eratosthenes\n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * 2, n+1, p):\n                prime[i] = False\n        p += 1\n    prime[0]= False\n    prime[1]= False\n    return prime\n\ndef sieve(n):\n    prime = s(n)\n    for p in range(n+1):\n        if prime[p]:\n            print(p, end=\" \")\n    print()\n\ndef main():\n    n = int(input())  # number of test cases\n    for i in range(n):\n        m = int(input())\n        sieve(m)\n\nmain()\n", "\n\nn = int(input())\nt = input()\n\ns = [\"\"] * n\n\n# reverse the string\nt = t[::-1]\n\nfor i in reversed(range(1, n + 1)):\n    if n % i == 0 and t[:i][::-1] != t[:i]:\n        # reverse the substring\n        t = t[:i][::-1] + t[i:]\n\nprint(t)\n", "\n\ndef get_divisor(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = get_divisor(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nmain()\n"]