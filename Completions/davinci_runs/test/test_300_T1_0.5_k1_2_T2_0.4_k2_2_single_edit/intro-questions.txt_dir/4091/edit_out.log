2022-04-17 20:05:25.420584 num operations 1
2022-04-17 20:05:25.420601 size on input set 1
2022-04-17 20:05:32.012126 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days, dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n"
    }
  ],
  "created": 1650225925,
  "object": "edit"
}
2022-04-17 20:05:32.012329 fix syntax errors 2 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\n# dp[i][j] = max(dp[i - 1][j - 1] + max(a[i - 1:]), dp[i - 2][j - 1] + max(a[i - 2:]), ...dp[i - k][j - 1] + max(a[i - k:]))\n# dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# dp[i][j] = max profit for i problems in j days, dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:]) for l in range(1, k + 1))\ndp = [[0 for _ in range(k + 1)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, k + 1):\n        if i < j:\n            continue\n        dp[i][j] = max(dp[i - l][j - 1] + max(a[i - l:i]) for l in range(1, min(k, i) + 1))\n\nprint(dp[n][k])\n\ni, j = n, k\nans = []\nwhile j > 0:\n    for l in range(1, min(k, i) + 1):\n        if dp[i][j] == dp[i - l][j - 1] + max(a[i - l:i]):\n            ans.append(l)\n            i -= l\n            j -= 1\n            break\n\nprint(*ans[::-1])\n']
2022-04-17 20:05:32.012364 size on output set 2
2022-04-17 20:05:32.012374 num operations 1
2022-04-17 20:05:32.012379 size on input set 1
2022-04-17 20:05:38.198915 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[j-1] == dp[i]:\n            j -= 1\n        print(j-i,end=\" \")\n        i = j\n    print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\nmain()\n"
    }
  ],
  "created": 1650225932,
  "object": "edit"
}
2022-04-17 20:05:38.199110 fix syntax errors 2 ['\n\ndef main():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    dp = [0]*(n+1)\n    for i in range(1,n+1):\n        dp[i] = max(dp[i-1],a[i-1])\n    ans = 0\n    for i in range(k,n+1):\n        ans += dp[i-k]\n    print(ans)\n    i = 0\n    while i < n:\n        j = i+k\n        if j > n:\n            j = n\n        while j > i and dp[j-1] == dp[i]:\n            j -= 1\n        print(j-i,end=" ")\n        i = j\n    print()\n\nmain()\n', '\n\ndef main():\n    pass\n\nmain()\n']
2022-04-17 20:05:38.199135 size on output set 2
