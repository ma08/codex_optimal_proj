["\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n", "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m/n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m/n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n", "n,m=map(int,input().split())\nif(m%n==0 and (m//n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n", "\n\ndef f(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n", "\ndef find(n, m, d):\n    d[n] = 0\n    queue = deque([n])\n    while queue:\n        x = queue.popleft()\n        if x == m:\n            return d[x]\n        if x * 2 <= m:\n            if x * 2 not in d:\n                queue.append(x * 2)\n                d[x * 2] = d[x] + 1\n        if x * 3 <= m:\n            if x * 3 not in d:\n                queue.append(x * 3)\n                d[x * 3] = d[x] + 1\n    return -1\n\n\nn, m = map(int, input().split())\nd = {}\nprint(find(n, m, d))\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n", "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2==0):\n    print(3)\nelse:\n    print(-1)\n", "\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n"]