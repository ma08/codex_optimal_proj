2022-04-10 12:20:41.800524 num operations 2
2022-04-10 12:20:41.800548 size on input set 1
2022-04-10 12:20:55.546011 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef find(n, m, d):\n    d[n] = 0\n    queue = deque([n])\n    while queue:\n        x = queue.popleft()\n        if x == m:\n            return d[x]\n        if x * 2 <= m:\n            if x * 2 not in d:\n                queue.append(x * 2)\n                d[x * 2] = d[x] + 1\n        if x * 3 <= m:\n            if x * 3 not in d:\n                queue.append(x * 3)\n                d[x * 3] = d[x] + 1\n    return -1\n\n\nn, m = map(int, input().split())\nd = {}\nprint(find(n, m, d))\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649607642,
  "object": "edit"
}
2022-04-10 12:20:55.546251 fix spelling mistakes 2 ['\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n', '\n\n\ndef find(n, m, d):\n    d[n] = 0\n    queue = deque([n])\n    while queue:\n        x = queue.popleft()\n        if x == m:\n            return d[x]\n        if x * 2 <= m:\n            if x * 2 not in d:\n                queue.append(x * 2)\n                d[x * 2] = d[x] + 1\n        if x * 3 <= m:\n            if x * 3 not in d:\n                queue.append(x * 3)\n                d[x * 3] = d[x] + 1\n    return -1\n\n\nn, m = map(int, input().split())\nd = {}\nprint(find(n, m, d))\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n']
2022-04-10 12:20:55.546286 size on output set 2
2022-04-10 12:20:55.546297 size on input set 2
2022-04-10 12:21:04.644007 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\ndef find(n, m, d):\n    d[n] = 0\n    queue = deque([n])\n    while queue:\n        x = queue.popleft()\n        if x == m:\n            return d[x]\n        if x * 2 <= m:\n            if x * 2 not in d:\n                queue.append(x * 2)\n                d[x * 2] = d[x] + 1\n        if x * 3 <= m:\n            if x * 3 not in d:\n                queue.append(x * 3)\n                d[x * 3] = d[x] + 1\n    return -1\n\n\nn, m = map(int, input().split())\nd = {}\nprint(find(n, m, d))\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649607655,
  "object": "edit"
}
2022-04-10 12:21:04.644197 fix syntax errors 2 ['\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n', '\ndef find(n, m, d):\n    d[n] = 0\n    queue = deque([n])\n    while queue:\n        x = queue.popleft()\n        if x == m:\n            return d[x]\n        if x * 2 <= m:\n            if x * 2 not in d:\n                queue.append(x * 2)\n                d[x * 2] = d[x] + 1\n        if x * 3 <= m:\n            if x * 3 not in d:\n                queue.append(x * 3)\n                d[x * 3] = d[x] + 1\n    return -1\n\n\nn, m = map(int, input().split())\nd = {}\nprint(find(n, m, d))\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n']
2022-04-10 12:21:09.209895 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649607664,
  "object": "edit"
}
2022-04-10 12:21:09.210345 fix syntax errors 2 ['\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n', '\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\n    exit()\n\nif m % n:\n    print(-1)\n    exit()\n\ncount = 0\nwhile m != n:\n    if m % 2 and m % 3:\n        print(-1)\n        exit()\n    elif m % 2 == 0:\n        m //= 2\n    else:\n        m //= 3\n    count += 1\n\nprint(count)\n']
2022-04-10 12:21:09.210393 size on output set 2
2022-04-10 12:21:09.210419 num operations 2
2022-04-10 12:21:09.210424 size on input set 1
2022-04-10 12:21:14.361880 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n*2 > m or n*3 > m:\n        return -1\n    if n*2 == m or n*3 == m:\n        return 1\n    return 1 + min(f(n*2,m), f(n*3,m))\n\nn,m = map(int, input().split())\nprint(f(n,m))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n*2 > m or n*3 > m:\n        return -1\n    if n*2 == m or n*3 == m:\n        return 1\n    return 1 + min(f(n*2,m), f(n*3,m))\n\nn,m = map(int, input().split())\nprint(f(n,m))\n"
    }
  ],
  "created": 1649607669,
  "object": "edit"
}
2022-04-10 12:21:14.361997 fix spelling mistakes 2 ['\n\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n*2 > m or n*3 > m:\n        return -1\n    if n*2 == m or n*3 == m:\n        return 1\n    return 1 + min(f(n*2,m), f(n*3,m))\n\nn,m = map(int, input().split())\nprint(f(n,m))\n', '\n\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n*2 > m or n*3 > m:\n        return -1\n    if n*2 == m or n*3 == m:\n        return 1\n    return 1 + min(f(n*2,m), f(n*3,m))\n\nn,m = map(int, input().split())\nprint(f(n,m))\n']
2022-04-10 12:21:14.362016 size on output set 1
2022-04-10 12:21:14.362020 size on input set 1
2022-04-10 12:21:23.313944 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef f(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n"
    },
    {
      "index": 1,
      "text": "\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n"
    }
  ],
  "created": 1649607674,
  "object": "edit"
}
2022-04-10 12:21:23.314141 fix syntax errors 2 ['\n\ndef f(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n', '\ndef f(n,m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if n * 2 > m or n * 3 > m:\n        return -1\n    if n * 2 == m or n * 3 == m:\n        return 1\n    return 1 + min(f(n * 2, m), f(n * 3, m))\n\nn, m = map(int, input().split())\nprint(f(n, m))\n']
2022-04-10 12:21:23.314157 size on output set 2
2022-04-10 12:21:23.314165 num operations 2
2022-04-10 12:21:23.314170 size on input set 1
2022-04-10 12:21:29.419296 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m/n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m/n)%2==0):\n    print(3)\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1649607683,
  "object": "edit"
}
2022-04-10 12:21:29.419792 fix spelling mistakes 2 ['\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n', '\n\nn,m=map(int,input().split())\nif(m%n==0 and (m/n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m/n)%2==0):\n    print(3)\nelse:\n    print(-1)\n']
2022-04-10 12:21:29.419824 size on output set 2
2022-04-10 12:21:29.419829 size on input set 2
2022-04-10 12:21:36.318126 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m/n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m/n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "n,m=map(int,input().split())\nif(m%n==0 and (m//n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1649607689,
  "object": "edit"
}
2022-04-10 12:21:36.318403 fix syntax errors 2 ['\n\nn,m=map(int,input().split())\nif(m%n==0 and (m/n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m/n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n', 'n,m=map(int,input().split())\nif(m%n==0 and (m//n)%2==0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2!=0):\n    print(3)\nelse:\n    print(-1)\n']
2022-04-10 12:21:42.122800 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2==0):\n    print(3)\nelse:\n    print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2==0):\n    print(3)\nelse:\n    print(-1)\n"
    }
  ],
  "created": 1649607696,
  "object": "edit"
}
2022-04-10 12:21:42.123193 fix syntax errors 2 ['\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2==0):\n    print(3)\nelse:\n    print(-1)\n', '\n\nn,m=map(int,input().split())\nif(m%n==0 and (m//n)%2!=0):\n    print(1)\nelif(m%n==0):\n    print(2)\nelif(m%n!=0 and (m//n)%2==0):\n    print(3)\nelse:\n    print(-1)\n']
2022-04-10 12:21:42.123252 size on output set 3
