["\n\ndef find_sub_arrays(arr):\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            print(arr[i:j + 1])\n", "\n\ndef find_sub_arrays(arr, s):\n    for i in range(len(arr)):\n        sum = 0\n        for j in range(i, len(arr)):\n            sum += arr[j]\n            if sum == s:\n                print(arr[i:j+1])\n\n\nfind_sub_arrays([3, 4, -7, 1, 3, 3, 1, -4], 7)\n", "\n\ndef main():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    sums = []\n    nums_sets = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            sums.append(sum(nums[i:j]))\n            nums_sets.append([i,j-1])\n    sums.sort()\n    max_count = 0\n    for i in range(len(sums)-1, 0, -1):\n        if sums[i] == sums[i-1]:\n            max_count += 1\n        else:\n            break\n    print(max_count+1)\n    for i in range(len(sums)-1, len(sums)-max_count-1, -1):\n        print(str(nums_sets[i][0]+1) + \" \" + str(nums_sets[i][1]+1))\n\nmain()\n", "\n\ndef main():\n    pass\n\nmain()\n", "\n\ndef find_subarray(arr, sum):\n    for i in range(len(arr)):\n\n        for j in range(i, len(arr)):\n            if sum(arr[i:j+1]) == sum:\n                return arr[i:j+1]\n", "\n\ndef longest_sublist_with_same_sum(lst, start, end):\n    if start == end:\n        return (start, start)\n    if end - start == 1:\n        if lst[start] == lst[end]:\n            return (start, end)\n        else:\n            return (start, start)\n\n    mid = (start + end) // 2\n    left_longest = longest_sublist_with_same_sum(lst, start, mid)\n    right_longest = longest_sublist_with_same_sum(lst, mid+1, end)\n    if left_longest[1] - left_longest[0] > right_longest[1] - right_longest[0]:\n        return left_longest\n    else:\n        return right_longest\n\ndef main():\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    longest = longest_sublist_with_same_sum(lst, 0, n-1)\n    print(longest[0]+1, longest[1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef find_subarray(arr):\n    for i in range(len(arr)):\n\n        for j in range(i, len(arr)):\n\n\nfind_subarray([1, 2, 3, 4])\n            print(arr[i:j+1])\n"]