2022-04-10 12:02:45.141601 num operations 2
2022-04-10 12:02:45.141630 size on input set 1
2022-04-10 12:02:50.778762 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\nprint(x, y)\n"
    }
  ],
  "created": 1649606565,
  "object": "edit"
}
2022-04-10 12:02:50.779006 fix spelling mistakes 2 ['\nn = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\n\nprint(x, y)\n', '\nn = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\nprint(x, y)\n']
2022-04-10 12:02:50.779039 size on output set 2
2022-04-10 12:02:50.779049 size on input set 2
2022-04-10 12:02:58.343902 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\n\nx, y = 1, 1\nfor i in range(len(a)):\n    if i % 2 == 0:\n        x *= a[i]\n    else:\n        y *= a[i]\n\nprint(x, y)\n"
    }
  ],
  "created": 1649606570,
  "object": "edit"
}
2022-04-10 12:02:58.344070 fix syntax errors 2 ['n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\n\nprint(x, y)\n', 'n = int(input())\na = [int(x) for x in input().split()]\na.sort()\n\nx, y = 1, 1\nfor i in range(len(a)):\n    if i % 2 == 0:\n        x *= a[i]\n    else:\n        y *= a[i]\n\nprint(x, y)\n']
2022-04-10 12:03:05.759855 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nif len(d) % 2 == 0:\n    print(0)\nelse:\n    print(d[len(d) // 2] - d[len(d) // 2 - 1])\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\nprint(x, y)\n"
    }
  ],
  "created": 1649606579,
  "object": "edit"
}
2022-04-10 12:03:05.760078 fix syntax errors 2 ['n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nif len(d) % 2 == 0:\n    print(0)\nelse:\n    print(d[len(d) // 2] - d[len(d) // 2 - 1])\n', 'n = int(input())\nd = [int(x) for x in input().split()]\nd.sort()\n\nx = 1\ny = 1\nfor i in range(len(d)):\n    if i % 2 == 0:\n        x *= d[i]\n    else:\n        y *= d[i]\nprint(x, y)\n']
2022-04-10 12:03:05.760136 size on output set 4
2022-04-10 12:03:05.760164 num operations 2
2022-04-10 12:03:05.760176 size on input set 1
2022-04-10 12:03:15.442761 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list1 = list(map(int, input().split()))\n    num_list1.sort()\n    num_list1 = list(set(num_list1))\n    num_list1.sort()\n    num_list2 = [] # list of duplicate numbers\n    num_list3 = [] # list of unique numbers\n    for i in range(len(num_list1)):\n        if num_list1[i] == num_list1[i-1]:\n            num_list2.append(num_list1[i])\n        else:\n            num_list3.append(num_list1[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=\" \")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=\" \")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list)) #remove duplicates\n    num_list.sort() #sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=\" \")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=\" \")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649606586,
  "object": "edit"
}
2022-04-10 12:03:15.442947 fix spelling mistakes 2 ['\ndef main():\n    """main function"""\n    num = int(input())\n    num_list1 = list(map(int, input().split()))\n    num_list1.sort()\n    num_list1 = list(set(num_list1))\n    num_list1.sort()\n    num_list2 = [] # list of duplicate numbers\n    num_list3 = [] # list of unique numbers\n    for i in range(len(num_list1)):\n        if num_list1[i] == num_list1[i-1]:\n            num_list2.append(num_list1[i])\n        else:\n            num_list3.append(num_list1[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=" ")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=" ")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """main function"""\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list)) #remove duplicates\n    num_list.sort() #sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=" ")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=" ")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:03:15.442979 size on output set 2
2022-04-10 12:03:15.442986 size on input set 2
2022-04-10 12:03:31.344729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list1 = list(map(int, input().split()))\n    num_list1.sort()\n    num_list1 = list(set(num_list1)) # remove duplicate numbers\n    num_list1.sort() # sort again\n    num_list2 = [] # list of duplicate numbers\n    num_list3 = [] # list of unique numbers\n    for i in range(len(num_list1)):\n        if num_list1[i] == num_list1[i-1]:\n            num_list2.append(num_list1[i])\n        else:\n            num_list3.append(num_list1[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=\" \")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=\" \")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))\n    num_list.sort()\n    num_list_dup = [] # list of duplicate numbers\n    num_list_uniq = [] # list of unique numbers\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list_dup.append(num_list[i])\n        elif num_list[i] != num_list[i-1]:\n            num_list_uniq.append(num_list[i])\n    num_list_uniq.sort()\n    print(num_list_uniq[0]*num_list_dup[0], end=\" \")\n    for i in range(1, len(num_list_uniq)):\n        print(num_list_uniq[i], end=\" \")\n    for i in range(1, len(num_list_dup)):\n        print(num_list_dup[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649606595,
  "object": "edit"
}
2022-04-10 12:03:31.344919 fix syntax errors 2 ['\ndef main():\n    """main function"""\n    num = int(input())\n    num_list1 = list(map(int, input().split()))\n    num_list1.sort()\n    num_list1 = list(set(num_list1)) # remove duplicate numbers\n    num_list1.sort() # sort again\n    num_list2 = [] # list of duplicate numbers\n    num_list3 = [] # list of unique numbers\n    for i in range(len(num_list1)):\n        if num_list1[i] == num_list1[i-1]:\n            num_list2.append(num_list1[i])\n        else:\n            num_list3.append(num_list1[i])\n    num_list3.sort()\n    print(num_list3[0]*num_list2[0], end=" ")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=" ")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """main function"""\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))\n    num_list.sort()\n    num_list_dup = [] # list of duplicate numbers\n    num_list_uniq = [] # list of unique numbers\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list_dup.append(num_list[i])\n        elif num_list[i] != num_list[i-1]:\n            num_list_uniq.append(num_list[i])\n    num_list_uniq.sort()\n    print(num_list_uniq[0]*num_list_dup[0], end=" ")\n    for i in range(1, len(num_list_uniq)):\n        print(num_list_uniq[i], end=" ")\n    for i in range(1, len(num_list_dup)):\n        print(num_list_dup[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:03:39.658830 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))  # remove duplicates\n    num_list.sort()  # sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i - 1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0] * num_list2[0], end=\" \")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=\" \")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    \"\"\"main function\"\"\"\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))  # remove duplicates\n    num_list.sort()  # sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0] * num_list2[0], end=\" \")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=\" \")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=\" \")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649606611,
  "object": "edit"
}
2022-04-10 12:03:39.659134 fix syntax errors 2 ['\ndef main():\n    """main function"""\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))  # remove duplicates\n    num_list.sort()  # sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i - 1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0] * num_list2[0], end=" ")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=" ")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """main function"""\n    num = int(input())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    num_list = list(set(num_list))  # remove duplicates\n    num_list.sort()  # sort again\n    num_list2 = []\n    num_list3 = []\n    for i in range(len(num_list)):\n        if num_list[i] == num_list[i-1]:\n            num_list2.append(num_list[i])\n        else:\n            num_list3.append(num_list[i])\n    num_list3.sort()\n    print(num_list3[0] * num_list2[0], end=" ")\n    for i in range(1, len(num_list3)):\n        print(num_list3[i], end=" ")\n    for i in range(1, len(num_list2)):\n        print(num_list2[i], end=" ")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:03:39.659172 size on output set 4
2022-04-10 12:03:39.659183 num operations 2
2022-04-10 12:03:39.659187 size on input set 1
2022-04-10 12:03:56.530870 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043d\u0435\u0447\u0451\u0442\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430\n# \u041f\u043e \u0434\u0430\u043d\u043d\u043e\u0439 \u043d\u0435\u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 ss, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0435\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430, \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0431\u0435\u0441\u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0439 \u043a\u043e\u0434.\n# \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 k, \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435, \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0435\u0439\u0441\u044f \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n# \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 kk \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043a\u043e\u0434\u044b \u0431\u0443\u043a\u0432 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"letter: code\". \u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n# Sample Input 1:\n#\n# a\n# Sample Output 1:\n#\n# 1 1\n# a: 0\n# 0\n# Sample Input 2:\n#\n# abacabad\n# Sample Output 2:\n#\n# 4 14\n# a: 0\n# b: 10\n# c: 110\n# d: 111\n# 01001100100111\n\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n"
    }
  ],
  "created": 1649606619,
  "object": "edit"
}
2022-04-10 12:03:56.531276 fix spelling mistakes 2 ['# Задача на программирование: нечётные числа\n# По данной непустой строке ss, состоящей из строчных букв латинского алфавита, постройте оптимальный беспрефиксный код.\n# В первой строке выведите количество различных букв k, встречающихся в строке, и размер получившейся закодированной строки.\n# В следующих kk строках запишите коды букв в формате "letter: code". В последней строке выведите закодированную строку.\n# Sample Input 1:\n#\n# a\n# Sample Output 1:\n#\n# 1 1\n# a: 0\n# 0\n# Sample Input 2:\n#\n# abacabad\n# Sample Output 2:\n#\n# 4 14\n# a: 0\n# b: 10\n# c: 110\n# d: 111\n# 01001100100111\n\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n', '\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n']
2022-04-10 12:03:56.531356 size on output set 2
2022-04-10 12:03:56.531377 size on input set 2
2022-04-10 12:04:01.466773 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0])\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d:\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n"
    }
  ],
  "created": 1649606636,
  "object": "edit"
}
2022-04-10 12:04:01.466980 fix syntax errors 2 ['\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0])\n', 'n = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d:\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n']
2022-04-10 12:04:29.430773 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "s = input()\nprint(s.replace('1', 'one'))\n"
    },
    {
      "index": 1,
      "text": "# \u0417\u0430\u0434\u0430\u0447\u0430 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0446\u0438\u0444\u0440\u0430 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438\n# \u0414\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e 1\u2264n\u226410^7, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0439\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0446\u0438\u0444\u0440\u0443 n-\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438.\n# \u041a\u0430\u043a \u043c\u044b \u043f\u043e\u043c\u043d\u0438\u043c, \u0447\u0438\u0441\u043b\u0430 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438 \u0440\u0430\u0441\u0442\u0443\u0442 \u043e\u0447\u0435\u043d\u044c \u0431\u044b\u0441\u0442\u0440\u043e, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438 \u0438\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u044b\u043c \u0441 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c.\n# \u0412 \u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043f\u0440\u043e\u0447\u0435\u043c, \u044d\u0442\u043e\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043d\u0430\u0441 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0446\u0438\u0444\u0440\u0430 \u0447\u0438\u0441\u043b\u0430 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438:\n# \u0435\u0441\u043b\u0438 0\u2264a,b\u22649 \u2014 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u0446\u0438\u0444\u0440\u044b \u0447\u0438\u0441\u0435\u043b Fi \u0438 Fi+1 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0442\u043e (a+b)mod10 \u2014 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0446\u0438\u0444\u0440\u0430 \u0447\u0438\u0441\u043b\u0430 Fi+2.\n# Sample Input:\n#\n# 327305\n# Sample Output:\n#\n# 5\n\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n"
    }
  ],
  "created": 1649606641,
  "object": "edit"
}
2022-04-10 12:04:29.431089 fix syntax errors 2 ["s = input()\nprint(s.replace('1', 'one'))\n", '# Задача на программирование: последняя цифра большого числа Фибоначчи\n# Дано число 1≤n≤10^7, необходимо найти последнюю цифру n-го числа Фибоначчи.\n# Как мы помним, числа Фибоначчи растут очень быстро, поэтому при их вычислении нужно быть аккуратным с переполнением.\n# В данной задаче, впрочем, этой проблемы можно избежать, поскольку нас интересует только последняя цифра числа Фибоначчи:\n# если 0≤a,b≤9 — последние цифры чисел Fi и Fi+1 соответственно, то (a+b)mod10 — последняя цифра числа Fi+2.\n# Sample Input:\n#\n# 327305\n# Sample Output:\n#\n# 5\n\nn = int(input())\ns = input().split()\nd = dict()\nres = []\nfor i in s:\n    if i not in d:\n        d[i] = 1\n    else:\n        d[i] += 1\nfor i in d.keys():\n    if d[i] % 2 != 0:\n        res.append(int(i))\nprint(res[0], res[1])\n']
2022-04-10 12:04:29.431153 size on output set 4
