["\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n\n    # t = 'abacaba'\n    # n = 7\n    # k = 4\n\n    for i in range(1, n + 1):\n        if k % i == 0 and k // i <= n:\n            print(t[:i] * (k // i))\n            return\n\n\nmain()\n", "\n\nfrom collections import Counter\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n\n    c = Counter(t)\n    c = sorted(c.items(), key=lambda x: x[0])\n\n    h = []\n    for i in range(0, len(c), 2):\n        h.append(c[i])\n        h.append(c[i + 1])\n\n    s = []\n    for i in range(len(h)):\n        s.append(h[i][0] * (n // 2))\n\n    for i in h[::-1][1:]:\n        s.append(i[0] * (n // 2 + n % 2))\n\n    s = \"\".join(s)\n\n    if k == 1:\n        print(t)\n    elif k == 2:\n        print(s)\n    else:\n        print(s * (k - 2) + s[:n])\n\nmain()\n", "\n\nfrom collections import Counter\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n\n    c = Counter(t)\n    c = sorted(c.items(), key=lambda x: x[1])\n\n    h = []  # half\n    for i in range(0, len(c)):\n        h.append(c[i][0])\n\n    s = []  # string\n    for i in range(0, len(h)):\n        s.append(h[i] * (n // 2))\n        s.append(h[-i - 1] * (n // 2))\n\n    s = \"\".join(s)\n\n    if k == 1:\n        print(t)\n    elif k == 2:\n        print(s)\n    else:\n        print(s * (k - 2) + s[:n])\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())  # n:\u6587\u5b57\u5217\u306e\u9577\u3055, k:\u7e70\u308a\u8fd4\u3057\u56de\u6570\n    t = input()  # \u6587\u5b57\u5217\n\n    s = ''  # \u7e70\u308a\u8fd4\u3057\u305f\u6587\u5b57\u5217\n    for i in range(k):\n        s += t\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    t = input()\n\n    s = ''\n    for i in range(k):\n        s += t\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = max(ans, a[i] ^ a[j])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n\n    for i in range(1, n + 1):\n        if k % i == 0 and k // i <= n:\n            print(t[:i] * (k // i))\n            return\n\n\nmain()\n", "\n\nfrom collections import Counter\n\ndef main():\n    n, k = map(int, input().split()) # n = length of string, k = number of times to print\n    t = input() # string\n\n    c = Counter(t) # count all characters in string\n    c = sorted(c.items(), key=lambda x: x[0]) # sort by character\n\n    h = [] # temporary list\n    for i in range(0, len(c), 2):\n        h.append(c[i])\n        h.append(c[i + 1])\n\n    s = [] # list to store the final string\n    for i in range(len(h)):\n        s.append(h[i][0] * (n // 2))\n\n    for i in h[::-1]: # reverse the list\n        s.append(i[0] * (n // 2))\n\n    s = \"\".join(s)\n\n    if k == 1: # if k = 1, just print the string\n        print(t)\n    elif k == 2: # if k = 2, print the string once\n        print(s)\n    else: # if k > 2, print the string once, then print the string k - 2 times, then print the first n characters of the string\n        print(s * (k - 2) + s[:n])\n\nmain()\n", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    t = input()  # type: str\n\n    s = ''\n    for i in range(k):\n        s += t  # type: str\n\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n\n    c = list(t)\n    c.sort()\n\n    s = \"\".join(c[:n // 2]) + \"\".join(c[:n // 2][::-1])\n\n    if k == 1:\n        print(t)\n    elif k == 2:\n        print(s)\n    else:\n        print(s * (k - 2) + s[:n])\n\nmain()\n", "\ndef main():\n    # n, k = map(int, input().split())\n    # t = input()\n    t = 'aba'\n    n = 3\n    k = 4\n\n    # t = 'cat'\n    # n = 3\n    # k = 2\n\n    for i in range(1, n + 1):\n        if k % i == 0 and k // i <= n:\n            print(t[:i] * (k // i))\n            return\n\n\nmain()\n"]