2022-04-10 13:26:38.913356 num operations 2
2022-04-10 13:26:38.913380 size on input set 1
2022-04-10 13:26:43.659631 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, m, arr):\n    \"\"\"\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    \"\"\"\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j+1] == [m]*(j-i+1):\n                count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, m, arr):\n    \"\"\"\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    \"\"\"\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j+1] == [m]*(j-i+1):\n                count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n"
    }
  ],
  "created": 1649611599,
  "object": "edit"
}
2022-04-10 13:26:43.659782 fix spelling mistakes 2 ['\ndef solve(n, m, arr):\n    """\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    """\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j+1] == [m]*(j-i+1):\n                count += 1\n\n    return count\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n', '\ndef solve(n, m, arr):\n    """\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    """\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j+1] == [m]*(j-i+1):\n                count += 1\n\n    return count\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n']
2022-04-10 13:26:43.659800 size on output set 1
2022-04-10 13:26:43.659805 size on input set 1
2022-04-10 13:26:48.898733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(n, m, arr):\n    \"\"\"\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    \"\"\"\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j + 1] == [m] * (j - i + 1):\n                count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(n, m, arr):\n    \"\"\"\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    \"\"\"\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j + 1] == [m] * (j - i + 1):\n                count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n"
    }
  ],
  "created": 1649611603,
  "object": "edit"
}
2022-04-10 13:26:48.898923 fix syntax errors 2 ['\ndef solve(n, m, arr):\n    """\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    """\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j + 1] == [m] * (j - i + 1):\n                count += 1\n\n    return count\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n', '\ndef solve(n, m, arr):\n    """\n    :param n: Number of elements in the array\n    :param m: Value of the median\n    :param arr: Array of values\n    :return: Number of indices that have the median equal to m\n    """\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if arr[i:j + 1] == [m] * (j - i + 1):\n                count += 1\n\n    return count\n\n\nif __name__ == "__main__":\n    n, m = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, m, arr))\n']
2022-04-10 13:26:48.898951 size on output set 1
2022-04-10 13:26:48.898965 num operations 2
2022-04-10 13:26:48.898971 size on input set 1
2022-04-10 13:26:53.494714 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Solution 1-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution----- \n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    }
  ],
  "created": 1649611609,
  "object": "edit"
}
2022-04-10 13:26:53.494892 fix spelling mistakes 2 ['\n\n# -----Solution 1-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n', '\n\n# -----Solution----- \n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n']
2022-04-10 13:26:53.495022 size on output set 2
2022-04-10 13:26:53.495031 size on input set 2
2022-04-10 13:26:58.814724 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Solution----- \n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    }
  ],
  "created": 1649611613,
  "object": "edit"
}
2022-04-10 13:26:58.814908 fix syntax errors 2 ['\n# -----Solution----- \n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n', '\n\n# -----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n']
2022-04-10 13:27:05.021388 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Solution 1-----\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n"
    }
  ],
  "created": 1649611619,
  "object": "edit"
}
2022-04-10 13:27:05.021566 fix syntax errors 2 ['\n# -----Solution 1-----\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nresult = 0\n\nfor i in range(n):\n    start = i\n    end = n - 1\n    while start <= end:\n        mid = (start + end) // 2\n\n        if a[mid] == m:\n            temp_mid = mid\n            while temp_mid > 0 and a[temp_mid - 1] == m:\n                temp_mid -= 1\n            temp_start = start\n            while temp_start < mid and a[temp_start] < m:\n                temp_start += 1\n            result += (mid - temp_mid + 1) * (temp_mid - temp_start + 1)\n            break\n        elif a[mid] < m:\n            start = mid + 1\n        else:\n            end = mid - 1\n\nprint(result)\n']
2022-04-10 13:27:05.021596 size on output set 4
2022-04-10 13:27:05.021608 num operations 2
2022-04-10 13:27:05.021614 size on input set 1
2022-04-10 13:27:13.103903 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * 10 ** 5 + 1)\n    s = 0\n    for i in range(1, n + 1):\n        a[i - 1] += 1\n        s += idx[a[i - 1]]\n        idx[a[i - 1]] += 1\n\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5+1)\n    s = 0\n    for i in range(1, n+1):\n        a[i-1] += 1\n        s += idx[a[i-1]]\n        idx[a[i-1]] += 1\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611625,
  "object": "edit"
}
2022-04-10 13:27:13.104162 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * 10 ** 5 + 1)\n    s = 0\n    for i in range(1, n + 1):\n        a[i - 1] += 1\n        s += idx[a[i - 1]]\n        idx[a[i - 1]] += 1\n\n    print(s)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5+1)\n    s = 0\n    for i in range(1, n+1):\n        a[i-1] += 1\n        s += idx[a[i-1]]\n        idx[a[i-1]] += 1\n    print(s)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:27:13.104189 size on output set 2
2022-04-10 13:27:13.104197 size on input set 2
2022-04-10 13:27:19.447788 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * (10 ** 5) + 1)\n    s = 0\n    for i in range(1, n + 1):\n        a[i - 1] += 1\n        s += idx[a[i - 1]]\n        idx[a[i - 1]] += 1\n\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * 10 ** 5 + 2)\n    s = 0\n    for i in range(1, n + 1):\n        s += idx[a[i - 1] + 1]\n        idx[a[i - 1] + 1] += 1\n\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611633,
  "object": "edit"
}
2022-04-10 13:27:19.447957 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * (10 ** 5) + 1)\n    s = 0\n    for i in range(1, n + 1):\n        a[i - 1] += 1\n        s += idx[a[i - 1]]\n        idx[a[i - 1]] += 1\n\n    print(s)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2 * 10 ** 5 + 2)\n    s = 0\n    for i in range(1, n + 1):\n        s += idx[a[i - 1] + 1]\n        idx[a[i - 1] + 1] += 1\n\n    print(s)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:27:26.519011 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5+2)\n    s = 0\n    for i in range(1, n+1):\n        s += idx[a[i-1]+1]\n        idx[a[i-1]+1] += 1\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5 + 1)\n    s = 0\n    for i in range(1, n+1):\n        a[i-1] += 1\n        s += idx[a[i-1]]\n        idx[a[i-1]] += 1\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611639,
  "object": "edit"
}
2022-04-10 13:27:26.519438 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5+2)\n    s = 0\n    for i in range(1, n+1):\n        s += idx[a[i-1]+1]\n        idx[a[i-1]+1] += 1\n    print(s)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    a = [int(x) for x in sys.stdin.readline().split()]\n    idx = [0] * (2*10**5 + 1)\n    s = 0\n    for i in range(1, n+1):\n        a[i-1] += 1\n        s += idx[a[i-1]]\n        idx[a[i-1]] += 1\n    print(s)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:27:26.519490 size on output set 4
