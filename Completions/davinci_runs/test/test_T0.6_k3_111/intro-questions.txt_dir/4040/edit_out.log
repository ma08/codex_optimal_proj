2022-04-10 12:47:01.862063 num operations 2
2022-04-10 12:47:01.862083 size on input set 1
2022-04-10 12:47:13.662772 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print \"Usage: %s <filename>\" % sys.argv[0]\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print \"Error: File '%s' not found\" % filename\n        sys.exit(1)\n\n    f = open(filename, 'r')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print line, # already has newline\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', (err) => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.appendFile('test.txt', '\\nHello again!', (err) => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.rename('test.txt', 'renamed.txt', (err) => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.unlink('renamed.txt', (err) => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n"
    }
  ],
  "created": 1649609222,
  "object": "edit"
}
2022-04-10 12:47:13.663029 fix spelling mistakes 2 ['#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print "Usage: %s <filename>" % sys.argv[0]\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print "Error: File \'%s\' not found" % filename\n        sys.exit(1)\n\n    f = open(filename, \'r\')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print line, # already has newline\n\nif __name__ == \'__main__\':\n    main()\n', "const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', (err) => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.appendFile('test.txt', '\\nHello again!', (err) => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.rename('test.txt', 'renamed.txt', (err) => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    console.log(data);\n});\n\nfs.unlink('renamed.txt', (err) => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n"]
2022-04-10 12:47:13.663069 size on output set 2
2022-04-10 12:47:13.663077 size on input set 2
2022-04-10 12:47:21.047142 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print(\"Usage: %s <filename>\" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print(\"Error: File '%s' not found\" % filename)\n        sys.exit(1)\n\n    f = open(filename, 'r')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print(line, end=\"\") # already has newline\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print(\"Usage: %s <filename>\" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print(\"Error: File '%s' not found\" % filename)\n        sys.exit(1)\n\n    f = open(filename, 'r')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print(line, end='') # already has newline\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649609233,
  "object": "edit"
}
2022-04-10 12:47:21.047369 fix syntax errors 2 ['#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print("Usage: %s <filename>" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print("Error: File \'%s\' not found" % filename)\n        sys.exit(1)\n\n    f = open(filename, \'r\')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print(line, end="") # already has newline\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\ndef main():\n    if len(sys.argv) < 2:\n        print("Usage: %s <filename>" % sys.argv[0])\n        sys.exit(1)\n\n    filename = sys.argv[1]\n    if not os.path.exists(filename):\n        print("Error: File \'%s\' not found" % filename)\n        sys.exit(1)\n\n    f = open(filename, \'r\')\n    while True:\n        where = f.tell()\n        line = f.readline()\n        if not line:\n            time.sleep(1)\n            f.seek(where)\n        else:\n            print(line, end=\'\') # already has newline\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:47:34.370713 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', err => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.appendFile('test.txt', '\\nHello again!', err => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.rename('test.txt', 'renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.unlink('renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n"
    },
    {
      "index": 1,
      "text": "const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', err => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.appendFile('test.txt', '\\nHello again!', err => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.rename('test.txt', 'renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.unlink('renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n"
    }
  ],
  "created": 1649609241,
  "object": "edit"
}
2022-04-10 12:47:34.370920 fix syntax errors 2 ["const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', err => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.appendFile('test.txt', '\\nHello again!', err => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.rename('test.txt', 'renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.unlink('renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n", "const fs = require('fs');\n\nfs.writeFile('test.txt', 'Hello world!', err => {\n    if (err) throw err;\n    console.log('The file has been saved!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.appendFile('test.txt', '\\nHello again!', err => {\n    if (err) throw err;\n    console.log('The file has been appended!');\n});\n\nfs.readFile('test.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.rename('test.txt', 'renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been renamed!');\n});\n\nfs.readFile('renamed.txt', 'utf8', (err, data) =>\n    if (err) throw err;\n    console.log(data);\n);\n\nfs.unlink('renamed.txt', err => {\n    if (err) throw err;\n    console.log('The file has been deleted!');\n});\n"]
2022-04-10 12:47:34.371057 size on output set 3
2022-04-10 12:47:34.371074 num operations 2
2022-04-10 12:47:34.371080 size on input set 1
2022-04-10 12:47:39.770961 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"
    }
  ],
  "created": 1649609254,
  "object": "edit"
}
2022-04-10 12:47:39.771165 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"]
2022-04-10 12:47:39.771199 size on output set 1
2022-04-10 12:47:39.771209 size on input set 1
2022-04-10 12:47:45.023174 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"
    }
  ],
  "created": 1649609260,
  "object": "edit"
}
2022-04-10 12:47:45.023351 fix syntax errors 2 ["import sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print(river)\n        print('NO')\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n", "\nimport sys\n\ndef main():\n    n, m, d = map(int, sys.stdin.readline().split())\n    c = list(map(int, sys.stdin.readline().split()))\n    river = [0] * n\n    i = 0\n\n    for platform_size in c:\n        if i + platform_size + d > n:\n            i = 0\n        river[i:i + platform_size] = [i + 1] * platform_size\n        i += platform_size\n\n    if 0 in river:\n        print('NO')\n        return\n\n    print('YES')\n    print(' '.join(map(str, river)))\n\nmain()\n"]
2022-04-10 12:47:45.023378 size on output set 2
2022-04-10 12:47:45.023391 num operations 2
2022-04-10 12:47:45.023397 size on input set 1
2022-04-10 12:47:54.570936 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n:\n    print('NO')\n    exit()\n\nif max(c) > d:\n    print('NO')\n    exit()\n\nif d == 1:\n    print('NO')\n    exit()\n\nif m == 1 and c[0] == 1:\n    print('YES')\n    print('0 ' * n)\n    exit()\n\nif m == 1 and c[0] > 1:\n    print('YES')\n    print('0 ' * (n - c[0]) + '1 ' * c[0])\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"
    },
    {
      "index": 1,
      "text": "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1):\n    print('NO')\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"
    }
  ],
  "created": 1649609265,
  "object": "edit"
}
2022-04-10 12:47:54.571228 fix spelling mistakes 2 ["\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n:\n    print('NO')\n    exit()\n\nif max(c) > d:\n    print('NO')\n    exit()\n\nif d == 1:\n    print('NO')\n    exit()\n\nif m == 1 and c[0] == 1:\n    print('YES')\n    print('0 ' * n)\n    exit()\n\nif m == 1 and c[0] > 1:\n    print('YES')\n    print('0 ' * (n - c[0]) + '1 ' * c[0])\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n", "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1):\n    print('NO')\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"]
2022-04-10 12:47:54.571275 size on output set 2
2022-04-10 12:47:54.571284 size on input set 2
2022-04-10 12:48:10.402864 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1] - a[0])\n"
    },
    {
      "index": 1,
      "text": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n:\n    print('NO')\n    exit()\n\nif max(c) > d:\n    print('NO')\n    exit()\n\nif d == 1:\n    print('NO')\n    exit()\n\nif m == 1 and c[0] == 1:\n    print('YES')\n    print('0 ' * n)\n    exit()\n\nif m == 1 and c[0] > 1:\n    print('YES')\n    print('0 ' * (n - c[0]) + '1 ' * c[0])\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"
    }
  ],
  "created": 1649609274,
  "object": "edit"
}
2022-04-10 12:48:10.403065 fix syntax errors 2 ['n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1] - a[0])\n', "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n:\n    print('NO')\n    exit()\n\nif max(c) > d:\n    print('NO')\n    exit()\n\nif d == 1:\n    print('NO')\n    exit()\n\nif m == 1 and c[0] == 1:\n    print('YES')\n    print('0 ' * n)\n    exit()\n\nif m == 1 and c[0] > 1:\n    print('YES')\n    print('0 ' * (n - c[0]) + '1 ' * c[0])\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"]
2022-04-10 12:48:26.658749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, d = map(int, input().split())  # n: number of soldiers, m: number of groups, d: distance\nc = list(map(int, input().split()))  # c[i]: number of soldiers in group i\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1):  # impossible\n    print('NO')\n    exit()\n\nprint('YES')\n\nfor i in range(n):\n    if i % 2 == 0:\n        print(1, end=' ')\n        c[0] -= 1\n        if c[0] == 0:\n            c.pop(0)\n            m -= 1\n    else:\n        print(2, end=' ')\n        c[1] -= 1\n        if c[1] == 0:\n            c.pop(1)\n            m -= 1\n    if m == 0:  # all groups are used\n        print('0 ' * (n - i - 1), end='')\n        exit()\n"
    },
    {
      "index": 1,
      "text": "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1) or (m == 2 and c[0] == 1 and c[1] == 1):\n    print('NO')\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')  # 1\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')  # 2\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"
    }
  ],
  "created": 1649609290,
  "object": "edit"
}
2022-04-10 12:48:26.658984 fix syntax errors 2 ["\nn, m, d = map(int, input().split())  # n: number of soldiers, m: number of groups, d: distance\nc = list(map(int, input().split()))  # c[i]: number of soldiers in group i\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1):  # impossible\n    print('NO')\n    exit()\n\nprint('YES')\n\nfor i in range(n):\n    if i % 2 == 0:\n        print(1, end=' ')\n        c[0] -= 1\n        if c[0] == 0:\n            c.pop(0)\n            m -= 1\n    else:\n        print(2, end=' ')\n        c[1] -= 1\n        if c[1] == 0:\n            c.pop(1)\n            m -= 1\n    if m == 0:  # all groups are used\n        print('0 ' * (n - i - 1), end='')\n        exit()\n", "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) > n or max(c) > d or d == 1 or (m == 1 and c[0] == 1) or (m == 1 and c[0] > 1) or (m == 2 and c[0] == 1 and c[1] == 1):\n    print('NO')\n    exit()\n\nprint('YES')\n\ni = 0\nwhile i < n:\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * d + '1 ' * (c[0] - d), end='')  # 1\n        i += c[0]\n    else:\n        print('1 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n    if m == 0:\n        print('0 ' * (n - i), end='')\n        break\n    if c[0] > d:\n        print('0 ' * (d - 1) + '2 ' * (c[0] - d + 1), end='')  # 2\n        i += c[0]\n    else:\n        print('2 ' * c[0], end='')\n        i += c[0]\n    c.pop(0)\n    m -= 1\n"]
2022-04-10 12:48:26.659118 size on output set 4
