2022-04-10 13:03:29.037337 num operations 2
2022-04-10 13:03:29.037356 size on input set 1
2022-04-10 13:03:34.046945 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 3)\n    \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649610209,
  "object": "edit"
}
2022-04-10 13:03:34.047140 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 3)\n    \nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:03:34.047157 size on output set 2
2022-04-10 13:03:34.047163 size on input set 2
2022-04-10 13:03:38.586755 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649610214,
  "object": "edit"
}
2022-04-10 13:03:38.586972 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 2)\n    \nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:03:44.018751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 3)\n    \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))[1:]\n\n    print(sum(a) % 3)\n    \nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649610218,
  "object": "edit"
}
2022-04-10 13:03:44.019045 fix syntax errors 2 ['import sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))\n\n    print(sum(a) % 3)\n    \nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    f = sys.stdin\n    a = list(map(int, f.readline().strip().split()))[1:]\n\n    print(sum(a) % 3)\n    \nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:03:44.019074 size on output set 3
2022-04-10 13:03:44.019094 num operations 2
2022-04-10 13:03:44.019100 size on input set 1
2022-04-10 13:03:49.586727 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = [int(i) for i in input().split()]\n\n# Find the greatest common divisor\nlcd = n[0]\nfor i in n:\n    while i % lcd != 0:\n        lcd -= 1\n\n# Find the least common multiple\nlcm = n[0]\nfor i in n:\n    while lcm % i != 0:\n        lcm += lcd\n\nprint(lcm)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = [int(i) for i in input().split()]\n\n# Find the greatest common divisor\nlcd = n[0]\nfor i in n:\n    while i % lcd != 0:\n        lcd -= 1\n\n# Find the least common multiple\nlcm = n[0]\nfor i in n:\n    while lcm % i != 0:\n        lcm += lcd\n\nprint(lcm)\n"
    }
  ],
  "created": 1649610224,
  "object": "edit"
}
2022-04-10 13:03:49.586933 fix spelling mistakes 2 ['\n\nn = [int(i) for i in input().split()]\n\n# Find the greatest common divisor\nlcd = n[0]\nfor i in n:\n    while i % lcd != 0:\n        lcd -= 1\n\n# Find the least common multiple\nlcm = n[0]\nfor i in n:\n    while lcm % i != 0:\n        lcm += lcd\n\nprint(lcm)\n', '\n\nn = [int(i) for i in input().split()]\n\n# Find the greatest common divisor\nlcd = n[0]\nfor i in n:\n    while i % lcd != 0:\n        lcd -= 1\n\n# Find the least common multiple\nlcm = n[0]\nfor i in n:\n    while lcm % i != 0:\n        lcm += lcd\n\nprint(lcm)\n']
2022-04-10 13:03:49.586960 size on output set 1
2022-04-10 13:03:49.586968 size on input set 1
2022-04-10 13:03:58.870745 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = [int(i) for i in input().split()]  # input list of numbers\n\n# Find the least common multiple\nlcm = n[0]  # set lcm to first number in list\nfor i in n:  # loop through list\n    while lcm % i != 0:  # while lcm is not divisible by i\n        lcm += 1  # increment lcm by 1\n\nprint(lcm)  # print lcm\n"
    },
    {
      "index": 1,
      "text": "\n\nn = [int(i) for i in input().split()]\n\n# Find the least common multiple\ndef lcm(n):\n    # Find the greatest common divisor\n    lcd = n[0]\n    for i in n:\n        while i % lcd != 0:\n            lcd -= 1\n\n    # Find the least common multiple\n    lcm = n[0]\n    for i in n:\n        while lcm % i != 0:\n            lcm += lcd\n\n    return lcm\n\nprint(lcm(n))\n"
    }
  ],
  "created": 1649610229,
  "object": "edit"
}
2022-04-10 13:03:58.870868 fix syntax errors 2 ['\n\nn = [int(i) for i in input().split()]  # input list of numbers\n\n# Find the least common multiple\nlcm = n[0]  # set lcm to first number in list\nfor i in n:  # loop through list\n    while lcm % i != 0:  # while lcm is not divisible by i\n        lcm += 1  # increment lcm by 1\n\nprint(lcm)  # print lcm\n', '\n\nn = [int(i) for i in input().split()]\n\n# Find the least common multiple\ndef lcm(n):\n    # Find the greatest common divisor\n    lcd = n[0]\n    for i in n:\n        while i % lcd != 0:\n            lcd -= 1\n\n    # Find the least common multiple\n    lcm = n[0]\n    for i in n:\n        while lcm % i != 0:\n            lcm += lcd\n\n    return lcm\n\nprint(lcm(n))\n']
2022-04-10 13:03:58.870882 size on output set 2
2022-04-10 13:03:58.870895 num operations 2
2022-04-10 13:03:58.870898 size on input set 1
2022-04-10 13:04:04.062720 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check if the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_{i} <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610239,
  "object": "edit"
}
2022-04-10 13:04:04.063148 fix spelling mistakes 2 ["\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check if the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_{i} <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 13:04:04.063401 size on output set 2
2022-04-10 13:04:04.063407 size on input set 2
2022-04-10 13:04:11.530704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether all the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100.\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same.\n        print(1)\n    else:\n        # print 0 otherwise.\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether the elements are the same.\n    # it's enough to check the first and the last element, because the list is sorted\n    # and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610244,
  "object": "edit"
}
2022-04-10 13:04:11.530894 fix syntax errors 2 ["\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether all the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100.\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same.\n        print(1)\n    else:\n        # print 0 otherwise.\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check whether the elements are the same.\n    # it's enough to check the first and the last element, because the list is sorted\n    # and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 13:04:21.114752 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check if the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n\n    # read input and save to a list of integers\n    nums = list(map(int, input().split()))\n\n    # sort the list\n    nums.sort()\n\n    # print 1 if all the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_{i} <= 100\n    print(1 if nums[0] == nums[-1] else 0)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610251,
  "object": "edit"
}
2022-04-10 13:04:21.114959 fix syntax errors 2 ["\n\ndef main():\n\n    # read input and save to a list\n    line = input()\n    nums = list(map(int, line.split()))\n\n    # sort the list\n    nums.sort()\n\n    # check if the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_i <= 100\n    if nums[0] == nums[-1]:\n        # print 1 if all the elements are the same\n        print(1)\n    else:\n        # print 0 otherwise\n        print(0)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n\n    # read input and save to a list of integers\n    nums = list(map(int, input().split()))\n\n    # sort the list\n    nums.sort()\n\n    # print 1 if all the elements are the same\n    # it's enough to check the first and the last element,\n    # because the list is sorted and the elements are 0 <= a_{i} <= 100\n    print(1 if nums[0] == nums[-1] else 0)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 13:04:21.114995 size on output set 4
