2022-04-10 13:01:20.362864 num operations 2
2022-04-10 13:01:20.362910 size on input set 1
2022-04-10 13:01:25.192948 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649610080,
  "object": "edit"
}
2022-04-10 13:01:25.193180 fix spelling mistakes 2 ['\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:01:25.193206 size on output set 1
2022-04-10 13:01:25.193210 size on input set 1
2022-04-10 13:01:31.402784 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:n]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves, sep=\"\\n\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649610085,
  "object": "edit"
}
2022-04-10 13:01:31.402999 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:n]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i + 1, n):\n                if s[j] == t[i]:\n                    s = s[:i] + s[j] + s[i + 1:j] + s[i] + s[j + 1:]\n                    moves.append(i)\n                    break\n            else:\n                print(-1)\n                return\n    print(len(moves))\n    print(*moves, sep="\\n")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:01:31.403035 size on output set 2
2022-04-10 13:01:31.403053 num operations 2
2022-04-10 13:01:31.403060 size on input set 1
2022-04-10 13:01:44.762759 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    n = 6\n    s = \"abcdef\"\n    t = \"abdfec\" \n    #s = \"abcd\"\n    #t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write('\\n'.join(map(str, result)))\n    #fptr.write('\\n')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    n = 6\n    s = \"abcdef\"\n    t = \"abdfec\"\n    # s = \"abcd\"\n    # t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write('\\n'.join(map(str, result)))\n    # fptr.write('\\n')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            if s[i + 1] == t[i]:\n                s = s[:i] + t[i] + s[i + 1:]\n                ans -= 1\n            elif s[i - 1] == t[i]:\n                s = s[:i - 1] + t[i] + s[i] + s[i - 1]\n            else:\n                return -1\n\n    return ans\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610091,
  "object": "edit"
}
2022-04-10 13:01:44.762911 fix spelling mistakes 2 ['\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    n = 6\n    s = "abcdef"\n    t = "abdfec" \n    #s = "abcd"\n    #t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write(\'\\n\'.join(map(str, result)))\n    #fptr.write(\'\\n\')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    n = 6\n    s = "abcdef"\n    t = "abdfec"\n    # s = "abcd"\n    # t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write(\'\\n\'.join(map(str, result)))\n    # fptr.write(\'\\n\')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            if s[i + 1] == t[i]:\n                s = s[:i] + t[i] + s[i + 1:]\n                ans -= 1\n            elif s[i - 1] == t[i]:\n                s = s[:i - 1] + t[i] + s[i] + s[i - 1]\n            else:\n                return -1\n\n    return ans\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 13:01:44.763009 size on output set 2
2022-04-10 13:01:44.763014 size on input set 2
2022-04-10 13:01:58.103458 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    # n = 6\n    # s = \"abcdef\"\n    # t = \"abdfec\"\n    s = \"abcd\"\n    t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write('\\n'.join(map(str, result)))\n    # fptr.write('\\n')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n\n    ans = 0\n            ans += 1\n\n    for i in range(0, n):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            if s[i + 1] == t[i]:\n                s = s[:i] + t[i] + s[i + 1]\n                ans -= 1\n            elif s[i - 1] == t[i]:\n                s = s[:i - 1] + t[i] + s[i] + s[i - 1:]\n            else:\n                return -1\n\n    return ans\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    n = 6\n    s = \"abcdef\"\n    t = \"abdfec\"\n    s = \"abcd\"\n    t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write('\\n'.join(map(str, result)))\n    # fptr.write('\\n')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610104,
  "object": "edit"
}
2022-04-10 13:01:58.103630 fix syntax errors 2 ['\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    # n = 6\n    # s = "abcdef"\n    # t = "abdfec"\n    s = "abcd"\n    t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write(\'\\n\'.join(map(str, result)))\n    # fptr.write(\'\\n\')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n\n    ans = 0\n            ans += 1\n\n    for i in range(0, n):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n - 1):\n        if s[i] != t[i]:\n            if s[i + 1] == t[i]:\n                s = s[:i] + t[i] + s[i + 1]\n                ans -= 1\n            elif s[i - 1] == t[i]:\n                s = s[:i - 1] + t[i] + s[i] + s[i - 1:]\n            else:\n                return -1\n\n    return ans\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    n = 6\n    s = "abcdef"\n    t = "abdfec"\n    s = "abcd"\n    t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    # fptr.write(\'\\n\'.join(map(str, result)))\n    # fptr.write(\'\\n\')\n\n    # fptr.close()\n\n\ndef swapLexOrder(s, t, n):\n    pass\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 13:02:02.922719 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    n = 6\n    s = \"abcdef\"\n    t = \"abdfec\"\n    #s = \"abcd\"\n    #t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write('\\n'.join(map(str, result)))\n    #fptr.write('\\n')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    \"\"\"\n    n = 6\n    s = \"abcdef\"\n    t = \"abdfec\"\n    #s = \"abcd\"\n    #t = \"accd\"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write('\\n'.join(map(str, result)))\n    #fptr.write('\\n')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649610118,
  "object": "edit"
}
2022-04-10 13:02:02.923042 fix syntax errors 2 ['\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    n = 6\n    s = "abcdef"\n    t = "abdfec"\n    #s = "abcd"\n    #t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write(\'\\n\'.join(map(str, result)))\n    #fptr.write(\'\\n\')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input().strip())\n\n    s = input()\n\n    t = input()\n    """\n    n = 6\n    s = "abcdef"\n    t = "abdfec"\n    #s = "abcd"\n    #t = "accd"\n\n    result = swapLexOrder(s, t, n)\n\n    print(result)\n    #fptr.write(\'\\n\'.join(map(str, result)))\n    #fptr.write(\'\\n\')\n\n    #fptr.close()\n\ndef swapLexOrder(s, t, n):\n    if s == t:\n        return 0\n    if n == 1:\n        if s != t:\n            return -1\n    if n == 2:\n        if s[0] != t[0]:\n            return -1\n        if s[1] == t[1]:\n            return 0\n        else:\n            return 1\n    if s[0] != t[0]:\n        return -1\n    if s[-1] != t[-1]:\n        return -1\n\n    ans = 0\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            ans += 1\n\n    for i in range(1, n-1):\n        if s[i] != t[i]:\n            if s[i+1] == t[i]:\n                s = s[:i] + t[i] + s[i+1:]\n                ans -= 1\n            elif s[i-1] == t[i]:\n                s = s[:i-1] + t[i] + s[i] + s[i-1]\n            else:\n                return -1\n\n    return ans\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 13:02:02.923096 size on output set 3
2022-04-10 13:02:02.923111 num operations 2
2022-04-10 13:02:02.923118 size on input set 1
2022-04-10 13:02:09.062743 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution----- \n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution for swapchar-----\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"
    }
  ],
  "created": 1649610123,
  "object": "edit"
}
2022-04-10 13:02:09.062937 fix spelling mistakes 2 ["\n\n#-----Solution----- \n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n", "\n\n#-----Solution for swapchar-----\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"]
2022-04-10 13:02:09.063067 size on output set 2
2022-04-10 13:02:09.063089 size on input set 2
2022-04-10 13:02:27.442699 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# #-----Solution-----\n#\n# s = input()\n# str1 = input()\n# str2 = input()\n#\n# def swap(str, i, j):\n#   str = list(str)\n#   temp = str[i]\n#   str[i] = str[j]\n#   str[j] = temp\n#   return ''.join(str)\n#\n# def swapchar(str1, str2):\n#   cnt = 0\n#   flag = True\n#   while flag:\n#     flag = False\n#     for i in range(len(str1)):\n#       if str1[i] != str2[i]:\n#         for j in range(i+1, len(str1)):\n#           if str1[j] == str2[i]:\n#             str1 = swap(str1, i, j)\n#             cnt += 1\n#             flag = True\n#             break\n#         if flag:\n#           break\n#   if str1 != str2:\n#     return -1\n#   return cnt\n#\n# n = swapchar(str1, str2)\n# print(n)\n# if n == -1:\n#   print(-1)\n# else:\n#   for i in range(n):\n#     print(i+1, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\ns = input()  # take input of string\nstr1 = input()  # take input of string\nstr2 = input()  # take input of string\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"
    }
  ],
  "created": 1649610129,
  "object": "edit"
}
2022-04-10 13:02:27.442914 fix syntax errors 2 ["\n#\n# #-----Solution-----\n#\n# s = input()\n# str1 = input()\n# str2 = input()\n#\n# def swap(str, i, j):\n#   str = list(str)\n#   temp = str[i]\n#   str[i] = str[j]\n#   str[j] = temp\n#   return ''.join(str)\n#\n# def swapchar(str1, str2):\n#   cnt = 0\n#   flag = True\n#   while flag:\n#     flag = False\n#     for i in range(len(str1)):\n#       if str1[i] != str2[i]:\n#         for j in range(i+1, len(str1)):\n#           if str1[j] == str2[i]:\n#             str1 = swap(str1, i, j)\n#             cnt += 1\n#             flag = True\n#             break\n#         if flag:\n#           break\n#   if str1 != str2:\n#     return -1\n#   return cnt\n#\n# n = swapchar(str1, str2)\n# print(n)\n# if n == -1:\n#   print(-1)\n# else:\n#   for i in range(n):\n#     print(i+1, end=' ')\n", "\n\n#-----Solution-----\n\ns = input()  # take input of string\nstr1 = input()  # take input of string\nstr2 = input()  # take input of string\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"]
2022-04-10 13:02:32.238735 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution for swapchar-----#\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution for swapchar-----#\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"
    }
  ],
  "created": 1649610147,
  "object": "edit"
}
2022-04-10 13:02:32.238948 fix syntax errors 2 ["\n\n#-----Solution for swapchar-----#\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n", "\n\n#-----Solution for swapchar-----#\n\ns = input()\nstr1 = input()\nstr2 = input()\n\ndef swap(str, i, j):\n  str = list(str)\n  temp = str[i]\n  str[i] = str[j]\n  str[j] = temp\n  return ''.join(str)\n\ndef swapchar(str1, str2):\n  cnt = 0\n  flag = True\n  while flag:\n    flag = False\n    for i in range(len(str1)):\n      if str1[i] != str2[i]:\n        for j in range(i+1, len(str1)):\n          if str1[j] == str2[i]:\n            str1 = swap(str1, i, j)\n            cnt += 1\n            flag = True\n            break\n        if flag:\n          break\n  if str1 != str2:\n    return -1\n  return cnt\n\nn = swapchar(str1, str2)\nprint(n)\nif n == -1:\n  print(-1)\nelse:\n  for i in range(n):\n    print(i+1, end=' ')\n"]
2022-04-10 13:02:32.239063 size on output set 3
