2022-04-10 12:37:05.623564 num operations 2
2022-04-10 12:37:05.623591 size on input set 1
2022-04-10 12:37:10.549931 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# https://www.hackerrank.com/challenges/beautiful-days-at-the-movies/problem\n\n\ndef main():\n    n = int(input().strip())\n    print(min_swap(n))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input().strip())\n    print(min_swap(n))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608625,
  "object": "edit"
}
2022-04-10 12:37:10.550244 fix spelling mistakes 2 ["# https://www.hackerrank.com/challenges/beautiful-days-at-the-movies/problem\n\n\ndef main():\n    n = int(input().strip())\n    print(min_swap(n))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input().strip())\n    print(min_swap(n))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 12:37:10.550304 size on output set 2
2022-04-10 12:37:10.550315 size on input set 2
2022-04-10 12:37:16.069996 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        print(min_swap(int(input())))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input().strip()) # number of test cases\n    for _ in range(n):\n        print(min_swap(int(input().strip())))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608630,
  "object": "edit"
}
2022-04-10 12:37:16.070208 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    for i in range(n):\n        print(min_swap(int(input())))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input().strip()) # number of test cases\n    for _ in range(n):\n        print(min_swap(int(input().strip())))\n\n\ndef min_swap(n):\n    if n % 25 == 0:\n        return 0\n    n_str = str(n)\n    if len(n_str) == 1:\n        return -1\n    if n_str[-2:] == '00':\n        return -1\n\n    for index in range(len(n_str) - 1, 0, -1):\n        if n_str[index] != '0' and n_str[index - 1] != '0':\n            return 1 + min_swap(n_str[:index - 1] + n_str[index] + n_str[index - 1] + n_str[index + 1:])\n\n    return -1\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 12:37:28.365881 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://www.hackerrank.com/challenges/minimum-swaps-2/problem\n\n\ndef main():\n    n = input().strip()\n    arr = [int(i) for i in input().strip().split()]\n    print(min_swap(arr))\n\n\ndef min_swap(arr):\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# https://www.hackerrank.com/challenges/beautiful-days-at-the-movies/problem\n\n\ndef main():\n    i, j, k = input().strip().split(' ')\n    i, j, k = [int(i), int(j), int(k)]\n    print(beautifulDays(i, j, k))\n\n\n\ndef beautifulDays(i, j, k):\n    count = 0\n    for n in range(i, j + 1):\n        if abs(n - int(str(n)[::-1])) % k == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608636,
  "object": "edit"
}
2022-04-10 12:37:28.366143 fix syntax errors 2 ["# https://www.hackerrank.com/challenges/minimum-swaps-2/problem\n\n\ndef main():\n    n = input().strip()\n    arr = [int(i) for i in input().strip().split()]\n    print(min_swap(arr))\n\n\ndef min_swap(arr):\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "# https://www.hackerrank.com/challenges/beautiful-days-at-the-movies/problem\n\n\ndef main():\n    i, j, k = input().strip().split(' ')\n    i, j, k = [int(i), int(j), int(k)]\n    print(beautifulDays(i, j, k))\n\n\n\ndef beautifulDays(i, j, k):\n    count = 0\n    for n in range(i, j + 1):\n        if abs(n - int(str(n)[::-1])) % k == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 12:37:28.366198 size on output set 4
2022-04-10 12:37:28.366227 num operations 2
2022-04-10 12:37:28.366237 size on input set 1
2022-04-10 12:37:34.041940 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    if n % 25 == 0 and n != 0:\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip(\"0\")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 5\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip(\"0\")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608648,
  "object": "edit"
}
2022-04-10 12:37:34.042314 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    if n % 25 == 0 and n != 0:\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip("0")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 5\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip("0")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:37:34.042362 size on output set 2
2022-04-10 12:37:34.042374 size on input set 2
2022-04-10 12:37:47.061188 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 5, so print 0\n        print(0)\n    else:\n        n = str(n)  # convert the number to string\n        n = n[::-1]  # reverse the string\n        n = n.lstrip(\"0\")  # remove the leading zeros\n        if len(n) < 2:  # if the length of the string is less than 2, then print -1\n            print(-1)\n        else:\n            count = 0\n            while True:  # while loop to check if the number is divisible by 25\n                if len(n) < 2:  # if the length of the string is less than 2\n                    if int(n) % 25 == 0:  # if the number is divisible by 25\n                        print(count)\n                    else:  # if the number is not divisible by 25\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:  # if the first digit is divisible by 5\n                        count += 1\n                        n = n[1:]  # remove the first digit\n                    else:  # if the first digit is not divisible by 5\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 25\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip(\"0\")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608654,
  "object": "edit"
}
2022-04-10 12:37:47.061459 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 5, so print 0\n        print(0)\n    else:\n        n = str(n)  # convert the number to string\n        n = n[::-1]  # reverse the string\n        n = n.lstrip("0")  # remove the leading zeros\n        if len(n) < 2:  # if the length of the string is less than 2, then print -1\n            print(-1)\n        else:\n            count = 0\n            while True:  # while loop to check if the number is divisible by 25\n                if len(n) < 2:  # if the length of the string is less than 2\n                    if int(n) % 25 == 0:  # if the number is divisible by 25\n                        print(count)\n                    else:  # if the number is not divisible by 25\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:  # if the first digit is divisible by 5\n                        count += 1\n                        n = n[1:]  # remove the first digit\n                    else:  # if the first digit is not divisible by 5\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n = int(input())\n    if n % 25 == 0:  # if the number is divisible by 25, then it is divisible by 5 and 25\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1]\n        n = n.lstrip("0")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:37:57.793858 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    if n % 25 == 0 and n != 0:\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1].lstrip(\"0\")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    n = str(n)\n    n = n[::-1]\n    n = n.lstrip(\"0\")\n    if len(n) < 2:\n        print(-1)\n    else:\n        count = 0\n        while True:\n            if len(n) < 2:\n                if int(n) % 25 == 0:\n                    print(count)\n                else:\n                    print(-1)\n                break\n            else:\n                if int(n[0]) % 5 == 0:\n                    count += 1\n                    n = n[1:]\n                else:\n                    n = n[1:]\n                    count += 1\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649608667,
  "object": "edit"
}
2022-04-10 12:37:57.794104 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    if n % 25 == 0 and n != 0:\n        print(0)\n    else:\n        n = str(n)\n        n = n[::-1].lstrip("0")\n        if len(n) < 2:\n            print(-1)\n        else:\n            count = 0\n            while True:\n                if len(n) < 2:\n                    if int(n) % 25 == 0:\n                        print(count)\n                    else:\n                        print(-1)\n                    break\n                else:\n                    if int(n[0]) % 5 == 0:\n                        count += 1\n                        n = n[1:]\n                    else:\n                        n = n[1:]\n                        count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    n = int(input())\n    n = str(n)\n    n = n[::-1]\n    n = n.lstrip("0")\n    if len(n) < 2:\n        print(-1)\n    else:\n        count = 0\n        while True:\n            if len(n) < 2:\n                if int(n) % 25 == 0:\n                    print(count)\n                else:\n                    print(-1)\n                break\n            else:\n                if int(n[0]) % 5 == 0:\n                    count += 1\n                    n = n[1:]\n                else:\n                    n = n[1:]\n                    count += 1\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-10 12:37:57.794127 size on output set 4
2022-04-10 12:37:57.794138 num operations 2
2022-04-10 12:37:57.794142 size on input set 1
2022-04-10 12:38:02.230089 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = input()\n\nif int(n) % 25 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\nn = input()\n\nif int(n) % 25 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n"
    }
  ],
  "created": 1649608678,
  "object": "edit"
}
2022-04-10 12:38:02.230405 fix spelling mistakes 2 ['\nn = input()\n\nif int(n) % 25 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n', '\nn = input()\n\nif int(n) % 25 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n']
2022-04-10 12:38:02.230436 size on output set 1
2022-04-10 12:38:02.230445 size on input set 1
2022-04-10 12:38:10.749942 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = input()\n\nif int(n) % 2 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 2 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 2 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 2 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "n = input()\n\nif int(n) % 25 == 0 and len(n) != 1:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0 and len(n) != 2:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0 and len(n) != 3:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0 and len(n) != 4:\n    print(3)\n    quit()\n\nprint(-1)\n"
    }
  ],
  "created": 1649608682,
  "object": "edit"
}
2022-04-10 12:38:10.750134 fix syntax errors 2 ['\nn = input()\n\nif int(n) % 2 == 0:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 2 == 0:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 2 == 0:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 2 == 0:\n    print(3)\n    quit()\n\nprint(-1)\n', 'n = input()\n\nif int(n) % 25 == 0 and len(n) != 1:\n    print(0)\n    quit()\n\nif int(n[:-1]) % 25 == 0 and len(n) != 2:\n    print(1)\n    quit()\n\nif int(n[:-2]) % 25 == 0 and len(n) != 3:\n    print(2)\n    quit()\n\nif int(n[:-3]) % 25 == 0 and len(n) != 4:\n    print(3)\n    quit()\n\nprint(-1)\n']
2022-04-10 12:38:10.750163 size on output set 2
