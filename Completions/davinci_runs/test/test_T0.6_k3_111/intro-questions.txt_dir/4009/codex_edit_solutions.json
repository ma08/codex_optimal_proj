["\nn, x, y = map(int, input().split())\nnumber = input()\n\nnumber = list(number)\n\nfor i in range(n-y, n+1):\n\tif number[i] == '0':\n\t\tnumber[i] = '1'\n\telse:\n\t\tnumber[i] = '0'\n\nprint(n-x-y+1)\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n\n    This function takes a number and a number of digits to get the remainder of\n    and returns the minimum number of operations to make the remainder of the\n    number the same as the remainder of the number of digits.\n\n    This function uses the following local variables:\n\n    n - number of digits in the number\n    x - the first number for the remainder.\n    y - the second number for the remainder.\n    number - the number to get the remainder of\n    remainder - the remainder of the number\n    answer - the minimum number of operations required\n    \"\"\"\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    remainder = int(number[n - x:])\n    answer = 0\n\n    while remainder != int(str(10 ** y).ljust(x, '0')):\n        remainder = (remainder - 1) % 10 ** x\n        answer += 1\n\n    return answer\n\n\nif __name__ == \"__main__\":\n    print(main())\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n\n    This function takes a number and a number of digits to get the remainder of\n    and returns the minimum number of operations to make the remainder of the\n    number the same as the remainder of the number of digits.\n\n    This function uses the following local variables:\n\n    n - number of digits in the number.\n    x - the first number for the remainder.\n    y - the second number for the remainder.\n    number - the number to get the remainder of.\n    remainder - the remainder of the number.\n    answer - the minimum number of operations required.\n    \"\"\"\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    remainder = int(number[n - x:])\n    answer = 0\n\n    while remainder != int(str(10 ** x).ljust(y, '0')):\n        remainder = (remainder - 1) % 10 ** x\n        answer += 1\n\n    return answer\n\n\nif __name__ == \"__main__\":\n    print(main())\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n\n    This function takes a number of digits, a number to get the remainder of\n    and a number to get the remainder of and returns the minimum number of\n    operations to make the remainder of the number the same as the remainder\n    of the number of digits.\n\n    This function uses the following local variables:\n\n    n - number of digits in the number.\n    x - the first number for the remainder.\n    y - the second number for the remainder.\n    number - the number to get the remainder of.\n    remainder - the remainder of the number.\n    answer - the minimum number of operations required.\n    \"\"\"\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    remainder = int(number[n - x:])\n    answer = 0\n\n    while remainder != int(str(10 ** y).ljust(x, '0')):\n        remainder = (remainder - 1) % 10 ** x\n        answer += 1\n\n    return answer\n\n\nif __name__ == \"__main__\":\n    print(main())\n", "\nn, x, y = map(int, input().split())\nnumber = input()\n\nnumber = list(number)\n\nfor i in range(n - y, n):\n    if number[i] == '0':\n        number[i] = '1'\n    else:\n        number[i] = '0'\n\nprint(n - x - y)\n", "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input()\n    ans = 0\n    if x >= y:\n        mod_number = int(num[:x])\n        remainder = mod_number % (10**y)\n        if remainder == 0:\n            return 0\n        \n        for i in range(x - y):\n            if num[i] == '1':\n                ans += 1\n        for i in range(x - y, x):\n            if num[i] == '0':\n                ans += 1\n    else:\n        mod_number = int(num[:y])\n        remainder = mod_number % (10**x)\n        if remainder == 0:\n            return 0\n        \n        for i in range(y - x):\n            if num[i] == '1':\n                ans += 1\n        for i in range(y - x, y):\n            if num[i] == '0':\n                ans += 1\n    return ans\n\n\nif __name__ == '__main__':\n    print(main())\n", "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input().strip()\n    mod_num = int(num[:x]) % (10 ** y)\n    remainder = mod_num % (10 ** (y - 1))\n    if remainder != 0:\n        return -1\n\n    ans = 0\n    for i in range(x - y):\n        if num[i] == '1':\n            ans += 1\n    for i in range(x - y, x):\n        if num[i] == '0':\n            ans += 1\n    return ans + 1\n\n\nif __name__ == '__main__':\n    print(main())\n", "\n\ndef main():\n    \"\"\"This is the main function.\n\n    This function takes a number of digits and a number to get the remainder\n    of and returns the minimum number of operations to make the remainder\n    of the number the same as the remainder of the number of digits.\n\n    This function uses the following local variables:\n\n    n - number of digits in the number.\n    x - the first number for the remainder.\n    y - the second number for the remainder.\n    number - the number to get the remainder of.\n    remainder - the remainder of the number.\n    answer - the minimum number of operations required.\n    \"\"\"  # noqa\n    n, x, y = [int(x) for x in input().split()]\n    number = input()\n    remainder = int(number[n - x:])\n    answer = 0\n\n    while remainder != int(str(10 ** y).ljust(x, '0')):\n        remainder = (remainder - 1) % 10 ** x\n        answer += 1\n\n    return answer\n\n\nif __name__ == \"__main__\":\n    print(main())\n", "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input().strip()\n    mod_num = int(num[:x]) % (10 ** y)\n    remainder = mod_num % (10 ** (y - 1))\n    if remainder == 0 or mod_num == 0:\n        return 0\n\n    ans = 0\n    for i in range(x - y):\n        if num[i] == '1':\n            ans += 1\n    for i in range(x - y, x):\n        if num[i] == '0':\n            ans += 1\n    return ans\n\n\nif __name__ == '__main__':\n    print(main())\n", "\n\ndef main():\n    n, x, y = map(int, input().split())\n    num = input().strip()\n    remainder = int(num[:x]) % (10**y)\n    if remainder == 0:\n        print(0)\n        return\n    \n    ans = 0\n    for i in range(x - y):\n        if num[i] == '1':\n            ans += 1\n    for i in range(x - y, x):\n        if num[i] == '0':\n            ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]