["\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a_min = min(a[1:]) - 1\n    c = 0\n    for i in range(1, n):\n        if a[i] == a[i-1]:\n            c += 1\n    if c > a_min and a[0] == a[n-1]:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve_problem(a):\n    max_a = max(a)\n    min_a = min(a)\n    diff = max_a - min_a\n    if diff == 0:\n        return 'YES'\n    elif diff % 2 == 0:\n        return 'YES'\n    else:\n        return 'NO'\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n\n    print(solve_problem(a))\n", "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a_min = min(a[1:]) - 1\n    c = 0\n    for i in range(1, n):\n        if a[i] == a[i-1]:\n            c += 1\n    if c > a_min and a[0] == a[n-1] and a[0] != a_min:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef check_walls(lst):\n    for i in range(len(lst) - 1):\n        if lst[i] != lst[i + 1]:\n            return False\n\n    return True\n\ndef check_bricks(lst):\n    for i in range(len(lst) - 1):\n        if lst[i] == lst[i + 1]:\n            return True\n    return False\n\n\ndef check_bricks_sum(lst):\n    sum_ = 0\n    for i in range(len(lst) - 1):\n        if lst[i] == lst[i + 1]:\n            sum_ += abs(lst[i] - max(lst))\n    return sum_\n\n\ndef check_bricks_sum2(lst):\n    sum_ = 0\n    max_ = max(lst)\n    for i in range(len(lst)):\n        if lst[i] == max_:\n            continue\n        else:\n            sum_ += abs(max_ - lst[i])\n    return sum_\n\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if check_walls(lst):\n        print(\"YES\")\n    elif check_bricks(lst):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef check_wall_height(lst):\n    for i in range(len(lst)-1):\n        if lst[i] != lst[i+1]:\n            return False\n    return True\n\ndef check_bricks_height(lst):\n    for i in range(len(lst)-1):\n        if lst[i] == lst[i+1]:\n            return True\n    return False\n\ndef check_bricks_height_sum(lst):\n    sum_ = 0\n    for i in range(len(lst)-1):\n        if lst[i] == lst[i+1]:\n            sum_ += abs(lst[i] - max(lst))\n    return sum_\n\ndef check_bricks_height_sum2(lst):\n    sum_ = 0\n    max_ = max(lst)\n    for i in range(len(lst)):\n        if lst[i] == max_:\n            continue\n        else:\n            sum_ += abs(max_ - lst[i])\n    return sum_\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if check_wall_height(lst):\n        print(\"YES\")\n    elif check_bricks_height(lst):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve_problem(n, b):\n    pass\n\n\nif __name__ == '__main__':\n    n = int(input())\n    b = input().split()\n    for i in range(n):\n        b[i] = int(b[i])\n\n    print(solve_problem(n, b))\n", "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a_min = min(a)\n    if a_min == a[0] and a[0] == a[n-1]:\n        a_min = a[n-2]\n    c = 0\n    for i in range(1, n):\n        if a[i] == a[i-1]:\n            c += 1\n    if c > a_min:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef check_walls(lst):\n    for i in range(len(lst)-1):\n        if lst[i] != lst[i+1]:\n            return False\n    return True\n\ndef check_bricks(lst):\n    for i in range(len(lst)-1):\n        if lst[i] == lst[i+1]:\n            return True\n    return False\n\ndef check_bricks_sum(lst):\n    sum_ = 0\n    for i in range(len(lst)):\n        if lst[i] != max(lst):\n            sum_ += abs(lst[i] - max(lst))\n    return sum_\n\ndef check_bricks_sum2(lst):\n    sum_ = 0\n    max_ = max(lst)\n    for i in range(len(lst)):\n        if lst[i] != max_:\n            sum_ += abs(max_ - lst[i])\n    return sum_\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if check_walls(lst):\n        print(\"YES\")\n    elif check_bricks(lst):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve_problem(n, a):\n    max_a = max(a)\n    min_a = min(a)\n    diff = max_a - min_a\n    if diff == 0:\n        return 'YES'\n    elif diff % 2 == 0:\n        return 'YES'\n    else:\n        return 'NO'\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n\n    print(solve_problem(n, a))\n", "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n"]