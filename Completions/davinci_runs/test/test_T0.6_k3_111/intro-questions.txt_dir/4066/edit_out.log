2022-04-10 13:17:03.039713 num operations 2
2022-04-10 13:17:03.039743 size on input set 1
2022-04-10 13:17:07.941059 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minima\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611023,
  "object": "edit"
}
2022-04-10 13:17:07.941293 fix spelling mistakes 2 ['\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minima\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:17:07.941331 size on output set 2
2022-04-10 13:17:07.941339 size on input set 2
2022-04-10 13:17:12.669984 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minima\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611028,
  "object": "edit"
}
2022-04-10 13:17:12.670276 fix syntax errors 2 ['\n\n\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minima\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:17:17.078737 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649611032,
  "object": "edit"
}
2022-04-10 13:17:17.078933 fix syntax errors 2 ['\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    _ = input()\n    A = list(map(int, input().split()))\n    # find minimum and second minimum.\n    min1 = A[0]\n    min2 = A[1]\n    if min2 < min1:\n        min1, min2 = min2, min1\n    for i in range(2, len(A)):\n        if A[i] < min2:\n            if A[i] < min1:\n                min2 = min1\n                min1 = A[i]\n            else:\n                min2 = A[i]\n    print(min1, min2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-10 13:17:17.078961 size on output set 3
2022-04-10 13:17:17.078978 num operations 2
2022-04-10 13:17:17.078985 size on input set 1
2022-04-10 13:17:22.198742 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf') #infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    }
  ],
  "created": 1649611037,
  "object": "edit"
}
2022-04-10 13:17:22.198954 fix spelling mistakes 2 ['\n\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\') #infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n', '\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n']
2022-04-10 13:17:22.199067 size on output set 2
2022-04-10 13:17:22.199073 size on input set 2
2022-04-10 13:17:27.114715 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf') # infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf') #infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    }
  ],
  "created": 1649611042,
  "object": "edit"
}
2022-04-10 13:17:27.114899 fix syntax errors 2 ['\n\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\') # infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n', '\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\') #infinity\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans[0], ans[1]\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n']
2022-04-10 13:17:32.141459 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float('inf')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans\n\nif __name__ == '__main__':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write(\"{} {}\\n\".format(*solve(a, n)))\n"
    }
  ],
  "created": 1649611047,
  "object": "edit"
}
2022-04-10 13:17:32.141691 fix syntax errors 2 ['\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n', '\nfrom sys import stdin, stdout\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef solve(a, n):\n    min_lcm = float(\'inf\')\n    ans = [0, 0]\n    for i in range(n):\n        for j in range(i + 1, n):\n            if lcm(a[i], a[j]) < min_lcm:\n                min_lcm = lcm(a[i], a[j])\n                ans[0] = i + 1\n                ans[1] = j + 1\n    return ans\n\nif __name__ == \'__main__\':\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    stdout.write("{} {}\\n".format(*solve(a, n)))\n']
2022-04-10 13:17:32.141733 size on output set 3
2022-04-10 13:17:32.141750 num operations 2
2022-04-10 13:17:32.141759 size on input set 1
2022-04-10 13:17:47.781865 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(\"1 2\")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print(\"1\", second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(\"1 2\")\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print(\"1\", second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n"
    }
  ],
  "created": 1649611052,
  "object": "edit"
}
2022-04-10 13:17:47.782224 fix spelling mistakes 2 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print("1 2")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print("1", second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print("1 2")\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print("1", second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n']
2022-04-10 13:17:47.782263 size on output set 2
2022-04-10 13:17:47.782271 size on input set 2
2022-04-10 13:17:52.966724 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(\"1\", \"2\")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print(\"1\", second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(\"1 2\")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print(1, second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n"
    }
  ],
  "created": 1649611067,
  "object": "edit"
}
2022-04-10 13:17:52.967034 fix syntax errors 2 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print("1", "2")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print("1", second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print("1 2")\nelse:\n    # Find the index of the largest number in the list\n    largest_ind = a.index(max(a))\n    # Find the second largest number in the list\n    second_largest_num = sorted(a)[-2]\n    # Find the index of the second largest number in the list\n    second_largest_ind = a.index(second_largest_num)\n    # If the second largest number is at index 0, then the index of the largest number is 1\n    if second_largest_ind == 0:\n        print(1, second_largest_ind + 1)\n    # If the second largest number is at the index of the largest number, print the next index\n    elif second_largest_ind == largest_ind:\n        print(second_largest_ind + 1, second_largest_ind + 2)\n    # Otherwise, print the indexes of the largest number and the second largest number\n    else:\n        print(largest_ind + 1, second_largest_ind + 1)\n']
2022-04-10 13:17:58.902746 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(1, 2)\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print(1, second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(1, 2)\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print(1, second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n"
    }
  ],
  "created": 1649611073,
  "object": "edit"
}
2022-04-10 13:17:58.903090 fix syntax errors 2 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(1, 2)\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print(1, second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(1, 2)\nelse:\n    # Find the index of the smallest number in the list\n    smallest_ind = a.index(min(a))\n    # Find the second smallest number in the list\n    second_smallest_num = sorted(a)[1]\n    # Find the index of the second smallest number in the list\n    second_smallest_ind = a.index(second_smallest_num)\n    # If the second smallest number is at index 0, then the index of the smallest number is 1\n    if second_smallest_ind == 0:\n        print(1, second_smallest_ind + 1)\n    # If the second smallest number is at the index of the smallest number, print the next index\n    elif second_smallest_ind == smallest_ind:\n        print(second_smallest_ind + 1, second_smallest_ind + 2)\n    # Otherwise, print the indices of the smallest number and the second smallest number\n    else:\n        print(smallest_ind + 1, second_smallest_ind + 1)\n']
2022-04-10 13:17:58.903126 size on output set 3
