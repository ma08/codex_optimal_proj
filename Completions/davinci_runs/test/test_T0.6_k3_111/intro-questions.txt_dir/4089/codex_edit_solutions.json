["import string\nN = int(input())\n\n\nprint(solve(N))\n", "import string\nN = int(input())\n\ndef solve(N):\n    if N <= 26:\n        return string.ascii_lowercase[N - 1]\n    else:\n        word_len = 1\n        while True:\n            if N - 26**word_len <= 0:\n                break\n            N -= 26**word_len\n            word_len += 1\n        N -= 1\n        alphabet = string.ascii_lowercase\n        answer = ''\n        for _ in range(word_len):\n            answer = alphabet[N % 26] + answer\n            N = N // 26\n        return answer\n\nprint(solve(N))\n", "# === Solution 1 ===\n\ndef convert(num):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    base = len(alphabet)\n    if num <= 0:\n        return ''\n    elif num <= base:\n        return alphabet[num-1]\n    else:\n        return convert(num//base) + alphabet[(num%base)-1]\nnum = int(input())\nprint(convert(num))\n", "\n\nn = int(input())\n# n = 1000000000000000\n# n = 18279 \n# n = 4\n# n = 26\n\nif n <= 26:\n    print(chr(n + 96))\nelse:\n    digits = 1\n    c = 0\n    while n > c:\n        c = 26 * (26 ** (digits - 1)) * digits\n        digits += 1\n\n    digits -= 1\n    c = 26 * (26 ** (digits - 1)) * digits\n\n    n = n - c\n\n    l = []\n    for i in range(digits):\n        l.append(1)\n\n    for i in range(n):\n        l[digits - 1] += 1\n        for j in range(digits - 1, 0, -1):\n            if l[j] > 26:\n                l[j] = 1\n                l[j - 1] += 1\n\n    ans = ''\n    for i in range(digits):\n        ans += chr(l[i] + 96)\n\n    print(ans)\n", "def solve(n):\n  if n <= 26:\n    return chr(n + 96)\n  else:\n    word_len = 1\n    while True:\n      if n - 26**word_len <= 0:\n        break\n      n -= 26**word_len\n      word_len += 1\n    n -= 1\n    answer = ''\n    for _ in range(word_len):\n      answer = chr(n % 26 + 97) + answer\n      n = n // 26\n    return answer\n\nprint(solve(N))\n", "\n# === Solution 1 ===\n\ndef convert(num):\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    base = len(alphabet)\n    if num <= 0:\n        return ''\n    elif num <= base:\n        return alphabet[num-1]\n    else:\n        return convert(num//base) + alphabet[(num%base)-1]\n\nnum = int(input())\nprint(convert(num))\n", "import string\n\nN = int(input()) + 1\n\ndef solve(N):\n  if N <= 26:\n    return string.ascii_uppercase[N - 1]\n  else:\n    word_len = 1\n    while True:\n      if N - 26**word_len <= 0:\n        break\n      N -= 26**word_len\n      word_len += 1\n    N -= 1\n    alphabet = string.ascii_uppercase\n    answer = ''\n    for _ in range(word_len):\n      answer = alphabet[N % 26] + answer\n      N = N // 26\n    return answer\n\nprint(solve(N))\n", "\n\n# n = int(input())\nn = 100000000000000\n# n = 18279 \n# n = 4\n# n = 26\n\nif n <= 26:\n    print(chr(n + 96))\nelse:\n    digits = 1\n    c = 0\n    while n > c:\n        c = 26 * (26 ** (digits - 1)) * digits\n        digits += 1\n\n    digits -= 1\n    c = 26 * (26 ** (digits - 1)) * digits\n\n    n = n - c\n\n    l = []\n    for i in range(digits):\n        l.append(1)\n\n    for i in range(n):\n        l[digits - 1] += 1\n        for j in range(digits - 1, 0, -1):\n            if l[j] > 26:\n                l[j] = 1\n                l[j - 1] += 1\n\n    ans = ''\n    for i in range(digits):\n        ans += chr(l[i] + 96)\n\n    print(ans)\n"]