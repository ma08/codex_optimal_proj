["\ndef solve(n, a):\n    disturbed = []\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n            disturbed.append(i)\n\n    if len(disturbed) == 0:\n        return 0\n    if len(disturbed) == 1:\n        return 1\n    else:\n        for i in range(len(disturbed)):\n            for j in range(i + 1, len(disturbed)):\n                if a[disturbed[i] - 1] == a[disturbed[j] - 1] == 1 and a[disturbed[i]] == 0:\n                    return 2\n                if a[disturbed[i] + 1] == a[disturbed[j] + 1] == 1 and a[disturbed[i]] == 0:\n                    return 2\n        return 3\n\n\nn = int(input())\na = list(map(int, input().split()))[:n]\nprint(solve(n, a))\n", "\n\ndef solve(n, k, a):\n    a.sort()\n    if k == 0:\n        return a[0] - 1\n    if a[0] == 1:\n        return -1\n    for i in range(n - 1):\n        if a[i + 1] - a[i] > 1:\n            return a[i] + 1\n    return a[n - 1] + 1\n\n\nk = int(input())\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))\n", "\nn = int(input())\na = [int(x) for x in input().split(' ')]\ncount = 0\n\nfor i in range(1, n - 1):\n    if a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0:\n        count += 1\n\nprint(count)\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nx = 0\nfor i in range(1, n - 1):\n    if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n        a[i] = 1\n        x += 1\n\nprint(x)\n", "n = int(input())\na = [int(x) for x in input().split(' ')]\ncount = 0\nfor i in range(1, n - 1):\n    if a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0:\n        count += 1\nprint(count)\n", "n = int(input())\na = [int(x) for x in input().split(' ')]\n\ncount = 0\nfor i in range(1, n - 1):\n    if a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0:\n        count += 1\n\nprint(count)\n", "\n\ndef solve(n, a):\n    disturbed_indexes = []\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n            disturbed_indexes.append(i)\n\n    if len(disturbed_indexes) == 0:\n        return 0\n    if len(disturbed_indexes) == 1:\n        return 1\n    else:\n        for i in range(len(disturbed_indexes)):\n            for j in range(i + 1, len(disturbed_indexes)):\n                if a[disturbed_indexes[i] - 1] == a[disturbed_indexes[j] - 1] == 1 and a[disturbed_indexes[i] - 1] == 0:\n                    return 2\n                if a[disturbed_indexes[i] + 1] == a[disturbed_indexes[j] + 1] == 1 and a[disturbed_indexes[i]] == 0:\n                    return 2\n        return 3\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))\n", "\ndef solve(n, a):\n    disturbed = []\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i + 1] == 1 and a[i] == 0:\n            disturbed.append(i)\n\n    if len(disturbed) == 0:\n        return 0\n    if len(disturbed) == 1:\n        return 1\n    else:\n        for i in range(len(disturbed)):\n            for j in range(i + 1, len(disturbed)):\n                if a[disturbed[i] - 1] == a[disturbed[j] - 1] == 1 and a[disturbed[i]] == 0:\n                    return 2\n                if a[disturbed[i] + 1] == a[disturbed[j] + 1] == 1 and a[disturbed[i]] == 0:\n                    return 2\n        return 3\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))\n"]