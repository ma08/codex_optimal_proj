["\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m2 < m1:\n    m2 += 60\n    h2 -= 1\nif h2 < h1:\n    h2 += 24\n\ntot_min = (h2 - h1) * 60 + m2 - m1\nmid_min = tot_min // 2\nh3 = h1 + mid_min // 60\nm3 = m1 + mid_min % 60\nif m3 >= 60:\n    m3 -= 60\n    h3 += 1\nif h3 >= 24:\n    h3 -= 24\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "\nimport fileinput\n\ndef get_midpoint(start, end):\n    # Get the total number of minutes\n    total_min = (end[0] - start[0]) * 60 + (end[1] - start[1])\n    # Add half of the number of minutes to the start time\n    midpoint = [start[0], start[1] + (total_min / 2)]\n    # If the time rolled over to the next hour, adjust the hour\n    if midpoint[1] >= 60:\n        midpoint[1] -= 60\n        midpoint[0] += 1\n        if midpoint[0] == 24:\n            midpoint[0] = 0\n    # If the minutes are less than 10, prepend a zero\n    if midpoint[1] < 10:\n        midpoint[1] = '0' + str(midpoint[1])\n    else:\n        midpoint[1] = str(midpoint[1])\n    # If the hours are less than 10, prepend a zero\n    if midpoint[0] < 10:\n        midpoint[0] = '0' + str(midpoint[0])\n    else:\n        midpoint[0] = str(midpoint[0])\n    # Return the midpoint\n    return ':'.join(midpoint)\n\ndef main():\n    # Read in the input\n    start_time = fileinput.input()[0].split(':')\n    end_time = fileinput.input()[0].split(':')\n    start_time = [int(start_time[0]), int(start_time[1])]\n    end_time = [int(end_time[0]), int(end_time[1])]\n    # Call the function\n    print(get_midpoint(start_time, end_time))\n\nif __name__ == '__main__':\n    main()\n", "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm_diff = (m2 - m1) / 2\n\nh_diff = (h2 - h1) / 2\nif m_diff >= 30:\n    h_diff += 0.5\n\nif m_diff >= 30:\n    m_diff -= 30\n\nm3 = m1 + m_diff\nh3 = h1 + h_diff\n\nif m3 >= 60:\n    m3 -= 60\n    h3 += 1\n\nprint(str(int(h3)).zfill(2) + ':' + str(int(m3)).zfill(2))\n", "\n\nimport fileinput\n\ndef get_midpoint(start, end):\n    # Get the total number of minutes\n    total_min = (end[0] - start[0]) * 60 + (end[1] - start[1])\n    # Add half of the number of minutes to the start time\n    midpoint = [start[0], start[1] + (total_min / 2)]\n    # If the time rolled over to the next hour, adjust the hour\n    if midpoint[1] >= 60:\n        midpoint[1] -= 60\n        midpoint[0] += 1\n        if midpoint[0] == 24:\n            midpoint[0] = 0\n    # If the minutes are less than 10, prepend a zero\n    if midpoint[1] < 10:\n        midpoint[1] = '0' + str(midpoint[1])\n    else:\n        midpoint[1] = str(midpoint[1])\n    # If the hours are less than 10, prepend a zero\n    if midpoint[0] < 10:\n        midpoint[0] = '0' + str(midpoint[0])\n    else:\n        midpoint[0] = str(midpoint[0])\n    # Return the midpoint\n    return ':'.join(midpoint)\n\ndef main():\n    # Read in the input\n    start_time = fileinput.input()[0].split(':')\n    end_time = fileinput.input()[0].split(':')\n    start_time = [int(start_time[0]), int(start_time[1])]\n    end_time = [int(end_time[0]), int(end_time[1])]\n    # Call the function\n    print(get_midpoint(start_time, end_time))\n\nif __name__ == '__main__':\n    main()\n", "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\nm_difference = (m2 - m1) / 2\nh_difference = (h2 - h1) / 2\nif m_difference >= 30:\n    h_difference += 0.5\nif m_difference >= 30:\n    m_difference -= 30\nm3 = m1 + m_difference\nh3 = h1 + h_difference\nif m3 >= 60:\n    m3 -= 60\n    h3 += 1\nprint(str(int(h3)).zfill(2) + ':' + str(int(m3)).zfill(2))\n", "\nimport fileinput\n\ndef get_midpoint(start, end):\n    # Get the total number of minutes.\n    total_min = (end[0] - start[0]) * 60 + (end[1] - start[1])\n    # Add half of the number of minutes to the start time.\n    midpoint = [start[0], start[1] + (total_min / 2)]\n    # If the time rolled over to the next hour, adjust the hours.\n    if midpoint[1] >= 60:\n        midpoint[1] -= 60\n        midpoint[0] += 1\n        if midpoint[0] == 24:\n            midpoint[0] = 0\n    # If the minutes are less than 10, prepend a zero.\n    if midpoint[1] < 10:\n        midpoint[1] = '0' + str(midpoint[1])\n    else:\n        midpoint[1] = str(midpoint[1])\n    # If the hours are less than 10, prepend a zero.\n    if midpoint[0] < 10:\n        midpoint[0] = '0' + str(midpoint[0])\n    else:\n        midpoint[0] = str(midpoint[0])\n    # Return the midpoint.\n    return ':'.join(midpoint)\n\ndef main():\n    # Read in the input.\n    start_time = fileinput.input()[0].split(':')\n    end_time = fileinput.input()[0].split(':')\n    start_time = [int(start_time[0]), int(start_time[1])]\n    end_time = [int(end_time[0]), int(end_time[1])]\n    # Call the function.\n    print get_midpoint(start_time, end_time)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nif m2 < m1:\n    m2 += 60\n    h2 -= 1\nif h2 < h1:\n    h2 += 24\n\ntot_min = (h2 - h1) * 60 + m2 - m1\nmid_min = tot_min // 2\nh3 = h1 + mid_min // 60\nm3 = m1 + mid_min % 60\nif m3 >= 60:\n    m3 -= 60\n    h3 += 1\nif h3 >= 24:\n    h3 -= 24\n\nprint('{:02d}:{:02d}'.format(h3, m3))\n", "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm_difference = (m2 - m1) / 2\n\nh_difference = (h2 - h1) / 2\nif m_difference >= 30:\n    h_difference += 0.5\n\nif m_difference >= 30:\n    m_difference -= 30\n\nm3 = m1 + m_difference\nh3 = h1 + h_difference\n\nif m3 >= 60:\n    m3 -= 60\n    h3 += 1\n\nprint(str(int(h3)).zfill(2) + ':' + str(int(m3)).zfill(2))\n"]