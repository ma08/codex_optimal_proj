["import numpy as np\n\ndef main():\n    n, b, a = [int(x) for x in raw_input().split()]\n    s = [int(x) for x in raw_input().split()]\n    s = np.array(s)\n    b_curr, a_curr = b, a\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a_curr < a:\n                a_curr += 1\n            else:\n                b_curr += 1\n            i += 1\n        elif s[i] == 0:\n            if b_curr > 0:\n                b_curr -= 1\n                i += 1\n            elif a_curr > 0:\n                a_curr -= 1\n                i += 1\n            else:\n                break\n    print i\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# The main idea is to keep track of the maximum number of segments that can be passed with the battery and the accumulator\n# The accumulator can only be used to pass segments that are exposed to sunlight\n# The battery can only be used to pass segments that are not exposed to sunlight\n# When using the battery, the accumulator is charged by one\n# When using the accumulator, the battery is charged by one\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 0\nb_cur = b\na_cur = a\n\nfor i in range(n):\n    if s[i] == 1:\n        if a_cur > 0:\n            a_cur -= 1\n            b_cur += 1\n        elif b_cur > 0:\n            b_cur -= 1\n    else:\n        if b_cur > 0:\n            b_cur -= 1\n            a_cur += 1\n        elif a_cur > 0:\n            a_cur -= 1\n    if a_cur == 0 and b_cur == 0:\n        break\n    max_segments += 1\nprint(max_segments)\n", "\n\n# The main idea is to keep track of the maximum number of segments that can be passed with the battery and the accumulator\n# The accumulator can only be used to pass segments that are exposed to sunlight\n# The battery can only be used to pass segments that are not exposed to sunlight\n# When using the battery, the accumulator is charged by one\n# When using the accumulator, the battery is charged by one\n\nn, b, a = map(int, input().split())  # n is number of segments, b is battery capacity, a is accumulator capacity\ns = list(map(int, input().split()))  # s is a list of integers, 1 means exposed to sunlight, 0 means not exposed to sunlight\n\nmax_segments = 0  # maximum number of segments that can be passed\nb_cur = b  # current battery capacity\na_cur = a  # current accumulator capacity\n\nfor i in range(n):\n    if s[i] == 1:  # segment is exposed to sunlight\n        if a_cur > 0:\n            a_cur -= 1\n            b_cur += 1\n        elif b_cur > 0:\n            b_cur -= 1\n    else:  # segment is not exposed to sunlight\n        if b_cur > 0:\n            b_cur -= 1\n            a_cur += 1\n        elif a_cur > 0:\n            a_cur -= 1\n    if a_cur == 0 and b_cur == 0:  # if both accumulator and battery are empty, stop\n        break\n    max_segments += 1  # increment the maximum number of segments that can be passed\nprint(max_segments)\n", "\nimport numpy as np\n\ndef main():\n    n, b, a = [int(x) for x in input().split()] # n = number of switches, b = number of batteries, a = number of adapters\n    s = [int(x) for x in input().split()] # s = list of switches\n    s = np.array(s)\n    b_curr, a_curr = b, a # b_curr = current number of batteries, a_curr = current number of adapters\n    i = 0\n    while i < n:\n        if s[i] == 1: # if the switch is on\n            if a_curr < a: # if there are less adapters than the maximum\n                a_curr += 1\n            else: # if there are more adapters than the maximum\n                b_curr += 1\n            i += 1\n        elif s[i] == 0: # if the switch is off\n            if b_curr > 0: # if there are batteries\n                b_curr -= 1\n                i += 1\n            elif a_curr > 0: # if there are adapters\n                a_curr -= 1\n                i += 1\n            else: # if there are no batteries or adapters\n                break\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    The code is written in Python 3.6.1. To run the code, please use the below command in the terminal:\n\n    python3 solution.py < input.txt\n\n    \"\"\"\n\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    b_init = b\n    a_init = a\n    count = 0\n    while a > 0:\n        if s[count] == 1:\n            if b < b_init:\n                b += 1\n            else:\n                a -= 1\n        else:\n            a -= 1\n        count += 1\n    while b > 0:\n        if s[count] == 1:\n            if b < b_init:\n                b += 1\n            else:\n                a -= 1\n        else:\n            b -= 1\n        count += 1\n    print(count - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport numpy as np\n\ndef main():\n    n, b, a = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()] # \u5165\u529b\u3092\u914d\u5217\u306b\u683c\u7d0d\n    s = np.array(s)\n    b_now, a_now = b, a # \u521d\u671f\u5024\u3092\u8a2d\u5b9a\n    i = 0\n    while i < n:\n        if s[i] == 1: # \u30bd\u30fc\u30e9\u30fc\u30d1\u30cd\u30eb\u304c1\u306a\u3089\n            if a_now < a: # \u30d0\u30c3\u30c6\u30ea\u30fc\u304c\u6b8b\u3063\u3066\u3044\u308c\u3070\n                a_now += 1\n            else: # \u30d0\u30c3\u30c6\u30ea\u30fc\u304c\u6b8b\u3063\u3066\u3044\u306a\u3051\u308c\u3070\n                b_now += 1\n            i += 1\n        elif s[i] == 0:\n            if b_now > 0:\n                b_now -= 1\n                i += 1\n            elif a_now > 0:\n                a_now -= 1\n                i += 1\n            else:\n                break\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    The code is written in Python 3.6.1. To run the code, please use the below command in the terminal\n\n    python3 solution.py < input.txt\n\n    \"\"\"\n\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    b_init = b\n    a_init = a\n    count = 0\n    while a > 0:\n        if s[count] == 1:\n            if b < b_init:\n                b += 1\n            else:\n                a -= 1\n        else:\n            a -= 1\n        count += 1\n    while b > 0:\n        if s[count] == 1:\n            if b < b_init:\n                b += 1\n            else:\n                a -= 1\n        else:\n            b -= 1\n        count += 1\n    print(count - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport numpy as np\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = map(int, input().split())\n    s = np.array(s)\n    b_now, a_now = b, a\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a_now < a:\n                a_now += 1\n            else:\n                b_now += 1\n            i += 1\n        elif s[i] == 0:\n            if b_now > 0:\n                b_now -= 1\n                i += 1\n            elif a_now > 0:\n                a_now -= 1\n                i += 1\n            else:\n                break\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"]