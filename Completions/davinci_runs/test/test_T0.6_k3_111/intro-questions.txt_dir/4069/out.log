"""
Takahashi, who lives on the number line, is now at coordinate X. He will make exactly K moves of distance D in the positive or negative direction.
More specifically, in one move, he can go from coordinate x to x + D or x - D.
He wants to make K moves so that the absolute value of the coordinate of the destination will be the smallest possible.
Find the minimum possible absolute value of the coordinate of the destination.

-----Constraints-----
 - -10^{15} \leq X \leq 10^{15}
 - 1 \leq K \leq 10^{15}
 - 1Â \leq D \leq 10^{15}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
X K D

-----Output-----
Print the minimum possible absolute value of the coordinate of the destination.

-----Sample Input-----
6 2 4

-----Sample Output-----
2

Takahashi is now at coordinate 6. It is optimal to make the following moves:
 - Move from coordinate 6 to (6 - 4 =) 2.
 - Move from coordinate 2 to (2 - 4 =) -2.
Here, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef solve(x, k, d):\n    # k\u56de\u306e\u79fb\u52d5\u3067x\u30920\u306b\u8fd1\u3065\u3051\u308b\n    if abs(x) >= k * d:\n        return abs(x) - k * d\n    # \u3069\u306e\u3088\u3046\u306b\u79fb\u52d5\u3057\u3066\u3082\u30010\u306b\u5230\u9054\u3057\u306a\u3044\u5834\u5408\n    if (k - abs(x) // d) % 2 == 1:\n        return abs(abs(x) % d - d)\n    return abs(x) % d\n\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().split())\n    print(solve(x, k, d))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\nimport math\n\nx, k, d = map(int,input().split())\n\nif k*d > abs(x):\n    k = abs(x) // d\n    x -= k*d\n    if abs(x) % d == 0:\n        print(abs(x))\n    else:\n        print(abs(x) - d)\nelse:\n    print(abs(x - k*d))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    x, k, d = map(int, input().split())\n    if abs(x) > k * d:\n        print(abs(x) - k * d)\n    else:\n        if (abs(x) % d) + (k - (abs(x) // d)) * d < (k - (abs(x) // d)) * d:\n            print(abs(x) % d)\n        else:\n            print(abs((k - (abs(x) // d)) * d - abs(x) % d))\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1648693507,
  "id": "cmpl-4remhicicP7WfBtQBgCjYY4wOkTVi",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef solve(x, k, d):\n    # k\u56de\u306e\u79fb\u52d5\u3067x\u30920\u306b\u8fd1\u3065\u3051\u308b\n    if abs(x) >= k * d:\n        return abs(x) - k * d\n    # \u3069\u306e\u3088\u3046\u306b\u79fb\u52d5\u3057\u3066\u3082\u30010\u306b\u5230\u9054\u3057\u306a\u3044\u5834\u5408\n    if (k - abs(x) // d) % 2 == 1:\n        return abs(abs(x) % d - d)\n    return abs(x) % d\n\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().split())\n    print(solve(x, k, d))"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\nimport math\n\nx, k, d = map(int,input().split())\n\nif k*d > abs(x):\n    k = abs(x) // d\n    x -= k*d\n    if abs(x) % d == 0:\n        print(abs(x))\n    else:\n        print(abs(x) - d)\nelse:\n    print(abs(x - k*d))"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    x, k, d = map(int, input().split())\n    if abs(x) > k * d:\n        print(abs(x) - k * d)\n    else:\n        if (abs(x) % d) + (k - (abs(x) // d)) * d < (k - (abs(x) // d)) * d:\n            print(abs(x) % d)\n        else:\n            print(abs((k - (abs(x) // d)) * d - abs(x) % d))\n\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
