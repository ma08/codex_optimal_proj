2022-04-10 13:58:51.137363 num operations 2
2022-04-10 13:58:51.137398 size on input set 1
2022-04-10 13:59:05.712165 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += j\n        i = j\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += 1\n        i = j\n\nprint(ans)\n"
    }
  ],
  "created": 1649613531,
  "object": "edit"
}
2022-04-10 13:59:05.712364 fix spelling mistakes 2 ['\n\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += j\n        i = j\n\nprint(ans)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += 1\n        i = j\n\nprint(ans)\n']
2022-04-10 13:59:05.712398 size on output set 2
2022-04-10 13:59:05.712405 size on input set 2
2022-04-10 13:59:10.263436 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += 1\n        i = j\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += 1\n        i = j\n\nprint(ans)\n"
    }
  ],
  "created": 1649613545,
  "object": "edit"
}
2022-04-10 13:59:10.263780 fix syntax errors 2 ['\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += 1\n        i = j\n\nprint(ans)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += 1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += 1\n        i = j\n\nprint(ans)\n']
2022-04-10 13:59:16.127555 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += j\n        i = j\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let's say the previous router was placed in room i\n# let's say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == \"1\":\n        ans += j\n        i = j\n\nprint(ans)\n"
    }
  ],
  "created": 1649613550,
  "object": "edit"
}
2022-04-10 13:59:16.127761 fix syntax errors 2 ['\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += j\n        i = j\n\nprint(ans)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if the room has a router, place one\n# if the room does not have a router, connect directly\n\n# we start with the room 1\n# let\'s say the previous router was placed in room i\n# let\'s say we want to connect room j\n# if j-i > 2*k+1, we place a router in room i+k+1 and connect i+k+1 to j\n# if j-i <= 2*k+1, we connect j\n\nans = 0\ni = 1\nfor j in range(1, n+1):\n    if j-i > 2*k+1:\n        ans += i+k+1\n        i = i+k+1\n    if s[j-1] == "1":\n        ans += j\n        i = j\n\nprint(ans)\n']
2022-04-10 13:59:16.127796 size on output set 2
2022-04-10 13:59:16.127831 num operations 2
2022-04-10 13:59:16.127837 size on input set 1
2022-04-10 13:59:20.615434 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n#input\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    }
  ],
  "created": 1649613556,
  "object": "edit"
}
2022-04-10 13:59:20.615788 fix spelling mistakes 2 ['\n\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n', '\n#input\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n']
2022-04-10 13:59:20.615821 size on output set 2
2022-04-10 13:59:20.615832 size on input set 2
2022-04-10 13:59:27.423501 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    }
  ],
  "created": 1649613560,
  "object": "edit"
}
2022-04-10 13:59:27.423661 fix syntax errors 2 ['\nimport sys\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n', '\n\nimport sys\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n \ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n']
2022-04-10 13:59:35.283388 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#input\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "#input\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n"
    }
  ],
  "created": 1649613567,
  "object": "edit"
}
2022-04-10 13:59:35.283537 fix syntax errors 2 ['\n#input\nimport sys\n\nn,k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n', '#input\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\ns = [int(i) for i in s]\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == 1:\n        s[max(0,i-k):min(n,i+k+1)] = [0] * len(s[max(0,i-k):min(n,i+k+1)])\n\nfor i in range(n):\n    count += i * s[i]\n\nprint(count)\n']
2022-04-10 13:59:35.283552 size on output set 4
2022-04-10 13:59:35.283560 num operations 2
2022-04-10 13:59:35.283563 size on input set 1
2022-04-10 13:59:40.543898 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(s[l+1:r+1])\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k+1))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(s[l+1:r+1])\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k+1))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649613575,
  "object": "edit"
}
2022-04-10 13:59:40.544112 fix spelling mistakes 2 ["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(s[l+1:r+1])\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k+1))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(s[l+1:r+1])\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k+1))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 13:59:40.544151 size on output set 1
2022-04-10 13:59:40.544162 size on input set 1
2022-04-10 13:59:50.615393 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(map(int, s[l+1:r+1]))\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k-1, r-k))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k-1, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(map(int, s[l+1:r+1]))\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649613580,
  "object": "edit"
}
2022-04-10 13:59:50.615610 fix syntax errors 2 ["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(map(int, s[l+1:r+1]))\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k-1, r-k))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k-1, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    def cost(l, r):\n        return sum(map(int, s[l+1:r+1]))\n\n    def f(l, r):\n        if l == r:\n            return 1\n        if s[l] == '1' and s[r] == '1':\n            return min(f(l+1, r), f(l, r-1), cost(l+k, r-k))\n        if s[l] == '1':\n            return min(f(l+1, r), cost(l+k, r))\n        if s[r] == '1':\n            return min(f(l, r-1), cost(l, r-k+1))\n        return cost(l, r)\n\n    print(f(0, n-1))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-10 13:59:50.615626 size on output set 2
