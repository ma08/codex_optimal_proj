2022-04-10 12:43:56.448640 num operations 2
2022-04-10 12:43:56.448662 size on input set 1
2022-04-10 12:44:02.282427 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "\n#https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    }
  ],
  "created": 1649609037,
  "object": "edit"
}
2022-04-10 12:44:02.282645 fix spelling mistakes 2 ['#https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n', '\n#https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n']
2022-04-10 12:44:02.282677 size on output set 2
2022-04-10 12:44:02.282687 size on input set 2
2022-04-10 12:44:09.617874 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "\n# https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n# print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    }
  ],
  "created": 1649609042,
  "object": "edit"
}
2022-04-10 12:44:09.618046 fix syntax errors 2 ['\n# https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n', '\n# https://codeforces.com/contest/1253/problem/B\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n# print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n']
2022-04-10 12:44:16.205924 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    },
    {
      "index": 1,
      "text": "# https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n"
    }
  ],
  "created": 1649609050,
  "object": "edit"
}
2022-04-10 12:44:16.206111 fix syntax errors 2 ['# https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n', '# https://codeforces.com/contest/1253/problem/B2\nn,r = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(n)]\na.sort(key=lambda x:x[0])\n#print(a)\nresult = 0\nfor i in range(n):\n    if a[i][0]<=r:\n        result+=1\n        r+=a[i][1]\n    else:\n        break\nprint(result)\n']
2022-04-10 12:44:16.206135 size on output set 3
2022-04-10 12:44:16.206150 num operations 2
2022-04-10 12:44:16.206154 size on input set 1
2022-04-10 12:44:31.786745 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\n\nfrom typing import List\n\nfrom utils.common import ListNode\n\n\nclass Solution:\n    def maxProfit(self, k: int, prices: List[int]) -> int:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.sol = Solution()\n\n    def test_empty(self):\n        self.assertEqual(self.sol.maxProfit(2, []), 0)\n\n    def test_one(self):\n        self.assertEqual(self.sol.maxProfit(2, [1]), 0)\n        self.assertEqual(self.sol.maxProfit(2, [2]), 0)\n\n    def test_two(self):\n        self.assertEqual(self.sol.maxProfit(2, [2, 1]), 0)\n        self.assertEqual(self.sol.maxProfit(2, [1, 2]), 1)\n\n    def test_three(self):\n        self.assertEqual(self.sol.maxProfit(2, [1, 3, 2]), 2)\n\n    def test_general(self):\n        self.assertEqual(self.sol.maxProfit(2, [1, 2, 3, 4, 5]), 4)\n        self.assertEqual(self.sol.maxProfit(2, [7, 1, 5, 3, 6, 4]), 5)\n        self.assertEqual(self.sol.maxProfit(2, [7, 6, 4, 3, 1]), 0)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\n\nfrom typing import List\n\nfrom utils.common import ListNode\n\n\nclass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.sol = Solution()\n\n    def test_empty(self):\n        self.assertEqual(self.sol.maxProfit([]), 0)\n\n    def test_one(self):\n        self.assertEqual(self.sol.maxProfit([1]), 0)\n        self.assertEqual(self.sol.maxProfit([2]), 0)\n\n    def test_two(self):\n        self.assertEqual(self.sol.maxProfit([2, 1]), 0)\n        self.assertEqual(self.sol.maxProfit([1, 2]), 1)\n\n    def test_three(self):\n        self.assertEqual(self.sol.maxProfit([1, 3, 2]), 2)\n\n    def test_general(self):\n        self.assertEqual(self.sol.maxProfit([1, 2, 3, 4, 5]), 4)\n        self.assertEqual(self.sol.maxProfit([7, 1, 5, 3, 6, 4]), 5)\n        self.assertEqual(self.sol.maxProfit([7, 6, 4, 3, 1]), 0)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
    }
  ],
  "created": 1649609056,
  "object": "edit"
}
2022-04-10 12:44:31.787018 fix spelling mistakes 2 ['\n\nimport unittest\n\nfrom typing import List\n\nfrom utils.common import ListNode\n\n\nclass Solution:\n    def maxProfit(self, k: int, prices: List[int]) -> int:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.sol = Solution()\n\n    def test_empty(self):\n        self.assertEqual(self.sol.maxProfit(2, []), 0)\n\n    def test_one(self):\n        self.assertEqual(self.sol.maxProfit(2, [1]), 0)\n        self.assertEqual(self.sol.maxProfit(2, [2]), 0)\n\n    def test_two(self):\n        self.assertEqual(self.sol.maxProfit(2, [2, 1]), 0)\n        self.assertEqual(self.sol.maxProfit(2, [1, 2]), 1)\n\n    def test_three(self):\n        self.assertEqual(self.sol.maxProfit(2, [1, 3, 2]), 2)\n\n    def test_general(self):\n        self.assertEqual(self.sol.maxProfit(2, [1, 2, 3, 4, 5]), 4)\n        self.assertEqual(self.sol.maxProfit(2, [7, 1, 5, 3, 6, 4]), 5)\n        self.assertEqual(self.sol.maxProfit(2, [7, 6, 4, 3, 1]), 0)\n\n\nif __name__ == "__main__":\n    unittest.main()\n', '\n\nimport unittest\n\nfrom typing import List\n\nfrom utils.common import ListNode\n\n\nclass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def setUp(self):\n        self.sol = Solution()\n\n    def test_empty(self):\n        self.assertEqual(self.sol.maxProfit([]), 0)\n\n    def test_one(self):\n        self.assertEqual(self.sol.maxProfit([1]), 0)\n        self.assertEqual(self.sol.maxProfit([2]), 0)\n\n    def test_two(self):\n        self.assertEqual(self.sol.maxProfit([2, 1]), 0)\n        self.assertEqual(self.sol.maxProfit([1, 2]), 1)\n\n    def test_three(self):\n        self.assertEqual(self.sol.maxProfit([1, 3, 2]), 2)\n\n    def test_general(self):\n        self.assertEqual(self.sol.maxProfit([1, 2, 3, 4, 5]), 4)\n        self.assertEqual(self.sol.maxProfit([7, 1, 5, 3, 6, 4]), 5)\n        self.assertEqual(self.sol.maxProfit([7, 6, 4, 3, 1]), 0)\n\n\nif __name__ == "__main__":\n    unittest.main()\n']
2022-04-10 12:44:31.787133 size on output set 2
2022-04-10 12:44:31.787138 size on input set 2
2022-04-10 12:44:46.266732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n"
    },
    {
      "index": 1,
      "text": "\n"
    }
  ],
  "created": 1649609071,
  "object": "edit"
}
2022-04-10 12:44:46.266978 fix syntax errors 2 ['\n', '\n']
2022-04-10 12:45:00.290720 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n"
    },
    {
      "index": 1,
      "text": "\n"
    }
  ],
  "created": 1649609086,
  "object": "edit"
}
2022-04-10 12:45:00.290963 fix syntax errors 2 ['\n', '\n']
2022-04-10 12:45:00.291000 size on output set 1
2022-04-10 12:45:00.291016 num operations 2
2022-04-10 12:45:00.291024 size on input set 1
2022-04-10 12:45:05.015591 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Programme\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n#Programm\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649609100,
  "object": "edit"
}
2022-04-10 12:45:05.015782 fix spelling mistakes 2 ['\n\n#Programme\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n', '\n\n#Programm\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n']
2022-04-10 12:45:05.015813 size on output set 2
2022-04-10 12:45:05.015822 size on input set 2
2022-04-10 12:45:09.802770 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Program\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Programm\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649609105,
  "object": "edit"
}
2022-04-10 12:45:09.802955 fix syntax errors 2 ['\n\n#Program\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n', '\n\n# Programm\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n']
2022-04-10 12:45:14.598839 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n#Programme\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n#Program\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649609110,
  "object": "edit"
}
2022-04-10 12:45:14.599014 fix syntax errors 2 ['\n#\n#Programme\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n', '\n\n#Program\n\nn, r = map(int, input().split())\nprojects = []\nfor _ in range(n):\n    projects.append(list(map(int, input().split())))\n\nprojects = sorted(projects, key=lambda x: x[0])\n\ncount = 0\nfor a, b in projects:\n    if a > r:\n        break\n    r += b\n    count += 1\n\nprint(count)\n']
2022-04-10 12:45:14.599039 size on output set 3
