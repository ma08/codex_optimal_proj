2022-04-10 13:46:00.542959 num operations 2
2022-04-10 13:46:00.542988 size on input set 1
2022-04-10 13:46:05.507788 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\nK = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    }
  ],
  "created": 1649612760,
  "object": "edit"
}
2022-04-10 13:46:05.508229 fix spelling mistakes 2 ['\n\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n', '\nK = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n']
2022-04-10 13:46:05.508268 size on output set 2
2022-04-10 13:46:05.508277 size on input set 2
2022-04-10 13:46:10.074758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    }
  ],
  "created": 1649612765,
  "object": "edit"
}
2022-04-10 13:46:10.074988 fix syntax errors 2 ['\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n', '\nK = int(input())\n\nfor num in range(7, 1000000, 10): \n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n']
2022-04-10 13:46:14.666848 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "K = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "K = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n"
    }
  ],
  "created": 1649612770,
  "object": "edit"
}
2022-04-10 13:46:14.667204 fix syntax errors 2 ['K = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n', 'K = int(input())\n\nfor num in range(7, 1000000, 10):\n    if num % K == 0:\n        print(num // 10)\n        exit()\n\nprint(-1)\n']
2022-04-10 13:46:14.667259 size on output set 2
2022-04-10 13:46:14.667288 num operations 2
2022-04-10 13:46:14.667298 size on input set 1
2022-04-10 13:46:21.150719 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits+1\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple_of_7\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n"
    }
  ],
  "created": 1649612774,
  "object": "edit"
}
2022-04-10 13:46:21.151013 fix spelling mistakes 2 ['\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits+1\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n', '\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple_of_7\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n']
2022-04-10 13:46:21.151105 size on output set 2
2022-04-10 13:46:21.151118 size on input set 2
2022-04-10 13:46:25.738732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n"
    }
  ],
  "created": 1649612781,
  "object": "edit"
}
2022-04-10 13:46:25.738936 fix syntax errors 2 ['\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n', '\n\ndef get_num_digits(num):\n    return len(str(num))\n# end get_num_digits\n\ndef get_first_multiple(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple\n\nk = int(input())\nprint(get_first_multiple(k))\n']
2022-04-10 13:46:32.519476 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_num_digits(num):\n    return len(str(num))\n\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7 * 10 ** (digits - 1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_num_digits(num):\n    return len(str(num)) \n# end get_num_digits\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple_of_7\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n"
    }
  ],
  "created": 1649612786,
  "object": "edit"
}
2022-04-10 13:46:32.519667 fix syntax errors 2 ['\ndef get_num_digits(num):\n    return len(str(num))\n\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7 * 10 ** (digits - 1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n', '\n\ndef get_num_digits(num):\n    return len(str(num)) \n# end get_num_digits\n\ndef get_first_multiple_of_7(k):\n    if k % 7 == 0:\n        return 1\n    else:\n        digits = 1\n        while True:\n            num = 7*10**(digits-1)\n            if num % k == 0:\n                break\n            else:\n                digits += 1\n        return digits\n    # end if\n# end get_first_multiple_of_7\n\nk = int(input())\nprint(get_first_multiple_of_7(k))\n']
2022-04-10 13:46:32.519794 size on output set 3
2022-04-10 13:46:32.519807 num operations 2
2022-04-10 13:46:32.519814 size on input set 1
2022-04-10 13:46:37.226815 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n#\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n"
    }
  ],
  "created": 1649612792,
  "object": "edit"
}
2022-04-10 13:46:37.227009 fix spelling mistakes 2 ['\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n', '\n\nimport sys\n#\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n']
2022-04-10 13:46:37.227051 size on output set 2
2022-04-10 13:46:37.227060 size on input set 2
2022-04-10 13:46:42.678761 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nk = int(sys.stdin.readline())\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7 # num = num * 10 + 7\n    count += 1\n"
    }
  ],
  "created": 1649612797,
  "object": "edit"
}
2022-04-10 13:46:42.678916 fix syntax errors 2 ['import sys\nk = int(sys.stdin.readline())\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n', '#!/usr/bin/env python3\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7 # num = num * 10 + 7\n    count += 1\n']
2022-04-10 13:46:47.366736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n"
    }
  ],
  "created": 1649612802,
  "object": "edit"
}
2022-04-10 13:46:47.366898 fix syntax errors 2 ['\n\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n', '\n\nimport sys\n\nk = int(sys.stdin.readline())\n\nnum = 7\ncount = 1\nwhile True:\n    if num % k == 0:\n        print(count)\n        break\n    num = num * 10 + 7\n    count += 1\n']
2022-04-10 13:46:47.366918 size on output set 3
