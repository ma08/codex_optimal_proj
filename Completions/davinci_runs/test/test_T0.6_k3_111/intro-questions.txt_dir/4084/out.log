"""
Takahashi has many red balls and blue balls. Now, he will place them in a row.
Initially, there is no ball placed.
Takahashi, who is very patient, will do the following operation 10^{100} times:
 - Place A blue balls at the end of the row of balls already placed. Then, place B red balls at the end of the row.
How many blue balls will be there among the first N balls in the row of balls made this way?

-----Constraints-----
 - 1 \leq N \leq 10^{18}
 - A, B \geq 0
 - 0 < A + B \leq 10^{18}
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N A B

-----Output-----
Print the number of blue balls that will be there among the first N balls in the row of balls.

-----Sample Input-----
8 3 4

-----Sample Output-----
4

Let b denote a blue ball, and r denote a red ball. The first eight balls in the row will be bbbrrrrb, among which there are four blue balls.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, a, b = map(int, input().split())\n\nblue = 0\nfor i in range(min(n, a + 1)):\n    if i == a:\n        blue = i\n        break\n    else:\n        blue = i\n\nprint(blue)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef balls(n, a, b):\n    if (a == 0 and b == 0) or n == 0:\n        return 0\n    else:\n        return (n - 1) // (a + b) * a + min(a, (n - 1) % (a + b) + 1)\n\n\nif __name__ == \"__main__\":\n    n, a, b = map(int, input().split())\n    print(balls(n, a, b))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern of the number of balls is:\n# bbbrrrrb, bbbrrrrrbbrrrrb, bbbrrrrrrrbbrrrrrbbrrrrb, and so on.\n# The pattern is repeated after every (a + b) balls.\n# The number of blue balls in the first (a + b) balls is (a + 1).\n# The number of blue balls after the first (a + b) balls is equal to the number of blue balls in the first (a + b) balls.\n# The number of blue balls in the first n balls is equal to the number of blue balls in the first (a + b) balls multiplied by the number of repetitions of the pattern, plus the number of blue balls in the first n % (a + b) balls.\nprint((a + 1) * (n // (a + b)) + (n % (a + b) + 1 if n % (a + b) <= a else a + 1))"
    }
  ],
  "created": 1648693802,
  "id": "cmpl-4rerSRb3pNwWDU4ukUzPWT4zZgJ3f",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, a, b = map(int, input().split())\n\nblue = 0\nfor i in range(min(n, a + 1)):\n    if i == a:\n        blue = i\n        break\n    else:\n        blue = i\n\nprint(blue)"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef balls(n, a, b):\n    if (a == 0 and b == 0) or n == 0:\n        return 0\n    else:\n        return (n - 1) // (a + b) * a + min(a, (n - 1) % (a + b) + 1)\n\n\nif __name__ == \"__main__\":\n    n, a, b = map(int, input().split())\n    print(balls(n, a, b))"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn, a, b = map(int, input().split())\n\n# The pattern of the number of balls is:\n# bbbrrrrb, bbbrrrrrbbrrrrb, bbbrrrrrrrbbrrrrrbbrrrrb, and so on.\n# The pattern is repeated after every (a + b) balls.\n# The number of blue balls in the first (a + b) balls is (a + 1).\n# The number of blue balls after the first (a + b) balls is equal to the number of blue balls in the first (a + b) balls.\n# The number of blue balls in the first n balls is equal to the number of blue balls in the first (a + b) balls multiplied by the number of repetitions of the pattern, plus the number of blue balls in the first n % (a + b) balls.\nprint((a + 1) * (n // (a + b)) + (n % (a + b) + 1 if n % (a + b) <= a else a + 1))"
}
REASON stop
