["\ndef main():\n    # n = int(input())\n    # positions = list(map(int, input().split()))\n    # print(min_coins_to_equalize(positions))\n\n    print(1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    x = [int(i) for i in input().split()]\n\n    if n == 1:\n        print(\"0\")\n        return\n\n    min_x = min(x)\n    max_x = max(x)\n\n    if max_x - min_x > 2:\n        print(\"-1\")\n        return\n\n    elif max_x - min_x == 2:\n        print(\"1\")\n        return\n\n    elif max_x - min_x == 1:\n        print(\"2\")\n        return\n\n    elif max_x - min_x == 0:\n        print(\"0\")\n        return\n\nif __name__ == \"__main__\":\n    main()\n", "# https://codeforces.com/problemset/problem/1360/B\n\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = [int(i) for i in input().split()]\n        x.sort()\n        if n%2 == 0:\n            mid = n//2\n        else:\n            mid = n//2 + 1\n        min_moves = 0\n        for i in range(n):\n            min_moves += abs(x[mid-1] - x[i])\n        print(min_moves)\n\n\nif __name__ == '__main__':\n    main()\n", "# https://codeforces.com/problemset/problem/1360/C\n\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = int(input())\n        a = [int(i) for i in input().split()]\n        a.sort()\n        min_moves = 0\n        for i in range(x):\n            min_moves += abs(a[x-1] - a[i])\n        print(min_moves)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef min_coins_to_equalize(positions):\n    if len(positions) == 1:\n        return 0\n    positions.sort()\n    mid_pos = positions[len(positions) // 2]\n    return sum(abs(mid_pos - pos) for pos in positions)\n\ndef main():\n    n = int(input())\n    positions = list(map(int, sys.stdin.readline().split()))\n    print(min_coins_to_equalize(positions))\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_coins_to_equalize(positions):\n    if len(positions) == 1:\n        return 0\n    positions.sort()\n    mid_pos = positions[len(positions) // 2 - 1]\n    return sum(abs(mid_pos - pos) for pos in positions) + 1\n\ndef main():\n    n = int(input())\n    positions = list(map(int, input().split()))\n    print(min_coins_to_equalize(positions))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef min_coins_to_equalize(positions):\n    if len(positions) == 1:\n        return 0\n    positions.sort()\n    mid_pos = positions[len(positions) // 2 - 1]\n    return sum(abs(mid_pos - pos) for pos in positions)\n\ndef main():\n    n = int(input())\n    positions = list(map(int, input().split()))\n    print(min_coins_to_equalize(positions))\n\nif __name__ == '__main__':\n    main()\n"]