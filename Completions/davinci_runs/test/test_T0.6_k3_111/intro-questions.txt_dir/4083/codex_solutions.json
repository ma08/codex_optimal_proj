["\n\n\ndef main():\n    n, k = map(int, raw_input().split())\n    a = map(int, raw_input().split())\n    a.sort()\n    diff = a[n - 1] - a[0]\n    while diff > 0:\n        a[0] += 1\n        a[n - 1] -= 1\n        a.sort()\n        diff = a[n - 1] - a[0]\n    print a[n - 1] - a[0]\n\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\n\ndef solve(n, k, a):\n    \"\"\"\n    :param n: number of elements in a\n    :param k: number of equal numbers required\n    :param a: array a\n    :return: minimum possible number of operations required to obtain at least k equal numbers in the array\n    \"\"\"\n    d = defaultdict(int)\n    for num in a:\n        d[num] += 1\n    if k in d:\n        return 0\n    a.sort()\n    if a[-1] % 2 == 0:\n        a[-1] //= 2\n        a.append(a[-1])\n        return 1 + solve(n + 1, k, a)\n    else:\n        a[-2] //= 2\n        a[-1] //= 2\n        if a[-1] == a[-2]:\n            return 1 + solve(n, k, a)\n        else:\n            a.append(a[-1])\n            return 1 + solve(n + 1, k, a)\n\n\ndef main():\n    n, k = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    print(solve(n, k, a))\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport math\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_val = min(a)\n\ncount = 0\nfor i in range(n):\n    a[i] -= min_val\n    count += a[i] // 2\n\nif count >= k - 1:\n    print(math.ceil((count - k + 1) / (k-1)))\nelse:\n    print(-1)"]