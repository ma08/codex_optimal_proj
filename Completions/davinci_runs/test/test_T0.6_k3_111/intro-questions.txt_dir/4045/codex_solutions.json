["\n\n# def find_res(n, s, t):\n#     if n == 1:\n#         if s == 'ac' and t == 'ac':\n#             return 'abc'\n#         elif s == 'cb' and t == 'cb':\n#             return 'abc'\n#         elif s == 'ab' and t == 'ab':\n#             return 'abc'\n#         elif s == 'bc' and t == 'bc':\n#             return 'abc'\n#         elif s == 'ac' and t == 'cb':\n#             return 'bac'\n#         elif s == 'ac' and t == 'ab':\n#             return 'cab'\n#         elif s == 'ac' and t == 'bc':\n#             return 'abc'\n#         elif s == 'cb' and t == 'ac':\n#             return 'abc'\n#         elif s == 'cb' and t == 'ab':\n#             return 'bac'\n#         elif s == 'cb' and t == 'bc':\n#             return 'cab'\n#         elif s == 'ab' and t == 'ac':\n#             return 'abc'\n#         elif s == 'ab' and t == 'cb':\n#             return 'abc'\n#         elif s == 'ab' and t == 'bc':\n#             return 'bac'\n#         elif s == 'bc' and t == 'ac':\n#             return 'cab'\n#         elif s == 'bc' and t == 'cb':\n#             return 'abc'\n#         elif s == 'bc' and t == 'ab':\n#             return 'abc'\n#         else:\n#             return 'NO'\n#     else:\n#         if s == 'ac' and t == 'ac':\n#             return 'abc' * n\n#         elif s == 'cb' and t == 'cb':\n#             return 'abc' * n\n#         elif s == 'ab' and t == 'ab':\n#             return 'abc' * n\n#         elif s == 'bc' and t == 'bc':\n#             return 'abc' * n\n#         elif s == 'ac' and t == 'cb':\n#             return 'bac' * n\n#         elif s == 'ac' and t == 'ab':\n#             return 'cab' * n\n#         elif s == 'ac' and t == 'bc':\n#             return 'abc' * n\n#         elif s == 'cb' and t == 'ac':\n#             return 'abc' * n\n#         elif s == 'cb' and t == 'ab':\n#             return 'bac' * n\n#         elif s == 'cb' and t == 'bc':\n#             return 'cab' * n\n#         elif s == 'ab' and t == 'ac':\n#             return 'abc' * n\n#         elif s == 'ab' and t == 'cb':\n#             return 'abc' * n\n#         elif s == 'ab' and t == 'bc':\n#             return 'bac' * n\n#         elif s == 'bc' and t == 'ac':\n#             return 'cab' * n\n#         elif s == 'bc' and t == 'cb':\n#             return 'abc' * n\n#         elif s == 'bc' and t == 'ab':\n#             return 'abc' * n\n#         else:\n#             return 'NO'\n\ndef find_res(n, s, t):\n    if s == 'ac' and t == 'ac':\n        return 'abc' * n\n    elif s == 'cb' and t == 'cb':\n        return 'abc' * n\n    elif s == 'ab' and t == 'ab':\n        return 'abc' * n\n    elif s == 'bc' and t == 'bc':\n        return 'abc' * n\n    elif s == 'ac' and t == 'cb':\n        return 'bac' * n\n    elif s == 'ac' and t == 'ab':\n        return 'cab' * n\n    elif s == 'ac' and t == 'bc':\n        return 'abc' * n\n    elif s == 'cb' and t == 'ac':\n        return 'abc' * n\n    elif s == 'cb' and t == 'ab':\n        return 'bac' * n\n    elif s == 'cb' and t == 'bc':\n        return 'cab' * n\n    elif s == 'ab' and t == 'ac':\n        return 'abc' * n\n    elif s == 'ab' and t == 'cb':\n        return 'abc' * n\n    elif s == 'ab' and t == 'bc':\n        return 'bac' * n\n    elif s == 'bc' and t == 'ac':\n        return 'cab' * n\n    elif s == 'bc' and t == 'cb':\n        return 'abc' * n\n    elif s == 'bc' and t == 'ab':\n        return 'abc' * n\n    else:\n        return 'NO'\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    t = input()\n    res = find_res(n, s, t)\n    print(res)", "\n\ndef solve(n, s, t):\n    if s[0] == s[1] and t[0] == t[1]:\n        return 'NO'\n    if s[0] == s[1]:\n        for c in ['a', 'b', 'c']:\n            if c not in [s[0], t[0], t[1]]:\n                return s[0] * n + c * n + t[0] * n\n    elif t[0] == t[1]:\n        for c in ['a', 'b', 'c']:\n            if c not in [t[0], s[0], s[1]]:\n                return s[0] * n + c * n + t[0] * n\n    else:\n        for c in ['a', 'b', 'c']:\n            if c not in [s[0], s[1], t[0], t[1]]:\n                return s[0] * n + c * n + t[0] * n\n    return 'NO'\n\nif __name__ == \"__main__\":\n    n = int(input().strip())\n    s = input().strip()\n    t = input().strip()\n    print(solve(n, s, t))"]