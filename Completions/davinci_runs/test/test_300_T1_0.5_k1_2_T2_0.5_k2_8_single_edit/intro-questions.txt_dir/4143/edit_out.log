2022-04-19 21:32:11.544478 num operations 1
2022-04-19 21:32:11.544490 size on input set 1
2022-04-19 21:32:11.544630 using api key sunu
2022-04-19 21:32:27.394537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nA = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A[0] - 1) // A[0] + (num_people + A[1] - 1) // A[1] + (num_people + A[2] - 1) // A[2] + (num_people + A[3] - 1) // A[3] + (num_people + A[4] - 1) // A[4]\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 3,
      "text": "\n\n\nN, A, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(x) for x in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + \\\n           (num_people + C - 1) // C + (num_people + D - 1) // D + \\\n           (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nA, B, C, D, E = map(int, input().split())\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (\n        num_people + C - 1) // C + (num_people + D - 1) // D + (\n            num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    }
  ],
  "created": 1650403931,
  "object": "edit"
}
2022-04-19 21:32:27.394872 fix syntax errors 8 ['\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A[0] - 1) // A[0] + (num_people + A[1] - 1) // A[1] + (num_people + A[2] - 1) // A[2] + (num_people + A[3] - 1) // A[3] + (num_people + A[4] - 1) // A[4]\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\n\n\nN, A, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(x) for x in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + \\\n           (num_people + C - 1) // C + (num_people + D - 1) // D + \\\n           (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = map(int, input().split())\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (\n        num_people + C - 1) // C + (num_people + D - 1) // D + (\n            num_people + E - 1) // E\n\nprint(minute_needed(N))\n']
2022-04-19 21:32:27.394918 size on output set 6
2022-04-19 21:32:27.394932 num operations 1
2022-04-19 21:32:27.394939 size on input set 1
2022-04-19 21:32:27.395122 using api key jaanu
2022-04-19 21:33:00.157827 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\ntrain = (N + A - 1) // A\nbus = (N - (A * train) + B - 1) // B\ntaxi = (N - (A * train) - (B * bus) + C - 1) // C\nairplane = (N - (A * train) - (B * bus) - (C * taxi) + D - 1) // D\nship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane) + E - 1) // E\n\nprint(int(train + bus + taxi + airplane + ship))\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 1,
      "text": "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 2,
      "text": "\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 3,
      "text": "\n\n# N, A, B, C, D, E = (int(x) for x in input().split())\n\n# if N % A != 0:\n#     train = N // A + 1\n# else:\n#     train = N // A\n\n# if (N - (A * train)) % B != 0:\n#     bus = (N - (A * train)) // B + 1\n# else:\n#     bus = (N - (A * train)) // B\n\n# if (N - (A * train) - (B * bus)) % C != 0:\n#     taxi = (N - (A * train) - (B * bus)) // C + 1\n# else:\n#     taxi = (N - (A * train) - (B * bus)) // C\n\n# if (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n#     airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\n# else:\n#     airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\n# if (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n#     ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\n# else:\n#     ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\n# print(train + bus + taxi + airplane + ship)\n\n# Best answer\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\ntrain = (N + A - 1) // A\nbus = (N - (A * train) + B - 1) // B\ntaxi = (N - (A * train) - (B * bus) + C - 1) // C\nairplane = (N - (A * train) - (B * bus) - (C * taxi) + D - 1) // D\nship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane) + E - 1) // E\n\nprint(train + bus + taxi + airplane + ship) \n"
    },
    {
      "index": 4,
      "text": "\n\n# My answer\nN, A, B, C, D = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0: \n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1 \nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nprint(train + bus + taxi + airplane)\n\n# Best answer\na, b, c, d, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 5,
      "text": "\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 6,
      "text": "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 7,
      "text": "\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    }
  ],
  "created": 1650403947,
  "object": "edit"
}
2022-04-19 21:33:00.158245 fix syntax errors 8 ['\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\ntrain = (N + A - 1) // A\nbus = (N - (A * train) + B - 1) // B\ntaxi = (N - (A * train) - (B * bus) + C - 1) // C\nairplane = (N - (A * train) - (B * bus) - (C * taxi) + D - 1) // D\nship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane) + E - 1) // E\n\nprint(int(train + bus + taxi + airplane + ship))\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# N, A, B, C, D, E = (int(x) for x in input().split())\n\n# if N % A != 0:\n#     train = N // A + 1\n# else:\n#     train = N // A\n\n# if (N - (A * train)) % B != 0:\n#     bus = (N - (A * train)) // B + 1\n# else:\n#     bus = (N - (A * train)) // B\n\n# if (N - (A * train) - (B * bus)) % C != 0:\n#     taxi = (N - (A * train) - (B * bus)) // C + 1\n# else:\n#     taxi = (N - (A * train) - (B * bus)) // C\n\n# if (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n#     airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\n# else:\n#     airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\n# if (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n#     ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\n# else:\n#     ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\n# print(train + bus + taxi + airplane + ship)\n\n# Best answer\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\ntrain = (N + A - 1) // A\nbus = (N - (A * train) + B - 1) // B\ntaxi = (N - (A * train) - (B * bus) + C - 1) // C\nairplane = (N - (A * train) - (B * bus) - (C * taxi) + D - 1) // D\nship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane) + E - 1) // E\n\nprint(train + bus + taxi + airplane + ship) \n', '\n\n# My answer\nN, A, B, C, D = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0: \n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1 \nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nprint(train + bus + taxi + airplane)\n\n# Best answer\na, b, c, d, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# My answer\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n']
2022-04-19 21:33:00.158331 size on output set 7
