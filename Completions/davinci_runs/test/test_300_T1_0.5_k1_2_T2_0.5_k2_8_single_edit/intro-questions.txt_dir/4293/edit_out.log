2022-04-19 22:59:14.657890 num operations 1
2022-04-19 22:59:14.657903 size on input set 1
2022-04-19 22:59:14.658046 using api key soukgp
2022-04-19 22:59:34.213206 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, A, B = map(int, input().split())\na = N // (A + B)\nb = N % (A + B)\nif b <= A:\n    print(A * a + b)\nelse:\n    print(A * a + A)\n"
    },
    {
      "index": 1,
      "text": "P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 2,
      "text": "\n\nA, B, C, D, E, F = map(int, input().split())\n\nwater = [0]\nsugar = [0]\n\nfor i in range(F+1):\n    if i % 100 == 0:\n        water.append(i)\n\nfor i in range(F+1):\n    if i % 100 == 0:\n        sugar.append(i)\n\nfor i in range(1, F//100+1):\n    for j in range(1, F//100+1):\n        if i * 100 * A <= F and j * 100 * B <= F:\n            water.append(i * 100 * A)\n            sugar.append(j * 100 * B)\n\nfor i in range(1, F//100+1):\n    for j in range(1, F//100+1):\n        if i * C + j * D <= F:\n            sugar.append(i * C + j * D)\n\nwater.sort()\nsugar.sort()\n\nmax_concentration = 0\nmax_a = 0\nmax_b = 0\n\nfor i in range(len(water)):\n    for j in range(len(sugar)):\n        if water[i] + sugar[j] <= F and sugar[j] / (water[i] + sugar[j]) <= E / (100 + E):\n            if max_concentration <= sugar[j] / (water[i] + sugar[j]):\n                max_concentration = sugar[j] / (water[i] + sugar[j])\n                max_a = water[i]\n                max_b = sugar[j]\n\nprint(max_a + max_b, max_b)\n"
    },
    {
      "index": 3,
      "text": "\nP, Q, R = map(int, input().split())\nprint(min(P+Q, Q+R, R+P))  # \u51fa\u529b\n"
    },
    {
      "index": 4,
      "text": "\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 5,
      "text": "\nP,Q,R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 6,
      "text": "\nP, Q, R = map(int, input().split())\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\n\nfor i in range(N):\n    print(i+1)\n"
    }
  ],
  "created": 1650409154,
  "object": "edit"
}
2022-04-19 22:59:34.213537 fix syntax errors 8 ['\nN, A, B = map(int, input().split())\na = N // (A + B)\nb = N % (A + B)\nif b <= A:\n    print(A * a + b)\nelse:\n    print(A * a + A)\n', 'P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n', '\n\nA, B, C, D, E, F = map(int, input().split())\n\nwater = [0]\nsugar = [0]\n\nfor i in range(F+1):\n    if i % 100 == 0:\n        water.append(i)\n\nfor i in range(F+1):\n    if i % 100 == 0:\n        sugar.append(i)\n\nfor i in range(1, F//100+1):\n    for j in range(1, F//100+1):\n        if i * 100 * A <= F and j * 100 * B <= F:\n            water.append(i * 100 * A)\n            sugar.append(j * 100 * B)\n\nfor i in range(1, F//100+1):\n    for j in range(1, F//100+1):\n        if i * C + j * D <= F:\n            sugar.append(i * C + j * D)\n\nwater.sort()\nsugar.sort()\n\nmax_concentration = 0\nmax_a = 0\nmax_b = 0\n\nfor i in range(len(water)):\n    for j in range(len(sugar)):\n        if water[i] + sugar[j] <= F and sugar[j] / (water[i] + sugar[j]) <= E / (100 + E):\n            if max_concentration <= sugar[j] / (water[i] + sugar[j]):\n                max_concentration = sugar[j] / (water[i] + sugar[j])\n                max_a = water[i]\n                max_b = sugar[j]\n\nprint(max_a + max_b, max_b)\n', '\nP, Q, R = map(int, input().split())\nprint(min(P+Q, Q+R, R+P))  # 出力\n', '\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n', '\nP,Q,R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n', '\nP, Q, R = map(int, input().split())\nprint(min(P+Q, Q+R, R+P))\n', '\n\nN = int(input())\n\nfor i in range(N):\n    print(i+1)\n']
2022-04-19 22:59:34.213585 size on output set 8
2022-04-19 22:59:34.213596 num operations 1
2022-04-19 22:59:34.213602 size on input set 1
2022-04-19 22:59:34.213763 using api key soukgp
2022-04-19 22:59:46.209533 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    A, B, C = map(int, input().split())\n    print(min(A+B, B+C, C+A))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650409174,
  "object": "edit"
}
2022-04-19 22:59:46.209826 fix syntax errors 8 ['\n\nimport sys\n\ndef main():\n    A, B, C = map(int, input().split())\n    print(min(A+B, B+C, C+A))\n\nif __name__ == "__main__":\n    main()\n', '# coding: utf-8\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 22:59:46.209857 size on output set 6
