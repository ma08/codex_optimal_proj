["\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\nprint(ans)\n", "\n\n#include<stdio.h>\n\nint main(){\n    int n,i,a[100];\n    scanf(\"%d\",&n);\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\n# Python3 program to find GCD of two numbers\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nn = int(input(\"Enter the number of elements in the list: \"))\na = list(map(int, input(\"Enter the elements of the list: \").split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nn = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\nprint(ans)\n", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "\n\n# Problem\n\n# Given an array A of N integers, find the GCD of all the elements of the array.\n#\n# Input:\n# First line of input contains number of testcases T. For each testcase, there will be two lines, first of which contains N, size of array. The second line contains the elements of the array.\n#\n# Output:\n# For each testcase, print the GCD of array elements.\n#\n# Constraints:\n# 1 <= T <= 100\n# 1 <= N <= 106\n# 1 <= Ai <= 106\n#\n# Example:\n# Input:\n# 1\n# 2\n# 5 10\n#\n# Output:\n# 5\n#\n# Explanation:\n# Testcase 1: GCD of elements in the array is 5.\n\n\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\nans = ans % (10 ** 9 + 7)\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "\n", "#!/usr/bin/env python3\n\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"]