["\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = [words[0]]\n    suffixes = [words[-1]]\n    for word in words:\n        if prefixes[-1].endswith(word):\n            suffixes.append(word)\n        else:\n            prefixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "#!/usr/bin/env python3\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "n = int(input())\n\n\nprefixes = []\nsuffixes = []\n\nfor i in range(n - 1):\n    prefixes.append(input())\n\nfor i in range(n - 1):\n    suffixes.append(input())\n\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\n\nfor i in range(len(suffixes) - 1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    return ''.join(['P' if word in prefixes else 'S' for word in words]) if words else ''\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = ['']\n    suffixes = ['']\n    for word in words:\n        if word.endswith(prefixes[-1]) and len(word) > len(prefixes[-1]):\n            prefixes.append(word)\n        elif word.startswith(suffixes[-1]) and len(word) > len(suffixes[-1]):\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words[:-1]])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words]).replace('PP', 'S')\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n):\n    prefixes.append(input())\nfor i in range(n):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n - 1):\n    prefixes.append(input())\nfor i in range(n - 1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes) - 1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\nn= int(input())\nprefixes= []\nsuffixes= []\nfor i in range(n-1):\n\tprefixes.append(input())\nfor i in range(n-1):\n\tsuffixes.append(input())\n\nprefixes= sorted(prefixes, key=lambda x: len(x))\nsuffixes= sorted(suffixes, key=lambda x: len(x))\n\ns= ''\nfor i in range(len(prefixes)):\n\tif prefixes[i] == suffixes[i]:\n\t\ts += 'P'\n\telse:\n\t\ts += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n\tif prefixes[i] == suffixes[i]:\n\t\ts += 'P'\n\telse:\n\t\ts += 'S'\nprint(s)\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(6, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPSPPSPS'\n    >>> game(4, ['a', 'aa', 'aa', 'a'])\n    'PPSSPS'\n    >>> game(3, ['a', 'c'])\n    'PSPS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if len(prefixes) == 0 or word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = ['']\n    suffixes = ['']\n    for word in words:\n        if word.endswith(prefixes[-1]) and len(prefixes[-1]) > 0:\n            prefixes.append(word)\n        elif word.startswith(suffixes[-1]) and len(suffixes[-1]) > 0:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes and word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba'])\n    'SPPSPSPS'\n    >>> game(3, ['a', 'aa', 'aa', 'a'])\n    'PPSS'\n    >>> game(2, ['a', 'c'])\n    'PS'\n    \"\"\"\n    prefixes = []\n    suffixes = []\n    for word in words:\n        if prefixes:\n            if word.endswith(prefixes[-1]):\n                prefixes.append(word)\n            else:\n                suffixes.append(word)\n        elif suffixes:\n            if word.startswith(suffixes[-1]):\n                suffixes.append(word)\n            else:\n                prefixes.append(word)\n        elif len(words) == 1:\n            prefixes.append(word)\n        elif len(words) == 2:\n            if words[0].startswith(words[1]):\n                prefixes.append(words[0])\n                suffixes.append(words[1])\n            else:\n                prefixes.append(words[1])\n                suffixes.append(words[0])\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input()[::-1])\nfor i in range(n-1):\n    suffixes.append(input()[::-1])\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\n    if prefixes[i] in suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-2, -1, -1):\n    if prefixes[i] in suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n"]