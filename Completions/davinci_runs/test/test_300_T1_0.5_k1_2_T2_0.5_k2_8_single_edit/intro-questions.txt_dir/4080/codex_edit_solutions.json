["\n\nimport sys\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1]-x[0])\n\n    print(n, m)\n    print(a)\n    print(segs)\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        print ('cur', cur)\n        print ('s', s)\n        print ('b', b)\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a.copy()\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print 'Hello, world!'\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, a, l, r, p):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print n, m, a, l, r, p\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    p = []\n    r = []\n    for i in range(m):\n        l.append(int(raw_input().split()[0])-1)\n        r.append(int(raw_input().split()[1])-1)\n        p.append(int(raw_input().split()[2]))\n    solve(n, m, a, l, r, p)\n", "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print(i+1, end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print(segs)\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, a, l, r, k):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(raw_input().split()[0]))\n        r.append(int(raw_input().split()[1]))\n    k = int(raw_input())\n    solve(n, m, a, l, r, k)\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[max(s)][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, a, l, r, k):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print n, m, a, l, r, k\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    k = []\n    r = []\n    for i in range(m):\n        l.append(int(raw_input().split()[0]) - 1)\n        r.append(int(raw_input().split()[1]) - 1)\n        k.append(int(raw_input().split()[2]))\n    solve(n, m, a, l, r, k)\n"]