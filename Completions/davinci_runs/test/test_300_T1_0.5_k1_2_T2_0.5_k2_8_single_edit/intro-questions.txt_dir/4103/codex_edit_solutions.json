["\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\nmax_segments = 0\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if current_accumulator >= 1:\n        current_accumulator -= 1\n    else:\n        current_battery -= 1\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n            current_accumulator += 1\n    max_segments += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n\nprint(max_segments)\n", "\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a > 0:\n                a -= 1\n                ans += 1\n            elif b > 0:\n                b -= 1\n                ans += 1\n            else: break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():  # type: () -> None\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if i > 0 and a[i - 1] + 1 == a[i]:\n            ans += c[a[i - 1] - 1]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nsys.setrecursionlimit(10 ** 6)\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\ndef rec(current_battery, current_accumulator, segments_count, i):\n    if i == n:\n        return segments_count\n    if current_accumulator >= 1:\n        current_accumulator -= 1\n    else:\n        current_battery -= 1\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n            current_accumulator += 1\n    segments_count += 1\n    if current_battery == 0 and current_accumulator == 0:\n        return segments_count\n    return max(rec(current_battery, current_accumulator, segments_count, i + 1), segments_count)\n\nprint(rec(b, a, 0, 0))\n", "# -*- coding: utf-8 -*-\n\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 0:\n            if a > 0:\n                a -= 1\n                ans += 1\n            elif b > 0:\n                b -= 1\n                ans += 1\n            else:\n                break\n        else:\n            if a < a:\n                a += 1\n                ans += 1\n            else:\n                b += 1\n                ans += 1\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, b, a = map(int, input().split())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043d\u044b\u0445 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043d\u044b\u0445 \u0431\u0430\u0442\u0430\u0440\u0435\u0439\ns = list(map(int, input().split()))  # \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432\n\nmax_segments = 0  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432\ncurrent_battery = b  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0442\u0430\u0440\u0435\u0439\ncurrent_accumulator = a  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432\nfor i in range(n):\n    if current_accumulator >= 1:  # \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u044b, \u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0437\u0430\u0440\u044f\u0434\u043a\u0430\n        current_accumulator -= 1  # \u0442\u0440\u0430\u0442\u0438\u043c \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\n    else:\n        current_battery -= 1  # \u0442\u0440\u0430\u0442\u0438\u043c \u0431\u0430\u0442\u0430\u0440\u0435\u044e\n    if s[i] == 1:  # \u0435\u0441\u043b\u0438 \u043d\u0430 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0437\u0430\u0440\u044f\u0434\u043a\u0438\n        if current_battery < b:  # \u0435\u0441\u043b\u0438 \u0431\u0430\u0442\u0430\u0440\u0435\u0439 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c\n            current_battery += 1  # \u0437\u0430\u0440\u044f\u0436\u0430\u0435\u043c \u0431\u0430\u0442\u0430\u0440\u0435\u044e\n        else:\n            if current_accumulator > a:  # \u0435\u0441\u043b\u0438 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c\n                current_accumulator = a  # \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432\n    max_segments += 1  # \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u043e\u0432\n    if current_battery == 0 and current_accumulator == 0:  # \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u0431\u0430\u0442\u0430\u0440\u0435\u0439 \u0438 \u0430\u043a\u043a\u0443\u043c\u0443\u043b\u044f\u0442\u043e\u0440\u043e\u0432\n        break\n\nprint(max_segments)\n", "\n\ndef main():\n    n, a, b = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 0\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if current_accumulator >= 1:\n        current_accumulator -= 1\n    else:\n        current_battery -= 1\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n            current_accumulator += 1\n    max_segments += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n\nprint(max_segments)\n", "\n\ndef main():\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nmax_segments = 1\ncurrent_battery = b\ncurrent_accumulator = a\nfor i in range(n):\n    if current_accumulator >= 1:\n        current_accumulator -= 1\n    else:\n        current_battery -= 1\n    if s[i] == 1:\n        if current_battery < b:\n            current_battery += 1\n        else:\n            current_accumulator += 1\n    if current_battery == 0 and current_accumulator == 0:\n        break\n    if i == n - 1:\n        max_segments += 1\n        break\n\nprint(max_segments)\n", "\ndef main():\n    n, b, a = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))\n\nprint(n, b, a)\nprint(s)\n", "\n\ndef main()\n    n, b, a = map(int, input().split())  # n: \u5145\u96fb\u56de\u6570, b: \u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf, a: \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\n    s = list(map(int, input().split()))  # s: \u5145\u96fb\u30b9\u30a4\u30c3\u30c1\n    ans = 0  # \u5145\u96fb\u56de\u6570\n    i = 0  # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n    while i < n:  # \u5145\u96fb\u56de\u6570\u5206\u7e70\u308a\u8fd4\u3059\n        if s[i] == 1:  # \u5145\u96fb\u30b9\u30a4\u30c3\u30c1\u304cON\u3060\u3063\u305f\u5834\u5408\n            if a < b:  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u304c\u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u3088\u308a\u5c11\u306a\u3044\u5834\u5408\n                a += 1  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u30921\u5897\u3084\u3059\n            else:  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u304c\u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u3088\u308a\u591a\u3044\u5834\u5408\n                b += 1  # \u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u30921\u5897\u3084\u3059\n        if a > 0:  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u304c0\u3088\u308a\u5927\u304d\u3044\u5834\u5408\n            a -= 1  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u30921\u6e1b\u3089\u3059\n            ans += 1  # \u5145\u96fb\u56de\u6570\u30921\u5897\u3084\u3059\n        elif b > 0:  # \u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u304c0\u3088\u308a\u5927\u304d\u3044\u5834\u5408\n            b -= 1  # \u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u30921\u6e1b\u3089\u3059\n            ans += 1  # \u5145\u96fb\u56de\u6570\u30921\u5897\u3084\u3059\n        else:  # \u30b9\u30a4\u30c3\u30c1\u62bc\u3057\u305f\u56de\u6570\u3082\u30d0\u30c3\u30c6\u30ea\u30fc\u6b8b\u91cf\u30820\u306e\u5834\u5408\n            break  # \u5145\u96fb\u56de\u6570\u5206\u7e70\u308a\u8fd4\u3059\u306e\u3092\u7d42\u4e86\u3059\u308b\n        i += 1  # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30921\u5897\u3084\u3059\n    print(ans)  # \u5145\u96fb\u56de\u6570\u3092\u51fa\u529b\u3059\u308b\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, b, a = map(int, input().split()) # n:\u6700\u5927\u5024\u3001b:\u30d0\u30c3\u30c6\u30ea\u30fc\u3001a:\u5145\u96fb\u5668\n    s = list(map(int, input().split())) # s[i]:i\u756a\u76ee\u306e\u30ab\u30e1\u30e9\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if a < b:\n                a += 1\n            else:\n                b += 1\n        if a > 0:\n            a -= 1\n            ans += 1\n        elif b > 0:\n            b -= 1\n            ans += 1\n        else:\n            break\n        i += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"]