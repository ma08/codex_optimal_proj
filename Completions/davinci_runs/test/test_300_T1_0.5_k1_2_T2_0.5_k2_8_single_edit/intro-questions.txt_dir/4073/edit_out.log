2022-04-19 20:50:55.875096 num operations 1
2022-04-19 20:50:55.875108 size on input set 1
2022-04-19 20:50:55.875251 using api key sourya
2022-04-19 20:51:16.490531 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return str(max_elements * max_groups)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get input and solve\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(solve(n, a))\n\ndef solve(n, a, k):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Get input and solve\n    print(solve(int(input()), [int(x) for x in input().split()]))\n\ndef solve(n, a): # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    # Get input\n    n, m = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split() for y in range(n)]\n\n    # Solve\n    print(solve(n, m, a))\n\ndef solve(n, m, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of segments\n    segments = 0\n    for i in range(n):\n        if a[i] == 1:\n            segments += 1\n\n    # elements = [0 for x in range(groups)]\n    # for i in range(n):\n    #     elements[a[i]-1] += 1\n\n    # # Find the number of elements in the largest group\n    # max_elements = max(elements)\n\n    # # Find the number of groups that contain the largest number of elements\n    # max_groups = 0\n    # for i in range(groups):\n    #     if elements[i] == max_elements:\n    #         max_groups += 1\n\n    # Return the answer\n    return segments\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    # Get input\n    n = int(raw_input())\n    a = [int(x) for x in raw_input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    # Get input and output file names\n    input_file = \"input.txt\"\n    output_file = \"output.txt\"\n\n    # Open the input file\n    with open(input_file, \"r\") as fin:\n        # Get input\n        n = int(fin.readline())\n        a = [int(x) for x in fin.readline().split()]\n\n        # Solve\n        ans = solve(n, a)\n\n    # Open the output file\n    with open(output_file, \"w\") as fout:\n        # Write the answer\n        fout.write(str(ans))\n\ndef solve(n, a):\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650401456,
  "object": "edit"
}
2022-04-19 20:51:16.490859 fix syntax errors 8 ["\n\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return str(max_elements * max_groups)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input and solve\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(solve(n, a))\n\ndef solve(n, a, k):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input and solve\n    print(solve(int(input()), [int(x) for x in input().split()]))\n\ndef solve(n, a): # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n, m = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split() for y in range(n)]\n\n    # Solve\n    print(solve(n, m, a))\n\ndef solve(n, m, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of segments\n    segments = 0\n    for i in range(n):\n        if a[i] == 1:\n            segments += 1\n\n    # elements = [0 for x in range(groups)]\n    # for i in range(n):\n    #     elements[a[i]-1] += 1\n\n    # # Find the number of elements in the largest group\n    # max_elements = max(elements)\n\n    # # Find the number of groups that contain the largest number of elements\n    # max_groups = 0\n    # for i in range(groups):\n    #     if elements[i] == max_elements:\n    #         max_groups += 1\n\n    # Return the answer\n    return segments\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n = int(raw_input())\n    a = [int(x) for x in raw_input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    # Get input and output file names\n    input_file = "input.txt"\n    output_file = "output.txt"\n\n    # Open the input file\n    with open(input_file, "r") as fin:\n        # Get input\n        n = int(fin.readline())\n        a = [int(x) for x in fin.readline().split()]\n\n        # Solve\n        ans = solve(n, a)\n\n    # Open the output file\n    with open(output_file, "w") as fout:\n        # Write the answer\n        fout.write(str(ans))\n\ndef solve(n, a):\n    pass\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-19 20:51:16.491032 size on output set 8
2022-04-19 20:51:16.491044 num operations 1
2022-04-19 20:51:16.491050 size on input set 1
2022-04-19 20:51:16.491210 using api key gabby
2022-04-19 20:51:34.003052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] != a[j] != a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] \\\n                            and a[k] + a[i] > a[j]:\n                        solution += 1  # this is the solution\n\n    # Print the solution\n    print(solution)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:  # check if the sides are not equal\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:  # check if the sides can form a valid triangle\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    with open(\"input.txt\") as f:\n        n = int(f.readline())\n        a = list(map(int, f.readline().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    with open(\"output.txt\", \"w\") as f:\n        f.write(str(solution))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = map(int, input().split())\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n        print(i)\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] != a[j] and a[j] != a[k] and a[k] != a[i]\n                    and a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]):\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(0, n):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n-2):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i] and a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650401476,
  "object": "edit"
}
2022-04-19 20:51:34.003392 fix syntax errors 8 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split(\' \')))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] != a[j] != a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] \\\n                            and a[k] + a[i] > a[j]:\n                        solution += 1  # this is the solution\n\n    # Print the solution\n    print(solution)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:  # check if the sides are not equal\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:  # check if the sides can form a valid triangle\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    with open("input.txt") as f:\n        n = int(f.readline())\n        a = list(map(int, f.readline().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    with open("output.txt", "w") as f:\n        f.write(str(solution))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = map(int, input().split())\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n        print(i)\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] != a[j] and a[j] != a[k] and a[k] != a[i]\n                    and a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]):\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(0, n):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n-2):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i] and a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 20:51:34.003541 size on output set 8
