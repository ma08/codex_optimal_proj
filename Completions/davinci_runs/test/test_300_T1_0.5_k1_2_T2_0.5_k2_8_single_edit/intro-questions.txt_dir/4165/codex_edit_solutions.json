["\nn = int(input())\nl = list(map(int, input().split()))\n\nif max(l) < sum(l)-max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nif L[0] + L[1] > L[N-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "import sys\nsys.setrecursionlimit(10 ** 7)\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n# AC\n# 20min\n# \u53f3\u306b\u79fb\u52d5\u3057\u3066\u3044\u304f -> \u5de6\u306b\u79fb\u52d5\u3057\u3066\u3044\u304f\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\n\ndef is_ok(A, k):\n    for i in range(N - k):\n        if A[i] > A[i + k]:\n            return False\n    return True\n\n\ndef meguru_bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if is_ok(A, mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\n\nprint(meguru_bisect(0, N))\n", "n = int(input())\nl = list(map(int, input().split()))\n\nif max(l) < sum(l)-max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "N, K = map(int, input().split())\nH = list(map(int, input().split()))\n\n\nH.sort()\n\nprint(sum(H[::-1][:K]))\n", "\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\nif L[0] + L[1] > L[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nprint(\"Hello World\")\n", "n = int(input())\n\nl = list(map(int, input().split()))\n\nif max(l) < sum(l) - max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nn = int(input())\n\nl = list(map(int, input().split()))\n\nif max(l) < sum(l)-max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\na = list(map(int, input().split()))\nn = int(input())\n\nif max(a) < sum(a)-max(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nif L[0] + L[1] > L[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nn = int(input())\n\nl = list(map(int, input().split()))\nif max(l) < sum(l) - max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"]