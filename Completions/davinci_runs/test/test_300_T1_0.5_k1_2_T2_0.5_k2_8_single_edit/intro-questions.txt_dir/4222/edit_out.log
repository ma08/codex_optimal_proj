2022-04-19 22:18:42.193714 num operations 1
2022-04-19 22:18:42.193726 size on input set 1
2022-04-19 22:18:42.193875 using api key soukgp
2022-04-19 22:18:54.633849 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(int(i) for i in sys.stdin.readline().split())\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = {i for i in range(1, n+1)}\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= {int(i) for i in sys.stdin.readline().split()}\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650406722,
  "object": "edit"
}
2022-04-19 22:18:54.634158 fix syntax errors 8 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(int(i) for i in sys.stdin.readline().split())\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = {i for i in range(1, n+1)}\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= {int(i) for i in sys.stdin.readline().split()}\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 22:18:54.634206 size on output set 7
2022-04-19 22:18:54.634220 num operations 1
2022-04-19 22:18:54.634226 size on input set 1
2022-04-19 22:18:54.634384 using api key gabby
2022-04-19 22:19:05.299220 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1650406734,
  "object": "edit"
}
2022-04-19 22:19:05.299584 fix syntax errors 8 ['\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-19 22:19:05.299627 size on output set 3
