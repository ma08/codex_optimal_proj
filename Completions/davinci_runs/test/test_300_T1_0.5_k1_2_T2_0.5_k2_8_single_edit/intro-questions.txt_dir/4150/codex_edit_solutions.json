["\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n+1)\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nfrom math import floor, ceil\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1) # Add dummy values\n\na.sort()\n\nans = [0] * (n + 2) # Initialize\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    vector<int> left(n), right(n);\n    left[0] = a[0];\n    right[n - 1] = a[n - 1];\n    for (int i = 1; i < n; i++) {\n        left[i] = max(left[i - 1], a[i]);\n        right[n - i - 1] = max(right[n - i], a[n - i - 1]);\n    }\n\n    string ans = \"\";\n    for (int i = 0; i < n; i++) {\n        if (left[i] == max(left[i], right[i])) {\n            ans += \"1\";\n        } else {\n            ans += \"2\";\n        }\n    }\n    cout << ans << endl;\n}\n\n\n# SOLUTION\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "# SOLUTION\n\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "class Solution:\n    def isPalindrome(self, s: str) -> bool:\n        s = ''.join(re.findall('[a-zA-Z0-9]', s)).lower()\n        return s == s[::-1]\n\n", "\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "\n\nimport sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(\"\".join(map(str, [0] * n)))\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nimport sys\n\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\n\nimport sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * n\nright = [0] * n\n\n# get the left and right k-th max elements\nfor i in range(1, n):\n    left[i] = max(left[i-1], a[i-1])\n    right[n-i-1] = max(right[n-i], a[n-i])\n\nans = [0] * n\nfor i in range(n):\n    if left[i] == max(left[i], right[i]):\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(\"\".join(map(str, ans)))\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [2, 4, 5, 3, 1]\nn = len(a)\nk = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# a = [2, 4, 5, 3, 1]\n# n = len(a)\n# k = 2\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n", "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na = [0] + a\na.append(n + 1)\n\na.sort()\n\nans = [0] * (n + 2)\n\nfor i in range(1, n + 2):\n    left = a[i - 1] + k\n    right = a[i] - k - 1\n    if left <= right:\n        ans[left] += 1\n        ans[right + 1] -= 1\n\nfor i in range(1, n + 1):\n    ans[i] += ans[i - 1]\n\nans = ans[1:]\n\nprint(''.join(map(str, ans)))\n"]