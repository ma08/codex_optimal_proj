["def gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Date    : 2018-08-08 20:37:30\n# @Author  : Your Name (you@example.org)\n# @Link    : http://example.org\n# @Version : $Id$\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd_f(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd_f(b, a % b)\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\ndef gcd(a, b):\n    while (b):\n        a, b = b, (a % b)\n    return (a)\n\ndef lcm(a, b):\n    return ((a * b) // gcd(a, b))\n\n\ndef main():\n    N = int((input()))\n    T = [int((input())) for _ in range(N)]\n    ans = (1)\n    for t in (T):\n        ans = lcm(ans, t) \n    print(ans) \n\n\nif __name__ == '__main__':\n    main()\n", "from fractions import gcd\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd(gcd, t[i])\n\nprint(gcd)\n", "\n\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    ans = 0\n    for i in range(N-1):\n        ans += A[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom functools import reduce\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = reduce(lcm, T)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd_f(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd_f(a, b):\n    if a % b == 0:\n        return b\n    else:\n        return gcd_f(b, a % b)\n\n\nprint(gcd)\n", "\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    solve()\n", "def gcd_f(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\nprint(gcd)\n", "\nimport math\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n    \ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    \n    gcd = t[0]\n    for i in range(1, n):\n        gcd = gcd_f(gcd, t[i])\n    \n    print(gcd)\n    \nif __name__ == \"__main__\":\n    main()\n"]