2022-04-19 22:44:57.848391 num operations 1
2022-04-19 22:44:57.848401 size on input set 1
2022-04-19 22:44:57.848554 using api key soukgp
2022-04-19 22:45:13.671774 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n# n = int(input())\n# dishes = list(map(int, input().split()))\n# points = list(map(int, input().split()))\n# bonus = list(map(int, input().split()))\n#\n# ans = 0\n# for i in range(n):\n#     ans += points[dishes[i] - 1]\n#     if i > 0 and dishes[i] == dishes[i - 1] + 1:\n#         ans += bonus[dishes[i - 1] - 1]\n# print(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    n = int(input())\n    dishes = list(map(int, input().split()))\n    points = list(map(int, input().split()))\n    bonus = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(n):\n        ans += points[dishes[i] - 1]\n        if i > 0 and dishes[i] == dishes[i - 1] + 1:\n            ans += bonus[dishes[i - 1] - 1]\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\"\"\"\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\n\"\"\"\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "n = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "# cook your dish here\n\nn = int(input())\narr = list(map(int, input().split()))\nd = {}\n\nfor i in arr:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nfor i in d:\n    if d[i] > 1:\n        print(i, end=\" \")\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1] + bonus[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i] - 1]\n\nprint(ans)\n"
    }
  ],
  "created": 1650408298,
  "object": "edit"
}
2022-04-19 22:45:13.672101 fix syntax errors 8 ['#!/usr/bin/python3\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\n# n = int(input())\n# dishes = list(map(int, input().split()))\n# points = list(map(int, input().split()))\n# bonus = list(map(int, input().split()))\n#\n# ans = 0\n# for i in range(n):\n#     ans += points[dishes[i] - 1]\n#     if i > 0 and dishes[i] == dishes[i - 1] + 1:\n#         ans += bonus[dishes[i - 1] - 1]\n# print(ans)\n', '\n\n\ndef main():\n    n = int(input())\n    dishes = list(map(int, input().split()))\n    points = list(map(int, input().split()))\n    bonus = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(n):\n        ans += points[dishes[i] - 1]\n        if i > 0 and dishes[i] == dishes[i - 1] + 1:\n            ans += bonus[dishes[i - 1] - 1]\n\n    print(ans)\n\n\nif __name__ == "__main__":\n    main()\n\n\n"""\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\n"""\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n', 'n = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '# cook your dish here\n\nn = int(input())\narr = list(map(int, input().split()))\nd = {}\n\nfor i in arr:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nfor i in d:\n    if d[i] > 1:\n        print(i, end=" ")\n', '\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1] + bonus[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i] - 1]\n\nprint(ans)\n']
2022-04-19 22:45:13.672155 size on output set 8
2022-04-19 22:45:13.672167 num operations 1
2022-04-19 22:45:13.672173 size on input set 1
2022-04-19 22:45:13.672352 using api key kouti
2022-04-19 22:45:31.349660 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    dishes = [int(a) - 1 for a in stdin.readline().split()]\n    base_points = [int(a) for a in stdin.readline().split()]\n    additional_points = [int(a) for a in stdin.readline().split()]\n\n    # print(n, dishes, base_points, additional_points)\n\n    total_points = 0\n    for i in range(n):\n        dish = dishes[i]\n        total_points += base_points[dish]\n        if i != 0 and dishes[i - 1] == dish - 1:\n            total_points += additional_points[dish - 1]\n\n    print(total_points)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    total_points += base_points[dishes[i]]\n    if i != 0 and dishes[i - 1] == dishes[i] - 1:\n        total_points += additional_points[dishes[i] - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 3,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 4,
      "text": "\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 5,
      "text": "\nfrom sys import stdin\n\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 6,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 7,
      "text": "from sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1650408313,
  "object": "edit"
}
2022-04-19 22:45:31.350042 fix syntax errors 8 ['\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', "\n\nfrom collections import Counter\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    dishes = [int(a) - 1 for a in stdin.readline().split()]\n    base_points = [int(a) for a in stdin.readline().split()]\n    additional_points = [int(a) for a in stdin.readline().split()]\n\n    # print(n, dishes, base_points, additional_points)\n\n    total_points = 0\n    for i in range(n):\n        dish = dishes[i]\n        total_points += base_points[dish]\n        if i != 0 and dishes[i - 1] == dish - 1:\n            total_points += additional_points[dish - 1]\n\n    print(total_points)\n\nif __name__ == '__main__':\n    main()\n", '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    total_points += base_points[dishes[i]]\n    if i != 0 and dishes[i - 1] == dishes[i] - 1:\n        total_points += additional_points[dishes[i] - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', 'from sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n']
2022-04-19 22:45:31.350102 size on output set 7
