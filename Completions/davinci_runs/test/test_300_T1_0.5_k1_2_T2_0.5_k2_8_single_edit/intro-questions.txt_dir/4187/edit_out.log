2022-04-19 21:58:08.695345 num operations 1
2022-04-19 21:58:08.695355 size on input set 1
2022-04-19 21:58:08.695498 using api key sunu
2022-04-19 21:58:36.414475 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# max_rest = 0\n# rest = 0\n#\n# for i in a:\n#     if i == 0:\n#         max_rest = max(max_rest, rest)\n#         rest = 0\n#     else:\n#         rest += 1\n#\n# max_rest = max(max_rest, rest)\n# print(max_rest)\n"
    },
    {
      "index": 1,
      "text": "#!usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_gap = 0\ngap = 0\n\nfor i in a:\n    if i == 0:\n        max_gap = max(max_gap, gap)\n        gap = 0\n    else:\n        gap += 1\n\nmax_gap = max(max_gap, gap)\nprint(max_gap)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 4,
      "text": "\n# \u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c 0. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043a\u0430\u043a\u043e\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0434\u0440\u044f\u0434 \u0438\u0434\u0443\u0449\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u044d\u0442\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0432\u043d\u044b \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443.\n#\n# \u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n#\n# \u0412\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043e\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u043c 0 (\u0441\u0430\u043c\u043e \u0447\u0438\u0441\u043b\u043e 0 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u0432\u0445\u043e\u0434\u0438\u0442, \u0430 \u0441\u043b\u0443\u0436\u0438\u0442 \u043a\u0430\u043a \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0435\u0435 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f).\n#\n# \u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0432\u043e\u0434\u0430\n#\n# \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0443.\n#\n# \u041f\u0440\u0438\u043c\u0435\u0440\u044b\n#\n# \u0422\u0435\u0441\u0442 1\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 1\n# 7\n# 9\n# 9\n# 9\n# 9\n# 0\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 4\n#\n#\n#\n# \u0422\u0435\u0441\u0442 2\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 1\n# 2\n# 1\n# 1\n# 2\n# 0\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 2\n#\n#\n#\n# \u0422\u0435\u0441\u0442 3\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 1\n# 1\n# 1\n# 1\n# 1\n# 0\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 5\n#\n#\n#\n# \u0422\u0435\u0441\u0442 4\n# \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:\n# 1\n# 2\n# 3\n# 1\n# 3\n# 0\n#\n# \u0412\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b:\n# 1\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 6,
      "text": "#-*- coding: utf-8 -*-\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650405488,
  "object": "edit"
}
2022-04-19 21:58:36.414781 fix syntax errors 8 ['\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# max_rest = 0\n# rest = 0\n#\n# for i in a:\n#     if i == 0:\n#         max_rest = max(max_rest, rest)\n#         rest = 0\n#     else:\n#         rest += 1\n#\n# max_rest = max(max_rest, rest)\n# print(max_rest)\n', '#!usr/bin/env python3\n\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_gap = 0\ngap = 0\n\nfor i in a:\n    if i == 0:\n        max_gap = max(max_gap, gap)\n        gap = 0\n    else:\n        gap += 1\n\nmax_gap = max(max_gap, gap)\nprint(max_gap)\n', '\nn = int(input())\na = list(map(int, input().split()))\nmax_rest = 0\nrest = 0\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\n# Последовательность состоит из натуральных чисел и завершается числом 0. Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.\n#\n# Формат ввода\n#\n# Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).\n#\n# Формат вывода\n#\n# Выведите ответ на задачу.\n#\n# Примеры\n#\n# Тест 1\n# Входные данные:\n# 1\n# 7\n# 9\n# 9\n# 9\n# 9\n# 0\n#\n# Вывод программы:\n# 4\n#\n#\n#\n# Тест 2\n# Входные данные:\n# 1\n# 2\n# 1\n# 1\n# 2\n# 0\n#\n# Вывод программы:\n# 2\n#\n#\n#\n# Тест 3\n# Входные данные:\n# 1\n# 1\n# 1\n# 1\n# 1\n# 0\n#\n# Вывод программы:\n# 5\n#\n#\n#\n# Тест 4\n# Входные данные:\n# 1\n# 2\n# 3\n# 1\n# 3\n# 0\n#\n# Вывод программы:\n# 1\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '#-*- coding: utf-8 -*-\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-19 21:58:36.414966 size on output set 7
2022-04-19 21:58:36.414980 num operations 1
2022-04-19 21:58:36.414987 size on input set 1
2022-04-19 21:58:36.415177 using api key jaanu
2022-04-19 21:58:59.718575 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximal length of 1s\ncount, max_length = 0, 0\nfor i in range(n):\n    if a[i] == 1:\n        count += 1\n    else:\n        max_length = max(max_length, count)\n        count = 0\nmax_length = max(max_length, count)\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s in the beginning\nlength_begin = 0\nfor j in range(i):\n    if a[j] == 1: length_begin += 1\n\n# Find the maximal length of 1s in the end\nlength_end = 0\nfor j in range(n - 1, i, -1):\n    if a[j] == 1: length_end += 1\n\n# Find the maximal length of 1s in the middle\nmax_length_middle = 0\nlength_middle = 0\nfor j in range(i, n - 1):\n    if a[j] == 1: length_middle += 1\n    elif a[j] == 0 and a[j + 1] == 1: length_middle = 0\n    else:\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0.\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s.\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s.\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n"
    }
  ],
  "created": 1650405516,
  "object": "edit"
}
2022-04-19 21:58:59.718850 fix syntax errors 8 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximal length of 1s\ncount, max_length = 0, 0\nfor i in range(n):\n    if a[i] == 1:\n        count += 1\n    else:\n        max_length = max(max_length, count)\n        count = 0\nmax_length = max(max_length, count)\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s in the beginning\nlength_begin = 0\nfor j in range(i):\n    if a[j] == 1: length_begin += 1\n\n# Find the maximal length of 1s in the end\nlength_end = 0\nfor j in range(n - 1, i, -1):\n    if a[j] == 1: length_end += 1\n\n# Find the maximal length of 1s in the middle\nmax_length_middle = 0\nlength_middle = 0\nfor j in range(i, n - 1):\n    if a[j] == 1: length_middle += 1\n    elif a[j] == 0 and a[j + 1] == 1: length_middle = 0\n    else:\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0.\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximal length of 1s.\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s.\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n']
2022-04-19 21:58:59.718904 size on output set 5
