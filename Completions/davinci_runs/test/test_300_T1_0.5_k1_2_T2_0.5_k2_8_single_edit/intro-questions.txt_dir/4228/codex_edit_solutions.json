["#!/usr/bin/env python\n\nn, l = map(int, input().split())\n\nflavors = [l + i for i in range(n)]\n\nprint(sum(flavors) - min([abs(f) for f in flavors]))\n", "\n", "\nn = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    print(\"Case #{}: {} + {} = {}\".format(i + 1, a, b, a + b))\n", "\nn, l = map(int, input().split())\n\nflavors = [l + i for i in range(n)]\n\nprint(sum(flavors) - min([abs(f) for f in flavors]))\n", "\nN, L = map(int, input().split())  # N: number of apples, L: first apple's flavor\n\napple_flavors = [L + i for i in range(N)]\n\napple_flavors.remove(max(apple_flavors))  # remove the apple with the most sour flavor\n\nprint(sum(apple_flavors))\n", "\nn, l = map(int, input().split())\nflavors = [l + i for i in range(n)]\n\nprint(sum(flavors) - min([abs(f) for f in flavors]))\n", "\n\nn, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\nprint(sum(a) - n)\n", "\nN, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)] # list comprehension\n\napple_flavors.remove(max(apple_flavors)) # remove max\n\nprint(sum(apple_flavors))\n", "\n\nN, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)] # apple_flavors = [L, L+1, L+2, ..., L+N]\n\napple_flavors.remove(max(apple_flavors))\n\nprint(sum(apple_flavors))\n", "\nn, l = map(int, input().split())\nflavors = [l + i for i in range(n)]\nprint(sum(flavors) - min([abs(f) for f in flavors]))\n", "\n\nn, l = map(int, input().split()) # n = 3, l = -1\n\nflavors = [l + i for i in range(n)] # l = -1, i = 0, 1, 2\n\nprint(sum(flavors) - min([abs(f) for f in flavors])) # -1 + 0 + 1 + 2 - min(1, 2, 0)\n", "\nN, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)]\n\napple_flavors.remove(max(apple_flavors))\n\nprint(sum(apple_flavors))\n"]