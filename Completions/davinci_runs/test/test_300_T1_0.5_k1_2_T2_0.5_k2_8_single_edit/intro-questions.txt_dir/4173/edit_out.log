2022-04-19 21:50:26.132934 num operations 1
2022-04-19 21:50:26.132947 size on input set 1
2022-04-19 21:50:26.133090 using api key derek
2022-04-19 21:50:26.296114 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-19 21:50:27.798026 using api key kouti
2022-04-19 21:50:40.629735 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 2,
      "text": "\n\n#Solution \nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 3,
      "text": "\n\n#Solution1\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 4,
      "text": "\n\n#Solution\n# for _ in range(int(input())):\n#     n,a,b=map(int,input().split())\n#     x=n//2\n#     y=n%2\n#     cost=x*min(a*2,b)+y*a\n#     print(cost)\n"
    },
    {
      "index": 5,
      "text": "\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 6,
      "text": "\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    },
    {
      "index": 7,
      "text": "\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"
    }
  ],
  "created": 1650405027,
  "object": "edit"
}
2022-04-19 21:50:40.630051 fix syntax errors 8 ['\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n\n#Solution \nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n\n#Solution1\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n\n#Solution\n# for _ in range(int(input())):\n#     n,a,b=map(int,input().split())\n#     x=n//2\n#     y=n%2\n#     cost=x*min(a*2,b)+y*a\n#     print(cost)\n', '\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n', '\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n']
2022-04-19 21:50:40.630087 size on output set 5
2022-04-19 21:50:40.630100 num operations 1
2022-04-19 21:50:40.630106 size on input set 1
2022-04-19 21:50:40.630263 using api key sunu
2022-04-19 21:50:57.956445 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    for x in arr:\n        if x>0:\n            print(x, end = \" \")\n\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a \n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b) \n    \n    print(min_cost)\n"
    },
    {
      "index": 2,
      "text": "\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n"
    },
    {
      "index": 3,
      "text": "\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n\n    min_bottles = n // 2\n    min_cost = min_bottles * b + (n % 2) * a\n    if a > b:\n        min_cost = min(min_cost, (n // 2) * a + (n % 2) * b)\n\n    print(min_cost)\n"
    },
    {
      "index": 4,
      "text": "\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    d = dict()\n    for j in range(n):\n        d[x[j]] = j+1\n    d = sorted(d.items(), key=lambda x: x[1])\n    print(d)\n    print(d[0][0], d[-1][0])\n"
    },
    {
      "index": 5,
      "text": "\n\nq = int(input())\n\nfor i in range(q):\n    n, k, m = [int(x) for x in input().split()]\n    \n    min_bottles = n // 2\n    min_cost = min_bottles * m + (n % 2) * k\n    if k > m:\n        min_cost = min(min_cost, (n // 2) * k + (n % 2) * m)\n    \n    print(min_cost)\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom collections import defaultdict\n\ndef add_edge(u, v):\n    graph[u].append(v)\n\n\ndef dfs(node, parent):\n    for child in graph[node]:\n        if child != parent:\n            dfs(child, node)\n\n\ndef solve():\n    dfs(1, 0)\n\n\nif __name__ == \"__main__\":\n    n, m = [int(x) for x in input().split()]\n    graph = defaultdict(list)\n    for i in range(m):\n        u, v = [int(x) for x in input().split()]\n        add_edge(u, v)\n        add_edge(v, u)\n    solve()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n\ndef main():\n    q = int(input())\n\n    for i in range(q):\n        n, a, b = [int(x) for x in input().split()]\n        \n        min_bottles = n//2\n        min_cost = min_bottles * b + (n%2)*a\n        if a > b:\n            min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n        \n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650405040,
  "object": "edit"
}
2022-04-19 21:50:57.956776 fix syntax errors 8 ['\n\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    for x in arr:\n        if x>0:\n            print(x, end = " ")\n\n    print()\n', '\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a \n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b) \n    \n    print(min_cost)\n', '\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n', '\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n\n    min_bottles = n // 2\n    min_cost = min_bottles * b + (n % 2) * a\n    if a > b:\n        min_cost = min(min_cost, (n // 2) * a + (n % 2) * b)\n\n    print(min_cost)\n', '\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    d = dict()\n    for j in range(n):\n        d[x[j]] = j+1\n    d = sorted(d.items(), key=lambda x: x[1])\n    print(d)\n    print(d[0][0], d[-1][0])\n', '\n\nq = int(input())\n\nfor i in range(q):\n    n, k, m = [int(x) for x in input().split()]\n    \n    min_bottles = n // 2\n    min_cost = min_bottles * m + (n % 2) * k\n    if k > m:\n        min_cost = min(min_cost, (n // 2) * k + (n % 2) * m)\n    \n    print(min_cost)\n', '\n\nfrom collections import defaultdict\n\ndef add_edge(u, v):\n    graph[u].append(v)\n\n\ndef dfs(node, parent):\n    for child in graph[node]:\n        if child != parent:\n            dfs(child, node)\n\n\ndef solve():\n    dfs(1, 0)\n\n\nif __name__ == "__main__":\n    n, m = [int(x) for x in input().split()]\n    graph = defaultdict(list)\n    for i in range(m):\n        u, v = [int(x) for x in input().split()]\n        add_edge(u, v)\n        add_edge(v, u)\n    solve()\n', "import sys\n\n\ndef main():\n    q = int(input())\n\n    for i in range(q):\n        n, a, b = [int(x) for x in input().split()]\n        \n        min_bottles = n//2\n        min_cost = min_bottles * b + (n%2)*a\n        if a > b:\n            min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n        \n        print(min_cost)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 21:50:57.956923 size on output set 8
