2022-04-19 22:15:56.339764 num operations 1
2022-04-19 22:15:56.339775 size on input set 1
2022-04-19 22:15:56.339919 using api key soukgp
2022-04-19 22:16:09.935481 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):  # \u5f8c\u308d\u304b\u3089\u898b\u3066\u3044\u304f\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    N = int(input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 1, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n\ndef main():\n    N = int(raw_input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\ndef main():\n    N = int(input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))  # 10 ^ (len(str(i)) - 1)\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "print(input().count(\"1\"))\n"
    },
    {
      "index": 7,
      "text": "import math\n\ndef main():\n    N = int(input())\n    r = int(math.ceil(math.sqrt(N)))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1), end = '')\n            break\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650406556,
  "object": "edit"
}
2022-04-19 22:16:09.935794 fix syntax errors 8 ["import math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):  # 後ろから見ていく\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    N = int(input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 1, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    n = int(input())\n    r = math.ceil(math.sqrt(n))\n    for i in range(r, 0, -1):\n        if n % i == 0:\n            print(n // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    N = int(raw_input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    N = int(input())\n    r = math.ceil(math.sqrt(N))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1))  # 10 ^ (len(str(i)) - 1)\n            break\n\nif __name__ == '__main__':\n    main()\n", 'print(input().count("1"))\n', "import math\n\ndef main():\n    N = int(input())\n    r = int(math.ceil(math.sqrt(N)))\n    for i in range(r, 0, -1):\n        if N % i == 0:\n            print(N // i // 10 ** (len(str(i)) - 1), end = '')\n            break\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 22:16:09.935845 size on output set 7
2022-04-19 22:16:09.935856 num operations 1
2022-04-19 22:16:09.935862 size on input set 1
2022-04-19 22:16:09.936021 using api key jaanu
2022-04-19 22:16:21.281906 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nd = math.floor(math.log10(N)) + 1\nN = int(input())\n\nprint(int(d))\n"
    },
    {
      "index": 1,
      "text": "import math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"
    },
    {
      "index": 2,
      "text": "import math\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"
    },
    {
      "index": 3,
      "text": "import math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"
    },
    {
      "index": 4,
      "text": "\nimport math\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(d)\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n"
    },
    {
      "index": 7,
      "text": "#include <stdio.h>\n#include <math.h>\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprintf(\"%d\",int(d))\n"
    }
  ],
  "created": 1650406569,
  "object": "edit"
}
2022-04-19 22:16:21.282194 fix syntax errors 8 ['\n\nimport math\n\nd = math.floor(math.log10(N)) + 1\nN = int(input())\n\nprint(int(d))\n', 'import math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n', 'import math\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n', 'import math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n', '\nimport math\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n', '\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(d)\n', '#!/usr/bin/env python3\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprint(int(d))\n', '#include <stdio.h>\n#include <math.h>\n\nimport math\n\nN = int(input())\n\nd = math.floor(math.log10(N)) + 1\nprintf("%d",int(d))\n']
2022-04-19 22:16:21.282232 size on output set 7
