["\n\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    D = min(A)\n    for i in range(n):\n        A[i] -= D\n    if sum(A) % n == 0:\n        print(D)\n    else:\n        print(-1)\n", "\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    D = min(A)\n    for i in range(n):\n        A[i] = A[i] - D\n    if sum(A) % n == 0:\n        print(D)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = min(a)\n    for i in range(n):\n        a[i] = a[i] - d\n    if sum(a) % n == 0:\n        print(d)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n    \"\"\"\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    D = min(A)\n    for i in range(n):\n        A[i] = A[i] - D\n    if sum(A) % n == 0:\n        print(D)\n    else:\n        print(-1)\n    \"\"\"\n    # another way\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    if sum(A) % n == 0: # if sum(A) can be divided by n\n        print(A[0])\n    else: # if sum(A) can not be divided by n\n        print(-1) # print -1\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    m = min(A)\n    for i in range(n):\n        A[i] = A[i] - m\n    if sum(A) % n == 0:\n        print(m)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    D = min(A)\n    for i in range(n):\n        A[i] -= D\n    if sum(A) % n == 0:\n        print(D)\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    D = min(A)\n    for i in range(n):\n        A[i] = A[i] - D \n    if sum(A) % n == 0: \n        print(D) \n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n"]