["\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()][:n]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 2):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()]    \n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(1, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "import math\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        x = a[i] + a[j]\n        if x > a[-1]:\n            break\n        if x < a[-1]:\n            l = j + 1\n            r = n - 1\n            while l < r:\n                m = (l + r) // 2\n                if a[m] < x:\n                    l = m + 1\n                else:\n                    r = m\n            ans += l - j - 1\n        else:\n            ans += 1\n\nprint(ans // 3)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] // 2\n\nprint(ans)\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "# https://atcoder.jp/contests/abc152/tasks/abc152_a\n\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\nprint(ans)\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()] \n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "\n\nfrom sys import stdin\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list)+1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1], reverse=True)\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for skill, count in skill_counts:\n        if count <= n:\n            min_students += (n-count)\n            n = count\n        else:\n            min_students += count\n            break\n\n    print(min_students)\n\nmain()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().split()][:n]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1):\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts[::-1]:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "\n# test\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\nprint(ans)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\nprint(ans)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 1\n\nprint(ans)\n", "\n\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    skill_list = [int(x) for x in stdin.readline().strip().split()]\n    min_skill = min(skill_list)\n\n    # create a list of tuples of each skill and the number of students\n    # with that skill\n    skill_counts = []\n    for i in range(min_skill, max(skill_list) + 1): # range(1, max(skill_list) + 1)\n        skill_counts.append((i, skill_list.count(i)))\n\n    # sort the skill counts by the number of students with that skill\n    skill_counts.sort(key=lambda x: x[1])\n\n    # find the minimum number of students needed to form a team\n    # of each skill level\n    min_students = 0\n    for i, count in skill_counts:\n        if count <= n:\n            min_students += (n - count)\n            n = count\n        else:\n            min_students += n\n            break\n\n    print(min_students)\n\nmain()\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\n\n\n\n\nprint(ans)\n", "\nn = int(input())\na = list(map(int, input().split()))\nd = dict(zip(a, [a.count(i) for i in a]))\n\nans = 0\nfor i in d:\n    ans += d[i] - 2\n\nprint(ans)\n"]