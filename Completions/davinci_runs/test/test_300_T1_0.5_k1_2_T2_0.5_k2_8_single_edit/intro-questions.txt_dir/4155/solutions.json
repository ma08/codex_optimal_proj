["n = int(input())\nh = list(map(int, input().split()))\nres = 0\n\nwhile True:\n    if sum(h) == 0:\n        break\n\n    i = 0\n    while i < n:\n        if h[i] == 0:\n            i += 1\n        else:\n            res += 1\n            while i < n and h[i] > 0:\n                h[i] -= 1\n                i += 1\n\nprint(res)\n", "n = int(input())\nh = [int(i) for i in input().split()]\nans = h[0]\nfor i in range(1,n):\n    if h[i] > h[i-1]:\n        ans += h[i] - h[i-1]\nprint(ans)", "N = int(input())\nh = list(map(int, input().split()))\nh.append(0)\n\nt = 0\n\ndef Water(n):\n    nonlocal h\n    while h[n] != 0:\n        h[n] -= 1\n        n += 1\n        #print(h, t)\n\nfor i in range(N):\n    while h[i] != 0:\n        Water(i)\n        t += 1\n\nprint(t)", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    L = LI()\n    res = 0\n    \n    while True:\n        add = True\n        for i in range(N):\n            if L[i] >= 1:\n                L[i]-=1\n                if add:\n                    res+=1\n                    add = False\n            else:\n                add = True\n        if sum(L) == 0:\n            break\n    print(res)        \n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nL = list(map(int,input().split()))\nL = [0] +L\n\nnum = 0\nmin1 = 0\nfor i in range(n):\n    \n    if L[i] <= L[i+1]:\n        num += L[i+1]-L[i]\n    else:\n        min1 = L[i+1]\n\nprint(num)", "n = int(input())\nh = list(map(int, input().split()))\ncnt=0\nfor i in range(n):\n    while h[i] != 0:\n        cnt+=1\n        for j in range(i, n):\n            if h[j] != 0:\n                h[j] = h[j] - 1\n            elif h[j] == 0:\n                break\nprint(cnt)\n", "N=int(input())\nh=list(map(int,input().split()))\nans=0\nfor i in range(N-1):\n  if h[i]>h[i+1]:\n    ans+=h[i]-h[i+1]\nans+=h[-1]\nprint(ans)\n", "n = int(input())\nh = list(map(int, input().split()))\nhmax = max(h)\nans = 0\nf = False\n\nfor i in range(1, hmax+1):\n    for j in range(n):\n        if f and (h[j] < i):\n            ans += 1\n        f = h[j] >= i\n    if f:\n        ans += 1\n    f = False\n\nprint(ans)\n", "n=int(input())\nh=[0]+list(map(int,input().split()))+[0]\nma=0\nmi=float('inf')\nans=0\nfor i in range(n+1):\n  if h[i]<=h[i+1]:\n    ma=max(ma,h[i+1])\n    mi=min(mi,h[i])\n  else:\n    ans+=ma-mi\n    ma=h[i+1]\n    mi=h[i+1]\nprint(ans)", "n=int(input())\nH=[0]+list(map(int,input().split()))\nans=0\nfor i in range(n):\n  ans += max(0,H[i+1]-H[i])\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\nans = 0\nactive = 0\nfor i in range(n):\n    if active >= h[i]:\n        active = h[i]\n    else:\n        ans += h[i] - active\n        active = h[i]\nprint(ans)", "def readinput():\n    n=int(input())\n    h=list(map(int,input().split()))\n    return n,h\n\ndef main(n,h):\n    count=0\n    hmax=max(h)\n    for i in range(hmax):\n        j=0\n        mizuyari=False\n        for j in range(n):\n            if h[j]>0:\n                if mizuyari==False:\n                    mizuyari=True\n                    count+=1\n                h[j]-=1\n            else:\n                mizuyari=False\n    return count\n\ndef __starting_point():\n    n,h=readinput()\n    ans=main(n,h)\n    print(ans)\n\n__starting_point()", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\n\nn = k()\nh = l()\n\nfor i in range(1,n):\n    if h[i-1]-h[i] > 0:\n        ans += h[i-1]-h[i]\n\nprint(ans+h[-1])\n\n\"\"\"\nn = k()\ns = v()\n\ndef check(n):\n    if \n\n#\u30b3\u30de\u30f3\u30c9\u306e\u7a2e\u985e\ncomand = [\"A\",\"B\",\"X\",\"Y\"]\np = list(itertools.permutations(comand,2))\nfor i in range(len(p)):\n    p[i] = \"\".join(p[i])\n\nfor i in \n\"\"\"", "import numpy as np\nN= int(input())\nh = list(map(int,input().split()))\ns=h[0]\nfor i in range(N-1):\n    if h[i]<=h[i+1]:\n        s=s+h[i+1]-h[i]\n        #print('+',i+1,s)\nprint(s)", "n = int(input())\nh = list(map(int, input().split())) \n\nans = 0\n\nfor i in range(max(h)):\n    if h[0] == 0:\n        zeroFlag = True\n        for j in range(0, n):\n            if h[j] == 0:\n                zeroFlag = True\n            if h[j] != 0 and zeroFlag == True:\n                ans += 1\n                zeroFlag = False\n            if h[j] > 0:\n                h[j] -= 1\n    else:\n        numFlag = True\n        for j in range(0, n):\n            if h[j] == 0:\n                numFlag = True\n            if h[j] != 0 and numFlag == True:\n                ans += 1\n                numFlag = False\n            if h[j] > 0:\n                h[j] -= 1\n\nprint(ans)", "N= int(input())\nH= list(map(int, input().split()))\n\nlowc = 0\n\nfor i in range(1, N):\n    if H[i - 1] > H[i]:\n        lowc += H[i - 1] - H[i]\n        \nprint(lowc + H[-1])", "# N\u304c\u3061\u3044\u3055\u3044\u306e\u3067\u611a\u76f4\u306b\u3084\u3063\u3066\u3082\u3044\u3044\u306d\nn = int(input())\nh = list(map(int, input().split()))\ns = sum(h)\ncount = 0\nwhile s > 0:\n    f = False\n    for i in range(n):\n        if f:\n            break\n        if h[i] == 0:\n            continue\n        for j in range(i, n):\n            if h[j] == 0:\n                f = True\n                break\n            h[j] -= 1\n            s -= 1\n        count += 1\n        break\nprint(count)", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(max(a)):\n    cnt = 1 if a[0] - i >= 1 else 0\n    for j in range(1, n):\n        if a[j-1] - i < 1 and a[j] - i >= 1:\n            cnt += 1\n    ans += cnt\nprint(ans)", "N=int(input())\n\nh=list(map(int,input().split()))\nsw=True\ntemp=0\nans=0\nfor i in range(N-1):\n    if sw==True:\n        if h[i]>h[i+1]:\n            ans+=h[i]-temp\n            sw=False\n    else:\n        if h[i]<h[i+1]:\n            temp=h[i]\n            sw=True\nif sw==True:\n    ans+=h[N-1]-temp\n\nprint(ans)\n", "#https://note.nkmk.me/python-gcd-lcm/\ndef f(myList):\n    if len(myList) == 0:\n        return 0\n    else:\n        #print(myList)\n        tmp = min(myList)\n        ans = tmp\n        for i in range(len(myList)):\n            myList[i] -= tmp\n        newList = []\n        for i in range(len(myList)):\n            pop_a = myList.pop()\n            if pop_a != 0:\n                newList.append(pop_a)\n            else:\n                ans += f(newList)\n                newList = []\n        ans += f(newList)\n        return ans \n\nn = int(input())\na = list(map(int,input().split()))\n\nprint((f(a)))\n", "n = int(input())\nh = list(map(int, input().split()))\n\nfor i in range(n):\n    ans = h[0]\n    for i in range(1, n):\n        if h[i] >= h[i - 1]:\n            ans += h[i] - h[i - 1]\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    while h[i] > 0:\n        h[i] -= 1 \n        cnt += 1\n        j = 1\n        while i + j < n:\n            if h[i + j] >= 1:\n                h[i + j] -= 1\n                j += 1\n            else:\n                break\nprint(cnt)", "n=int(input())\n*h,=map(int, input().split())\nimport numpy as np\nh=np.array(h)\n\ndef rec(hh):\n    if len(hh)==0:\n        return 0\n    if len(hh)==1:\n        return hh[0]\n    i=np.argmin(hh)\n    res=hh[i]\n    l=rec(hh[:i]-hh[i])\n    r=rec(hh[i+1:]-hh[i])\n    return res+l+r\nprint(rec(h))", "n = int(input())\nh = list(map(int,input().split()))\n\ncnt = 0\n\ndef hana(h) :\n    nonlocal cnt\n    if len(h) == 0 :\n        return\n    if len(h) == 1 :\n        cnt += h[0]\n        return\n    m = min(h)\n    cnt += m\n    h = [i - m for i in h ]\n    while 0 in h :\n        hana(h[:h.index(0)])\n        h = h[h.index(0) + 1 :]\n    hana(h)\n\nhana(h)\nprint(cnt)\n", "N = int(input())\nh = list(map(int,input().split()))\n\nh.append(0)\npre = True \nnext = True \ncnt = 0\nfor i in range(N):\n    if h[i+1]>h[i]:\n        next = True \n        if pre == False:\n            cnt -= h[i]\n    elif h[i+1]<h[i]:\n        next = False\n        if pre == True:\n            cnt += h[i]\n    else:\n        next = pre \n    pre = next \nprint(cnt)", "N = int(input())\nH = list(map(int,input().split()))\n\nV = sum(H)\nE = 0\n\nfor i in range(1,N):\n  E += min(H[i-1],H[i])\n  \nprint(V-E)", "from copy import deepcopy\nn = int(input())\nH = list(map(int, input().split()))\nans = 0\nwhile any(h != 0 for h in H):\n    X = list()\n    tmp = list()\n    for h in H:\n        if h != 0:\n            X.append(h)\n        else:\n            if X:\n                m = min(X)\n                tmp += list([y - m for y in X])\n                ans += m\n                X = list()\n            tmp+=[0,]\n    if X:\n        m = min(X)\n        tmp += list([y - m for y in X])\n        ans += m\n        X = list()\n    H = deepcopy(tmp)\nprint(ans)\n", "n = int(input())\nh = [0]+list(map(int,input().split()))\nans,temp = 0,-1\nwhile True:\n  for i in range(n+1):\n    if temp==0 and h[i]!=0:\n      ans += 1\n    temp = h[i]\n    h[i] = max(h[i]-1,0)\n  if all(v==0 for v in h):\n    break\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\nw = 0\na = True\n\nwhile a:\n    mizu = False\n    if sum(h) == 0:\n        a = False\n        break\n\n    w += 1\n    for i in range(n):\n        if h[i] != 0:\n            h[i] -= 1\n            mizu = True\n        else:\n            if mizu:\n                break \n\n\nprint(w)", "n=int(input())\nh=list(map(int,input().split()))\n\nc=h[0]\nfor i in range(1,n):\n    if h[i]-h[i-1]>=0:\n        c+=h[i]-h[i-1]\n\nprint(c)", "n = int(input())\nh = list(map(int, input().split()))\n\nans = 0\ndef solve(li_h):\n    l = 0\n    for i in li_h:\n        if(i==0):\n            l += 1\n        else:\n            break\n    r = l + 1\n    for i in li_h[l+1:]:\n        if(i==0):\n            break\n        r += 1\n    \n    for i in range(l, r):\n        li_h[i] -= 1\n    \n    return li_h\n\nwhile(sum(h)!=0):\n    h = solve(h)\n    ans += 1\n\nprint(ans)", "n = int(input())\nh = list(map(int,input().split()))\n\ncnt = 0\nfor hh in range(1,max(h)+1):\n  flg = False\n  for i in range(n):\n    if h[i] >= hh:\n      flg = True\n    else:\n      if flg:\n        flg = False\n        cnt += 1\n  if flg:\n    flg = False\n    cnt += 1      \nprint(cnt)", "def solve(L):\n    if not L:\n        return 0\n    if 0 not in L:\n        return min(L)+solve([l-min(L) for l in L])\n    tmp=0\n    l,p=0,False\n    for i in range(len(L)):\n        if L[i]==0:\n            if p:\n                p=False\n                tmp+=solve(L[l:i])\n                l=i+1\n            else:\n                l=i+1\n        else:\n            if not p:\n                p=True\n    return tmp+solve(L[l:])\n\nN=int(input())\nH=list(map(int,input().split()))\n\nprint((solve(H)))\n", "n=int(input())\na=list(map(int,input().split()))\n\nr=0\nb=[a]\nwhile True:\n    d=[]\n    for x in b:\n        m=min(x)\n        r+=m\n        d.append([i-m for i in x])\n\n    b=[]\n    for x in d:\n        t=[]\n        for y in range(len(x)):\n            if y==len(x)-1:\n                if x[y]!=0:\n                    t.append(x[y])\n                    b.append(t)\n                if x[y]==0 and x[y-1]!=0:b.append(t)\n            elif x[y]!=0:t.append(x[y])\n            elif x[y]==0:\n                if len(t)!=0:b.append(t)\n                t=[]\n\n    d=[]\n    for x in b:\n        if len(x)<=2:r+=max(x)\n        else:d.append(x)\n    if len(d)==0:print(r);return\n    b=d", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n  N = i_input()\n  H = i_list()\n  H.append(0)\n  ans = 0\n  for i in range(len(H) - 1):\n    if H[i] > H[i+1]:\n      ans += H[i] - H[i+1]\n  print(ans)\n\n\n\n\n \n \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nH = list(map(int, input().split()))\n\nactive = 0\nans = 0\n\nfor i in range(N):\n    if H[i] >= active:\n        ans += H[i] - active\n        active = H[i]\n    else:\n        active = H[i]\n        \nprint(ans)", "# author:  Taichicchi\n# created: 28.09.2020 00:14:38\n\nimport sys\n\nN = int(input())\nh = [0] + list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1, N + 1):\n    d = h[i] - h[i - 1]\n    ans += max(d, 0)\n\nprint(ans)\n", "N = int(input())\nh = list(map(int, input().split()))\nmax_ = 100*50\nh = [0] + h + [0]\ncnt = 0\nif max(h) == 0:\n    print((0))\n    return\nfor _ in range(max_):\n    for i in range(1, N+1):\n        if h[i] == 0 and h[i-1] != 0:\n            cnt += 1\n            break\n        if h[i] > 0:\n            h[i] -= 1\n            if h[i] == 0 and h[i+1] == 0:\n                cnt += 1\n                break\n        if i == N:\n            cnt += 1\n            break\n    if sum(h) == 0:\n        break\nprint(cnt)\n", "N = int(input())\nH = list(map(lambda x: -int(x), input().split())) + [0]\ncnt = 0\n\nfor i in range(N):\n  while H[i] < 0:\n    H[i] += 1\n    j = i+1\n    while H[j] < 0:\n      H[j] += 1\n      j += 1\n    cnt += 1\n\nprint(cnt)", "n=int(input())\nh=list(map(int,input().split()))\nans=h[-1]\nfor i in range(n-1):\n    if h[i]>h[i+1]:\n        ans+=h[i]-h[i+1]\nprint(ans)", "# N\u304c\u3061\u3044\u3055\u3044\u306e\u3067\u611a\u76f4\u306b\u3084\u3063\u3066\u3082\u3044\u3044\u306d\nn = int(input())\nh = list(map(int, input().split()))\ns = sum(h)\ncount = 0\nwhile s > 0:\n    for i in range(n):\n        if h[i] == 0:\n            continue\n        for j in range(i, n):\n            if h[j] == 0:\n                break\n            h[j] -= 1\n            s -= 1\n        count += 1\n        break\nprint(count)", "n = int(input())\nh = list(map(int,input().split()))\n\ncnt = 0\ngrow = True\nwhile grow:\n    inc = False\n    grow = False\n    for i in range(n):\n        if h[i] == 0:\n            inc = False\n        else:\n            h[i] -= 1\n            if not inc:\n                inc = True\n                grow = True\n                cnt += 1\nprint(cnt)\n\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, *H = list(map(int, read().split()))\n\n    ans = 0\n    while True:\n        changed = changed2 = False\n        for i in range(N):\n            if H[i] > 0:\n                H[i] -= 1\n                changed = True\n                changed2 = True\n            else:\n                if changed:\n                    ans += 1\n                    changed = False\n        if changed:\n            ans += 1\n        if not changed2:\n            break\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, hi):\n    ans = 0\n    for i in range(max(hi)):\n        flg = False\n        for n in range(N):\n            if hi[n] != 0:\n                if not flg:\n                    flg = True\n                    ans += 1\n                hi[n] -= 1\n            else:\n                flg = False\n    print(ans)\n\n\ndef __starting_point():\n    # S = input()\n    N = int(input())\n    # N, M = map(int, input().split())\n    hi = [int(i) for i in input().split()]\n    # Bi = [int(i) for i in input().split()]\n    # ABi = [[int(i) for i in input().split()] for _ in range(N)]\n    solve(N, hi)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "n = int(input())\nh = list(map(int,input().split()))\ntmp = [0 for i in range(n)]\nans = 0\nright = 0\nleft = n-1\n\nwhile tmp != h:\n    for i in range(n):\n        if tmp[i] != h[i]:\n            right = i\n            left = i\n            break\n    for i in range(i+1,n):\n        if tmp[i] == h[i]:\n            left = i-1\n            break\n        elif i == n-1 and tmp[n-1] != h[n-1]:\n            left = n-1\n            break\n    for i in range(right,left+1):\n        tmp[i] += 1\n    ans += 1\n#    print(right,left,ans)\n#    print(tmp)\n\nprint(ans)\n", "N = int(input())\nH = list(map(int, input().split()))\n\nres = H[0]\n\nfor i in range(1, N):\n    if H[i] >= H[i - 1]:\n        res += H[i] - H[i - 1]\n\nprint(res)", "n = int(input())\nh = list(map(int,input().split()))\nmaxh = max(h)\ncnt = 0\nfor i in range(maxh,0,-1):\n    if h[0]>=i:\n        cnt += 1\n    for j in range(1,n):\n        if h[j]>=i and h[j-1]<i:\n            cnt += 1\nprint(cnt)  ", "n = int(input())\nal = list(map(int, input().split()))\n\nres=0\ntemp = 0\nfor i in range(n):\n    if al[i] >=temp:\n        res += al[i]-temp\n        temp = al[i]\n    else:\n        temp = al[i]\n\nprint(res)", "n=int(input())\nh=[int(i) for i in input().split()]\n\n\n\nans=h[0]\n\nclimb=1\nfor i in range(1,n):\n    if h[i]-h[i-1]>=0:\n        ans+=h[i]-h[i-1]\nprint(ans)\n\n", "N = int(input())\nh = list(map(int, input().split()))\n\nl = 0\nflag = 1\ncount = 0\nwhile l < N-1:\n  if h[l] == 0:\n    l += 1\n  elif h[l] != 0:\n    r = l+1\n    while h[r] != 0:\n      r += 1\n      if r == N:\n        break\n    for k in range(l,r):\n      h[k] -= 1\n    count += 1\nprint(count+h[N-1])", "def divide_and_conuer(ls):\n    mi=ls.index(min(ls))\n    res=ls[mi]\n    if(ls[mi+1:len(ls)]!=list()):\n        res+=divide_and_conuer(ls[mi+1:len(ls)])-ls[mi]\n    if(ls[0:mi]!=list()):\n        res+=divide_and_conuer(ls[0:mi])-ls[mi]\n    return res\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((divide_and_conuer(a)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nh = list(map(int, input().split()))\n\ndef dfs(a):\n  if not a:\n    return 0\n  cnt = 0\n  while True:\n    if 0 in a:\n      z = [i for i,x in enumerate(a) if x==0]\n      cnt += dfs(a[:z[0]])\n      for i in range(1,len(z)):\n        cnt += dfs(a[z[i-1]+1:z[i]])\n      cnt += dfs(a[z[-1]+1:])\n      return cnt\n    else:\n      a = [x-1 for x in a]\n      cnt += 1\n\nprint(dfs(h))", "n = int(input())\nh = list(map(int, input().split()))\nres = 0\nwhile True:\n    if max(h) == 0:\n        break\n    else :\n        i = 0\n        while i < n :\n            if h[i] == 0 :\n                i += 1\n            else :\n                res += 1\n                while i < n and h[i] > 0 :\n                    h[i] -= 1\n                    i += 1\nprint(res)", "N = int(input())\nh = list(map(int,input().split()))\nans = h[0]\nfor i in range(1,N):\n    if h[i] > h[i-1]:\n        ans += h[i] - h[i-1]\nprint(ans)", "N=int(input())\nh=list(map(int,input().split()))\ns=0\nwhile h!=[0]*N:\n    c=0\n    for i in range(N-1):\n        if h[i]!=0 and h[i+1]==0:\n            c+=1\n    if h[N-1]!=0:\n        c+=1\n    for i in range(N):\n        if h[i]!=0:\n            h[i]-=1\n    s+=c\nprint(s)", "n = int(input())\nh = list(map(int,input().split(\" \")))\ncnt = 0\nminNum = 0\ntmp = 0\n\nwhile True:\n    for i in range(h.count(0)):\n        if h.index(0) == 0: \n            h.pop(0)\n        elif h.index(0) > 0:\n            tmp = h.index(0)\n            break\n    else:\n        tmp = len(h)\n\n    if not h:\n        break\n\n    if tmp == 1:\n        cnt += h[0]\n        h.pop(0)\n    else:\n        minNum = min(h[0:tmp])\n        cnt += minNum\n        for j in range(tmp):\n            h[j] -= minNum\n\nprint(cnt)", "a = int(input())\nb = list(map(int,input().split()))\nb.append(0)\nans = 0\nwhile not max(b) == 0:\n  for i in range(len(b)):\n    if b[i] > 0 and b[i+1] <= 0:\n      ans += 1\n  b = list([x-1 for x in b])\nprint(ans)\n\n", "N = int(input())\nh = list(map(int,input().split()))\nans = h[0]\nfor i in range(1,N):\n    if h[i] > h[i-1]:\n        ans += h[i] - h[i-1]\nprint(ans)", "N = int(input())\nH = list(map(int, input().split()))\nans = H[0]\nfor i in range(N-1):\n    if H[i] < H[i+1]:\n        ans += H[i+1]-H[i]\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\nH = [h]\nans = 0\nwhile len(H) > 0:\n  for e in H:\n    if len(e) == 0:\n      H.remove(e)\n    elif 0 in e:\n      a = e[:e.index(0)]\n      b = e[e.index(0) + 1:]\n      H.append(a)\n      H.append(b)\n      H.remove(e)\n      if [] in H:\n        H.remove([])\n        if len(H) == 0:\n          break\n    else:\n      ans += min(e)\n      c = [e[j] - min(e) for j in range(len(e))]\n      a = c[:c.index(0)]\n      b = c[c.index(0) + 1:]\n      H.append(a)\n      H.append(b)\n      H.remove(e)\n      if [] in H:\n        H.remove([])\n        if len(H) == 0:\n          break\n    if [] in H:\n      H.remove([])\n      if len(H) == 0:\n        break\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\ns = 0\n\nfor i in range(max(h)+1):\n    flag = False\n    for j in range(n):\n        if flag and h[j] == 0:\n            s += 1\n            flag = False\n        elif not flag and h[j] > 0:\n            flag = True\n\n        h[j] = max(h[j]-1, 0)\n    if flag:\n        s += 1\n\nprint(s)\n\n", "n = int(input())\nh = list(map(int,input().split()))\nh.append(101)\nans = 0\nstart = 0\ni = 0\nwhile sum(h[:n])!=0:\n    if h[i]!=0:\n        h[i] -= 1\n    if h[i]==0:\n        start = i+1    \n    if h[i]>=h[i+1] or i==n-1:\n        ans += 1\n        i = start\n        continue\n    i += 1\nprint(ans)", "import numpy as np\n\nN = int(input().rstrip())\nh = [int(i) for i in input().rstrip().split()]\n\ncheck = [0]*N\nheight = [0]*N\ncount = 0\n\nwhile True:\n  check = [1 if h[i] == height[i] else 0 for i in range(N)]\n  if check.count(1) == N:\n    break\n  count += 1\n  for i in range(N):\n    if check[i] == 0:\n      height[i] += 1\n      if i<N-1 and check[i+1] == 1:\n        break\n  #print(height)\n  \n  \nprint(count)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Sep 15 00:43:39 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nH = [int(x) for x in input().split()]\n\nans = 0\nfor i in range(max(H)):\n    count = 0\n    flag = False\n    for j in range(N):\n        if i < H[j]:\n            if flag == False:\n                count += 1\n            flag = True\n        else:\n            flag = False\n    ans += count\nprint(ans)", "n = int(input())\nh = [0] + list(map(int, input().split())) + [0]\n\ncnt = 0\nwhile True:\n    zero_ind = []\n    for i in range(n+2):\n        if h[i] == 0:\n            zero_ind.append(i)\n\n    start, end = [], []\n    for i in range(len(zero_ind)-1):\n        if zero_ind[i+1] - zero_ind[i] > 1:\n            start.append(zero_ind[i]+1)\n            end.append(zero_ind[i+1])\n\n    for s, e in zip(start, end):\n        for i in range(s, e):\n            h[i] -= 1\n        cnt += 1\n\n    if h.count(0) == n+2:\n        break\nprint(cnt)", "n = int(input())\nheights = list(map(int, input().split()))\n\ndef solve(heights, beg, end) -> int:\n    if beg >= end: return 0\n    try:\n        idx = beg + heights[beg:end].index(0)\n        return  solve(heights, beg, idx) + solve(heights, idx+1, end)\n    except ValueError:\n        pass\n    \n    minh = min(heights[beg:end])\n    for i in range(beg, end):\n        heights[i] -= minh\n    return minh + solve(heights, beg, end)\n\ncnt = solve(heights, 0, len(heights))\nprint(cnt)", "N=int(input())\n\nh=list(map(int,input().split()))\nsw=True\ntemp=0\nans=0\nfor i in range(N-1):\n    if sw==True:\n        if h[i]>h[i+1]:\n            ans+=h[i]-temp\n            sw=False\n    else:\n        if h[i]<h[i+1]:\n            temp=h[i]\n            sw=True\nif sw==True:\n    ans+=h[N-1]-temp\n\nprint(ans)\n", "n = int(input())\nhh = list(map(int, input().split()))\ncnt = 0\n\nwhile hh.count(0) != n:\n  a = [i for i, x in enumerate(hh) if x == 0]\n  \n  if a != []:\n    for i in range(len(a)-1):\n      if a[i]+1 != a[i+1]:\n        for j in range(a[i]+1 , a[i+1]):               \n          hh[j] -= 1\n        cnt += 1\n        \n    if a[0] != 0:       \n      for j in range(a[0]):\n        hh[j] -= 1\n      cnt +=1\n    \n    if a[-1] != n-1:\n      for j in range(a[-1]+1, n):      \n        hh[j] -= 1\n      cnt += 1\n        \n  else:\n    for i in range(n):\n      hh[i] -= 1\n    cnt += 1\n             \nprint(cnt)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nn = ni()\nh = na()\nans = h[0]\nfor i in range(1,n):\n  ans += max(0, h[i]-h[i-1])\nprint(ans)", "def dfs(left,right):\n    if right-left==1:\n        return h[left]\n    elif right-left<=0:\n        return 0\n    else:\n        ret=min(h[left:right])\n        k=0\n        for i in range(left,right):\n            h[i]-=ret\n            if h[i]==0:\n                k=i\n        ret+=dfs(left,k)\n        ret+=dfs(k+1,right)\n        return ret\n\nN=int(input())\nh=list(map(int,input().split()))\n\nprint((dfs(0,N)))\n", "n = int(input())\nh = [0] + list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    s = h[i+1] - h[i]\n    if s > 0:\n        ans += s\nprint(ans)", "n=int(input())\nh=list(map(int,input().split()))\n\nresult = 0\nwhile True:\n  if max(h) == 0:\n    break\n\n  i = 0\n  while i < n:\n    if h[i] <= 0:\n      i += 1\n    else:\n      result += 1\n      while i < n and h[i] > 0:\n        h[i] -= 1\n        i += 1\nprint(result)", "n = int(input())\nh = list(map(int, input().split()))\n\ncnt = 0\n\na = 0\nfor i in range(n-1):\n  if h[i+1] < h[i]:\n    cnt += h[i]-a\n    a = h[i+1]\ncnt += h[-1]-a\nprint (cnt)\n", "N = int(input())\nH = list(map(int, input().split()))\nans = H[0]\nfor i in range(N-1):\n    if H[i] < H[i+1]:\n        ans += H[i+1]-H[i]\nprint(ans)\n", "n = int(input())\nhs =list(map(int, input().split()))\n\nans = hs[-1]\nfor i in range(1,n):\n    if hs[i] < hs[i-1]:\n        ans += hs[i-1] -hs[i]\n    else:\n        continue\n        \nprint(ans)", "from sys import stdin\nfrom numpy import argmin\n\nn = int(stdin.readline().strip())\nh_lst = [int(x) for x in stdin.readline().split()]\ncnt = 0\n\ndef glow(lst, start_pos):\n  nonlocal cnt\n  if len(lst) == 0:\n    return -1\n  elif len(lst) == 1:\n    cnt += lst[0] - start_pos\n    return -1\n  else:\n    pos = min(lst)\n    cnt += pos - start_pos\n    id_ = argmin(lst)\n    glow(lst[:id_], pos)\n    glow(lst[id_+1:], pos)\n    \nglow(h_lst, 0)\nprint(cnt)\n", "def main():\n    n = int(input())\n    h = list(map(int,input().split()))\n    maxh = max(h)\n    cnt = 0\n    for i in range(maxh,0,-1):\n        if h[0]>=i:\n            cnt += 1\n        for j in range(1,n):\n            if h[j]>=i and h[j-1]<i:\n                cnt += 1\n    print(cnt)\nmain()", "N=int(input())\n*H,=map(int,input().split())\nL=len(H)\n\ncnt=0\nprv=0\n\nfor i in range(N):\n    if  prv < H[i]:\n        cnt+=H[i]-prv\n    prv=H[i]\nprint(cnt)", "N=int(input())\nH=list(map(int, input().split()))\n\nnow=0\nans=0\n\nfor h in H:\n\tif now<h:\n\t\tans+=h-now\n\tnow=h\n\nprint(ans)", "import sys\nimport math\nsys.setrecursionlimit(500000)\nINF = float('inf')\n\ndef solve(h, water):\n    left = 0\n    while left < len(h) - 1 and h[left] == 0:\n        left += 1\n    right = left\n    while right < len(h) and h[right] != 0:\n        right += 1\n\n    if left < right:\n        h[left:right] = [i - 1 for i in h[left:right]]\n    elif left == right and h[left] > 0:\n        h[left] = h[left] - 1\n    else:\n        return water\n        \n    water = solve(h, water + 1)\n    return water\n\ndef main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    return solve(h, 0)\n\ndef __starting_point():\n    print((main()))\n\n__starting_point()", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip.split())\ndef main():\n    n = I()\n    h = LI()\n    ok = 0\n    ng = 0\n    ans = 0\n\n    for i,x in enumerate(h):\n        if x>0:\n            ok = i\n            break\n    else:\n        ok = n\n\n    while ok != n:\n        for i,x in enumerate(h[ok+1:]):\n            if x == 0:\n                ng = ok + 1 + i\n                break\n        else:\n            ng = n\n        # print(ok,ng)\n        sub = [0]*ok + [1]*(ng-ok) + [0]*(n-ng)\n\n        for i in range(n):\n            h[i] -= sub[i]\n        # print(h)\n        for i,x in enumerate(h):\n            if x>0:\n                ok = i\n                break\n            else:\n                ok = n\n        ans += 1\n\n    print(ans)\nmain()", "n = int(input())\nh = list(map(int, input().split()))\ncnt = 0\nstatus = False\nfor i in range(100):\n    for j in range(n):\n        if h[j] > 0 and status == True:\n            h[j] -= 1\n        elif h[j] > 0:\n            cnt += 1\n            h[j] -= 1\n            status = True\n        else:\n            status = False\n\n        if j == n - 1:\n            status = False\nprint(cnt)", "n = int(input())\nh = list(map(int, input().split()))\n\nflag = False\nans = 0\nwhile not flag:\n  for i in range(n):\n    if flag:\n      if h[i] != 0: h[i] -= 1\n      else: break\n    elif not flag and h[i] != 0: \n      flag = True\n      h[i] -= 1\n      ans += 1\n  if not flag: break\n  flag = False\nprint(ans)  ", "N = int(input())\nh = list(map(int,input().split()))\nans = h[0]\nbottom = 0\nfor i in range(0,len(h)-1):\n    if h[i] <= h[i+1]:\n        ans += h[i+1] - h[i]\n    else:\n        continue\n\nprint(ans)", "n = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nactive = 0\n\nfor i in range(n):\n    if active >= h[i]:\n        active = h[i]\n        #\u533a\u9593\u306e\u6700\u5c0f\u5024\u3092\u5de6\u7aef\u306b\u66f4\u65b0\n    else:\n        ans += h[i] - active\n        #\u898b\u3066\u304d\u305f\u5024\u3068\u73fe\u5728\u5024\uff08\u6700\u5927\uff09\u3068\u306e\u5dee\u3092\u6c42\u3081\u308b\n        active = h[i]\n        #active\u3092\u73fe\u5728\u306e\u5024\u306b\u66f4\u65b0\n\nprint(ans)", "\nurl = \"https://atcoder.jp//contests/abc116/tasks/abc116_c\"\n\ndef main():\n    input()\n    h = list(map(int, input().split()))\n    h.append(0)\n    count = 0\n    def start_end(h):\n        s_e = [-1,-1]\n        for i in range(len(h)):\n            if h[i] != 0 and s_e[0] == -1:\n                s_e[0] = i\n            elif h[i] == 0 and s_e[0] != -1:\n                s_e[1] = i\n                break\n        return s_e\n    while True:\n        s_e = start_end(h)\n        if s_e[0] == -1 and s_e[1] == -1:\n            print(count)\n            return\n        min_h = min(h[s_e[0]:s_e[1]])\n        for i in range(s_e[0], s_e[1]):\n            h[i] -= min_h\n        count += min_h\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\nb=[0 for _ in range(n)]\n\nans=0\n\nwhile a!=b:\n  ch=0\n  for i in range(n):\n    if b[i]+1<=a[i]:\n      b[i]+=1\n      ch+=1\n    elif b[i]+1>a[i] and ch>0:\n      ch=0\n      ans+=1\n      \n    if ch>0 and i==n-1:\n      ans+=1\n      \nprint(ans)\n", "n=int(input())\nh=list(map(int, input().split()))\nans=0\nnum=0\nfor i in range(n):\n  if num<h[i]:\n    ans+=h[i]-num\n  num=h[i]\nprint(ans)", "n=int(input())\nh=list(map(int,input().split()))\nres=0\nwhile True:\n  if max(h)==0:\n    break\n\n  else:\n    i=0\n    while i<n:\n      if h[i]==0:\n        i+=1\n\n      else:\n        res+=1\n        while i<n and h[i]>0:\n          h[i]-=1\n          i+=1\n\n\nprint(res)\n\n    \n", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n = ini()\n    H = inl()\n\n    def calc(l, r, b):\n        if l >= r:\n            return 0\n        mh = min(H[l:r])\n        # debug(H[l:r], mh)\n        if mh < b:\n            # debug(mh, b, l, r)\n            return 0\n        res = mh - b\n        i = l\n        while i < r:\n            if H[i] == mh:\n                res += calc(l, i, mh)\n                l = i + 1\n            i += 1\n        res += calc(l, r, mh)\n        return res\n\n    return calc(0, n, 0)\n\n\nprint(solve())\n", "N = int(input())\nh = [int(i) for i in input().split()]\nans = 0\ncount = 0\n\n\nwhile h != [0] * N:\n    f = False\n    count = 0\n    for i in range(N):\n        if h[i] != 0 and f == False:\n            f = True\n            count += 1\n        if h[i] == 0 and f == True:\n            f = False\n            \n    #print(h, count)\n    ans += count\n    for i in range(N):\n        h[i] = max(h[i]-1, 0)\n    \nprint(ans)", "n = int(input())\nh = [0] + list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if h[i + 1] > h[i]:\n        cnt += h[i+1] - h[i]\nprint(cnt)", "N = int(input())\nh = list(map(int, input().split()))\n\nl = 0\nflag = 1\ncount = 0\nwhile l < N:\n  while h[l] == 0:\n    l += 1\n    if l == N:\n      flag = 0\n      break\n  if flag == 1:\n    if l == N-1:\n      r = N-1\n    else:\n      r = l+1\n      while h[r] != 0:\n        r += 1\n        if r == N:\n          break\n      r -= 1\n    for k in range(l,r+1):\n      h[k] -= 1\n    count += 1\n    #print(h)\n  elif flag == 0:\n    break\nprint(count)\n", "n = int(input())\nL = list(map(int,input().split()))\nL = [0] +L\n\nnum = 0\nfor i in range(n):\n    \n    if L[i] <= L[i+1]:\n        num += L[i+1]-L[i]\n\nprint(num)", "n = int(input())\nh = list(map(int, input().split()))\nh.append(0)\n\ncount = 0\n\nwhile h != [0]*(n+1):\n    for i in range(len(h)):\n        if h[i] != 0:\n            break\n\n    for j in range(i, len(h)+1):\n        if h[j] == 0:\n            break\n\n    for x in range(i, j):\n        h[x] -= 1\n\n    count += 1\n\nprint(count)\n", "N = int(input())\nH = list(map(int,input().split()))\nH.insert(0,0)\nres = 0\nfor i in range(1,N+1):\n    if (H[i] - H[i-1]) > 0:\n        res += (H[i] - H[i-1])\nprint(res)", "N=int(input())\n*H,=map(int,input().split())\nL=len(H)\n\nans=0\nactive=0\n\nfor i in range(N):\n    if  H[i]<=active: # \u4f4e\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\n        active=H[i]\n    else: # \u540c\u3058\u304b\u305d\u308c\u4ee5\u4e0a\n        ans+=H[i]-active\n        active=H[i]\nprint(ans)"]