["\nn = int(input())\na = [int(x) for x in input().split()]  # a = list(map(int, input().split()))\n\n\ndef remove_duplicates(a):  # a = list(set(a))\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = sorted(list(dict.fromkeys(nums)))\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b \n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(' '.join(map(str, nums)))\n\nmain()\n", "#n = int(input())\n#a = [int(x) for x in input().split()]\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = list(set(a))\n    return sorted(b)\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums).keys())\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n\nprint(len(set(a)))\nprint(*set(a))\n", "\n\nn = int(input())\na = [float(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b), *b)\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) #magic\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "#\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(input())\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "\n\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\n\nmain()\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n"]