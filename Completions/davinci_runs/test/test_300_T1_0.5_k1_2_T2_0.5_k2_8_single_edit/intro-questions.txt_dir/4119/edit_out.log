2022-04-19 21:19:21.719732 num operations 1
2022-04-19 21:19:21.719742 size on input set 1
2022-04-19 21:19:21.719899 using api key gabby
2022-04-19 21:19:45.892657 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_list = list(map(int, input().split()))\n\n    x_list.sort()\n    min_x = x_list[0]\n    max_x = x_list[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_list):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_list)\n    count_list[0] = 1\n    for i in range(1, len(x_list)):\n        if x_list[i] == x_list[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_list)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for _ in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a18\u9332\n    # \u4f8b\u3048\u3070\u3001\u6570\u5217\u304c[1, 2, 3, 5, 7, 8, 8, 10]\u3067\u3042\u308c\u3070\u3001\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # \u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n    move_count = 0\n    for i in range(n):\n        # \u6570\u5217\u306b\u304a\u3051\u308b\u5404\u6570\u5024\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\n        pos = position_dict[min_x + i]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u8a08\u7b97\n        move_count += move_list[pos]\n\n        # \u5404\u6570\u5024\u306b\u304a\u3051\u308b\u79fb\u52d5\u56de\u6570\u3092\u66f4\u65b0\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650403161,
  "object": "edit"
}
2022-04-19 21:19:45.893156 fix syntax errors 8 ['\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_list = list(map(int, input().split()))\n\n    x_list.sort()\n    min_x = x_list[0]\n    max_x = x_list[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_list):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_list)\n    count_list[0] = 1\n    for i in range(1, len(x_list)):\n        if x_list[i] == x_list[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_list)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for _ in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    x_s = list(map(int, input().split()))\n\n    x_s.sort()\n    min_x = x_s[0]\n    max_x = x_s[-1]\n\n    # 数列における各数値の位置を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # position_dict[1] = 0\n    # position_dict[2] = 1\n    # position_dict[3] = 2\n    # position_dict[5] = 3\n    # position_dict[7] = 4\n    # position_dict[8] = 5\n    # position_dict[10] = 7\n    position_dict = dict()\n    for i, x in enumerate(x_s):\n        position_dict[x] = i\n\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # count_list[0] = 1\n    # count_list[1] = 1\n    # count_list[2] = 1\n    # count_list[3] = 1\n    # count_list[4] = 1\n    # count_list[5] = 2\n    # count_list[7] = 1\n    count_list = [0] * len(x_s)\n    count_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            count_list[i] = count_list[i - 1] + 1\n        else:\n            count_list[i] = 1\n\n    # 各数値における移動回数を記録\n    # 例えば、数列が[1, 2, 3, 5, 7, 8, 8, 10]であれば、\n    # move_list[0] = 1\n    # move_list[1] = 0\n    # move_list[2] = 0\n    # move_list[3] = 0\n    # move_list[4] = 0\n    # move_list[5] = 1\n    # move_list[7] = 0\n    move_list = [0] * len(x_s)\n    move_list[0] = 1\n    for i in range(1, len(x_s)):\n        if x_s[i] == x_s[i - 1]:\n            move_list[i] = move_list[i - 1]\n        else:\n            move_list[i] = move_list[i - 1] + 1\n\n    # 移動回数を計算\n    move_count = 0\n    for i in range(n):\n        # 数列における各数値の位置を計算\n        pos = position_dict[min_x + i]\n\n        # 各数値における移動回数を計算\n        move_count += move_list[pos]\n\n        # 各数値における移動回数を更新\n        if count_list[pos] == 1:\n            move_list[pos] = 0\n        else:\n            move_list[pos] = move_list[pos] - 1\n\n    print(move_count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 21:19:45.893418 size on output set 5
2022-04-19 21:19:45.893434 num operations 1
2022-04-19 21:19:45.893440 size on input set 1
2022-04-19 21:19:45.893599 using api key derek
2022-04-19 21:19:45.928692 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-19 21:19:47.430593 using api key kouti
2022-04-19 21:20:01.273322 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n \nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\nn, m = map(int, sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int, sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left), abs(x[i] - right))\n    left = min(left, x[i])\n    right = max(right, x[i])\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\nx.sort()\nleft = x[0]\nright = x[-1]\nans = 0\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(\" \"))\nx = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n"
    }
  ],
  "created": 1650403187,
  "object": "edit"
}
2022-04-19 21:20:01.273671 fix syntax errors 8 ['\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n', '\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n', '\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n \nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n', '\nimport sys\n\nn, m = map(int, sys.stdin.readline().rstrip().split(" "))\nx = list(map(int, sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left), abs(x[i] - right))\n    left = min(left, x[i])\n    right = max(right, x[i])\n\nprint(ans)\n', '\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n', '\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\nx.sort()\nleft = x[0]\nright = x[-1]\nans = 0\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\nprint(ans)\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n', '\nimport sys\n\nn,m = map(int,sys.stdin.readline().rstrip().split(" "))\nx = list(map(int,sys.stdin.readline().rstrip().split(" ")))\n\nx.sort()\n\nleft = x[0]\nright = x[-1]\n\nans = 0\n\nfor i in range(m):\n    ans += min(abs(x[i] - left),abs(x[i] - right))\n    left = min(left,x[i])\n    right = max(right,x[i])\n\nprint(ans)\n']
2022-04-19 21:20:01.273717 size on output set 5
