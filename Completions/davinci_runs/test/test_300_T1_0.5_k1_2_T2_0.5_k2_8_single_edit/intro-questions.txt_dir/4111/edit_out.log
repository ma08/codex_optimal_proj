2022-04-19 21:14:29.608528 num operations 1
2022-04-19 21:14:29.608540 size on input set 1
2022-04-19 21:14:29.608687 using api key sunu
2022-04-19 21:14:58.185122 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nsys.setrecursionlimit(10**6)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\n# print(ans)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\n# print(ans)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\na = list(map(int,input().split()))\n\nodd, even = 0, 0\nfor i in range(n-1):\n    if i%2 == 1:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"
    }
  ],
  "created": 1650402869,
  "object": "edit"
}
2022-04-19 21:14:58.185447 fix syntax errors 8 ['\nimport sys\nsys.setrecursionlimit(10**6)\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# def find_good_candies(n, a):\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\n# print(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\n# odd, even = 0, 0\n# for i in range(n):\n#     if i%2 == 0:\n#         odd += a[i]\n#     else:\n#         even += a[i]\n\n# ans = 0\n# for i in range(n):\n#     if i%2 == 0:\n#         if odd - a[i] == even:\n#             ans += 1\n#     else:\n#         if odd == even - a[i]:\n#             ans += 1\n\n# print(ans)\n', '\nn = int(input())\na = list(map(int,input().split()))\n\nodd, even = 0, 0\nfor i in range(n-1):\n    if i%2 == 1:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a):\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n']
2022-04-19 21:14:58.185604 size on output set 5
2022-04-19 21:14:58.185617 num operations 1
2022-04-19 21:14:58.185624 size on input set 1
2022-04-19 21:14:58.185786 using api key sourya
2022-04-19 21:15:09.470556 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n"
    }
  ],
  "created": 1650402898,
  "object": "edit"
}
2022-04-19 21:15:09.470854 fix syntax errors 8 ['\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\nodds = 0\nevens = 0\ncount = 0\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n']
2022-04-19 21:15:09.470904 size on output set 2
