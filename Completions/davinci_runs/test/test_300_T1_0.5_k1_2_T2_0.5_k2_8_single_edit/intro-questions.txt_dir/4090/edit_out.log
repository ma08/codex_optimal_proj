2022-04-19 21:00:24.782088 num operations 1
2022-04-19 21:00:24.782098 size on input set 1
2022-04-19 21:00:24.782242 using api key kouti
2022-04-19 21:00:39.907730 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]  # \u5165\u529b\u3092\u5206\u5272\u3057\u3066\u30ea\u30b9\u30c8\u5316\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        return\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        exit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650402024,
  "object": "edit"
}
2022-04-19 21:00:39.908043 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]  # 入力を分割してリスト化\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        return\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        exit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 21:00:39.908194 size on output set 6
2022-04-19 21:00:39.908209 num operations 1
2022-04-19 21:00:39.908215 size on input set 1
2022-04-19 21:00:39.908371 using api key kouti
2022-04-19 21:00:55.395584 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n    if n == 0:\n        return 0\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 2,
      "text": "\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i + 1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef min_length(n, words) :\n    count = 1\n    for i in range(n-1) :\n        if words[i] != words[i+1] :\n            count += 1\n    return count\n\nif __name__ == \"__main__\" :\n    n = int(input())\n    words = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 7,
      "text": "\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    }
  ],
  "created": 1650402039,
  "object": "edit"
}
2022-04-19 21:00:55.395875 fix syntax errors 8 ['\n\n    if n == 0:\n        return 0\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i + 1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words) :\n    count = 1\n    for i in range(n-1) :\n        if words[i] != words[i+1] :\n            count += 1\n    return count\n\nif __name__ == "__main__" :\n    n = int(input())\n    words = input().split()\n\nprint(min_length(n, words))\n', '\ndef min_length(n, words):\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n']
2022-04-19 21:00:55.395916 size on output set 5
