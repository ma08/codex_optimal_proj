2022-04-19 21:12:00.004558 num operations 1
2022-04-19 21:12:00.004571 size on input set 1
2022-04-19 21:12:00.004757 using api key sunu
2022-04-19 21:12:16.108403 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()  # \u6a19\u6e96\u5165\u529b\u306e\u6700\u521d\u306e\u884c\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6539\u884c\u3092\u524a\u9664\nt = sys.stdin.readline().rstrip()  # \u6a19\u6e96\u5165\u529b\u306e2\u884c\u76ee\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6539\u884c\u3092\u524a\u9664\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef can_eq(s,t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s) # \u30ea\u30b9\u30c8\u306b\u5909\u63db\n    t_list = list(t) # \u30ea\u30b9\u30c8\u306b\u5909\u63db\n    s_list.sort() # \u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\n    t_list.sort() # \u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\n    return s_list == t_list # \u30bd\u30fc\u30c8\u3057\u305f\u3082\u306e\u304c\u7b49\u3057\u3044\u304b\u5224\u5b9a\n\ns = sys.stdin.readline().rstrip() # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217\u3092\u53d6\u5f97\nt = sys.stdin.readline().rstrip() # \u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217\u3092\u53d6\u5f97\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "import collections\n\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\ncounter = collections.Counter(a)\nans = 0\nfor k, v in counter.items():\n    if k > v:\n        ans += v\n    else:\n        ans += v - k\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "\n\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650402720,
  "object": "edit"
}
2022-04-19 21:12:16.108761 fix syntax errors 8 ["# coding: utf-8\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()  # 標準入力の最初の行を読み込み、改行を削除\nt = sys.stdin.readline().rstrip()  # 標準入力の2行目を読み込み、改行を削除\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq(s,t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s) # リストに変換\n    t_list = list(t) # リストに変換\n    s_list.sort() # リストをソート\n    t_list.sort() # リストをソート\n    return s_list == t_list # ソートしたものが等しいか判定\n\ns = sys.stdin.readline().rstrip() # 標準入力から文字列を取得\nt = sys.stdin.readline().rstrip() # 標準入力から文字列を取得\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", 'import collections\n\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\ncounter = collections.Counter(a)\nans = 0\nfor k, v in counter.items():\n    if k > v:\n        ans += v\n    else:\n        ans += v - k\n\nprint(ans)\n', "import sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\n\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_eq(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\nif can_eq(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-19 21:12:16.108838 size on output set 7
2022-04-19 21:12:16.108851 num operations 1
2022-04-19 21:12:16.108857 size on input set 1
2022-04-19 21:12:16.109011 using api key derek
2022-04-19 21:12:16.146016 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-19 21:12:17.647924 using api key jaanu
2022-04-19 21:12:29.756856 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n"
    },
    {
      "index": 3,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 4,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 5,
      "text": "\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 6,
      "text": "# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 7,
      "text": "\n\n# -----Answer----\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650402737,
  "object": "edit"
}
2022-04-19 21:12:29.757230 fix syntax errors 8 ["\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートして新しいリストを作成\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", '\n\n# -----Answer-----\n\ns = input()\nt = input()\n', "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t, reverse=True)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer----\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-19 21:12:29.757280 size on output set 7
