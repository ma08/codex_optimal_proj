2022-04-19 21:46:33.006828 num operations 1
2022-04-19 21:46:33.006839 size on input set 1
2022-04-19 21:46:33.006977 using api key sourya
2022-04-19 21:46:50.346304 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -*- coding: utf-8 -*-\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(reversed(res)))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(reversed(res)))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 3,
      "text": "import sys\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    sys.exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    sys.exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    exit()\n# n < 0\nn = abs(n)\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n#  file.py\n#  \n#  Copyright 2019  <pi@raspberrypi>\n#  \n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n#  \n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#  \n#  You should have received a copy of the GNU General Public License\n#  along with this program; if not, write to the Free Software\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n#  MA 02110-1301, USA.\n#  \n#  \n\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print(\"\".join(res[::-1]))\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append(\"1\")\n        n = (n // 2) + 1\n    else:\n        res.append(\"0\")\n        n //= 2\n\nprint(\"1\" + \"\".join(res[::-1]))\n"
    }
  ],
  "created": 1650404793,
  "object": "edit"
}
2022-04-19 21:46:50.346623 fix syntax errors 8 ['\n# -*- coding: utf-8 -*-\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(reversed(res)))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(reversed(res)))\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', 'import sys\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    sys.exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    sys.exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', '\nimport sys\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    exit()\n# n < 0\nn = abs(n)\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n#  file.py\n#  \n#  Copyright 2019  <pi@raspberrypi>\n#  \n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n#  \n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#  \n#  You should have received a copy of the GNU General Public License\n#  along with this program; if not, write to the Free Software\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n#  MA 02110-1301, USA.\n#  \n#  \n\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n    exit()\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n    exit()\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\n\nif n > 0:\n    res = []\n    while n > 0:\n        res.append(str(n % 2))\n        n //= 2\n    print("".join(res[::-1]))\n\n# n < 0\nn = abs(n)\n\nres = []\nwhile n > 0:\n    if n % 2 == 0:\n        res.append("1")\n        n = (n // 2) + 1\n    else:\n        res.append("0")\n        n //= 2\n\nprint("1" + "".join(res[::-1]))\n']
2022-04-19 21:46:50.346773 size on output set 8
2022-04-19 21:46:50.346785 num operations 1
2022-04-19 21:46:50.346791 size on input set 1
2022-04-19 21:46:50.346987 using api key sunu
2022-04-19 21:47:03.312758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nif n == 0:\n    print(0)\n    exit()\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\n\nif n == 0:\n    print(0)\n    exit()\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n"
    },
    {
      "index": 3,
      "text": "\nprint(2 ** int(input()))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\nprint(ans[::-1])\n"
    },
    {
      "index": 5,
      "text": "# coding: utf-8\n\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = \"\"\nwhile n != 0:\n    if n % -2 == 0:\n        ans += \"0\"\n        n = n // -2\n    else:\n        ans += \"1\"\n        n = n // -2 + 1\n\nprint(ans[::-1])\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = \"\"\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += \"0\"\n        n = n // (-2)\n    else:\n        ans += \"1\"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n"
    }
  ],
  "created": 1650404810,
  "object": "edit"
}
2022-04-19 21:47:03.313117 fix syntax errors 8 ['n = int(input())\n\nif n == 0:\n    print(0)\n    exit()\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n', 'n = int(input())\n\nif n == 0:\n    print(0)\n    exit()\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n', '\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n', '\nprint(2 ** int(input()))\n', '\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\nprint(ans[::-1])\n', '# coding: utf-8\n\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = ""\nwhile n != 0:\n    if n % -2 == 0:\n        ans += "0"\n        n = n // -2\n    else:\n        ans += "1"\n        n = n // -2 + 1\n\nprint(ans[::-1])\n', '\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n', '\nn = int(input())\n\nif n == 0:\n    print(0)\n    exit()\n\nans = ""\nwhile n != 0:\n    if n % (-2) == 0:\n        ans += "0"\n        n = n // (-2)\n    else:\n        ans += "1"\n        n = n // (-2) + 1\n\nprint(ans[::-1])\n']
2022-04-19 21:47:03.313175 size on output set 5
