["\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))  # enumerate adds index to each element\n    a = sorted(a, key=lambda x: x[1])  # sort by second element\n    a = [i[0] for i in a]  # get first elements\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "import os\n\n\ndef main():\n\n    f = open('file.txt', 'r')\n    print(f.read())\n    f.close()\n\n    f = open('file.txt', 'a')\n    f.write('\\nHello, world!')\n    f.close()\n\n    f = open('file.txt', 'r')\n    print(f.read())\n    f.close()\n\n    os.remove('file.txt')\n\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(enumerate(a, 1))\n    a = sorted(a, key=lambda x: x[1])\n    a = [i[0] for i in a]\n    print(*a, sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc116/tasks/abc116_b\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=' ')\n", "# coding: utf-8\n\nimport sys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nimport matplotlib.ticker as ticker\nimport matplotlib.font_manager as fm\n\n# \u30b0\u30e9\u30d5\u306b\u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u305f\u3081\u306e\u8a2d\u5b9a\nfp = fm.FontProperties(fname='/Library/Fonts/\u30d2\u30e9\u30ae\u30ce\u4e38\u30b4 ProN W4.ttc')\n\ndef draw_bar_chart(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.bar(data[0], data[1], width=0.5)\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_histogram(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.hist(data, bins=100, range=(0, 100))\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_scatter_plot(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.scatter(data[0], data[1])\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_contour_plot(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.contour(data[0], data[1], data[2])\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_heat_map(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.imshow(data, cmap=cm.jet)\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_3d_plot(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111, projection='3d')\n    ax.plot_surface(data[0], data[1], data[2], rstride=1, cstride=1, cmap=cm.jet)\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_heat_map_2(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.imshow(data, cmap=cm.jet)\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    plt.show()\n\ndef draw_bar_chart_2(data, title, xlabel, ylabel, x_min, x_max, y_min, y_max, xticks, yticks, save_name):\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.bar(data[0], data[1], width=0.5)\n    ax.set_title(title, fontproperties=fp)\n    ax.set_xlabel(xlabel, fontproperties=fp)\n    ax.set_ylabel(ylabel, fontproperties=fp)\n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_xticks(xticks)\n    ax.set_yticks(yticks)\n    plt.savefig(save_name, bbox_inches=\"tight\")\n    pl\n\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=' ')\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nN, M = map(int, input().split())\nA = [i for i in range(1, N+1)]\ncnt = 1\nprint('<', end='')\nwhile A:\n    if cnt % M == 0:\n        print(A.pop(0), end='')\n        if A:\n            print(', ', end='')\n    else:\n        A.append(A.pop(0))\n    cnt += 1\n\nprint('>')\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(n):\n    print(a.index(i+1)+1, end=' ')\n", "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i + 1) + 1, end=' ')\n", "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nfor i in range(N):\n    print(A.index(i+1)+1, end=' ')\n"]