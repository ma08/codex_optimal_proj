["# -*- coding: utf-8 -*-\n\nn = int(input())\na = [int(x) for x in input().split()]\n\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n# n = 6\n# a = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\nprint(count)\n", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\na.sort()\n\ncount = 1\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        count += 1\n\n\nprint(count)\n", "\n# n = int(input())\n# a = list(map(int, input().split()))\nn = 6\na = [1, 2, 4, 3, 3, 2]\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than the number of coins,\n#    then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n", "\ndef main():\n    print('Hello World!')\n    print('I am a programmer now.')\n    print('Here are the odd numbers 1 through 9: 1 3 5 7 9')\n    print('How much wood would a woodchuck chuck if a woodchuck could chuck wood?')\n    print('He would chuck', (2**8), 'cubic feet of wood.')\n    print('I am learning Python the Hard Way!')\n    print('Good-bye.')\n    \nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# 1. Find the minimum value of all coins\n# 2. Find the maximum value of all coins\n# 3. If the difference between the minimum and the maximum value is less than\n#    the number of coins, then the minimum number of pockets is 2.\n# 4. Otherwise, the minimum number of pockets is 1.\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a - min_a < n:\n    print(2)\nelse:\n    print(1)\n"]