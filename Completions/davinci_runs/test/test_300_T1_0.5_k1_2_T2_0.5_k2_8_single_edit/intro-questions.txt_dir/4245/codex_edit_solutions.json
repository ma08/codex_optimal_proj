["\n\nimport math\n\ndef minPowerStrips(A, B):\n    return int(math.ceil(B / A))\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    print(minPowerStrips(int(input()), int(input())))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Author: Shuailong\n# @Email: liangshuailong@gmail.com\n# @Date: 2019-05-23 10:45:05\n# @Last Modified by: Shuailong\n# @Last Modified time: 2019-05-23 10:45:05\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / float(A))\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A)\n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    A, B = map(int, input().split())\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(int((B // A) + (B % A != 0)))\n", "import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]