["\nN, K, Q = [int(i) for i in input().split()]\n\nplayers = [K - Q] * N\n\nfor i in range(Q):\n    A = int(input()) - 1\n    players[A] += 1\n    for j in range(N):\n        if j != A:\n            players[j] -= 1\n\nfor i in range(N):\n    if players[i] > 0\n        print('Yes')\n    else:\n        print('No')\n", "\n\nimport sys\nimport io\n\ninput_txt = \"\"\"\n\"\"\"\n\n#sys.stdin = io.StringIO(input_txt); sys.stdout = io.StringIO()\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= q:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "\n\nimport sys\nimport io\n\ninput_txt = \"\"\"\n3 1 3\n3\n3\n3\n\"\"\" \n\nsys.stdin = io.StringIO(input_txt); sys.stdout = io.StringIO()\n\nn,k,q = map(int, input().split())\n\narr = [k-q] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "\n\nimport sys\nimport io\n\ninput_txt = \"\"\"\n\"\"\"\n\nsys.stdin = io.StringIO(input_txt); sys.stdout = io.StringIO()\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= q:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "\nN, K, Q = [int(i) for i in input().split()]\n\nplayers = [K - Q] * N\n\nfor _ in range(Q):\n    A = int(input()) - 1\n    players[A] += 1\n    for j in range(N):\n        if j != A:\n            players[j] -= 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "\nN, K, Q = [int(i) for i in input().split()]\n\nplayers = [K-Q] * N\n\nfor i in range(Q):\n    A = int(input())\n    A -= 1\n    players[A] += 1\n    for j in range(N):\n        if j != A:\n            players[j] -= 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "\nN, K, Q = [int(i) for i in input().split()]\n\nplayers = [K-Q] * N\n\nfor i in range(Q):\n    A = int(input()) - 1\n    players[A] += 1\n    # for j in range(N):\n    #     if j != A:\n    #         players[j] -= 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "\nimport sys\nimport io\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "#\n# N, K, Q = [int(i) for i in input().split()]\n#\n# players = [K] * N\n#\n# for i in range(Q):\n#     A = int(input()) - 1\n#     players[A] += 1\n#     for j in range(N):\n#         if j != A:\n#             players[j] -= 1\n#\n# for i in range(N):\n#     if players[i] > 0:\n#         print('Yes')\n#     else:\n#         print('No')\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n", "\nN, K, Q = [int(i) for i in raw_input().split()]\n\nplayers = [K] * N\n\nfor i in range(Q):\n    A = int(raw_input()) - 1\n    players[A] += 1\n    for j in range(N):\n        if j != A:\n            players[j] -= 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print 'Yes'\n    else:\n        print 'No'\n", "\nN, K, Q = [int(i) for i in input().split()]  # N: Number of players, K: Initial number of points, Q: Number of queries\n\nplayers = [K] * N  # Initialize all players with K points\n\nfor i in range(Q):  # Execute Q queries\n    A = int(input()) - 1\n    players[A] += 1  # Add one point to player A\n    for j in range(N):\n        if j != A:\n            players[j] -= 1  # Subtract one point from all other players\n\nfor i in range(N):  # Print result\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "import sys\nimport io\n\ninput_txt = \"\"\"\n\"\"\"\n\n#sys.stdin = io.StringIO(input_txt); sys.stdout = io.StringIO()\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "\nimport os\n\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "N, K, Q = [int(i) for i in input().split()]\n\nplayers = [K] * N\n\nfor i in range(Q):\n    A = int(input()) - 1\n    players[A] += 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "N, K, Q = [int(i) for i in input().split()]\n\nplayers = [K - Q] * N\n\nfor i in range(Q):\n    A = int(input()) - 1\n    players[A] += 1\n\nfor i in range(N):\n    if players[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "\nn,k,q = map(int, input().split())\n\narr = [k] * n\nfor i in range(q):\n    a = int(input())\n    arr[a-1] -= 1\n\nfor i in range(n):\n    if arr[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n"]