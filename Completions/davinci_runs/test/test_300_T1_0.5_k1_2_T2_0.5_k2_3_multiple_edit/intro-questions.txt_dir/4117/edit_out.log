2022-04-24 17:19:57.919518 num operations 2
2022-04-24 17:19:57.919529 size on input set 1
2022-04-24 17:19:57.919647 using api key soukgp
2022-04-24 17:20:07.602184 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(N - K)\n"
    }
  ],
  "created": 1650820798,
  "object": "edit"
}
2022-04-24 17:20:07.602432 fix spelling mistakes 3 ['\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\n\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(N - K)\n']
2022-04-24 17:20:07.602460 size on output set 3
2022-04-24 17:20:07.602469 size on input set 3
2022-04-24 17:20:07.602586 using api key derek
2022-04-24 17:20:18.171058 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# coding: utf-8\n# https://atcoder.jp/contests/abc038/tasks/abc038_a\n\n\nS = input()\n\nif S[-1] == 'T':\n    print('YES')\nelse:\n    print('NO')\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n"
    }
  ],
  "created": 1650820807,
  "object": "edit"
}
2022-04-24 17:20:18.171251 fix syntax errors 3 ["\n# coding: utf-8\n# https://atcoder.jp/contests/abc038/tasks/abc038_a\n\n\nS = input()\n\nif S[-1] == 'T':\n    print('YES')\nelse:\n    print('NO')\n", '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\n\nprint(count)\n']
2022-04-24 17:20:18.171398 using api key sunu
2022-04-24 17:20:25.523477 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\n\n\n\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(min(h))\n"
    },
    {
      "index": 1,
      "text": "\nprint('Hello World')\n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(N - K + 1)\n"
    }
  ],
  "created": 1650820818,
  "object": "edit"
}
2022-04-24 17:20:25.523646 fix syntax errors 3 ['import sys\ninput = sys.stdin.readline\n\n\n\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(min(h))\n', "\nprint('Hello World')\n", '\nN, K = map(int, input().split())\nh = list(map(int, input().split()))\n\nprint(N - K + 1)\n']
2022-04-24 17:20:25.523777 using api key soukgp
2022-04-24 17:20:40.828315 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations, permutations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = permutations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1] and c[0] != c[1] and c[1] != c[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort(reverse=True)\n\nfor i in range(N-2):\n    if L[i] < L[i+1] + L[i+2]:\n        print(L[i] + L[i+1] + L[i+2])\n        break\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport math\nfrom itertools import combinations\nfrom itertools import permutations\n\ndef main():\n    S = input()\n    N = len(S)\n\n    if N == 2:\n        if S[0] == S[1]:\n            print(1)\n        else:\n            print(2)\n        exit()\n\n    if N == 3:\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[0]:\n            print(2)\n        else:\n            print(3)\n        exit()\n\n    for i in range(N - 3):\n        if S[i] == S[i + 1] or S[i] == S[i + 2] or S[i + 1] == S[i + 2]:\n            print(2)\n            exit()\n\n    print(3)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650820825,
  "object": "edit"
}
2022-04-24 17:20:40.828517 fix syntax errors 3 ['\nfrom itertools import combinations, permutations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = permutations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1] and c[0] != c[1] and c[1] != c[2]:\n        count += 1\n\nprint(count)\n', '\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort(reverse=True)\n\nfor i in range(N-2):\n    if L[i] < L[i+1] + L[i+2]:\n        print(L[i] + L[i+1] + L[i+2])\n        break\nelse:\n    print(0)\n', "import sys\nimport math\nfrom itertools import combinations\nfrom itertools import permutations\n\ndef main():\n    S = input()\n    N = len(S)\n\n    if N == 2:\n        if S[0] == S[1]:\n            print(1)\n        else:\n            print(2)\n        exit()\n\n    if N == 3:\n        if S[0] == S[1] or S[1] == S[2] or S[2] == S[0]:\n            print(2)\n        else:\n            print(3)\n        exit()\n\n    for i in range(N - 3):\n        if S[i] == S[i + 1] or S[i] == S[i + 2] or S[i + 1] == S[i + 2]:\n            print(2)\n            exit()\n\n    print(3)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 17:20:40.828549 size on output set 9
2022-04-24 17:20:40.828560 num operations 2
2022-04-24 17:20:40.828565 size on input set 1
2022-04-24 17:20:40.828679 using api key soukgp
2022-04-24 17:20:49.486451 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nprint(a)\n"
    },
    {
      "index": 2,
      "text": "\n#\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650820840,
  "object": "edit"
}
2022-04-24 17:20:49.486628 fix spelling mistakes 3 ['\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n', '\nn = int(input())\na = list(map(int, input().split()))\nprint(a)\n', '\n#\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-24 17:20:49.486733 size on output set 3
2022-04-24 17:20:49.486741 size on input set 3
2022-04-24 17:20:49.486858 using api key kouti
2022-04-24 17:20:57.475355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input(\"Enter a number:\"))\na = list(map(int, input(\"Enter a number:\").split()))\nprint(a[0])\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i])\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nprint(a[0])\n"
    }
  ],
  "created": 1650820849,
  "object": "edit"
}
2022-04-24 17:20:57.475524 fix syntax errors 3 ['\nn = int(input("Enter a number:"))\na = list(map(int, input("Enter a number:").split()))\nprint(a[0])\n', '#!/usr/bin/env python3\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n):\n    print(a[i])\n', '\nn = int(input())\na = list(map(int, input().split()))\nprint(a[0])\n']
2022-04-24 17:20:57.475664 using api key jaanu
2022-04-24 17:21:04.034967 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n#itertools\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650820857,
  "object": "edit"
}
2022-04-24 17:21:04.035138 fix syntax errors 3 ['from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\n#itertools\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-24 17:21:04.035277 using api key jaanu
2022-04-24 17:21:13.793523 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import permutations\n\nn = int(input())\nl = list(map(int, input().split()))\n\nl.sort()\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[1] + i[2] > i[0] and i[0] + i[2] > i[1]:\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1650820864,
  "object": "edit"
}
2022-04-24 17:21:13.793755 fix syntax errors 3 ['from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n', 'from itertools import permutations\n\nn = int(input())\nl = list(map(int, input().split()))\n\nl.sort()\n\nfor i in permutations(l, 3):\n    if i[0] + i[1] > i[2] and i[1] + i[2] > i[0] and i[0] + i[2] > i[1]:\n        print("YES")\n        exit(0)\nprint("NO")\n', 'from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n']
2022-04-24 17:21:13.793784 size on output set 7
