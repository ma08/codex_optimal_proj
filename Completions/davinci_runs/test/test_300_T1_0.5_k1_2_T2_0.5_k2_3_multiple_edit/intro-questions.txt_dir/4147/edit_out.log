2022-04-24 17:58:49.076140 num operations 2
2022-04-24 17:58:49.076150 size on input set 1
2022-04-24 17:58:49.076261 using api key jaanu
2022-04-24 17:59:04.082532 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1650823129,
  "object": "edit"
}
2022-04-24 17:59:04.082752 fix spelling mistakes 3 ["\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-24 17:59:04.082799 size on output set 3
2022-04-24 17:59:04.082806 size on input set 3
2022-04-24 17:59:04.082943 using api key derek
2022-04-24 17:59:21.380356 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n \nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))  # l[i]\u3092A\u306b\u52a0\u3048\u308b\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))  # l[i]\u3092B\u306b\u52a0\u3048\u308b\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))  # l[i]\u3092C\u306b\u52a0\u3048\u308b\n        if i+1 < len(l) and l[i+1] >= 2:  # l[i]\u3068l[i+1]\u30921\u306b\u3059\u308b\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)  # l[i]\u3068l[i+1]\u30921\u306b\u3059\u308b\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)  # l[i]\u3068l[i+1]\u3092l[i+2]\u306b\u3059\u308b\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1650823144,
  "object": "edit"
}
2022-04-24 17:59:21.380619 fix syntax errors 3 ["\n \nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if i+1 < len(l) and l[i+1] >= 2:\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))  # l[i]をAに加える\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))  # l[i]をBに加える\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))  # l[i]をCに加える\n        if i+1 < len(l) and l[i+1] >= 2:  # l[i]とl[i+1]を1にする\n            ans = min(ans, dfs(l[:i+1]+[l[i+1]-1], a, b, c, mp-1) + 1)  # l[i]とl[i+1]を1にする\n        if i+2 < len(l):\n            ans = min(ans, dfs(l[:i+2]+[l[i+1]+l[i+2]], a, b, c, mp-9) + 9)  # l[i]とl[i+1]をl[i+2]にする\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-24 17:59:21.380794 using api key jaanu
2022-04-24 17:59:42.131160 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l) and l[i] > 0:\n            l[i+1] += l[i] - 1\n            ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\nmp = 100\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    global mp\n    if (a == A and b == B and c == C):\n        return mp\n    if (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\nl.sort()\n\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and a == A and b == B and c == C:\n        return mp\n    if mp < 0 or a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-abs(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1650823161,
  "object": "edit"
}
2022-04-24 17:59:42.131368 fix syntax errors 3 ["\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l) and l[i] > 0:\n            l[i+1] += l[i] - 1\n            ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\nmp = 100\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    global mp\n    if (a == A and b == B and c == C):\n        return mp\n    if (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\nl.sort()\n\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and a == A and b == B and c == C:\n        return mp\n    if mp < 0 or a > A or b > B or c > C:\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-abs(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-24 17:59:42.131607 using api key derek
2022-04-24 17:59:57.181338 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nprint(sys.stdin.read())\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l) and l[i+1] + l[i] <= 10:\n            ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)  \n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"
    }
  ],
  "created": 1650823182,
  "object": "edit"
}
2022-04-24 17:59:57.181532 fix syntax errors 3 ['\nimport sys\n\nprint(sys.stdin.read())\n', "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l) and l[i+1] + l[i] <= 10:\n            ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, m):\n    if m >= 0 and (a == A and b == B and c == C):\n        return m\n    if m < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, m-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, m-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], m-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, m-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, m-9) + 9)  \n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]
2022-04-24 17:59:57.181570 size on output set 9
2022-04-24 17:59:57.181581 num operations 2
2022-04-24 17:59:57.181587 size on input set 1
2022-04-24 17:59:57.181775 using api key jaanu
2022-04-24 18:00:14.085767 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 1:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] > 2:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1650823197,
  "object": "edit"
}
2022-04-24 18:00:14.085955 fix spelling mistakes 3 ["\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 1:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] > 2:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-24 18:00:14.086070 size on output set 3
2022-04-24 18:00:14.086078 size on input set 3
2022-04-24 18:00:14.086212 using api key derek
2022-04-24 18:00:39.250469 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# ABC081A\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 1:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] > 2:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n\n# ABC087B\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\nres = 0\nfor a in range(A + 1):\n    for b in range(B + 1):\n        for c in range(C + 1):\n            if a * 500 + b * 100 + c * 50 == X:\n                res += 1\nprint(res)\n\n# ABC087C\nn = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    res = max(res, sum(a1[:i + 1]) + sum(a2[i:]))\nprint(res)\n\n# ABC088B\nN = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nalice = sum(a[::2])\nbob = sum(a[1::2])\nprint(alice - bob)\n\n# ABC085B\nN = int(input())\nd = [int(input()) for _ in range(N)]\nprint(len(set(d)))\n\n# ABC085C\nN, Y = map(int, input().split())\n\nfor x in range(N + 1):\n    for y in range(N + 1):\n        z = N - x - y\n        if z < 0:\n            continue\n        if 10000 * x + 5000 * y + 1000 * z == Y:\n            print(x, y, z)\n            exit()\nprint(-1, -1, -1)\n\n# ABC086C\nN = int(input())\nt = [0]\nx = [0]\ny = [0]\nfor _ in range(N):\n    ti, xi, yi = map(int, input().split())\n    t.append(ti)\n    x.append(xi)\n    y.append(yi)\n\nfor i in range(N):\n    dt = t[i + 1] - t[i]\n    dist = abs(x[i + 1] - x[i]) + abs(y[i + 1] - y[i])\n    if dt < dist:\n        print('No')\n        exit()\n    if dist % 2 != dt % 2:\n        print('No')\n        exit()\nprint('Yes')\n\n# ABC085C\nN, Y = map(int, input().split())\n\nfor x in range(N + 1):\n    for y in range(N + 1):\n        z = N - x - y\n        if z < 0:\n            continue\n        if 10000 * x + 5000 * y + 1000 * z == Y:\n            print(x, y, z)\n            exit()\nprint(-1, -1, -1)\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc142/tasks/abc142_d\n# import sys\n# # def input(): return sys.stdin.readline().rstrip()\n# # input = sys.stdin.readline\n# input = sys.stdin.buffer.readline\n# from numba import njit\n# from functools import lru_cache\n# sys.setrecursionlimit(10 ** 7)\n\n# @njit('(i8,i8[::1],i4[::1])', cache=True)\n# def main():\n#     @lru_cache(None)\n#     def dfs():\n#         return\n#     return\n\n# main()\n\n# S = input()\n# n = int(input())\n# N, K = map(int, input().split())\n# l = list(map(int, (input().split())))\n# A = [[int(i) for i in input().split()] for _ in range(N)]\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    for i in range(1, ls[cur]):\n        res = min(res, dfs(cur + 1, a + ls[cur] - i, b, c) + 10-i)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - i, c) + 10-i)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - i) + 10-i)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 0, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 0, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 0) + 9)\n    if ls[cur] > 1:  # ls[cur] == 0 \u306e\u6642\u306f\u3053\u306e if \u306b\u5165\u3089\u306a\u3044\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 8)\n    if ls[cur] > 2:  # ls[cur] == 0, 1 \u306e\u6642\u306f\u3053\u306e if \u306b\u5165\u3089\u306a\u3044\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 7)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 7)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 7)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1650823214,
  "object": "edit"
}
2022-04-24 18:00:39.250682 fix syntax errors 3 ["# ABC081A\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 1:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] > 2:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n\n# ABC087B\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\nres = 0\nfor a in range(A + 1):\n    for b in range(B + 1):\n        for c in range(C + 1):\n            if a * 500 + b * 100 + c * 50 == X:\n                res += 1\nprint(res)\n\n# ABC087C\nn = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    res = max(res, sum(a1[:i + 1]) + sum(a2[i:]))\nprint(res)\n\n# ABC088B\nN = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nalice = sum(a[::2])\nbob = sum(a[1::2])\nprint(alice - bob)\n\n# ABC085B\nN = int(input())\nd = [int(input()) for _ in range(N)]\nprint(len(set(d)))\n\n# ABC085C\nN, Y = map(int, input().split())\n\nfor x in range(N + 1):\n    for y in range(N + 1):\n        z = N - x - y\n        if z < 0:\n            continue\n        if 10000 * x + 5000 * y + 1000 * z == Y:\n            print(x, y, z)\n            exit()\nprint(-1, -1, -1)\n\n# ABC086C\nN = int(input())\nt = [0]\nx = [0]\ny = [0]\nfor _ in range(N):\n    ti, xi, yi = map(int, input().split())\n    t.append(ti)\n    x.append(xi)\n    y.append(yi)\n\nfor i in range(N):\n    dt = t[i + 1] - t[i]\n    dist = abs(x[i + 1] - x[i]) + abs(y[i + 1] - y[i])\n    if dt < dist:\n        print('No')\n        exit()\n    if dist % 2 != dt % 2:\n        print('No')\n        exit()\nprint('Yes')\n\n# ABC085C\nN, Y = map(int, input().split())\n\nfor x in range(N + 1):\n    for y in range(N + 1):\n        z = N - x - y\n        if z < 0:\n            continue\n        if 10000 * x + 5000 * y + 1000 * z == Y:\n            print(x, y, z)\n            exit()\nprint(-1, -1, -1)\n", "# https://atcoder.jp/contests/abc142/tasks/abc142_d\n# import sys\n# # def input(): return sys.stdin.readline().rstrip()\n# # input = sys.stdin.readline\n# input = sys.stdin.buffer.readline\n# from numba import njit\n# from functools import lru_cache\n# sys.setrecursionlimit(10 ** 7)\n\n# @njit('(i8,i8[::1],i4[::1])', cache=True)\n# def main():\n#     @lru_cache(None)\n#     def dfs():\n#         return\n#     return\n\n# main()\n\n# S = input()\n# n = int(input())\n# N, K = map(int, input().split())\n# l = list(map(int, (input().split())))\n# A = [[int(i) for i in input().split()] for _ in range(N)]\n\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    for i in range(1, ls[cur]):\n        res = min(res, dfs(cur + 1, a + ls[cur] - i, b, c) + 10-i)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - i, c) + 10-i)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - i) + 10-i)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 0, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 0, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 0) + 9)\n    if ls[cur] > 1:  # ls[cur] == 0 の時はこの if に入らない\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 8)\n    if ls[cur] > 2:  # ls[cur] == 0, 1 の時はこの if に入らない\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 7)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 7)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 7)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-24 18:00:39.251013 using api key kouti
2022-04-24 18:00:48.394925 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "N, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if cur == N:\n        if a == A and b == B and c == C:\n            return 0\n        else:\n            return float('inf')\n    if a < A and b < B and c < C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1650823239,
  "object": "edit"
}
2022-04-24 18:00:48.395133 fix syntax errors 3 ["\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "N, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if cur == N:\n        if a == A and b == B and c == C:\n            return 0\n        else:\n            return float('inf')\n    if a < A and b < B and c < C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-24 18:00:48.395307 using api key kouti
2022-04-24 18:01:16.436920 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c, cost):\n    if a == A and b == B and c == C: # \u5168\u3066\u306e\u6728\u3092\u4f7f\u3063\u305f\n        return 0\n    if cur == N: # \u5168\u3066\u306e\u6728\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c, cost)) # \u4f7f\u308f\u306a\u3044\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c, cost) + 10) # A\u306b\u4f7f\u3046\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c, cost) + 10) # B\u306b\u4f7f\u3046\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur], cost) + 10) # C\u306b\u4f7f\u3046\n    if a == 0: # A\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c, cost) + 10)\n    if b == 0: # B\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c, cost) + 10)\n    if c == 0: # C\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1, cost) + 10)\n    if a == 0: # A\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c, cost) + 10)\n    if b == 0: # B\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c, cost) + 10)\n    if c == 0: # C\u306b\u4f7f\u308f\u306a\u3044\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2, cost) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0, 0))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\n    if cur == N:\n        return float('inf')\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res \n\nprint(dfs(0, 0, 0, 0))\n"
    }
  ],
  "created": 1650823248,
  "object": "edit"
}
2022-04-24 18:01:16.437235 fix syntax errors 3 ["\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c, cost):\n    if a == A and b == B and c == C: # 全ての木を使った\n        return 0\n    if cur == N: # 全ての木を使っていない\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c, cost)) # 使わない\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c, cost) + 10) # Aに使う\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c, cost) + 10) # Bに使う\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur], cost) + 10) # Cに使う\n    if a == 0: # Aに使わない\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c, cost) + 10)\n    if b == 0: # Bに使わない\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c, cost) + 10)\n    if c == 0: # Cに使わない\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1, cost) + 10)\n    if a == 0: # Aに使わない\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c, cost) + 10)\n    if b == 0: # Bに使わない\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c, cost) + 10)\n    if c == 0: # Cに使わない\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2, cost) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0, 0))\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\n    if cur == N:\n        return float('inf')\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 10)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 10)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 10)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 10)\n    return res \n\nprint(dfs(0, 0, 0, 0))\n"]
2022-04-24 18:01:16.437296 size on output set 9
