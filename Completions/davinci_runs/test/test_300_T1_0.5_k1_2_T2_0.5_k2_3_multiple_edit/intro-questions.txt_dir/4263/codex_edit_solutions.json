["import sys\n\ndef main():\n    N, M = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    b = list(map(int, sys.stdin.readline().split()))\n    b.sort()\n    c = list(map(int, sys.stdin.readline().split()))\n    c.sort()\n    d = list(map(int, sys.stdin.readline().split()))\n    d.sort()\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n#S = input()\nS = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n\ndef main():\n    S = input()\n    ans = 0\n\n    for i in range(len(S)):\n        for j in range(i, len(S)):\n            if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n                ans += 1\n            else:\n                break\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc088/tasks/abc088_b\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip() # remove trailing spaces\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len) # output to stdout\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # strip() removes the newline character at the end\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c in ['A', 'C', 'G', 'T']:\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':  # execute only if run as a script\n    main()\n", "# https://atcoder.jp/contests/abc088/tasks/abc088_b\n\nimport sys\n\ndef main():\n    S = input()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len) \n\nif __name__ == '__main__':\n    main()\n", "\nS = input()\nans = 0\n\nfor i in range(len(S) - 1):\n    if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n        ans += 1\n    else:\n        ans = 0\n\nprint(ans)\n", "\nprint(input().replace(\"2017\", \"2018\"))\n", "\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[j] == \"A\" or S[j] == \"C\" or S[j] == \"G\" or S[j] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "# https://atcoder.jp/contests/abc088/tasks/abc088_b\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T': # \u5c0f\u6587\u5b57\u306b\u3059\u308b\u3068WA\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len: # \u6700\u5f8c\u306e\u6587\u5b57\u304cACGT\u306e\u5834\u5408\u306b\u3053\u306e\u51e6\u7406\u304c\u306a\u3044\u3068WA\u306b\u306a\u308b\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in s:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nS = input()\nans = 0\n\nfor i in range(len(S)-1):\n    for j in range(i+1, len(S)):\n        if S[i:j] == \"A\" or S[i:j] == \"C\" or S[i:j] == \"G\" or S[i:j] == \"T\":\n            ans = max(ans, j-i)\n\nprint(ans)\n", "\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n", "\n\nS = input()\n# S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"]