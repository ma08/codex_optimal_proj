2022-04-24 16:06:07.849538 num operations 2
2022-04-24 16:06:07.849559 size on input set 1
2022-04-24 16:06:07.849738 using api key derek
2022-04-24 16:06:15.909290 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816368,
  "object": "edit"
}
2022-04-24 16:06:15.909506 fix spelling mistakes 3 ["\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:06:15.909550 size on output set 3
2022-04-24 16:06:15.909557 size on input set 3
2022-04-24 16:06:15.909731 using api key sunu
2022-04-24 16:06:25.184056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with max difficulty not more than 2^i and min difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] = 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i\n    # and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)]\n          for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816375,
  "object": "edit"
}
2022-04-24 16:06:25.184342 fix syntax errors 3 ["\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with max difficulty not more than 2^i and min difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] = 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i\n    # and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty not more than 2^i and the minimum difficulty not less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)]\n          for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:06:25.184505 using api key kouti
2022-04-24 16:06:43.601715 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# \n# \n# import sys\n# from typing import List\n# from math import log2\n# \n# \n# def get_contest_length(problems: List[int]):\n#     n = len(problems)\n#     # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n#     dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n#     dp[0][0] = 1\n#     for i in range(n):\n#         for j in range(int(log2(problems[i])) + 1):\n#             dp[j][j] += 1\n#             for k in range(j + 1, int(log2(problems[-1])) + 1):\n#                 dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n#     return max(map(max, dp))\n# \n# \n# def main():\n#     n = int(input())\n#     problems = list(map(int, input().split()))\n#     print(get_contest_length(problems))\n# \n# \n# if __name__ == '__main__':\n#     main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816385,
  "object": "edit"
}
2022-04-24 16:06:43.601901 fix syntax errors 3 ["import sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "# \n# \n# import sys\n# from typing import List\n# from math import log2\n# \n# \n# def get_contest_length(problems: List[int]):\n#     n = len(problems)\n#     # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n#     dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n#     dp[0][0] = 1\n#     for i in range(n):\n#         for j in range(int(log2(problems[i])) + 1):\n#             dp[j][j] += 1\n#             for k in range(j + 1, int(log2(problems[-1])) + 1):\n#                 dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n#     return max(map(max, dp))\n# \n# \n# def main():\n#     n = int(input())\n#     problems = list(map(int, input().split()))\n#     print(get_contest_length(problems))\n# \n# \n# if __name__ == '__main__':\n#     main()\n", "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest_length(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest_length(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:06:43.602056 using api key soukgp
2022-04-24 16:06:51.837353 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j\n    # and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816403,
  "object": "edit"
}
2022-04-24 16:06:51.837739 fix syntax errors 3 ["\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j\n    # and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^j and the minimum difficulty no less than 2^i\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:06:51.837790 size on output set 9
2022-04-24 16:06:51.837801 num operations 2
2022-04-24 16:06:51.837807 size on input set 1
2022-04-24 16:06:51.837937 using api key sunu
2022-04-24 16:07:00.120565 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\n \ncontests = []\n \nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n \ncontests.sort()\n \nmax_len = 0\nmax_contest = None\n \nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n \nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1650816411,
  "object": "edit"
}
2022-04-24 16:07:00.120757 fix spelling mistakes 3 ['\n\nn = int(input())\na = [int(x) for x in input().split()]\n \ncontests = []\n \nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n \ncontests.sort()\n \nmax_len = 0\nmax_contest = None\n \nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n \nprint(max_len)\n', '\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-24 16:07:00.120793 size on output set 3
2022-04-24 16:07:00.120800 size on input set 3
2022-04-24 16:07:00.120920 using api key sunu
2022-04-24 16:07:08.040364 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2 or contests[j][0] <= this_contest[-1][1]:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1650816420,
  "object": "edit"
}
2022-04-24 16:07:08.040628 fix syntax errors 3 ['\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2 or contests[j][0] <= this_contest[-1][1]:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((i, j))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if a[contests[j][0]] > a[this_contest[-1][1]] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-24 16:07:08.040783 using api key kouti
2022-04-24 16:07:23.933606 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# n = int(input())\n# a = [int(x) for x in input().split()]\n# contests = []\n#\n# for i in range(n):\n#     for j in range(i+1, n):\n#         if a[j] > a[i] * 2:\n#             break\n#         contests.append((a[i], a[j]))\n#\n# contests.sort()\n#\n# max_len = 0\n# max_contest = None\n#\n# for i in range(len(contests)):\n#     this_contest = [contests[i]]\n#     for j in range(i+1, len(contests)):\n#         if contests[j][0] > this_contest[-1][1] * 2:\n#             break\n#         this_contest.append(contests[j])\n#     if len(this_contest) > max_len:\n#         max_len = len(this_contest)\n#         max_contest = this_contest\n#\n# print(max_len)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1650816428,
  "object": "edit"
}
2022-04-24 16:07:23.933825 fix syntax errors 3 ['\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n#\n# n = int(input())\n# a = [int(x) for x in input().split()]\n# contests = []\n#\n# for i in range(n):\n#     for j in range(i+1, n):\n#         if a[j] > a[i] * 2:\n#             break\n#         contests.append((a[i], a[j]))\n#\n# contests.sort()\n#\n# max_len = 0\n# max_contest = None\n#\n# for i in range(len(contests)):\n#     this_contest = [contests[i]]\n#     for j in range(i+1, len(contests)):\n#         if contests[j][0] > this_contest[-1][1] * 2:\n#             break\n#         this_contest.append(contests[j])\n#     if len(this_contest) > max_len:\n#         max_len = len(this_contest)\n#         max_contest = this_contest\n#\n# print(max_len)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-24 16:07:23.933989 using api key sunu
2022-04-24 16:08:08.768158 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n \nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\n \ncontests = []\n \nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n \ncontests.sort()\n \nmax_len = 0\nmax_contest = None\n \nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n \nprint(max_len)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ],
  "created": 1650816443,
  "object": "edit"
}
2022-04-24 16:08:08.768421 fix syntax errors 3 ['\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n \nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '#!/usr/bin/env python\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\n\nn = int(input())\na = [int(x) for x in input().split()]\n \ncontests = []\n \nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n \ncontests.sort()\n \nmax_len = 0\nmax_contest = None\n \nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n \nprint(max_len)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n']
2022-04-24 16:08:08.768468 size on output set 8
