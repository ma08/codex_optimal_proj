["\nn, m = map(int, input().split())\nflavors = [m + i for i in range(n)]\n\nprint(sum(flavors) - min([abs(f) for f in flavors]))\n", "N, L = map(int, input().split())\n\napple_flavours = [L + i for i in range(N)]\n\napple_flavours.remove(max(apple_flavours))\n\nprint(sum(apple_flavours))\n\n\nN, L = map(int, input().split())\n\napple_flavours = [L + i for i in range(N)]\n\napple_flavours.remove(max(apple_flavours))\n\nprint(sum(apple_flavours))\n", "import math\n\ndef calculate_fuel(mass):\n    fuel = math.floor(int(mass) / 3) - 2\n    return fuel\n\nwith open('input.txt', 'r') as f:\n    masses = f.readlines()\n\ntotal_fuel = 0\n\nfor mass in masses:\n    total_fuel += calculate_fuel(mass)\n\nprint(total_fuel)\n", "\nn, l = map(int, input().split())\napples = [l + i for i in range(n)]\nprint(sum(apples) - min([abs(f) for f in apples]))\n", "\nN, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)]  # \u30ea\u30f3\u30b4\u306e\u5473\u3092\u914d\u5217\u306b\u683c\u7d0d\n\napple_flavors.remove(max(apple_flavors))  # \u4e00\u756a\u82e6\u3044\u30ea\u30f3\u30b4\u3092\u524a\u9664\n\nprint(sum(apple_flavors))  # \u5473\u306e\u5408\u8a08\u3092\u51fa\u529b\n", "\n\nN, L = map(int, input().split())\n\napple_flavours = [L + i for i in range(N)] # list of flavours\n\napple_flavours.remove(max(apple_flavours))\n\nprint(sum(apple_flavours))\n", "\nn, l = map(int, input().split())\n\ntastes = [l + i for i in range(n)]\n\nprint(sum(tastes) - min(tastes, key=lambda x: abs(x)))\n", "\n\nN, L = map(int, input().split())\n\napples = [L + i for i in range(N)]  # \u30ea\u30f3\u30b4\u306e\u5473\u3092\u914d\u5217\u306b\u683c\u7d0d\n\napples.remove(max(apples))  # \u4e00\u756a\u82e6\u3044\u30ea\u30f3\u30b4\u3092\u524a\u9664\n\nprint(sum(apples))  # \u5473\u306e\u5408\u8a08\u3092\u51fa\u529b\n", "\nn, l = map(int, input().split())\nflavors = [l + i for i in range(n)]\n\nprint(sum(flavors) - min([abs(f) for f in flavors])\n", "\nn, l = map(int, input().split())\napples = [l + i for i in range(n)]\n\nprint(sum(apples) - min([abs(f) for f in apples]))\n", "n, l = map(int, input().split())\ntastes = [l + i for i in range(n)]\nprint(sum(tastes) - min([abs(f) for f in tastes]))\n\n", "\ndef main():\n    n, l = map(int, input().split())\n    flavors = [l + i for i in range(n)]\n    print(sum(flavors) - min([abs(f) for f in flavors]))\n\nif __name__ == \"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\n\nn, l = map(int, input().split())  # \u5165\u529b\u3092\u30ea\u30b9\u30c8\u306b\n\ntastes = [l + i for i in range(n)]  # \u8981\u7d20\u3092\u8ffd\u52a0\n\nprint(sum(tastes) - min([abs(f) for f in tastes]))  # \u8981\u7d20\u3092\u8ffd\u52a0\n", "\nN, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)]  # 1\u884c\u3067\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u6c7a\u3081\u308b\n\napple_flavors.remove(max(apple_flavors))  # \u30ea\u30b9\u30c8\u306e\u6700\u5927\u5024\u3092\u524a\u9664\n\nprint(sum(apple_flavors))  # \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u5408\u8a08\n", "\nN, L = map(int, input().split())\n\napple_flavours = [L + i for i in range(N)]\n\napple_flavours.remove(max(apple_flavours))\n\nprint(sum(apple_flavours))\n", "\n\nn, l = map(int, input().split())\n\napple_flavors = [l + i for i in range(n)]  # \u30ea\u30f3\u30b4\u306e\u5473\u3092\u914d\u5217\u306b\u683c\u7d0d\n\napple_flavors.remove(max(apple_flavors))  # \u4e00\u756a\u82e6\u3044\u30ea\u30f3\u30b4\u3092\u524a\u9664\n\nprint(sum(apple_flavors))  # \u5473\u306e\u5408\u8a08\u3092\u51fa\u529b\n", "\n\nn, l = map(int, input().split())\n\napples = [l + i for i in range(n)]\n\nprint(sum(apples) - min(apples, key=abs))\n", "N, L = map(int, input().split())\n\napple_flavors = [L + i for i in range(N)]\n\napple_flavors.remove(max(apple_flavors))\n\nprint(sum(apple_flavors))\n"]