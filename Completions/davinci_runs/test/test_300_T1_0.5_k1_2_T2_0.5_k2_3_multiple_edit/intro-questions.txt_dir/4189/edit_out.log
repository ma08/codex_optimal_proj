2022-04-24 18:51:26.450361 num operations 2
2022-04-24 18:51:26.450372 size on input set 1
2022-04-24 18:51:26.450489 using api key sunu
2022-04-24 18:51:36.423926 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"S\"] if cheeses[\"S\"] < cheeses[\"H\"] else cheeses[\"H\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheeses = input().split()\n        if cheeses[1] not in cheese:\n            cheese[cheeses[1]] = 0\n        cheese[cheeses[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650826286,
  "object": "edit"
}
2022-04-24 18:51:36.424130 fix spelling mistakes 3 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["S"] if cheeses["S"] < cheeses["H"] else cheeses["H"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheeses = input().split()\n        if cheeses[1] not in cheese:\n            cheese[cheeses[1]] = 0\n        cheese[cheeses[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 18:51:36.424161 size on output set 3
2022-04-24 18:51:36.424168 size on input set 3
2022-04-24 18:51:36.424304 using api key sunu
2022-04-24 18:51:44.237676 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"S\"] if cheeses[\"S\"] <= cheeses[\"H\"] else cheeses[\"H\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(min(cheeses[\"S\"], cheeses[\"H\"]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"S\"] if cheeses.get(\"S\", 0) < cheeses.get(\"H\", 0) else cheeses.get(\"H\", 0))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650826296,
  "object": "edit"
}
2022-04-24 18:51:44.237875 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["S"] if cheeses["S"] <= cheeses["H"] else cheeses["H"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(min(cheeses["S"], cheeses["H"]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["S"] if cheeses.get("S", 0) < cheeses.get("H", 0) else cheeses.get("H", 0))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 18:51:44.238049 using api key jaanu
2022-04-24 18:51:52.508283 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {\"soft\": 0, \"hard\": 0}\n    for i in range(n):\n        cheeses = input().split()\n        cheese[cheeses[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheeses = input().split()\n        if cheeses[1] not in cheese:\n            cheese[cheeses[1]] = 0\n        cheese[cheeses[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] <= cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650826304,
  "object": "edit"
}
2022-04-24 18:51:52.508457 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    cheese = {"soft": 0, "hard": 0}\n    for i in range(n):\n        cheeses = input().split()\n        cheese[cheeses[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheeses = input().split()\n        if cheeses[1] not in cheese:\n            cheese[cheeses[1]] = 0\n        cheese[cheeses[1]] += 1\n    print(cheese["soft"] if cheese["soft"] <= cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 18:51:52.508595 using api key soukgp
2022-04-24 18:52:00.065231 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses.get(\"soft\") < cheeses.get(\"hard\") else cheeses.get(\"hard\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split(\" \")\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650826312,
  "object": "edit"
}
2022-04-24 18:52:00.065508 fix syntax errors 3 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses.get("soft") < cheeses.get("hard") else cheeses.get("hard"))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split(" ")\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 18:52:00.065539 size on output set 9
2022-04-24 18:52:00.065550 num operations 2
2022-04-24 18:52:00.065555 size on input set 1
2022-04-24 18:52:00.065704 using api key derek
2022-04-24 18:52:09.274984 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\n# fix spelling mistakes\n"
    },
    {
      "index": 1,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type_ = input().split()\n#     if type_ == 'soft':\n#         soft += 1\n#     elif type_ == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650826320,
  "object": "edit"
}
2022-04-24 18:52:09.275163 fix spelling mistakes 3 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\n# fix spelling mistakes\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type_ = input().split()\n#     if type_ == 'soft':\n#         soft += 1\n#     elif type_ == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-24 18:52:09.275202 size on output set 3
2022-04-24 18:52:09.275210 size on input set 3
2022-04-24 18:52:09.275328 using api key derek
2022-04-24 18:52:15.864075 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650826329,
  "object": "edit"
}
2022-04-24 18:52:15.864257 fix syntax errors 3 ["#!/usr/bin/env python3\n\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-24 18:52:15.864392 using api key sunu
2022-04-24 18:52:26.912806 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\n# fix spelling mistakes\n"
    },
    {
      "index": 1,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# fix spelling mistakes\n"
    }
  ],
  "created": 1650826335,
  "object": "edit"
}
2022-04-24 18:52:26.913086 fix syntax errors 3 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n\n# fix spelling mistakes\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type = input().split()\n    if type == 'soft':\n        soft += 1\n    elif type == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# fix spelling mistakes\n"]
2022-04-24 18:52:26.913239 using api key sunu
2022-04-24 18:52:38.294189 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type_ = input().split()\n#     if type_ == 'soft':\n#         soft += 1\n#     elif type_ == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split() # type_ is a built-in function\n    if type_ == 'soft': # type_ is a built-in function\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650826346,
  "object": "edit"
}
2022-04-24 18:52:38.294383 fix syntax errors 3 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type_ = input().split()\n#     if type_ == 'soft':\n#         soft += 1\n#     elif type_ == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split() # type_ is a built-in function\n    if type_ == 'soft': # type_ is a built-in function\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, type_ = input().split()\n    if type_ == 'soft':\n        soft += 1\n    elif type_ == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-24 18:52:38.294416 size on output set 8
