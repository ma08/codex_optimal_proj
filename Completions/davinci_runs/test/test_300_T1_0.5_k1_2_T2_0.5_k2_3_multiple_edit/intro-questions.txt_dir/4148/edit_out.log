2022-04-24 18:01:16.800775 num operations 2
2022-04-24 18:01:16.800785 size on input set 1
2022-04-24 18:01:16.800898 using api key derek
2022-04-24 18:01:33.467051 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end=\"\")\n    else:\n        print(chr(ord(s[i]) + n), end=\"\")\n"
    },
    {
      "index": 1,
      "text": "# \uc601\uc5b4 \uc54c\ud30c\ubcb3 \ub300\ubb38\uc790\ub85c\ub9cc \uc774\ub8e8\uc5b4\uc9c4 \ub2e8\uc5b4 S\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \uac01\uac01\uc758 \uc54c\ud30c\ubcb3\uc5d0 \ub300\ud574\uc11c, \ub2e8\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub294 \ucc98\uc74c \ub4f1\uc7a5\ud558\ub294 \uc704\uce58\ub97c, \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 -1\uc744 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624.\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=\" \")\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end=\"\")\n    else:\n        print(chr(ord(s[i]) + n), end=\"\")\n"
    }
  ],
  "created": 1650823276,
  "object": "edit"
}
2022-04-24 18:01:33.467281 fix spelling mistakes 3 ['#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord(\'Z\'):\n        print(chr(ord(s[i]) + n - 26), end="")\n    else:\n        print(chr(ord(s[i]) + n), end="")\n', '# 영어 알파벳 대문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=" ")\n', '\n\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord(\'Z\'):\n        print(chr(ord(s[i]) + n - 26), end="")\n    else:\n        print(chr(ord(s[i]) + n), end="")\n']
2022-04-24 18:01:33.467316 size on output set 3
2022-04-24 18:01:33.467323 size on input set 3
2022-04-24 18:01:33.467437 using api key sunu
2022-04-24 18:01:52.766128 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \uc601\uc5b4 \uc54c\ud30c\ubcb3 \ub300\ubb38\uc790\ub85c\ub9cc \uc774\ub8e8\uc5b4\uc9c4 \ub2e8\uc5b4 S\uac00 \uc8fc\uc5b4\uc9c4\ub2e4.\n# \uac01\uac01\uc758 \uc54c\ud30c\ubcb3\uc5d0 \ub300\ud574\uc11c, \ub2e8\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub294 \ucc98\uc74c \ub4f1\uc7a5\ud558\ub294 \uc704\uce58\ub97c, \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 -1\uc744 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624.\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=\" \")\n"
    },
    {
      "index": 1,
      "text": "# \uc601\uc5b4 \uc54c\ud30c\ubcb3 \ub300\ubb38\uc790\ub85c\ub9cc \uc774\ub8e8\uc5b4\uc9c4 \ub2e8\uc5b4 S\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \uac01\uac01\uc758 \uc54c\ud30c\ubcb3\uc5d0 \ub300\ud574\uc11c, \ub2e8\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub294 \ucc98\uc74c \ub4f1\uc7a5\ud558\ub294 \uc704\uce58\ub97c, \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 -1\uc744 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624.\n\nimport sys\n\nn = int(input())\ns = input()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=\" \")\n"
    },
    {
      "index": 2,
      "text": "# \uc601\uc5b4 \uc54c\ud30c\ubcb3 \ub300\ubb38\uc790\ub85c\ub9cc \uc774\ub8e8\uc5b4\uc9c4 \ub2e8\uc5b4 S\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \uac01\uac01\uc758 \uc54c\ud30c\ubcb3\uc5d0 \ub300\ud574\uc11c, \ub2e8\uc5b4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub294 \ucc98\uc74c \ub4f1\uc7a5\ud558\ub294 \uc704\uce58\ub97c, \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 -1\uc744 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624\n\nimport sys\n\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=\" \")\n"
    }
  ],
  "created": 1650823293,
  "object": "edit"
}
2022-04-24 18:01:52.766327 fix syntax errors 3 ['# 영어 알파벳 대문자로만 이루어진 단어 S가 주어진다.\n# 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=" ")\n', '# 영어 알파벳 대문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.\n\nimport sys\n\nn = int(input())\ns = input()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=" ")\n', '# 영어 알파벳 대문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오\n\nimport sys\n\ns = sys.stdin.readline()\nalphabet = [-1] * 26\n\n\nfor i in range(len(s)):\n    if alphabet[ord(s[i]) - 65] == -1:\n        alphabet[ord(s[i]) - 65] = i\n\nfor i in alphabet:\n    print(i, end=" ")\n']
2022-04-24 18:01:52.766487 using api key soukgp
2022-04-24 18:02:29.646341 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end=\"\")\n    else:\n        print(chr(ord(s[i]) + n), end=\"\")\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "index": 2,
      "text": "import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end=\"\")\n    else:\n        print(chr(ord(s[i]) + n), end=\"\")\n"
    }
  ],
  "created": 1650823312,
  "object": "edit"
}
2022-04-24 18:02:29.646557 NO RESULT
2022-04-24 18:02:29.646566 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-24 18:02:29.646605 fix syntax errors 2 ['import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord(\'Z\'):\n        print(chr(ord(s[i]) + n - 26), end="")\n    else:\n        print(chr(ord(s[i]) + n), end="")\n', 'import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord(\'Z\'):\n        print(chr(ord(s[i]) + n - 26), end="")\n    else:\n        print(chr(ord(s[i]) + n), end="")\n']
2022-04-24 18:02:29.646881 using api key derek
2022-04-24 18:02:41.904365 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end='')\n    else:\n        print(chr(ord(s[i]) + n), end='')\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) >= ord('A') and ord(s[i]) <= ord('Z'):\n        if ord(s[i]) + n > ord('Z'):\n            print(chr(ord(s[i]) + n - 26), end=\"\")\n        else:\n            print(chr(ord(s[i]) + n), end=\"\")\n    elif ord(s[i]) >= ord('a') and ord(s[i]) <= ord('z'):\n        if ord(s[i]) + n > ord('z'):\n            print(chr(ord(s[i]) + n - 26), end=\"\")\n        else:\n            print(chr(ord(s[i]) + n), end=\"\")\n    else:\n        print(s[i], end=\"\")\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().split('\\n')[0]\nprint(s)\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end=\"\")\n    else:\n        print(chr(ord(s[i]) + n), end=\"\")\n"
    }
  ],
  "created": 1650823349,
  "object": "edit"
}
2022-04-24 18:02:41.904567 fix syntax errors 3 ["#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord('Z'):\n        print(chr(ord(s[i]) + n - 26), end='')\n    else:\n        print(chr(ord(s[i]) + n), end='')\n", '#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline()\n\nfor i in range(len(s)):\n    if ord(s[i]) >= ord(\'A\') and ord(s[i]) <= ord(\'Z\'):\n        if ord(s[i]) + n > ord(\'Z\'):\n            print(chr(ord(s[i]) + n - 26), end="")\n        else:\n            print(chr(ord(s[i]) + n), end="")\n    elif ord(s[i]) >= ord(\'a\') and ord(s[i]) <= ord(\'z\'):\n        if ord(s[i]) + n > ord(\'z\'):\n            print(chr(ord(s[i]) + n - 26), end="")\n        else:\n            print(chr(ord(s[i]) + n), end="")\n    else:\n        print(s[i], end="")\n', '#!/usr/bin/python3\n\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().split(\'\\n\')[0]\nprint(s)\nfor i in range(len(s)):\n    if ord(s[i]) + n > ord(\'Z\'):\n        print(chr(ord(s[i]) + n - 26), end="")\n    else:\n        print(chr(ord(s[i]) + n), end="")\n']
2022-04-24 18:02:41.904613 size on output set 7
2022-04-24 18:02:41.904624 num operations 2
2022-04-24 18:02:41.904630 size on input set 1
2022-04-24 18:02:41.904753 using api key sunu
2022-04-24 18:02:50.857723 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='') \n\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n#\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"
    }
  ],
  "created": 1650823361,
  "object": "edit"
}
2022-04-24 18:02:50.857921 fix spelling mistakes 3 ["\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='') \n\n# ord() : character to integer\n# chr() : integer to character\n", "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n#\n# ord() : character to integer\n# chr() : integer to character\n", "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"]
2022-04-24 18:02:50.857949 size on output set 3
2022-04-24 18:02:50.857957 size on input set 3
2022-04-24 18:02:50.858073 using api key jaanu
2022-04-24 18:03:27.284486 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    }
  ],
  "created": 1650823370,
  "object": "edit"
}
2022-04-24 18:03:27.284698 NO RESULT
2022-04-24 18:03:27.284709 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-24 18:03:27.284749 fix syntax errors 2 ["\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n", "\n\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline().rstrip()\n\n# ord() : character to integer\n# chr() : integer to character\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"]
2022-04-24 18:03:27.284883 using api key derek
2022-04-24 18:03:36.623160 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='') \n\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n"
    }
  ],
  "created": 1650823407,
  "object": "edit"
}
2022-04-24 18:03:36.623425 fix syntax errors 3 ["\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='') \n\n# ord() : character to integer\n# chr() : integer to character\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n"]
2022-04-24 18:03:36.623574 using api key soukgp
2022-04-24 18:03:43.554433 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n#\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"
    }
  ],
  "created": 1650823416,
  "object": "edit"
}
2022-04-24 18:03:43.554603 fix syntax errors 3 ["#\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n#\n# ord() : character to integer\n# chr() : integer to character\n", "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n\n# ord() : character to integer\n# chr() : integer to character\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nfor s in S:\n    print(chr(ord(s) + N) if ord(s) + N <= ord('Z') else chr(ord(s) + N - ord('Z') + ord('A') - 1), end='')\n"]
2022-04-24 18:03:43.554630 size on output set 7
