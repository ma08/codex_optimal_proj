["\n\ndef solve(n, m, a, l, r, k):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    k = int(input())\n    solve(n, m, a, l, r, k)\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])  # sort by the right end\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, a, l, r):  # n, m, a, l, r\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]  # n, m\n    a = [int(i) for i in input().split()]  # a\n    l = []  # l\n    r = []  # r\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n", "\n\n\ndef solve(n, m, a, l, r):  # n, m, a, l, r\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]  # n, m\n    a = [int(i) for i in raw_input().split()]  # a\n    l = []  # l\n    r = []  # r\n    for i in range(m):\n        l.append(int(raw_input().split()[0]))\n        r.append(int(raw_input().split()[1]))\n    solve(n, m, a, l, r)\n", "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    l = []\n    r = []\n    for i in range(m):\n        l.append(int(input().split()[0]))\n        r.append(int(input().split()[1]))\n    solve(n, m, a, l, r)\n", "\n\ndef solve(n, m, a, l, r):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l, r = [], []\n    for i in range(m):\n        l.append(int(raw_input().split()[0]))\n        r.append(int(raw_input().split()[1]))\n    solve(n, m, a, l, r)\n", "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    sys.stdout.write(str(max(b) - min(b)) + '\\n')\n    sys.stdout.write(str(len(s)) + '\\n')\n    for i in s:\n        sys.stdout.write(str(i+1) + ' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = input()\n\n    a = map(int, raw_input().split())\n\n    b = map(int, raw_input().split())\n\n    c = map(int, raw_input().split())\n\n    a.sort()\n    b.sort()\n    c.sort()\n\n    s = 0\n    for i in range(n):\n        s += b[i] * c[n-i-1]\n\n    print s\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n# https://www.hackerrank.com/challenges/picking-numbers\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = map(int, sys.stdin.readline().split())[:n]\n    freq = [0] * 100\n\n    for i in a:\n        freq[i] += 1\n\n    # print freq\n\n    m = 0\n    for i in range(n-1):\n        m = max(m, freq[i] + freq[i+1])\n\n    print m\n\nif __name__ == \"__main__\":\n    main()\n", "# https://www.hackerrank.com/challenges/angry-children\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print(i+1, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n# https://www.hackerrank.com/challenges/angry-children\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = map(int, sys.stdin.readline().split())\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    # print n, m\n    # print a\n    # print segs\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        # print 'cur', cur\n        # print 's', s\n        # print 'b', b\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    # print max(b) - min(b)\n    print len(s)\n    for i in s:\n        print i+1,\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    segs = []\n\n    for i in range(m):\n        l, r = list(map(int, sys.stdin.readline().split()))\n        segs.append((l, r))\n\n    segs.sort(key=lambda x: x[1])\n\n    print(n, m)\n    print(a)\n    print(segs)\n\n    b = a[:]\n    s = set()\n    cur = 0\n    while cur < m:\n        print('cur', cur)\n        print('s', s)\n        print('b', b)\n        if len(s) == 0 or segs[cur][0] > segs[s[-1]][1]:\n            s.add(cur)\n            for i in range(segs[cur][0], segs[cur][1]+1):\n                b[i-1] -= 1\n        cur += 1\n\n    print(max(b) - min(b))\n    print(len(s))\n    for i in s:\n        print(i+1, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve(n, m, a, l, r): \n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    pass\n\nif __name__ == '__main__':\n    n, m = [int(i) for i in raw_input().split()]\n    a = [int(i) for i in raw_input().split()]\n    l = []\n    r = []\n    for i in xrange(m):\n        l.append(int(raw_input().split()[0]) - 1)\n        r.append(int(raw_input().split()[1]) - 1)\n    solve(n, m, a, l, r)\n"]