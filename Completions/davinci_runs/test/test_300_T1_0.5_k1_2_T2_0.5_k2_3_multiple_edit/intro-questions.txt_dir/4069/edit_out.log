2022-04-24 16:12:10.636433 num operations 2
2022-04-24 16:12:10.636455 size on input set 1
2022-04-24 16:12:10.636589 using api key jaanu
2022-04-24 16:12:19.961842 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # x\u304ck*d\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\n        print(abs(x - (x // d) * d))  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b\n    else:\n        print(abs(x) - (k * d))  # x\u304ck*d\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816730,
  "object": "edit"
}
2022-04-24 16:12:19.962056 fix spelling mistakes 3 ["\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # xがk*dより小さい場合\n        print(abs(x - (x // d) * d))  # 小数点以下を切り捨てて、その差を求める\n    else:\n        print(abs(x) - (k * d))  # xがk*dより大きい場合は、その差を求める\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:12:19.962090 size on output set 3
2022-04-24 16:12:19.962097 size on input set 3
2022-04-24 16:12:19.962219 using api key soukgp
2022-04-24 16:12:31.220897 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # x\u304ck*d\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\n        print(abs(x - (x // d) * d))  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b\n    else:\n        print(abs(x) - (k * d))  # x\u304ck*d\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # x\u304ck*d\u3088\u308a\u5c0f\u3055\u3044\u5834\u5408 x < k * d\n        print(abs(x - (x // d) * d))  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b x - (x // d) * d\n    else:\n        print(abs(x) - (k * d))  # x\u304ck*d\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b x - k * d\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u3001\u305d\u306e\u5dee\u3092\u6c42\u3081\u308b\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816740,
  "object": "edit"
}
2022-04-24 16:12:31.221067 fix syntax errors 3 ["\n\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # xがk*dより小さい場合\n        print(abs(x - (x // d) * d))  # 小数点以下を切り捨てて、その差を求める\n    else:\n        print(abs(x) - (k * d))  # xがk*dより大きい場合は、その差を求める\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:  # xがk*dより小さい場合 x < k * d\n        print(abs(x - (x // d) * d))  # 小数点以下を切り捨てて、その差を求める x - (x // d) * d\n    else:\n        print(abs(x) - (k * d))  # xがk*dより大きい場合は、その差を求める x - k * d\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) < k * d:\n        print(abs(x - (x // d) * d))  # 小数点以下を切り捨てて、その差を求める\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:12:31.221234 using api key kouti
2022-04-24 16:12:42.164728 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    a = list(map(int, sys.stdin.readline().rstrip().split()))\n    if N == 1:\n        print(a[0])\n        exit()\n    if a[0] != a[1]:\n        print(a[0])\n        exit()\n    if a[-1] != a[-2]:\n        print(a[-1])\n        exit()\n    for i in range(1, N - 1):\n        if a[i - 1] != a[i] and a[i] != a[i + 1]:\n            print(a[i])\n            exit()\n    else:\n        print(a[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816751,
  "object": "edit"
}
2022-04-24 16:12:42.164908 fix syntax errors 3 ["import sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    a = list(map(int, sys.stdin.readline().rstrip().split()))\n    if N == 1:\n        print(a[0])\n        exit()\n    if a[0] != a[1]:\n        print(a[0])\n        exit()\n    if a[-1] != a[-2]:\n        print(a[-1])\n        exit()\n    for i in range(1, N - 1):\n        if a[i - 1] != a[i] and a[i] != a[i + 1]:\n            print(a[i])\n            exit()\n    else:\n        print(a[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:12:42.165048 using api key jaanu
2022-04-24 16:12:49.436475 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650816762,
  "object": "edit"
}
2022-04-24 16:12:49.436774 fix syntax errors 3 ["# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if abs(x) <= k * d:\n        print(abs(x - (x // d) * d))\n    else:\n        print(abs(x) - (k * d))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 16:12:49.436804 size on output set 8
2022-04-24 16:12:49.436815 num operations 2
2022-04-24 16:12:49.436825 size on input set 1
2022-04-24 16:12:49.436945 using api key kouti
2022-04-24 16:12:56.821430 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    }
  ],
  "created": 1650816769,
  "object": "edit"
}
2022-04-24 16:12:56.821607 fix spelling mistakes 3 ['\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n']
2022-04-24 16:12:56.821690 size on output set 2
2022-04-24 16:12:56.821701 size on input set 2
2022-04-24 16:12:56.821823 using api key soukgp
2022-04-24 16:13:11.978277 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0: X = -X\n\nif X < K * D: K = K - (X + K * D) // (2 * D); X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0: print(X // (2 * D))\nelse: print(X // (2 * D) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X - K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    }
  ],
  "created": 1650816776,
  "object": "edit"
}
2022-04-24 16:13:11.978466 fix syntax errors 3 ['\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0: X = -X\n\nif X < K * D: K = K - (X + K * D) // (2 * D); X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0: print(X // (2 * D))\nelse: print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinate of the destination point.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X - K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n']
2022-04-24 16:13:11.978684 using api key kouti
2022-04-24 16:13:23.585653 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    X = (X + K * D) % (2 * D)  # or (X - K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) % (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    X = (X - K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n"
    }
  ],
  "created": 1650816792,
  "object": "edit"
}
2022-04-24 16:13:23.585834 fix syntax errors 3 ['\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination. First, find the absolute value of (X - K * D). Then, find the remainder of (X - K * D) / (2 * D). If the remainder is 0, the distance is (X - K * D) / 2. If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    X = (X + K * D) % (2 * D)  # or (X - K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) % (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    K = K - (X + K * D) // (2 * D)\n    X = (X + K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n', '\n\n# The point is to find the smallest possible absolute value of the coordinates of the destination.\n# First, find the absolute value of (X - K * D).\n# Then, find the remainder of (X - K * D) / (2 * D).\n# If the remainder is 0, the distance is (X - K * D) / 2.\n# If the remainder is 1, the distance is (X - K * D) / 2 + 1.\n\nX, K, D = map(int, input().split())\n\nif X < 0:\n    X = -X\n\nif X < K * D:\n    X = (X - K * D) % (2 * D)\n\nif X % (2 * D) == 0:\n    print(X // (2 * D))\nelse:\n    print(X // (2 * D) + 1)\n']
2022-04-24 16:13:23.585868 size on output set 6
