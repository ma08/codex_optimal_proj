2022-04-24 20:06:28.816730 num operations 2
2022-04-24 20:06:28.816739 size on input set 1
2022-04-24 20:06:28.816852 using api key soukgp
2022-04-24 20:06:36.088388 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input(\"input s: \")\nt = input(\"input t: \")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\n\n\nprint(correct)\n"
    }
  ],
  "created": 1650830788,
  "object": "edit"
}
2022-04-24 20:06:36.088616 fix spelling mistakes 3 ['\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\n\ns = input("input s: ")\nt = input("input t: ")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\n\n\nprint(correct)\n']
2022-04-24 20:06:36.088641 size on output set 3
2022-04-24 20:06:36.088647 size on input set 3
2022-04-24 20:06:36.088769 using api key jaanu
2022-04-24 20:06:43.372721 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "s = input()\nt = input()\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\n\n\nprint(correct)\n"
    }
  ],
  "created": 1650830796,
  "object": "edit"
}
2022-04-24 20:06:43.372922 fix syntax errors 3 ['\n\ns = input()\nt = input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\nprint(correct)\n', 's = input()\nt = input()\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\nprint(correct)\n', '\n\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\n\n\n\n\nprint(correct)\n']
2022-04-24 20:06:43.373056 using api key derek
2022-04-24 20:06:51.925680 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input(\"input s: \")\nt = input(\"input t: \")\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input(\"input s: \") # s = \"ACGT\"\nt = input(\"input t: \") # t = \"ACGT\"\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct) # 4\n"
    },
    {
      "index": 2,
      "text": "\n\ns = input(\"input s: \").strip()\nt = input(\"input t: \").strip()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1650830803,
  "object": "edit"
}
2022-04-24 20:06:51.925869 fix syntax errors 3 ['\ns = input("input s: ")\nt = input("input t: ")\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\n\ns = input("input s: ") # s = "ACGT"\nt = input("input t: ") # t = "ACGT"\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct) # 4\n', '\n\ns = input("input s: ").strip()\nt = input("input t: ").strip()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-24 20:06:51.926004 using api key soukgp
2022-04-24 20:07:00.228612 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "s = input()\nt = input()\n\ncorrect_count = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct_count += 1\n\nprint(correct_count)\n"
    },
    {
      "index": 1,
      "text": "\ns = input(\"s\")\nt = input(\"t\")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    },
    {
      "index": 2,
      "text": "\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n"
    }
  ],
  "created": 1650830811,
  "object": "edit"
}
2022-04-24 20:07:00.228795 fix syntax errors 3 ['s = input()\nt = input()\n\ncorrect_count = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct_count += 1\n\nprint(correct_count)\n', '\ns = input("s")\nt = input("t")\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n', '\ns = raw_input()\nt = raw_input()\n\ncorrect = 0\n\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        correct += 1\n\nprint(correct)\n']
2022-04-24 20:07:00.228818 size on output set 9
2022-04-24 20:07:00.228829 num operations 2
2022-04-24 20:07:00.228835 size on input set 1
2022-04-24 20:07:00.228975 using api key derek
2022-04-24 20:07:09.372665 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)-1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650830820,
  "object": "edit"
}
2022-04-24 20:07:09.372895 fix spelling mistakes 3 ["\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)-1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 20:07:09.372925 size on output set 2
2022-04-24 20:07:09.372934 size on input set 2
2022-04-24 20:07:09.373053 using api key soukgp
2022-04-24 20:07:17.753718 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i]:\n            correct += 1\n\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    forecast = [int(x) for x in sys.stdin.readline().strip().split()]\n    actual = [int(x) for x in sys.stdin.readline().strip().split()]\n\n    correct = 0\n    for i in range(len(forecast)-1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650830829,
  "object": "edit"
}
2022-04-24 20:07:17.753989 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast) - 1):\n        if forecast[i + 1] == actual[i]:\n            correct += 1\n\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    forecast = [int(x) for x in sys.stdin.readline().strip().split()]\n    actual = [int(x) for x in sys.stdin.readline().strip().split()]\n\n    correct = 0\n    for i in range(len(forecast)-1):\n        if forecast[i+1] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 20:07:17.754134 using api key kouti
2022-04-24 20:07:25.709779 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650830837,
  "object": "edit"
}
2022-04-24 20:07:25.709972 fix syntax errors 3 ["import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip()\n    actual = sys.stdin.readline().strip()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    forecast = sys.stdin.readline().strip().split()\n    actual = sys.stdin.readline().strip().split()\n\n    correct = 0\n    for i in range(len(forecast)):\n        if forecast[i] == actual[i]:\n            correct += 1\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 20:07:25.710000 size on output set 5
