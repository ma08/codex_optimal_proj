2022-04-24 19:20:28.571380 num operations 2
2022-04-24 19:20:28.571391 size on input set 1
2022-04-24 19:20:28.571506 using api key sunu
2022-04-24 19:20:37.868305 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828028,
  "object": "edit"
}
2022-04-24 19:20:37.868523 fix spelling mistakes 3 ["\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:20:37.868560 size on output set 3
2022-04-24 19:20:37.868567 size on input set 3
2022-04-24 19:20:37.868689 using api key jaanu
2022-04-24 19:20:52.129806 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())  # n: \u4eba\u6570, m: \u8cea\u554f\u6570, q: \u30af\u30a8\u30ea\u6570\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # abcd[i]: i\u756a\u76ee\u306e\u30af\u30a8\u30ea\n    abcd.sort(key=lambda x: (x[1], x[0]))  # b\u3067\u30bd\u30fc\u30c8\u3057\u3066a\u3067\u6607\u9806\u30bd\u30fc\u30c8\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]  # dp[i][j]: i\u4eba\u76ee\u307e\u3067\u306e\u8cea\u554f\u3092j\u500b\u805e\u3044\u305f\u3068\u304d\u306e\u6700\u5927\u5024\n    # dp\u30c6\u30fc\u30d6\u30eb\u306e\u521d\u671f\u5316\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:  # a: \u8cea\u554f\u3092\u3059\u308b\u4eba\u6570, b: \u56de\u7b54\u3059\u308b\u4eba\u6570, c: \u56de\u7b54\u3059\u308b\u8cea\u554f\u6570, d: \u56de\u7b54\u3059\u308b\u3068\u304d\u306e\u5831\u916c\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))  # dp[n][m]\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001dp[n]\u306e\u6700\u5927\u5024\u3092\u51fa\u529b\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main() \n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828037,
  "object": "edit"
}
2022-04-24 19:20:52.129999 fix syntax errors 3 ["\n\ndef main():\n    n, m, q = map(int, input().split())  # n: 人数, m: 質問数, q: クエリ数\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # abcd[i]: i番目のクエリ\n    abcd.sort(key=lambda x: (x[1], x[0]))  # bでソートしてaで昇順ソート\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]  # dp[i][j]: i人目までの質問をj個聞いたときの最大値\n    # dpテーブルの初期化\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:  # a: 質問をする人数, b: 回答する人数, c: 回答する質問数, d: 回答するときの報酬\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))  # dp[n][m]は存在しないので、dp[n]の最大値を出力\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main() \n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m+1):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n][:-1]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:20:52.130164 using api key jaanu
2022-04-24 19:21:04.869223 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    d = [int(input()) for _ in range(n)]\n    d.sort()\n    if n % 2 == 0:\n        ans = d[n//2] - d[n//2-1] + 1\n    else:\n        ans = 0\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[0], x[1]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828052,
  "object": "edit"
}
2022-04-24 19:21:04.869484 fix syntax errors 3 ["\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(input()) for _ in range(n)]\n    d.sort()\n    if n % 2 == 0:\n        ans = d[n//2] - d[n//2-1] + 1\n    else:\n        ans = 0\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    qs = [list(map(int, input().split())) for _ in range(q)]\n    qs.sort(key=lambda x: (x[0], x[1]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in qs:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:21:04.869673 using api key jaanu
2022-04-24 19:21:20.930986 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # \u554f\u984c\u6587\u3092\u5165\u529b\n    abcd.sort(key=lambda x: (x[1], x[0]))  # \u5165\u529b\u3092\u9ad8\u3055\u3067\u30bd\u30fc\u30c8\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]  # DP\u30c6\u30fc\u30d6\u30eb\n\n    for i in range(1, n+1):  # DP\u30c6\u30fc\u30d6\u30eb\u3092\u57cb\u3081\u308b\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:  # DP\u30c6\u30fc\u30d6\u30eb\u3092\u66f4\u65b0\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))  # DP\u30c6\u30fc\u30d6\u30eb\u306e\u6700\u7d42\u884c\u304b\u3089\u6700\u5927\u5024\u3092\u51fa\u529b\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0] * (m+1) for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d) # \u3053\u3053\u3067b\u3092\u8d85\u3048\u305f\u3068\u304d\u306bdp[b][j]\u3092\u66f4\u65b0\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001a, b, c\u304c\u91cd\u8907\u3059\u308b\u5834\u5408\u306f\u3001a<b<c\u3068\u306a\u308b\u3088\u3046\u306b\u30bd\u30fc\u30c8\u3057\u3066\u3044\u308b\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828064,
  "object": "edit"
}
2022-04-24 19:21:20.931169 fix syntax errors 3 ["\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # 問題文を入力\n    abcd.sort(key=lambda x: (x[1], x[0]))  # 入力を高さでソート\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]  # DPテーブル\n\n    for i in range(1, n+1):  # DPテーブルを埋める\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:  # DPテーブルを更新\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))  # DPテーブルの最終行から最大値を出力\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0] * (m+1) for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d) # ここでbを超えたときにdp[b][j]を更新してしまうので、a, b, cが重複する場合は、a<b<cとなるようにソートしている\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m+1):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:21:20.931215 size on output set 9
