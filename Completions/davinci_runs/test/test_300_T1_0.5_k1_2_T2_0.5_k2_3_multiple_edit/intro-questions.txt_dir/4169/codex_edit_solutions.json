["\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n", "\ndef main():\n    n, m = [int(x) for x in input().split()]\n    price_list = sorted([[int(x) for x in input().split()] for i in range(n)], key=lambda x: x[0])\n    total = 0\n    while m > 0:\n        if price_list[0][1] >= m:\n            total += price_list[0][0] * m\n            m = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            m -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    price_list = sorted([[int(x) for x in input().split()] for i in range(n)], key=lambda x: x[0]) # price_list = [[price, num], [price, num], ...]\n    total = 0\n    while m > 0:\n        if price_list[0][1] >= m:\n            total += price_list[0][0] * m\n            m = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            m -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = list()\n    for i in range(N):\n        price_list.append(tuple([int(x) for x in input().split()]))\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = [[0,0]]\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    while True:\n        try:\n            N, M = [int(x) for x in input().split()]\n            price_list = []  # \u4ef7\u683c\u5217\u8868\n            for i in range(N):\n                price_list.append([int(x) for x in input().split()])\n            price_list.sort()\n            total = 0\n            while M > 0:  # \u672a\u4e70\u6ee1\n                if price_list[0][1] >= M:\n                    total += price_list[0][0] * M\n                    M = 0\n                else:\n                    total += price_list[0][0] * price_list[0][1]\n                    M -= price_list[0][1]\n                    price_list.pop(0)\n            print(total)\n        except:\n            break\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # \u4ef7\u683c\u5217\u8868\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:  # \u672a\u4e70\u6ee1\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n", "n, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n", "\n\nn, m = map(int, input().split())\n\ncost = []\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\n\nprint(price)\n", "def main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort()\n    total = 0\n    while M > 0:\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = [int(x) for x in input().split()]\n    price_list = []  # \u4ef7\u683c\u5217\u8868\n    for i in range(N):\n        price_list.append([int(x) for x in input().split()])\n    price_list.sort(key=lambda x: x[0])\n    total = 0\n    while M > 0:  # \u672a\u4e70\u6ee1\n        if price_list[0][1] >= M:\n            total += price_list[0][0] * M\n            M = 0\n        else:\n            total += price_list[0][0] * price_list[0][1]\n            M -= price_list[0][1]\n            price_list.pop(0)\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "n, m = map(int, input().split())  # n:\u5546\u54c1\u306e\u6570 m:\u8cfc\u5165\u3067\u304d\u308b\u91cf\n\ncost = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    cost.append((a, b))\n\ncost.sort()\n\nprice = 0\nfor c in cost:\n    if m - c[1] > 0:\n        price += c[0] * c[1]\n        m -= c[1]\n    else:\n        price += c[0] * m\n        break\n\nprint(price)\n", "n, m = map(int, input().split())\ncost = []\n\nfor _ in range(n):\n  a, b = map(int, input().split())\n  cost.append((a, b))\ncost.sort()\nprice = 0\nfor c in cost:\n\n  if m - c[1] > 0:\n    price += c[0] * c[1]\n    m -= c[1]\n  else:\n    price += c[0] * m\n    break\nprint(price)\n"]