2022-04-24 19:31:47.908861 num operations 2
2022-04-24 19:31:47.908871 size on input set 1
2022-04-24 19:31:47.908986 using api key soukgp
2022-04-24 19:31:56.203746 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828708,
  "object": "edit"
}
2022-04-24 19:31:56.203994 fix spelling mistakes 3 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:31:56.204026 size on output set 3
2022-04-24 19:31:56.204034 size on input set 3
2022-04-24 19:31:56.204168 using api key soukgp
2022-04-24 19:32:03.233691 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828716,
  "object": "edit"
}
2022-04-24 19:32:03.233889 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:32:03.234075 using api key kouti
2022-04-24 19:32:10.906145 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828723,
  "object": "edit"
}
2022-04-24 19:32:10.906322 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set([i for i in range(1, n + 1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:32:10.906458 using api key kouti
2022-04-24 19:32:18.063683 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650828730,
  "object": "edit"
}
2022-04-24 19:32:18.063954 fix syntax errors 3 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(i for i in range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    victim = set(range(1, n+1))\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        victim -= set(map(int, sys.stdin.readline().split()))\n    print(len(victim))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:32:18.063985 size on output set 8
2022-04-24 19:32:18.063995 num operations 2
2022-04-24 19:32:18.064000 size on input set 1
2022-04-24 19:32:18.064137 using api key derek
2022-04-24 19:32:24.745700 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1650828738,
  "object": "edit"
}
2022-04-24 19:32:24.745900 fix spelling mistakes 3 ['\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-24 19:32:24.745925 size on output set 3
2022-04-24 19:32:24.745932 size on input set 3
2022-04-24 19:32:24.746049 using api key derek
2022-04-24 19:32:35.194541 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, K = map(int, input().split())\n\nA_list = []\nfor i in range(K):\n    d = int(input())\n    A_list.append(list(map(int, input().split())))\n\nA_set = set()\nfor i in range(K):\n    A_set.update(A_list[i])\n\nans = N - len(A_set)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_set = set()\nfor i in A:\n    A_set.update(i)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "N, K = map(int, input().split())\n\nA = set()\nfor i in range(K): \n    d = int(input()) \n    A.update(list(map(int, input().split())))\n\nans = N - len(A)\nprint(ans)\n"
    }
  ],
  "created": 1650828744,
  "object": "edit"
}
2022-04-24 19:32:35.194720 fix syntax errors 3 ['\nN, K = map(int, input().split())\n\nA_list = []\nfor i in range(K):\n    d = int(input())\n    A_list.append(list(map(int, input().split())))\n\nA_set = set()\nfor i in range(K):\n    A_set.update(A_list[i])\n\nans = N - len(A_set)\nprint(ans)\n', '\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_set = set()\nfor i in A:\n    A_set.update(i)\n\nans = N - len(A_flat)\nprint(ans)\n', 'N, K = map(int, input().split())\n\nA = set()\nfor i in range(K): \n    d = int(input()) \n    A.update(list(map(int, input().split())))\n\nans = N - len(A)\nprint(ans)\n']
2022-04-24 19:32:35.194871 using api key derek
2022-04-24 19:32:44.227073 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "N, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n\n\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\n\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1650828755,
  "object": "edit"
}
2022-04-24 19:32:44.227274 fix syntax errors 3 ['\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', 'N, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n\n\n\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\nN, K = map(int, input().split())\n\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-24 19:32:44.227432 using api key jaanu
2022-04-24 19:32:56.782560 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    A.append(list(map(int, input().split()))[1:])\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nA = [list(map(int, input().split())) for _ in range(K)]\nN, K = map(int, input().split())\n\nans = N - len(set([a for _ in A for a in _]))\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "import numpy as np\n\nN, K = map(int, input().split())\n\nA = np.empty(K, dtype=np.ndarray)\nfor i in range(K):\n    d = int(input())\n    A[i] = np.array(input().split(), dtype=int)\n\nA_flat = np.unique(A)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1650828764,
  "object": "edit"
}
2022-04-24 19:32:56.782840 fix syntax errors 3 ['\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    A.append(list(map(int, input().split()))[1:])\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nA = [list(map(int, input().split())) for _ in range(K)]\nN, K = map(int, input().split())\n\nans = N - len(set([a for _ in A for a in _]))\nprint(ans)\n', 'import numpy as np\n\nN, K = map(int, input().split())\n\nA = np.empty(K, dtype=np.ndarray)\nfor i in range(K):\n    d = int(input())\n    A[i] = np.array(input().split(), dtype=int)\n\nA_flat = np.unique(A)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-24 19:32:56.782868 size on output set 9
