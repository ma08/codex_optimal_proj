2022-04-24 18:28:26.188835 num operations 2
2022-04-24 18:28:26.188845 size on input set 1
2022-04-24 18:28:26.188959 using api key soukgp
2022-04-24 18:28:35.707469 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    }
  ],
  "created": 1650824906,
  "object": "edit"
}
2022-04-24 18:28:35.707692 fix spelling mistakes 3 ['\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n', '\n\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n', '\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n']
2022-04-24 18:28:35.707720 size on output set 2
2022-04-24 18:28:35.707726 size on input set 2
2022-04-24 18:28:35.707849 using api key kouti
2022-04-24 18:29:16.718787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    },
    {
      "index": 1,
      "text": "import math\n\na, b, h, m = map(int, input().split())\nh_angle = (h + m / 60) * 360 / 12\nm_angle = m * 360 / 60\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    },
    {
      "index": 2,
      "text": "\n# N = int(input())\n# H = list(map(int, input().split()))\n\n# ans = 0\n# curr = 0\n# for i in range(N-1):\n#     if H[i+1] <= H[i]:\n#         curr += 1\n#     else:\n#         ans = max(ans, curr)\n#         curr = 0\n# print(max(ans, curr))\n\nimport numpy as np\n\na = np.array([1, 2, 3])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.array([[1, 2], [3, 4]])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.array([[1, 2, 3], [4, 5, 6]])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.zeros((2, 2))\nprint(a)\na = np.ones((2, 2))\nprint(a)\na = np.full((2, 2), 7)\nprint(a)\na = np.eye(2)\nprint(a)\na = np.random.random((2, 2))\nprint(a)\n\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb = a[:2, 1:3]\nprint(b)\nprint(a[0, 1])\nb[0, 0] = 77\nprint(a[0, 1])\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nrow_r1 = a[1, :]\nrow_r2 = a[1:2, :]\nprint(row_r1, row_r1.shape)\nprint(row_r2, row_r2.shape)\ncol_r1 = a[:, 1]\ncol_r2 = a[:, 1:2]\nprint(col_r1, col_r1.shape)\nprint(col_r2, col_r2.shape)\na = np.array([[1, 2], [3, 4], [5, 6]])\nprint(a[[0, 1, 2], [0, 1, 0]])\nprint(np.array([a[0, 0], a[1, 1], a[2, 0]]))\nprint(a[[0, 0], [1, 1]])\nprint(np.array([a[0, 1], a[0, 1]]))\na = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\nprint(a)\nb = np.array([0, 2, 0, 1])\nprint(a[np.arange(4), b])\na[np.arange(4), b] += 10\nprint(a)\na = np.array([[1, 2], [3, 4], [5, 6]])\nbool_idx = (a > 2)\nprint(bool_idx)\nprint(a[bool_idx])\nprint(a[a > 2])\nx = np.array([1, 2])\nprint(x.dtype)\nx = np.array([1.0, 2.0])\nprint(x.dtype)\nx = np.array([1, 2], dtype=np.int64)\nprint(x.dtype)\nx = np.array([[1, 2], [3, 4]], dtype=np.float64)\ny = np.array([[5, 6], [7, 8]], dtype=np.float64)\nprint(x + y)\nprint(np.add(x, y))\nprint(x - y)\nprint(np.subtract(x, y))\nprint(x * y)\nprint(np.multiply(x, y))\nprint(x / y)\nprint(np.divide(x, y))\nprint(np.sqrt(x))\nx = np.array([[1, 2], [3, 4]])\ny = np.array([[5, 6], [7, 8]])\nv = np.array([9, 10])\nw = np.array([11, 12])\nprint(v.dot(w))\nprint(np.dot(v, w))\nprint(x.dot(v))\nprint(np.dot(x, v))\nprint(x.dot(y))\nprint(np.dot(x, y))\nx = np.array([[1, 2], [3, 4]])\nprint(np.sum(x))\nprint(np.sum(x, axis=0))\nprint(np.sum(x, axis=1))\nx = np.array([[1, 2], [3, 4]])\nprint(x)\nprint(x.T)\nv = np.array([1, 2, 3])\nprint(v)\nprint(v.T)\nx = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\nv = np.array([1, 0, 1])\ny = np.empty_like(x)\nfor i in range(4):\n    y[i, :] = x[i, :] + v\nprint(y)\nvv = np.tile(v, (4, 1))\nprint(vv)\ny = x + vv\nprint(y)\ny = x + v\nprint(y)\nv = np.array([1, 2, 3])\nw = np.array([4, 5])\nprint(np.reshape(v, (3, 1)) * w)\nx = np.array([[1, 2, 3], [4, 5, 6]])\nprint(x + v)\nprint((x.T + w).T)\nprint(x + np.reshape(w, (2, 1)))\nprint(x * 2)\n"
    }
  ],
  "created": 1650824915,
  "object": "edit"
}
2022-04-24 18:29:16.718998 fix syntax errors 3 ['N = int(input())\nH = list(map(int, input().split()))\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n', 'import math\n\na, b, h, m = map(int, input().split())\nh_angle = (h + m / 60) * 360 / 12\nm_angle = m * 360 / 60\n\nans = 0\ncurr = 0\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n', '\n# N = int(input())\n# H = list(map(int, input().split()))\n\n# ans = 0\n# curr = 0\n# for i in range(N-1):\n#     if H[i+1] <= H[i]:\n#         curr += 1\n#     else:\n#         ans = max(ans, curr)\n#         curr = 0\n# print(max(ans, curr))\n\nimport numpy as np\n\na = np.array([1, 2, 3])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.array([[1, 2], [3, 4]])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.array([[1, 2, 3], [4, 5, 6]])\nprint(a)\nprint(a.shape)\nprint(a.ndim)\na = np.zeros((2, 2))\nprint(a)\na = np.ones((2, 2))\nprint(a)\na = np.full((2, 2), 7)\nprint(a)\na = np.eye(2)\nprint(a)\na = np.random.random((2, 2))\nprint(a)\n\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb = a[:2, 1:3]\nprint(b)\nprint(a[0, 1])\nb[0, 0] = 77\nprint(a[0, 1])\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nrow_r1 = a[1, :]\nrow_r2 = a[1:2, :]\nprint(row_r1, row_r1.shape)\nprint(row_r2, row_r2.shape)\ncol_r1 = a[:, 1]\ncol_r2 = a[:, 1:2]\nprint(col_r1, col_r1.shape)\nprint(col_r2, col_r2.shape)\na = np.array([[1, 2], [3, 4], [5, 6]])\nprint(a[[0, 1, 2], [0, 1, 0]])\nprint(np.array([a[0, 0], a[1, 1], a[2, 0]]))\nprint(a[[0, 0], [1, 1]])\nprint(np.array([a[0, 1], a[0, 1]]))\na = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\nprint(a)\nb = np.array([0, 2, 0, 1])\nprint(a[np.arange(4), b])\na[np.arange(4), b] += 10\nprint(a)\na = np.array([[1, 2], [3, 4], [5, 6]])\nbool_idx = (a > 2)\nprint(bool_idx)\nprint(a[bool_idx])\nprint(a[a > 2])\nx = np.array([1, 2])\nprint(x.dtype)\nx = np.array([1.0, 2.0])\nprint(x.dtype)\nx = np.array([1, 2], dtype=np.int64)\nprint(x.dtype)\nx = np.array([[1, 2], [3, 4]], dtype=np.float64)\ny = np.array([[5, 6], [7, 8]], dtype=np.float64)\nprint(x + y)\nprint(np.add(x, y))\nprint(x - y)\nprint(np.subtract(x, y))\nprint(x * y)\nprint(np.multiply(x, y))\nprint(x / y)\nprint(np.divide(x, y))\nprint(np.sqrt(x))\nx = np.array([[1, 2], [3, 4]])\ny = np.array([[5, 6], [7, 8]])\nv = np.array([9, 10])\nw = np.array([11, 12])\nprint(v.dot(w))\nprint(np.dot(v, w))\nprint(x.dot(v))\nprint(np.dot(x, v))\nprint(x.dot(y))\nprint(np.dot(x, y))\nx = np.array([[1, 2], [3, 4]])\nprint(np.sum(x))\nprint(np.sum(x, axis=0))\nprint(np.sum(x, axis=1))\nx = np.array([[1, 2], [3, 4]])\nprint(x)\nprint(x.T)\nv = np.array([1, 2, 3])\nprint(v)\nprint(v.T)\nx = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])\nv = np.array([1, 0, 1])\ny = np.empty_like(x)\nfor i in range(4):\n    y[i, :] = x[i, :] + v\nprint(y)\nvv = np.tile(v, (4, 1))\nprint(vv)\ny = x + vv\nprint(y)\ny = x + v\nprint(y)\nv = np.array([1, 2, 3])\nw = np.array([4, 5])\nprint(np.reshape(v, (3, 1)) * w)\nx = np.array([[1, 2, 3], [4, 5, 6]])\nprint(x + v)\nprint((x.T + w).T)\nprint(x + np.reshape(w, (2, 1)))\nprint(x * 2)\n']
2022-04-24 18:29:16.719263 using api key sunu
2022-04-24 18:29:25.445128 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\n\n\n\nprint(max(ans, curr))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())  # number of elements\nH = list(map(int, input().split()))  # list of elements\n\nans = 0  # answer\ncurr = 0  # current\nfor i in range(N - 1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n"
    }
  ],
  "created": 1650824956,
  "object": "edit"
}
2022-04-24 18:29:25.445324 fix syntax errors 3 ['\n\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\n\n\n\nprint(max(ans, curr))\n', '\nN = int(input()) # number of elements\nH = list(map(int, input().split())) # list of elements\n\nans = 0 # answer\ncurr = 0 # current\nfor i in range(N-1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n', '\n\nN = int(input())  # number of elements\nH = list(map(int, input().split()))  # list of elements\n\nans = 0  # answer\ncurr = 0  # current\nfor i in range(N - 1):\n    if H[i+1] <= H[i]:\n        curr += 1\n    else:\n        ans = max(ans, curr)\n        curr = 0\nprint(max(ans, curr))\n']
2022-04-24 18:29:25.445354 size on output set 6
2022-04-24 18:29:25.445364 num operations 2
2022-04-24 18:29:25.445370 size on input set 1
2022-04-24 18:29:25.445485 using api key sunu
2022-04-24 18:29:33.400858 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if hs[n] >= hs[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if a[n] >= a[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # \u5165\u529b\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # \u8a08\u7b97\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    # \u51fa\u529b\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650824965,
  "object": "edit"
}
2022-04-24 18:29:33.401067 fix spelling mistakes 3 ["\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if hs[n] >= hs[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if a[n] >= a[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # 入力\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # 計算\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    # 出力\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:29:33.401111 size on output set 3
2022-04-24 18:29:33.401135 size on input set 3
2022-04-24 18:29:33.401258 using api key derek
2022-04-24 18:29:43.668654 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nwhile n > 0:\n    n -= 1\n    if n == 0:\n        ans += 1\n        break\n    if a[n] >= a[n-1]:\n        ans += 1\n    else:\n        break\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if a[n] >= a[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())    \n    for i in range(1, 10):\n        print(n*i)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650824973,
  "object": "edit"
}
2022-04-24 18:29:43.668854 fix syntax errors 3 ['n = int(input())\na = list(map(int, input().split()))\nans = 0\nwhile n > 0:\n    n -= 1\n    if n == 0:\n        ans += 1\n        break\n    if a[n] >= a[n-1]:\n        ans += 1\n    else:\n        break\nprint(ans)\n', "\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if a[n] >= a[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())    \n    for i in range(1, 10):\n        print(n*i)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:29:43.668993 using api key kouti
2022-04-24 18:29:52.692830 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-1):\n        if hs[i] >= hs[i+1]:\n            ans += hs[i] - hs[i+1] + 1\n            hs[i+1] = hs[i] + 1\n    ans += hs[-1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if n == 0:\n            ans += 1\n            break\n        if hs[i] >= hs[i+1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650824983,
  "object": "edit"
}
2022-04-24 18:29:52.693010 fix syntax errors 3 ["\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-1):\n        if hs[i] >= hs[i+1]:\n            ans += hs[i] - hs[i+1] + 1\n            hs[i+1] = hs[i] + 1\n    ans += hs[-1]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    hs = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if n == 0:\n            ans += 1\n            break\n        if hs[i] >= hs[i+1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:29:52.693239 using api key sunu
2022-04-24 18:30:02.861687 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # \u5165\u529b\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 1\n    # \u8a08\u7b97\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    # \u51fa\u529b\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # \u5165\u529b\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # \u8a08\u7b97\n    for i in range(n-1):\n        if h[i] >= h[i+1]:\n            ans += 1\n        else:\n            ans += 1\n        else:\n            break\n    # \u51fa\u529b\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    # \u5165\u529b\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # \u8a08\u7b97\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n - 1]:\n            ans += 1\n        else:\n            break\n    # \u51fa\u529b\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650824992,
  "object": "edit"
}
2022-04-24 18:30:02.861908 fix syntax errors 3 ["\ndef main():\n    # 入力\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 1\n    # 計算\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n-1]:\n            ans += 1\n        else:\n            break\n    # 出力\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # 入力\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # 計算\n    for i in range(n-1):\n        if h[i] >= h[i+1]:\n            ans += 1\n        else:\n            ans += 1\n        else:\n            break\n    # 出力\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # 入力\n    n = int(input())\n    h = list(map(int, input().split()))\n    ans = 0\n    # 計算\n    while n > 0:\n        n -= 1\n        if n == 0:\n            ans += 1\n            break\n        if h[n] >= h[n - 1]:\n            ans += 1\n        else:\n            break\n    # 出力\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:30:02.861952 size on output set 9
