2022-04-24 18:30:47.877293 num operations 2
2022-04-24 18:30:47.877303 size on input set 1
2022-04-24 18:30:47.877417 using api key derek
2022-04-24 18:30:55.042889 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    }
  ],
  "created": 1650825048,
  "object": "edit"
}
2022-04-24 18:30:55.043099 fix spelling mistakes 3 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n']
2022-04-24 18:30:55.043126 size on output set 1
2022-04-24 18:30:55.043133 size on input set 1
2022-04-24 18:30:55.043274 using api key kouti
2022-04-24 18:31:01.481695 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 1,
      "text": "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 2,
      "text": "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    }
  ],
  "created": 1650825055,
  "object": "edit"
}
2022-04-24 18:31:01.481892 fix syntax errors 3 ['n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', 'n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', 'n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n']
2022-04-24 18:31:01.481927 size on output set 1
2022-04-24 18:31:01.481941 num operations 2
2022-04-24 18:31:01.481949 size on input set 1
2022-04-24 18:31:01.482118 using api key derek
2022-04-24 18:31:14.751082 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n        # if the element is equal to the next element\n    while i < j:\n            # increment the index of the first element\n        if a[i] == a[i + 1]:\n        # if the element is equal to the previous element\n            i += 1\n            # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n        # if the element is less than the element next to the last element\n            j -= 1\n            # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825061,
  "object": "edit"
}
2022-04-24 18:31:14.751288 fix spelling mistakes 3 ["#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n        # if the element is equal to the next element\n    while i < j:\n            # increment the index of the first element\n        if a[i] == a[i + 1]:\n        # if the element is equal to the previous element\n            i += 1\n            # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n        # if the element is less than the element next to the last element\n            j -= 1\n            # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:31:14.751457 size on output set 3
2022-04-24 18:31:14.751473 size on input set 3
2022-04-24 18:31:14.751629 using api key jaanu
2022-04-24 18:31:26.374975 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    while i < j:\n        # if the element is equal to the next element\n        if a[i] == a[i + 1]:\n            # increment the index of the first element\n            i += 1\n        # if the element is equal to the previous element\n        elif a[j] == a[j - 1]:\n            # decrement the index of the last element\n            j -= 1\n        # if the element is less than the element next to the last element\n        elif a[i] + 1 < a[j]:\n            # increment the element\n            a[i] += 1\n            # decrement the element next to the last element\n            a[j] -= 1\n            # increment the number of moves\n            moves += 1\n        else:\n            # increment the index of the first element\n            i += 1\n            # decrement the index of the last element\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    # if the element is equal to the next element\n    while i < j:\n        # increment the index of the first element\n        if a[i] == a[i + 1]:\n        # if the element is equal to the previous element\n            i += 1\n        # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n        # if the element is less than the element next to the last element\n            j -= 1\n        # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    # if the element is equal to the next element\n    while i < j:\n        # increment the index of the first element\n        if a[i] == a[i + 1]:\n            # if the element is equal to the previous element\n            i += 1\n            # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n            # if the element is less than the element next to the last element\n            j -= 1\n        # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825074,
  "object": "edit"
}
2022-04-24 18:31:26.375187 fix syntax errors 3 ["#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    while i < j:\n        # if the element is equal to the next element\n        if a[i] == a[i + 1]:\n            # increment the index of the first element\n            i += 1\n        # if the element is equal to the previous element\n        elif a[j] == a[j - 1]:\n            # decrement the index of the last element\n            j -= 1\n        # if the element is less than the element next to the last element\n        elif a[i] + 1 < a[j]:\n            # increment the element\n            a[i] += 1\n            # decrement the element next to the last element\n            a[j] -= 1\n            # increment the number of moves\n            moves += 1\n        else:\n            # increment the index of the first element\n            i += 1\n            # decrement the index of the last element\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    # if the element is equal to the next element\n    while i < j:\n        # increment the index of the first element\n        if a[i] == a[i + 1]:\n        # if the element is equal to the previous element\n            i += 1\n        # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n        # if the element is less than the element next to the last element\n            j -= 1\n        # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort() # sort the array\n    moves = 0\n    i = 0 # index of the first element\n    # iterate over the array\n    # while the index of the first element is less than the index of the last element\n    j = len(a) - 1\n    # if the element is equal to the next element\n    while i < j:\n        # increment the index of the first element\n        if a[i] == a[i + 1]:\n            # if the element is equal to the previous element\n            i += 1\n            # decrement the index of the last element\n        elif a[j] == a[j - 1]:\n            # if the element is less than the element next to the last element\n            j -= 1\n        # increment the element\n        elif a[i] + 1 < a[j]:\n            # decrement the element next to the last element\n            a[i] += 1\n            # increment the number of moves\n            a[j] -= 1\n            moves += 1\n            # increment the index of the first element\n        else:\n            # decrement the index of the last element\n            i += 1\n            j -= 1\n    # if the number of unique elements is greater than 1\n    if len(set(a)) > 1:\n        # increment the number of moves by the difference between the length of the array and k\n        moves += len(a) - k\n    # return the number of moves\n    return moves\n\ndef main():\n    # read n and k\n    n, k = map(int, sys.stdin.readline().strip().split())\n    # read the array\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    # print the minimum number of moves\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:31:26.375433 using api key derek
2022-04-24 18:31:33.757975 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\nimport sys\n\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# https://codeforces.com/contest/1389/problem/C\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825086,
  "object": "edit"
}
2022-04-24 18:31:33.758169 fix syntax errors 3 ["#\nimport sys\n\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\n\nif __name__ == '__main__':\n    main()\n", "\n# https://codeforces.com/contest/1389/problem/C\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:31:33.758320 using api key sunu
2022-04-24 18:31:41.492389 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 < k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1 and moves < k:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825093,
  "object": "edit"
}
2022-04-24 18:31:41.492570 fix syntax errors 3 ["\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 < k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1 and moves < k:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j and moves < k:\n        if a[i] == a[j]:\n            moves += 1\n            i += 1\n        elif a[i] + 1 < a[j] and moves + 2 <= k:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:31:41.492681 size on output set 9
