["# -*- coding: utf-8 -*-\nn, k = map(int, input().split())\nh = [int(input()) for _ in range(n)]\nprint(sum(1 if i >= k else 0 for i in h))\n", "import sys\nN, K = list(map(int,sys.stdin.readline().split()))\nh = list(map(int,sys.stdin.readline().split()))\ncount = 0\n\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "\n# -*- coding: utf-8 -*-\nimport sys\n\nN, K = list(map(int,sys.stdin.readline().split()))\nh = list(map(int,sys.stdin.readline().split()))\n\ncount = 0\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "# This is a Python file\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This is a comment\n# This\n", "\n# \nimport sys\n\nN, K = list(map(int,sys.stdin.readline().split()))\nh = list(map(int,sys.stdin.readline().split()))\n\ncount = 0\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse = True)\nprint(a[0])\n", "import sys\nsys.setrecursionlimit(10**6)\nN, K = list(map(int,sys.stdin.readline().split()))\nh = list(map(int,sys.stdin.readline().split()))\ncount = 0\n\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "n=int(input())\narr=list(map(int,input().split()))\narr.sort(reverse=True)\nprint(arr[0])\n", "n=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\nprint(a[0])\nfor i in a:\n  print(i,end=\" \")\n  \n", "\nimport sys\n\nN, K = list(map(int,sys.stdin.readline().split()))\nh = list(map(int,sys.stdin.readline().split()))\n\ncount = 0\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "n, k = map(int, input().split())\nh = [int(input()) for _ in range(n)]\nprint(sum(1 if i >= k else 0 for i in h)\n", "import sys\nN, K = list(map(int, sys.stdin.readline().split()))\nh = list(map(int, sys.stdin.readline().split()))\ncount = 0\n\nfor i in range(N):\n    if h[i] >= K:\n        count += 1\n\nprint(count)\n", "n = int(input())\nx = sorted([int(input()) for _ in range(n)])\nprint(sum(x[i + 1] - x[i] for i in range(n - 1)) / (n - 1))\n", "\nimport os\n\ndef get_file_path(file_name):\n    return os.path.join(os.path.dirname(__file__), file_name)\n\ndef read_file(file_name):\n    f = open(get_file_path(file_name), \"r\")\n    content = f.read()\n    f.close()\n    return content\n\ndef write_file(file_name, content):\n    f = open(get_file_path(file_name), \"w\")\n    f.write(content)\n    f.close()\n", "#!/usr/bin/python\n\nimport os\n\ndef main():\n    print \"Checking if file exists\"\n    if os.path.isfile('/home/pi/Desktop/data/log.txt'):\n        print \"File exists\"\n    else:\n        print \"File does not exist\"\n\nif __name__ == '__main__':\n    main()\n"]