["# This is a comment\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print((x[n//2] - x[n//2 - 1]) * 2)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\n    # input\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2-1] - x[n//2 - 2])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nx = list(map(int, input().split()))  # \u8907\u6570\u6570\u5024\u5165\u529b\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2-1] - x[n//2-2])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\nx.sort()\nmin_cost = float('inf') # set to infinity\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "# This is a comment\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n / 2] - x[n / 2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#\n# Author: <Zurdi>\n\nn = int(input())\nx = list(map(int, input().split()))  # map(int, input().split())\n\nx.sort()\n\nmin_cost = float('inf')  # float('inf') is infinity\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n\na = int(input())\nb = int(input())\nc = int(input())\nx = int(input())\ncnt = 0\nfor i in range(a + 1):\n    for j in range(b + 1):\n        for k in range(c + 1):\n            if (500 * i + 100 * j + 50 * k) == x:\n                cnt += 1\nprint(cnt)\n", "\n#\n# n = int(input())\n# x = list(map(int, input().split()))\n#\n# x.sort()\n#\n# min_cost = float('inf')  # float('inf') is infinity\n# for i in range(n):\n#     cost = 0\n#     for j in range(n):\n#         cost += abs(x[j] - x[i])\n#     min_cost = min(min_cost, cost)\n#\n# print(min_cost)\n", "\n# this is a file\nimport sys\n\ndef main():\n    n = int(input())\n    print(n)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n# this is a file\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1]) \n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nx = list(map(int, input().split()))\nx.sort()\nmin_cost = float('inf')  # float('inf') is infinity\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "# This is a comment\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n // 2] - x[n // 2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"]