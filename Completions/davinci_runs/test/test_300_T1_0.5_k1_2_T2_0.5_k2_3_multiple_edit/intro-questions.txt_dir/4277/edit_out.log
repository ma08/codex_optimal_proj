2022-04-24 20:47:53.698720 num operations 2
2022-04-24 20:47:53.698730 size on input set 1
2022-04-24 20:47:53.698844 using api key soukgp
2022-04-24 20:48:03.397693 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    }
  ],
  "created": 1650833273,
  "object": "edit"
}
2022-04-24 20:48:03.397908 fix spelling mistakes 3 ['\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n', '\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n']
2022-04-24 20:48:03.397939 size on output set 3
2022-04-24 20:48:03.397950 size on input set 3
2022-04-24 20:48:03.398123 using api key kouti
2022-04-24 20:48:15.583425 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import deque\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort()\n\ndef min_expenses(N, M, A):\n    d = deque(A)\n    ans = 0\n    for _ in range(M):\n        min_cost = d.popleft()\n        ans += min_cost\n        d.append(min_cost + 1)\n    return ans\n\n\nprint(min_expenses(N, M, A))\n"
    }
  ],
  "created": 1650833283,
  "object": "edit"
}
2022-04-24 20:48:15.583610 fix syntax errors 3 ['\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n', '\n\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().split())\n\n\ndef min_expenses(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expenses(N, A, B))\n', '\n\nfrom collections import deque\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nA = list(map(int, sys.stdin.readline().split()))\n\nA.sort()\n\ndef min_expenses(N, M, A):\n    d = deque(A)\n    ans = 0\n    for _ in range(M):\n        min_cost = d.popleft()\n        ans += min_cost\n        d.append(min_cost + 1)\n    return ans\n\n\nprint(min_expenses(N, M, A))\n']
2022-04-24 20:48:15.583752 using api key kouti
2022-04-24 20:48:25.744479 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nN = int(sys.stdin.readline().rstrip())\n\n\ndef factorial(N):\n    if N == 0:\n        return 1\n    return N * factorial(N - 1)\n\n\nprint(factorial(N))\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B, count):\n    if N <= 0:\n        return count\n\n\n    if N % 2 == 0:\n        return min_expense(N//2, A, B, count+1)\n\n    if N % 2 == 1:\n        return min_expense(N-1, A, B, count+1)\n\n\nprint(min_expense(N, A, B, 0))\n"
    }
  ],
  "created": 1650833295,
  "object": "edit"
}
2022-04-24 20:48:25.744657 fix syntax errors 3 ['\nimport sys\nN = int(sys.stdin.readline().rstrip())\n\n\ndef factorial(N):\n    if N == 0:\n        return 1\n    return N * factorial(N - 1)\n\n\nprint(factorial(N))\n', '# -*- coding: utf-8 -*-\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\nimport sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B, count):\n    if N <= 0:\n        return count\n\n\n    if N % 2 == 0:\n        return min_expense(N//2, A, B, count+1)\n\n    if N % 2 == 1:\n        return min_expense(N-1, A, B, count+1)\n\n\nprint(min_expense(N, A, B, 0))\n']
2022-04-24 20:48:25.744796 using api key derek
2022-04-24 20:48:34.506060 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print(1.0)\n"
    },
    {
      "index": 1,
      "text": "import sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "import sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef minExpense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(minExpense(N, A, B))\n"
    }
  ],
  "created": 1650833305,
  "object": "edit"
}
2022-04-24 20:48:34.506246 fix syntax errors 3 ['print(1.0)\n', 'import sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', 'import sys\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\ndef minExpense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(minExpense(N, A, B))\n']
2022-04-24 20:48:34.506270 size on output set 9
2022-04-24 20:48:34.506283 num operations 2
2022-04-24 20:48:34.506289 size on input set 1
2022-04-24 20:48:34.506410 using api key jaanu
2022-04-24 20:48:41.232479 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n#\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    }
  ],
  "created": 1650833314,
  "object": "edit"
}
2022-04-24 20:48:41.232648 fix spelling mistakes 3 ['\n\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\n\nimport sys\n#\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n']
2022-04-24 20:48:41.232667 size on output set 3
2022-04-24 20:48:41.232674 size on input set 3
2022-04-24 20:48:41.232792 using api key soukgp
2022-04-24 20:48:49.160837 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n * a, b))\n"
    }
  ],
  "created": 1650833321,
  "object": "edit"
}
2022-04-24 20:48:49.161094 fix syntax errors 3 ['\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\n\nimport sys \n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n * a, b))\n']
2022-04-24 20:48:49.161240 using api key kouti
2022-04-24 20:48:55.590618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nimport sys\n#\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    }
  ],
  "created": 1650833329,
  "object": "edit"
}
2022-04-24 20:48:55.590807 fix syntax errors 3 ['#\n\nimport sys\n#\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n']
2022-04-24 20:48:55.590941 using api key jaanu
2022-04-24 20:49:04.968586 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split()) # n, a, b\ub97c int\ud615\uc73c\ub85c \uc785\ub825\ubc1b\uc544\uc11c \uc800\uc7a5\n\nprint(min(n*a, b)) # n*a\uc640 b \uc911 \uc791\uc740 \uac12\uc744 \ucd9c\ub825\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())  # \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub41c \uc815\uc218 3\uac1c \ubc1b\uae30\n\nprint(min(n * a, b))  # n * a, b \uc911 \uc791\uc740 \uac12 \ucd9c\ub825\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    }
  ],
  "created": 1650833335,
  "object": "edit"
}
2022-04-24 20:49:04.968782 fix syntax errors 3 ['\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split()) # n, a, b를 int형으로 입력받아서 저장\n\nprint(min(n*a, b)) # n*a와 b 중 작은 값을 출력\n', 'import sys\n\nn, a, b = map(int, sys.stdin.readline().split())  # 공백으로 구분된 정수 3개 받기\n\nprint(min(n * a, b))  # n * a, b 중 작은 값 출력\n', 'import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n']
2022-04-24 20:49:04.968812 size on output set 8
