["\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n % 2) * a\n    if a > b:\n        min_cost = min(min_cost, (n // 2) * a + (n % 2) * b)\n    \n    print(min_cost)\n", "\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()] \n    \n    min_bottles_2l = n//2\n    min_cost = min_bottles_2l * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n", "The file command is a standard program on Unix-like operating systems that prints the file type of a file.\nIt is similar to the Unix stat command.\n\nThe file command is available on most Unix-like operating systems.\nIt is a standard command on the Single Unix Specification and is defined in POSIX.1-2008.\n\nThe file command was originally written by Ian F. Darwin.\n\nFor example, when run on the file /bin/ls, the file command prints:\n\n$ file /bin/ls\n/bin/ls: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped\n\nThe file command uses the /etc/magic file to determine the file type of a file.\n\nThe file command has a number of options, including:\n\n* -b for \"brief\" output, which doesn't print the file name\n* -c for \"checking\" output, which is equivalent to the default output\n* -f for \"file\" output, which allows the user to specify a file containing the names of files to print the file types of\n* -F for \"separator\" output, which adds a separator between the file name and the file type\n* -i for \"mime\" output, which prints the output in the format of a MIME Content-type\n* -m for \"magic\" output, which allows the user to specify an alternate magic file to use\n* -z for \"zero\" output, which prints a zero byte (ASCII NUL) after each file name instead of the usual newline\n\nSee also\n\n* The file utility in OpenBSD\n\nReferences\n\n- file (1) (http://linux.die.net/man/1/file).\nLinux Programmer's Manual.\n- file (1) (http://man.cx/file(1)).\nOpenBSD General Commands Manual.\n- Darwin, Ian F.. file(1) (http://www.darwinsys.com/file/).\nDarwin Systems.\n- file (1) (http://netbsd.gw.com/cgi-bin/man-cgi?file+1+NetBSD-current).\nNetBSD General Commands Manual.\n- file (1) (http://www.freebsd.org/cgi/man.cgi?query=file&apropos=0&sektion=0&manpath=FreeBSD+8.1-RELEASE&arch=default&format=html).\nFreeBSD General Commands Manual.\n- file (1) (http://www.openbsd.org/cgi-bin/man.cgi?query=file&apropos=0&sektion=0&manpath=OpenBSD+4.8&arch=i386&format=html).\nOpenBSD General Commands Manual.\n- file (1) (http://www.openbsd.org/cgi-bin/man.cgi?query=file&apropos=0&sektion=0&manpath=OpenBSD+4.8&arch=amd64&format=html).\nOpenBSD General Commands Manual.\n- file (1) (http://www.openbsd.org/cgi-bin/man.cgi?query=file&apropos=0&sektion=0&manpath=OpenBSD+4.8&arch=sparc64&format=html).\nOpenBSD General Commands Manual.\n- file (http://www.opengroup.org/onlinepubs/000095399/utilities/file.html).\nThe Open Group Base Specifications Issue 7.\n- file (1) (http://www.opengroup.org/onlinepubs/9699919799/utilities/file.html).\nIEEE Std 1003.1-2008.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\n- file (1) (http://www.mkssoftware.com/docs/man1/file.1.asp).\nMKS Toolkit for Enterprise Developers.\nExternal links\n\n* file (http://www.darwinsys.com/file/)\n* file (http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/file.1) manual page in OpenBSD\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <time.h>\n#include \"file.h\"\n\nint main()\n{\n\tint i;\n\tint j;\n\tint n;\n\tint n1;\n\tint n2;\n\tint n3;\n\tint n4;\n\tint n5;\n\tint n6;\n\tint n7;\n\tint n8;\n\tint n9;\n\tint n10;\n\tint n11;\n\tint n12;\n\tint n13;\n\tint n14;\n\tint n15;\n\tint n16;\n\tint n17;\n\tint n18;\n\tint n19;\n\tint n20;\n\tint n21;\n\tint n22;\n\tint n23;\n\tint n24;\n\tint n25;\n\tint n26;\n\tint n27;\n\tint n28;\n\tint n29;\n\tint n30;\n\tint n31;\n\tint n32;\n\tint n33;\n\tint n34;\n\tint n35;\n\tint n36;\n\tint n37;\n\tint n38;\n\tint n39;\n\tint n40;\n\tint n41;\n\tint n42;\n\tint n43;\n\tint n44;\n\tint n45;\n\tint n46;\n\tint n47;\n\tint n48;\n\tint n49;\n\tint n50;\n\tint n51;\n\tint n52;\n\tint n53;\n\tint n54;\n\tint n55;\n\tint n56;\n\tint n57;\n\tint n58;\n\tint n59;\n\tint n60;\n\tint n61;\n\tint n62;\n\tint n63;\n\tint n64;\n\tint n65;\n\tint n66;\n\tint n67;\n\tint n68;\n\tint n69;\n\tint n70;\n\tint n71;\n\tint n72;\n\tint n73;\n\tint n74;\n\tint n75;\n\tint n76;\n\tint n77;\n\tint n78;\n\tint n79;\n\tint n80;\n\tint n81;\n\tint n82;\n\tint n83;\n\tint n84;\n\tint n85;\n\tint n86;\n\tint n87;\n\tint n88;\n\tint n89;\n\tint n90;\n\tint n91;\n\tint n92;\n\tint n93;\n\tint n94;\n\tint n95;\n\tint n96;\n\tint n97;\n\tint n98;\n\tint n99;\n\tint n100;\n\n\tsrand((unsigned)time(NULL));\n\n\tfor(i = 0; i < 100; i++)\n\t{\n\t\tn = rand() % 100 + 1;\n\t\tn1 = rand() % 100 + 1;\n\t\tn2 = rand() % 100 + 1;\n\t\tn3 = rand() % 100 + 1;\n\t\tn4 = rand() % 100 + 1;\n\t\tn5 = rand() % 100 + 1;\n\t\tn6 = rand() % 100 + 1;\n\t\tn7 = rand() % 100 + 1;\n\t\tn8 = rand() % 100 + 1;\n\t\tn9 = rand() % 100 + 1;\n\t\tn10 = rand() % 100 + 1;\n\t\tn11 = rand() % 100 + 1;\n\t\tn12 = rand() % 100 + 1;\n\t\tn13 = rand() % 100 + 1;\n\t\tn14 = rand() % 100 + 1;\n\t\tn15 = rand() % 100 + 1;\n\t\tn16 = rand() % 100 + 1;\n\t\tn17 = rand() % 100 + 1;\n\t\tn18 = rand() % 100 + 1;\n\t\tn19 = rand() % 100 + 1;\n\t\tn20 = rand() % 100 + 1;\n\t\tn21 = rand() % 100 + 1;\n\t\tn22 = rand() % 100 + 1;\n\t\tn23 = rand() % 100 + 1;\n\t\tn24 = rand() % 100 + 1;\n\t\tn25 = rand() % 100 + 1;\n\t\tn26 = rand() % 100 + 1;\n\t\tn27 = rand() % 100 + 1;\n\t\tn28 = rand() % 100 + 1;\n\t\tn29 = rand() % 100 + 1;\n\t\tn30 = rand() % 100 + 1;\n\t\tn31 = rand() % 100 + 1;\n\t\tn32 = rand() % 100 + 1;\n\t\tn33 = rand() % 100 + 1;\n\t\tn34 = rand() % 100 + 1;\n\t\tn35 = rand() % 100 + 1;\n\t\tn36 = rand() % 100 + 1;\n\t\tn37 = rand() % 100 + 1;\n\t\tn38 = rand() % 100 + 1;\n\t\tn39 = rand() % 100 + 1;\n\t\tn40 = rand() % 100 + 1;\n\t\tn41 = rand() % 100 + 1;\n\t\tn42 = rand() % 100 + 1;\n\t\tn43 = rand() % 100 + 1;\n\t\tn44 = rand() % 100 + 1;\n\t\tn45 = rand() % 100 + 1;\n\t\tn46 = rand() % 100 + 1;\n\t\tn47 = rand() % 100 + 1;\n\t\tn48 = rand() % 100 + 1;\n\t\tn49 = rand() % 100 + 1;\n\t\tn50 = rand() % 100 + 1;\n\t\tn51 = rand() % 100 + 1;\n\t\tn52 = rand() % 100 + 1;\n\t\tn53 = rand() % 100 + 1;\n\t\tn54 = rand() % 100 + 1;\n\t\tn55 = rand() % 100 + 1;\n\t\tn56 = rand() % 100 + 1;\n\t\tn57 = rand() % 100 + 1;\n\t\tn58 = rand() % 100 + 1;\n\t\tn59 = rand() % 100 + 1;\n\t\tn60 = rand() % 100 + 1;\n\t\tn61 = rand() % 100 + 1;\n\t\tn62 = rand() % 100 + 1;\n\t\tn63 = rand() % 100 + 1;\n\t\tn64 = rand() % 100 + 1;\n\t\tn65 = rand() % 100 + 1;\n\t\tn66 = rand() % 100 + 1;\n\t\tn67 = rand() % 100 + 1;\n\t\tn68 = rand() % 100 + 1;\n\t\tn69 = rand() % 100 + 1;\n\t\tn70 = rand() % 100 + 1;\n\t\tn71 = rand() % 100 + 1;\n\t\tn72 = rand() % 100 + 1;\n\t\tn73 = rand() % 100 + 1;\n\t\tn74 = rand() % 100 + 1;\n\t\tn75 = rand() % 100 + 1;\n\t\tn76 = rand() % 100 + 1;\n\t\tn77 = rand() % 100 + 1;\n\t\tn78 = rand() % 100 + 1;\n\t\tn79 = rand() % 100 + 1;\n\t\tn80 = rand() % 100 + 1;\n\t\tn81 = rand() % 100 + 1;\n\t\tn82 = rand() % 100 + 1;\n\t\tn83 = rand() % 100 + 1;\n\t\tn84 = rand() % 100 + 1;\n\t\tn85 = rand() % 100 + 1;\n\t\tn86 = rand() % 100 + 1;\n\t\tn\n", "\n\n# Solution \nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "import math\nprint(math.factorial(int(input())))\n", "\n\n# solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]    \n    print(n//2*min(a,b) + (n%2)*max(a,b))\n", "\n# solution\nfor _ in range(int(input())):\n    n, a, b = map(int, input().split())\n    x = n // 2\n    y = n % 2\n    cost = x * min(a * 2, b) + y * a\n    print(cost)\n", "\nq = int(input())\n\nfor i in range(q):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    \n    print(a)\n", "\n\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "#coding:utf-8\n\n#Solution \nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    print(min(n * a, n // 2 * b + n % 2 * a))\n", "\n#Solution \nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n#Solution 1\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"]