2022-04-24 14:47:42.182617 num operations 2
2022-04-24 14:47:42.182635 size on input set 1
2022-04-24 14:47:42.182766 using api key kouti
2022-04-24 14:47:52.136868 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and\n# friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts\n# and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    }
  ],
  "created": 1650811662,
  "object": "edit"
}
2022-04-24 14:47:52.137081 fix spelling mistakes 3 ['\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and\n# friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts\n# and friends who don\'t know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n']
2022-04-24 14:47:52.137118 size on output set 3
2022-04-24 14:47:52.137126 size on input set 3
2022-04-24 14:47:52.137251 using api key derek
2022-04-24 14:48:05.581698 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\n\ndef find_gifts(f):\n    n = len(f)\n    no_gift_to = []\n    no_gift_from = []\n    for i in range(n):\n        if f[i] == 0:\n            no_gift_to.append(i)\n        else:\n            if f[f[i] - 1] == 0:\n                no_gift_from.append(f[i] - 1)\n\n    # Give gifts to friends who don't know who to give gifts to\n    for i in range(len(no_gift_to)):\n        f[no_gift_from[i]] = no_gift_to[i] + 1\n\n    # Give gifts to friends who don't know who gives them gifts\n    for i in range(len(no_gift_to)):\n        f[no_gift_to[i]] = no_gift_from[i] + 1\n\n    return f\n\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\nprint(\" \".join(str(x) for x in find_gifts(f)))\n"
    },
    {
      "index": 1,
      "text": "\n# \nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nf = [int(x) for x in input().split()]\nprint(f)\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == -1:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == -1:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    }
  ],
  "created": 1650811672,
  "object": "edit"
}
2022-04-24 14:48:05.581896 fix syntax errors 3 ['\n\nn = int(input())\n\n\ndef find_gifts(f):\n    n = len(f)\n    no_gift_to = []\n    no_gift_from = []\n    for i in range(n):\n        if f[i] == 0:\n            no_gift_to.append(i)\n        else:\n            if f[f[i] - 1] == 0:\n                no_gift_from.append(f[i] - 1)\n\n    # Give gifts to friends who don\'t know who to give gifts to\n    for i in range(len(no_gift_to)):\n        f[no_gift_from[i]] = no_gift_to[i] + 1\n\n    # Give gifts to friends who don\'t know who gives them gifts\n    for i in range(len(no_gift_to)):\n        f[no_gift_to[i]] = no_gift_from[i] + 1\n\n    return f\n\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\nprint(" ".join(str(x) for x in find_gifts(f)))\n', '\n# \nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\n\nn = int(input())\nf = [int(x) for x in input().split()]\nprint(f)\n# Find friends who don\'t know who to give gifts to and friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == -1:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == -1:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n']
2022-04-24 14:48:05.582131 using api key soukgp
2022-04-24 14:48:12.184472 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and\n# friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and\n# friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and\n# friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    }
  ],
  "created": 1650811685,
  "object": "edit"
}
2022-04-24 14:48:12.184682 fix syntax errors 3 ['\n\nn = int(input())\n\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and\n# friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '#!/usr/bin/env python3\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and\n# friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts to and\n# friends who don\'t know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n']
2022-04-24 14:48:12.184843 using api key derek
2022-04-24 14:48:20.727578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts\n# and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts.\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to.\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts\n# and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n"
    }
  ],
  "created": 1650811692,
  "object": "edit"
}
2022-04-24 14:48:20.727757 fix syntax errors 3 ['\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts\n# and friends who don\'t know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts and friends who don\'t know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts.\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to.\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n', '\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don\'t know who to give gifts\n# and friends who don\'t know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don\'t know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don\'t know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(" ".join(str(x) for x in f))\n']
2022-04-24 14:48:20.727854 size on output set 8
2022-04-24 14:48:20.727866 num operations 2
2022-04-24 14:48:20.727872 size on input set 1
2022-04-24 14:48:20.728006 using api key kouti
2022-04-24 14:48:28.012548 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    }
  ],
  "created": 1650811700,
  "object": "edit"
}
2022-04-24 14:48:28.012749 fix spelling mistakes 3 ['\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n', "\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"]
2022-04-24 14:48:28.012777 size on output set 3
2022-04-24 14:48:28.012785 size on input set 3
2022-04-24 14:48:28.012900 using api key sunu
2022-04-24 14:48:35.713786 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 1,
      "text": "#!/bin/python3\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input(\"Enter number of friends: \"))\nfriends = list(map(int, input(\"Enter gifts: \").split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(\"Gifts: \", *friends)\n"
    }
  ],
  "created": 1650811708,
  "object": "edit"
}
2022-04-24 14:48:35.713958 fix syntax errors 3 ["\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "#!/bin/python3\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", '\n\nn = int(input("Enter number of friends: "))\nfriends = list(map(int, input("Enter gifts: ").split()))\n\n# Find the first friend who has a gift \ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don\'t have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint("Gifts: ", *friends)\n']
2022-04-24 14:48:35.714117 using api key soukgp
2022-04-24 14:48:43.675368 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n\ti += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n\tif friends[j - 1] == 0:\n\t\tfriends[j - 1] = i + 1\n\t\ti += 1\n\tj += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\n\nprint(*friends)\n"
    }
  ],
  "created": 1650811715,
  "object": "edit"
}
2022-04-24 14:48:43.675547 fix syntax errors 3 ['\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n', '\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n\ti += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n\tif friends[j - 1] == 0:\n\t\tfriends[j - 1] = i + 1\n\t\ti += 1\n\tj += 1\n\n# Print out the friends\nprint(*friends)\n', '\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who does not have a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who do not have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\n\nprint(*friends)\n']
2022-04-24 14:48:43.675692 using api key soukgp
2022-04-24 14:49:21.149411 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"
    },
    {
      "index": 1,
      "text": "\n# n = int(input())\n# friends = list(map(int, input().split()))\n\n# # Find the first friend who has a gift\n# i = 0\n# while friends[i] != 0:\n#     i += 1\n\n# # Assign gifts to friends who don't have one\n# j = 1\n# while j <= n:\n#     if friends[j - 1] == 0:\n#         friends[j - 1] = i + 1\n#         i += 1\n#     j += 1\n\n# # Print out the friends\n# print(*friends)\n\n# import math\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n"
    },
    {
      "index": 2,
      "text": "import sys\nimport math\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nif a <= b and a <= c and a <= d and a <= e:\n    print(a)\nelif b <= a and b <= c and b <= d and b <= e:\n    print(b)\nelif c <= a and c <= b and c <= d and c <= e:\n    print(c)\nelif d <= a and d <= b and d <= c and d <= e:\n    print(d)\nelse:\n    print(e)\n"
    }
  ],
  "created": 1650811723,
  "object": "edit"
}
2022-04-24 14:49:21.149737 fix syntax errors 3 ["n = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "\n# n = int(input())\n# friends = list(map(int, input().split()))\n\n# # Find the first friend who has a gift\n# i = 0\n# while friends[i] != 0:\n#     i += 1\n\n# # Assign gifts to friends who don't have one\n# j = 1\n# while j <= n:\n#     if friends[j - 1] == 0:\n#         friends[j - 1] = i + 1\n#         i += 1\n#     j += 1\n\n# # Print out the friends\n# print(*friends)\n\n# import math\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n\n# def is_prime(n):\n#     if n == 1:\n#         return False\n#     for i in range(2, int(math.sqrt(n)) + 1):\n#         if n % i == 0:\n#             return False\n#     return True\n\n# n = int(input())\n# i = 2\n# j = n\n# while i < j:\n#     if is_prime(i) and is_prime(j):\n#         print(i, j)\n#         break\n#     i += 1\n#     j -= 1\n", 'import sys\nimport math\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nif a <= b and a <= c and a <= d and a <= e:\n    print(a)\nelif b <= a and b <= c and b <= d and b <= e:\n    print(b)\nelif c <= a and c <= b and c <= d and c <= e:\n    print(c)\nelif d <= a and d <= b and d <= c and d <= e:\n    print(d)\nelse:\n    print(e)\n']
2022-04-24 14:49:21.149802 size on output set 9
