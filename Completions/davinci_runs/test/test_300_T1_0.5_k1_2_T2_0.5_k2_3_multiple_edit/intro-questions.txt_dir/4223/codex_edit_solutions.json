["\nfrom collections import Counter\n\n# test\n\nn = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i - 1\n\nprint(counter)\n", "from collections import Counter\n\nn = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i - 1\n\nprint(counter)\n", "n = int(input())\nprint(n * (n - 1) // 2)\n", "from collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s)\n\nans = n - sum(c.values())\n\nprint(ans)\n", "n = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i//2\n\nprint(counter)\n", "\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s)\n\nans = c['R'] * c['G'] * c['B']\n\nprint(ans)\n", "\nfrom collections import Counter\n\nn = int(input())\ns = input()\nc = Counter(s)\nans = c['R'] * c['G'] * c['B']\nprint(ans)\n", "\n\nn = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i - 1\n\nprint(counter)\n", "\nimport math\na, b = map(int, input().split())\nprint(math.ceil((a + b) / 2))\n", "\n\nn = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i//2\n\nprint(counter)\n", "\n\n# from collections import Counter \n\n# n = int(input())\n# s = input()\n\n# counter = 0\n\nfor i in Counter(s).values():\n    counter += i - 1\n\nprint(counter)\n", "#!/usr/bin/python3\nfrom collections import Counter\nn = int(input())\ns = input()\ncounter = 0\nfor i in Counter(s).values():\n    counter += i - 1\nprint(counter)\n", "\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\ncounter = 0\n\nfor i in Counter(s).values():\n    counter += i - 1\n\nprint(counter)\n", "\nfrom collections import Counter\n\nn = int(input())\ns = input()\n\nc = Counter(s)\n\nans = n - sum(c.values())\n\nprint(ans)\n"]