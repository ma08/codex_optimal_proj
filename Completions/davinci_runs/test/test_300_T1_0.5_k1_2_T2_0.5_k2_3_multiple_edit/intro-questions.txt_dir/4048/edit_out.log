2022-04-24 15:42:47.036036 num operations 2
2022-04-24 15:42:47.036057 size on input set 1
2022-04-24 15:42:47.036199 using api key jaanu
2022-04-24 15:42:55.790829 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2;\n        moves += 1;\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math \n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n#\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650814967,
  "object": "edit"
}
2022-04-24 15:42:55.791040 fix spelling mistakes 3 ['\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2;\n        moves += 1;\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nimport math \n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nimport math\n#\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-24 15:42:55.791067 size on output set 3
2022-04-24 15:42:55.791073 size on input set 3
2022-04-24 15:42:55.791202 using api key kouti
2022-04-24 15:43:02.881687 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650814975,
  "object": "edit"
}
2022-04-24 15:43:02.881885 fix syntax errors 3 ['\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', 'n = int(input())\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-24 15:43:02.882079 using api key jaanu
2022-04-24 15:43:09.928579 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650814982,
  "object": "edit"
}
2022-04-24 15:43:09.928770 fix syntax errors 3 ['\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n != 1:\n    if n % 2 == 0 or n == 3:\n        n = n // 2\n        moves += 1\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-24 15:43:09.928909 using api key derek
2022-04-24 15:43:20.761764 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\nimport math \n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "\n#\n# import math\n#\n# n = int(input())\n#\n# if n == 1:\n#     print(0)\n#     exit()\n#\n# moves = 0\n#\n# while n > 1:\n#     moves += 1\n#     if n % 2 == 0:\n#         n = n // 2\n#     else:\n#         n += 1\n#\n# print(moves)\n"
    }
  ],
  "created": 1650814989,
  "object": "edit"
}
2022-04-24 15:43:20.761967 fix syntax errors 3 ['n = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nimport math \n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n#\n# import math\n#\n# n = int(input())\n#\n# if n == 1:\n#     print(0)\n#     exit()\n#\n# moves = 0\n#\n# while n > 1:\n#     moves += 1\n#     if n % 2 == 0:\n#         n = n // 2\n#     else:\n#         n += 1\n#\n# print(moves)\n']
2022-04-24 15:43:20.761994 size on output set 6
2022-04-24 15:43:20.762005 num operations 2
2022-04-24 15:43:20.762010 size on input set 1
2022-04-24 15:43:20.762159 using api key jaanu
2022-04-24 15:43:27.601250 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef min_moves(n): \n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650815000,
  "object": "edit"
}
2022-04-24 15:43:27.601442 fix spelling mistakes 3 ["\n\n\ndef min_moves(n): \n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:43:27.601569 size on output set 2
2022-04-24 15:43:27.601578 size on input set 2
2022-04-24 15:43:27.601736 using api key soukgp
2022-04-24 15:43:36.470611 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while x * y != n:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n)) \n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef min_moves(n): \n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650815007,
  "object": "edit"
}
2022-04-24 15:43:36.470795 fix syntax errors 3 ["\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while x * y != n:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n)) \n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n): \n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:43:36.470938 using api key jaanu
2022-04-24 15:43:48.447792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y or x == y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def min_moves(n):\n    moves = 0\n    while n > 1:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            n -= 1\n        moves += 1\n    return moves\n\n\n# def min_moves(n):\n#     x, y = 1, 1\n#     moves = 0\n#     while True:\n#         moves += 1\n#         if n == x * y:\n#             return moves\n#         elif n < x * y:\n#             y -= 1\n#             x += 1\n#         else:\n#             x += 1\n\n\ndef main():\n    n = int(input().strip())\n    print(min_moves(n), end=\"\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650815016,
  "object": "edit"
}
2022-04-24 15:43:48.448004 fix syntax errors 3 ["\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y or x == y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", 'def min_moves(n):\n    moves = 0\n    while n > 1:\n        if n % 2 == 0:\n            n //= 2\n        else:\n            n -= 1\n        moves += 1\n    return moves\n\n\n# def min_moves(n):\n#     x, y = 1, 1\n#     moves = 0\n#     while True:\n#         moves += 1\n#         if n == x * y:\n#             return moves\n#         elif n < x * y:\n#             y -= 1\n#             x += 1\n#         else:\n#             x += 1\n\n\ndef main():\n    n = int(input().strip())\n    print(min_moves(n), end="")\n\n\nif __name__ == \'__main__\':\n    main()\n', "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:43:48.448036 size on output set 6
