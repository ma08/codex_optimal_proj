["\nn = int(input())\na = list(map(int, input().split()))\n\ndef remove_duplicates(a):\n    b = []\n    for i in a:\n        if i in b:\n            continue\n        else:\n            b.append(i)\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "import sys\n\nfrom collections import deque\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = deque() # \u043e\u0447\u0435\u0440\u0435\u0434\u044c\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "#!/usr/bin/env python3\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(set(nums))\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "#include <iostream>\n#include <deque>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nfrom collections import deque \ndef main(): \n    n = int(input()) \n    nums = deque() \n    for i in range(n): \n        nums.append(int(input())) \n    nums = list(dict.fromkeys(nums)) \n    print(len(nums)) \n    print(*nums) \nmain()\n", "\ndef remove_duplicates(a):\n    b = []\n    for i in a:\n        if i in b:\n            continue\n        else:\n            b.append(i)\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n\n# def remove_duplicates(a):\n#     b = []\n#     for i in a:\n#         if i in b:\n#             continue\n#         else:\n#             b.append(i)\n#     return b\n\n# b = remove_duplicates(a)\n\nb = []\nfor i in a:\n    if i in b:\n        continue\n    else:\n        b.append(i)\n\nprint(len(b))\nprint(*b)\n", "#!/usr/bin/env python3\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicate(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicate(a)\nprint(len(b))\nprint(*b)\n", "from collections import deque \ndef main(): \n    n = int(input()) \n    nums = deque() \n    for i in range(n): \n        nums.append(int(input())) \n    nums = list(dict.fromkeys(nums)) \n    print(len(nums)) \n    print(*nums) \nmain() \n", "\n\nfrom collections import deque\n\ndef main():\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    d = int(input())\n    e = int(input())\n    print(min(a, b, c, d, e), max(a, b, c, d, e))\n\nmain()\n", "\nfrom collections import deque\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums))\n    print(len(nums))\n    print(*nums)\nmain()\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n", "# this is a comment\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(*b)\n", "from collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(dict.fromkeys(nums)) # \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\n    print(len(nums))\n    print(*nums)\n\nmain()\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicate(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicate(a)\nprint(len(b))\nprint(*b)\n", "#this is a comment\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef remove_duplicates(a):\n    b = []\n    for i in range(len(a)):\n        if a[i] in b:\n            continue\n        else:\n            b.append(a[i])\n    return b\n\nb = remove_duplicates(a)\nprint(len(b))\nprint(' '.join([str(x) for x in b]))\n", "\n\nfrom collections import deque\n\ndef main():\n    n = int(input())\n    nums = deque()\n    for i in range(n):\n        nums.append(int(input()))\n    nums = list(set(nums))\n    print(len(nums))\n    print(nums)\n\nmain()\n"]