2022-04-24 17:07:09.116988 num operations 2
2022-04-24 17:07:09.117008 size on input set 1
2022-04-24 17:07:09.117141 using api key sunu
2022-04-24 17:07:16.850449 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820029,
  "object": "edit"
}
2022-04-24 17:07:16.850692 fix spelling mistakes 3 ["\n\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:16.850723 size on output set 2
2022-04-24 17:07:16.850731 size on input set 2
2022-04-24 17:07:16.850849 using api key jaanu
2022-04-24 17:07:23.303297 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820036,
  "object": "edit"
}
2022-04-24 17:07:23.303471 fix syntax errors 3 ["import sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_be_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_be_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:23.303610 using api key soukgp
2022-04-24 17:07:31.702066 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\nimport collections\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_counter = collections.Counter(s)\n    t_counter = collections.Counter(t)\n    return s_counter == t_counter\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = sorted(list(s))\n    t_list = sorted(list(t))\n    return s_list == t_list \n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820043,
  "object": "edit"
}
2022-04-24 17:07:31.702256 fix syntax errors 3 ["\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = list(s)\n    t_list = list(t)\n    s_list.sort()\n    t_list.sort()\n    return s_list == t_list\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport collections\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_counter = collections.Counter(s)\n    t_counter = collections.Counter(t)\n    return s_counter == t_counter\n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n", "\nimport sys\n\ndef can_equal(s, t):\n    if len(s) != len(t):\n        return False\n    s_list = sorted(list(s))\n    t_list = sorted(list(t))\n    return s_list == t_list \n\ns = sys.stdin.readline().rstrip()\nt = sys.stdin.readline().rstrip()\n\nif can_equal(s, t):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:31.702284 size on output set 5
2022-04-24 17:07:31.702296 num operations 2
2022-04-24 17:07:31.702303 size on input set 1
2022-04-24 17:07:31.702427 using api key kouti
2022-04-24 17:07:39.749072 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820051,
  "object": "edit"
}
2022-04-24 17:07:39.749358 fix spelling mistakes 3 ["\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:39.749394 size on output set 2
2022-04-24 17:07:39.749401 size on input set 2
2022-04-24 17:07:39.749524 using api key soukgp
2022-04-24 17:07:47.148185 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n\n\n\n# -----Answer-----\n\ns = input()\n\n\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n\n\n\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\u3059\u308b\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820059,
  "object": "edit"
}
2022-04-24 17:07:47.148365 fix syntax errors 3 ["\n\n\n\n\n\n# -----Answer-----\n\ns = input()\n\n\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n\n\n\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソートする\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定する\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:47.148506 using api key soukgp
2022-04-24 17:07:56.626880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a(\u30bd\u30fc\u30c8\u3057\u3066\u6bd4\u8f03)\nif sorted(s) == sorted(t):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n# -----Answer----- \n\ns = input()\nt = input()\n\n# \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# \u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u5224\u5b9a\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650820067,
  "object": "edit"
}
2022-04-24 17:07:56.627051 fix syntax errors 3 ["\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列が等しいかどうか判定(ソートして比較)\nif sorted(s) == sorted(t):\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# -----Answer-----\n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n", "\n# -----Answer----- \n\ns = input()\nt = input()\n\n# 文字列をソート\ns_sorted = sorted(s)\nt_sorted = sorted(t)\n\n# 文字列が等しいかどうか判定\nif s_sorted == t_sorted:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 17:07:56.627081 size on output set 6
