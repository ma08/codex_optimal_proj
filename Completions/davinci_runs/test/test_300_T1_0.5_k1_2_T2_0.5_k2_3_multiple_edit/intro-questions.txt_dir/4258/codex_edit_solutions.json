["import fs from \"fs\";\n\nconst file = fs.readFileSync(\"./file.js\", \"utf8\");\nconsole.log(file);\n\nfs.readFile(\"./file.js\", \"utf8\", (err, file) => {\n  console.log(file);\n});\n\nfs.readdir(\"./\", (err, files) => {\n  console.log(files);\n});\n\nfs.writeFile(\"./file.txt\", \"Hello World\", err => {\n  if (err) throw err;\n});\n\nfs.appendFile(\"./file.txt\", \"Hello World\", err => {\n  if (err) throw err;\n});\n\nfs.rename(\"./file.txt\", \"./renamed.txt\", err => {\n  if (err) throw err;\n});\n\nfs.unlink(\"./renamed.txt\", err => {\n  if (err) throw err;\n});\n\nfs.mkdir(\"./new-directory\", err => {\n  if (err) throw err;\n});\n\nfs.rmdir(\"./new-directory\", err => {\n  if (err) throw err;\n});\n", "// import fs from 'fs';\n\n// const file = fs.readFileSync('./file.js', 'utf8');\n// console.log(file);\n\n// fs.readFile('./file.js', 'utf8', (err, file) => {\n//   console.log(file);\n// });\n\n// fs.readdir('./', (err, files) => {\n//   console.log(files);\n// });\n\n// fs.writeFile('./file.txt', 'Hello World', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.appendFile('./file.txt', 'Hello World', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.rename('./file.txt', './renamed.txt', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.unlink('./renamed.txt', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.mkdir('./newDirectory', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.rmdir('./newDirectory', (err) => {\n//   if (err) throw err;\n// });\n", "#!/usr/bin/env python3\n\n\"\"\"\nZetCode wxPython tutorial\n\nIn this example, we create a simple\nwindow in wxPython.\n\nauthor: Jan Bodnar\nwebsite: www.zetcode.com\nlast modified: April 2018\n\"\"\"\n\nimport wx\n\n\nclass Example(wx.Frame):\n\n    def __init__(self, *args, **kw):\n        super(Example, self).__init__(*args, **kw) \n        self.InitUI()\n\n    def InitUI(self):\n\n        menubar = wx.MenuBar()\n        fileMenu = wx.Menu()\n        fileItem = fileMenu.Append(wx.ID_EXIT, '&Quit', 'Quit application')\n        menubar.Append(fileMenu, '&File')\n        self.SetMenuBar(menubar)\n\n        self.Bind(wx.EVT_MENU, self.OnQuit, fileItem)\n\n        self.SetSize((350, 250))\n        self.SetTitle('Simple menu')\n        self.Centre()\n\n    def OnQuit(self, event):\n        self.Close()\n\n\ndef main():\n\n    app = wx.App()\n    ex = Example(None)\n    ex.Show()\n    app.MainLoop()\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    A, B, T = map(int, input().split())\n    print(B * ((T + A - 1) // A))\n\n\nif __name__ == '__main__':\n    main()\n", "// import fs from 'fs';\n\n// const file = fs.readFileSync('./file.js', 'utf8');\n// console.log(file);\n\n// fs.readFile('./file.js', 'utf8', (err, file) => {\n//   console.log(file);\n// });\n\n// fs.readdir('./', (err, files) => {\n//   console.log(files);\n// });\n\n// fs.writeFile('./file.txt', 'Hello World', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.appendFile('./file.txt', 'Hello World', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.rename('./file.txt', './renamed.txt', (err) => {\n//   if (err) throw err;\n// });\n\n// fs.unlink('./renamed.txt', (err) => {\n//   if (err) throw err;\n// });\n\nfs.mkdir('./new-directory', (err) => {\n  if (err) throw err;\n});\n\nfs.rmdir('./new-directory', (err) => {\n  if (err) throw err;\n});\n", "import math\n\ndef my_abs(x):\n    if not isinstance(x, (int, float)):\n        raise TypeError('bad operand type')\n    if x >= 0:\n        return x\n    else:\n        return -x\n\ndef move(x, y, step, angle=0):\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\ndef quadratic(a, b, c):\n    delta = b * b - 4 * a * c\n    if delta < 0:\n        print('\u65e0\u89e3')\n    elif delta == 0:\n        x = -b / (2 * a)\n        return x\n    else:\n        x1 = (-b + math.sqrt(delta)) / (2 * a)\n        x2 = (-b - math.sqrt(delta)) / (2 * a)\n        return x1, x2\n\ndef power(x):\n    return x * x\n\ndef power(x, n):\n    s = 1\n    while n > 0:\n        n = n - 1\n        s = s * x\n    return s\n\ndef add_end(L=None):\n    if L is None:\n        L = []\n    L.append('END')\n    return L\n\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n\ndef person(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n\ndef person(name, age, *, city, job):\n    print(name, age, city, job)\n\ndef fact(n):\n    if n == 1:\n        return 1\n    return n * fact(n - 1)\n\ndef fact_iter(num, product):\n    if num == 1:\n        return product \n    return fact_iter(num - 1, num * product)\n\ndef fact(n):\n    return fact_iter(n, 1) \n\ndef move(n, a, b, c):\n    if n == 1:\n        print('move', a, '-->', c)\n    else:\n        move(n-1, a, c, b)\n        move(1, a, b, c)\n        move(n-1, b, a, c)\n", "import math\n\ndef my_abs(x):\n    if not isinstance(x, (int, float)):\n        raise TypeError('bad operand type')\n    if x >= 0:\n        return x\n    else:\n        return -x\n\ndef move(x, y, step, angle=0):\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\ndef quadratic(a, b, c):\n    delta = b * b - 4 * a * c\n    if delta < 0:\n        print('\u65e0\u89e3')\n    elif delta == 0:\n        x = -b / (2 * a)\n        return x\n    else:\n        x1 = (-b + math.sqrt(delta)) / (2 * a)\n        x2 = (-b - math.sqrt(delta)) / (2 * a)\n        return x1, x2\n\ndef power(x):\n    return x * x\n\ndef power(x, n):\n    s = 1\n    while n > 0:\n        n = n - 1\n        s = s * x\n    return s\n\ndef add_end(L=None):\n    if L is None:\n        L = []\n    L.append('END')\n    return L\n\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n\ndef person1(name, age, **kw):\n    print('name:', name, 'age:', age, 'other:', kw)\n\ndef person2(name, age, *, city, job):\n    print(name, age, city, job)\n\ndef fact(n):\n    if n==1:\n        return 1\n    return n * fact(n - 1)\n\ndef fact(n):\n    return fact_iter(n, 1)\n\ndef fact_iter(num, product):\n    if num == 1:\n        return product\n    return fact_iter(num - 1, num * product)\n\ndef move(n, a, b, c):\n    if n == 1:\n        print('move', a, '-->', c)\n    else:\n        move(n-1, a, c, b)\n        move(1, a, b, c)\n        move(n-1, b, a, c)\n", "\ndef main():\n    A, B, T = map(int, input().split())\n    print(B * (T // A))\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\"\"\"\nZetCode wxPython tutorial\n\nIn this example, we create a simple\nwindow in wxPython.\n\nauthor: Jan Bodnar\nwebsite: www.zetcode.com\nlast modified: April 2018\n\"\"\"\n\nimport wx\n\n\nclass Example(wx.Frame):\n\n    def __init__(self, *args, **kw):\n        super().__init__(*args, **kw)\n\n        self.InitUI()\n\n    def InitUI(self):\n\n        menubar = wx.MenuBar()\n        fileMenu = wx.Menu()\n        fileItem = fileMenu.Append(wx.ID_EXIT, 'Quit', 'Quit application')\n        menubar.Append(fileMenu, '&File')\n        self.SetMenuBar(menubar)\n\n        self.Bind(wx.EVT_MENU, self.OnQuit, fileItem)\n\n        self.SetSize((350, 250))\n        self.SetTitle('Simple menu')\n        self.Centre()\n\n    def OnQuit(self, e):\n        self.Close()\n\n\ndef main():\n\n    app = wx.App()\n    ex = Example(None)\n    ex.Show()\n    app.MainLoop()\n\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef my_abs(x):\n    if not isinstance(x, (int, float)):\n        raise TypeError('bad operand type')\n    if x >= 0:\n        return x\n    else:\n        return -x\n\ndef move(x, y, step, angle=0):\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\ndef quadratic(a, b, c):\n    delta = b * b - 4 * a * c\n    if delta < 0:\n        print('\u65e0\u89e3')\n    elif delta == 0:\n        x = -b / (2 * a)\n        return x\n    else:\n        x1 = (-b + math.sqrt(delta)) / (2 * a)\n        x2 = (-b - math.sqrt(delta)) / (2 * a)\n        return x1, x2\n\ndef power(x):\n    return x * x\n\ndef power(x, n):\n    s = 1\n    while n > 0:\n        n = n - 1\n        s = s * x\n    return s\n\ndef add_end(L=None):\n    if L is None:\n        L = []\n    L.append('END')\n    return L\n\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n\n# def person(name, age, **kw):\n#     print('name:', name, 'age:', age, 'other:', kw)\n\ndef person(name, age, *, city, job):\n    print(name, age, city, job)\n\ndef fact(n):\n    if n==1:\n        return 1\n    return n * fact(n - 1)\n\ndef fact(n):\n    return fact_iter(n, 1)\n\ndef fact_iter(num, product):\n    if num == 1:\n        return product\n    return fact_iter(num - 1, num * product)\n\ndef move(n, a, b, c):\n    if n == 1:\n        print('move', a, '-->', c)\n    else:\n        move(n-1, a, c, b)\n        move(1, a, b, c)\n        move(n-1, b, a, c)\n", "#!/usr/bin/env python3\n\n\"\"\"\nZetCode wxPython tutorial\n\nIn this example, we create a simple\nwindow in wxPython.\n\nauthor: Jan Bodnar\nwebsite: www.zetcode.com\nlast modified: April 2018\n\"\"\"\n\nimport wx\n\n\nclass Example(wx.Frame):\n\n    def __init__(self, *args, **kw):\n        super(Example, self).__init__(*args, **kw)\n\n        self.initUI()\n\n    def initUI(self):\n\n        menubar = wx.MenuBar()\n        fileMenu = wx.Menu()\n        fileItem = fileMenu.Append(wx.ID_EXIT, 'Quit', 'Quit application') \n        menubar.Append(fileMenu, '&File')\n        self.SetMenuBar(menubar)\n\n        self.Bind(wx.EVT_MENU, self.onQuit, fileItem)\n\n        self.SetSize((350, 250))\n        self.SetTitle('Simple menu')\n        self.Centre()\n\n    def onQuit(self, e):\n        self.Close()\n\n\ndef main():\n\n    app = wx.App()\n    ex = Example(None)\n    ex.Show()\n    app.MainLoop()\n\n\nif __name__ == '__main__':\n    main()\n"]