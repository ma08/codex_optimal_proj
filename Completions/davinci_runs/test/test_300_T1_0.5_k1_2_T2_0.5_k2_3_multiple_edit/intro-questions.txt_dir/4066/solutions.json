["import math\nfrom collections import defaultdict\nimport sys\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    MAX = 10**7 + 1\n    res = MAX * MAX\n\n    #MAX_P = int(math.sqrt(MAX))\n    MAX_P = 3163\n\n    primes = []\n    p = 2\n    sieve = [True] * (MAX_P+1)\n    while p < MAX_P:\n        if sieve[p]:\n            primes.append(p)\n            k = 2\n            while k * p < MAX_P:\n                sieve[k * p] = False\n                k += 1\n        p += 1\n\n    np = len(primes)\n    cand1 = {}\n    cand2 = {}\n    ind1 = {}\n    ind2 = {}\n\n    res = MAX * MAX\n    for index in range(n):\n        val = a[index]\n        if val >= res:\n            continue\n\n        divisors = [1]\n        p = 0\n        while val > 0 and p < np:\n            while val % primes[p] == 0:\n                divisors += [d * primes[p] for d in divisors]\n                val //= primes[p]\n            p += 1\n        if val > 1:\n            divisors += [d * val for d in divisors]\n\n        for d in set(divisors):\n            if d not in cand1:\n                cand1[d] = a[index]\n                ind1[d] = index\n            else:\n                if d not in cand2:\n                    if a[index] < cand1[d]:\n                        cand2[d] = cand1[d]\n                        ind2[d] = ind1[d]\n                        cand1[d] = a[index]\n                        ind1[d] = index\n                    else:\n                        cand2[d] = a[index]\n                        ind2[d] = index\n                else:\n                    if a[index] < cand1[d]:\n                        cand2[d] = cand1[d]\n                        ind2[d] = ind1[d]\n                        cand1[d] = a[index]\n                        ind1[d] = index\n                    elif a[index] < cand2[d]:\n                        cand2[d] = a[index]\n                        ind2[d] = index\n                    else:\n                        continue\n                if res > cand1[d] // d * cand2[d]:\n                    x, y = ind1[d], ind2[d]\n                    res = cand1[d] // d * cand2[d]\n\n    print(min(x+1, y+1), max(x+1, y+1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]