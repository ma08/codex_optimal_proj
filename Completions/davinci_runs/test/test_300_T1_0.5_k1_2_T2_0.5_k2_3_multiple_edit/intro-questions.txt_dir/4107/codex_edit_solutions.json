["\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * (n + 1)\n    for i in range(n):\n        if s[i - 1] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the router's range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]  # n: number of rooms, k: router's range\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the rooms\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the router's range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room.\n    cost = [0 for _ in range(n)]\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range.\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost.\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k >= 1 and s[i - k - 1] == '1':\n        continue\n    if i + k <= n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\n\n\nprint(cost)\n", "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "#\n#\n# # Solution\n#\n# n, k = [int(x) for x in input().split()]\n# s = input()\n#\n# cost = 0\n# for i in range(1, n + 1):\n#     if s[i - 1] == '1':\n#         cost += i\n#         continue\n#     if i - k - 1 >= 0 and s[i - k - 1] == '1':\n#         continue\n#     if i + k - 1 < n and s[i + k - 1] == '1':\n#         continue\n#     cost += i\n#\n# print(cost)\n#\n# # Solution\n#\n# n, k = [int(x) for x in input().split()]\n# s = input()\n#\n# cost = 0\n# for i in range(1, n + 1):\n#     if s[i - 1] == '1':\n#         cost += i\n#         continue\n#     if i - k - 1 >= 0 and s[i - k - 1] == '1':\n#         continue\n#     if i + k - 1 < n and s[i + k - 1] == '1':\n#         continue\n#     cost += i\n#\n# print(cost)\n", "# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k >= 1 and s[i - k - 1] == '1':\n        continue\n    if i + k <= n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in raw_input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the router's range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution 1\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\n# Solution 2\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '0':\n        cost += i\n\nprint(cost)\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room.\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range.\n    for i in range(n - k):\n        cost[i + k] = min(cost[i + k], cost[i] + i + 1)\n\n    # Sum the cost.\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution 1\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\n\n# Solution 2\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '0':\n        cost += i\n\nprint(cost)\n"]