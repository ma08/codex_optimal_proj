2022-04-24 16:39:43.140547 num operations 2
2022-04-24 16:39:43.140566 size on input set 1
2022-04-24 16:39:43.140718 using api key jaanu
2022-04-24 16:39:51.765092 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words.sort()\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650818383,
  "object": "edit"
}
2022-04-24 16:39:51.765306 fix spelling mistakes 3 ['\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words.sort()\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 16:39:51.765342 size on output set 3
2022-04-24 16:39:51.765350 size on input set 3
2022-04-24 16:39:51.765466 using api key sunu
2022-04-24 16:39:59.896780 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    words = [x for x in input().split()]\n    n = int(input())\n    words.sort()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    words = [x for x in input().split()]\n    n = int(input())\n    words.sort()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(len(\"\".join(words)))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650818391,
  "object": "edit"
}
2022-04-24 16:39:59.896956 fix syntax errors 3 ['\n\ndef main():\n    words = [x for x in input().split()]\n    n = int(input())\n    words.sort()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    words = [x for x in input().split()]\n    n = int(input())\n    words.sort()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(len("".join(words)))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    if len(words) == len(set(words)):\n        print(ans)\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 16:39:59.897103 using api key jaanu
2022-04-24 16:40:09.807407 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i + 1:j] + [words[j][0].upper()] + words[j + 1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input().strip())\n    words = [x for x in input().strip().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words).lower())\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp).lower()), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650818399,
  "object": "edit"
}
2022-04-24 16:40:09.807677 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i + 1:j] + [words[j][0].upper()] + words[j + 1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = input().split()\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input().strip())\n    words = [x for x in input().strip().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words).lower())\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp).lower()), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 16:40:09.807835 using api key derek
2022-04-24 16:40:19.791801 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x.lower() for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650818409,
  "object": "edit"
}
2022-04-24 16:40:19.791979 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    words = [x.lower() for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words)) + 1\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:j] + [words[j][0].upper()] + words[j+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 16:40:19.792010 size on output set 8
2022-04-24 16:40:19.792020 num operations 2
2022-04-24 16:40:19.792025 size on input set 1
2022-04-24 16:40:19.792141 using api key jaanu
2022-04-24 16:40:28.727264 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n-1):\n        if word[i] != word[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n-1):\n        if words_[i] != words_[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    }
  ],
  "created": 1650818419,
  "object": "edit"
}
2022-04-24 16:40:28.727446 fix spelling mistakes 3 ['\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n', '\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n-1):\n        if word[i] != word[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n', '\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n-1):\n        if words_[i] != words_[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n']
2022-04-24 16:40:28.727475 size on output set 3
2022-04-24 16:40:28.727483 size on input set 3
2022-04-24 16:40:28.727599 using api key soukgp
2022-04-24 16:40:37.900188 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words):\n    min_len = n\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                if j-i < min_len:\n                    min_len = j-i\n    return min_len\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n - 1):\n        if words_[i] != words_[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n-1):\n        if words_[i] != words_[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords_ = input().split()\n\nprint(min_length(n, words_))\n"
    }
  ],
  "created": 1650818428,
  "object": "edit"
}
2022-04-24 16:40:37.900371 fix syntax errors 3 ['\n\ndef min_length(n, words):\n    min_len = n\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                if j-i < min_len:\n                    min_len = j-i\n    return min_len\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n - 1):\n        if words_[i] != words_[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words_):\n    count = 1\n    for i in range(n-1):\n        if words_[i] != words_[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords_ = input().split()\n\nprint(min_length(n, words_))\n']
2022-04-24 16:40:37.900583 using api key jaanu
2022-04-24 16:40:46.553779 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word) - 1)\n"
    }
  ],
  "created": 1650818437,
  "object": "edit"
}
2022-04-24 16:40:46.553977 fix syntax errors 3 ['\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n', '\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word) - 1)\n']
2022-04-24 16:40:46.554134 using api key derek
2022-04-24 16:41:38.995057 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_len(n, words, count):\n    for i in range(n):\n        if words[i] == words[i+1]:\n            count += 1\n            print(\"count\", count)\n        else:\n            return count\n            print(\"return\", count)\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words, count=1))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(min_len(n, words))\n"
    },
    {
      "index": 2,
      "text": "\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n"
    }
  ],
  "created": 1650818446,
  "object": "edit"
}
2022-04-24 16:41:38.995257 fix syntax errors 3 ['\n\ndef min_len(n, words, count):\n    for i in range(n):\n        if words[i] == words[i+1]:\n            count += 1\n            print("count", count)\n        else:\n            return count\n            print("return", count)\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words, count=1))\n', '\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(min_len(n, words))\n', '\ndef min_len(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_len(n, words))\n']
2022-04-24 16:41:38.995374 size on output set 9
