2022-04-24 19:21:21.311359 num operations 2
2022-04-24 19:21:21.311369 size on input set 1
2022-04-24 19:21:21.311485 using api key sunu
2022-04-24 19:21:33.278197 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\uff08\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e00\u7dd2\u306b\u6301\u3064\uff09\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b(\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b(\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u5024\u3068\u4e00\u7dd2\u306b\u30bd\u30fc\u30c8\u3055\u308c\u308b)\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    }
  ],
  "created": 1650828081,
  "object": "edit"
}
2022-04-24 19:21:33.278436 fix spelling mistakes 3 ['\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる（値とインデックスを一緒に持つ）\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる(値とインデックスを格納)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする(インデックスは値と一緒にソートされる)\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソート\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n']
2022-04-24 19:21:33.278474 size on output set 3
2022-04-24 19:21:33.278481 size on input set 3
2022-04-24 19:21:33.278599 using api key sunu
2022-04-24 19:21:45.828749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/abc087/tasks/abc087_b\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\uff08\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e00\u7dd2\u306b\u6301\u3064\uff09\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\uff08\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e00\u7dd2\u306b\u6301\u3064\uff09\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 2,
      "text": "# \u5165\u529b\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\uff08\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e00\u7dd2\u306b\u6301\u3064\uff09\uff08\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e00\u7dd2\u306b\u6301\u3064\uff09\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    }
  ],
  "created": 1650828093,
  "object": "edit"
}
2022-04-24 19:21:45.828936 fix syntax errors 3 ['# https://atcoder.jp/contests/abc087/tasks/abc087_b\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる（値とインデックスを一緒に持つ）\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる（値とインデックスを一緒に持つ）\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '# 入力\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる（値とインデックスを一緒に持つ）（値とインデックスを一緒に持つ）\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n']
2022-04-24 19:21:45.829095 using api key jaanu
2022-04-24 19:21:53.498781 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b(\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b(\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u5024\u3068\u4e00\u7dd2\u306b\u30bd\u30fc\u30c8\u3055\u308c\u308b)\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value)) \n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b(\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d) \nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b(\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u5024\u3068\u4e00\u7dd2\u306b\u30bd\u30fc\u30c8\u3055\u308c\u308b)\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b(\u5024\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b(\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u5024\u3068\u4e00\u7dd2\u306b\u30bd\u30fc\u30c8\u3055\u308c\u308b)\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    }
  ],
  "created": 1650828105,
  "object": "edit"
}
2022-04-24 19:21:53.499075 fix syntax errors 3 ['\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる(値とインデックスを格納)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする(インデックスは値と一緒にソートされる)\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value)) \n', '\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる(値とインデックスを格納) \nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする(インデックスは値と一緒にソートされる)\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる(値とインデックスを格納)\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソートする(インデックスは値と一緒にソートされる)\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n']
2022-04-24 19:21:53.499250 using api key sunu
2022-04-24 19:22:00.933801 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    },
    {
      "index": 2,
      "text": "# coding:utf-8\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"
    }
  ],
  "created": 1650828113,
  "object": "edit"
}
2022-04-24 19:22:00.933990 fix syntax errors 3 ['\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソート\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value)\n', '\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソート\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n', '# coding:utf-8\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2次元配列にまとめる\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# 小さい順にソート\nA_list.sort(key=lambda x:x[0])\n\n# 最小値と最大値の絶対値を求める\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n']
2022-04-24 19:22:00.934025 size on output set 9
2022-04-24 19:22:00.934035 num operations 2
2022-04-24 19:22:00.934041 size on input set 1
2022-04-24 19:22:00.934178 using api key kouti
2022-04-24 19:22:09.553473 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# \uc785\ub825\uc73c\ub85c \uc8fc\uc5b4\uc9c4 N\uac1c\uc758 \uc815\uc218 \uc911\uc5d0\uc11c \uac00\uc7a5 \ud070 \uc218\uc640 \uac00\uc7a5 \uc791\uc740 \uc218\uc758 \ucc28\uc774\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624.\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n"
    }
  ],
  "created": 1650828120,
  "object": "edit"
}
2022-04-24 19:22:09.553720 fix spelling mistakes 3 ['\n# 입력으로 주어진 N개의 정수 중에서 가장 큰 수와 가장 작은 수의 차이를 출력하는 프로그램을 작성하시오.\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n', '\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n', '\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n']
2022-04-24 19:22:09.553753 size on output set 2
2022-04-24 19:22:09.553761 size on input set 2
2022-04-24 19:22:09.553889 using api key derek
2022-04-24 19:22:23.781756 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\n# \uc785\ub825\uc73c\ub85c \uc8fc\uc5b4\uc9c4 N\uac1c\uc758 \uc815\uc218 \uc911\uc5d0\uc11c \uac00\uc7a5 \ud070 \uc218\uc640 \uac00\uc7a5 \uc791\uc740 \uc218\uc758 \ucc28\uc774\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n"
    },
    {
      "index": 2,
      "text": "import itertools\ndef solution(strings, n):\n    answer = []\n    strings.sort()\n    strings.sort(key=lambda x: x[n])\n    return strings\n"
    }
  ],
  "created": 1650828129,
  "object": "edit"
}
2022-04-24 19:22:23.781931 NO RESULT
2022-04-24 19:22:23.781937 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-24 19:22:23.781976 fix syntax errors 2 ['\n# 입력으로 주어진 N개의 정수 중에서 가장 큰 수와 가장 작은 수의 차이를 출력하는 프로그램을 작성하시오\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n', 'import itertools\ndef solution(strings, n):\n    answer = []\n    strings.sort()\n    strings.sort(key=lambda x: x[n])\n    return strings\n']
2022-04-24 19:22:23.782119 using api key sunu
2022-04-24 19:22:32.305439 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\nA.sort()\nprint(A[N-1] - A[0])\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split())) # input\n\nA.sort() # sort\n\nprint(A[N-1] - A[0]) # output\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n"
    }
  ],
  "created": 1650828143,
  "object": "edit"
}
2022-04-24 19:22:32.305623 fix syntax errors 3 ['\nimport sys\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\nA.sort()\nprint(A[N-1] - A[0])\n', 'import sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split())) # input\n\nA.sort() # sort\n\nprint(A[N-1] - A[0]) # output\n', 'import sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n']
2022-04-24 19:22:32.305678 size on output set 5
