["from collections import deque\nimport sys\n\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = [[] for i in range(n)]\nfor i in range(m):\n    u, v = map(int, input().split())\n    a[u - 1].append(v - 1)\n    a[v - 1].append(u - 1)\n\nd = [-1 for i in range(n)]\nq = deque()\nq.append(0)\nd[0] = 0\nwhile len(q) > 0:\n    v = q.popleft()\n    for u in a[v]:\n        if d[u] != -1:\n            continue\n        d[u] = d[v] + 1\n        q.append(u)\n\nfor i in range(n):\n    print(d[i])\n", "\ndef gcd(a, b)\n    if a < b\n        a, b = b, a\n    if a % b == 0\n        return b\n    return gcd(b, a % b\n", "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for tt in T:\n        ans = lcm(ans, tt)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nt = list(map(int, input().split()))\n\n\ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n", "\n\nn = int(input())\nt = list(map(int, input().split()))\n \ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n \ngcd = t[0] \nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(gcd)\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # noqa: E741\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n", "def main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[N//2] - A[N//2-1])\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y / gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1.0\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b) \n", "\nn = int(input())\nt = list(map(int, input().split()))\n\nprint(gcd)\n", "\n\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\n\ndef lcm(m, n):\n\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "print(1)\n"]