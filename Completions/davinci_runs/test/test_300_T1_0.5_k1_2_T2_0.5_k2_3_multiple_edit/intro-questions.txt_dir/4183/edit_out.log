2022-04-24 18:42:59.338963 num operations 2
2022-04-24 18:42:59.338974 size on input set 1
2022-04-24 18:42:59.339086 using api key soukgp
2022-04-24 18:43:08.034343 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "def gcd_f(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nt = list(map(int, input().split()))\n \ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n \ngcd = t[0] \nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n"
    }
  ],
  "created": 1650825779,
  "object": "edit"
}
2022-04-24 18:43:08.034546 fix spelling mistakes 3 ['def gcd_f(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\nn = int(input())\nt = list(map(int, input().split()))\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n', '\n\nn = int(input())\nt = list(map(int, input().split()))\n \ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n \ngcd = t[0] \nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n', '\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n']
2022-04-24 18:43:08.034571 size on output set 3
2022-04-24 18:43:08.034578 size on input set 3
2022-04-24 18:43:08.034706 using api key soukgp
2022-04-24 18:43:16.541697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(a, b)\n    if a < b\n        a, b = b, a\n    if a % b == 0\n        return b\n    return gcd(b, a % b\n"
    },
    {
      "index": 1,
      "text": "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b) \n"
    }
  ],
  "created": 1650825788,
  "object": "edit"
}
2022-04-24 18:43:16.541899 fix syntax errors 3 ['\ndef gcd(a, b)\n    if a < b\n        a, b = b, a\n    if a % b == 0\n        return b\n    return gcd(b, a % b\n', 'def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b) \n']
2022-04-24 18:43:16.542040 using api key jaanu
2022-04-24 18:44:02.201690 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nt = list(map(int, input().split()))\n\n\ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nt = list(map(int, input().split()))\n\nprint(gcd)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nt = list(map(int, input().split()))\n \ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n \ngcd = t[0] \nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(gcd)\n"
    }
  ],
  "created": 1650825796,
  "object": "edit"
}
2022-04-24 18:44:02.201911 fix syntax errors 3 ['\nn = int(input())\nt = list(map(int, input().split()))\n\n\ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n\n\ngcd = t[0]\nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\nprint(gcd)\n', '\nn = int(input())\nt = list(map(int, input().split()))\n\nprint(gcd)\n', '\n\nn = int(input())\nt = list(map(int, input().split()))\n \ndef gcd_f(a, b):\n    if b == 0:\n        return a\n    return gcd_f(b, a % b)\n \ngcd = t[0] \nfor i in range(1, n):\n    gcd = gcd_f(gcd, t[i])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(gcd)\n']
2022-04-24 18:44:02.202157 using api key sunu
2022-04-24 18:44:16.650084 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import deque\nimport sys\n\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = [[] for i in range(n)]\nfor i in range(m):\n    u, v = map(int, input().split())\n    a[u - 1].append(v - 1)\n    a[v - 1].append(u - 1)\n\nd = [-1 for i in range(n)]\nq = deque()\nq.append(0)\nd[0] = 0\nwhile len(q) > 0:\n    v = q.popleft()\n    for u in a[v]:\n        if d[u] != -1:\n            continue\n        d[u] = d[v] + 1\n        q.append(u)\n\nfor i in range(n):\n    print(d[i])\n"
    },
    {
      "index": 1,
      "text": "print(1)\n"
    },
    {
      "index": 2,
      "text": "print(1)\n"
    }
  ],
  "created": 1650825842,
  "object": "edit"
}
2022-04-24 18:44:16.650364 fix syntax errors 3 ['from collections import deque\nimport sys\n\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = [[] for i in range(n)]\nfor i in range(m):\n    u, v = map(int, input().split())\n    a[u - 1].append(v - 1)\n    a[v - 1].append(u - 1)\n\nd = [-1 for i in range(n)]\nq = deque()\nq.append(0)\nd[0] = 0\nwhile len(q) > 0:\n    v = q.popleft()\n    for u in a[v]:\n        if d[u] != -1:\n            continue\n        d[u] = d[v] + 1\n        q.append(u)\n\nfor i in range(n):\n    print(d[i])\n', 'print(1)\n', 'print(1)\n']
2022-04-24 18:44:16.650391 size on output set 8
2022-04-24 18:44:16.650401 num operations 2
2022-04-24 18:44:16.650407 size on input set 1
2022-04-24 18:44:16.650524 using api key kouti
2022-04-24 18:44:25.505970 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825856,
  "object": "edit"
}
2022-04-24 18:44:25.506146 fix spelling mistakes 3 ["\n\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:44:25.506174 size on output set 3
2022-04-24 18:44:25.506180 size on input set 3
2022-04-24 18:44:25.506313 using api key jaanu
2022-04-24 18:44:35.549056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[N//2] - A[N//2-1])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825865,
  "object": "edit"
}
2022-04-24 18:44:35.549259 fix syntax errors 3 ["\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[N//2] - A[N//2-1])\n\nif __name__ == '__main__':\n    main()\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:44:35.549417 using api key soukgp
2022-04-24 18:45:05.361146 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "index": 2,
      "text": "\n\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\n\ndef lcm(m, n):\n\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825875,
  "object": "edit"
}
2022-04-24 18:45:05.361388 NO RESULT
2022-04-24 18:45:05.361398 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-24 18:45:05.361438 fix syntax errors 2 ["\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\n\ndef lcm(m, n):\n\n    return m * n // gcd(m, n)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:45:05.361581 using api key sunu
2022-04-24 18:45:13.112350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y / gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1.0\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for tt in T:\n        ans = lcm(ans, tt)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # noqa: E741\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650825905,
  "object": "edit"
}
2022-04-24 18:45:13.112598 fix syntax errors 3 ["\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y / gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1.0\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]\n    ans = 1\n    for tt in T:\n        ans = lcm(ans, tt)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef main():\n    N = int(input())\n    T = [int(input()) for _ in range(N)]  # noqa: E741\n    ans = 1\n    for t in T:\n        ans = lcm(ans, t)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 18:45:13.112632 size on output set 8
