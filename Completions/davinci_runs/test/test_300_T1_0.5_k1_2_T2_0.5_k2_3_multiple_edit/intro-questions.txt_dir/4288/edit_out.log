2022-04-24 21:02:38.080444 num operations 2
2022-04-24 21:02:38.080454 size on input set 1
2022-04-24 21:02:38.080565 using api key kouti
2022-04-24 21:02:44.948128 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650834158,
  "object": "edit"
}
2022-04-24 21:02:44.948346 fix spelling mistakes 3 ["\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n", "\n\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 21:02:44.948374 size on output set 1
2022-04-24 21:02:44.948381 size on input set 1
2022-04-24 21:02:44.948501 using api key sunu
2022-04-24 21:02:52.522627 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a) or (a == b and b == c):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 2,
      "text": "\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1650834164,
  "object": "edit"
}
2022-04-24 21:02:52.522803 fix syntax errors 3 ["\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a) or (a == b and b == c):\n    print('Yes')\nelse:\n    print('No')\n", "\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n", "\n# Get user input\na, b, c = map(int, input().split())\n\n# Determine if poor or not\nif (a == b and b != c) or (a == c and c != b) or (b == c and c != a):\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-24 21:02:52.522828 size on output set 2
2022-04-24 21:02:52.522837 num operations 2
2022-04-24 21:02:52.522843 size on input set 1
2022-04-24 21:02:52.522960 using api key soukgp
2022-04-24 21:03:01.144790 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    for i in range(N):\n        a, b, c = map(int, input().split())\n        if a == b or b == c or a == c:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    s = input()\n    print(s.replace(\"2017\", \"2018\"))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650834172,
  "object": "edit"
}
2022-04-24 21:03:01.144966 fix spelling mistakes 3 ['\n\ndef main():\n    N = int(input())\n    for i in range(N):\n        a, b, c = map(int, input().split())\n        if a == b or b == c or a == c:\n            print("Yes")\n        else:\n            print("No")\n\nif __name__ == \'__main__\':\n    main()\n', "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    s = input()\n    print(s.replace("2017", "2018"))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-24 21:03:01.145009 size on output set 3
2022-04-24 21:03:01.145016 size on input set 3
2022-04-24 21:03:01.145134 using api key jaanu
2022-04-24 21:03:11.203532 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N = int(input())\n    for i in range(N):\n        a, b, c = map(int, input().split())\n        if a == b or b == c or a == c:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        a, b, c = map(int, input().split())  # input\n        if a == b or b == c or a == c:  # condition\n            print(\"Yes\")  # output\n        else:  # condition\n            print(\"No\")  # output\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    N = int(input())\n    S = [input() for _ in range(N)]\n\n\n    for s in S:\n        if s[0] == s[1] and s[1] == s[2]:\n            print('No')\n            return\n        elif s[0] == s[1] or s[1] == s[2] or s[0] == s[2]:\n            print('Yes')\n            return\n    print('No')\n    return\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650834181,
  "object": "edit"
}
2022-04-24 21:03:11.203717 fix syntax errors 3 ['\ndef main():\n    N = int(input())\n    for i in range(N):\n        a, b, c = map(int, input().split())\n        if a == b or b == c or a == c:\n            print("Yes")\n        else:\n            print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        a, b, c = map(int, input().split())  # input\n        if a == b or b == c or a == c:  # condition\n            print("Yes")  # output\n        else:  # condition\n            print("No")  # output\n\nif __name__ == \'__main__\':\n    main()\n', "def main():\n    N = int(input())\n    S = [input() for _ in range(N)]\n\n\n    for s in S:\n        if s[0] == s[1] and s[1] == s[2]:\n            print('No')\n            return\n        elif s[0] == s[1] or s[1] == s[2] or s[0] == s[2]:\n            print('Yes')\n            return\n    print('No')\n    return\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 21:03:11.203861 using api key kouti
2022-04-24 21:03:18.281740 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    s = input()\n    print(s.replace(\"2017\", \"2018\")) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    s = raw_input()\n    print(s.replace(\"2017\", \"2018\"))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    s = input()\n    print(s.replace(\"atcoder\", \"AtCoder\"))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650834191,
  "object": "edit"
}
2022-04-24 21:03:18.281925 fix syntax errors 3 ['\n\ndef main():\n    s = input()\n    print(s.replace("2017", "2018")) \n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    s = raw_input()\n    print(s.replace("2017", "2018"))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    s = input()\n    print(s.replace("atcoder", "AtCoder"))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-24 21:03:18.282141 using api key derek
2022-04-24 21:03:43.682194 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = sum([1 for i in range(n) if s[i] != t[i]])\n    for i in range(n):\n        if s[:i] == t[:i] and s[i:] == t[i+1:]:\n            ans -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650834198,
  "object": "edit"
}
2022-04-24 21:03:43.682372 NO RESULT
2022-04-24 21:03:43.682380 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-24 21:03:43.682420 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = sum([1 for i in range(n) if s[i] != t[i]])\n    for i in range(n):\n        if s[:i] == t[:i] and s[i:] == t[i+1:]:\n            ans -= 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 21:03:43.682440 size on output set 8
