2022-04-24 20:51:46.715630 num operations 2
2022-04-24 20:51:46.715641 size on input set 1
2022-04-24 20:51:46.715753 using api key soukgp
2022-04-24 20:51:57.593805 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (m - 1)\n    for i in range(m - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833506,
  "object": "edit"
}
2022-04-24 20:51:57.594042 fix spelling mistakes 3 ['\n\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (m - 1)\n    for i in range(m - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:51:57.594075 size on output set 3
2022-04-24 20:51:57.594082 size on input set 3
2022-04-24 20:51:57.594206 using api key jaanu
2022-04-24 20:52:06.085741 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * m\n    for i in range(m):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (m)\n    for i in range(m):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, sys.stdin.readline().split())))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833517,
  "object": "edit"
}
2022-04-24 20:52:06.085962 fix syntax errors 3 ['\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * m\n    for i in range(m):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (m)\n    for i in range(m):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, sys.stdin.readline().split())))\n\n    print(solve(n, m, edges))\n\ndef solve(n, m, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:52:06.086121 using api key jaanu
2022-04-24 20:52:16.675287 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    xs = [0] * n\n    for i in range(n):\n        xs[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, xs))\n\ndef solve(n, k, xs):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)  # TODO: Change to appropriate data structure\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))  # TODO: Change to appropriate data structure\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    return 0\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833526,
  "object": "edit"
}
2022-04-24 20:52:16.675535 fix syntax errors 3 ['\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    xs = [0] * n\n    for i in range(n):\n        xs[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, xs))\n\ndef solve(n, k, xs):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)  # TODO: Change to appropriate data structure\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))  # TODO: Change to appropriate data structure\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, edges))\n\ndef solve(n, edges):\n    # TODO: Implement solution\n    return 0\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:52:16.675681 using api key kouti
2022-04-24 20:52:24.028645 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    return 0\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution.\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833536,
  "object": "edit"
}
2022-04-24 20:52:24.028858 fix syntax errors 3 ['\n#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    return 0\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution.\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n', '\n#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # 0-indexed\n    for i in range(n - 1): # 0-indexed\n        edges[i] = list(map(int, sys.stdin.readline().split())) # 0-indexed\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:52:24.028893 size on output set 9
2022-04-24 20:52:24.028904 num operations 2
2022-04-24 20:52:24.028910 size on input set 1
2022-04-24 20:52:24.029044 using api key kouti
2022-04-24 20:52:39.946457 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n"
    },
    {
      "index": 1,
      "text": "\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 2,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end = ' ')\n"
    }
  ],
  "created": 1650833544,
  "object": "edit"
}
2022-04-24 20:52:39.946638 fix spelling mistakes 3 ['\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n', "\ng = [[] for i in range(n)]\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end = ' ')\n"]
2022-04-24 20:52:39.946737 size on output set 3
2022-04-24 20:52:39.946745 size on input set 3
2022-04-24 20:52:39.946866 using api key sunu
2022-04-24 20:52:50.733336 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\n\ng = [[] for i in range(n)]\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n"
    },
    {
      "index": 1,
      "text": "import sys\nsys.setrecursionlimit(100000)\n\nn, k = map(int, input().split())\n\n\ndef dfs(v, p):\n    s = 0\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v) + 1\n    return min(s, k)\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n"
    }
  ],
  "created": 1650833559,
  "object": "edit"
}
2022-04-24 20:52:50.733522 fix syntax errors 3 ['\nn, k = map(int, input().split())\n\ng = [[] for i in range(n)]\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n', 'import sys\nsys.setrecursionlimit(100000)\n\nn, k = map(int, input().split())\n\n\ndef dfs(v, p):\n    s = 0\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v) + 1\n    return min(s, k)\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n', '\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1)\n']
2022-04-24 20:52:50.733717 using api key kouti
2022-04-24 20:53:02.665680 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 1,
      "text": "n, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n"
    },
    {
      "index": 2,
      "text": "\n\n\nn = int(input())\n\nfor i in range(n):\n\tprint(i)\n"
    }
  ],
  "created": 1650833570,
  "object": "edit"
}
2022-04-24 20:53:02.665891 fix syntax errors 3 ["\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "n, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", '\n\n\nn = int(input())\n\nfor i in range(n):\n\tprint(i)\n']
2022-04-24 20:53:02.666090 using api key kouti
2022-04-24 20:53:09.809748 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"
    }
  ],
  "created": 1650833582,
  "object": "edit"
}
2022-04-24 20:53:09.809930 fix syntax errors 3 ["\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n", "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n", "\n#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end=' ')\n"]
2022-04-24 20:53:09.810034 size on output set 7
