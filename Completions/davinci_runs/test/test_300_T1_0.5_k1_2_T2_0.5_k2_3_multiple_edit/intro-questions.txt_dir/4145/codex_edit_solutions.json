["\n\nimport math\n\ndef main():\n    # Read input\n    x = int(input())\n    print(is_prime(2))\n    # Calculate minimum prime number larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, int(math.floor(math.sqrt(n)))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # Read input and output\n    print(int(input())**2)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input()) \n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    # Read input\n    x = int(input())\n\n    # Calculate minimum prime number that is larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while True:\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    # Read input\n    x = int(input(\"\"))\n\n    # Calculate minimum prime number that is larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(str(prime_num))\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # Read input\n    x = int(input())\n\n    # Calculate minimum prime number larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # read input\n    x = int(input())\n\n    # calculate minimum prime number\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input\n    x = int(input())\n\n    # calculate minimum prime number\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n\nimport math\n\ndef main():\n    # read input\n    x = int(input())\n\n    # calculate minimum prime number\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\n# This program is to find the next prime number\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while True:\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n))\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "\n# This program is to find the next prime number\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    # read input\n    x = int(input())\n\n    # calculate minimum prime number larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # read the input\n    x = int(input())\n\n    # calculate the minimum prime number\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # print the result\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, int(math.floor(math.sqrt(n)))+1):\n            if n % i == 0:\n                return False\n        return True\n\n\nif __name__ == '__main__':\n    main()\n"]