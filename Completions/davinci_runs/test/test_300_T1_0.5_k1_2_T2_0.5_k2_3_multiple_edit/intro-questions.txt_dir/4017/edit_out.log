2022-04-24 14:59:03.750291 num operations 2
2022-04-24 14:59:03.750314 size on input set 1
2022-04-24 14:59:03.750486 using api key sunu
2022-04-24 14:59:16.270785 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# n = int(input())\n# a = list(map(int, input().split()))\n#\n# s = sum(a)\n#\n# def is_good(a):\n#     for i in range(len(a)):\n#         if a[i] == sum(a[:i]) + sum(a[i+1:]):\n#             return True\n#     return False\n#\n# res = []\n# for i in range(n):\n#     if is_good(a[:i] + a[i+1:]):\n#         res.append(i+1)\n#\n# print(len(res))\n# print(*res)\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        print(\"NO\")\n        exit(0)\nprint(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1650812343,
  "object": "edit"
}
2022-04-24 14:59:16.271006 fix spelling mistakes 3 ['# n = int(input())\n# a = list(map(int, input().split()))\n#\n# s = sum(a)\n#\n# def is_good(a):\n#     for i in range(len(a)):\n#         if a[i] == sum(a[:i]) + sum(a[i+1:]):\n#             return True\n#     return False\n#\n# res = []\n# for i in range(n):\n#     if is_good(a[:i] + a[i+1:]):\n#         res.append(i+1)\n#\n# print(len(res))\n# print(*res)\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        print("NO")\n        exit(0)\nprint("YES")\n', '\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n']
2022-04-24 14:59:16.271040 size on output set 3
2022-04-24 14:59:16.271047 size on input set 3
2022-04-24 14:59:16.271174 using api key soukgp
2022-04-24 14:59:22.696569 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1650812356,
  "object": "edit"
}
2022-04-24 14:59:22.696764 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n']
2022-04-24 14:59:22.696901 using api key kouti
2022-04-24 14:59:37.739850 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n# a.sort()\n# for i in range(n-1):\n#     if a[i] == a[i+1]:\n#         print(\"NO\")\n#         exit(0)\n# print(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "# # 1\n# n = int(input())\n# a = list(map(int, input().split()))\n# s = sum(a)\n# def is_good(a):\n#     for i in range(len(a)):\n#         if a[i] == sum(a[:i]) + sum(a[i+1:]):\n#             return True\n#     return False\n#\n# res = []\n# for i in range(n):\n#     if is_good(a[:i] + a[i+1:]):\n#         res.append(i+1)\n#\n# print(len(res))\n# print(*res)\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        print(\"NO\")\n        exit(0)\nprint(\"YES\")\n"
    }
  ],
  "created": 1650812362,
  "object": "edit"
}
2022-04-24 14:59:37.740055 fix syntax errors 3 ['n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n\n# n = int(input())\n# a = list(map(int, input().split()))\n# a.sort()\n# for i in range(n-1):\n#     if a[i] == a[i+1]:\n#         print("NO")\n#         exit(0)\n# print("YES")\n', 'n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '# # 1\n# n = int(input())\n# a = list(map(int, input().split()))\n# s = sum(a)\n# def is_good(a):\n#     for i in range(len(a)):\n#         if a[i] == sum(a[:i]) + sum(a[i+1:]):\n#             return True\n#     return False\n#\n# res = []\n# for i in range(n):\n#     if is_good(a[:i] + a[i+1:]):\n#         res.append(i+1)\n#\n# print(len(res))\n# print(*res)\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        print("NO")\n        exit(0)\nprint("YES")\n']
2022-04-24 14:59:37.740275 using api key sunu
2022-04-24 14:59:44.950052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Apr 14 14:44:52 2020\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1650812377,
  "object": "edit"
}
2022-04-24 14:59:44.950226 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\nprint(len(res))\nprint(*res)\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Tue Apr 14 14:44:52 2020\n"""\n\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\n\ndef is_good(a): \n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = [] \nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n']
2022-04-24 14:59:44.950256 size on output set 7
2022-04-24 14:59:44.950267 num operations 2
2022-04-24 14:59:44.950273 size on input set 1
2022-04-24 14:59:44.950394 using api key jaanu
2022-04-24 14:59:54.062609 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    }
  ],
  "created": 1650812384,
  "object": "edit"
}
2022-04-24 14:59:54.062792 fix spelling mistakes 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n']
2022-04-24 14:59:54.062823 size on output set 2
2022-04-24 14:59:54.062830 size on input set 2
2022-04-24 14:59:54.062945 using api key derek
2022-04-24 15:00:05.762555 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 6]\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 6]\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    }
  ],
  "created": 1650812394,
  "object": "edit"
}
2022-04-24 15:00:05.762787 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 6]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 6]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 3\nindices = [i for i, x in enumerate(a) if x == 3]\n\n# find indices of all elements with value of 4\nindices = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 5\nindices = [i for i, x in enumerate(a) if x == 5]\n\n# find indices of all elements with value of 6\nindices = [i for i, x in enumerate(a) if x == 2]\n']
2022-04-24 15:00:05.763001 using api key kouti
2022-04-24 15:00:15.753002 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 1,
      "text": "\n# n = int(input())\na = list(map(int, input().split()))  # a = [1, 2, 3, 4, 5]\n\n# # find indices of all elements with value of 2\n# indices = [i for i, x in enumerate(a) if x == 2]\n# print(indices)\n\n\n# find all elements with value of 2\na = [i for i in a if i == 2]\nprint(a)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n"
    }
  ],
  "created": 1650812405,
  "object": "edit"
}
2022-04-24 15:00:15.753185 fix syntax errors 3 ['n = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\n# n = int(input())\na = list(map(int, input().split()))  # a = [1, 2, 3, 4, 5]\n\n# # find indices of all elements with value of 2\n# indices = [i for i, x in enumerate(a) if x == 2]\n# print(indices)\n\n\n# find all elements with value of 2\na = [i for i in a if i == 2]\nprint(a)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n']
2022-04-24 15:00:15.753209 size on output set 5
