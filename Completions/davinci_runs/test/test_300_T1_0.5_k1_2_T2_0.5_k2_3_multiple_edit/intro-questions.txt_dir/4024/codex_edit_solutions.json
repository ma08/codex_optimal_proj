["\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n", "n, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n", "def main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, k = map(int, input().split())\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n", "\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            dp[i][j] = dp[i][j - 1] + 1 if s[j - 1] == '1' else dp[i][j - 1]\n    ans = 0\n    for i in range(n + 1):\n        for j in range(i + 1, n + 1):\n            if dp[i][j] >= k:\n                ans = max(ans, j - i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:j]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\nN,K=map(int,input().split())\nS=input()\ndp=[0]*(N+1)\nfor i in range(1,N+1):\n    for j in range(i):\n        if S[j:i] in S[:i]:\n            dp[i]=max(dp[i],dp[j]+N-i+j)\nif dp[N]<K:\n    print(-1)\nelse:\n    print(dp[N])\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] + s[i:]\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) = len(s[j:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] or -1 if invalid\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s, then it can be used\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) or -1 if invalid\n    print(dp[n] if dp[n] >= k else -1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] (not including s[i])\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[i:]:  # if s[j:i] is a substring of s[i:]\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n] + k)\n\nif __name__ == '__main__':\n    main()\n", "n, k = map(int, input().split())\ns = input()\n\n\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n", "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix syntax errors\n    print(n - k)\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "# n, k = map(int, input().split())\n# s = input()\n\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif n > k or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n", "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix spelling mistakes\n    print(n - k)\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:i]:\n                dp[i] = max(dp[i], dp[j] + len(s[j:i]))\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "#\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n"]