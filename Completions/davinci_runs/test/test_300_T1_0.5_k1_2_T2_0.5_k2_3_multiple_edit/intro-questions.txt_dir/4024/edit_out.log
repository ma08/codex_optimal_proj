2022-04-24 15:07:59.649430 num operations 2
2022-04-24 15:07:59.649451 size on input set 1
2022-04-24 15:07:59.649585 using api key sunu
2022-04-24 15:08:09.655253 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix spelling mistakes\n    print(n - k)\n"
    },
    {
      "index": 2,
      "text": "# n, k = map(int, input().split())\n# s = input()\n\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    }
  ],
  "created": 1650812879,
  "object": "edit"
}
2022-04-24 15:08:09.655453 fix spelling mistakes 3 ['\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix spelling mistakes\n    print(n - k)\n', '# n, k = map(int, input().split())\n# s = input()\n\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n']
2022-04-24 15:08:09.655483 size on output set 3
2022-04-24 15:08:09.655490 size on input set 3
2022-04-24 15:08:09.655611 using api key sunu
2022-04-24 15:08:17.200667 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n"
    },
    {
      "index": 1,
      "text": "#\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, k = map(int, input().split())\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n"
    }
  ],
  "created": 1650812889,
  "object": "edit"
}
2022-04-24 15:08:17.200832 fix syntax errors 3 ['\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n', '#\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n', '\n\nn, k = map(int, input().split())\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k + 1)\n']
2022-04-24 15:08:17.200968 using api key derek
2022-04-24 15:08:25.792446 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, k = map(int, input().split())\ns = input()\n\n\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 1,
      "text": "n, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 2,
      "text": "# n, k = map(int, input().split())\n# s = input()\n\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif n > k or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    }
  ],
  "created": 1650812897,
  "object": "edit"
}
2022-04-24 15:08:25.792641 fix syntax errors 3 ['n, k = map(int, input().split())\ns = input()\n\n\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', 'n, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '# n, k = map(int, input().split())\n# s = input()\n\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif n > k or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n']
2022-04-24 15:08:25.792774 using api key sunu
2022-04-24 15:08:33.076175 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix syntax errors\n    print(n - k)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix spelling mistakes\n    print(n - k)\n"
    }
  ],
  "created": 1650812905,
  "object": "edit"
}
2022-04-24 15:08:33.076355 fix syntax errors 3 ['\n\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix syntax errors\n    print(n - k)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n\n    # fix spelling mistakes\n    print(n - k)\n']
2022-04-24 15:08:33.076380 size on output set 9
2022-04-24 15:08:33.076392 num operations 2
2022-04-24 15:08:33.076397 size on input set 1
2022-04-24 15:08:33.076510 using api key derek
2022-04-24 15:08:42.822963 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:i]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i]\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650812913,
  "object": "edit"
}
2022-04-24 15:08:42.823209 fix spelling mistakes 3 ["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:i]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i]\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:08:42.823318 size on output set 3
2022-04-24 15:08:42.823326 size on input set 3
2022-04-24 15:08:42.823443 using api key soukgp
2022-04-24 15:08:51.700625 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:j]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650812922,
  "object": "edit"
}
2022-04-24 15:08:51.700803 fix syntax errors 3 ["def main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:j]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:08:51.700935 using api key sunu
2022-04-24 15:09:03.693690 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN,K=map(int,input().split())\nS=input()\ndp=[0]*(N+1)\nfor i in range(1,N+1):\n    for j in range(i):\n        if S[j:i] in S[:i]:\n            dp[i]=max(dp[i],dp[j]+N-i+j)\nif dp[N]<K:\n    print(-1)\nelse:\n    print(dp[N])\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            dp[i][j] = dp[i][j - 1] + 1 if s[j - 1] == '1' else dp[i][j - 1]\n    ans = 0\n    for i in range(n + 1):\n        for j in range(i + 1, n + 1):\n            if dp[i][j] >= k:\n                ans = max(ans, j - i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:i]:\n                dp[i] = max(dp[i], dp[j] + len(s[j:i]))\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650812931,
  "object": "edit"
}
2022-04-24 15:09:03.693935 fix syntax errors 3 ['\nN,K=map(int,input().split())\nS=input()\ndp=[0]*(N+1)\nfor i in range(1,N+1):\n    for j in range(i):\n        if S[j:i] in S[:i]:\n            dp[i]=max(dp[i],dp[j]+N-i+j)\nif dp[N]<K:\n    print(-1)\nelse:\n    print(dp[N])\n', "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            dp[i][j] = dp[i][j - 1] + 1 if s[j - 1] == '1' else dp[i][j - 1]\n    ans = 0\n    for i in range(n + 1):\n        for j in range(i + 1, n + 1):\n            if dp[i][j] >= k:\n                ans = max(ans, j - i)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[:i]:\n                dp[i] = max(dp[i], dp[j] + len(s[j:i]))\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:09:03.694152 using api key soukgp
2022-04-24 15:09:15.807600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] or -1 if invalid\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s, then it can be used\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) or -1 if invalid\n    print(dp[n] if dp[n] >= k else -1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] + s[i:]\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) = len(s[j:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] (not including s[i])\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[i:]:  # if s[j:i] is a substring of s[i:]\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n] + k)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650812943,
  "object": "edit"
}
2022-04-24 15:09:15.807804 fix syntax errors 3 ["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] or -1 if invalid\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s, then it can be used\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) or -1 if invalid\n    print(dp[n] if dp[n] >= k else -1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] + s[i:]\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # if s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:]) = len(s[j:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = the max length of the string which can be made from s[:i] (not including s[i])\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[i:]:  # if s[j:i] is a substring of s[i:]\n                dp[i] = max(dp[i], dp[j] + n - i + j)  # dp[j] + n - i + j = len(s[j:i]) + len(s[i:])\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n] + k)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 15:09:15.807840 size on output set 9
