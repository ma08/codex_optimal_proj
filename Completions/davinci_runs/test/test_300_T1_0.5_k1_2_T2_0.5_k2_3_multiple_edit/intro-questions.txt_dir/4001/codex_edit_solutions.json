["N = int(input())\ndivisors = list(map(int, input().split()))\n\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if i < N - 1:\n        if divisors[i] == divisors[i + 1]:\n            x *= divisors[i]\n            i += 1\n            continue\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n", "\n", "\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor i in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for j in L:\n        D[j] = D.get(j, 0) + 1\n\n    # create list of numbers\n    X = []\n    for j in D:\n        if D[j] % 2:\n            X.append(j)\n\n    # print numbers\n    print(X[0], X[1])\n", "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1]:\n        x *= divisors[i]\n        continue\n    else:\n        y *= divisors[i]\nprint(x, y)\n", "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n", "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for elements\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements with odd number of occurances\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n", "N = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\nprint(x, y)\n", "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1] and i > 0:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n", "\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n", "# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n", "\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor t in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n", "\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\n\nn = int(input())\n\nprint(max_divisor(n))\n", "\n\ndef main():\n    # read number of test cases\n    T = int(input())\n\n    # iterate over test cases\n    for t in range(T):\n        # read N\n        N = int(input())\n        # read list\n        L = list(map(int, input().split()))\n\n        # create dictionary for numbers\n        D = {}\n        for i in L:\n            D[i] = D.get(i, 0) + 1\n\n        # create list of numbers\n        X = []\n        for i in D:\n            if D[i] % 2:\n                X.append(i)\n\n        # print numbers\n        print(X[0], X[1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "N = int(input())\ndivisors = list(map(int, input().split()))\nx, y = 1, 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1] and i != N - 1:\n        x *= divisors[i]\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n", "\n\n# read N\n\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n", "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    x *= divisors[i]\n    y *= divisors[i]\n    if x == y:\n        break\nprint(x, y)\n", "N = int(input())\nL = list(map(int, input().split()))\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\nprint(X[0], X[1])\n"]