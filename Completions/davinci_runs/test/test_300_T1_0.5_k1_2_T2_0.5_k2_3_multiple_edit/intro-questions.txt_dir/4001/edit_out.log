2022-04-24 14:40:11.166761 num operations 2
2022-04-24 14:40:11.166778 size on input set 1
2022-04-24 14:40:11.166936 using api key derek
2022-04-24 14:40:21.874147 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef max_divisor(n):\n    div = 1\n    for i in range(1,n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    }
  ],
  "created": 1650811212,
  "object": "edit"
}
2022-04-24 14:40:21.874389 fix spelling mistakes 3 ['\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(x, y)\n', '\n\n\ndef max_divisor(n):\n    div = 1\n    for i in range(1,n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n', '\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n']
2022-04-24 14:40:21.874417 size on output set 3
2022-04-24 14:40:21.874424 size on input set 3
2022-04-24 14:40:21.874539 using api key kouti
2022-04-24 14:40:31.453982 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1] and i > 0:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1]:\n        x *= divisors[i]\n        continue\n    else:\n        y *= divisors[i]\nprint(x, y)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    x *= divisors[i]\n    y *= divisors[i]\n    if x == y:\n        break\nprint(x, y)\n"
    }
  ],
  "created": 1650811222,
  "object": "edit"
}
2022-04-24 14:40:31.454158 fix syntax errors 3 ['\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1] and i > 0:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\n\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i - 1]:\n        x *= divisors[i]\n        continue\n    else:\n        y *= divisors[i]\nprint(x, y)\n', '\nN = int(input())\ndivisors = list(map(int, input().split()))\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    x *= divisors[i]\n    y *= divisors[i]\n    if x == y:\n        break\nprint(x, y)\n']
2022-04-24 14:40:31.454292 using api key jaanu
2022-04-24 14:40:42.055700 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\ndivisors = list(map(int, input().split()))\n\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if i < N - 1:\n        if divisors[i] == divisors[i + 1]:\n            x *= divisors[i]\n            i += 1\n            continue\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\ndivisors = list(map(int, input().split()))\nx, y = 1, 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1] and i != N - 1:\n        x *= divisors[i]\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\nprint(x, y)\n"
    }
  ],
  "created": 1650811232,
  "object": "edit"
}
2022-04-24 14:40:42.055877 fix syntax errors 3 ['N = int(input())\ndivisors = list(map(int, input().split()))\n\nx = divisors[0]\ny = divisors[1]\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if i < N - 1:\n        if divisors[i] == divisors[i + 1]:\n            x *= divisors[i]\n            i += 1\n            continue\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n', 'N = int(input())\ndivisors = list(map(int, input().split()))\nx, y = 1, 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1] and i != N - 1:\n        x *= divisors[i]\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\n\nprint(x, y)\n', 'N = int(input())\ndivisors = list(map(int, input().split()))\nx = 1\ny = 1\nfor i in range(N):\n    if divisors[i] == 1:\n        continue\n    if divisors[i] == divisors[i + 1]:\n        x *= divisors[i]\n        i += 1\n    else:\n        y *= divisors[i]\n\n\n\n\n\n\n\n\nprint(x, y)\n']
2022-04-24 14:40:42.056013 using api key sunu
2022-04-24 14:40:49.580355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\n\nn = int(input())\n\nprint(max_divisor(n))\n"
    },
    {
      "index": 1,
      "text": "\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n"
    },
    {
      "index": 2,
      "text": "\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n"
    }
  ],
  "created": 1650811242,
  "object": "edit"
}
2022-04-24 14:40:49.580528 fix syntax errors 3 ['\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\n\nn = int(input())\n\nprint(max_divisor(n))\n', '\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n', '\ndef max_divisor(n):\n    div = 1\n    for i in range(1, n):\n        if n % i == 0:\n            div = i\n    return div\n\nn = int(input())\n\nprint(max_divisor(n))\n']
2022-04-24 14:40:49.580551 size on output set 8
2022-04-24 14:40:49.580562 num operations 2
2022-04-24 14:40:49.580568 size on input set 1
2022-04-24 14:40:49.580700 using api key jaanu
2022-04-24 14:41:02.869674 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    },
    {
      "index": 2,
      "text": "\n\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor t in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n"
    }
  ],
  "created": 1650811250,
  "object": "edit"
}
2022-04-24 14:41:02.869938 fix spelling mistakes 3 ['\n\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n', '\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n', '\n\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor t in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n']
2022-04-24 14:41:02.869981 size on output set 3
2022-04-24 14:41:02.869991 size on input set 3
2022-04-24 14:41:02.870159 using api key sunu
2022-04-24 14:41:11.340065 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nL = list(map(int, input().split()))\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\nprint(X[0], X[1])\n"
    },
    {
      "index": 2,
      "text": "# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650811262,
  "object": "edit"
}
2022-04-24 14:41:11.340250 fix syntax errors 3 ['\n', 'N = int(input())\nL = list(map(int, input().split()))\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\nprint(X[0], X[1])\n', '# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of numbers\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print numbers\nprint(X[0], X[1])\n']
2022-04-24 14:41:11.340383 using api key soukgp
2022-04-24 14:41:19.000755 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for elements\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements with odd number of occurances\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n"
    },
    {
      "index": 1,
      "text": "\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n"
    },
    {
      "index": 2,
      "text": "\n\n# read N\n\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n"
    }
  ],
  "created": 1650811271,
  "object": "edit"
}
2022-04-24 14:41:19.000937 fix syntax errors 3 ['\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for elements\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements with odd number of occurances\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n', '\n# read N\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n', '\n\n# read N\n\nN = int(input())\n# read list\nL = list(map(int, input().split()))\n\n# create dictionary for numbers\nD = {}\nfor i in L:\n    D[i] = D.get(i, 0) + 1\n\n# create list of elements\nX = []\nfor i in D:\n    if D[i] % 2:\n        X.append(i)\n\n# print elements\nprint(X[0], X[1])\n']
2022-04-24 14:41:19.001075 using api key soukgp
2022-04-24 14:41:32.123497 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read number of test cases\n    T = int(input())\n\n    # iterate over test cases\n    for t in range(T):\n        # read N\n        N = int(input())\n        # read list\n        L = list(map(int, input().split()))\n\n        # create dictionary for numbers\n        D = {}\n        for i in L:\n            D[i] = D.get(i, 0) + 1\n\n        # create list of numbers\n        X = []\n        for i in D:\n            if D[i] % 2:\n                X.append(i)\n\n        # print numbers\n        print(X[0], X[1])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor t in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n"
    },
    {
      "index": 2,
      "text": "\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor i in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for j in L:\n        D[j] = D.get(j, 0) + 1\n\n    # create list of numbers\n    X = []\n    for j in D:\n        if D[j] % 2:\n            X.append(j)\n\n    # print numbers\n    print(X[0], X[1])\n"
    }
  ],
  "created": 1650811279,
  "object": "edit"
}
2022-04-24 14:41:32.123672 fix syntax errors 3 ['\n\ndef main():\n    # read number of test cases\n    T = int(input())\n\n    # iterate over test cases\n    for t in range(T):\n        # read N\n        N = int(input())\n        # read list\n        L = list(map(int, input().split()))\n\n        # create dictionary for numbers\n        D = {}\n        for i in L:\n            D[i] = D.get(i, 0) + 1\n\n        # create list of numbers\n        X = []\n        for i in D:\n            if D[i] % 2:\n                X.append(i)\n\n        # print numbers\n        print(X[0], X[1])\n\n\nif __name__ == "__main__":\n    main()\n', '\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor t in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for i in L:\n        D[i] = D.get(i, 0) + 1\n\n    # create list of numbers\n    X = []\n    for i in D:\n        if D[i] % 2:\n            X.append(i)\n\n    # print numbers\n    print(X[0], X[1])\n', '\n# read number of test cases\nT = int(input())\n\n# iterate over test cases\nfor i in range(T):\n    # read N\n    N = int(input())\n    # read list\n    L = list(map(int, input().split()))\n\n    # create dictionary for numbers\n    D = {}\n    for j in L:\n        D[j] = D.get(j, 0) + 1\n\n    # create list of numbers\n    X = []\n    for j in D:\n        if D[j] % 2:\n            X.append(j)\n\n    # print numbers\n    print(X[0], X[1])\n']
2022-04-24 14:41:32.123704 size on output set 9
