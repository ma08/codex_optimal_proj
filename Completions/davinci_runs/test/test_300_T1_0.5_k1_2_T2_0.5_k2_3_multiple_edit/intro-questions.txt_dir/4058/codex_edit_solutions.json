["\ndef get_input(f):\n    n, r = [int(x) for x in f.readline().split()]\n    a = [int(x) for x in f.readline().split()]\n    return n, r, a[:n]\n\n    \"\"\"\n    >>> solve(5, 2, [1, 0, 0, 0, 1]) == 2\n    True\n    >>> solve(5, 2, [1, 0, 0, 0, 0]) == -1\n    True\n    >>> solve(5, 2, [1, 1, 0, 0, 0]) == -1\n    True\n    >>> solve(5, 2, [0, 0, 0, 0, 0]) == -1\n    True\n    >>> solve(5, 2, [0, 0, 0, 0, 1]) == 1\n    True\n    >>> solve(5, 2, [1, 0, 1, 0, 1]) == 0\n    True\n    >>> solve(5, 2, [1, 0, 1, 0, 0]) == 1\n    True\n    >>> solve(5, 2, [1, 0, 1, 1, 0]) == 1\n    True\n    >>> solve(5, 2, [1, 0, 1, 1, 1]) == 1\n    True\n    >>> solve(5, 2, [1, 1, 1, 1, 1]) == 0\n    True\n    \"\"\"\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input(open('input.txt', 'r'))\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n    main()\n", "\nfrom collections import deque\nfrom itertools import combinations\n\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.append(deque())\nfor i in range(n):\n    a[i] = deque(map(int, input().split()))\nfor i in range(m):\n    b.append(deque())\nfor i in range(m):\n    b[i] = deque(map(int, input().split()))\n\ndef solve(a, b, n, m):\n    if n == 1 or m == 1:\n        return sum(a[0]) + sum(b[0])\n    else:\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                ans = max(ans, a[i][j] + b[i][j])\n        return ans\n\nif __name__ == '__main__':\n    print(solve(a, b, n, m))\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()][:n]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2 * r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, k, a\n\ndef solve(n, k, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i > 2*k:\n                return -1\n            if j < n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j + 1\n        else:\n            i += 2\n    return ans\n\ndef main():\n    n, k, a = get_input()\n    ans = solve(n, k, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters_pos = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters_pos.append(i)\n    if len(heaters_pos) == 0:\n        print(-1)\n        return\n    heaters_pos.append(n)\n    heaters_pos.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters_pos) - 1:\n        if heaters_pos[i] + r - 1 >= heaters_pos[i + 1] - r:\n            heaters_pos.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters_pos = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters_pos.append(i)\n    if len(heaters_pos) == 0:\n        print(-1)\n        return\n    heaters_pos.append(n)\n    heaters_pos.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters_pos) - 1:\n        if heaters_pos[i] + r - 1 >= heaters_pos[i + 1]:\n            heaters_pos.pop(i + 1)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n = int(input())\n    a = [int(x) for x in input().split()] + [0]\n    return n, a\n\ndef solve(n, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            ans += 1\n        i += 1\n    return ans\n\ndef main():\n    n, a = get_input()\n    ans = solve(n, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n, r = [int(x) for x in raw_input().split()]\n    a = [int(x) for x in raw_input().split()]\n    return n, r, a\n\n    \"\"\"\n    >>> solve(5, 2, [1, 0, 0, 0, 1])\n    2\n    >>> solve(5, 2, [1, 0, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [1, 1, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [0, 0, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [0, 0, 0, 0, 1])\n    1\n    >>> solve(5, 2, [1, 0, 1, 0, 1])\n    0\n    >>> solve(5, 2, [1, 0, 1, 0, 0])\n    1\n    >>> solve(5, 2, [1, 0, 1, 1, 0])\n    1\n    >>> solve(5, 2, [1, 0, 1, 1, 1])\n    1\n    >>> solve(5, 2, [1, 1, 1, 1, 1])\n    0\n    \"\"\"\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef get_input():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, k, a\n\ndef solve(n, k, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*k:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, k, a = get_input()\n    ans = solve(n, k, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = [-r]\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 1:\n        print(-1)\n        return\n    heaters.append(n)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\n    \"\"\"\n    >>> solve(5, 2, [1, 0, 0, 0, 1])\n    2\n    >>> solve(5, 2, [1, 0, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [1, 1, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [0, 0, 0, 0, 0])\n    -1\n    >>> solve(5, 2, [0, 0, 0, 0, 1])\n    1\n    >>> solve(5, 2, [1, 0, 1, 0, 1])\n    0\n    >>> solve(5, 2, [1, 0, 1, 0, 0])\n    1\n    >>> solve(5, 2, [1, 0, 1, 1, 0])\n    1\n    >>> solve(5, 2, [1, 0, 1, 1, 1])\n    1\n    >>> solve(5, 2, [1, 1, 1, 1, 1])\n    0\n    \"\"\"\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            first_zero = i\n            while i < n and a[i] == 0:\n                i += 1\n            last_zero = i\n            if last_zero - first_zero > 2*r:\n                return -1  # impossible to make every room happy\n            if last_zero < n:\n                a[last_zero] = 1  # make the last_zero-th room happy\n                ans += 1  # you need to visit the last_zero-th room\n            else:\n                return -1  # impossible to make every room happy\n        else:\n            i += 1\n    return ans  # number of visits\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = [-r - 1]\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n + r + 1)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r * 2 + 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    ans = 0\n    i = 0\n    for i in range(n):\n        while i < n and a[i] <= k:\n            k -= a[i]\n            i += 1\n        if i == n:\n            break\n        ans += 1\n        k = 2 * k\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, k, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters_pos = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters_pos.append(i)\n    if len(heaters_pos) == 0:\n        print(-1)\n        return\n    heaters_pos.append(n)\n    heaters_pos.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters_pos) - 1:\n        if heaters_pos[i] + r - 1 >= heaters_pos[i + 1] - 1:\n            heaters_pos.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]