["\n\nn = int(input())\ns = input()\n\nprint(\"\".join(s.split(\"xxx\")))\n\n# def get_result(n, s):\n#     def find_next_xxx_index(s, start_index=0):\n#         index = start_index\n#         while index < len(s) and s[index] == \"x\":\n#             index += 1\n#         while index < len(s):\n#             if s[index] == \"x\":\n#                 if s[index - 1] == \"x\" and s[index - 2] == \"x\":\n#                     return index\n#             index += 1\n#         return -1\n\n#     def remove_char_at_index(s, index):\n#         return s[:index] + s[index + 1:]\n\n#     def remove_first_xxx(s):\n#         i = find_next_xxx_index(s)\n#         if i == -1:\n#             return s\n#         return remove_char_at_index(s, i)\n\n#     result = len(s)\n#     while True:\n#         s = remove_first_xxx(s)\n#         result = min(result, len(s))\n#         i = find_next_xxx_index(s)\n#         if i == -1:\n#             return result\n#         s = remove_char_at_index(s, i)\n#         result = min(result, len(s))\n\n\n# if __name__ == \"__main__\":\n#     n = int(input())\n#     s = input()\n#     print(get_result(n, s))\n", "\nn = int(input())\nfile_name = input()\n\ncount = 0\nfor i in range(2, n):\n    if file_name[i-2] == file_name[i-1] == file_name[i]:\n        count += 1\n\nprint(count)\n", "\n\ndef get_result(n, s):\n    def find_next_xxx_index(s):\n        index = 0\n        while index < len(s) and s[index] == 'x':\n            index += 1\n        while index < len(s):\n            if s[index] == 'x':\n                if s[index - 1] == 'x' and s[index - 2] == 'x':\n                    return index\n            index += 1\n        return None\n\n    def remove_char_at_index(s, index):\n        return s[:index] + s[index+1:]\n\n    def remove_first_xxx(s):\n        i = find_next_xxx_index(s)\n        if i is None:\n            return s\n        return remove_char_at_index(s, i)\n\n    result = len(s)\n    while True:\n        s = remove_first_xxx(s)\n        result = min(result, len(s))\n        i = find_next_xxx_index(s)\n        if i is None:\n            return result\n        s = remove_char_at_index(s, i)\n        result = min(result, len(s))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\ndef get_result(n, s):\n    def find_next_xxx_index(s, start_index=0):\n        index = start_index\n        while index < len(s) and s[index] == \"x\":\n            index += 1\n        while index < len(s):\n            if s[index] == \"x\":\n                if s[index - 1] == \"x\" and s[index - 2] == \"x\":\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(s, index):\n        return s[:index] + s[index + 1:]\n\n    def remove_first_xxx(s):\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return s\n        return remove_char_at_index(s, i)\n\n    result = len(s)\n    while True:\n        s = remove_first_xxx(s)\n        result = min(result, len(s))\n        i = find_next_xxx_index(s)\n    return result\n        if i == -1:\n            return result\n        s = remove_char_at_index(s, i)\n        result = min(result, len(s))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\n# n = int(input())\n# s = input()\n# print(\"\".join(s.split(\"xxx\")))\n\ndef get_result(string):\n    def find_next_xxx_index(string, start_index=0):\n        index = start_index\n        while index < len(string) and string[index] == \"x\":\n            index += 1\n        while index < len(string):\n            if string[index] == \"x\":\n                if string[index - 1] == \"x\" and string[index - 2] == \"x\":\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(string, index):\n        return string[:index] + string[index + 1:]\n\n    def remove_first_xxx(string):\n        i = find_next_xxx_index(string)\n        if i == -1:\n            return string\n        return remove_char_at_index(string, i)\n\n    result = len(string)\n    while True:\n        string = remove_first_xxx(string)\n        result = min(result, len(string))\n        i = find_next_xxx_index(string)\n        if i == -1:\n            return result\n        string = remove_char_at_index(string, i)\n        result = min(result, len(string))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(s))\n", "\n\nn = int(input())\nfile_name = input()\n# for i in file_name:\n#     if i == 'xxx':\n#         count += 1\ncount = 0\nfor i in range(2, n):\n    if file_name[i-2] == file_name[i-1] == file_name[i]:\n        count += 1\n\n\nprint(count)\n", "\n\nn = int(input())\nfilename = input()\n\ncount = 0\nfor i in range(2, n):\n    if filename[i-2] == filename[i-1] and filename[i-1] == filename[i]:\n        count += 1\n\nprint(count)\n", "\n\ndef get_result(n, s):\n    def find_next_xxx_index(s_, start_index=0):\n        index = start_index\n        while index < len(s_) and s_[index] == 'x':\n            index += 1\n        while index < len(s_):\n            if s_[index] == 'x':\n                if s_[index - 1] == 'x' and s_[index - 2] == 'x':\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(s_, index):\n        return s_[:index] + s_[index+1:]\n\n    def remove_first_xxx(s_):\n        i = find_next_xxx_index(s_)\n        if i == -1:\n            return s_\n        return remove_char_at_index(s_, i)\n\n    result = len(s)\n    while True:\n        s = remove_first_xxx(s)\n        result = min(result, len(s))\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return result\n        s = remove_char_at_index(s, i)\n        result = min(result, len(s))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\nn = int(input().strip())\nfilename = input().strip()\n\ncount = 0\nfor i in range(2, n+1):\n    if filename[i-2] == filename[i-1] == filename[i]:\n        count += 1\n\nprint(count)\n", "\nn = int(input())\nfile_name = input()\n\ncount = 0\nfor i in range(2, n+1):\n    if file_name[i-2] == file_name[i-1] == file_name[i]:\n        count += 1\n\nprint(count)\n", "\nn = int(input())\nfile_name = input()\n\ncount = 0\nfor i in range(2, n):\n    if file_name[i-2] == file_name[i-1] == file_name[i]:  # if the three consecutive characters are the same\n        count += 1\n\n\nprint(count)\n", "\n\nn = int(input())\nfile_name = input()\n\ncount = 0\nfor i in range(2, n):\n    if file_name[i-2] == file_name[i-1] == file_name[i]:  # if the three consecutive characters are the same\n        count += 1\n\n\n\n\nprint(count)\n", "\n\ndef get_result(n, s):\n    def find_next_xxx_index(s, start_index=0):\n        index = start_index\n        while index < len(s) and s[index] == '?':\n            index += 1\n        while index < len(s):\n            if s[index] == '?':\n                if s[index - 1] == '?' and s[index - 2] == '?':\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(s, index):\n        return s[:index] + s[index+1:]\n\n    def remove_first_xxx(s):\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return s\n        return remove_char_at_index(s, i)\n\n    result = len(s)\n    while True:\n        s = remove_first_xxx(s)\n        result = min(result, len(s))\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return result\n        s = remove_char_at_index(s, i)\n        result = min(result, len(s))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\ndef get_result(n, s):\n    def find_next_xxx_index(s, start_index=0):\n        index = start_index\n        while index < len(s) and s[index] == \"x\":\n            index += 1\n        while index < len(s):\n            if s[index] == \"x\":\n                if s[index - 1] == \"x\" and s[index - 2] == \"x\":\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(s, index):\n        return s[:index] + s[index + 1:]\n\n    def remove_first_xxx(s):\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return s\n        return remove_char_at_index(s, i)\n\n    result = len(s)\n    while result > 2:\n        s = remove_first_xxx(s)\n        result = min(result, len(s))\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return result\n        s = remove_char_at_index(s, i)\n        result = min(result, len(s))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\n# n = int(input())\n# s = input()\n# print(\"\".join(s.split(\"xxx\")))\n\ndef get_result(n, s):\n    def find_next_xxx_index(string, start_index=0):\n        index = start_index\n        while index < len(string) and string[index] == \"x\":\n            index += 1\n        while index < len(string):\n            if string[index] == \"x\":\n                if string[index - 1] == \"x\" and string[index - 2] == \"x\":\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(string, index):\n        return string[:index] + string[index + 1:]\n\n    def remove_first_xxx(string):\n        i = find_next_xxx_index(string)\n        if i == -1:\n            return string\n        return remove_char_at_index(string, i)\n\n    result = len(s)\n    while True:\n        string = remove_first_xxx(s)\n        result = min(result, len(string))\n        i = find_next_xxx_index(s)\n        if i == -1:\n            return result\n        string = remove_char_at_index(s, i)\n        result = min(result, len(string))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n", "\n\nn = int(input())\nfilename = input()\n\ncount = 0\nfor i in range(2, n+1):\n    if filename[i-2] == filename[i-1] == filename[i]:\n        count += 1\n\nprint(count)\n", "\n\n# n = int(input())\n# s = input()\n# print(\"\".join(s.split(\"xxx\")))\n\ndef get_result(n, s):\n    def find_next_xxx_index(string, start_index=0):\n        index = start_index\n        while index < len(string) and string[index] == \"x\":\n            index += 1\n        while index < len(string):\n            if string[index] == \"x\":\n                if string[index - 1] == \"x\" and string[index - 2] == \"x\":\n                    return index\n            index += 1\n        return -1\n\n    def remove_char_at_index(string, index):\n        return string[:index] + string[index + 1:]\n\n    def remove_first_xxx(string):\n        i = find_next_xxx_index(string)\n        if i == -1:\n            return string\n        return remove_char_at_index(string, i)\n\n    result = len(string)\n    string = s\n    while True:\n        string = remove_first_xxx(string)\n        result = min(result, len(string))\n        i = find_next_xxx_index(string)\n        if i == -1:\n            return result\n        string = remove_char_at_index(string, i)\n        result = min(result, len(string))\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(get_result(n, s))\n"]