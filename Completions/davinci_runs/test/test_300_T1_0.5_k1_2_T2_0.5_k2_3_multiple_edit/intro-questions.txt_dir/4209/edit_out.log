2022-04-24 19:15:28.256237 num operations 2
2022-04-24 19:15:28.256247 size on input set 1
2022-04-24 19:15:28.256358 using api key derek
2022-04-24 19:15:35.962055 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650827728,
  "object": "edit"
}
2022-04-24 19:15:35.962271 fix spelling mistakes 3 ["\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:15:35.962306 size on output set 3
2022-04-24 19:15:35.962313 size on input set 3
2022-04-24 19:15:35.962429 using api key soukgp
2022-04-24 19:15:43.160423 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650827736,
  "object": "edit"
}
2022-04-24 19:15:43.160619 fix syntax errors 3 ["import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n # \n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:15:43.160776 using api key kouti
2022-04-24 19:15:55.250634 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if (a[i] > a[j] and dp[i] < dp[j] + 1):\n                dp[i] = dp[j] + 1\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650827743,
  "object": "edit"
}
2022-04-24 19:15:55.250901 fix syntax errors 3 ["import sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef solve(n, a):\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i):\n            if (a[i] > a[j] and dp[i] < dp[j] + 1):\n                dp[i] = dp[j] + 1\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(n, a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:15:55.251056 using api key jaanu
2022-04-24 19:16:05.228207 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    ans = 0\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650827755,
  "object": "edit"
}
2022-04-24 19:16:05.228401 fix syntax errors 3 ["import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    ans = 0\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 19:16:05.228431 size on output set 8
2022-04-24 19:16:05.228442 num operations 2
2022-04-24 19:16:05.228448 size on input set 1
2022-04-24 19:16:05.228583 using api key kouti
2022-04-24 19:16:16.844182 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1650827765,
  "object": "edit"
}
2022-04-24 19:16:16.844397 fix spelling mistakes 3 ['\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    pass\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', "\n\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"]
2022-04-24 19:16:16.844508 size on output set 3
2022-04-24 19:16:16.844516 size on input set 3
2022-04-24 19:16:16.844650 using api key jaanu
2022-04-24 19:16:37.312051 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(n, a):\n\tsums = [0] * (n+1)\n\tfor i in range(1, n+1):\n\t\tsums[i] = sums[i-1] + a[i-1]\n\t# print(sums)\n\tdp = [0] * (n+1)\n\tdp[1] = 1\n\tfor i in range(2, n+1):\n\t\tdp[i] = dp[i-1]\n\t\tfor j in range(1, i):\n\t\t\tif sums[i] - sums[j] == 0:\n\t\t\t\tdp[i] = max(dp[i], dp[j]+1)\n\t# print(dp)\n\tprint(dp[n])\n\ti = n\n\twhile i > 0:\n\t\tj = i-1\n\t\twhile j > 0:\n\t\t\tif sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n\t\t\t\tprint(j, i)\n\t\t\t\ti = j\n\t\t\t\tbreak\n\t\t\tj -= 1\n\t\telse:\n\t\t\tprint(i, i)\n\t\t\ti -= 1\n\nif __name__ == '__main__':\n\tn = int(sys.stdin.readline())\n\ta = list(map(int, sys.stdin.readline().split()))\n\tsolve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1): \n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1650827776,
  "object": "edit"
}
2022-04-24 19:16:37.312259 fix syntax errors 3 ["\nimport sys\n\ndef solve(n, a):\n\tsums = [0] * (n+1)\n\tfor i in range(1, n+1):\n\t\tsums[i] = sums[i-1] + a[i-1]\n\t# print(sums)\n\tdp = [0] * (n+1)\n\tdp[1] = 1\n\tfor i in range(2, n+1):\n\t\tdp[i] = dp[i-1]\n\t\tfor j in range(1, i):\n\t\t\tif sums[i] - sums[j] == 0:\n\t\t\t\tdp[i] = max(dp[i], dp[j]+1)\n\t# print(dp)\n\tprint(dp[n])\n\ti = n\n\twhile i > 0:\n\t\tj = i-1\n\t\twhile j > 0:\n\t\t\tif sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n\t\t\t\tprint(j, i)\n\t\t\t\ti = j\n\t\t\t\tbreak\n\t\t\tj -= 1\n\t\telse:\n\t\t\tprint(i, i)\n\t\t\ti -= 1\n\nif __name__ == '__main__':\n\tn = int(sys.stdin.readline())\n\ta = list(map(int, sys.stdin.readline().split()))\n\tsolve(n, a)\n", "\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n", "\n\nimport sys\n\ndef solve(n, a):\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1): \n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"]
2022-04-24 19:16:37.312419 using api key sunu
2022-04-24 19:17:04.435354 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(1, [1])\n    1\n    1\n    >>> solve(1, [2])\n    1\n    1\n    >>> solve(2, [1, 1])\n    2\n    1 1\n    >>> solve(2, [1, 2])\n    2\n    1 1\n    1 2\n    >>> solve(2, [2, 1])\n    2\n    1 2\n    2 2\n    >>> solve(2, [2, 2])\n    1\n    2\n    >>> solve(3, [1, 1, 1])\n    3\n    1 1\n    2 2\n    3 3\n    >>> solve(3, [1, 1, 2])\n    3\n    1 1\n    2 2\n    2 3\n    >>> solve(3, [1, 1, 3])\n    3\n    1 1\n    2 3\n    3 3\n    >>> solve(3, [1, 2, 1])\n    3\n    1 1\n    1 2\n    2 2\n    >>> solve(3, [1, 2, 2])\n    3\n    1 1\n    1 2\n    2 2\n    >>> solve(3, [1, 2, 3])\n    3\n    1 1\n    1 2\n    2 3\n    >>> solve(3, [1, 3, 1])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [1, 3, 2])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [1, 3, 3])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [2, 1, 1])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 1, 2])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 1, 3])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 2, 1])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 2, 2])\n    2\n    2 2\n    2 3\n    >>> solve(3, [2, 2, 3])\n    2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 1])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 2])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 3])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 1])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 2])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 3])\n    2\n    1 3\n    3 3\n    >>> solve(3, [3, 2, 1])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 2, 2])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 2, 3])\n    1\n    3\n    >>> solve(3, [3, 3, 1])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 3, 2])\n    1\n    3\n    >>> solve(3, [3, 3, 3])\n    1\n    3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1650827797,
  "object": "edit"
}
2022-04-24 19:17:04.435609 fix syntax errors 3 ['\n\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    pass\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    pass\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(1, [1])\n    1\n    1\n    >>> solve(1, [2])\n    1\n    1\n    >>> solve(2, [1, 1])\n    2\n    1 1\n    >>> solve(2, [1, 2])\n    2\n    1 1\n    1 2\n    >>> solve(2, [2, 1])\n    2\n    1 2\n    2 2\n    >>> solve(2, [2, 2])\n    1\n    2\n    >>> solve(3, [1, 1, 1])\n    3\n    1 1\n    2 2\n    3 3\n    >>> solve(3, [1, 1, 2])\n    3\n    1 1\n    2 2\n    2 3\n    >>> solve(3, [1, 1, 3])\n    3\n    1 1\n    2 3\n    3 3\n    >>> solve(3, [1, 2, 1])\n    3\n    1 1\n    1 2\n    2 2\n    >>> solve(3, [1, 2, 2])\n    3\n    1 1\n    1 2\n    2 2\n    >>> solve(3, [1, 2, 3])\n    3\n    1 1\n    1 2\n    2 3\n    >>> solve(3, [1, 3, 1])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [1, 3, 2])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [1, 3, 3])\n    3\n    1 1\n    1 3\n    2 3\n    >>> solve(3, [2, 1, 1])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 1, 2])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 1, 3])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 2, 1])\n    3\n    1 2\n    2 2\n    2 3\n    >>> solve(3, [2, 2, 2])\n    2\n    2 2\n    2 3\n    >>> solve(3, [2, 2, 3])\n    2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 1])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 2])\n    3\n    1 2\n    2 3\n    3 3\n    >>> solve(3, [2, 3, 3])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 1])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 2])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 1, 3])\n    2\n    1 3\n    3 3\n    >>> solve(3, [3, 2, 1])\n    3\n    1 3\n    2 3\n    3 3\n    >>> solve(3, [3, 2, 2])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 2, 3])\n    1\n    3\n    >>> solve(3, [3, 3, 1])\n    2\n    2 3\n    3 3\n    >>> solve(3, [3, 3, 2])\n    1\n    3\n    >>> solve(3, [3, 3, 3])\n    1\n    3\n    """\n    pass\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-24 19:17:04.435779 using api key derek
2022-04-24 19:17:15.209508 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\n# coding: utf-8\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 2,
      "text": "\nimport doctest\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1650827824,
  "object": "edit"
}
2022-04-24 19:17:15.209765 fix syntax errors 3 ['\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n# coding: utf-8\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\nimport doctest\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) # doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) # doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) # doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-24 19:17:15.209885 size on output set 8
