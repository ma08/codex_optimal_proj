2022-04-24 20:46:48.417262 num operations 2
2022-04-24 20:46:48.417272 size on input set 1
2022-04-24 20:46:48.417390 using api key sunu
2022-04-24 20:46:56.892916 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N): \n    c, t = map(int, input().split()) \n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650833208,
  "object": "edit"
}
2022-04-24 20:46:56.893127 fix spelling mistakes 3 ["\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N): \n    c, t = map(int, input().split()) \n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-24 20:46:56.893156 size on output set 3
2022-04-24 20:46:56.893163 size on input set 3
2022-04-24 20:46:56.893291 using api key derek
2022-04-24 20:47:04.411369 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N): \n    c, t = map(int, input().split()) \n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650833216,
  "object": "edit"
}
2022-04-24 20:47:04.411557 fix syntax errors 3 ["N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N): \n    c, t = map(int, input().split()) \n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-24 20:47:04.411716 using api key sunu
2022-04-24 20:47:11.017083 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\n\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n\n\n\n\n\n    print(min(costs))\n"
    }
  ],
  "created": 1650833224,
  "object": "edit"
}
2022-04-24 20:47:11.017295 fix syntax errors 3 ["\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n\n\n\n\n\n    print(min(costs))\n"]
2022-04-24 20:47:11.017448 using api key soukgp
2022-04-24 20:47:18.910492 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, K = list(map(int, input().split()))\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = list(map(int, input().split()))\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650833231,
  "object": "edit"
}
2022-04-24 20:47:18.910717 fix syntax errors 3 ["\n\nN, K = list(map(int, input().split()))\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = list(map(int, input().split()))\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-24 20:47:18.910847 size on output set 7
2022-04-24 20:47:18.910861 num operations 2
2022-04-24 20:47:18.910866 size on input set 1
2022-04-24 20:47:18.910992 using api key kouti
2022-04-24 20:47:28.025889 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1 # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833238,
  "object": "edit"
}
2022-04-24 20:47:28.026073 fix spelling mistakes 3 ['\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # 初期値はTLEになる値\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1 # タイムリミット以上のものを入れておく\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:47:28.026113 size on output set 3
2022-04-24 20:47:28.026121 size on input set 3
2022-04-24 20:47:28.026240 using api key derek
2022-04-24 20:47:36.015262 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833248,
  "object": "edit"
}
2022-04-24 20:47:36.015456 fix syntax errors 3 ['import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # 初期値はTLEになる値\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # 初期値はTLEになる値\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # 初期値はTLEになる値\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:47:36.015611 using api key kouti
2022-04-24 20:47:44.369202 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1 # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        print(cost, time)\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1  # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1  # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833256,
  "object": "edit"
}
2022-04-24 20:47:44.369382 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1 # タイムリミット以上のものを入れておく\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        print(cost, time)\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1  # タイムリミット以上のものを入れておく\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1  # タイムリミット以上のものを入れておく\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:47:44.369609 using api key jaanu
2022-04-24 20:47:53.344828 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split()) # n: number of test cases, t: time limit\n    min_cost = t + 1 # minimum cost\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\") \n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650833264,
  "object": "edit"
}
2022-04-24 20:47:53.345047 fix syntax errors 3 ['import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split()) # n: number of test cases, t: time limit\n    min_cost = t + 1 # minimum cost\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE") \n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 20:47:53.345079 size on output set 8
