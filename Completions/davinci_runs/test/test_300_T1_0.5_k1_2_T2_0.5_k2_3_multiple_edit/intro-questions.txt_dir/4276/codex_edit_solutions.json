["\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split()) # n: number of test cases, t: time limit\n    min_cost = t + 1 # minimum cost\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n\n\n\n\n\n    print(min(costs))\n", "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1  # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nN, K = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().rstrip().split())\n    min_cost = t + 1 # \u30bf\u30a4\u30e0\u30ea\u30df\u30c3\u30c8\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u5165\u308c\u3066\u304a\u304f\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().rstrip().split())\n        print(cost, time)\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split()) \n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\") \n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1  # \u521d\u671f\u5024\u306fTLE\u306b\u306a\u308b\u5024\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n", "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N): \n    c, t = map(int, input().split()) \n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nN, K = list(map(int, input().split()))\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = list(map(int, input().split()))\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= K]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]