"""
You are given strings S and T consisting of lowercase English letters.
You can perform the following operation on S any number of times:
Operation: Choose two distinct lowercase English letters c_1 and c_2, then replace every occurrence of c_1 with c_2, and every occurrence of c_2 with c_1.
Determine if S and T can be made equal by performing the operation zero or more times.

-----Constraints-----
 - 1 \leq |S| \leq 2 \times 10^5
 - |S| = |T|
 - S and T consists of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S
T

-----Output-----
If S and T can be made equal, print Yes; otherwise, print No.

-----Sample Input-----
azzel
apple

-----Sample Output-----
Yes

azzel can be changed to apple, as follows:
 - Choose e as c_1 and l as c_2. azzel becomes azzle.
 - Choose z as c_1 and p as c_2. azzle becomes apple.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\n\n# \u5404\u6587\u5b57\u304c\u51fa\u73fe\u3059\u308b\u56de\u6570\u3092\u6570\u3048\u308b\ns_dict = {}\nt_dict = {}\n\nfor s_i in s:\n    if s_dict.get(s_i) is None:\n        s_dict[s_i] = 0\n    s_dict[s_i] += 1\n\nfor t_i in t:\n    if t_dict.get(t_i) is None:\n        t_dict[t_i] = 0\n    t_dict[t_i] += 1\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u304c\u7b49\u3057\u3044\u304b\u30c1\u30a7\u30c3\u30af\nfor k in s_dict.keys():\n    if t_dict.get(k) is None or s_dict[k] != t_dict[k]:\n        print(\"No\")\n        exit()\n\nprint(\"Yes\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# rasie if the length of S and T is different\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        raise ValueError\n\n    # create a dict for both S and T\n    dic_s = {}\n    dic_t = {}\n    for i in range(len(s)):\n        if s[i] in dic_s:\n            dic_s[s[i]] += 1\n        else:\n            dic_s[s[i]] = 1\n\n        if t[i] in dic_t:\n            dic_t[t[i]] += 1\n        else:\n            dic_t[t[i]] = 1\n\n    # check if they have different letter\n    for key in dic_s:\n        if key not in dic_t:\n            print(\"No\")\n            return\n        if dic_s[key] != dic_t[key]:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ns = input()\nt = input()\n\n# s = \"azzel\"\n# t = \"apple\"\n\n# s = \"abcdefghijklmnopqrstuvwxyz\"\n# t = \"bcdefghijklmnopqrstuvwxyza\"\n\n# s = \"abcdefghijklmnopqrstuvwxyz\"\n# t = \"bcdefghijklmnopqrstuvwxyz\"\n\ns_dict = {}\ns_list = list(s)\nfor i in s_list:\n    if i in s_dict:\n        s_dict[i] += 1\n    else:\n        s_dict[i] = 1\n\nt_dict = {}\nt_list = list(t)\nfor i in t_list:\n    if i in t_dict:\n        t_dict[i] += 1\n    else:\n        t_dict[i] = 1\n\nfor k, v in t_dict.items():\n    if k not in s_dict:\n        print(\"No\")\n        exit()\n    else:\n        if v > s_dict[k]:\n            print(\"No\")\n            exit()\n\nprint(\"Yes\")"
    }
  ],
  "created": 1648694367,
  "id": "cmpl-4rf0ZUcFOlR6kEAnkE4AxYjZLI8S6",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\n\n# \u5404\u6587\u5b57\u304c\u51fa\u73fe\u3059\u308b\u56de\u6570\u3092\u6570\u3048\u308b\ns_dict = {}\nt_dict = {}\n\nfor s_i in s:\n    if s_dict.get(s_i) is None:\n        s_dict[s_i] = 0\n    s_dict[s_i] += 1\n\nfor t_i in t:\n    if t_dict.get(t_i) is None:\n        t_dict[t_i] = 0\n    t_dict[t_i] += 1\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u304c\u7b49\u3057\u3044\u304b\u30c1\u30a7\u30c3\u30af\nfor k in s_dict.keys():\n    if t_dict.get(k) is None or s_dict[k] != t_dict[k]:\n        print(\"No\")\n        exit()\n\nprint(\"Yes\")"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# rasie if the length of S and T is different\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        raise ValueError\n\n    # create a dict for both S and T\n    dic_s = {}\n    dic_t = {}\n    for i in range(len(s)):\n        if s[i] in dic_s:\n            dic_s[s[i]] += 1\n        else:\n            dic_s[s[i]] = 1\n\n        if t[i] in dic_t:\n            dic_t[t[i]] += 1\n        else:\n            dic_t[t[i]] = 1\n\n    # check if they have different letter\n    for key in dic_s:\n        if key not in dic_t:\n            print(\"No\")\n            return\n        if dic_s[key] != dic_t[key]:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\nif __name__ == '__main__':\n    main()"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ns = input()\nt = input()\n\n# s = \"azzel\"\n# t = \"apple\"\n\n# s = \"abcdefghijklmnopqrstuvwxyz\"\n# t = \"bcdefghijklmnopqrstuvwxyza\"\n\n# s = \"abcdefghijklmnopqrstuvwxyz\"\n# t = \"bcdefghijklmnopqrstuvwxyz\"\n\ns_dict = {}\ns_list = list(s)\nfor i in s_list:\n    if i in s_dict:\n        s_dict[i] += 1\n    else:\n        s_dict[i] = 1\n\nt_dict = {}\nt_list = list(t)\nfor i in t_list:\n    if i in t_dict:\n        t_dict[i] += 1\n    else:\n        t_dict[i] = 1\n\nfor k, v in t_dict.items():\n    if k not in s_dict:\n        print(\"No\")\n        exit()\n    else:\n        if v > s_dict[k]:\n            print(\"No\")\n            exit()\n\nprint(\"Yes\")"
}
REASON stop
