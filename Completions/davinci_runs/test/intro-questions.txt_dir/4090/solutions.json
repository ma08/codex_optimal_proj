["n = int(input())\narr = input()\nfinal = len(arr)\narr = arr.split()\nlens = [0 for x in range(n)]\nvisit = [0 for x in range(n)]\ncnt = 0\nans = 0\nfor i in range(n):\n  if visit[i]:\n    continue\n  lens[cnt] = len(arr[i])\n  for j in range(i+1,n):\n    if arr[j]==arr[i]:\n      arr[j] = cnt\n      visit[j] = 1\n  arr[i] = cnt\n  cnt += 1\nfor i in range(n):\n  for j in range(i,n):\n    temp = arr[i:j+1]\n    ind = 1\n    found = 0\n    len2 = j-i+1\n    cur = 0\n    kmp = [0 for x in range(len2)]\n    while ind < len2:\n      if temp[ind] == temp[cur]:\n        cur += 1\n        kmp[ind] = cur\n        ind += 1\n      else:\n        if cur != 0:\n          cur -= 1\n        else:\n          kmp[ind] = 0\n          ind += 1\n    ind = 0\n    cur = 0\n    while ind < n:\n      if arr[ind] == temp[cur]:\n        ind += 1\n        cur += 1\n      if cur == len2:\n        found += 1\n        cur = 0\n      elif ind < n and temp[cur] != arr[ind]:\n        if cur != 0:\n          cur = kmp[cur-1]\n        else:\n          ind += 1\n    if found>1:\n      res = 0\n      for k in temp:\n        res += (lens[k]-1)*(found)\n      res += (len(temp)-1)*(found)\n      ans = max(ans,res)\nprint(final-ans)", "# import time\nN = 303\neq = []\ndp = []\nfor i in range(N):\n    eq.append([False] * N)\nfor i in range(N):\n    dp.append([0] * N)\nn = int(input())\ns = input()\n# t = time.time()\nallsum = len(s)\ns = s.split()\nfor i in range(n):\n    eq[i][i] = True\n    for j in range(i):\n        eq[i][j] = eq[j][i] = s[i] == s[j]\nfor i in range(n - 1, -1, -1):\n    for j in range(n - 1, -1, -1):\n        if eq[i][j]:\n            if i < n - 1 and j < n - 1:\n                dp[i][j] = dp[i + 1][j + 1] + 1\n            else:\n                dp[i][j] = 1\nans = allsum\nfor i in range(n):\n    su = 0\n    for j in range(n - i):\n        su += len(s[i + j])\n        cnt = 1\n        pos = i + j + 1\n        while pos < n:\n            if dp[i][pos] > j:\n                cnt += 1\n                pos += j\n            pos += 1\n        cur = allsum - su * cnt + (j + 1) * cnt - j * cnt\n        if cnt > 1 and ans > cur:\n            # print(allsum, su, cnt, j)\n            ans = cur\nprint(ans)\n# print(time.time() - t)\n", "# import time\nN = 303\neq = []\ndp = []\nfor i in range(N):\n    eq.append([False] * N)\nfor i in range(N):\n    dp.append([0] * N)\nn = int(input())\ns = input()\n# t = time.time()\nallsum = len(s)\ns = s.split()\nfor i in range(n):\n    eq[i][i] = True\n    for j in range(i):\n        eq[i][j] = eq[j][i] = s[i] == s[j]\nfor i in range(n - 1, -1, -1):\n    for j in range(n - 1, -1, -1):\n        if eq[i][j]:\n            if i < n - 1 and j < n - 1:\n                dp[i][j] = dp[i + 1][j + 1] + 1\n            else:\n                dp[i][j] = 1\nans = allsum\nfor i in range(n):\n    su = 0\n    for j in range(1, n - i + 1):\n        su += len(s[i + j - 1])\n        cnt = 1\n        pos = i + j\n        while pos < n:\n            if dp[i][pos] >= j:\n                cnt += 1\n                pos += j - 1\n            pos += 1\n        cur = allsum - su * cnt + cnt\n        if cnt > 1 and ans > cur:\n            # print(allsum, su, cnt, j)\n            ans = cur\nprint(ans)\n# print(time.time() - t)\n", "n = int(input())\ns = input()\na = list(s.split())\neq = [[0 for i in range(n)] for j in range(n)]\ndp = [[0 for i in range(n)] for j in range(n)]\nfor i in range(n):\n    eq[i][i] = 1\n    for j in range(0, i):\n        if a[i] == a[j]:\n            eq[i][j] += 1\n            eq[j][i] += 1\nfor i in range(n - 1, -1, -1):\n    for j in range(n - 1, -1, -1):\n        if eq[i][j] == 1:\n            if i < n - 1 and j < n - 1:\n                dp[i][j] = dp[i + 1][j + 1] + 1\n            else:\n                dp[i][j] = 1\nallsum = n - 1\nfor k in a:\n    allsum += len(k)\nans = allsum\nfor i in range(n):\n    sx = 0\n    j = 0\n    while i + j < n:\n        sx += len(a[i + j])\n        cnt = 1\n        pos = i + j + 1\n        while pos < n:\n            if dp[i][pos] > j:\n                cnt += 1\n                pos += j\n            pos += 1\n        cur = allsum - sx*cnt + (j + 1)*cnt - j*cnt\n        if cnt > 1 and ans > cur:\n            ans = cur\n        j += 1\nprint(ans)", "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input()\na = list(s.split())\neq = [[0 for i in range(n)] for j in range(n)]\ndp = [[0 for i in range(n)] for j in range(n)]\nfor i in range(n):\n    eq[i][i] = 1\n    for j in range(0, i):\n        if a[i] == a[j]:\n            eq[i][j] += 1\n            eq[j][i] += 1\nfor i in range(n - 1, -1, -1):\n    for j in range(n - 1, -1, -1):\n        if eq[i][j] == 1:\n            if i < n - 1 and j < n - 1:\n                dp[i][j] = dp[i + 1][j + 1] + 1\n            else:\n                dp[i][j] = 1\nallsum = n - 1\nfor k in a:\n    allsum += len(k)\nans = allsum\nfor i in range(n):\n    sx = 0\n    j = 0\n    while i + j < n:\n        sx += len(a[i + j])\n        cnt = 1\n        pos = i + j + 1\n        while pos < n:\n            if dp[i][pos] > j:\n                cnt += 1\n                pos += j\n            pos += 1\n        cur = allsum - sx*cnt + (j + 1)*cnt - j*cnt\n        if cnt > 1 and ans > cur:\n            ans = cur\n        j += 1\nprint(ans)"]