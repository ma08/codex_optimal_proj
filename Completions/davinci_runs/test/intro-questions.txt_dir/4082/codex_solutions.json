["\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(2)\nelse:\n    count = 1\n    for i in range(1, n):\n        if a[i] > a[i-1]:\n            count += 1\n        else:\n            break\n    for j in range(n-2, 0, -1):\n        if a[j] < a[j+1]:\n            count += 1\n        else:\n            break\n    print(count)", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# n = 5\n# a = [1, 2, 5, 3, 4]\n\n# n = 2\n# a = [1, 2]\n\n# n = 7\n# a = [6, 5, 4, 3, 2, 4, 3]\n\n# n = 5\n# a = [1, 2, 3, 4, 5]\n\n# n = 5\n# a = [1, 2, 1, 2, 1]\n\n# n = 8\n# a = [1, 2, 3, 4, 5, 6, 7, 8]\n\n# n = 8\n# a = [8, 7, 6, 5, 4, 3, 2, 1]\n\n# n = 8\n# a = [1, 2, 3, 4, 5, 6, 7, 8]\n\n# n = 7\n# a = [1, 2, 3, 4, 5, 6, 7]\n\n# n = 7\n# a = [7, 6, 5, 4, 3, 2, 1]\n\n# n = 7\n# a = [1, 1, 1, 1, 1, 1, 1]\n\n\ndef max_increasing_subarray(a):\n    \"\"\"\n    :param a: list\n    :return: int\n    \"\"\"\n    n = len(a)\n    if n == 1:\n        return 1\n    else:\n        max_len = 1\n        for i in range(1, n):\n            if a[i] > a[i - 1]:\n                max_len += 1\n            else:\n                break\n        return max_len\n\n\ndef max_length_of_increasing_subarray(a):\n    \"\"\"\n    :param a: list\n    :return: int\n    \"\"\"\n    n = len(a)\n    ans = max_increasing_subarray(a)\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            ans = max(ans, max_increasing_subarray(a[:i] + a[i + 1:]))\n    ans = max(ans, max_increasing_subarray(a[1:]))\n    return ans\n\n\nprint(max_length_of_increasing_subarray(a))", "\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n    print(2)\n    exit()\n\nmax_length = 2\nlength = 2\nfor i in range(1, n - 1):\n    if a[i - 1] < a[i] < a[i + 1]:\n        length += 1\n    else:\n        length = 2\n    if length > max_length:\n        max_length = length\n\nprint(max_length)"]