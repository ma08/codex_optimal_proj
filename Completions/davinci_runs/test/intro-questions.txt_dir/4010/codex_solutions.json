["\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        a_count = {}\n        for elem in a:\n            a_count[elem] = a_count.get(elem, 0) + 1\n        for elem in a:\n            if a_count[elem] >= 3:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n\nif __name__ == '__main__':\n    main()", "\n\n# SOLUTION\n# Use dynamic programming\n# dp[i] = [j, k, l] where j is the location of the first occurence of i, k is the location of the last occurence of i and l is the last occurence of i in a palindrome\n# dp = [[None]*n]*n]\n# dp = [[[None]*n]*n]*n]\n# O(n^3)\n\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = [int(x) for x in input().strip().split()]\n\n    dp = [[None]*n for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            dp[i][j] = [None]*n\n    # print(dp)\n\n    for i in range(n):\n        first_occurrence = None\n        last_occurrence = None\n        for j in range(n):\n            if a[j] == a[i]:\n                if first_occurrence is None:\n                    first_occurrence = j\n                last_occurrence = j\n        dp[i][i][i] = [first_occurrence, last_occurrence, i]\n        # print(dp)\n    # print(dp)\n\n    for i in range(n):\n        for j in range(i+1, n):\n            # print(i, j)\n            if a[i] == a[j]:\n                # print(\"a[{}] == a[{}]\".format(i, j))\n                dp[i][j][i] = [i, j, i]\n                dp[i][j][j] = [i, j, j]\n                if j-i >= 2:\n                    dp[i][j][j-1] = [i, j-1, j-1]\n\n    # print(dp)\n\n    for k in range(2, n):\n        for i in range(n-k):\n            j = i+k\n            # print(i, j)\n            if dp[i][j-1][j-2] is not None and dp[i+1][j][j] is not None:\n                if dp[i+1][j][j][0] == i:\n                    dp[i][j][j-1] = [i, j-1, j-1]\n\n            if dp[i+1][j][j-1] is not None and dp[i][j-1][j-1] is not None:\n                if dp[i][j-1][j-1][1] == i:\n                    dp[i][j][j] = [i, j, j]\n\n    # print(dp)\n\n    result = False\n    for i in range(n):\n        for j in range(n):\n            if dp[i][j][j] is not None:\n                result = True\n                break\n    if result:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\n\ndef isPalindrome(arr):\n    for i in range(0, int(len(arr)/2)):\n        if arr[i] != arr[len(arr)-i-1]:\n            return False\n    return True\n\ndef main():\n    t = int(input())\n    for _ in range(0, t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        for i in range(0, n):\n            for j in range(0, n-i-1):\n                if isPalindrome(a[i:j+1]):\n                    print(\"YES\")\n                    break\n        print(\"NO\")\n\nmain()"]