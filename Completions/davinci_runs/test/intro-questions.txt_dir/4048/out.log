"""
Takahashi is standing on a multiplication table with infinitely many rows and columns.
The square (i,j) contains the integer i \times j. Initially, Takahashi is standing at (1,1).
In one move, he can move from (i,j) to either (i+1,j) or (i,j+1).
Given an integer N, find the minimum number of moves needed to reach a square that contains N.

-----Constraints-----
 - 2 \leq N \leq 10^{12}
 - N is an integer.

-----Input-----
Input is given from Standard Input in the following format:
N

-----Output-----
Print the minimum number of moves needed to reach a square that contains the integer N.

-----Sample Input-----
10

-----Sample Output-----
5

(2,5) can be reached in five moves. We cannot reach a square that contains 10 in less than five moves.
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    >>> main()\n    5\n    \"\"\"\n    N = int(input())\n    r, c = 1, 1\n\n    while r * c < N:\n        if r < c:\n            r += 1\n        else:\n            c += 1\n    print(r + c - 2)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    move = 0\n    i = 1\n    j = 1\n\n    while i < n or j < n:\n        if i == j:\n            i += 1\n        elif i < j:\n            i += 1\n        elif i > j:\n            j += 1\n\n        move += 1\n\n    print(move)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# get input\nN = int(input())\n\n# determine the minimum number of moves to reach a square that contains N\nmoves = 0\nwhile N > 1:\n    if N % 2 == 0:\n        N = N // 2\n    else:\n        N -= 1\n    moves += 1\n\n# print the minimum number of moves\nprint(moves)"
    }
  ],
  "created": 1648692969,
  "id": "cmpl-4ree1MlFQmlbyR68BnVrPIR5tArP4",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    >>> main()\n    5\n    \"\"\"\n    N = int(input())\n    r, c = 1, 1\n\n    while r * c < N:\n        if r < c:\n            r += 1\n        else:\n            c += 1\n    print(r + c - 2)\n\n\nif __name__ == \"__main__\":\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    move = 0\n    i = 1\n    j = 1\n\n    while i < n or j < n:\n        if i == j:\n            i += 1\n        elif i < j:\n            i += 1\n        elif i > j:\n            j += 1\n\n        move += 1\n\n    print(move)\n\nif __name__ == \"__main__\":\n    main()"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# get input\nN = int(input())\n\n# determine the minimum number of moves to reach a square that contains N\nmoves = 0\nwhile N > 1:\n    if N % 2 == 0:\n        N = N // 2\n    else:\n        N -= 1\n    moves += 1\n\n# print the minimum number of moves\nprint(moves)"
}
REASON stop
