"""
You are given a sequence $a_1, a_2, \dots, a_n$ consisting of $n$ integers.

You can choose any non-negative integer $D$ (i.e. $D \ge 0$), and for each $a_i$ you can:

  add $D$ (only once), i. e. perform $a_i := a_i + D$, or  subtract $D$ (only once), i. e. perform $a_i := a_i - D$, or  leave the value of $a_i$ unchanged. 

It is possible that after an operation the value $a_i$ becomes negative.

Your goal is to choose such minimum non-negative integer $D$ and perform changes in such a way, that all $a_i$ are equal (i.e. $a_1=a_2=\dots=a_n$).

Print the required $D$ or, if it is impossible to choose such value $D$, print -1.

For example, for array $[2, 8]$ the value $D=3$ is minimum possible because you can obtain the array $[5, 5]$ if you will add $D$ to $2$ and subtract $D$ from $8$. And for array $[1, 4, 7, 7]$ the value $D=3$ is also minimum possible. You can add it to $1$ and subtract it from $7$ and obtain the array $[4, 4, 4, 4]$.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 100$) — the number of elements in $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 100$) — the sequence $a$.


-----Output-----

Print one integer — the minimum non-negative integer value $D$ such that if you add this value to some $a_i$, subtract this value from some $a_i$ and leave some $a_i$ without changes, all obtained values become equal.

If it is impossible to choose such value $D$, print -1.


-----Examples-----
Input
6
1 4 4 7 4 1

Output
3

Input
5
2 2 5 2 5

Output
3

Input
4
1 3 3 7

Output
-1

Input
2
2 8

Output
3
"""
--------------------------
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef sum(a):\n    s = 0\n    for i in a:\n        s += i\n    return s\n\n\ndef min_d(n, a):\n    s = sum(a)\n    if s % n == 0:\n        return s // n\n    else:\n        return -1\n\n\ndef max_d(n, a):\n    a.sort(reverse=True)\n    m = a[0]\n    d = m - a[-1]\n    return d\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(min_d(n, a))\n    # print(max_d(n, a))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# Solved\n\nimport sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_a = max(a)\nmin_a = min(a)\n\nif n == 1:\n    print(0)\n    sys.exit()\n\nif max_a == min_a:\n    print(0)\n    sys.exit()\n\nif max_a - min_a > 100:\n    print(-1)\n    sys.exit()\n\nfor i in range(max_a - min_a + 1):\n    if i == 0:\n        continue\n\n    flag = True\n\n    for j in range(len(a)):\n        if a[j] - i < min_a:\n            flag = False\n            break\n\n    if flag:\n        print(i)\n        sys.exit()\n\nprint(-1)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmin_val = min(a)\nmax_val = max(a)\nif min_val == max_val:\n    print(0)\n    exit()\n\ndiff = max_val - min_val\nfor i in range(1, diff + 1):\n    if (max_val - i) % n == 0 and (min_val + i) % n == 0 and (max_val - i) / n == (min_val + i) / n:\n        print(i)\n        exit()\nprint(-1)"
    }
  ],
  "created": 1648691952,
  "id": "cmpl-4reNcHsOgv3zP49RPgDcDKv3VGlvf",
  "model": "code-davinci:002",
  "object": "text_completion"
}
0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef sum(a):\n    s = 0\n    for i in a:\n        s += i\n    return s\n\n\ndef min_d(n, a):\n    s = sum(a)\n    if s % n == 0:\n        return s // n\n    else:\n        return -1\n\n\ndef max_d(n, a):\n    a.sort(reverse=True)\n    m = a[0]\n    d = m - a[-1]\n    return d\n\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(min_d(n, a))\n    # print(max_d(n, a))\n\n\nif __name__ == \"__main__\":\n    main()"
}
REASON stop
1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# Solved\n\nimport sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_a = max(a)\nmin_a = min(a)\n\nif n == 1:\n    print(0)\n    sys.exit()\n\nif max_a == min_a:\n    print(0)\n    sys.exit()\n\nif max_a - min_a > 100:\n    print(-1)\n    sys.exit()\n\nfor i in range(max_a - min_a + 1):\n    if i == 0:\n        continue\n\n    flag = True\n\n    for j in range(len(a)):\n        if a[j] - i < min_a:\n            flag = False\n            break\n\n    if flag:\n        print(i)\n        sys.exit()\n\nprint(-1)"
}
REASON stop
2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmin_val = min(a)\nmax_val = max(a)\nif min_val == max_val:\n    print(0)\n    exit()\n\ndiff = max_val - min_val\nfor i in range(1, diff + 1):\n    if (max_val - i) % n == 0 and (min_val + i) % n == 0 and (max_val - i) / n == (min_val + i) / n:\n        print(i)\n        exit()\nprint(-1)"
}
REASON stop
