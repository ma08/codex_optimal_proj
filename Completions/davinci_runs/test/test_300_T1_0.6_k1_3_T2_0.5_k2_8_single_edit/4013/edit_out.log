2022-04-23 20:45:06.677488 num operations 1
2022-04-23 20:45:06.677510 size on input set 1
2022-04-23 20:45:06.677658 using api key sunu
2022-04-23 20:45:55.820719 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(math.sqrt(n))+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n"
    },
    {
      "index": 3,
      "text": "\n\n# n = int(input())\n# array = list(map(int, input().split()))\n\n# def min_instability(n, array):\n#     array.sort()\n#     min_instability = array[-1] - array[0]\n\n#     for i in range(1, n-1):\n#         if array[i] - array[i-1] < min_instability:\n#             min_instability = array[i] - array[i-1]\n#         if array[i+1] - array[i] < min_instability:\n#             min_instability = array[i+1] - array[i]\n#     return min_instability\n\n# print(min_instability(n, array))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return min_instability\n\nprint(min_instability(n, array))\n"
    },
    {
      "index": 6,
      "text": "\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\narray = list(map(int, input().split()))\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n"
    }
  ],
  "created": 1650746706,
  "object": "edit"
}
2022-04-23 20:45:55.821106 fix syntax errors 8 ['import math\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n    for i in range(2, int(math.sqrt(n))+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n', '\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n', '\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n', '\n\n# n = int(input())\n# array = list(map(int, input().split()))\n\n# def min_instability(n, array):\n#     array.sort()\n#     min_instability = array[-1] - array[0]\n\n#     for i in range(1, n-1):\n#         if array[i] - array[i-1] < min_instability:\n#             min_instability = array[i] - array[i-1]\n#         if array[i+1] - array[i] < min_instability:\n#             min_instability = array[i+1] - array[i]\n#     return min_instability\n\n# print(min_instability(n, array))\n', '\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n', '\n\nn = int(input())\narray = list(map(int, input().split()))\n\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return min_instability\n\nprint(min_instability(n, array))\n', '\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n', '\n\nn = int(input())\narray = list(map(int, input().split()))\ndef min_instability(n, array):\n    array.sort()\n    min_instability = array[-1] - array[0]\n\n    for i in range(1, n-1):\n        if array[i] - array[i-1] < min_instability:\n            min_instability = array[i] - array[i-1]\n        if array[i+1] - array[i] < min_instability:\n            min_instability = array[i+1] - array[i]\n    return min_instability\n\nprint(min_instability(n, array))\n']
2022-04-23 20:45:55.821251 size on output set 6
2022-04-23 20:45:55.821264 num operations 1
2022-04-23 20:45:55.821270 size on input set 1
2022-04-23 20:45:55.821433 using api key soukgp
2022-04-23 20:46:12.132101 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    },
    {
      "index": 1,
      "text": "n = int(input(\"Enter number of numbers: \"))\nsum = 0\nfor i in range(n):\n    num = int(input(\"Enter number: \"))\n    sum += num\nprint(sum)\nif sum > 100:\n    print(\"You win\")\nelse:\n    print(\"You lose\")\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    },
    {
      "index": 3,
      "text": "import math\nn = int(input())\na = [int(input()) for i in range(n)]\na.sort()\nmax_diff = 0\nfor i in range(n - 1):\n    if abs(a[i] - a[i + 1]) > max_diff:\n        max_diff = abs(a[i] - a[i + 1])\n\n\nprint(math.ceil(max_diff / 2))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\nif n == 2:\n    print(0)\n    a.sort()\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    },
    {
      "index": 6,
      "text": "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))a.sort()\nif n == 2:print(0)\nelse:print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n"
    }
  ],
  "created": 1650746755,
  "object": "edit"
}
2022-04-23 20:46:12.132396 fix syntax errors 8 ['n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n', 'n = int(input("Enter number of numbers: "))\nsum = 0\nfor i in range(n):\n    num = int(input("Enter number: "))\n    sum += num\nprint(sum)\nif sum > 100:\n    print("You win")\nelse:\n    print("You lose")\n', 'n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n', 'import math\nn = int(input())\na = [int(input()) for i in range(n)]\na.sort()\nmax_diff = 0\nfor i in range(n - 1):\n    if abs(a[i] - a[i + 1]) > max_diff:\n        max_diff = abs(a[i] - a[i + 1])\n\n\nprint(math.ceil(max_diff / 2))\n', '\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n', '\nn = int(input())\na = list(map(int, input().split()))\nif n == 2:\n    print(0)\n    a.sort()\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n', 'n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n == 2:\n    print(0)\nelse:\n    print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n', '\n\nn = int(input())\na = list(map(int, input().split()))a.sort()\nif n == 2:print(0)\nelse:print(min(a[n - 2] - a[0], a[n - 1] - a[1]))\n']
2022-04-23 20:46:12.132429 size on output set 6
2022-04-23 20:46:12.132448 num operations 1
2022-04-23 20:46:12.132454 size on input set 1
2022-04-23 20:46:12.132570 using api key soukgp
2022-04-23 20:46:26.057318 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    print(min(a[-1] - a[1], a[-2] - a[0]))\n\n\nif __name__ == '__main__':\n    main()\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0])\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n"
    }
  ],
  "created": 1650746772,
  "object": "edit"
}
2022-04-23 20:46:26.057546 fix syntax errors 8 ['\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n', '\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n', "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    print(min(a[-1] - a[1], a[-2] - a[0]))\n\n\nif __name__ == '__main__':\n    main()\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n", '\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0])\n', '\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(min(a[-1] - a[1], a[-2] - a[0]))\n']
2022-04-23 20:46:26.057579 size on output set 5
