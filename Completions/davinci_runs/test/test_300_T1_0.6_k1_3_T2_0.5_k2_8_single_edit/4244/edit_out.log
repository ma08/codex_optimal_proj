2022-04-24 00:25:03.395721 num operations 1
2022-04-24 00:25:03.395742 size on input set 1
2022-04-24 00:25:03.395936 using api key soukgp
2022-04-24 00:25:21.512678 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\nprint(sum(diff))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nx = list(map(int, input().split()))\n\n# -- Calculate mean of all x coordinates and store in a variable called `mean`\n\n\n# -- Store differences between mean and all x coordinates in a list called `diff`\n\n\nprint(sum(diff)) # Print the sum of all elements in the list `diff`\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n# Calculate mean of all x coordinates\n# Store differences between mean and all x coordinates in a list\n# Return the sum of all differences\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\nmean = sum(x) / n\n\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(int(sum(diff)))\n"
    },
    {
      "index": 5,
      "text": "import sys\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / float(n)\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n"
    },
    {
      "index": 6,
      "text": "# -- Import libraries\nimport sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\nprint(sum(diff))\n"
    }
  ],
  "created": 1650759903,
  "object": "edit"
}
2022-04-24 00:25:21.512995 fix syntax errors 8 ['import sys\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\nprint(sum(diff))\n', 'import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n', '\nn = int(input())\nx = list(map(int, input().split()))\n\n# -- Calculate mean of all x coordinates and store in a variable called `mean`\n\n\n# -- Store differences between mean and all x coordinates in a list called `diff`\n\n\nprint(sum(diff)) # Print the sum of all elements in the list `diff`\n', 'import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n', '\nimport sys\n\n# Calculate mean of all x coordinates\n# Store differences between mean and all x coordinates in a list\n# Return the sum of all differences\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\nmean = sum(x) / n\n\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(int(sum(diff)))\n', 'import sys\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / float(n)\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n', '# -- Import libraries\nimport sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\n\nprint(sum(diff))\n', 'import sys\n\nn = int(sys.stdin.readline())\nx = list(map(int, sys.stdin.readline().split()))\n\n# -- Calculate mean of all x coordinates\nmean = sum(x) / n\n# -- Store differences between mean and all x coordinates in a list\ndiff = [abs(mean - x[i]) for i in range(n)]\nprint(sum(diff))\n']
2022-04-24 00:25:21.513038 size on output set 8
2022-04-24 00:25:21.513051 num operations 1
2022-04-24 00:25:21.513057 size on input set 1
2022-04-24 00:25:21.513180 using api key soukgp
2022-04-24 00:25:35.801407 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()][:num_people]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += abs(pos - meeting_point)\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650759921,
  "object": "edit"
}
2022-04-24 00:25:35.801743 fix syntax errors 8 ["\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()][:num_people]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", '\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\n\nif __name__ == "__main__":\n    main()\n', "\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += abs(pos - meeting_point)\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    num_people = int(input())\n    positions = [int(x) for x in input().split()]\n    positions.sort()\n    mid = len(positions) // 2\n    meeting_point = positions[mid]\n    total_stamina = 0\n    for pos in positions:\n        total_stamina += (pos - meeting_point) ** 2\n    print(total_stamina)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:25:35.801782 size on output set 7
2022-04-24 00:25:35.801794 num operations 1
2022-04-24 00:25:35.801800 size on input set 1
2022-04-24 00:25:35.801936 using api key kouti
2022-04-24 00:25:50.551061 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list]) / n\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(round(problem_solve(x_list), 1))\n"
    },
    {
      "index": 1,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])/n\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n"
    },
    {
      "index": 2,
      "text": "def problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean) ** 2 for x in x_list])\n\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n"
    },
    {
      "index": 3,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean) ** 2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n"
    },
    {
      "index": 4,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list]) / n\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n"
    },
    {
      "index": 5,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [float(x) for x in input().split()]\n    print(problem_solve(x_list))\n"
    },
    {
      "index": 6,
      "text": "\ndef problem_solve(input_list):\n    \"\"\"\n    input_list: list of integers\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list)) \n"
    },
    {
      "index": 7,
      "text": "\ndef problem_solve(input_list, mean):\n    \"\"\"\n    input_list: list of integers\n    mean: float\n    \"\"\"\n    n = len(input_list)\n    x_list = input_list\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == '__main__':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    mean = sum(x_list) / n\n    print(problem_solve(x_list, mean))\n"
    }
  ],
  "created": 1650759935,
  "object": "edit"
}
2022-04-24 00:25:50.551372 fix syntax errors 8 ['\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list]) / n\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(round(problem_solve(x_list), 1))\n', '\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])/n\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n', 'def problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean) ** 2 for x in x_list])\n\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n', '\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean) ** 2 for x in x_list])\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n', '\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list]) / n\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list))\n', '\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [float(x) for x in input().split()]\n    print(problem_solve(x_list))\n', '\ndef problem_solve(input_list):\n    """\n    input_list: list of integers\n    """\n    n = len(input_list)\n    x_list = input_list\n    mean = sum(x_list) / n\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    print(problem_solve(x_list)) \n', '\ndef problem_solve(input_list, mean):\n    """\n    input_list: list of integers\n    mean: float\n    """\n    n = len(input_list)\n    x_list = input_list\n    return sum([(x - mean)**2 for x in x_list])\n\nif __name__ == \'__main__\':\n    n = int(input())\n    x_list = [int(x) for x in input().split()]\n    mean = sum(x_list) / n\n    print(problem_solve(x_list, mean))\n']
2022-04-24 00:25:50.551509 size on output set 8
