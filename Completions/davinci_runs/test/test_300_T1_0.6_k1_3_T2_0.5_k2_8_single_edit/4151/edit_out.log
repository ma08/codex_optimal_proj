2022-04-23 22:50:27.927973 num operations 1
2022-04-23 22:50:27.928007 size on input set 1
2022-04-23 22:50:27.928144 using api key sunu
2022-04-23 22:50:41.991246 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef answer(n, a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 1,
      "text": "\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    print(m)\n    print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef answer(a):\n    m = dict()\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    },
    {
      "index": 7,
      "text": "\n\ndef answer(n, a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"
    }
  ],
  "created": 1650754228,
  "object": "edit"
}
2022-04-23 22:50:41.991734 fix syntax errors 8 ["\n\ndef answer(n, a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    print(m)\n    print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\nimport math\n\ndef answer(a):\n    m = dict()\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n", "\n\ndef answer(n, a):\n    m = {}\n    for i in range(len(a)):\n        if a[i] in m:\n            m[a[i]] += 1\n        else:\n            m[a[i]] = 1\n    # print(m)\n    # print(m.items())\n    max_len = max(m.values())\n    count = 1\n    for i in m.values():\n        count *= (i + 1)\n    # print(count)\n    count -= 1\n    return count % 998244353\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer(a))\n"]
2022-04-23 22:50:41.991795 size on output set 4
2022-04-23 22:50:41.991809 num operations 1
2022-04-23 22:50:41.991815 size on input set 1
2022-04-23 22:50:41.992022 using api key sunu
2022-04-23 22:51:10.700974 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin, stdout\n\n\n\ndef read_ints():\n\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in input().strip().split()]\n\ndef read_int():\n    return int(input().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 3
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n - k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD - 2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n + 1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k - 1)\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            for j in range(i * 2, n + 1, i):\n                count[j] = (count[j] - count[i]) % MOD # subtract count[i]\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()][0]\n\ndef read_int():\n    return [int(x) for x in stdin.readline().strip().split()]\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n\treturn [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n\treturn int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n\tfac.append(fac[-1] * i % MOD)\n\tinv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n\treturn fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n\treturn pow(x, MOD-2, MOD)\n\ndef main():\n\tn = read_int()\n\ta = read_ints()\n\tcount = [0] * (n+1)\n\tfor x in a:\n\t\tcount[x] += 1\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tk = count[i]\n\t\t\tcount[i] = binom(k, k-1)\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tfor j in range(i*2, n+1, i):\n\t\t\t\tcount[j] = (count[j] - count[i]) % MOD\n\tresult = 1\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tresult = result * count[i] % MOD\n\tstdout.write(str(result))\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result) + '\\n')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650754242,
  "object": "edit"
}
2022-04-23 22:51:10.701401 NO RESULT
2022-04-23 22:51:10.701412 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 3
}
2022-04-23 22:51:10.701464 fix syntax errors 7 ['\n\nfrom sys import stdin\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == "__main__":\n    main()\n', 'from sys import stdin, stdout\n\n\n\ndef read_ints():\n\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in input().strip().split()]\n\ndef read_int():\n    return int(input().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    print(result)\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n - k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD - 2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n + 1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k - 1)\n    for i in range(1, n + 1):\n        if count[i] > 0:\n            for j in range(i * 2, n + 1, i):\n                count[j] = (count[j] - count[i]) % MOD # subtract count[i]\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result))\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()][0]\n\ndef read_int():\n    return [int(x) for x in stdin.readline().strip().split()]\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n\treturn [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n\treturn int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n\tfac.append(fac[-1] * i % MOD)\n\tinv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n\treturn fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n\treturn pow(x, MOD-2, MOD)\n\ndef main():\n\tn = read_int()\n\ta = read_ints()\n\tcount = [0] * (n+1)\n\tfor x in a:\n\t\tcount[x] += 1\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tk = count[i]\n\t\t\tcount[i] = binom(k, k-1)\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tfor j in range(i*2, n+1, i):\n\t\t\t\tcount[j] = (count[j] - count[i]) % MOD\n\tresult = 1\n\tfor i in range(1, n+1):\n\t\tif count[i] > 0:\n\t\t\tresult = result * count[i] % MOD\n\tstdout.write(str(result))\n\nif __name__ == "__main__":\n\tmain()\n', '\n\nfrom sys import stdin, stdout\n\ndef read_ints():\n    return [int(x) for x in stdin.readline().strip().split()]\n\ndef read_int():\n    return int(stdin.readline().strip())\n\nMOD = 998244353\nMAXN = 200000\n\nfac = [1]\ninv_fac = [1]\n\nfor i in range(1, MAXN+1):\n    fac.append(fac[-1] * i % MOD)\n    inv_fac.append(inv_fac[-1] * pow(i, MOD-2, MOD) % MOD)\n\ndef binom(n, k):\n    return fac[n] * inv_fac[k] * inv_fac[n-k] % MOD\n\ndef mod_inv(x):\n    return pow(x, MOD-2, MOD)\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    count = [0] * (n+1)\n    for x in a:\n        count[x] += 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            k = count[i]\n            count[i] = binom(k, k-1)\n    for i in range(1, n+1):\n        if count[i] > 0:\n            for j in range(i*2, n+1, i):\n                count[j] = (count[j] - count[i]) % MOD\n    result = 1\n    for i in range(1, n+1):\n        if count[i] > 0:\n            result = result * count[i] % MOD\n    stdout.write(str(result) + \'\\n\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 22:51:10.701560 size on output set 7
2022-04-23 22:51:10.701571 num operations 1
2022-04-23 22:51:10.701577 size on input set 1
2022-04-23 22:51:10.701695 using api key derek
2022-04-23 22:51:34.494544 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# SOLUTION\n\ndef commonChild(s1, s2):\n    n = len(s1)\n    m = len(s2)\n\n    dp = [[0 for i in range(m + 1)] for i in range(n + 1)]\n\n    for i in range(n):\n        for j in range(m):\n            if s1[i] == s2[j]:\n                dp[i + 1][j + 1] = 1 + dp[i][j]\n            else:\n                dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j])\n    return dp[n][m]\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 1,
      "text": "\n#include <bits/stdc++.h>\nusing namespace std;\n//#define int long long\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split())\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\nl = list(d.values())\n\n\nif len(d) == 1:\n  print(l[0] * (l[0] - 1))\n  quit()\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 4,
      "text": "\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nif len(d) == 1:\n    print(1)\n    quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n    res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1 and d[list(d.keys())[0]] == 1:\n  print(0)\n  quit()\n\nif len(d) == 1 and d[list(d.keys())[0]] > 1:\n  print(math.factorial(d[list(d.keys())[0]]) // (2 * math.factorial(d[list(d.keys())[0]] - 2)))\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 6,
      "text": "\n\n# SOLUTION 1\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n# SOLUTION 2\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    },
    {
      "index": 7,
      "text": "\n\n# SOLUTION 1\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n\n# SOLUTION 2\n\nimport collections\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = collections.Counter(a)\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nres = 1\n\nfor i in d.values():\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n"
    }
  ],
  "created": 1650754270,
  "object": "edit"
}
2022-04-23 22:51:34.494907 fix syntax errors 8 ['\n# SOLUTION\n\ndef commonChild(s1, s2):\n    n = len(s1)\n    m = len(s2)\n\n    dp = [[0 for i in range(m + 1)] for i in range(n + 1)]\n\n    for i in range(n):\n        for j in range(m):\n            if s1[i] == s2[j]:\n                dp[i + 1][j + 1] = 1 + dp[i][j]\n            else:\n                dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j])\n    return dp[n][m]\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n#include <bits/stdc++.h>\nusing namespace std;\n//#define int long long\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split())\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\nl = list(d.values())\n\n\nif len(d) == 1:\n  print(l[0] * (l[0] - 1))\n  quit()\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nif len(d) == 1:\n    print(1)\n    quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n    res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\nimport math\n# SOLUTION\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1 and d[list(d.keys())[0]] == 1:\n  print(0)\n  quit()\n\nif len(d) == 1 and d[list(d.keys())[0]] > 1:\n  print(math.factorial(d[list(d.keys())[0]]) // (2 * math.factorial(d[list(d.keys())[0]] - 2)))\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n\n# SOLUTION 1\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n# SOLUTION 2\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n', '\n\n# SOLUTION 1\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = {}\n\nfor i in a:\n  if i in d:\n    d[i] += 1\n  else:\n    d[i] = 1\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nl = list(d.values())\n\nres = 1\n\nfor i in l:\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n\n\n# SOLUTION 2\n\nimport collections\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = collections.Counter(a)\n\nif len(d) == 1:\n  print(1)\n  quit()\n\nres = 1\n\nfor i in d.values():\n  res *= (i + 1)\n\nres -= 1\n\nprint(res)\n']
2022-04-23 22:51:34.494984 size on output set 8
