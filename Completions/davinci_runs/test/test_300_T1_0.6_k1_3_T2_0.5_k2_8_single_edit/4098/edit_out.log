2022-04-23 22:00:10.884036 num operations 1
2022-04-23 22:00:10.884056 size on input set 1
2022-04-23 22:00:10.884242 using api key kouti
2022-04-23 22:01:01.632918 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 1,
      "text": "\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python\n# coding: utf-8\n\n# In[2]:\n\n\n\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 4,
      "text": "\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\ndef solve(a):\n    if a == 1:\n        print(1)\n        return\n    if a == 2:\n        print(2)\n        return\n    if a == 3:\n        print(3)\n        return\n    if a % 2 == 0:\n        print(2)\n        return\n    print(3)\n\n\na = int(input())\nsolve(a)\n"
    },
    {
      "index": 5,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 6,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    },
    {
      "index": 7,
      "text": "\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n"
    }
  ],
  "created": 1650751211,
  "object": "edit"
}
2022-04-23 22:01:01.633312 fix syntax errors 8 ['\n\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '#!/usr/bin/env python\n# coding: utf-8\n\n# In[2]:\n\n\n\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\n\n# def solve(n, k, a):\n#     a.sort()\n#     a.append(a[-1] + 5)\n#     #print(a)\n#     cnt = 0\n#     for i in range(n):\n#         if i == 0 or a[i] - a[i-1] > 5:\n#             cnt += 1\n#             if cnt == k + 1:\n#                 return i\n#     return n\n\n# n, k = map(int, input().split())\n# a = list(map(int, input().split()))\n# print(solve(n, k, a))\n\n\ndef solve(a):\n    if a == 1:\n        print(1)\n        return\n    if a == 2:\n        print(2)\n        return\n    if a == 3:\n        print(3)\n        return\n    if a % 2 == 0:\n        print(2)\n        return\n    print(3)\n\n\na = int(input())\nsolve(a)\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    # print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n', '\ndef solve(n, k, a):\n    a.sort()\n    a.append(a[-1] + 5)\n    #print(a)\n    cnt = 0\n    for i in range(n):\n        if i == 0 or a[i] - a[i-1] > 5:\n            cnt += 1\n            if cnt == k + 1:\n                return i\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k, a))\n']
2022-04-23 22:01:01.633530 size on output set 6
2022-04-23 22:01:01.633555 num operations 1
2022-04-23 22:01:01.633567 size on input set 1
2022-04-23 22:01:01.633772 using api key soukgp
2022-04-23 22:01:21.901882 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# n, k = map(int, input().split())\n# a = sorted(list(map(int, input().split())))\n#\n# dp = [0] * (n + 1)\n# for i in range(1, n + 1):\n#     dp[i] = dp[i - 1]\n#     for j in range(i - 1, -1, -1):\n#         if a[i - 1] - a[j] <= 5:\n#             dp[i] = max(dp[i], dp[j] + i - j)\n#\n# ans = 0\n# for i in range(n, n - k, -1):\n#     ans = max(ans, dp[i])\n# print(ans)\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):  # j <= i\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + 1)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "#\n#\n#\n#\n\n\nn, k = map(int, input().split()) #n, k\uac12 \uc785\ub825 \ubc1b\uae30\na = sorted(list(map(int, input().split()))) #a\uac12 \uc785\ub825 \ubc1b\uae30\n\ndp = [0] * (n + 1) #dp\ub9ac\uc2a4\ud2b8 \uc0dd\uc131\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n"
    }
  ],
  "created": 1650751261,
  "object": "edit"
}
2022-04-23 22:01:21.902179 fix syntax errors 8 ['\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\n#\n# n, k = map(int, input().split())\n# a = sorted(list(map(int, input().split())))\n#\n# dp = [0] * (n + 1)\n# for i in range(1, n + 1):\n#     dp[i] = dp[i - 1]\n#     for j in range(i - 1, -1, -1):\n#         if a[i - 1] - a[j] <= 5:\n#             dp[i] = max(dp[i], dp[j] + i - j)\n#\n# ans = 0\n# for i in range(n, n - k, -1):\n#     ans = max(ans, dp[i])\n# print(ans)\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):  # j <= i\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + 1)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '\nn, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n', '#\n#\n#\n#\n\n\nn, k = map(int, input().split()) #n, k값 입력 받기\na = sorted(list(map(int, input().split()))) #a값 입력 받기\n\ndp = [0] * (n + 1) #dp리스트 생성\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1):\n        if a[i - 1] - a[j] <= 5:\n            dp[i] = max(dp[i], dp[j] + i - j)\n\nans = 0\nfor i in range(n, n - k, -1):\n    ans = max(ans, dp[i])\nprint(ans)\n']
2022-04-23 22:01:21.902232 size on output set 6
2022-04-23 22:01:21.902244 num operations 1
2022-04-23 22:01:21.902250 size on input set 1
2022-04-23 22:01:21.902412 using api key soukgp
2022-04-23 22:01:42.607868 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2 and len(teams) < k:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill] and len(teams) < k:\n            teams.append((skills[skill].pop(),))\n    if len(teams) < k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nif teams:\n    print(sum(map(len, teams)))\nelse:\n    print(0)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# # n,k = 6,1\n# # a = [36, 4, 1, 25, 9, 16]\n\n# # n,k = 4,4\n# # a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]][0])\n        skills[a[0]].pop(0)\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\n# a.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in sorted(skills):\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in sorted(skills):\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nif not teams:\n    print(0)\n    exit(0)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(teams[0][0])\n        del teams[0]\n        teams = get_teams(skills, k)\n        if teams and len(teams) <= k:\n            break\n\nif teams:\n    print(sum(map(len, teams)))\nelse:\n    print(0)\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort(reverse=True)\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n - 1, -1, -1):\n    if a[i] - a[-1] <= 5:\n        skills[a[i]].append(skills[a[-1]].pop(0))\n        if not skills[a[-1]]:\n            del skills[a[-1]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop(-1)))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    },
    {
      "index": 7,
      "text": "\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# # n,k = 6,1\n# # a = [36, 4, 1, 25, 9, 16]\n\n# # n,k = 4,4\n# # a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n"
    }
  ],
  "created": 1650751281,
  "object": "edit"
}
2022-04-23 22:01:42.608277 fix syntax errors 8 ['\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2 and len(teams) < k:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill] and len(teams) < k:\n            teams.append((skills[skill].pop(),))\n    if len(teams) < k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nif teams:\n    print(sum(map(len, teams)))\nelse:\n    print(0)\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# # n,k = 6,1\n# # a = [36, 4, 1, 25, 9, 16]\n\n# # n,k = 4,4\n# # a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]][0])\n        skills[a[0]].pop(0)\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\n# a.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in sorted(skills):\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in sorted(skills):\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nif not teams:\n    print(0)\n    exit(0)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(teams[0][0])\n        del teams[0]\n        teams = get_teams(skills, k)\n        if teams and len(teams) <= k:\n            break\n\nif teams:\n    print(sum(map(len, teams)))\nelse:\n    print(0)\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort(reverse=True)\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n - 1, -1, -1):\n    if a[i] - a[-1] <= 5:\n        skills[a[i]].append(skills[a[-1]].pop(0))\n        if not skills[a[-1]]:\n            del skills[a[-1]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', '\n\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# n,k = 6,1\n# a = [36, 4, 1, 25, 9, 16]\n\n# n,k = 4,4\n# a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop(-1)))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n', '\nfrom sys import stdin\nfrom collections import defaultdict\n\nn,k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n# n,k = 5,2\n# a = [1, 2, 15, 15, 15]\n\n# # n,k = 6,1\n# # a = [36, 4, 1, 25, 9, 16]\n\n# # n,k = 4,4\n# # a = [1, 10, 100, 1000]\n\na.sort()\n\nskills = defaultdict(list)\nfor i in range(n):\n    skills[a[i]].append(i)\n\ndef get_teams(skills, k):\n    teams = []\n    for skill in skills:\n        while len(skills[skill]) >= 2:\n            teams.append((skills[skill].pop(0), skills[skill].pop()))\n    for skill in skills:\n        if skills[skill]:\n            teams.append((skills[skill].pop(),))\n    if len(teams) > k:\n        return []\n    return teams\n\nteams = get_teams(skills, k)\n\nfor i in range(n-1, -1, -1):\n    if a[i] - a[0] <= 5:\n        skills[a[i]].append(skills[a[0]].pop(0))\n        if not skills[a[0]]:\n            del skills[a[0]]\n        teams = get_teams(skills, k)\n        if teams:\n            break\n\nprint(sum(map(len, teams)))\n']
2022-04-23 22:01:42.608379 size on output set 8
