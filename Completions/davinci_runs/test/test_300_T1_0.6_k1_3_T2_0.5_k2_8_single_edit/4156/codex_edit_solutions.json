["\n\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_passengers = max_passengers = 0\nfor i in range(n):\n    max_passengers += a[i]\n    min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\nif max_passengers > w:\n    print(0)\nelse:\n    print(w-max_passengers+1-min_passengers+1)\n", "\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nl = [0] * (n + 1)\nfor i in range(1, n + 1):\n    l[i] = l[i - 1] + a[i - 1]\n\nr = [0] * (l[n] + w + 1)\nr[w + l[0]] = 1\nfor i in range(1, n + 1):\n    for j in range(w + l[i], l[i - 1], -1):\n        if r[j] > 0:\n            r[j + a[i - 1]] += r[j]\n\nprint(r[w + l[n]])\n", "\nn,w = map(int, input().split())\na = list(map(int, input().split()))\ndef check(x):\n    b = [0]*n\n    b[0] = x\n    flag = True\n    for i in range(1,n):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w+1):\n    if check(i):\n        k += 1\nprint(k)\n", "\nn, w = map(int, input().split())\na = list(map(int, input().split()))\nmin_passengers = max_passengers = 0\nfor i in range(n):\n    max_passengers += a[i]\n    min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\nif max_passengers > w:\n    print(0)\nelse:\n    print(w-max_passengers+1-min_passengers)\n", "\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_passengers = max_passengers = 0\nfor i in range(n):\n    max_passengers += a[i]\n    min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\nif max_passengers > w:\n    print(0)\nelse:\n    print(w-max_passengers+1-min_passengers) \n", "\n\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_passengers = max_passengers = 0\nfor i in range(n):\n    max_passengers += a[i]\n    min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\nif max_passengers > w:\n    print(0)\nelse:\n    print(w-max_passengers+1-min_passengers) \n", "\nn,w = map(int, input().split())\na = list(map(int, input().split()))\n\ndef check(x):\n    b = [0]*n\n    b[0] = x\n    flag = True\n    for i in range(1,n):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w+1):\n    if check(i):\n        k += 1\nprint(k)\n", "# coding: utf-8\n# Your code here!\nn,w = map(int, input().split())\na = list(map(int, input().split()))\n\n\n\ndef check(x,w):\n    b = [0]*n\n    b[0] = x\n    flag = True\n    for i in range(1,n+1):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w+1):\n    if check(i,w):\n        k += 1 \nprint(k)\n", "# coding: utf-8\n\nn,w = map(int, input().split())\na = list(map(int, input().split()))\n\ndef check(x):\n    b = [0] * n\n    b[0] = x\n    flag = True\n    for i in range(1, n):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w + 1):\n    if check(i):\n        k += 1\nprint(k)\n", "\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nmin_passengers = max_passengers = 0\nfor i in range(n):\n    max_passengers += a[i]\n    min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\nif max_passengers > w:\n    print(0)\nelse:\n    print(w-max_passengers+1-min_passengers)\n", "#https://atcoder.jp/contests/abc141/tasks/abc141_e\n\nn,w = map(int, input().split())\na = list(map(int, input().split()))\n\ndef check(x):\n    b = [0]*n\n    b[0] = x\n    flag = True\n    for i in range(1,n):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w+1):\n    if check(i):\n        k += 1\nprint(k)\n", "n, w = map(int, input().split())\n\n\na = [0] * n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nprint(a)\n", "# coding: utf-8\n\n\nn, w = map(int, input().split())\na = list(map(int, input().split())\n\n\ndef check(x):  # x\u306f\u5148\u982d\u306e\u8377\u7269\u306e\u91cd\u3055\n    b = [0]*n\n    b[0] = x\n    flag = True\n    for i in range(1, n):\n        b[i] = b[i-1] + a[i-1]\n        if b[i] < 0 or b[i] > w:\n            flag = False\n            break\n    return flag\n\nk = 0\nfor i in range(w+1):\n    if check(i):\n        k += 1\nprint(k)\n", "\n\ndef solve(n, w, a):\n    min_passengers = max_passengers = 0\n    for i in range(n):\n        max_passengers += a[i]\n        min_passengers = max(min(min_passengers+a[i], 0), max_passengers)\n\n    if max_passengers > w:\n        return 0\n    else:\n        return w-max_passengers+1-min_passengers\n\n\nif __name__ == '__main__':\n    n, w = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, w, a))\n", "\n\nimport sys\n\nwith open(\"input.txt\", \"r\") as f:\n    n, w = map(int, f.readline().split())\n    a = list(map(int, f.readline().split()))\n\n    l = [0] * (n + 1)\n    for i in range(1, n + 1):\n        l[i] = l[i - 1] + a[i - 1]\n\nprint(r[w + l[n]])\n", "# coding: utf-8\n\nn, w = map(int, input().split())\na = list(map(int, input().split()))\n\nl = [0] * (n + 1)\nfor i in range(1, n + 1):\n    l[i] = l[i - 1] + a[i - 1]\n\nr = [0] * (l[n] + w + 1)\nr[w + l[0]] = 1\nfor i in range(1, n + 1):\n    for j in range(w + l[i], l[i - 1], -1):\n        if r[j] > 0:\n            r[j + a[i - 1]] += r[j]\n\nprint(r[w + l[n]])\n"]