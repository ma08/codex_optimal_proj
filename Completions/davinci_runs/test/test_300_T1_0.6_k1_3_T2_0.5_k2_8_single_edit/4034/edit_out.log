2022-04-23 21:05:05.101295 num operations 1
2022-04-23 21:05:05.101323 size on input set 1
2022-04-23 21:05:05.101461 using api key kouti
2022-04-23 21:05:25.580364 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(\"YES\")\n        print(\"0\")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(\"00\")\n        else:\n            print(\"YES\")\n            print(\"10\")\n        return\n    print(\"YES\")\n    print(\"0\" * n)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = list(input())\n    if n == 1:\n        print(\"YES\")\n        print(s[0])\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(s[0] * 2)\n        else:\n            print(\"YES\")\n            print(s[0] + s[1])\n        return\n    if s[0] > s[1]:\n        prev_color = '1'\n    else:\n        prev_color = '0'\n    print(\"YES\")\n    print(prev_color, end='')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == '0':\n                prev_color = '1'\n            else:\n                prev_color = '0'\n        print(prev_color, end='')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == '0':\n            prev_color = '1'\n        else:\n            prev_color = '0'\n    print(prev_color)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n#\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(\"YES\")\n        print(\"0\")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(\"00\")\n        else:\n            print(\"YES\")\n            print(\"10\")\n        return\n    if s[0] > s[1]:\n        prev_color = '1'\n    else:\n        prev_color = '0'\n    print(\"YES\")\n    print(prev_color, end='')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == '0':\n                prev_color = '1'\n            else:\n                prev_color = '0'\n        print(prev_color, end='')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == '0':\n            prev_color = '1'\n        else:\n            prev_color = '0'\n    print(prev_color)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(\"YES\")\n        print(\"0\")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(\"00\")\n        else:\n            print(\"YES\")\n            print(\"10\")\n        return\n    prev_color = '0'\n    print(\"YES\")\n    print(prev_color, end='')\n    for i in range(1, n - 1):\n        if s[i] < s[i - 1]:\n            if prev_color == '0':\n                prev_color = '1'\n            else:\n                prev_color = '0'\n        print(prev_color, end='')\n    if s[n - 2] < s[n - 1]:\n        if prev_color == '0':\n            prev_color = '1'\n        else:\n            prev_color = '0'\n    print(prev_color)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "def main():\n    n = int(input())\n    s = input()\n    if n == 1: # n = 1\n        print(\"YES\")\n        print(\"0\")\n        return\n    if n == 2: # n = 2\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(\"00\")\n        else:\n            print(\"YES\")\n            print(\"10\")\n        return\n    if s[0] > s[1]: # n >= 3\n        prev_color = '1'\n    else:\n        prev_color = '0'\n    print(\"YES\")\n    print(prev_color, end='') # n >= 3\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == '0': # n >= 3\n                prev_color = '1'\n            else:\n                prev_color = '0'\n        print(prev_color, end='')\n    if s[n - 2] > s[n - 1]: # n >= 3\n        if prev_color == '0':\n            prev_color = '1'\n        else:\n            prev_color = '0'\n    print(prev_color)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n\n    ans = []\n    for i in range(n):\n        if s[i] == 'E':\n            ans.append('S')\n        else:\n            ans.append('E')\n    print(''.join(ans))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations\nfrom itertools import combinations\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(\"YES\")\n        print(\"0\")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print(\"YES\")\n            print(\"00\")\n        else:\n            print(\"YES\")\n            print(\"10\")\n        return\n    if s[0] > s[1]:\n        prev_color = '1'\n    else:\n        prev_color = '0'\n    print(\"YES\")\n    print(prev_color, end='')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == '0':\n                prev_color = '1'\n            else:\n                prev_color = '0'\n        print(prev_color, end='')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == '0':\n            prev_color = '1'\n        else:\n            prev_color = '0'\n    print(prev_color)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650747905,
  "object": "edit"
}
2022-04-23 21:05:25.580650 fix syntax errors 8 ['\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print("YES")\n        print("0")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print("YES")\n            print("00")\n        else:\n            print("YES")\n            print("10")\n        return\n    print("YES")\n    print("0" * n)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = list(input())\n    if n == 1:\n        print("YES")\n        print(s[0])\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print("YES")\n            print(s[0] * 2)\n        else:\n            print("YES")\n            print(s[0] + s[1])\n        return\n    if s[0] > s[1]:\n        prev_color = \'1\'\n    else:\n        prev_color = \'0\'\n    print("YES")\n    print(prev_color, end=\'\')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == \'0\':\n                prev_color = \'1\'\n            else:\n                prev_color = \'0\'\n        print(prev_color, end=\'\')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == \'0\':\n            prev_color = \'1\'\n        else:\n            prev_color = \'0\'\n    print(prev_color)\n\nif __name__ == "__main__":\n    main()\n', '\n#\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print("YES")\n        print("0")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print("YES")\n            print("00")\n        else:\n            print("YES")\n            print("10")\n        return\n    if s[0] > s[1]:\n        prev_color = \'1\'\n    else:\n        prev_color = \'0\'\n    print("YES")\n    print(prev_color, end=\'\')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == \'0\':\n                prev_color = \'1\'\n            else:\n                prev_color = \'0\'\n        print(prev_color, end=\'\')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == \'0\':\n            prev_color = \'1\'\n        else:\n            prev_color = \'0\'\n    print(prev_color)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print("YES")\n        print("0")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print("YES")\n            print("00")\n        else:\n            print("YES")\n            print("10")\n        return\n    prev_color = \'0\'\n    print("YES")\n    print(prev_color, end=\'\')\n    for i in range(1, n - 1):\n        if s[i] < s[i - 1]:\n            if prev_color == \'0\':\n                prev_color = \'1\'\n            else:\n                prev_color = \'0\'\n        print(prev_color, end=\'\')\n    if s[n - 2] < s[n - 1]:\n        if prev_color == \'0\':\n            prev_color = \'1\'\n        else:\n            prev_color = \'0\'\n    print(prev_color)\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n = int(input())\n    s = input()\n    if n == 1: # n = 1\n        print("YES")\n        print("0")\n        return\n    if n == 2: # n = 2\n        if s[0] <= s[1]:\n            print("YES")\n            print("00")\n        else:\n            print("YES")\n            print("10")\n        return\n    if s[0] > s[1]: # n >= 3\n        prev_color = \'1\'\n    else:\n        prev_color = \'0\'\n    print("YES")\n    print(prev_color, end=\'\') # n >= 3\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == \'0\': # n >= 3\n                prev_color = \'1\'\n            else:\n                prev_color = \'0\'\n        print(prev_color, end=\'\')\n    if s[n - 2] > s[n - 1]: # n >= 3\n        if prev_color == \'0\':\n            prev_color = \'1\'\n        else:\n            prev_color = \'0\'\n    print(prev_color)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n\n    ans = []\n    for i in range(n):\n        if s[i] == \'E\':\n            ans.append(\'S\')\n        else:\n            ans.append(\'E\')\n    print(\'\'.join(ans))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations\nfrom itertools import combinations\n\ndef main():\n    n = int(input())\n    s = input()\n    if n == 1:\n        print("YES")\n        print("0")\n        return\n    if n == 2:\n        if s[0] <= s[1]:\n            print("YES")\n            print("00")\n        else:\n            print("YES")\n            print("10")\n        return\n    if s[0] > s[1]:\n        prev_color = \'1\'\n    else:\n        prev_color = \'0\'\n    print("YES")\n    print(prev_color, end=\'\')\n    for i in range(1, n - 1):\n        if s[i] <= s[i - 1]:\n            if prev_color == \'0\':\n                prev_color = \'1\'\n            else:\n                prev_color = \'0\'\n        print(prev_color, end=\'\')\n    if s[n - 2] > s[n - 1]:\n        if prev_color == \'0\':\n            prev_color = \'1\'\n        else:\n            prev_color = \'0\'\n    print(prev_color)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:05:25.580794 size on output set 8
2022-04-23 21:05:25.580808 num operations 1
2022-04-23 21:05:25.580814 size on input set 1
2022-04-23 21:05:25.580958 using api key kouti
2022-04-23 21:05:49.170596 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i+1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for _ in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if (s[i] > s[i+1]):\n            if (flag == 1):\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i+1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\nmain()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for x in range(n)]\n    flag = 0\n    for i in range(n - 1):\n        if s[i] > s[i + 1]:\n            if flag == 1:\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i + 1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i+1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "def main():\n    s = input()\n\n\n    if (s == 'a'):\n        print('-1')\n    else:\n        print('a')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if (s[i] > s[i+1]):\n            if (flag == 1):\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i+1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = ['0' for x in range(n)]\n    flag = 0\n    for i in range(n - 1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print(\"NO\")\n                return\n            else:\n                ans[i] = '1'\n                ans[i+1] = '0'\n                flag = 1\n    print(\"YES\")\n    print(''.join(ans))\n\nmain()\n"
    }
  ],
  "created": 1650747925,
  "object": "edit"
}
2022-04-23 21:05:49.170856 NO RESULT
2022-04-23 21:05:49.170866 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-23 21:05:49.170914 fix syntax errors 7 ['\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i+1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\nmain()\n', '\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for _ in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if (s[i] > s[i+1]):\n            if (flag == 1):\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i+1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for x in range(n)]\n    flag = 0\n    for i in range(n - 1):\n        if s[i] > s[i + 1]:\n            if flag == 1:\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i + 1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i+1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\nmain()\n', "def main():\n    s = input()\n\n\n    if (s == 'a'):\n        print('-1')\n    else:\n        print('a')\n\nmain()\n", '\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for x in range(n)]\n    flag = 0\n    for i in range(n-1):\n        if (s[i] > s[i+1]):\n            if (flag == 1):\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i+1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    s = input()\n    ans = [\'0\' for x in range(n)]\n    flag = 0\n    for i in range(n - 1):\n        if s[i] > s[i+1]:\n            if flag == 1:\n                print("NO")\n                return\n            else:\n                ans[i] = \'1\'\n                ans[i+1] = \'0\'\n                flag = 1\n    print("YES")\n    print(\'\'.join(ans))\n\nmain()\n']
2022-04-23 21:05:49.170970 size on output set 6
2022-04-23 21:05:49.170983 num operations 1
2022-04-23 21:05:49.170989 size on input set 1
2022-04-23 21:05:49.171113 using api key kouti
2022-04-23 21:06:11.641565 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or\n               (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or\n               (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])  # noqa\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] > s[k + 1])\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for k in range(i, j)\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for k in range(i, j)\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for i <= k < j\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for i <= k < j\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j])\n        or (dp[i][k] and dp[k + 1][j] and s[i] > s[j])\n        or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])  # noqa: E501\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) or (dp[i][k] and dp[k + 1][j] and s[k] > s[k + 1])\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for any k in range(i, j)\n    \"\"\"\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print(\"NO\")\n        return\n    print(\"YES\")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print(\"\".join(map(str, res)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650747949,
  "object": "edit"
}
2022-04-23 21:06:11.641920 fix syntax errors 8 ['\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or\n               (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or\n               (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])  # noqa\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] > s[k + 1])\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for k in range(i, j)\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for k in range(i, j)\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for i <= k < j\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for i <= k < j\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j])\n        or (dp[i][k] and dp[k + 1][j] and s[i] > s[j])\n        or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])  # noqa: E501\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) or (dp[i][k] and dp[k + 1][j] and s[k] > s[k + 1])\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    dp[i][j] = true if the string from i...j is sortable\n    dp[i][i] = true\n    dp[i][j] = (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1]) for any k in range(i, j)\n    """\n    n = int(input())\n    s = input()\n    dp = [[False] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = True\n    for l in range(2, n + 1):\n        for i in range(n - l + 1):\n            j = i + l - 1\n            for k in range(i, j):\n                dp[i][j] = dp[i][j] or (dp[i][k] and dp[k + 1][j] and s[i] < s[j]) or (dp[i][k] and dp[k + 1][j] and s[i] > s[j]) or (dp[i][k] and dp[k + 1][j] and s[k] < s[k + 1])\n    if not dp[0][n - 1]:\n        print("NO")\n        return\n    print("YES")\n    res = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            if dp[i][j]:\n                res[i] = 0\n                res[j] = 1\n                break\n    print("".join(map(str, res)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:06:11.642044 size on output set 7
