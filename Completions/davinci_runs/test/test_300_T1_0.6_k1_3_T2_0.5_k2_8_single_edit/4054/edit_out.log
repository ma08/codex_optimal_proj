2022-04-23 21:24:11.006859 num operations 1
2022-04-23 21:24:11.006881 size on input set 1
2022-04-23 21:24:11.007028 using api key soukgp
2022-04-23 21:24:26.811070 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2 or n == 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    pass\n\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "def is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**(0.5))+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in raw_input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef is_prime(n):\n    \"\"\"\n    Tests if n is prime.\n    \"\"\"\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return False\n\n    return True\n\ndef main():\n    \"\"\"\n    Driver function.\n    \"\"\"\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650749051,
  "object": "edit"
}
2022-04-23 21:24:26.811395 fix syntax errors 8 ['\n\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2 or n == 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    pass\n\n\ndef main():\n    """\n    Driver function.\n    """\n    pass\n\nif __name__ == "__main__":\n    main()\n', 'def is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**(0.5))+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in raw_input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '\ndef is_prime(n):\n    """\n    Tests if n is prime.\n    """\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return False\n\n    return True\n\ndef main():\n    """\n    Driver function.\n    """\n    nums = [int(i) for i in input().split()]\n    count = 0\n    for num in nums:\n        if is_prime(num):\n            count += 1\n    print(count)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:24:26.811523 size on output set 8
2022-04-23 21:24:26.811537 num operations 1
2022-04-23 21:24:26.811543 size on input set 1
2022-04-23 21:24:26.811666 using api key sunu
2022-04-23 21:24:40.104210 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print(1) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    print(1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print('hello')\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    print(1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    print(1)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    print('hello world')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    print(1)\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    print(2)\n\nmain()\n"
    }
  ],
  "created": 1650749066,
  "object": "edit"
}
2022-04-23 21:24:40.104470 fix syntax errors 8 ['\n\ndef main():\n    print(1) \n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print(1)\n\n\nif __name__ == "__main__":\n    main()\n', "\n\ndef main():\n    print('hello')\n\nmain()\n", "\n\ndef main():\n    print(1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(1)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print('hello world')\n\nmain()\n", '\n\ndef main():\n    print(1)\n', '\n\ndef main():\n    print(2)\n\nmain()\n']
2022-04-23 21:24:40.104495 size on output set 8
2022-04-23 21:24:40.104505 num operations 1
2022-04-23 21:24:40.104511 size on input set 1
2022-04-23 21:24:40.104619 using api key kouti
2022-04-23 21:25:00.138807 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) (0 <= i <= max(a), 1 <= j <= len(a))\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1)\n\ndef main():\n    a = map(int, input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print(max(dp[max(a)]))\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#!/usr/bin/env python\n# dp[i][j] = max(dp[i][j-1], dp[i-a[j]][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) \n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n# dp[i][j] = max(dp[i][j-1], dp[i - a_j][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n# dp[i][j] = max(dp[i][j-1], dp[i - a_j][j-1] + 1)\n\ndef main():\n    a = list(map(int, input().split()))\n    dp = [[0 for _ in range(len(a) + 1)] for _ in range(max(a) + 1)]\n    for i in range(len(a)):\n        for j in range(1, max(a) + 1):\n            dp[j][i + 1] = dp[j][i]\n            if j >= a[i]:\n                dp[j][i + 1] = max(dp[j][i + 1], dp[j - a[i]][i] + 1)\n    print(max(dp[max(a)]))\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a[j]][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) \n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650749080,
  "object": "edit"
}
2022-04-23 21:25:00.139094 fix syntax errors 8 ['\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) (0 <= i <= max(a), 1 <= j <= len(a))\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1)\n\ndef main():\n    a = map(int, input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print(max(dp[max(a)]))\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n#!/usr/bin/env python\n# dp[i][j] = max(dp[i][j-1], dp[i-a[j]][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) \n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n# dp[i][j] = max(dp[i][j-1], dp[i - a_j][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n# dp[i][j] = max(dp[i][j-1], dp[i - a_j][j-1] + 1)\n\ndef main():\n    a = list(map(int, input().split()))\n    dp = [[0 for _ in range(len(a) + 1)] for _ in range(max(a) + 1)]\n    for i in range(len(a)):\n        for j in range(1, max(a) + 1):\n            dp[j][i + 1] = dp[j][i]\n            if j >= a[i]:\n                dp[j][i + 1] = max(dp[j][i + 1], dp[j - a[i]][i] + 1)\n    print(max(dp[max(a)]))\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a[j]][j-1] + 1)\n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n# dp[i][j] = max(dp[i][j-1], dp[i-a_j][j-1] + 1) \n\ndef main():\n    a = map(int, raw_input().split())\n    dp = [[0 for _ in xrange(len(a) + 1)] for _ in xrange(max(a) + 1)]\n    for i in xrange(len(a)):\n        for j in xrange(1, max(a) + 1):\n            dp[j][i+1] = dp[j][i]\n            if a[i] <= j:\n                dp[j][i+1] = max(dp[j][i+1], dp[j - a[i]][i] + 1)\n    print max(dp[max(a)])\n    return 0\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:25:00.139226 size on output set 8
