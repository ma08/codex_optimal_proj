["\n\ndef getMaxContest(a, n):\n    dp = [1] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i + 1):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp[n]\n\na = list(map(int, input().split()))\nprint(getMaxContest(a))\n", "\n\ndef getMaxContest(arr):\n    n = len(arr)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if arr[i] <= 2 * arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\narr = list(map(int, input().split()))\nprint(getMaxContest(arr))\n", "\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    return\n\n\nif __name__ == \"__main__\":\n    pass\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\n\nprint(len(q))\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n\tif a[i] <= 2 * q[-1]:\n\t\tq[-1] = a[i]\n\telse:\n\t\tq.append(a[i])\n\nprint(len(q))\n", "\n\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    print(\"Hello World\")\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\n# TODO: make solution\n\n\ndef get_max_contest(problem_set):\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\ndef getMaxContests(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContests(a))\n", "\n\n\ndef getMaxContest(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\n\na = list(map(int, input().split()))\nprint(getMaxContest(a))\n", "\n\n# TODO: make solution #\n\n\ndef get_max_contest(problemset):\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\ndef getMaxContest(a, n):\n    dp = [1] * (n+1)\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j]+1)\n    return max(dp[1:])\n\nn = int(input())\na = [0] + list(map(int, input().split()))\nprint(getMaxContest(a, n))\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\n\nprint(len(q))\n", "\n\ndef getMaxContest(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(0, i):\n            if a[i] <= 2 * a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\na = list(map(int, input().split()))\nprint(getMaxContest(a))\n", "\nfrom typing import List\n# TODO: make solution\n\n\ndef get_max_contest(problemset: List[int]):\n    pass\n\n\nif __name__ == \"__main__\":\n    pass\n", "\n\n# def getMaxContest(a):\n#     n = len(a)\n#     dp = [1] * n\n#     for i in range(n):\n#         for j in range(i):\n#             if a[i] <= 2 * a[j]:\n#                 dp[i] = max(dp[i], dp[j] + 1)\n#     return max(dp)\n\n# a = list(map(int, input().split()))\n# print(getMaxContest(a))\n\n\ndef getMaxContest(arr):\n    dp = [1] * len(arr)\n    for i in range(1, len(arr)):\n        for j in range(i):\n            if arr[i] <= 2 * arr[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return max(dp)\n\n\narr = list(map(int, input().split()))\nprint(getMaxContest(arr))\n", "\n\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# q = [a[0]]\n# for i in range(1, n):\n#     if a[i] <= 2 * q[-1]:\n#         q[-1] = a[i]\n#     else:\n#         q.append(a[i])\n#\n# print(len(q))\n\nimport sys\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    q = [a[0]]\n    for i in range(1, n):\n        if a[i] <= 2 * q[-1]:\n            q[-1] = a[i]\n        else:\n            q.append(a[i])\n\n    print(len(q))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# TODO: make solution\n\n\ndef get_max_contest(problemset):\n    get_max_contest()\n\n\nif __name__ == \"__main__\":\n    pass\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nq = [a[0]]\nfor i in range(1, n):\n    if a[i] <= 2 * q[-1]:\n        q[-1] = a[i]\n    else:\n        q.append(a[i])\nprint(len(q))\n"]