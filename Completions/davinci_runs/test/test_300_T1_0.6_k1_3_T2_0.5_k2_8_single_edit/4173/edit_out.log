2022-04-23 23:15:13.385146 num operations 1
2022-04-23 23:15:13.385165 size on input set 1
2022-04-23 23:15:13.385424 using api key derek
2022-04-23 23:15:32.737723 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\ndef main():\n    q = int(raw_input().strip())\n    for a0 in xrange(q):\n        n, a, b = raw_input().strip().split(' ')\n        n, a, b = [int(n), int(a), int(b)]\n        print solve(n, a, b)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef solve(n, s, d, m):\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if sum(s[i:j+1]) == d:\n                count += 1\n    return count\n\nn = int(raw_input().strip())\ns = map(int, raw_input().strip().split(' '))\nd, m = raw_input().strip().split(' ')\nd, m = [int(d), int(m)]\nresult = solve(n, s, d, m)\nprint(result)\n"
    },
    {
      "index": 6,
      "text": "\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor _ in range(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef solve(n,a,b):\n    a, b = min(a, b), max(a, b)\n    if a==b:\n        return n*a\n    elif n % 2 == 0:\n        return (a * (n//2)) + (b * (n//2))\n    else: \n        return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n,a,b)\n"
    }
  ],
  "created": 1650755713,
  "object": "edit"
}
2022-04-23 23:15:32.738029 fix syntax errors 8 ["import sys\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(input().strip())\nfor a0 in xrange(q):\n    n, a, b = input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\ndef main():\n    q = int(raw_input().strip())\n    for a0 in xrange(q):\n        n, a, b = raw_input().strip().split(' ')\n        n, a, b = [int(n), int(a), int(b)]\n        print solve(n, a, b)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\nimport sys\n\ndef solve(n, s, d, m):\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if sum(s[i:j+1]) == d:\n                count += 1\n    return count\n\nn = int(raw_input().strip())\ns = map(int, raw_input().strip().split(' '))\nd, m = raw_input().strip().split(' ')\nd, m = [int(d), int(m)]\nresult = solve(n, s, d, m)\nprint(result)\n", "\n\ndef solve(n, a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return n * a\n    else:\n        if n % 2 == 0:\n            return (a * (n//2)) + (b * (n//2))\n        else:\n            return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor _ in range(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n, a, b)\n", "\n\nimport sys\n\ndef solve(n,a,b):\n    a, b = min(a, b), max(a, b)\n    if a==b:\n        return n*a\n    elif n % 2 == 0:\n        return (a * (n//2)) + (b * (n//2))\n    else: \n        return (a * (n//2)) + (b * (n//2)) + a\n\nq = int(raw_input().strip())\nfor a0 in xrange(q):\n    n, a, b = raw_input().strip().split(' ')\n    n, a, b = [int(n), int(a), int(b)]\n    print solve(n,a,b)\n"]
2022-04-23 23:15:32.738082 size on output set 7
2022-04-23 23:15:32.738095 num operations 1
2022-04-23 23:15:32.738101 size on input set 1
2022-04-23 23:15:32.738252 using api key kouti
2022-04-23 23:15:53.653972 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef minimum_cost_bottles(n, a, b, c):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b, 2*c)\n    else:\n        return min(n*a, n//2*b + n%2*a, n//3*c + n%3*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2], query[3]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport math\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(int(input()))\n\n    for query in queries:\n        print(binary_search(arr, query))\n\ndef binary_search(arr, x):\n    low = 0\n    high = len(arr) - 1\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] == x:\n            return \"YES\"\n        elif arr[mid] > x:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return \"NO\"\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport math\n\ndef minimum_cost_bottles(n, a, b)\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main()\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\"\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n#\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650755732,
  "object": "edit"
}
2022-04-23 23:15:53.654304 fix syntax errors 8 ['\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef minimum_cost_bottles(n, a, b, c):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b, 2*c)\n    else:\n        return min(n*a, n//2*b + n%2*a, n//3*c + n%3*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2], query[3]))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(int(input()))\n\n    for query in queries:\n        print(binary_search(arr, query))\n\ndef binary_search(arr, x):\n    low = 0\n    high = len(arr) - 1\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] == x:\n            return "YES"\n        elif arr[mid] > x:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return "NO"\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n', 'import math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\n\ndef minimum_cost_bottles(n, a, b)\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main()\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__"\n    main()\n', '\n#\nimport math\n\ndef minimum_cost_bottles(n, a, b):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return a\n    elif n == 2:\n        return min(2*a, b)\n    else:\n        return min(n*a, n//2*b + n%2*a)\n\ndef main():\n    q = int(input())\n    queries = []\n    for i in range(q):\n        queries.append(list(map(int, input().split())))\n    for query in queries:\n        print(minimum_cost_bottles(query[0], query[1], query[2]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 23:15:53.654370 size on output set 8
2022-04-23 23:15:53.654384 num operations 1
2022-04-23 23:15:53.654405 size on input set 1
2022-04-23 23:15:53.654566 using api key kouti
2022-04-23 23:16:10.655131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split()) \n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2)*b + (n%2)*a)\n        else:\n            print(n*a, end=\" \")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\na = 1\nb = 2\nc = 3\nd = 4\ne = 5\nf = 6\ng = 7\nh = 8\ni = 9\nj = 10\nk = 11\nl = 12\nm = 13\nn = 14\no = 15\np = 16\nq = 17\nr = 18\ns = 19\nt = 20\nu = 21\nv = 22\nw = 23\nx = 24\ny = 25\nz = 26\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650755753,
  "object": "edit"
}
2022-04-23 23:16:10.655488 fix syntax errors 8 ["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split()) \n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n", '#!/usr/bin/env python3\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2)*b + (n%2)*a)\n        else:\n            print(n*a, end=" ")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\na = 1\nb = 2\nc = 3\nd = 4\ne = 5\nf = 6\ng = 7\nh = 8\ni = 9\nj = 10\nk = 11\nl = 12\nm = 13\nn = 14\no = 15\np = 16\nq = 17\nr = 18\ns = 19\nt = 20\nu = 21\nv = 22\nw = 23\nx = 24\ny = 25\nz = 26\n', "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        print(n*a)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, a, b = map(int, input().split())\n        if b < 2*a:\n            print((n//2) * b + (n%2) * a)\n        else:\n            print(n*a)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-23 23:16:10.655600 size on output set 7
