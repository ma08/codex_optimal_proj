2022-04-18 04:01:44.168816 """
We will call a string obtained by arranging the characters contained in a string a in some order, an anagram of a.
For example, greenbin is an anagram of beginner. As seen here, when the same character occurs multiple times, that character must be used that number of times.
Given are N strings s_1, s_2, \ldots, s_N. Each of these strings has a length of 10 and consists of lowercase English characters. Additionally, all of these strings are distinct. Find the number of pairs of integers i, j (1 \leq i < j \leq N) such that s_i is an anagram of s_j.

-----Constraints-----
 - 2 \leq N \leq 10^5
 - s_i is a string of length 10.
 - Each character in s_i is a lowercase English letter.
 - s_1, s_2, \ldots, s_N are all distinct.

-----Input-----
Input is given from Standard Input in the following format:
N
s_1
s_2
:
s_N

-----Output-----
Print the number of pairs of integers i, j (1 \leq i < j \leq N) such that s_i is an anagram of s_j.

-----Sample Input-----
3
acornistnt
peanutbomb
constraint

-----Sample Output-----
1

s_1 = acornistnt is an anagram of s_3 = constraint. There are no other pairs i, j such that s_i is an anagram of s_j, so the answer is 1.
"""
2022-04-18 04:01:44.168831 --------------------------
2022-04-18 04:02:09.871401 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\nwords = []\nfor i in range(N):\n    words.append(input())\n\ncount = 0\n\nfor i in range(N):\n    word_i = words[i]\n    word_j = word_i[::-1]\n    for j in range(i+1, N):\n        if words[j] == word_j:\n            count += 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    s_list = []\n    for i in range(n):\n        s_list.append(input())\n    s_list.sort()\n    count = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            for k in range(10):\n                if s_list[i][k] != s_list[j][k]:\n                    break\n                if k == 9:\n                    count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    N = input()\n    s = []\n    for i in range(N):\n        s.append(input())\n    ans = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650254504,
  "id": "cmpl-4yCs4PZZuFx68bslv6X1ISJwCJVfG",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 04:02:09.871694 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\nwords = []\nfor i in range(N):\n    words.append(input())\n\ncount = 0\n\nfor i in range(N):\n    word_i = words[i]\n    word_j = word_i[::-1]\n    for j in range(i+1, N):\n        if words[j] == word_j:\n            count += 1\n\nprint(count)"
}
2022-04-18 04:02:09.871764 REASON stop
2022-04-18 04:02:10.180862 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    s_list = []\n    for i in range(n):\n        s_list.append(input())\n    s_list.sort()\n    count = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            for k in range(10):\n                if s_list[i][k] != s_list[j][k]:\n                    break\n                if k == 9:\n                    count += 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 04:02:10.180990 REASON stop
2022-04-18 04:02:10.267964 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    N = input()\n    s = []\n    for i in range(N):\n        s.append(input())\n    ans = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            if sorted(s[i]) == sorted(s[j]):\n                ans += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 04:02:10.268094 REASON stop
