["\nimport sys\n\ndef max_product(a, b, c, d):\n    max_prod = 0\n\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            max_prod = max(max_prod, i * j)\n\n    return max_prod\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\"\"\"\n\"\"\"\n\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    min_val = min(a, c)\n    max_val = max(b, d)\n    print(max_val * max_val)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    print(max(b, d) * max(b, d))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef max_product(a, b, c, d):\n    max_prod = 0\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            max_prod = max(max_prod, i * j)\n    \n    return max_prod\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    min_val = min(a, c)\n    max_val = max(b, d)\n    print(max_val * max_val)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(max(a * c, a * d, b * c, b * d))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef max_product(a, b, c, d):\n    max_prod = 0\n\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            max_prod = max(max_prod, i * j)\n    \n    return max_prod\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef max_product(a, b, c, d):\n    max_prod = 0\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            max_prod = max(max_prod, i * j)\n    \n    return max_prod\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(\"Hello\")\n", "\n\nimport sys\n\ndef max_product(a, b, c, d, k):\n    max_prod = 0,\n    count = 0\n\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            if count < k:\n                max_prod = max(max_prod, i * j)\n                count += 1\n            else:\n                break\n    return max_prod, count\n\n\ndef main():\n    a, b, c, d, k = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d, k))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(max(a * c, a * d, b * c, b * d))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    min_val = min(a, c)\n    max_val = max(b, d)\n    print(max_val * max_val)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    min_val = min(a, c)\n    max_val = max(b, d)\n    print(max_val * min_val)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\ndef main():\n    a, b, c, d = map(int, input().split())\n    print(max(a * c, a * d, b * c, b * d))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef max_product(a, b, c, d):\n    max_prod = 0\n\n    for i in range(a, b + 1):\n        for j in range(c, d + 1):\n            max_prod = max(max_prod, i * j)\n\n    return max_prod\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split(' '))\n    print(max_product(a, b, c, d))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c, d = [int(x) for x in sys.stdin.readline().split()]\n    min_val = min(a, c)\n    max_val = max(b, d)\n    print(max_val - min_val)\n\nif __name__ == '__main__':\n    main()\n"]