2022-04-24 00:30:58.958736 num operations 1
2022-04-24 00:30:58.958755 size on input set 1
2022-04-24 00:30:58.958890 using api key derek
2022-04-24 00:31:19.358351 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list) - 2):\n        if string_list[i] == \"x\" and string_list[i + 1] == \"x\" and string_list[i + 2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == \"x\" and string_list[i+1] == \"x\" and string_list[i+2] == \"x\":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650760259,
  "object": "edit"
}
2022-04-24 00:31:19.358765 fix syntax errors 8 ['\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list) - 2):\n        if string_list[i] == "x" and string_list[i + 1] == "x" and string_list[i + 2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef string_to_list():\n    global n, string_list\n    n = int(input())\n    string_list = list(input())\n\n\ndef xxx_check():\n    global xxx_counter\n    xxx_counter = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == "x" and string_list[i+1] == "x" and string_list[i+2] == "x":\n            xxx_counter += 1\n\n\ndef xxx_check_output():\n    if xxx_counter == 0:\n        print(0)\n    else:\n        print(xxx_counter)\n\n\ndef main():\n    string_to_list()\n    xxx_check()\n    xxx_check_output()\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-24 00:31:19.358888 size on output set 3
2022-04-24 00:31:19.358900 num operations 1
2022-04-24 00:31:19.358905 size on input set 1
2022-04-24 00:31:19.359042 using api key soukgp
2022-04-24 00:31:33.854755 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n#comment\n\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/10/17\n# @Author  : Edrain\n\n\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef main():\n    n = int(input())\n    s = input()\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650760279,
  "object": "edit"
}
2022-04-24 00:31:33.855017 fix syntax errors 8 ["\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#comment\n\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/10/17\n# @Author  : Edrain\n\n\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    s = input()\n    if n < 3:\n        print(0)\n        return\n    if n == 3 and s == 'xxx':\n        print(3)\n        return\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    n = int(input())\n    s = input()\n    print(s)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(2, n):\n        if s[i - 2] == 'x' and s[i - 1] == 'x' and s[i] == 'x':\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:31:33.855098 size on output set 6
2022-04-24 00:31:33.855112 num operations 1
2022-04-24 00:31:33.855119 size on input set 1
2022-04-24 00:31:33.855245 using api key derek
2022-04-24 00:31:52.042337 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_remove(name):\n    res = []\n    for i in name:\n        if i == \"x\":\n            if len(res) >= 2 and res[-1] == \"x\" and res[-2] == \"x\":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(min_remove(name))\n"
    },
    {
      "index": 1,
      "text": "\ndef minRemove(name):\n    res = []\n    for i in name:\n        if i == \"x\":\n            if len(res) >= 2 and res[-1] == \"x\" and res[-2] == \"x\":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef minRemove(s):\n    res = []\n    for i in name:\n        if i == \"x\":\n            if len(res) >= 2 and res[-1] == \"x\" and res[-2] == \"x\":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n"
    },
    {
      "index": 3,
      "text": "\ndef minRemove(name):\n    res = []\n    for i in name:\n        if i == \"x\":\n            if len(res) >= 2 and res[-1] == \"x\" and res[-2] == \"x\" and res[-3] == \"x\":\n                res.pop()\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef minRemove(s):\n    r = []\n    for i in s:\n        if i == \"x\":\n            if len(r) >= 2 and r[-1] == \"x\" and r[-2] == \"x\":\n                r.pop()\n                r.pop()\n        else:\n            r.append(i)\n    return len(s) - len(r)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n    print(minRemove(s))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef min_remove(name):\n    res = []\n    for i in name:\n        if i == \"x\":\n            if len(res) >= 2 and res[-1] == \"x\" and res[-2] == \"x\":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(min_remove(name))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef minRemove(name):\n    res = 0\n    for i in range(1, len(name)):\n        if name[i] == \"x\" and name[i-1] == \"x\":\n            res += 1\n    return res\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n"
    },
    {
      "index": 7,
      "text": "\ndef minRemove(name):\n    res = name.replace(\"xxx\", \"\")\n    return len(name) - len(res) - name.count(\"xxx\")\n\nif __name__ == \"__main__\":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n"
    }
  ],
  "created": 1650760293,
  "object": "edit"
}
2022-04-24 00:31:52.042716 fix syntax errors 8 ['\n\ndef min_remove(name):\n    res = []\n    for i in name:\n        if i == "x":\n            if len(res) >= 2 and res[-1] == "x" and res[-2] == "x":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(min_remove(name))\n', '\ndef minRemove(name):\n    res = []\n    for i in name:\n        if i == "x":\n            if len(res) >= 2 and res[-1] == "x" and res[-2] == "x":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n', '\n\ndef minRemove(s):\n    res = []\n    for i in name:\n        if i == "x":\n            if len(res) >= 2 and res[-1] == "x" and res[-2] == "x":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n', '\ndef minRemove(name):\n    res = []\n    for i in name:\n        if i == "x":\n            if len(res) >= 2 and res[-1] == "x" and res[-2] == "x" and res[-3] == "x":\n                res.pop()\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n', '\n\ndef minRemove(s):\n    r = []\n    for i in s:\n        if i == "x":\n            if len(r) >= 2 and r[-1] == "x" and r[-2] == "x":\n                r.pop()\n                r.pop()\n        else:\n            r.append(i)\n    return len(s) - len(r)\n\nif __name__ == "__main__":\n    n = int(input())\n    s = input()\n    print(minRemove(s))\n', '\n\ndef min_remove(name):\n    res = []\n    for i in name:\n        if i == "x":\n            if len(res) >= 2 and res[-1] == "x" and res[-2] == "x":\n                res.pop()\n                res.pop()\n            else:\n                res.append(i)\n        else:\n            res.append(i)\n    return len(name) - len(res)\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(min_remove(name))\n', '\n\ndef minRemove(name):\n    res = 0\n    for i in range(1, len(name)):\n        if name[i] == "x" and name[i-1] == "x":\n            res += 1\n    return res\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n', '\ndef minRemove(name):\n    res = name.replace("xxx", "")\n    return len(name) - len(res) - name.count("xxx")\n\nif __name__ == "__main__":\n    n = int(input())\n    name = input()\n    print(minRemove(name))\n']
2022-04-24 00:31:52.042760 size on output set 7
