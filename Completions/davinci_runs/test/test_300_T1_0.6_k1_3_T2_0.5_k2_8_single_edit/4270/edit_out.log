2022-04-24 00:48:19.681658 num operations 1
2022-04-24 00:48:19.681679 size on input set 1
2022-04-24 00:48:19.681830 using api key derek
2022-04-24 00:48:35.157882 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nprint(\"Hello World!\")\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = map(int, sys.stdin.readline().split())\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [(nums[-1] + nums[-2]) / 2]\n        nums.sort()\n    print(nums[0])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys, math\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [math.ceil((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [(nums[-1] + nums[-2]) / 2]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650761299,
  "object": "edit"
}
2022-04-24 00:48:35.158196 fix syntax errors 8 ["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n", '\nprint("Hello World!")\n', "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = map(int, sys.stdin.readline().split())\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [(nums[-1] + nums[-2]) / 2]\n        nums.sort()\n    print(nums[0])\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys, math\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [math.ceil((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [(nums[-1] + nums[-2]) / 2]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    while len(nums) > 1:\n        nums = nums[:-2] + [int((nums[-1] + nums[-2]) / 2)]\n        nums.sort()\n    print(nums[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:48:35.158252 size on output set 7
2022-04-24 00:48:35.158263 num operations 1
2022-04-24 00:48:35.158268 size on input set 1
2022-04-24 00:48:35.158402 using api key jaanu
2022-04-24 00:49:26.117054 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append(int((a + b) / 2))\n    V.sort()\nprint(V[0])\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    N = int(input())\n    V = [int(x) for x in input().split()]\n    V.sort()\n    while len(V) > 1:\n        a = V.pop(0)\n        b = V.pop(0)\n        V.append((a + b) / 2)\n        V.sort()\n    print(V[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) // 2)\n    V.sort()\nprint(V[0])\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b)//2)\n    V.sort()\nprint(V[0])\n"
    },
    {
      "index": 5,
      "text": "def median(nums):\n    nums.sort()\n    if len(nums) % 2 == 0:\n        return (nums[int(len(nums) / 2)] + nums[int(len(nums) / 2 - 1)]) / 2\n    else:\n        return nums[int(len(nums) / 2)]\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Apr  6 11:45:50 2019\n\n@author: kartiktanksali\n\"\"\"\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the averageOfTopEmployees function below.\ndef averageOfTopEmployees(rating):\n    count = 0\n    for i in rating:\n        if i >= 90:\n            count += 1\n    return count/len(rating)\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    rating = []\n\n    for _ in range(n):\n        rating_item = int(input())\n        rating.append(rating_item)\n\n    result = averageOfTopEmployees(rating)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ],
  "created": 1650761315,
  "object": "edit"
}
2022-04-24 00:49:26.117437 fix syntax errors 8 ['N = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n', '\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append(int((a + b) / 2))\n    V.sort()\nprint(V[0])\n', "\ndef main():\n    N = int(input())\n    V = [int(x) for x in input().split()]\n    V.sort()\n    while len(V) > 1:\n        a = V.pop(0)\n        b = V.pop(0)\n        V.append((a + b) / 2)\n        V.sort()\n    print(V[0])\n\nif __name__ == '__main__':\n    main()\n", '#!/usr/bin/env python3\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) // 2)\n    V.sort()\nprint(V[0])\n', '\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b)//2)\n    V.sort()\nprint(V[0])\n', 'def median(nums):\n    nums.sort()\n    if len(nums) % 2 == 0:\n        return (nums[int(len(nums) / 2)] + nums[int(len(nums) / 2 - 1)]) / 2\n    else:\n        return nums[int(len(nums) / 2)]\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Sat Apr  6 11:45:50 2019\n\n@author: kartiktanksali\n"""\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the averageOfTopEmployees function below.\ndef averageOfTopEmployees(rating):\n    count = 0\n    for i in rating:\n        if i >= 90:\n            count += 1\n    return count/len(rating)\n\nif __name__ == \'__main__\':\n    fptr = open(os.environ[\'OUTPUT_PATH\'], \'w\')\n\n    n = int(input())\n\n    rating = []\n\n    for _ in range(n):\n        rating_item = int(input())\n        rating.append(rating_item)\n\n    result = averageOfTopEmployees(rating)\n\n    fptr.write(str(result) + \'\\n\')\n\n    fptr.close()\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n', '\nN = int(input())\nV = [int(x) for x in input().split()]\nV.sort()\nwhile len(V) > 1:\n    a = V.pop(0)\n    b = V.pop(0)\n    V.append((a + b) / 2)\n    V.sort()\nprint(V[0])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n']
2022-04-24 00:49:26.117529 size on output set 8
2022-04-24 00:49:26.117542 num operations 1
2022-04-24 00:49:26.117547 size on input set 1
2022-04-24 00:49:26.117672 using api key jaanu
2022-04-24 00:49:45.540416 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    },
    {
      "index": 1,
      "text": "from heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    },
    {
      "index": 2,
      "text": "\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    },
    {
      "index": 3,
      "text": "\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    },
    {
      "index": 4,
      "text": "\n\n\n\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    },
    {
      "index": 5,
      "text": "\n#\n# from heapq import heappush, heappop\n# import sys\n#\n# N = int(sys.stdin.readline())\n# heap = []\n# for _ in range(N):\n#     num = int(sys.stdin.readline())\n#     heappush(heap, num)\n#\n# while len(heap) > 1:\n#     a = heappop(heap)\n#     b = heappop(heap)\n#     heappush(heap, (a + b) / 2)\n#\n# print(heap[0])\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom heapq import heappush, heappop, heapify\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, (-num, num))\n\nwhile len(heap) > 1:\n    a = heappop(heap)[1]\n    b = heappop(heap)[1]\n    heappush(heap, (-(a + b) / 2, (a + b) / 2))\n\nprint(heap[0])\n"
    },
    {
      "index": 7,
      "text": "\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n"
    }
  ],
  "created": 1650761366,
  "object": "edit"
}
2022-04-24 00:49:45.540755 fix syntax errors 8 ['\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n', 'from heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n', '\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n', '\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n', '\n\n\n\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n', '\n#\n# from heapq import heappush, heappop\n# import sys\n#\n# N = int(sys.stdin.readline())\n# heap = []\n# for _ in range(N):\n#     num = int(sys.stdin.readline())\n#     heappush(heap, num)\n#\n# while len(heap) > 1:\n#     a = heappop(heap)\n#     b = heappop(heap)\n#     heappush(heap, (a + b) / 2)\n#\n# print(heap[0])\n', '\n\nfrom heapq import heappush, heappop, heapify\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, (-num, num))\n\nwhile len(heap) > 1:\n    a = heappop(heap)[1]\n    b = heappop(heap)[1]\n    heappush(heap, (-(a + b) / 2, (a + b) / 2))\n\nprint(heap[0])\n', '\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(sys.stdin.readline())\nheap = []\nfor _ in range(N):\n    num = int(sys.stdin.readline())\n    heappush(heap, num)\n\nwhile len(heap) > 1:\n    a = heappop(heap)\n    b = heappop(heap)\n    heappush(heap, (a + b) / 2)\n\nprint(heap[0])\n']
2022-04-24 00:49:45.540796 size on output set 5
