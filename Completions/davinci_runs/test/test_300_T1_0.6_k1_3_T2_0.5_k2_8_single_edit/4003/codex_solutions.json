["\n\nclass Solution:\n    def __init__(self):\n        self.N = int(input())\n        self.A = [int(x) for x in input().split()]\n\n    def solve(self):\n        n = self.N\n        a = self.A\n        dp_l = [0] * n\n        dp_r = [0] * n\n        dp_l[0] = 1\n        dp_r[n - 1] = 1\n        for i in range(1, n):\n            if a[i] > a[i - 1]:\n                dp_l[i] = dp_l[i - 1] + 1\n            else:\n                dp_l[i] = 1\n        for i in range(n - 2, -1, -1):\n            if a[i] < a[i + 1]:\n                dp_r[i] = dp_r[i + 1] + 1\n            else:\n                dp_r[i] = 1\n        print(max([dp_l[i] + dp_r[i] - 1 for i in range(n)]))\n\n    def solve2(self):\n        n = self.N\n        a = self.A\n        dp_l = [0] * n\n        dp_r = [0] * n\n        dp_l[0] = 1\n        dp_r[n - 1] = 1\n        for i in range(1, n):\n            if a[i] > a[i - 1]:\n                dp_l[i] = dp_l[i - 1] + 1\n            else:\n                dp_l[i] = 1\n        for i in range(n - 2, -1, -1):\n            if a[i] < a[i + 1]:\n                dp_r[i] = dp_r[i + 1] + 1\n            else:\n                dp_r[i] = 1\n        l, r = 0, 0\n        ans = 0\n        for i in range(n):\n            if dp_l[i] + dp_r[i] - 1 > ans:\n                ans = dp_l[i] + dp_r[i] - 1\n                l = i\n                r = i\n        print(ans)\n        ans = \"\"\n        for i in range(l):\n            ans += 'L'\n        for i in range(r + 1, n):\n            ans += 'R'\n        print(ans)\n\n    def solve3(self):\n        n = self.N\n        a = self.A\n        dp_l = [0] * n\n        dp_r = [0] * n\n        dp_l[0] = 1\n        dp_r[n - 1] = 1\n        for i in range(1, n):\n            if a[i] > a[i - 1]:\n                dp_l[i] = dp_l[i - 1] + 1\n            else:\n                dp_l[i] = 1\n        for i in range(n - 2, -1, -1):\n            if a[i] < a[i + 1]:\n                dp_r[i] = dp_r[i + 1] + 1\n            else:\n                dp_r[i] = 1\n        l, r = 0, 0\n        ans = 0\n        for i in range(n):\n            if dp_l[i] + dp_r[i] - 1 > ans:\n                ans = dp_l[i] + dp_r[i] - 1\n                l = i\n                r = i\n        print(ans)\n        ans = \"\"\n        for i in range(l):\n            ans += 'L'\n        for i in range(r + 1, n):\n            ans += 'R'\n        print(ans)\n\n\nSolution().solve3()", "\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ndef solve(a):\n    n = len(a)\n    dp = [[0, 0] for _ in range(n)]\n    dp[0][0] = 1\n    dp[0][1] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i][0] = max(dp[i - 1][0] + 1, dp[i - 1][1] + 1)\n            dp[i][1] = dp[i - 1][1] + 1\n        else:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][0] + 1, dp[i - 1][1] + 1)\n    return max(dp[n - 1][0], dp[n - 1][1])\n\nprint(solve(a))", "\n\n#-----SOLUTION-----\n\n#N = int(input())\n#A = list(map(int, input().split()))\n\nN = 5\nA = [1, 2, 4, 3, 2]\n\ndef solve(N, A):\n    L = [None] * N\n    R = [None] * N\n    L[0] = 1\n    R[N-1] = 1\n    for i in range(1, N):\n        if A[i] > A[i-1]:\n            L[i] = L[i-1] + 1\n        else:\n            L[i] = 1\n    for i in range(N-2, -1, -1):\n        if A[i] < A[i+1]:\n            R[i] = R[i+1] + 1\n        else:\n            R[i] = 1\n    \n    \n    #print(L, R)\n    \n    best_len = 0\n    best_index = None\n    for i in range(N):\n        if (L[i] + R[i] - 1) > best_len:\n            best_len = L[i] + R[i] - 1\n            best_index = i\n            \n    #print(best_len, best_index)\n    \n    moves = []\n    for i in range(best_index - L[best_index] + 1, best_index + 1):\n        moves.append('L')\n    for i in range(best_index + 1, best_index + R[best_index]):\n        moves.append('R')\n        \n    print(best_len)\n    print(''.join(moves))\n    \nsolve(N, A)"]