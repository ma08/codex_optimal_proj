2022-04-24 01:15:06.608568 num operations 1
2022-04-24 01:15:06.608588 size on input set 1
2022-04-24 01:15:06.608745 using api key jaanu
2022-04-24 01:15:21.392691 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2020/05/11\n# @Author  : Edrain\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\nif N % K == 0:\n    print(0)\nelse:\n    print(N % K)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(min(N % K, abs(N % K - K)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650762906,
  "object": "edit"
}
2022-04-24 01:15:21.393107 fix syntax errors 8 ["import sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2020/05/11\n# @Author  : Edrain\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport sys\n\nN, K = map(int, sys.stdin.readline().split())\nif N % K == 0:\n    print(0)\nelse:\n    print(N % K)\n', "\n\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(min(N % K, abs(N % K - K)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    print(N % K)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    if N % K == 0:\n        print(0)\n    else:\n        print(N % K)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 01:15:21.393161 size on output set 6
2022-04-24 01:15:21.393171 num operations 1
2022-04-24 01:15:21.393176 size on input set 1
2022-04-24 01:15:21.393309 using api key jaanu
2022-04-24 01:15:38.318001 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nN, K = map(int, stdin.readline().split())\n\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\nelse:\n    print(N % K)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\n# Read from standard input.\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin\n"
    },
    {
      "index": 5,
      "text": "\nimport math\nfrom sys import stdin\n\n# Read from standard input\nN, A, B = map(int, stdin.readline().split())\n\n# if N%(A+B) == 0:\n#     print(math.floor(N/(A+B))*A)\n# elif N%(A+B) >= A:\n#     print(math.floor(N/(A+B))*A + A)\n# else:\n#     print(math.floor(N/(A+B))*A + N%(A+B))\n\nprint(min(A, B) * math.floor(N/(A+B)) + min(N%(A+B), A))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n# Read from standard input\nN, K = map(int, sys.stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0, so the minimum value is 0\nif N % 2 == 0 and K % 2 == 1: print(0)\n# Else, the minimum value is N modulo K, so the minimum value is N % K\nelse:\n    print(N % K) \n"
    }
  ],
  "created": 1650762921,
  "object": "edit"
}
2022-04-24 01:15:38.318306 fix syntax errors 8 ['\n\nfrom sys import stdin\n\nN, K = map(int, stdin.readline().split())\n\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\nelse:\n    print(N % K)\n', '\n\nfrom sys import stdin\n\n# Read from standard input.\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n', '\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n', '#!/usr/bin/env python3\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n', '\n\nfrom sys import stdin\n', '\nimport math\nfrom sys import stdin\n\n# Read from standard input\nN, A, B = map(int, stdin.readline().split())\n\n# if N%(A+B) == 0:\n#     print(math.floor(N/(A+B))*A)\n# elif N%(A+B) >= A:\n#     print(math.floor(N/(A+B))*A + A)\n# else:\n#     print(math.floor(N/(A+B))*A + N%(A+B))\n\nprint(min(A, B) * math.floor(N/(A+B)) + min(N%(A+B), A))\n', '\nimport sys\n\n# Read from standard input\nN, K = map(int, sys.stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0\nif N % 2 == 0 and K % 2 == 1:\n    print(0)\n# Else, the minimum value is N modulo K\nelse:\n    print(N % K)\n', '\n\nfrom sys import stdin\n\n# Read from standard input\nN, K = map(int, stdin.readline().split())\n\n# If N is even and K is odd, Aoki can always make N=0, so the minimum value is 0\nif N % 2 == 0 and K % 2 == 1: print(0)\n# Else, the minimum value is N modulo K, so the minimum value is N % K\nelse:\n    print(N % K) \n']
2022-04-24 01:15:38.318423 size on output set 8
2022-04-24 01:15:38.318437 num operations 1
2022-04-24 01:15:38.318458 size on input set 1
2022-04-24 01:15:38.318634 using api key sunu
2022-04-24 01:15:56.164445 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 2,
      "text": "\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 3,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\ninput = sys.stdin.readline\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 4,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 5,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 6,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    },
    {
      "index": 7,
      "text": "\n\n\"\"\"\n-----TODO-----\n-\n\"\"\"\n\n\"\"\"\n-----Solution-----\n\"\"\"\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split()) # input() is a faster input method.\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n"
    }
  ],
  "created": 1650762938,
  "object": "edit"
}
2022-04-24 01:15:56.164756 fix syntax errors 8 ['\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\ninput = sys.stdin.readline\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n# Your code goes here.\n\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\nN, K = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN = map(int, input().split())\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n', '\n\n"""\n-----TODO-----\n-\n"""\n\n"""\n-----Solution-----\n"""\n\n# This code is for the purpose of importing faster input/output methods.\nimport atexit\nimport io\nimport sys\n\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).next\n_OUTPUT_BUFFER = io.BytesIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# Your code goes here.\n\nN, K = map(int, input().split()) # input() is a faster input method.\n\nif N % K == 0:\n    print(0)\nelse:\n    print(min(N % K, K - N % K))\n']
2022-04-24 01:15:56.164877 size on output set 7
