["import sys\n\n\ndef get_input() -> list:\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n: int) -> int:\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results: list):\n    for result in results:\n        print(result)\n\n\n\ndef main() -> None:\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    return n\n\n\ndef print_result(results):\n    for i, result in enumerate(results):\n        print(\"Case #{}: {}\".format(i + 1, result))\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n - 1) // 2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))\n", "\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    return 0\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0].strip())\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1].strip())\n        cases.append(case)\n    return cases\n\n\ndef solve(case):\n    return 0\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\nsys.setrecursionlimit(10**6)\n\n\ndef main():\n    t = int(input())\n\n    for _ in range(t):\n        n = int(input())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\nT=int(input())\nfor i in range(T):\n\tn=int(input())\n\tprint(max(0,(n+1)//2))\n", "\nimport sys\n\ndef get_input():\n    input_lines = sys.stdin.readlines()\n    num_cases = int(input_lines[0])\n    cases = []\n    for i in range(num_cases):\n        case = int(input_lines[i + 1])\n        cases.append(case)\n    return cases\n\n\ndef solve(n):\n    if n < 4:\n        return 0\n    if n % 2 == 1:\n        return int(n / 2)\n    return int(n / 2 - 1)\n\n\ndef print_result(results):\n    for result in results:\n        print(result)\n\n\ndef main():\n    cases = get_input()\n    results = []\n    for case in cases:\n        result = solve(case)\n        results.append(result)\n    print_result(results)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2))\n", "import sys\nsys.setrecursionlimit(10**6)\n\ndef main():\n    t = int(input().strip())\n\n    for _ in range(t):\n        n = int(input().strip())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input()) \n\tprint(max(0, (n + 1) // 2))\n", "import sys\n\ndef main():\n    t = int(input())\n\n    for _ in range(t):\n        n = int(input())\n\n        ans = (n-1)//2\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nT = int(input())\nfor _ in range(T):\n\tn = int(input())\n\tprint(max(0, (n + 1) // 2)) \n"]