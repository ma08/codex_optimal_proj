["\nn, m = map(int, input().split())\na = [0] * m\nfor i in range(m):\n    a[i] = int(input())\n\ndp = [0] * (n + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, n + 1):\n    if i in a:\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007\nprint(dp[n])\n", "import sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(N+1)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\n\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i+1-th step is broken\n# a[i] = 0 : i+1-th step is not broken\na = [1 if a[i] in a[i+1] else 0 for i in range(M)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\nn, m = map(int, input().split())\na = [0] * m\nfor i in range(m):\n    a[i] = int(input())\n\ndp = [0] * (n + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, n + 1):\n    if i in set(a):\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007\nprint(dp[n])\n", "\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(N)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\n# coding: utf-8\n\n    # N \u6bb5\u306e\u968e\u6bb5\u3092\u4e0a\u308b\u3068\u304d\u30011 \u6bb5\u306b\u3064\u304d 1 \u6b69\u304b 2 \u6b69\u304b\u3067\u4e0a\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    # \u3053\u306e\u3068\u304d\u3001\u4f55\u901a\u308a\u306e\u9078\u3073\u65b9\u304c\u3042\u308b\u304b\u6c42\u3081\u3088\u3002\n    # \u305f\u3060\u3057\u3001\u968e\u6bb5\u306e\u4e0a\u308a\u65b9\u306f\u3001\u968e\u6bb5\u306e\u9014\u4e2d\u3067\u3082\u6bb5\u3092\u623b\u3063\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n    # \u307e\u305f\u3001\u968e\u6bb5\u3092\u4e0a\u308b\u3068\u304d\u306b\u306f\u3001\u3069\u306e\u6bb5\u3092\u4f7f\u3046\u304b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n    # \u3064\u307e\u308a\u30011 \u6b69\u3067 2 \u6bb5\u76ee\u306b\u4e0a\u308b\u3068\u304d\u306f\u30011 \u6bb5\u76ee\u3092\u4f7f\u3046\u3082\u306e\u3068\u3059\u308b\u3002\ndef main():\n    N, M = [int(i) for i in input().split()]\n    dp = [0] * (N + 2)\n\n    # \u968e\u6bb5\u306e\u9014\u4e2d\u3067\u3082\u6bb5\u3092\u623b\u3063\u3066\u306f\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u300c\u623b\u308c\u306a\u3044\u6bb5\u300d\u3092\u8a2d\u5b9a\u3059\u308b\n    a = set()\n    for i in range(M):\n        ai = int(input())  # \u623b\u308c\u306a\u3044\u6bb5\n        a.add(ai)  # \u96c6\u5408\u306b\u8ffd\u52a0\n\n    # \u521d\u671f\u5316\n    dp[0] = 1  # 0 \u6bb5\u76ee\u306f 1 \u901a\u308a\n    if 1 not in a:\n        dp[1] = 1\n\n    # dp[i] \u2192 dp[i + 1] \u306e\u66f4\u65b0\n    for i in range(N):\n        if i + 1 not in a:\n            dp[i + 1] = (dp[i + 1] + dp[i]) % (10 ** 9 + 7)\n        if i + 2 not in a:\n            dp[i + 2] = (dp[i + 2] + dp[i]) % (10 ** 9 + 7)\n\n    print(dp[N])\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    N, M = [int(i) for i in input().split()]\n    dp = [0] * (N + 1)\n\n    # \u30c0\u30e1\u306a\u6bb5\n    a = set()\n    for i in range(M):\n        ai = int(input())\n        a.add(ai)\n\n    # \u521d\u671f\u5316\n    dp[0] = 1\n    if 1 not in a:\n        dp[1] = 1\n\n    # dp[i] \u2192 dp[i + 1] \u306e\u66f4\u65b0\n    for i in range(N):\n        if i + 1 not in a:\n            dp[i + 1] = (dp[i + 1] + dp[i]) % (10 ** 9 + 7)\n        if i + 2 not in a:\n            dp[i + 2] = (dp[i + 2] + dp[i]) % (10 ** 9 + 7)\n\n    print(dp[N])\n\n\nif __name__ == '__main__':\n    main()\n", "\nn, m = map(int, input().split())\na = [0] * m\nfor i in range(m):\n    a[i] = int(input())\n\ndp = [0] * (n + 1)\ndp[0] = 1\ndp[1] = 1\nfor i in range(2, n + 1):\n    if i in a:\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007\n\nprint(dp[n])\n", "\n\nn, m = map(int, input().split())\na = [0] * m\nfor i in range(m):\n    a[i] = int(input())\n\ndp = [0] * (n + 1)\ndp[0] = 1\nfor i in range(1, n + 1):\n    if i in a:\n        dp[i] = 0\n    else:\n        dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007\nprint(dp[n])\n", "\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(N+1)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(M)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = [0] * m\n    for i in range(m):\n        a[i] = int(input())\n\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, n + 1):\n        if i in a:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007\n    print(dp[n])\n\nif __name__ == \"__main__\":\n    main()\n", "\n \nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(M)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\ndef main():\n    N, M = [int(i) for i in input().split()]\n    dp = [0] * (N + 1)\n\n    # \u30c0\u30e1\u306a\u6bb5\n    a = set()\n    for i in range(M):\n        ai = int(input())\n        a.add(ai)\n\n    # \u521d\u671f\u5316\n    dp[0] = 1\n    if 1 not in a:\n        dp[1] = 1\n\n    # dp[i] \u2192 dp[i + 1] \u306e\u66f4\u65b0\n    for i in range(N):\n        if i + 1 not in a:\n            dp[i + 1] = (dp[i + 1] + dp[i]) % (10 ** 9 + 7)\n        if i + 2 not in a:\n            dp[i + 2] = (dp[i + 2] + dp[i]) % (10 ** 9 + 7)\n\n    print(dp[N])\n\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\n\ndef main():\n    N, M = [int(i) for i in input().split()]\n    dp = [0] * (N + 1)\n\n    # \u907f\u3051\u308b\u6bb5\n    a = set()\n    for i in range(M):\n        ai = int(input())\n        a.add(ai)\n\n    # \u521d\u671f\u5316\n    dp[0] = 1\n    if 1 not in a:\n        dp[1] = 1\n\n    # dp[i] \u2192 dp[i + 1] \u306e\u66f4\u65b0\n    for i in range(N):\n        if i + 1 not in a:\n            dp[i + 1] = (dp[i + 1] + dp[i]) % (10 ** 9 + 7)\n        if i + 2 not in a:\n            dp[i + 2] = (dp[i + 2] + dp[i]) % (10 ** 9 + 7)\n\n    print(dp[N])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(N)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n", "\n\nimport sys\n\nN, M = [int(x) for x in sys.stdin.readline().split()]\na = []\nfor i in range(M):\n    a.append(int(sys.stdin.readline()))\n\n# a[i] : i-th step is broken\n# a[i] = 1 : i-th step is broken\n# a[i] = 0 : i-th step is not broken\na = [1 if a[i] in a else 0 for i in range(N+1)]\n\n# dp[i] : i-th step can be reached by dp[i] ways\ndp = [0 for i in range(N+1)]\ndp[0] = 1\ndp[1] = 1 if a[0] == 0 else 0\n\nfor i in range(2, N+1):\n    # if i-th step is broken\n    if a[i-1] == 1:\n        dp[i] = 0\n    else:\n        # i-th step is not broken\n        # dp[i] = dp[i-1] + dp[i-2]\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n\nprint(dp[N])\n"]