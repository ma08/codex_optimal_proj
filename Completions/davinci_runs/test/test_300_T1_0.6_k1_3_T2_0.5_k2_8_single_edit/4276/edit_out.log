2022-04-24 00:55:52.944912 num operations 1
2022-04-24 00:55:52.944934 size on input set 1
2022-04-24 00:55:52.945068 using api key soukgp
2022-04-24 00:56:13.239218 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 1
    },
    {
      "index": 2,
      "text": "n, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\tsys.exit()\nprint(\"TLE\")\n"
    },
    {
      "index": 4,
      "text": "# coding: utf-8\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"
    },
    {
      "index": 5,
      "text": "# coding: utf-8\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"
    },
    {
      "index": 6,
      "text": "#\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint(\"TLE\")\n"
    },
    {
      "index": 7,
      "text": "\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n    c.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n    if i[1] <= t:\n        print(i[0])\n        exit()\nprint(\"TLE\")\n"
    }
  ],
  "created": 1650761753,
  "object": "edit"
}
2022-04-24 00:56:13.239526 NO RESULT
2022-04-24 00:56:13.239535 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 1
}
2022-04-24 00:56:13.239584 fix syntax errors 7 ['\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint("TLE")\n', 'n, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint("TLE")\n', 'import sys\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\tsys.exit()\nprint("TLE")\n', '# coding: utf-8\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint("TLE")\n', '# coding: utf-8\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint("TLE")\n', '#\n\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n\tc.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n\tif i[1] <= t:\n\t\tprint(i[0])\n\t\texit()\nprint("TLE")\n', '\nn, t = map(int, input().split())\n\nc = []\nfor i in range(n):\n    c.append(list(map(int, input().split())))\n\nc.sort(key=lambda x:x[0])\nfor i in c:\n    if i[1] <= t:\n        print(i[0])\n        exit()\nprint("TLE")\n']
2022-04-24 00:56:13.239633 size on output set 6
2022-04-24 00:56:13.239644 num operations 1
2022-04-24 00:56:13.239650 size on input set 1
2022-04-24 00:56:13.239778 using api key kouti
2022-04-24 00:56:38.483721 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 1,
      "text": "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 2,
      "text": "\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print(\"TLE\")\n# else:\n#     print(min(d.keys()))\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print(\"TLE\")\n# else:\n#     d = sorted(d.items(), key=lambda x: x[0])\n#     print(d[0][0])\n#\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 3,
      "text": "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 4,
      "text": "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 5,
      "text": "\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print(\"TLE\")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n"
    },
    {
      "index": 6,
      "text": "\n\n# N, T = map(int, input().split())\n# d = {i: 10**10 for i in range(1, N+1)}\n# for _ in range(N):\n#     i, t = map(int, input().split())\n#     d[i] = t\n# print(min(d, key=lambda x: d[x]))\n\nN, T = map(int, input().split())\nd = {i: 10**10 for i in range(1, N+1)}\nfor _ in range(N):\n    i, t = map(int, input().split())\n    d[i] = t\nif min(d.values()) > T:\n    print(\"TLE\")\nelse:\n    print(min(d, key=lambda x: d[x]))\n"
    },
    {
      "index": 7,
      "text": "\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c not in d.keys():\n            d[c] = t\n\nprint(min(d.keys()))\n"
    }
  ],
  "created": 1650761773,
  "object": "edit"
}
2022-04-24 00:56:38.484080 fix syntax errors 8 ['\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print("TLE")\n# else:\n#     print(min(d.keys()))\n\n# N, T = map(int, input().split())\n# d = {}\n# for i in range(N):\n#     c, t = map(int, input().split())\n#     if t <= T:\n#         if c in d.keys():\n#             d[c] = min(d[c], t)\n#         else:\n#             d[c] = t\n# if len(d) == 0:\n#     print("TLE")\n# else:\n#     d = sorted(d.items(), key=lambda x: x[0])\n#     print(d[0][0])\n#\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c in d.keys():\n            d[c] = min(d[c], t)\n        else:\n            d[c] = t\nif len(d) == 0:\n    print("TLE")\nelse:\n    d = sorted(d.items(), key=lambda x: x[0])\n    print(d[0][0])\n', '\n\n# N, T = map(int, input().split())\n# d = {i: 10**10 for i in range(1, N+1)}\n# for _ in range(N):\n#     i, t = map(int, input().split())\n#     d[i] = t\n# print(min(d, key=lambda x: d[x]))\n\nN, T = map(int, input().split())\nd = {i: 10**10 for i in range(1, N+1)}\nfor _ in range(N):\n    i, t = map(int, input().split())\n    d[i] = t\nif min(d.values()) > T:\n    print("TLE")\nelse:\n    print(min(d, key=lambda x: d[x]))\n', '\n\nN, T = map(int, input().split())\nd = {}\nfor i in range(N):\n    c, t = map(int, input().split())\n    if t <= T:\n        if c not in d.keys():\n            d[c] = t\n\nprint(min(d.keys()))\n']
2022-04-24 00:56:38.484130 size on output set 5
2022-04-24 00:56:38.484141 num operations 1
2022-04-24 00:56:38.484147 size on input set 1
2022-04-24 00:56:38.484276 using api key soukgp
2022-04-24 00:56:54.850268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    N, T = map(int, sys.stdin.readline().split())\n    routes = list()\n    for i in range(N):\n        c, t = map(int, sys.stdin.readline().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nN, T = map(int, input().split())\nroutes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    routes.append((c, t))\nroutes.sort()\nfor c, t in routes:\n    if t <= T:\n        print(c)\n        sys.exit()\nprint('TLE')\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650761798,
  "object": "edit"
}
2022-04-24 00:56:54.850515 fix syntax errors 8 ["import sys\n\n\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, T = map(int, sys.stdin.readline().split())\n    routes = list()\n    for i in range(N):\n        c, t = map(int, sys.stdin.readline().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nN, T = map(int, input().split())\nroutes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    routes.append((c, t))\nroutes.sort()\nfor c, t in routes:\n    if t <= T:\n        print(c)\n        sys.exit()\nprint('TLE')\n", "import sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, T = map(int, input().split())\n    routes = []\n    for i in range(N):\n        c, t = map(int, input().split())\n        routes.append((c, t))\n    routes.sort()\n    for c, t in routes:\n        if t <= T:\n            print(c)\n            return\n    print('TLE')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:56:54.850636 size on output set 7
