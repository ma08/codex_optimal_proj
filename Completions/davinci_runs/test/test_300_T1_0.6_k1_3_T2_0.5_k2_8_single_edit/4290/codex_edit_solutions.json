["\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\n# coding=utf-8\n\nn, m = map(int, raw_input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) / 2))\nelse:\n    print(2 ** (n + m))\n", "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 != 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2)) \nelse:\n    print(2 ** (n + m))\n", "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2:\n    print(2 ** (n + m) - 2 ** (n + m) // 2)\nelse:\n    print(2 ** (n + m))\n", "\n\nimport sys\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n*m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n", "\n\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\u3068\u3001\u305d\u306e\u9006\nprint((n*(n-1)//2) + n*m, (m*(m-1)//2) + n*m)\n", "\n\nimport sys\n\ndef solve(n, m):\n    return n * m * 2\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0 and n > 0 and m > 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2) - 1)\nelse:\n    print(2 ** (n + m))\n", "import os\n\nn, m = map(int, input().split())\n\nprint(os.path.join(n, m))\n", "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"]