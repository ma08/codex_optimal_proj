2022-04-24 01:10:26.087553 num operations 1
2022-04-24 01:10:26.087572 size on input set 1
2022-04-24 01:10:26.087699 using api key soukgp
2022-04-24 01:10:40.307294 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n*m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef solve(n, m):\n    return n * m * 2\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650762626,
  "object": "edit"
}
2022-04-24 01:10:40.307760 fix syntax errors 8 ["\nimport sys\n\ndef solve(n, m):\n    return n*m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(n, m):\n    return n * m * 2\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n,m = map(int, lines[0].strip().split())\n    print(solve(n,m))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(n, m):\n    return n * m\n\ndef main():\n    lines = sys.stdin.readlines()\n    n, m = map(int, lines[0].strip().split())\n    print(solve(n, m))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 01:10:40.307819 size on output set 6
2022-04-24 01:10:40.307833 num operations 1
2022-04-24 01:10:40.307840 size on input set 1
2022-04-24 01:10:40.308015 using api key kouti
2022-04-24 01:10:55.172084 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2:\n    print(2 ** (n + m) - 2 ** (n + m) // 2)\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0 and n > 0 and m > 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2) - 1)\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 2,
      "text": "\n# coding=utf-8\n\nn, m = map(int, raw_input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) / 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 4,
      "text": "import os\n\nn, m = map(int, input().split())\n\nprint(os.path.join(n, m))\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n"
    },
    {
      "index": 7,
      "text": "\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 != 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2)) \nelse:\n    print(2 ** (n + m))\n"
    }
  ],
  "created": 1650762640,
  "object": "edit"
}
2022-04-24 01:10:55.172353 fix syntax errors 8 ['\n\nn, m = map(int, input().split())\n\nif (n + m) % 2:\n    print(2 ** (n + m) - 2 ** (n + m) // 2)\nelse:\n    print(2 ** (n + m))\n', '\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0 and n > 0 and m > 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2) - 1)\nelse:\n    print(2 ** (n + m))\n', '\n# coding=utf-8\n\nn, m = map(int, raw_input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) / 2))\nelse:\n    print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', 'import os\n\nn, m = map(int, input().split())\n\nprint(os.path.join(n, m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\nn, m = map(int, input().split())\n\nif (n + m) % 2 == 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2))\nelse:\n    print(2 ** (n + m))\n', '\n\nn, m = map(int, input().split())\n\nif (n + m) % 2 != 0:\n    print(2 ** (n + m) - 2 ** ((n + m) // 2)) \nelse:\n    print(2 ** (n + m))\n']
2022-04-24 01:10:55.172414 size on output set 6
2022-04-24 01:10:55.172426 num operations 1
2022-04-24 01:10:55.172431 size on input set 1
2022-04-24 01:10:55.172575 using api key sunu
2022-04-24 01:11:10.958108 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 4,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 5,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\nprint((n*(n-1)//2) + n*m)\n"
    },
    {
      "index": 7,
      "text": "\n\nn, m = map(int, input().split())\n\n# \u5076\u6570\u30922\u500b\u9078\u3073\u3001\u5947\u6570\u30921\u500b\u9078\u3076\u7d44\u307f\u5408\u308f\u305b\u306e\u901a\u308a\u6570\u3068\u3001\u305d\u306e\u9006\nprint((n*(n-1)//2) + n*m, (m*(m-1)//2) + n*m)\n"
    }
  ],
  "created": 1650762655,
  "object": "edit"
}
2022-04-24 01:11:10.958445 fix syntax errors 8 ['\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数\nprint((n*(n-1)//2) + n*m)\n', '\n\nn, m = map(int, input().split())\n\n# 偶数を2個選び、奇数を1個選ぶ組み合わせの通り数と、その逆\nprint((n*(n-1)//2) + n*m, (m*(m-1)//2) + n*m)\n']
2022-04-24 01:11:10.958494 size on output set 2
