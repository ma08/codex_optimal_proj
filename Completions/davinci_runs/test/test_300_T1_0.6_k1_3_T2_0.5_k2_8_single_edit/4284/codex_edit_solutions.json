["\n\nimport sys\n\nsys.stdin = open('input.txt')\n\n\ndef play(k,n,a,b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k//b\n    if k < a+b:\n        return 1\n    return (k-a)//b + 1\n\nq = int(input())\nfor _ in range(q):\n    k,n,a,b = map(int,input().split())\n    print(min(play(k,n,a,b),n))\n", "#!/usr/bin/python\nimport sys\nsys.stdin = open('input.txt')\n\ndef play(k,n,a,b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k//b\n    if k < a+b:\n        return 1\n    return (k-a)//b + 1\n\nq = int(input())\nfor _ in range(q):\n    k,n,a,b = map(int,input().split())\n    print(min(play(k,n,a,b),n))\n", "\n\n#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      v.osipov\n#\n# Created:     16/10/2018\n# Copyright:   (c) v.osipov 2018\nimport sys\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\ndef main():\n    print('\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!')\n\n    sys.exit()\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n# sys.stdin = open('input.txt')\n\n\ndef play(k, n, a, b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k // b\n    if k < a+b:\n        return 1\n    return (k - a) // b + 1\n\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(min(play(k, n, a, b), n))\n", "\n\n#-------------------------------------------------------------------------------\n# Name:        file\n# Purpose:     \u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u0444\u0430\u0439\u043b\u0430\n#\n# Author:      v.osipov (v.osipov@yandex.ru)\n#\n# Created:     16/10/2018\n# Copyright:   (c) v.osipov 2018-2019\n\n\nimport os\n\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\ndef main():\n\ndef open_file(filename, mode):\n    \"\"\"\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\"\"\"\n    try:\n        f = open(filename, mode)\n    except IOError as e:\n        print(\"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0444\u0430\u0439\u043b\", filename, \"\u0420\u0435\u0436\u0438\u043c\", mode)\n        print(e)\n        return None\n    else:\n        return f\n\n\ndef read_file(f):\n    \"\"\"\u0427\u0442\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\"\"\"\n    try:\n        return f.read()\n    except IOError as e:\n        print(\"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0444\u0430\u0439\u043b\")\n        print(e)\n        return None\n\n\ndef close_file(f):\n    \"\"\"\u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\"\"\"\n    try:\n        f.close()\n    except IOError as e:\n        print(\"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0444\u0430\u0439\u043b\")\n        print(e)\n        return None\n\n\ndef test_file(filename):\n    \"\"\"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430\"\"\"\n    f = open_file(filename, \"r\")\n    if f is not None:\n        data = read_file(f)\n        if data is not None:\n            print(data)\n        close_file(f)\n\n\ndef test_file_with(filename):\n    \"\"\"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 with\"\"\"\n    with open(filename, \"r\") as f:\n        for line in f:\n            print(line, end=\"\")\n\n\n    pass\n\n    test_file(\"data.txt\")\n    test_file_with(\"data.txt\")\nif __name__ == '__main__':\n    main()\n", "\n\n# import sys\n\n# q = int(input())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().rstrip().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n", "\n\n#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      v.osipov\n#\n# Created:     16/10/2018\n# Copyright:   (c) v.osipov 2018\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\ndef main():\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nq = int(input())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n", "\nimport sys\n\nq = int(sys.stdin.readline().rstrip())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().rstrip().split())\n\n    print(max(0, k - n * b))\n", "\n\n\n\ndef main():\n\n    pass\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3.6\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nq = int(sys.stdin.readline().rstrip())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().rstrip().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n", "import sys\n\nsys.stdin = open('input.txt')\n\ndef play(k,n,a,b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k//b\n    if k < a+b:\n        return 1\n    return (k-a)//b + 1\n\nq = int(input())\nfor _ in range(q):\n    k,n,a,b = map(int,input().split())\n    print(min(play(k,n,a,b),n))\n", "import sys\nsys.stdin = open('input.txt')\ndef play(k,n,a,b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k//b\n    if k < a+b:\n        return 1\n    return (k-a)//b + 1\nq = int(input())\nfor _ in range(q):\n    k,n,a,b = map(int,input().split())\n    print(min(play(k,n,a,b),n))\n", "\n\nimport argparse\n\nparser = argparse.ArgumentParser(description='File processing')\nparser.add_argument('-f', '--file', help='file name', required=True)\nargs = parser.parse_args()\n\nwith open(args.file) as f:\n    lines = f.readlines()\n\nfor line in lines:\n    print(line.split())\n", "\nimport sys\n\nsys.stdin = open('input.txt')\n\ndef play(k,n,a,b):\n    if k < a and k < b:\n        return -1\n    if k < a:\n        return k//b\n    if k < a+b:\n        return 1\n    return (k-a)//b + 1\n\nq = int(input())\nfor _ in range(q):\n    k,n,a,b = map(int,input().split())\n    print(min(play(k,n,a,b),n))\n", "\nprint(\"Hello, world!\")\n", "\nimport sys\n\nq = int(input())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().rstrip().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n", "\n\n#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      v.osipov\n#\n# Created:     16/10/2018\n\n\n# Copyright:   (c) v.osipov 2018\n\n\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nq = int(input())\n\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n", "import sys\n\nq = int(input())\n\nfor _ in range(q):\n    k, n, a, b = map(int, sys.stdin.readline().rstrip().split())\n\n    if n * b > k:\n        print(-1)\n    else:\n        print(k - n * b)\n"]