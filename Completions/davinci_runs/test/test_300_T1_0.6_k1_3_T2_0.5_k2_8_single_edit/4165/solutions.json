["_n = input()\nlines = list(map(int, input().split()))\nlines.sort()\nlongest = lines.pop()\nif sum(lines) > longest:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nif l[-1]<sum(l[:-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "N = int(input())\nl = list(map(int,input().split()))\nsum = 0\nflg = True\n\nfor i in range(N):\n    sum = sum + l[i]\n    \nfor j in range(N):\n    if sum - l[j] <= l[j]:\n        flg = False\n        break\n            \nif flg == True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "polygon_side = int(input())\nside_length = list(map(int, input().split()))\nif max(side_length) * 2 < sum(side_length):\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nl = list(map(int,input().split()))\n\nall_l = sum(l)\nmax_l = max(l)\n\ncom = all_l - max_l\n\nif(com > max_l):\n    print('Yes')\nelse:\n    print('No')\n", "N = input()\nL = sorted(list(map(int, input().split())))\nprint('No' if max(L) >= sum(L[:-1]) else 'Yes')", "N = input()\nnum = list(map(int, input().split(' ')))\nmax_num = max(num)\nnum.remove(max_num)\nnum_sum = 0\nfor i in num:\n    num_sum += i\nif max_num < num_sum:\n    print('Yes')\nelse:\n    print('No')", "N,*L=map(int,open(0).read().split());print('NYoe s'[2*max(L)<sum(L)::2])", "N = int(input())\nL = list(map(int,input().split()))\n\nL = sorted(L)\n\nif sum(L) - L[-1] > L[-1]:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nL = list(map(int,input().split()))\n\nif max(L) < (sum(L) - max(L)):\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nS = map(int,input().split())\nlength_list = list(S)\nlength_list.sort(reverse=True)\n# print(length_list)\nmax_length = length_list.pop(0)\n# print(max_length)\n\nif max_length < sum(length_list):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    L = list(map(int, input().split()))\n\n    if max(L) < sum(L) - max(L):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nsum = 0\nfor i in range(n-1):\n  sum += l[i]\nif l[-1] < sum:\n  print('Yes')\nelse:\n  print('No')", "n = int(input())\nl = list(map(int, input().split()))\n\ndef answer(n: int, l: list) -> str:\n    if max(l) < (sum(l) - max(l)):\n        return 'Yes'\n    else:\n        return 'No'\n\nprint(answer(n, l))", "n = int(input())\na = list(map(int, input().split()))\nm = 0\nt = 0\nfor i in range(n):\n  m += a[i]\nfor i in range(n):\n  t += 2*a[i] >= m\nif t == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\ndata = list(map(int,input().split()))\n\nmax = 0\nkei = 0\n\nfor i in range(len(data)):\n    kei += data[i]\n    if max < data[i]:\n        max = data[i]\n\nif max < kei - max:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nedge = list(map(int,input().split()))\nif max(edge) < sum(edge)-max(edge):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\nif sum(L[:-1]) > L[-1]:\n  print('Yes')\nelse:\n  print('No')", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nmx = l.pop()\nprint(\"Yes\" if sum(l) > mx else \"No\")", "# list\u3092\u4e26\u3073\u66ff\u3048\u3066if-else\u3067\u6761\u4ef6\u5206\u5c90\n\n\nN = int(input())\nL = list(map(int, input().split()))\n\ndescending_L = sorted(L, reverse=True)\n# print(descending_L)\n\nother_side = sum(descending_L[1:])\n\nif descending_L[0] < other_side:\n    print('Yes')\nelse:\n    print('No')\n", "\nn=input()\nl= list(map(int, input().split()))\n\nif max(l)<sum(l)-max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "N = int(input())\nlen = list(map(int, input().split()))\n\n# \u5b9a\u7406 : \u4e00\u756a\u9577\u3044\u8fba\u304c\u4ed6\u306e N\u22121 \u8fba\u306e\u9577\u3055\u306e\u5408\u8a08\u3088\u308a\u3082\u771f\u306b\u77ed\u3044\u5834\u5408\u306b\u9650\u308a\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059N\u89d2\u5f62\u304c\u63cf\u3051\u308b\u3002\n# \u6761\u4ef6\u3092\u6e80\u305f\u3059N\u89d2\u5f62\u304c\u63cf\u3051\u308b\u306a\u3089 Yes\u3001\u305d\u3046\u3067\u306a\u3044\u306a\u3089 No \u3092\u51fa\u529b\u305b\u3088\u3002\n\nshort_len = sum(len) - max(len)\nresult = 'Yes' if short_len > max(len) else 'No'\nprint(result)", "#https://atcoder.jp/contests/abc117/tasks/abc117_b\nS_list = [input() for i in range(2)]\nN = list(map(int,S_list[0].split()))    \nL_list = list(map(int,S_list[1].split()))\n\nL_max = max(L_list)\nL_sum = sum(L_list) - L_max\nif L_sum - L_max > 0:\n    result =\"Yes\"\nelse:\n    result =\"No\"\nprint(result)\n", "# N\u3068L1\u301cLn\u3092\u6a19\u6e96\u5165\u529b\u3067\u53d7\u3051\u53d6\u308b\na = [input().split() for l in range(2)]\nN = int(a[0][0])\nL = a[1]\n\n# L1\u301cLn\u306e\u548c\u3092\u6c42\u3081\u308b\nsum = 0\nfor i in range(N):\n    sum += int(L[i])\n\n# L1\u301cLn\u306e\u5404\u8fba\u306b\u5bfe\u3057\u3066\u5b9a\u7406\u304c\u6210\u7acb\u3059\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nl_tf = []\nfor i in range(N):\n    if 2 * int(L[i]) >= sum:\n        l_tf.append(1)\n    else:\n        l_tf.append(0)\n\nif all([i == 0 for i in l_tf]):\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nl = list(map(int, input().split()))\n\nprint('Yes' if max(l) < sum(l)-max(l) else 'No')", "N = int(input())\nwidths = list(map(int, input().split()))\n\nNotmax_widths = sum(widths) - max(widths)\nresult = 'Yes' if Notmax_widths > max(widths) else 'No'\nprint(result)", "N = int(input())\nL = list(map(int,input().split()))\n\nlength = sum(L)-max(L)\nif max(L) < length:\n    print('Yes')\nelse:\n    print('No') ", "n = int(input())\nlong = list(map(int,input().split()))\none = max(long)\nans = sum(long) - one\n\nif ans > one :\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\nL = list(map(int,input().split()))\nL_max = max(L)\nif sum(L) - L_max > L_max:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n", "N = input()\ni = list(map(int,input().split()))\n\nif max(i) < sum(i) - max(i):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = int(input())\nL = list(map(int, input().split()))\nsortL = sorted(L)\nprint('Yes' if sortL[-1] < sum(sortL[:-1]) else 'No')", "n = int(input())\nlist01 = input().split()\nlist02 = sorted([int(s) for s in list01])\na = sum(list02) - list02[-1]\nif list02[-1] < a:\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nif sum(l[0:n-1]) > l[n-1]:\n    print('Yes')\nelse:\n    print('No')", "# 117b\n\ndef atc_117b(N: int, Li_input: str) -> str:\n    Li = [int(i) for i in Li_input.split(\" \")]\n    Li = sorted(Li)\n    max_length = Li.pop()\n    if max_length < sum(Li):\n        return \"Yes\"\n    return \"No\"\n\nN_input_value = int(input())\nLi_input_value = input()\nprint((atc_117b(N_input_value, Li_input_value)))\n", "\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nif l[-1]<sum(l[:-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = int(input())\nL = list(map(int,input().split()))\na = max(L)\nL.remove(a)\ns = 0\nfor i in L:\n    s += i\n\nif a < s:\n    print('Yes')\nelse:\n    print('No')", "n=int(input())\nl_list=[int(i) for i in input().split()]\n\nif max(l_list)<sum(l_list)-max(l_list):\n    print(\"Yes\")\n    \nelse:\n    print(\"No\")", "def generate_polygon(length: list) -> str:\n    length.sort()\n    len_max = length.pop()\n    len_sum = sum(length)\n    if len_max < len_sum:\n        return \"Yes\"\n    return \"No\"\n\n\ndef __starting_point():\n    n = int(input())\n    length = list(map(int, input().split()))\n    print((generate_polygon(length)))\n\n__starting_point()", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    n = int(input())\n    l = sorted(Input())\n    x, y = sum(l[:-1]), l[-1]\n    print(\"Yes\" if y < x else \"No\")\n\n\nmain()", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nif l[-1]<sum(l[:-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "# N\u3068L1\u301cLn\u3092\u6a19\u6e96\u5165\u529b\u3067\u53d7\u3051\u53d6\u308b\na = [input().split() for l in range(2)]\nN = int(a[0][0])\nL = a[1]\n\n# L1\u301cLn\u306e\u548c\u3092\u6c42\u3081\u308b\nsum = 0\nfor i in range(N):\n    sum += int(L[i])\n\n# L1\u301cLn\u306e\u5404\u8fba\u306b\u5bfe\u3057\u3066\u5b9a\u7406\u304c\u6210\u7acb\u3059\u308b\u304b\u3092\u78ba\u304b\u3081\u308b\nl_tf = []\nfor i in range(N):\n    if 2 * int(L[i]) >= sum:\n        print('No')\n        break\nelse:\n    print('Yes')", "N = int(input())\nL = sorted(list(map(int,input().split())))\n\nif L[-1] < sum(L[0:N-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N = int(input())\n\np = list(map(int, input().split()))\n\nprint(\"Yes\" if max(p) < sum(p)- max(p) else \"No\")", "n,*l=map(int,open(0).read().split())\nl.sort(reverse=True)\nprint(\"Yes\" if l[0]<sum(l[1:]) else \"No\")", "N = int(input())\nL = list(map(int,input().split()))\n\ntheory = (max(L) < (sum(L) - max(L)))\n\nif theory:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "u = input()\nlength = list(input().split())\nh = [int(i) for i in length]\n\nif max(h) < sum(h)-max(h):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N=int(input())\nL=sorted(list(map(int, input().split())))\n\n#print(L[-1],sum(L[:-1]))\n\nif L[-1]<sum(L[:-1]):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "n = int(input())\nl = list(map(int, input().split()))\nm = max(l)\nl.remove(m)\nprint(('Yes' if m < sum(l) else 'No'))\n", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\n\nprint((\"Yes\" if l[-1]<sum(l[:n-1]) else \"No\"))\n", "num = int(input())\nedges = list(map(int, input().split(' ')))\ncan_draw = 0\nedges.sort(reverse=True)\nif edges[0] < sum(edges[1:]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N=int(input())\nL=list(map(int,input().split()))\nm=max(L)\nL.pop(L.index(max(L)))\nif m<sum(L):\n    print('Yes')\nelse:\n    print('No')", "# B Polygon\nN = int(input())\nL = list(map(int, input().split()))\nmx = L.pop(L.index(max(L)))\nif mx < sum(L):\n    print(\"Yes\")\nelse:\n    print(\"No\")\npass\n", "\n# 117b\n\ndef atc_117b(N: int, Li_input: str) -> str:\n    Li = [int(i) for i in Li_input.split(\" \")]\n    Li = sorted(Li)\n    max_length = Li.pop()\n    if max_length < sum(Li):\n        return \"Yes\"\n    return \"No\"\n\n\nN_input_value = int(input())\nLi_input_value = input()\nprint(atc_117b(N_input_value, Li_input_value))", "n=int(input())\nl=list(map(int, input().split()))\nsum=0\nfor i in range(n):\n  sum+=l[i]\nprint(\"Yes\" if max(l)*2<sum else \"No\")", "N = input()\nL = list(map(int, input().split()))\n\nif max(L) < sum(L) - max(L):\n    print('Yes')\nelse:\n    print('No')\n", "N=int(input())\nL=list(map(int,input().split()))\n\nans = 0\nfor i in range(N):\n\tans += L[i]\nif max(L) < sum(L)-max(L):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "N = int(input())\nL = sorted(list(map(int, input().split())))\nprint(\"Yes\" if L[-1] < sum(L)-L[-1] else \"No\")", "n=int(input())\nl=sorted(list(map(int,input().split())))\nprint(\"Yes\" if l[-1]<sum(l[:-1]) else \"No\")", "N = int(input())\nL = list(map(int, input().split()))\n \nif max(L) < sum(L) - max(L):\n    print('Yes')\n \nelse:\n    print('No')", "n = int(input())\nli = list(map(int, input().split()))\nli.sort()\nsum = 0\nfor a in li:\n  sum += a\nif sum - li[len(li) - 1] > li[len(li) - 1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n\n", "N = int(input())\nL = list(map(int, input().split()))\n\nif max(L) < sum(L) - max(L):\n    answer = 'Yes'\nelse:\n    answer = 'No'\nprint(answer)", "n = int(input())\nli = list(map(int,input().split()))\n\nli.sort()\n\nsu = sum(li)\nif li[n-1] < su - li[n-1]:\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nl = list(map(int, input().split()))\n\nprint('Yes' if max(l) < sum(l)-max(l) else 'No')", "N = int(input())\nL = list(map(int, input().split()))\n\nlength = 0\n\nfor i in range(0, N):\n    length += L[i]\n\nlength -= max(L)\n\nif max(L) < length:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\ndata = list(map(int,input().split()))\n\ndata_2 =(max(data) < (sum(data)-max(data)))\n\nif data_2:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N=int(input())\nL=list(map(int,input().split()))\nans=True\n\nfor i in range(N):\n    sum=0\n    for j in range(N):\n        if i==j:\n            continue\n        else:\n            sum+=L[j]\n    if L[i]>=sum:\n        ans=False\nif ans==True:\n    print('Yes')\nelse:\n    print('No')", "\nN = list(map(int,input().split()))\nside = list(map(int, input().split()))\nlong_side = max(side)\ntotal = 0\nfor i in side:\n    total += i\n\ntotal -= long_side\n\nif long_side < total:\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\nl = list(map(int,input().split()))\n\n# \u4e00\u756a\u9577\u3044\u8fba\u304c\u4ed6\u306eN\u22121\u8fba\u306e\u9577\u3055\u306e\u5408\u8a08\u3088\u308a\u3082\u771f\u306b\u77ed\u3044\u5834\u5408\u306b\u9650\u308a\u3001\u6761\u4ef6\u3092\u6e80\u305f\u3059N\u89d2\u5f62\u304c\u63cf\u3051\u308b\u3002\nif sum(l) - max(l) > max(l):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "N=int(input())\nL=list(map(int,input().split()))\nprint(\"Yes\" if sum(L)>2*max(L) else \"No\")", "n = int(input())\nL = list(map(int,input().split()))\nif sum(L)-max(L) > max(L):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "N = int(input())\nL = list(map(int, input().split()))\n\nm = max(L)\ns = sum(L) - m\n \nif m < s: print('Yes')\nelse: print('No')", "N = int(input())\nL = list(map(int, input().split()))\nlong = max(L)\nother = sum(L) - long\n\nif long < other:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nL = list(map(int, input().split()))\n\nM = max(L)\nm = L.index(M)\ns = sum(L[:m]) + sum(L[m+1:])\n\nif M < s: print('Yes')\nelse: print('No')", "n = int(input())\nl = list(map(int, input().split()))\n\nterms = (max(l) < (sum(l) - max(l)))\n\nif terms:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\na = list(map(int, input().split()))\nedge_list = list(a)\n\nedge_list.sort(reverse=True)\nlongest_edge = edge_list.pop(0)\nleft_sum = 0\n\nfor i in edge_list:\n    left_sum += i\n\nif longest_edge < left_sum:\n    print('Yes')\nelse:\n    print('No')\n", "# import numpy as np\n# import math\n\n# from scipy.special import perm : perm(n, r, exact=True)\n# from scipy.special import comb : comb(n, r, exact=True)\n\n# import itertools\n# for v in itertools.combinations(L, n):M.append(list(v))\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\n\n\"\"\" Definitions  \"\"\"\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n# ============================================================\n\nn = int(input())\nL = list(map(int, input().split()))\n\nm = max(L)\nL.remove(m)\ns = sum(L)\n\nif m < s:\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ntmp = 0\nfor i in range(n-1):\n    tmp += l[i]\n\nif l[-1] < tmp:\n    print('Yes')\nelse:\n    print('No')", "N = int(input())\nN_List = list(map(int,input().split()))\nmaxN = max(N_List)\n\nprint((\"No\",\"Yes\")[(sum(N_List)-maxN)>maxN])", "N = int(input())\nl = list(map(int, input().split()))\n\nmax_l = max(l)\nsum_l = sum(l) - max_l\n\nif sum_l - max_l > 0:\n    print('Yes')\nelse:\n    print('No')\n\n", "input()\nL = list(map(int, input().split()))\nprint(('No', 'Yes')[sum(L) > max(L) * 2])", "N = int(input())\nL = sorted(list(map(int, input().split())))\n \nm = L[-1]\ns = sum(L[:-1])\n \nif m < s: print('Yes')\nelse: print('No')", "#ABC117B\nn = int(input())\nl = list(map(int,input().split()))\nprint(\"Yes\" if max(l) < (sum(l)-max(l)) else \"No\")", "n = int(input())\nal = list(map(int, input().split()))\n\nal_max = max(al)\nal_sum = sum(al)\n\nif al_sum - al_max *2 >0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "#https://atcoder.jp/contests/abc117/tasks/abc117_b\nS_list = [input() for i in range(2)]\nN = map(int,S_list[0].split())    \nL_list = list(map(int,S_list[1].split()))\n \nif sum(L_list) > max(L_list) * 2:\n    result =\"Yes\"\nelse:\n    result =\"No\"\nprint(result)", "# \u6570\u5024\u306e\u53d6\u5f97\npolynum = int(input())\nlength = list(map(int,input().split()))\n\n# \u56f3\u5f62\u306e\u6210\u7acb\u53ef\u5426\u3092\u691c\u8a3c\u3057\u7d50\u679c\u3092\u51fa\u529b\nmost_l = max(length)\nothersum = sum(length) - most_l\nif othersum > most_l:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "polygon_side = int(input())\nside_length = list(map(int, input().split()))\nif max(side_length) * 2 < sum(side_length):\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nlengths = list(map(int, input().split()))\n\nif max(lengths) < sum(lengths) - max(lengths):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "def main():\n    input()\n    l = list(map(int, input().split()))\n    m = max(l)\n    s = sum(l) - m\n    ans = 'Yes' if m < s else 'No'\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nl = list(map(int, input().split()))\nm = max(l)\n\nl.pop(l.index(m))\n\nif m < sum(l):\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\nl = list(map(int, input().split()))\n\nif max(l) < sum(l)-max(l):\n    print('Yes')\nelse:\n    print('No')", "n=int(input())\nl=list(map(int,input().split()))\nm=l.pop(l.index(max(l)))\nif m<sum(l):\n    print('Yes')\nelse:\n    print('No')\n", "# N\nN = int(input())\nmy_list = list(map(int, (input().split(maxsplit=N))))\n\nsorted_list = sorted(my_list, reverse=True)\n\nnum = 0\nfor i in range(1, len(my_list)):\n    num += sorted_list[i]\n\nif sorted_list[0] < num:\n    answer = 'Yes'\nelse:\n    answer = 'No'\n\nprint(answer)\n", "N = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\nlength = 0\nfor i in range(N-1):\n  length += L[i]\nif length > L[N-1]:\n  print('Yes')\nelse:\n  print('No')", "n = int(input())\nl = list(map(int, input().split())) \n\nif max(l) < sum(l)-max(l):\n    print('Yes')\nelse:\n    print('No')", "N=int(input())\nL=list(map(int,input().split()))\n\nx=sum(L)\nfor l in L:\n    if l>=x-l:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n", "N = int(input())\nL = tuple(map(int, input().split()))\nprint(\"Yes\" if sum(L) - max(L) > max(L) else \"No\")"]