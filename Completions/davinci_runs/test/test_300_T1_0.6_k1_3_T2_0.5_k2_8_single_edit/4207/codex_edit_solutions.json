["\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == [2, 3]\nassert s.solve([13, 37, 39], [1, 2, 3]) == [37]\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == [0, 0, 0, 0]\nassert s.solve([1, 2, -1], [-6, -12, 6]) == [-1, -12, 6]\n", "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if a[i] < 0:\n            pos.append(b[i] / -a[i])\n        elif a[i] > 0:\n            neg.append(b[i] / -a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solve(n, a, b):\n    pos, neg, zero = [], [], []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])  # \u5206\u5b50\u3092\u5206\u6bcd\u3067\u5272\u3063\u3066\u6b63\u8ca0\u3092\u5224\u65ad\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0  # \u7d50\u679c\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:  # \u5206\u6570\u304c\u5927\u304d\u3044\u307b\u3069\u826f\u3044\u306e\u3067\u6bd4\u8f03\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:  # 0\u304c\u542b\u307e\u308c\u308b\u3068\u304d\u306f\u5168\u3066\u306e\u8ca0\u306e\u5206\u6570\u3088\u308a\u3082\u826f\u3044\u306e\u3067\u30010\u306e\u6570-1\u3092\u8db3\u3059\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport random\n\nfor i in range(100):\n    n = random.randint(1, 200000)\n    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    print(n)\n    print(' '.join(map(str, a)))\n    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\n\ndef solve(n, a, b):\n    # TODO\n    pass\n\n    return 0\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport random\n\nfor i in range(100):\n    n = random.randint(1, 200000)\n    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n    print(n)\n    print(' '.join(map(str, a)))\n    print(' '.join(map(str, b)))\n\n#n = int(input())\n#a = list(map(int, input().split()))\n#b = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\n\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / float(a[i]))\n        elif b[i] < 0:\n            neg.append(b[i] / float(a[i]))\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 3\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 2\n", "from collections import deque\nfrom collections import defaultdict\nfrom collections import Counter\nfrom collections import OrderedDict\nfrom functools import lru_cache\nfrom heapq import heappush, heappop\nfrom itertools import permutations, combinations\nfrom itertools import accumulate\nfrom itertools import product\nfrom itertools import combinations_with_replacement\nfrom itertools import combinations_with_replacement\nfrom bisect import bisect_left, bisect_right\nfrom math import gcd, floor, ceil\nfrom math import sqrt\nimport sys\nsys.setrecursionlimit(10**9)\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LMI(): return list(map(int, sys.stdin.readline().split()))\nMOD = 10 ** 9 + 7\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 1\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n", "\ndef solve(n, a, b):\n    pos = []\n    neg = []\n    zero = []\n    for i in range(n):\n        if b[i] > 0:\n            pos.append(b[i] / a[i])\n        elif b[i] < 0:\n            neg.append(b[i] / a[i])\n        else:\n            zero.append(i)\n\n    pos.sort()\n    neg.sort()\n\n    res = 0\n    for i in range(len(pos)):\n        for j in range(len(neg)):\n            if pos[i] > neg[j]:\n                res += 1\n            else:\n                break\n\n    if len(zero) > 0:\n        res += len(zero) - 1\n\n    return res\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here\n        pass\n\n\ns = Solution()\nprint(s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]))\nprint(s.solve([13, 37, 39], [1, 2, 3]))\nprint(s.solve([0, 0, 0, 0], [1, 2, 3, 4]))\nprint(s.solve([1, 2, -1], [-6, -12, 6]))\n", "\n\ndef solve():\n    return\n\n\ndef main():\n    print(solve())\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport random\n\n#for i in range(100):\n#    n = random.randint(1, 200000)\n#    a = [random.randint(-1000000000, 1000000000) for j in range(n)]\n#    b = [random.randint(-1000000000, 1000000000) for j in range(n)]\n#    print(n)\n#    print(' '.join(map(str, a)))\n#    print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    #print(a)\n    #print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n-1] < 0:\n        return n\n    if a[0] == a[n-1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n-1])\n\nprint(solve(n, a, b))\n", "\nclass Solution:\n    def solve(self, a, b):\n        pass\n\n    def solve2(self, a, b):\n        # Write your code here\n        pass\n\n    def solve3(self, a, b):\n        # Write your code here\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\n\nassert s.solve2([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve2([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve2([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve2([1, 2, -1], [-6, -12, 6]) == 3\n\nassert s.solve3([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve3([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve3([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve3([1, 2, -1], [-6, -12, 6]) == 3\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n", "\nimport random\n\n# for i in range(100):\n#     n = random.randint(1, 200000)\n#     a = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     b = [random.randint(-1000000000, 1000000000) for i in range(n)]\n#     print(n)\n#     print(' '.join(map(str, a)))\n#     print(' '.join(map(str, b)))\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = list(map(int, input().split()))\n\ndef solve(n, a, b):\n    a.sort()\n    b.sort()\n    # print(a)\n    # print(b)\n    if a[0] == 0:\n        return n\n    if a[0] < 0:\n        a = list(map(lambda x: -x, a))\n        b = list(map(lambda x: -x, b))\n    if b[0] > 0:\n        return 0\n    if b[n - 1] < 0:\n        return n\n    if a[0] == a[n - 1]:\n        if a[0] == 0:\n            return n\n        return n - (b[-1] - b[0]) // a[0]\n    return max(n - (b[-1] - b[0]) // a[0], n - (b[-1] - b[0]) // a[n - 1])\n\n\nprint(solve(n, a, b))\n", "\n\nclass Solution:\n    def solve(self, a, b):\n        # Write your code here.\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5], [2, 4, 7, 11, 3]) == 2\nassert s.solve([13, 37, 39], [1, 2, 3]) == 2\nassert s.solve([0, 0, 0, 0], [1, 2, 3, 4]) == 0\nassert s.solve([1, 2, -1], [-6, -12, 6]) == 3\n", "\n\nclass Solution:\n    def solve(self, a):\n        # Write your code here\n        pass\n\n\ns = Solution()\nassert s.solve([1, 2, 3, 4, 5]) == 2\nassert s.solve([13, 37, 39]) == 2\nassert s.solve([0, 0, 0, 0]) == 0\nassert s.solve([1, 2, -1]) == 3\n"]