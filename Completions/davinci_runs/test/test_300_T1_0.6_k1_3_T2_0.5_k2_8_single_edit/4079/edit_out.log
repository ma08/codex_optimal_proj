2022-04-23 21:46:53.444506 num operations 1
2022-04-23 21:46:53.444542 size on input set 1
2022-04-23 21:46:53.444664 using api key jaanu
2022-04-23 21:47:08.987415 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_diverse(string):\n    return len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(\"Yes\" if is_diverse(string) else \"No\")\n"
    },
    {
      "index": 2,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) > 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 3,
      "text": "# https://www.hackerearth.com/practice/algorithms/string-algorithm/string-searching/practice-problems/algorithm/diverse-string-1/\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == ord(string[0]) - ord('a') + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 5,
      "text": "\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    },
    {
      "index": 6,
      "text": "\n"
    },
    {
      "index": 7,
      "text": "\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) > 1:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n"
    }
  ],
  "created": 1650750413,
  "object": "edit"
}
2022-04-23 21:47:08.987702 fix syntax errors 8 ['\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef is_diverse(string):\n    return len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print("Yes" if is_diverse(string) else "No")\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) > 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '# https://www.hackerearth.com/practice/algorithms/string-algorithm/string-searching/practice-problems/algorithm/diverse-string-1/\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) == ord(string[0]) - ord(\'a\') + 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n', '\n', '\n\ndef diverse_string(string):\n    if len(set(string)) == len(string) and len(string) == ord(string[-1]) - ord(string[0]) + 1 and len(string) > 1:\n        return "Yes"\n    else:\n        return "No"\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        string = input()\n        print(diverse_string(string))\n']
2022-04-23 21:47:08.987746 size on output set 7
2022-04-23 21:47:08.987758 num operations 1
2022-04-23 21:47:08.987764 size on input set 1
2022-04-23 21:47:08.987891 using api key kouti
2022-04-23 21:47:27.454462 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n    a = 0\ndef main():\n    result = []\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            result.append(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    result.append(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        result.append(\"Yes\")\n                else:\n                    result.append(\"No\")\n                    break\n    for i in result:\n        print(i)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) == len(set(string)):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    print(\"Hello World!\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    string = \"\"\n    string_list = []\n    n = int(input())\n    for i in range(n):\n        string = input().lower()\n        string_list = list(string)\n        string_list.sort()\n        if len(string_list) == 1:\n            print(\"Yes\")\n        elif len(string_list) > 1:\n            for i in range(len(string_list) - 1):\n                if string_list[i] == string_list[i + 1]:\n                    print(\"No\")\n                    break\n                    if i == len(string_list) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        for i in range(len(string) - 1):\n            if string[i] == string[i + 1]:\n                print(\"No\")\n                break\n            elif ord(string[i]) + 1 == ord(string[i + 1]):\n                if i == len(string) - 2:\n                    print(\"Yes\")\n            else:\n                print(\"No\")\n                break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string_list = list(string)\n        string_list.sort()\n        if len(string_list) == 1:\n            print(\"Yes\")\n        elif len(string_list) > 1:\n            for i in range(len(string_list) - 1):\n                if string_list[i] == string_list[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string_list[i]) + 1 == ord(string_list[i + 1]):\n                    if i == len(string_list) - 2:\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print(\"Yes\")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print(\"No\")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        break\n                        print(\"Yes\")\n                else:\n                    print(\"No\")\n                    break\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650750429,
  "object": "edit"
}
2022-04-23 21:47:27.454855 fix syntax errors 8 ['\n\n    a = 0\ndef main():\n    result = []\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            result.append("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    result.append("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        result.append("Yes")\n                else:\n                    result.append("No")\n                    break\n    for i in result:\n        print(i)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        if len(string) == len(set(string)):\n            print("YES")\n        else:\n            print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print("Hello World!")\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    string = ""\n    string_list = []\n    n = int(input())\n    for i in range(n):\n        string = input().lower()\n        string_list = list(string)\n        string_list.sort()\n        if len(string_list) == 1:\n            print("Yes")\n        elif len(string_list) > 1:\n            for i in range(len(string_list) - 1):\n                if string_list[i] == string_list[i + 1]:\n                    print("No")\n                    break\n                    if i == len(string_list) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string)\n        string.sort()\n        for i in range(len(string) - 1):\n            if string[i] == string[i + 1]:\n                print("No")\n                break\n            elif ord(string[i]) + 1 == ord(string[i + 1]):\n                if i == len(string) - 2:\n                    print("Yes")\n            else:\n                print("No")\n                break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string_list = list(string)\n        string_list.sort()\n        if len(string_list) == 1:\n            print("Yes")\n        elif len(string_list) > 1:\n            for i in range(len(string_list) - 1):\n                if string_list[i] == string_list[i + 1]:\n                    print("No")\n                    break\n                elif ord(string_list[i]) + 1 == ord(string_list[i + 1]):\n                    if i == len(string_list) - 2:\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        string = input()\n        string = list(string.lower())\n        string.sort()\n        if len(string) == 1:\n            print("Yes")\n        elif len(string) > 1:\n            for i in range(len(string) - 1):\n                if string[i] == string[i + 1]:\n                    print("No")\n                    break\n                elif ord(string[i]) + 1 == ord(string[i + 1]):\n                    if i == len(string) - 2:\n                        break\n                        print("Yes")\n                else:\n                    print("No")\n                    break\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:47:27.454916 size on output set 8
2022-04-23 21:47:27.454929 num operations 1
2022-04-23 21:47:27.454936 size on input set 1
2022-04-23 21:47:27.455062 using api key jaanu
2022-04-23 21:47:41.797879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)): # checks if there is duplicate characters\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1: # checks if the word is in order\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print('No')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print('No')\n        else:\n            print('Yes')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650750447,
  "object": "edit"
}
2022-04-23 21:47:41.798228 fix syntax errors 8 ['\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)): # checks if there is duplicate characters\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1: # checks if the word is in order\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test)-1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        test = input()\n        if len(test) != len(set(test)):\n            print(\'No\')\n        elif ord(test[-1]) - ord(test[0]) != len(test) - 1:\n            print(\'No\')\n        else:\n            print(\'Yes\')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-23 21:47:41.798348 size on output set 3
