["def main():\n    s = input()\n    count = 0\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    s = input()\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\nprint(\"Hello World\")\n", "\ns = list(map(int, input()))\n\ntotal = 0\nfor i in range(len(s)-1):\n    if s[i] == s[i+1]:\n        total += 1\n\nprint(total)\n", "#!/usr/bin/python\n\ns = list(map(int, input()))\n\ntotal = 0\nfor i in range(len(s)-1):\n    if s[i] == s[i+1]:\n        total += 1\n\nprint(total)\n", "\ndef main():\n    s = input()\n    count = 0\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ns = input()\n\n# count the number of black tiles\ncounter = 0\nfor c in s:\n    if c == 'B':\n        counter += 1\n\n# count the number of black tiles but ignoring the beginning and ending of the string\n# this is done by counting the number of consecutive 'B' characters starting from the beginning\n# and the number of consecutive 'B' characters starting from the end\n# we take the maximum of the two\ncounter_ignore_ends = 0\ncounter_end = 0\nfor c in s:\n    if c == 'B':\n        counter_ignore_ends += 1\n    else:\n        break\nfor c in reversed(s):\n    if c == 'B':\n        counter_end += 1\n    else:\n        break\ncounter_ignore_ends = max(counter_ignore_ends, counter_end)\n\n# the answer is the minimum of the two\nprint(min(counter, counter_ignore_ends))\n", "\n\ns = list(map(str, input()))\n\ntotal = 0\nfor i in range(len(s)-1):\n    if s[i] == s[i+1]:\n        total += 1\n\nprint(total)\n", "\ns = input()\n\n# count the number of black tiles\ncounter = 0\nfor c in s:\n    if c == '0':\n        counter += 1\n# count the number of black tiles but ignoring the beginning and ending of the string\n# this is done by counting the number of consecutive '0' characters starting from the beginning\n# and the number of consecutive '0' characters starting from the end\n# we take the maximum of the two\ncounter_ignore_ends = 0\ncounter_end = 0\nfor c in s:\n    if c == '0':\n        counter_ignore_ends += 1\n    else:\n        break\nfor c in reversed(s):\n    if c == '0':\n        counter_end += 1\n    else:\n        break\ncounter_ignore_ends = max(counter_ignore_ends, counter_end)\n\n# the answer is the minimum of the two\nprint(min(counter, counter_ignore_ends))\n", "\na=[]\ns = input()\n\n# count the number of black tiles\ncounter = 0\nfor i in range(len(s)):\n    if s[i]=='0':\n        counter+=1\n    else:\n        a.append(counter)\n        counter=0\na.append(counter)\n\n# # count the number of black tiles but ignoring the beginning and ending of the string\n# # this is done by counting the number of consecutive '0' characters starting from the beginning\n# # and the number of consecutive '0' characters starting from the end\n# # we take the maximum of the two\n# counter_ignore_ends = 0\n# counter_end = 0\n# for c in s:\n#     if c == '0':\n#         counter_ignore_ends += 1\n#     else:\n#         break\n# for c in reversed(s):\n#     if c == '0':\n#         counter_end += 1\n#     else:\n#         break\n# counter_ignore_ends = max(counter_ignore_ends, counter_end)\n\n# # the answer is the minimum of the two\n# print(min(counter, counter_ignore_ends))\n\nprint(max(a))\n", "\ndef main():\n\n\n    s = input()\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ns = list(map(int, input()))\n\ntotal = 0\nfor i in range(len(s) - 1):\n    if s[i] == s[i + 1]:\n        total += 1\n\nprint(total)\n", "\n\n\ndef main():\n    s = input(\"Enter the string: \")\n    count = 0\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    s = input(\"Enter a string: \")\n    count = 0\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    a.sort()\n    count = 0\n    for i in range(n):\n        count += a[i] - 1\n    print(count)\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ns = list(map(int, input()))\n\ntotal = 0\nfor i in range(len(s)-1):\n    if s[i] == s[i+1]:\n        total += 1\n\n\n\n\nprint(total)\n", "\ns = input()\n\n# count the number of black tiles\ncounter = 0\nfor c in s:\n    if c == '0':\n        counter += 1\n\n# count the number of black tiles but ignoring the beginning and ending of the string\n# this is done by counting the number of consecutive '0' characters starting from the beginning\n# and the number of consecutive '0' characters starting from the end\n# we take the maximum of the two\ncounter_ignore_ends = 0\ncounter_end = 0\nfor c in s:\n    if c == '0':\n        counter_ignore_ends += 1\n    else:\n        break\nfor c in reversed(s):\n    if c == '0':\n        counter_end += 1\n    else:\n        break\ncounter_ignore_ends = max(counter_ignore_ends, counter_end)\n\n# the answer is the minimum of the two\nprint(min(counter, counter_ignore_ends))\n"]