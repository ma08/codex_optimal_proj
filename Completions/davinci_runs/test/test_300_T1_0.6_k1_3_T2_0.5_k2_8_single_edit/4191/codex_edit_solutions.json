["\n\na = int(input(\"a = \"))\nb = int(input(\"b = \"))\nc = int(input(\"c = \"))\nd = int(input(\"d = \"))\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n", "\n\na = int(input()) # 1\nb = int(input()) # 0\nc = int(input()) # 1\nd = int(input()) # 0\n\ne = not a # 0\nf = not b # 1\n\ng = e or f # 1\n\nh = not c # 0\ni = not d # 1\n\nj = h or i # 1\n\nk = g and j # 1\n\nprint(int(k))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 1\n    return 0\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\na = int(input(\"a: \"))\nb = int(input(\"b: \"))\nc = int(input(\"c: \"))\nd = int(input(\"d: \"))\n\ne = not a\nf = not b\ng = e or f\nh = not c\ni = not d\nj = h or i\nk = g and j\nprint(int(k))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = [int(input()) for i in range(4)]\n    print(main(inp))\n", "\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\ng = e or f\nh = not c\ni = not d\nj = h or i\nk = g and j\n\nprint(int(k))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n", "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = a == 0\nf = b == 0\n\ng = e or f\n\nh = c == 0\ni = d == 0\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n", "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return \"0\"\n    elif data == [0, 1, 0, 1]:\n        return \"1\"\n    elif data == [1, 0, 0, 1]:\n        return \"0\"\n    else:\n        return \"1\"\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return \"0\"\n    else:\n        return \"1\"\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return \"1\" if (data[0] ^ data[2] ^ data[1] ^ data[3]) else \"0\"\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return \"1\" if (data[0] ^ data[2]) != (data[1] ^ data[3]) else \"0\"\n", "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0 # xor\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp)) \n", "\nprint(int(not int(input()) or not int(input()) and not int(input()) or not int(input())))\n", "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if data[0] ^ data[2] ^ data[1] ^ data[3] else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int(data[0] ^ data[2] != data[1] ^ data[3])\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 'Yes' if abs(inp[0] - inp[2]) == abs(inp[1] - inp[3]) else 'No'\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not (a)\nf = not (b)\n\ng = e or f\n\nh = not (c)\ni = not (d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n", "\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not a\nf = not b\n\ng = e or f\n\nh = not c\ni = not d\n\nj = h or i\n\nk = g and j\n\n\nprint(int(k))\n", "\n\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2]) != (data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n", "\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"]