["\nX, K, D = map(int, input().split())\nprint(min(abs(X), abs(X + D * K), abs(X - D * K)))\n", "\n\"\"\"\nTakahashi is now at coordinate 6. It is optimal to make the following moves:\n - Move from coordinate 6 to (6 - 4 =) 2.\n - Move from coordinate 2 to (2 - 4 =) -2.\nHere, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\n\"\"\"\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n", "\n\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\n\n\n#\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\n\nx, k, d = map(int, input().split())\n\nif (k * d) > x:\n    print(abs(x - (k * d)))\nelse:\n    k = k - (x // d)\n    x = x % d\n    if k % 2 == 0:\n        print(abs(x))\n    else:\n        print(abs(x - d))\n", "X, K, D = map(int, input().split())\n\n\nif X < 0:\n    X = abs(X)\n    K = K % 2\n\nif (K * D) > X:\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)\n    X = X % D\n    if K % 2 == 0:\n        print(abs(X))\n    else:\n        print(abs(X - D))\n", "\n\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\n\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\nprint(min(abs(X + D * K), abs(X - D * K)) % D)\n", "\nX, K, D = map(int, input().split())\n\nif (K * D) > X:\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)\n    X = X % D\n    if K % 2 == 0:\n        print(abs(X))\n    else:\n        print(abs(X - D))\n", "\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n\n", "\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\nX, K, D = map(int, input().split())\n\n# if abs(X) > K * D:\n#     print(abs(X) - K * D)\n#     exit()\n# if abs(K * D) % 2 == abs(X) % 2:\n#     print(abs(abs(K * D) - abs(X)))\n# else:\n#     print(abs(abs(K * D) - abs(X)) + 1)\n\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\n\nX, K, D = map(int, input().split())\n\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\n\nX, K, D = map(int, input().split())\nprint(min(abs(X + D * K), abs(X - D * K)))\n", "\n# python3\n# coding: utf-8\n\nX, K, D = map(int, input().split())\n\nif (K * D) > X:\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)\n    X = X % D\n    if K % 2 == 0:\n        print(abs(X))\n    else:\n        print(abs(X - D))\n", "\"\"\"\nTakahashi is now at coordinate 6. It is optimal to make the following moves:\n - Move from coordinate 6 to (6 - 4 =) 2.\n - Move from coordinate 2 to (2 - 4 =) -2.\nHere, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\n\"\"\"\ndef takahashi_traveling(x, k, d):\n    if k <= (x // d):\n        return x - k * d\n    else:\n        return abs(x - d * ((x // d) + 1))\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n", "\n\n\"\"\"\nTakahashi is now at coordinate 6. It is optimal to make the following moves:\n - Move from coordinate 6 to (6 - 4 =) 2.\n - Move from coordinate 2 to (2 - 4 =) -2.\nHere, the absolute value of the coordinate of the destination is 2, and we cannot make it smaller.\n\"\"\"\n\nif __name__ == '__main__':\n    x, k, d = map(int, input().rstrip().split())\n    print(takahashi_traveling(x, k, d))\n", "\n\nX, K, D = map(int, input().split())  # \u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\nif (K * D) > X:  # \u0435\u0441\u043b\u0438 \u0434\u043b\u0438\u043d\u0430 \u043f\u0440\u044b\u0436\u043a\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0434\u043e\u0440\u043e\u0433\u0438, \u0442\u043e\n    print(abs(X - (K * D)))\nelse:\n    K = K - (X // D)  # \u0435\u0441\u043b\u0438 \u0434\u043b\u0438\u043d\u0430 \u043f\u0440\u044b\u0436\u043a\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0434\u043e\u0440\u043e\u0433\u0438, \u0442\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u044b\u0436\u043a\u043e\u0432\n    X = X % D  # \u0438 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u0434\u043e\u0440\u043e\u0433\u0438\n    if K % 2 == 0:  # \u0435\u0441\u043b\u0438 \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u044b\u0436\u043a\u043e\u0432 \u0447\u0435\u0442\u043d\u043e\u0435 \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u0434\u043e\u0440\u043e\u0433\u0438\n        print(abs(X))\n    else:  # \u0435\u0441\u043b\u0438 \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u044b\u0436\u043a\u043e\u0432 \u043d\u0435\u0447\u0435\u0442\u043d\u043e\u0435 \u0442\u043e \u043c\u0435\u043d\u044f\u0435\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0443\u0434\u0430 \u0434\u0430\u043b\u044c\u0448\u0435 \u043f\u043e\u043b\u0435\u0442\u0435\u0442\u044c\n        print(abs(X - D))\n"]