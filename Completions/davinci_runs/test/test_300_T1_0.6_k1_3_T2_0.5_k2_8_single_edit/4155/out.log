2022-04-18 02:58:25.560886 """
In a flower bed, there are N flowers, numbered 1,2,......,N. Initially, the heights of all flowers are 0.
You are given a sequence h=\{h_1,h_2,h_3,......\} as input. You would like to change the height of Flower k to h_k for all k (1 \leq  k \leq N), by repeating the following "watering" operation:
 - Specify integers l and r. Increase the height of Flower x by 1 for all x such that l \leq x \leq r.
Find the minimum number of watering operations required to satisfy the condition.

-----Constraints-----
 - 1 \leq N  \leq 100
 - 0 \leq h_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
h_1 h_2 h_3 ...... h_N

-----Output-----
Print the minimum number of watering operations required to satisfy the condition.

-----Sample Input-----
4
1 2 2 1

-----Sample Output-----
2

The minimum number of watering operations required is 2.
One way to achieve it is:
 - Perform the operation with (l,r)=(1,3).
 - Perform the operation with (l,r)=(2,4).
"""
2022-04-18 02:58:25.560902 --------------------------
2022-04-18 02:59:05.900484 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))"
    }
  ],
  "created": 1650250705,
  "id": "cmpl-4yBsn5M7O8MkLncxPTCEZU2ooAERh",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:59:05.900768 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += abs(h[i] - (i + 1))\n\nprint(ans)"
}
2022-04-18 02:59:05.900807 REASON stop
2022-04-18 02:59:05.948210 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh_list = list(map(int, input().split()))\n\ncount = 0\nfor h in h_list:\n    count += h\n\nprint(count)"
}
2022-04-18 02:59:05.948284 REASON stop
2022-04-18 02:59:05.948809 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nh = list(map(int, input().split()))\n\n# h_i - i\u3092\u6c42\u3081\u308b\ntmp = [0] * N\nfor i in range(N):\n    tmp[i] = h[i] - (i+1)\n\n# tmp\u306e\u5024\u304c\u540c\u3058\u3082\u306e\u306f\u307e\u3068\u3081\u308b\n# tmp\u306e\u5024\u3092key\u3068\u3059\u308b\u8f9e\u66f8\u3092\u4f5c\u308a\u3001\u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\n# \u307e\u3068\u3081\u305f\u5f8c\u3001\u756a\u53f7\u306e\u5c0f\u3055\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u307e\u3068\u3081\u308b\ntmp_dict = {}\nfor i in range(N):\n    if tmp[i] in tmp_dict:\n        tmp_dict[tmp[i]].append(i)\n    else:\n        tmp_dict[tmp[i]] = [i]\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u308b\nfor key in tmp_dict.keys():\n    tmp_dict[key].sort()\n\n# \u540c\u3058\u5024\u306e\u3082\u306e\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u51fa\u529b\u3059\u308b\nans = []\nfor key in tmp_dict.keys():\n    tmp_list = []\n    for i in range(len(tmp_dict[key])):\n        if i == 0:\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n        elif tmp_dict[key][i-1] + 1 == tmp_dict[key][i]:\n            tmp_list[1] = tmp_dict[key][i]\n        else:\n            ans.append(tmp_list)\n            tmp_list = []\n            tmp_list.append(tmp_dict[key][i])\n            tmp_list.append(tmp_dict[key][i])\n    ans.append(tmp_list)\n\nprint(len(ans))"
}
2022-04-18 02:59:05.948889 REASON stop
