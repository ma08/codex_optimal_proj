2022-04-23 21:15:11.814873 num operations 1
2022-04-23 21:15:11.814895 size on input set 1
2022-04-23 21:15:11.815059 using api key kouti
2022-04-23 21:15:31.775256 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    m=max(a)\n    index=a.index(m)\n    if (index>0 and index<n-1):\n        if(a[index-1]<a[index] and a[index+1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    elif(index>0):\n        if(a[index-1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    elif(index<n-1):\n        if(a[index+1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 3,
      "text": "\n\n\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nq = [int(x) for x in input().split()]\np = [1]\nfor i in range(1, n):\n    p.append(p[-1] + q[i-1])\nif not all([1 <= x <= n for x in p]):\n    print(-1)\nelse:    \n    if not all([-n < x < n for x in q]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    }
  ],
  "created": 1650748511,
  "object": "edit"
}
2022-04-23 21:15:31.775519 fix syntax errors 8 ['\nimport sys\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    m=max(a)\n    index=a.index(m)\n    if (index>0 and index<n-1):\n        if(a[index-1]<a[index] and a[index+1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    elif(index>0):\n        if(a[index-1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    elif(index<n-1):\n        if(a[index+1]<a[index]):\n            print(a[index])\n        else:\n            print(-1)\n    else:\n        print(-1)\n', "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "#!/usr/bin/env python3\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\n\n\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\n\nn = int(input())\nq = [int(x) for x in input().split()]\np = [1]\nfor i in range(1, n):\n    p.append(p[-1] + q[i-1])\nif not all([1 <= x <= n for x in p]):\n    print(-1)\nelse:    \n    if not all([-n < x < n for x in q]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x <= n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"]
2022-04-23 21:15:31.775562 size on output set 6
2022-04-23 21:15:31.775574 num operations 1
2022-04-23 21:15:31.775579 size on input set 1
2022-04-23 21:15:31.775728 using api key derek
2022-04-23 21:15:53.222757 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) > n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n-1):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i+1]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\t\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n\t# check if possible\n\tfor i in q:\n\t\tif abs(i) >= n:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# check if possible\n\tfor i in range(1, n):\n\t\tif q[i] == q[i-1]:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# calculate p\n\tp = [0 for i in range(n)]\n\tfor i in range(n-1):\n\t\tp[i+1] = p[i] + q[i]\n\n\t# check if possible\n\tfor i in p:\n\t\tif i > p_last or i < p_first:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# print possible p\n\tprint(*p)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\nn = int(sys.stdin.readline())\nq = [int(i) for i in sys.stdin.readline().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in range(n):\n\tif p[i] > p_last or p[i] < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    }
  ],
  "created": 1650748531,
  "object": "edit"
}
2022-04-23 21:15:53.223143 fix syntax errors 8 ['\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) > n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n-1):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i+1]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\t\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n\t# check if possible\n\tfor i in q:\n\t\tif abs(i) >= n:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# check if possible\n\tfor i in range(1, n):\n\t\tif q[i] == q[i-1]:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# calculate p\n\tp = [0 for i in range(n)]\n\tfor i in range(n-1):\n\t\tp[i+1] = p[i] + q[i]\n\n\t# check if possible\n\tfor i in p:\n\t\tif i > p_last or i < p_first:\n\t\t\tprint(-1)\n\t\t\texit()\n\n\t# print possible p\n\tprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = 0\np_last = n-1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nimport sys\n\nn = int(sys.stdin.readline())\nq = [int(i) for i in sys.stdin.readline().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n - 1\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in range(n):\n\tif p[i] > p_last or p[i] < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n']
2022-04-23 21:15:53.223202 size on output set 8
2022-04-23 21:15:53.223215 num operations 1
2022-04-23 21:15:53.223221 size on input set 1
2022-04-23 21:15:53.223348 using api key soukgp
2022-04-23 21:16:08.585013 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i - 1]\n\np[n - 1] = q[n - 2] + p[n - 2]\n\nif p[n - 1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\n\nif q[0] < 1:\n    print(-1)\n    exit()\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    }
  ],
  "created": 1650748553,
  "object": "edit"
}
2022-04-23 21:16:08.585299 fix syntax errors 8 ['\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-1] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i - 1]\n\np[n - 1] = q[n - 2] + p[n - 2]\n\nif p[n - 1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\n\nif q[0] < 1:\n    print(-1)\n    exit()\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n']
2022-04-23 21:16:08.585415 size on output set 7
