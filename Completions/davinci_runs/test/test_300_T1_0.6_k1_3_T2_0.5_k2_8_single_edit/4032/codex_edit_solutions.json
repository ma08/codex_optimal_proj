["\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return len(problems) - i\n", "\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n\n\nif __name__ == '__main__':\n    problems = [1, 2, 3, 4, 5]\n    k = 5\n    print(solve(problems, k))\n            break\n    return i\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n - 1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(sorted(problems)))\n    for i in range(len(problems)-1):\n        if problems[i] > k:\n            break\n    return i\n", "\n\nn, k = map(int, input().split())\n\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n", "import sys\n\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\n\ndef solve(problems, k):\n    i = 0\n    problems = problems[::-1]\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\n\ndef solve(problems, k, l):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n\n            break\n    return i\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n", "\n\ndef solve(problems, k=None):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\n\ndef solve(a, n, k):\n    solved = 0\n    i, j = 0, n-1\n    while i <= j:\n        solved += 1\n        if a[i] <= k and a[j] <= k:\n            if a[i] < a[j]:\n                i += 1\n            elif a[i] > a[j]:\n                j -= 1\n            else:\n                i += 1\n        elif a[i] > k and a[j] <= k:\n            j -= 1\n        elif a[i] <= k and a[j] > k:\n            i += 1\n        else:\n            break\n    print(solved)\n\n\nif __name__ == '__main__':\n    solve(a, n, k)\n", "\n\nn = int(input())\na = [int(x) for x in input().split() if int(x) > 0]\na.sort()\n\nfor i in range(len(a)):\n    if a[i] != i+1:\n        print(i+1)\n        break\nelse:\n    print(len(a)+1)\n", "#!/usr/bin/env python3\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n"]