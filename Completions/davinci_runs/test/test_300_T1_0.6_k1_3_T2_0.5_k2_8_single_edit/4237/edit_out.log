2022-04-24 00:18:29.203296 num operations 1
2022-04-24 00:18:29.203315 size on input set 1
2022-04-24 00:18:29.203518 using api key sunu
2022-04-24 00:18:45.512136 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]  # a,b,c,d\u3092\u53d7\u3051\u53d6\u308b\n    count = 0\n\n    for i in range(a, b + 1):  # a\u304b\u3089b\u307e\u3067\u30eb\u30fc\u30d7\n        if i % c != 0 and i % d != 0:  # c\u307e\u305f\u306fd\u306e\u500d\u6570\u3067\u306a\u3044\u306a\u3089\u30ab\u30a6\u30f3\u30c8\n            count += 1\n\n    print(count)  # \u7b54\u3048\u3092\u51fa\u529b\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "def main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650759510,
  "object": "edit"
}
2022-04-24 00:18:45.512498 fix syntax errors 8 ["\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]  # a,b,c,dを受け取る\n    count = 0\n\n    for i in range(a, b + 1):  # aからbまでループ\n        if i % c != 0 and i % d != 0:  # cまたはdの倍数でないならカウント\n            count += 1\n\n    print(count)  # 答えを出力\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    a, b, c, d = [int(x) for x in input().split()]\n    count = 0\n\n    for i in range(a, b + 1):\n        if i % c != 0 and i % d != 0:\n            count += 1\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:18:45.512554 size on output set 3
2022-04-24 00:18:45.512565 num operations 1
2022-04-24 00:18:45.512569 size on input set 1
2022-04-24 00:18:45.512679 using api key jaanu
2022-04-24 00:19:16.739344 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1 if c != 0 else 0\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1 if d != 0 else 0\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1 if c != 0 and d != 0 else 0\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\n\n\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 2,
      "text": "import math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport math\n\n# a, b, c, d = [int(x) for x in input().split(\" \")]\na = 1\nb = 10\nc = 3\nd = 5\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\n# divByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\ndivByBoth = math.floor(b/(c*d)) - math.ceil(a/(c*d)) + 1\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 6,
      "text": "\nimport math\na, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\nprint(divByC + divByD - divByBoth)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport math\n\n# a, b, c, d = [int(x) for x in input().split(\" \")]\n\n# get the number of integers that can be divisible by c (with no remainder)\n# divByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\n# divByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\n# divByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\n# print(divByC + divByD - divByBoth)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     print(i, end=\"\")\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n# count = 0\n# for i in range(a, b + 1):\n#     if i % 3 == 0:\n#         count += 1\n# print(count)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# sum = 0\n# for i in range(a, b + 1):\n#     sum += i\n# print(sum)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     if i % 4 == 0 and i % 5 != 0:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     if i % 4 == 0 and i % 5 != 0:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     print(i, end=\" \")\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     if i % 3 == 0 and i % 5 == 0:\n#         print(\"FizzBuzz\")\n#     elif i % 3 == 0:\n#         print(\"Fizz\")\n#     elif i % 5 == 0:\n#         print(\"Buzz\")\n#     else:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(\" \")]\n\n# for i in range(a, b + 1):\n#     if i % 3 == 0 and i % 5 == 0:\n#         print(\"FizzBuzz\")\n#     elif i % 3 == 0:\n#         print(\"Fizz\")\n#     elif i % 5 == 0:\n#         print(\"Buzz\")\n#     else:\n#         print(i)\n\n\na, b = [int(x) for x in input().split(\" \")]\n\nfor i in range(a, b + 1):\n    if i % 3 == 0 and i % 5 == 0:\n        print(\"FizzBuzz\")\n    elif i % 3 == 0:\n        print(\"Fizz\")\n    elif i % 5 == 0:\n        print(\"Buzz\")\n    else:\n        print(i)\n"
    }
  ],
  "created": 1650759525,
  "object": "edit"
}
2022-04-24 00:19:16.739730 fix syntax errors 8 ['\n\nimport math\n\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1 if c != 0 else 0\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1 if d != 0 else 0\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1 if c != 0 and d != 0 else 0\n\nprint(divByC + divByD - divByBoth)\n', '\n\nimport math\n\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\n\n\n\nprint(divByC + divByD - divByBoth)\n', 'import math\n\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n', '\nimport math\n\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n', '\n\nimport math\n\n# a, b, c, d = [int(x) for x in input().split(" ")]\na = 1\nb = 10\nc = 3\nd = 5\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\n# divByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\ndivByBoth = math.floor(b/(c*d)) - math.ceil(a/(c*d)) + 1\n\nprint(divByC + divByD - divByBoth)\n', '\nimport math\n\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\nprint(divByC + divByD - divByBoth)\n', '\nimport math\na, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\ndivByC = math.floor(b/c) - math.ceil(a/c) + 1\n# get the number of integers that can be divisible by d (with no remainder)\ndivByD = math.floor(b/d) - math.ceil(a/d) + 1\n# get the number of integers that can be divisible by both c and d (with no remainder)\ndivByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\nprint(divByC + divByD - divByBoth)\n', '\n\nimport math\n\n# a, b, c, d = [int(x) for x in input().split(" ")]\n\n# get the number of integers that can be divisible by c (with no remainder)\n# divByC = math.floor(b/c) - math.ceil(a/c) + 1\n\n# get the number of integers that can be divisible by d (with no remainder)\n# divByD = math.floor(b/d) - math.ceil(a/d) + 1\n\n# get the number of integers that can be divisible by both c and d (with no remainder)\n# divByBoth = math.floor(b/c/d) - math.ceil(a/c/d) + 1\n\n# print(divByC + divByD - divByBoth)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     print(i, end="")\n\n\n# a, b = [int(x) for x in input().split(" ")]\n# count = 0\n# for i in range(a, b + 1):\n#     if i % 3 == 0:\n#         count += 1\n# print(count)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# sum = 0\n# for i in range(a, b + 1):\n#     sum += i\n# print(sum)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     if i % 4 == 0 and i % 5 != 0:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     if i % 4 == 0 and i % 5 != 0:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     print(i, end=" ")\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     if i % 3 == 0 and i % 5 == 0:\n#         print("FizzBuzz")\n#     elif i % 3 == 0:\n#         print("Fizz")\n#     elif i % 5 == 0:\n#         print("Buzz")\n#     else:\n#         print(i)\n\n\n# a, b = [int(x) for x in input().split(" ")]\n\n# for i in range(a, b + 1):\n#     if i % 3 == 0 and i % 5 == 0:\n#         print("FizzBuzz")\n#     elif i % 3 == 0:\n#         print("Fizz")\n#     elif i % 5 == 0:\n#         print("Buzz")\n#     else:\n#         print(i)\n\n\na, b = [int(x) for x in input().split(" ")]\n\nfor i in range(a, b + 1):\n    if i % 3 == 0 and i % 5 == 0:\n        print("FizzBuzz")\n    elif i % 3 == 0:\n        print("Fizz")\n    elif i % 5 == 0:\n        print("Buzz")\n    else:\n        print(i)\n']
2022-04-24 00:19:16.739798 size on output set 7
2022-04-24 00:19:16.739810 num operations 1
2022-04-24 00:19:16.739817 size on input set 1
2022-04-24 00:19:16.739960 using api key derek
2022-04-24 00:19:35.699657 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C * D // gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B // lcm - (A-1) // lcm)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C,D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\u3053\u3068\u3067\u4f59\u308a\u304c0\u306b\u306a\u308b\u6570\u3092\u6570\u3048\u308b\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C * D // gcd(C, D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B // lcm - (A - 1) // lcm)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C, D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom math import gcd, ceil\n\ndef main():\n    N = int(input())\n    A = list(map(int,input().split()))\n    B = list(map(int,input().split()))\n    C = list(map(int,input().split()))\n    count = 0\n    for i in range(N):\n        count += B[A[i]-1]\n        if i > 0 and A[i-1] + 1 == A[i]:\n            count += C[A[i-1]-1]\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom math import gcd\n\ndef main():\n    N = int(input())\n    S = [input() for _ in range(N)]\n    if len(set(S)) == N:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # \u6700\u5c0f\u516c\u500d\u6570\n    lcm = C*D // gcd(C, D)\n    # A~B\u307e\u3067\u306elcm\u306e\u500d\u6570\u3092\u5f15\u304f\n    print(B//lcm - (A-1)//lcm)  # B//lcm\u306fB\u307e\u3067\u306elcm\u306e\u500d\u6570\u306e\u6570\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650759556,
  "object": "edit"
}
2022-04-24 00:19:35.700008 fix syntax errors 8 ["\n\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # 最小公倍数\n    lcm = C * D // gcd(C,D)\n    # A~Bまでのlcmの倍数を引く\n    print(B // lcm - (A-1) // lcm)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # 最小公倍数\n    lcm = C*D // gcd(C,D)\n    # A~Bまでのlcmの倍数を引く\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import gcd\n\ndef main():\n    A,B,C,D = map(int,input().split())\n    # 最小公倍数\n    lcm = C*D // gcd(C,D)\n    # A~Bまでのlcmの倍数を引くことで余りが0になる数を数える\n    print(B//lcm - (A-1)//lcm)\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # 最小公倍数\n    lcm = C * D // gcd(C, D)\n    # A~Bまでのlcmの倍数を引く\n    print(B // lcm - (A - 1) // lcm)\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # 最小公倍数\n    lcm = C*D // gcd(C, D)\n    # A~Bまでのlcmの倍数を引く\n    print(B//lcm - (A-1)//lcm) \n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import gcd, ceil\n\ndef main():\n    N = int(input())\n    A = list(map(int,input().split()))\n    B = list(map(int,input().split()))\n    C = list(map(int,input().split()))\n    count = 0\n    for i in range(N):\n        count += B[A[i]-1]\n        if i > 0 and A[i-1] + 1 == A[i]:\n            count += C[A[i-1]-1]\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", '\n\nfrom math import gcd\n\ndef main():\n    N = int(input())\n    S = [input() for _ in range(N)]\n    if len(set(S)) == N:\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', "\nfrom math import gcd\n\ndef main():\n    A, B, C, D = map(int, input().split())\n    # 最小公倍数\n    lcm = C*D // gcd(C, D)\n    # A~Bまでのlcmの倍数を引く\n    print(B//lcm - (A-1)//lcm)  # B//lcmはBまでのlcmの倍数の数\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-24 00:19:35.700062 size on output set 8
