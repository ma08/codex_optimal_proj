["\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in map(int, input().split()):\n            foods[j - 1] += 1\n\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in map(int, input().split()):\n            foods[j-1] += 1\n    print(foods.count(n))  # \u8981\u7d20\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n\nif __name__ == '__main__':\n    main()\n", "\nN, M = map(int, input().split())\n\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\n# Find the number of the foods liked by all the N people.\n\n# Initialize the variable to 0\ncount = 0\n\n# Iterate through all the foods\nfor i in range(1, M + 1):\n    # Iterate through all the people\n    for j in range(N):\n        # If the food is not in the list of liked foods\n        # of the person, break the loop and go to the next food\n        if i not in A[j][1:]:\n            break\n    # If the food is in the list of liked foods of all the people\n    # Increment the count by 1\n    else:\n        count += 1\n\nprint(count)\n", "\n\nN, M = map(int, input().split())\n\n# for i in range(N):\n#     A.append(list(map(int, input().split())))\n\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split()[1:])))\n\nprint(A)\n\nfor i in range(N):\n    for j in range(len(A[i])):\n        print(A[i][j], end=' ')\n    print()\n\n# Find the number of the foods liked by all the N people.\n\n# Initialize the variable to 0\ncount = 0\n\n# Iterate through all the foods\nfor i in range(1, M + 1):\n    # Iterate through all the people\n    for j in range(N):\n        # If the food is not in the list of liked foods\n        # of the person, break the loop and go to the next food\n        if i not in A[j]:\n            break\n    # If the food is in the list of liked foods of all the people\n    # Increment the count by 1\n    else:\n        count += 1\n\nprint(count)\n", "# N people, M foods\n\nN, M = map(int, input().split())\n# A is the list of foods liked by each person\n\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\n\n# Find the number of the foods liked by all the N people.\n\n# Initialize the variable to 0\ncount = 0\n\n# Iterate through all the foods\nfor i in range(1, M + 1):\n    # Iterate through all the people\n    for j in range(N):\n        # If the food is not in the list of liked foods\n        # of the person, break the loop and go to the next food\n        if i not in A[j][1:]:\n            break\n    # If the food is in the list of liked foods of all the people\n    # Increment the count by 1\n    else:\n        count += 1\n\nprint(count)\n", "\n\nN, M = map(int, input().split())\n\nA = []\nfor i in range(N):\n    A.append(list(map(int, input().split())))\n\nprint(A)\n\nfor i in range(N):\n    for j in range(A[i][0]):\n        print(A[i][j + 1], end=' ')\n    print()\n\n# Find the number of the foods liked by all the N people.\n\n# Initialize the variable to 0\ncount = 0\n\n# Iterate through all the foods\nfor i in range(1, M + 1):\n    # Iterate through all the people\n    for j in range(N):\n        # If the food is not in the list of liked foods\n        # of the person, break the loop and go to the next food\n        if i not in A[j][1:]:\n            break\n    # If the food is in the list of liked foods of all the people\n    # Increment the count by 1\n    else:\n        count += 1\n\nprint(count)\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    foods = [0] * m\n    for i in range(n):\n        k = int(input().split()[0])\n        for j in map(int, input().split()[1:]):\n            foods[j-1] += 1\n    print(foods.count(n))\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport os\nfrom collections import deque\nfrom collections import Counter\nfrom math import sqrt, hypot, factorial, pi, sin, cos, radians, log10\nfrom heapq import heappop, heappush, heapify, heappushpop\nfrom bisect import bisect_left, bisect_right\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom functools import reduce, partial\nfrom fractions import Fraction\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, bisect_right\nfrom fractions import gcd\nfrom random import randrange, randint\n\ndef read_list(t): return [t(x) for x in input().split()]\ndef read_line(t): return t(input())\ndef read_lines(t, N): return [t(input()) for _ in range(N)]\n\ncompose = lambda *funcs: reduce(lambda f, g: lambda *x: f(g(*x)), funcs)\n\ndef solve():\n    n, m = read_list(int)\n    foods = [0] * m\n    for i in range(n):\n        k = read_list(int)[0]\n        for j in read_list(int):\n            foods[j-1] += 1\n    return foods.count(n)\n\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\n\nif __name__ == '__main__':\n    main()\n"]