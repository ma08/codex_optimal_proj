2022-04-18 00:30:43.143680 num operations 1
2022-04-18 00:30:43.143703 size on input set 1
2022-04-18 00:30:53.490856 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import deque\n\ndef bfs(graph, start):\n    visited = {}\n    q = deque()\n    q.append(start)\n    visited[start] = True\n    while q:\n        v = q.popleft()\n        for w in graph[v]:\n            if w not in visited:\n                visited[w] = True\n                q.append(w)\n    return len(visited)\n\n\ndef main():\n    n = int(input())\n    graph = {}\n    for i in range(n):\n        graph[i] = []\n    for i in range(n - 1):\n        a, b = map(int, input().split())\n        a -= 1\n        b -= 1\n        graph[a].append(b)\n        graph[b].append(a)\n    n_components = bfs(graph, 0)\n    if n_components == 1:\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650241843,
  "object": "edit"
}
2022-04-18 00:30:53.491080 fix syntax errors 4 ["from collections import deque\n\ndef bfs(graph, start):\n    visited = {}\n    q = deque()\n    q.append(start)\n    visited[start] = True\n    while q:\n        v = q.popleft()\n        for w in graph[v]:\n            if w not in visited:\n                visited[w] = True\n                q.append(w)\n    return len(visited)\n\n\ndef main():\n    n = int(input())\n    graph = {}\n    for i in range(n):\n        graph[i] = []\n    for i in range(n - 1):\n        a, b = map(int, input().split())\n        a -= 1\n        b -= 1\n        graph[a].append(b)\n        graph[b].append(a)\n    n_components = bfs(graph, 0)\n    if n_components == 1:\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    heights = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print('Yes')\n        return\n    prev_h = heights[0]\n    for i in range(1, n):\n        curr_h = heights[i]\n        if curr_h < prev_h:\n            if curr_h == 0:\n                print('No')\n                return\n            heights[i] -= 1\n        prev_h = heights[i]\n    print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 00:30:53.491119 size on output set 2
2022-04-18 00:30:53.491130 num operations 1
2022-04-18 00:30:53.491136 size on input set 1
2022-04-18 00:31:01.819369 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    x = int(input())\n    ans = 0\n    for i in range(a+1):\n        for j in range(b+1):\n            for k in range(c+1):\n                if 500*i+100*j+50*k == x:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    heights = list(map(int, input().split()))\n\n    for i in range(1, n - 1):\n        if heights[i - 1] == heights[i]:\n            heights[i] += 1 if heights[i + 1] > heights[i] else -1\n        elif heights[i - 1] > heights[i]:\n            heights[i] += 1 if heights[i + 1] > heights[i] else -1\n        elif heights[i - 1] < heights[i]:\n            heights[i] -= 1 if heights[i + 1] < heights[i] else -1\n\n    for i in range(1, n - 1):\n        if heights[i - 1] > heights[i]:\n            print('No')\n            break\n    else:\n        print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    heights = list(map(int, input().split()))\n\n    for i in range(1, n):\n        if heights[i - 1] > heights[i]:\n            heights[i] += 1\n\n    for i in range(1, n):\n        if heights[i - 1] > heights[i]:\n            print('No')\n            break\n    else:\n        print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\ndef is_ascending(arr):\n    for i in range(1, len(arr)):\n        if arr[i - 1] > arr[i]:\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    heights = [int(i) for i in input().split()]\n\n    print('Yes' if is_ascending(heights) else 'No')\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650241853,
  "object": "edit"
}
2022-04-18 00:31:01.819652 fix syntax errors 4 ["\ndef main():\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    x = int(input())\n    ans = 0\n    for i in range(a+1):\n        for j in range(b+1):\n            for k in range(c+1):\n                if 500*i+100*j+50*k == x:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    heights = list(map(int, input().split()))\n\n    for i in range(1, n - 1):\n        if heights[i - 1] == heights[i]:\n            heights[i] += 1 if heights[i + 1] > heights[i] else -1\n        elif heights[i - 1] > heights[i]:\n            heights[i] += 1 if heights[i + 1] > heights[i] else -1\n        elif heights[i - 1] < heights[i]:\n            heights[i] -= 1 if heights[i + 1] < heights[i] else -1\n\n    for i in range(1, n - 1):\n        if heights[i - 1] > heights[i]:\n            print('No')\n            break\n    else:\n        print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    heights = list(map(int, input().split()))\n\n    for i in range(1, n):\n        if heights[i - 1] > heights[i]:\n            heights[i] += 1\n\n    for i in range(1, n):\n        if heights[i - 1] > heights[i]:\n            print('No')\n            break\n    else:\n        print('Yes')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef is_ascending(arr):\n    for i in range(1, len(arr)):\n        if arr[i - 1] > arr[i]:\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    heights = [int(i) for i in input().split()]\n\n    print('Yes' if is_ascending(heights) else 'No')\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 00:31:01.819787 size on output set 4
