["\n#Solution\nfor _ in range(int(input())):\n    n, a, b = map(int, input().split())\n    x = n // 2\n    y = n % 2\n    cost = x * min(a * 2, b) + y * a\n    print(cost)\n", "\n\nimport sys\n\nq = int(sys.stdin.readline())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in sys.stdin.readline().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n", "\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n    print(min_cost)\n", "\n\nn, m = [int(x) for x in input().split()]\n\narr = [int(x) for x in input().split()]\n\nfor i in range(m):\n    l, r = [int(x) for x in input().split()]\n    print(min(arr[l:r+1]))\n", "#link: https://www.codechef.com/problems/CHEGLOVE\n\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "#Question\n#You are given a number N. You need to find the number of operations required to reach N from 0. You have 2 operations available:\n#Double the number\n#Add one to the number\n#Input:\n#The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer N.\n#Output:\n#For each test case, in a new line, print the minimum number of operations required to reach N from 0.\n#Constraints:\n#1<=T<=100\n#1<=N<=104\n#Example:\n#Input:\n#2\n#8\n#7\n#Output:\n#4\n#5\n\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n"]