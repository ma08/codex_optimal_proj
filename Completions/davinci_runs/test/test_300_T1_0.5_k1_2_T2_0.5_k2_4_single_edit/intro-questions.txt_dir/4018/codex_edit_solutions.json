["\nfrom __future__ import print_function\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    # s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 1\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += 1\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n\n    print(res)\n\nmain()\n", "\n\n\nimport sys\n\nsys.setrecursionlimit(1000000)\n\ndef dfs(i, k):\n    if i == n:\n        return 0\n    if (i, k) in dp:\n        return dp[i, k]\n    ans = 10**9\n    if k & (1 << i):\n        ans = min(ans, dfs(i + 1, k) + n - i)\n    ans = min(ans, dfs(i + 1, k) + 1)\n    if k & (1 << i):\n        ans = min(ans, dfs(i + 1, k ^ (1 << i)) + n - i + 1)\n    ans = min(ans, dfs(i + 1, k ^ (1 << i)) + 2)\n    dp[i, k] = ans\n    return ans\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    global n\n    global dp\n    dp = {}\n    print dfs(0, k)\n        \nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n# coding: utf-8\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in range(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s_ = [c for c in s]\n    s_.sort()\n    s_ = \"\".join(s_)\n    print(s_)\n\n    curr = s_[0]\n    prev = s_[0]\n    res = 0\n    i = 1\n    while i < len(s_):\n        if s_[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = list(s)\n    s.sort(reverse=True)\n    print(\"\".join(s))\n\n    curr = \"\"\n    prev = \"\"\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = sorted(s)\n    curr = s[0]\n    print(curr)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n"]