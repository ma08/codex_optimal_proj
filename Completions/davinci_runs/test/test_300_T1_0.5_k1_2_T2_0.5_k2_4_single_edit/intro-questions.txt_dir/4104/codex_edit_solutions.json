["\ndef main()\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        for j in i:\n            result += int(j)\n        result -= len(i) - 1\n    print(result)\n\nmain()\n", "\n\ndef main():\n    pass\n\nmain()\n", "\ndef main():\n    expression = input()\n    result = eval(expression)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input()\n    result = eval(expression)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    expression = input(\"Enter an expression: \")\n    result = eval(expression) # eval() is a built in function that evaluate an expression\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    expression = input()\n    result = eval(expression)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    expression = input()\n    expression = expression.split('+')\n    result = 0\n    for i in expression:\n        i = i.split('-')\n        result += int(i[0])\n        result -= len(i) - 2\n    print(result)\n\nmain()\n"]