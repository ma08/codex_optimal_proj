2022-04-18 00:14:21.433306 num operations 1
2022-04-18 00:14:21.433327 size on input set 1
2022-04-18 00:14:25.291280 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\n\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650240861,
  "object": "edit"
}
2022-04-18 00:14:25.291551 fix syntax errors 4 ['\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\n\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-18 00:14:25.291602 size on output set 3
2022-04-18 00:14:25.291614 num operations 1
2022-04-18 00:14:25.291620 size on input set 1
2022-04-18 00:14:31.832681 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nfrom itertools import combinations\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n#\n# from itertools import combinations\n#\n# n = int(input())\n# l = sorted(list(map(int, input().split())))\n#\n# count = 0\n# for i in combinations(l, 3):\n#     if i[0] + i[1] > i[2]:\n#         count += 1\n#\n# print(count)\n"
    },
    {
      "index": 3,
      "text": "\n#\n# from itertools import combinations\n#\n# n = int(input())\n# l = sorted(list(map(int, input().split())))\n#\n# count = 0\n# for i in combinations(l, 3):\n#     if i[0] + i[1] > i[2]:\n#         count += 1\n#\n# print(count)\n"
    }
  ],
  "created": 1650240865,
  "object": "edit"
}
2022-04-18 00:14:31.832867 fix syntax errors 4 ['n = int(input())\n\nfrom itertools import combinations\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n', '\n#\n# from itertools import combinations\n#\n# n = int(input())\n# l = sorted(list(map(int, input().split())))\n#\n# count = 0\n# for i in combinations(l, 3):\n#     if i[0] + i[1] > i[2]:\n#         count += 1\n#\n# print(count)\n', '\n#\n# from itertools import combinations\n#\n# n = int(input())\n# l = sorted(list(map(int, input().split())))\n#\n# count = 0\n# for i in combinations(l, 3):\n#     if i[0] + i[1] > i[2]:\n#         count += 1\n#\n# print(count)\n']
2022-04-18 00:14:31.832896 size on output set 3
