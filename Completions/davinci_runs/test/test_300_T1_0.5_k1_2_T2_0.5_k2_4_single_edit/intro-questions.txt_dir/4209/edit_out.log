2022-04-18 00:38:34.298071 num operations 1
2022-04-18 00:38:34.298108 size on input set 1
2022-04-18 00:38:39.662749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i in range(n - 1, -1, -1):\n        if dp[i] == max(dp):\n            print(i - dp[i] + 2, i + 1)\n            break\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef solve(a, n):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a, n)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650242314,
  "object": "edit"
}
2022-04-18 00:38:39.662966 fix syntax errors 4 ["\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i in range(n - 1, -1, -1):\n        if dp[i] == max(dp):\n            print(i - dp[i] + 2, i + 1)\n            break\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a, n):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a, n)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 00:38:39.663010 size on output set 3
2022-04-18 00:38:39.663031 num operations 1
2022-04-18 00:38:39.663037 size on input set 1
2022-04-18 00:38:45.292436 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\\\\n7 7\\\\n2 3\\\\n4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\\\\n3 4\\\\n1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\\\\n4 4\\\\n1 1\\\\n2 2\\\\n3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1650242319,
  "object": "edit"
}
2022-04-18 00:38:45.292877 fix syntax errors 4 ['\n\nimport sys\n\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\\\\n7 7\\\\n2 3\\\\n4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\\\\n3 4\\\\n1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\\\\n4 4\\\\n1 1\\\\n2 2\\\\n3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-18 00:38:45.292963 size on output set 4
