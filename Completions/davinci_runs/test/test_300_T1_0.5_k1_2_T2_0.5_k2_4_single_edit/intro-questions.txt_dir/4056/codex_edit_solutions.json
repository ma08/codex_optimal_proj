["\n# Solution\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\nimport math\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b) \n\nn = int(input()) #input size\na = list(map(int,input().split())) #input array\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\n\n# Solution \n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\nprint(ans)\n", "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "# Solution\n", "\n\nfrom collections import deque\n\nn, q = map(int, input().split())\nquery = [list(map(int, input().split())) for _ in range(q)]\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n", "\n#\n# def gcd(a, b):\n#     if b == 0:\n#         return a\n#     else:\n#         return gcd(b, a % b)\n#\n# def lcm(a, b):\n#     return a * b // gcd(a, b)\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# ans = a[0]\n# for i in range(1, n):\n#     ans = lcm(ans, a[i])\n#\n# print(ans)\n"]