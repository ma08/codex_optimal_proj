["\n\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\n\nprint(odd_count)\n", "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n", "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n", "\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(10 ** 7)\nrl = sys.stdin.readline\n\n\ndef solve():\n    N = int(rl())\n    A = list(map(int, rl().split()))\n    \n    ans = []\n    for ai in A:\n        ans.append(ai)\n        while len(ans) >= 2 and ans[-1] == ans[-2]:\n            ans.pop()\n            ans.pop()\n    print(len(ans))\n\n\nif __name__ == '__main__':\n    solve()\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n", "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(str(odd_count))\n", "N = int(input())\na_list = list(map(int, input().split()))\n\n\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"]