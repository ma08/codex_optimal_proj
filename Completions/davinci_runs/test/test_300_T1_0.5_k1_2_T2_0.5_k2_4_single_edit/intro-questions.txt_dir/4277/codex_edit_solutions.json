["\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n", "\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    return min(N * A, B)\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\n    N, A, B = map(int, sys.stdin.readline().rstrip().split())\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())  # input\n\nprint(min(n * a, b))  # output\n", "\nimport sys\n\ndef min_expense(N, A, B):\n    if N * A <= B:\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n", "\n\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\n\n\nprint(min(n*a, b))\n"]