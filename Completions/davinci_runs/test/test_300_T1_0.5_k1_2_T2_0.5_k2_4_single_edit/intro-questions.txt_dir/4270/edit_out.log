2022-04-18 00:56:43.982892 num operations 1
2022-04-18 00:56:43.982912 size on input set 1
2022-04-18 00:56:51.446771 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(float, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    num_ingredients = int(input())  # 2\n    ingredients = list(map(int, input().split()))  # [4, 5]\n    ingredients.sort()  # [4, 5]\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2  # 4.5\n        ingredients.pop(1)  # [4.5]\n        ingredients.sort()  # [4.5]\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650243404,
  "object": "edit"
}
2022-04-18 00:56:51.447004 fix syntax errors 4 ["\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(float, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredients = int(input())  # 2\n    ingredients = list(map(int, input().split()))  # [4, 5]\n    ingredients.sort()  # [4, 5]\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2  # 4.5\n        ingredients.pop(1)  # [4.5]\n        ingredients.sort()  # [4.5]\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 00:56:51.447032 size on output set 4
2022-04-18 00:56:51.447042 num operations 1
2022-04-18 00:56:51.447048 size on input set 1
2022-04-18 00:57:00.353750 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nimport heapq\n\nheapq.heapify(a)\n\nfor i in range(n-1):\n    x = heapq.heappop(a)\n    y = heapq.heappop(a)\n    heapq.heappush(a, (x+y)/2)\n\nprint(a[0])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(num-1):\n    heapq.heappush(v, (heapq.heappop(v)+heapq.heappop(v))/2)\n\nprint(v[0])\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n"
    }
  ],
  "created": 1650243411,
  "object": "edit"
}
2022-04-18 00:57:00.353950 fix syntax errors 4 ['\n\nimport sys\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nimport heapq\n\nheapq.heapify(a)\n\nfor i in range(n-1):\n    x = heapq.heappop(a)\n    y = heapq.heappop(a)\n    heapq.heappush(a, (x+y)/2)\n\nprint(a[0])\n', '\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(num-1):\n    heapq.heappush(v, (heapq.heappop(v)+heapq.heappop(v))/2)\n\nprint(v[0])\n', 'import sys\n\n', '\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n']
2022-04-18 00:57:00.353991 size on output set 4
