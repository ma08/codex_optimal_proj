2022-04-18 00:07:05.802920 num operations 1
2022-04-18 00:07:05.802941 size on input set 1
2022-04-18 00:07:13.045685 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "\n# coding=utf-8\n\nimport sys\n\n\ndef solve(n, k):\n    return n * (n - 1) // 2 - k\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n, k = map(int, sys.stdin.readline().split())\n        print(solve(n, k))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n    # read the number of test cases\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    },
    {
      "index": 3,
      "text": "import sys\nimport math\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"
    }
  ],
  "created": 1650240425,
  "object": "edit"
}
2022-04-18 00:07:13.045909 fix syntax errors 4 ["\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "\n# coding=utf-8\n\nimport sys\n\n\ndef solve(n, k):\n    return n * (n - 1) // 2 - k\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n, k = map(int, sys.stdin.readline().split())\n        print(solve(n, k))\n", "\n\nimport sys\nimport math\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n    # read the number of test cases\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n", "import sys\nimport math\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return (m - n + 1) * 2\n\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        print(solve(n, m))\n"]
2022-04-18 00:07:13.045951 size on output set 4
2022-04-18 00:07:13.045962 num operations 1
2022-04-18 00:07:13.045967 size on input set 1
2022-04-18 00:07:18.549579 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())  # split the input\n        if n == 1:\n            print(0)  # if n is 1\n        else:\n            print(max(2 * m - n, n - 2 * m))  # otherwise\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            if m * 2 >= n:\n                print(n - m * 2)\n            else:\n                print(m * 2 - n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650240433,
  "object": "edit"
}
2022-04-18 00:07:18.549818 fix syntax errors 4 ["\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            print(max(2 * m - n, n - 2 * m))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())  # split the input\n        if n == 1:\n            print(0)  # if n is 1\n        else:\n            print(max(2 * m - n, n - 2 * m))  # otherwise\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        if n == 1:\n            print(0)\n        else:\n            if m * 2 >= n:\n                print(n - m * 2)\n            else:\n                print(m * 2 - n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 00:07:18.549848 size on output set 3
