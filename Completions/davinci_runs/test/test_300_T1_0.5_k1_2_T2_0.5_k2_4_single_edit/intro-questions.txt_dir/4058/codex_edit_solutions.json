["\n\nimport sys\n\ndef main():\n    a, b, c, d, e, f = map(int, sys.stdin.readline().split())\n    max_s = (a + b + c) / 2\n    max_w = (d + e + f) / 2\n    if max_s >= max_w:\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i-1] == 0:\n            j = i+1\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i > 2*r:\n                return -1\n            a[j-1] = 1\n            ans += 1\n            i = j - 1\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split()) # n = number of houses, r = radius\n    a = list(map(int, sys.stdin.readline().split())) # a = list of houses\n    heaters = []\n    for i in range(n):\n        if a[i] == 1: # if house is heater\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n) # add house n as heater\n    heaters.insert(0, -r) # add house -r as heater\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i) # if heaters overlap, delete one\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    #while i <= n:\n    #    if a[i-1] == 0:\n    #        j = i\n    #        while j <= n and a[j-1] == 0:\n    #            j += 1\n    #        if j - i + 1 > 2*r:\n    #            return -1\n    #        if j <= n:\n    #            a[j-1] = 1\n    #            ans += 1\n    #        else:\n    #            return -1\n    #        i = j\n    #    else:\n    #        i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()] # n: \u6570\u5217\u306e\u9577\u3055, r: \u534a\u5f84\n    a = [int(x) for x in input().split()] # a: \u6570\u5217\n    return n, r, a # \u6570\u5217\u306e\u9577\u3055, \u534a\u5f84, \u6570\u5217\n\ndef solve(n, r, a):\n    ans = 0 # \u30a2\u30f3\u30c6\u30ca\u306e\u6570\n    i = 1 # \u5148\u982d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n    while i <= n:\n        if a[i-1] == 0: # \u6570\u5217\u306ei\u756a\u76ee\u304c0\u306a\u3089\n            j = i # j\u3092i\u3068\u3059\u308b\n            while j <= n and a[j-1] == 0: # j\u304cn\u4ee5\u5185\u304b\u3064j\u756a\u76ee\u304c0\u306a\u3089\n                j += 1\n            if j - i + 1 > 2*r: # i\u304b\u3089j\u307e\u3067\u306e\u8ddd\u96e2\u304c2r\u3092\u8d85\u3048\u308b\u306a\u3089\n                return -1\n            if j <= n: # j\u304cn\u4ee5\u4e0b\u306a\u3089\n                a[j-1] = 1 # j\u756a\u76ee\u30921\u306b\u3059\u308b\n                ans += 1 # \u30a2\u30f3\u30c6\u30ca\u30921\u500b\u5897\u3084\u3059\n            else:\n                return -1\n            i = j # i\u3092j\u3068\u3059\u308b\n        else: # \u6570\u5217\u306ei\u756a\u76ee\u304c0\u3067\u306a\u3044\u306a\u3089\n            i += 1\n    return ans # \u30a2\u30f3\u30c6\u30ca\u306e\u6570\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r and i != 1:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]