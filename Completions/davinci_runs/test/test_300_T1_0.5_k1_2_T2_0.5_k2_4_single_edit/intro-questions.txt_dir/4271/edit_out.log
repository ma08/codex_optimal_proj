2022-04-18 00:57:00.733477 num operations 1
2022-04-18 00:57:00.733499 size on input set 1
2022-04-18 00:57:17.324618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\na, b, c = map(int, input().split())\n\n\ndef f(x):\n    return a * x + b * math.sin(c * x * math.pi)\n\n\ndef f_inverse(x):\n    return ((x - b * math.sin(c * math.pi)) / a) / (c * math.pi)\n\n\ndef binary_search(l, r, f, target):\n    while l < r:\n        c = (l + r) / 2\n        if f(c) >= target:\n            r = c\n        else:\n            l = c\n    return l\n\n\ndef ternary_search(l, r, f, target):\n    while r - l > 1e-9:\n        c1 = (2 * l + r) / 3\n        c2 = (l + 2 * r) / 3\n        if f(c1) > f(c2):\n            l = c1\n        else:\n            r = c2\n    return (l + r) / 2\n\n\ndef ternary_search_inverse(l, r, f, target):\n    while r - l > 1e-9:\n        c1 = (2 * l + r) / 3\n        c2 = (l + 2 * r) / 3\n        if f(c1) > target:\n            l = c1\n        else:\n            r = c2\n    return (l + r) / 2\n\n\ndef calc_area(l, r, f):\n    return (f(r) + f(l)) * (r - l) / 2\n\n\nl = 0\nr = 100\nprint(ternary_search_inverse(l, r, f_inverse, 100))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n# Complete the breakingRecords function below.\ndef breakingRecords(scores):\n    min_score = scores[0]\n    max_score = scores[0]\n\n    min_count = 0\n    max_count = 0\n\nprint(ans)\n"
    }
  ],
  "created": 1650243420,
  "object": "edit"
}
2022-04-18 00:57:17.324833 fix syntax errors 4 ['\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\n\nimport math\n\na, b, c = map(int, input().split())\n\n\ndef f(x):\n    return a * x + b * math.sin(c * x * math.pi)\n\n\ndef f_inverse(x):\n    return ((x - b * math.sin(c * math.pi)) / a) / (c * math.pi)\n\n\ndef binary_search(l, r, f, target):\n    while l < r:\n        c = (l + r) / 2\n        if f(c) >= target:\n            r = c\n        else:\n            l = c\n    return l\n\n\ndef ternary_search(l, r, f, target):\n    while r - l > 1e-9:\n        c1 = (2 * l + r) / 3\n        c2 = (l + 2 * r) / 3\n        if f(c1) > f(c2):\n            l = c1\n        else:\n            r = c2\n    return (l + r) / 2\n\n\ndef ternary_search_inverse(l, r, f, target):\n    while r - l > 1e-9:\n        c1 = (2 * l + r) / 3\n        c2 = (l + 2 * r) / 3\n        if f(c1) > target:\n            l = c1\n        else:\n            r = c2\n    return (l + r) / 2\n\n\ndef calc_area(l, r, f):\n    return (f(r) + f(l)) * (r - l) / 2\n\n\nl = 0\nr = 100\nprint(ternary_search_inverse(l, r, f_inverse, 100))\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', 'import math\nimport os\nimport random\nimport re\nimport sys\n\n\n# Complete the breakingRecords function below.\ndef breakingRecords(scores):\n    min_score = scores[0]\n    max_score = scores[0]\n\n    min_count = 0\n    max_count = 0\n\nprint(ans)\n']
2022-04-18 00:57:17.324872 size on output set 3
2022-04-18 00:57:17.324882 num operations 1
2022-04-18 00:57:17.324888 size on input set 1
2022-04-18 00:57:22.243820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1 and dish != 0:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\nprint(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 2,
      "text": "\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 3,
      "text": "\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1650243437,
  "object": "edit"
}
2022-04-18 00:57:22.244014 fix syntax errors 4 ['\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1 and dish != 0:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\nprint(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n \nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n']
2022-04-18 00:57:22.244129 size on output set 3
