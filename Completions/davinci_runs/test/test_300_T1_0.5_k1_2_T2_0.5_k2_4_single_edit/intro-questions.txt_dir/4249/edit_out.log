2022-04-18 00:51:15.587381 num operations 1
2022-04-18 00:51:15.587401 size on input set 1
2022-04-18 00:51:19.937184 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    },
    {
      "index": 2,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m or cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    },
    {
      "index": 3,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n"
    }
  ],
  "created": 1650243075,
  "object": "edit"
}
2022-04-18 00:51:19.937437 fix syntax errors 4 ['\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m or cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ncups = 0\npages = 0\ndays = 0\n\nwhile cups < n:\n    pages += a[cups]\n    days += 1\n    cups += 1\n    if pages >= m:\n        break\n    if cups < n:\n        pages -= days - 1\n\nif pages < m:\n    days = -1\n\nprint(days)\n']
2022-04-18 00:51:19.937483 size on output set 4
2022-04-18 00:51:19.937508 num operations 1
2022-04-18 00:51:19.937513 size on input set 1
2022-04-18 00:51:50.202576 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left <= right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    return left if get_pages_written_for_n_days(cups, left) >= m else -1\n\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n\n    left = 1\n    right = n\n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n    return pages\n\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n + 1):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n"
    },
    {
      "index": 3,
      "text": "n, m = map(int, input().split())\n\n\n#cups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\n#def get_pages_written(cups, day):\n#    if day == 0:\n#        return cups[0]\n#    else:\n#        return cups[day] - day\n\n#def get_pages_written_for_day(cups, day):\n#    pages = 0\n#    for i in range(day+1):\n#        pages += get_pages_written(cups, i)\n#    return pages\n\n#def get_pages_written_for_n_days(cups, n):\n#    pages = 0\n#    for i in range(n):\n#        pages += get_pages_written_for_day(cups, i)\n#    return pages\n\n#def get_min_days(cups, m):\n#    if get_pages_written_for_n_days(cups, 1) >= m:\n#        return 1\n#    left = 1\n#    right = n\n#    while left < right:\n#        mid = (left + right) // 2\n#        if get_pages_written_for_n_days(cups, mid) >= m:\n#            right = mid\n#        else:\n#            left = mid + 1\n#    if get_pages_written_for_n_days(cups, left) >= m:\n#        return left\n#    else:\n#        return -1\n\n#print(get_min_days(cups, m))\n\n#def get_pages_written(cups, day):\n#    if day == 0:\n#        return cups[0]\n#    else:\n#        return cups[day] - day\n#\n#def get_pages_written_for_day(cups, day):\n#    pages = 0\n#    for i in range(day+1):\n#        pages += get_pages_written(cups, i)\n#    return pages\n#\n#def get_pages_written_for_n_days(cups, n):\n#    pages = 0\n#    for i in range(n):\n#        pages += get_pages_written_for_day(cups, i)\n#    return pages\n#\n#def get_min_days(cups, m):\n#    if get_pages_written_for_n_days(cups, 1) >= m:\n#        return 1\n#    left = 1\n#    right = n\n#    while left < right:\n#        mid = (left + right) // 2\n#        if get_pages_written_for_n_days(cups, mid) >= m:\n#            right = mid\n#        else:\n#            left = mid + 1\n#    if get_pages_written_for_n_days(cups, left) >= m:\n#        return left\n#    else:\n#        return -1\n#\n#print(get_min_days(cups, m))\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += cups[i] - i\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(list(map(int, input().split())), m))\n"
    }
  ],
  "created": 1650243079,
  "object": "edit"
}
2022-04-18 00:51:50.202865 fix syntax errors 4 ['\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left <= right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    return left if get_pages_written_for_n_days(cups, left) >= m else -1\n\n\nprint(get_min_days(cups, m))\n', '\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n\n    left = 1\n    right = n\n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\n\nprint(get_min_days(cups, m))\n', '\nn, m = map(int, input().split())\ncups = list(map(int, input().split()))\n\n# sorted_cups = sorted(cups, reverse=True)\n\n\ndef get_pages_written(cups, day):\n    if day == 0:\n        return cups[0]\n    else:\n        return cups[day] - day\n\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day + 1):\n        pages += get_pages_written(cups, i)\n    return pages\n\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n + 1):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(cups, m))\n', 'n, m = map(int, input().split())\n\n\n#cups = list(map(int, input().split()))\n\n#sorted_cups = sorted(cups, reverse=True)\n\n#def get_pages_written(cups, day):\n#    if day == 0:\n#        return cups[0]\n#    else:\n#        return cups[day] - day\n\n#def get_pages_written_for_day(cups, day):\n#    pages = 0\n#    for i in range(day+1):\n#        pages += get_pages_written(cups, i)\n#    return pages\n\n#def get_pages_written_for_n_days(cups, n):\n#    pages = 0\n#    for i in range(n):\n#        pages += get_pages_written_for_day(cups, i)\n#    return pages\n\n#def get_min_days(cups, m):\n#    if get_pages_written_for_n_days(cups, 1) >= m:\n#        return 1\n#    left = 1\n#    right = n\n#    while left < right:\n#        mid = (left + right) // 2\n#        if get_pages_written_for_n_days(cups, mid) >= m:\n#            right = mid\n#        else:\n#            left = mid + 1\n#    if get_pages_written_for_n_days(cups, left) >= m:\n#        return left\n#    else:\n#        return -1\n\n#print(get_min_days(cups, m))\n\n#def get_pages_written(cups, day):\n#    if day == 0:\n#        return cups[0]\n#    else:\n#        return cups[day] - day\n#\n#def get_pages_written_for_day(cups, day):\n#    pages = 0\n#    for i in range(day+1):\n#        pages += get_pages_written(cups, i)\n#    return pages\n#\n#def get_pages_written_for_n_days(cups, n):\n#    pages = 0\n#    for i in range(n):\n#        pages += get_pages_written_for_day(cups, i)\n#    return pages\n#\n#def get_min_days(cups, m):\n#    if get_pages_written_for_n_days(cups, 1) >= m:\n#        return 1\n#    left = 1\n#    right = n\n#    while left < right:\n#        mid = (left + right) // 2\n#        if get_pages_written_for_n_days(cups, mid) >= m:\n#            right = mid\n#        else:\n#            left = mid + 1\n#    if get_pages_written_for_n_days(cups, left) >= m:\n#        return left\n#    else:\n#        return -1\n#\n#print(get_min_days(cups, m))\n\ndef get_pages_written_for_day(cups, day):\n    pages = 0\n    for i in range(day+1):\n        pages += cups[i] - i\n    return pages\n\ndef get_pages_written_for_n_days(cups, n):\n    pages = 0\n    for i in range(n):\n        pages += get_pages_written_for_day(cups, i)\n    return pages\n\ndef get_min_days(cups, m):\n    if get_pages_written_for_n_days(cups, 1) >= m:\n        return 1\n    left = 1\n    right = n\n    while left < right:\n        mid = (left + right) // 2\n        if get_pages_written_for_n_days(cups, mid) >= m:\n            right = mid\n        else:\n            left = mid + 1\n    if get_pages_written_for_n_days(cups, left) >= m:\n        return left\n    else:\n        return -1\n\nprint(get_min_days(list(map(int, input().split())), m))\n']
2022-04-18 00:51:50.202930 size on output set 4
