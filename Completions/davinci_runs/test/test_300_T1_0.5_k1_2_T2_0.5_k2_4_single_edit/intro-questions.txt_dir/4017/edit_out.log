2022-04-17 23:43:27.379206 num operations 1
2022-04-17 23:43:27.379227 size on input set 1
2022-04-17 23:43:33.462248 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\ndef is_good(a): # is_good checks if the given array is good\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(1, len(a)):\n        if a[i] == sum(a[:i]) - sum(a[i:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]) or is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n"
    }
  ],
  "created": 1650239007,
  "object": "edit"
}
2022-04-17 23:43:33.462524 fix syntax errors 4 ['\nn = int(input())\na = list(map(int, input().split()))\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\ndef is_good(a): # is_good checks if the given array is good\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\nprint(len(res))\nprint(*res)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(len(a)):\n        if a[i] == sum(a[:i]) + sum(a[i+1:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\ndef is_good(a):\n    for i in range(1, len(a)):\n        if a[i] == sum(a[:i]) - sum(a[i:]):\n            return True\n    return False\n\nres = []\nfor i in range(n):\n    if is_good(a[:i] + a[i+1:]) or is_good(a[:i] + a[i+1:]):\n        res.append(i+1)\n\nprint(len(res))\nprint(*res)\n']
2022-04-17 23:43:33.462589 size on output set 4
2022-04-17 23:43:33.462601 num operations 1
2022-04-17 23:43:33.462607 size on input set 1
2022-04-17 23:43:46.753105 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices_2 = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices_4 = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 8\nindices_8 = [i for i, x in enumerate(a) if x == 8]\n\n# find indices of all elements with value of 16\nindices_16 = [i for i, x in enumerate(a) if x == 16]\n\n# find indices of all elements with value of 32\nindices_32 = [i for i, x in enumerate(a) if x == 32]\n\n# find indices of all elements with value of 64\nindices_64 = [i for i, x in enumerate(a) if x == 64]\n\n# find indices of all elements with value of 128\nindices_128 = [i for i, x in enumerate(a) if x == 128]\n\n# find indices of all elements with value of 256\nindices_256 = [i for i, x in enumerate(a) if x == 256]\n\n# find indices of all elements with value of 512\nindices_512 = [i for i, x in enumerate(a) if x == 512]\n\n# find indices of all elements with value of 1024\nindices_1024 = [i for i, x in enumerate(a) if x == 1024]\n\n# find indices of all elements with value of 2048\nindices_2048 = [i for i, x in enumerate(a) if x == 2048]\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n"
    }
  ],
  "created": 1650239013,
  "object": "edit"
}
2022-04-17 23:43:46.753290 fix syntax errors 4 ['n = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices_2 = [i for i, x in enumerate(a) if x == 2]\n\n# find indices of all elements with value of 4\nindices_4 = [i for i, x in enumerate(a) if x == 4]\n\n# find indices of all elements with value of 8\nindices_8 = [i for i, x in enumerate(a) if x == 8]\n\n# find indices of all elements with value of 16\nindices_16 = [i for i, x in enumerate(a) if x == 16]\n\n# find indices of all elements with value of 32\nindices_32 = [i for i, x in enumerate(a) if x == 32]\n\n# find indices of all elements with value of 64\nindices_64 = [i for i, x in enumerate(a) if x == 64]\n\n# find indices of all elements with value of 128\nindices_128 = [i for i, x in enumerate(a) if x == 128]\n\n# find indices of all elements with value of 256\nindices_256 = [i for i, x in enumerate(a) if x == 256]\n\n# find indices of all elements with value of 512\nindices_512 = [i for i, x in enumerate(a) if x == 512]\n\n# find indices of all elements with value of 1024\nindices_1024 = [i for i, x in enumerate(a) if x == 1024]\n\n# find indices of all elements with value of 2048\nindices_2048 = [i for i, x in enumerate(a) if x == 2048]\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# find indices of all elements with value of 2\nindices = [i for i, x in enumerate(a) if x == 2]\n']
2022-04-17 23:43:46.753327 size on output set 4
