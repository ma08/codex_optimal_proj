2022-04-17 23:49:43.527031 num operations 1
2022-04-17 23:49:43.527053 size on input set 1
2022-04-17 23:49:49.408948 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    print(sys.argv)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef read_file(filename):\n    with open(filename) as f:\n        lines = f.readlines()\n        return lines\n\ndef write_file(filename, lines):\n    with open(filename, 'w') as f:\n        f.writelines(lines)\n\ndef sort_lines(lines):\n    return sorted(lines)\n\ndef main():\n    filename = 'file.txt'\n    lines = read_file(filename)\n    lines = sort_lines(lines)\n    write_file(filename, lines)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650239383,
  "object": "edit"
}
2022-04-17 23:49:49.409162 fix syntax errors 4 ['\nimport sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    print(sys.argv)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef read_file(filename):\n    with open(filename) as f:\n        lines = f.readlines()\n        return lines\n\ndef write_file(filename, lines):\n    with open(filename, \'w\') as f:\n        f.writelines(lines)\n\ndef sort_lines(lines):\n    return sorted(lines)\n\ndef main():\n    filename = \'file.txt\'\n    lines = read_file(filename)\n    lines = sort_lines(lines)\n    write_file(filename, lines)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 23:49:49.409198 size on output set 4
2022-04-17 23:49:49.409209 num operations 1
2022-04-17 23:49:49.409215 size on input set 1
2022-04-17 23:49:55.069475 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r: \n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0:\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0:\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1], reverse=True)\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650239389,
  "object": "edit"
}
2022-04-17 23:49:55.069674 fix syntax errors 4 ['\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r: \n            print("NO")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0:\n            print("NO")\n            sys.exit()\n\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print("NO")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0:\n            print("NO")\n            sys.exit()\n\n    print("YES")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1], reverse=True)\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print("NO")\n            sys.exit()\n        r += projects[i][1]\n\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n    for i in range(n):\n        if projects[i][0] > r:\n            print("NO")\n            sys.exit()\n        r += projects[i][1]\n\n    print("YES")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-17 23:49:55.069708 size on output set 4
