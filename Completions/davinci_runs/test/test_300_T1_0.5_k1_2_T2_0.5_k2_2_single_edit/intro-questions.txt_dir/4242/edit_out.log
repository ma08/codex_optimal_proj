2022-04-17 21:38:30.718156 num operations 1
2022-04-17 21:38:30.718175 size on input set 1
2022-04-17 21:38:37.844713 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math, fractions\n\ndef gcd(a,b):\n    return fractions.gcd(a,b)\n\na, b, k = map(int, input().split())\n\ng = gcd(a, b)\n\ndivisors = []\nfor i in range(1, int(math.sqrt(g)) + 1):\n    if g % i == 0:\n        divisors.append(i)\n        if i != g // i:\n            divisors.append(g // i)\n\ndivisors.sort(reverse=True)\n\nprint(divisors[k - 1])\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\na, b, k = map(int, input().split())\n\ng = gcd(a, b)\n\ndivisors = []\nfor i in range(1, int(math.sqrt(g)) + 1):\n    if g % i == 0:\n        divisors.append(i)\n        if i != g // i:\n            divisors.append(g // i)\n\ndivisors.sort(reverse=True)\n\nprint(divisors[k - 1])\n"
    }
  ],
  "created": 1650231510,
  "object": "edit"
}
2022-04-17 21:38:37.844913 fix syntax errors 2 ['import math, fractions\n\ndef gcd(a,b):\n    return fractions.gcd(a,b)\n\na, b, k = map(int, input().split())\n\ng = gcd(a, b)\n\ndivisors = []\nfor i in range(1, int(math.sqrt(g)) + 1):\n    if g % i == 0:\n        divisors.append(i)\n        if i != g // i:\n            divisors.append(g // i)\n\ndivisors.sort(reverse=True)\n\nprint(divisors[k - 1])\n', '#!/usr/bin/env python3\n\nimport math\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n    return a\n\na, b, k = map(int, input().split())\n\ng = gcd(a, b)\n\ndivisors = []\nfor i in range(1, int(math.sqrt(g)) + 1):\n    if g % i == 0:\n        divisors.append(i)\n        if i != g // i:\n            divisors.append(g // i)\n\ndivisors.sort(reverse=True)\n\nprint(divisors[k - 1])\n']
2022-04-17 21:38:37.844951 size on output set 2
2022-04-17 21:38:37.844968 num operations 1
2022-04-17 21:38:37.844978 size on input set 1
2022-04-17 21:38:42.214343 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nA, B, K = map(int, input().split())\n\ndef prime_factorization(n):\n    factors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        while n % i == 0:\n            n //= i\n            factors.append(i)\n    return factors\n\ndef find_num(a, b, k):\n    a_factors = prime_factorization(a)\n    b_factors = prime_factorization(b)\n    common_factors = list(set(a_factors) & set(b_factors))\n    return common_factors[-K]\n\nprint(find_num(a, b, k))\n"
    },
    {
      "index": 1,
      "text": "import math\n\nA, B, K = map(int, input().split())\n\ndef prime_factorization(n):\n    factors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        while n % i == 0:\n            n //= i\n            factors.append(i)\n    return factors\n\ndef find_num(a, b, K):\n    a_factors = prime_factorization(a)\n    b_factors = prime_factorization(b)\n    common_factors = list(set(a_factors) & set(b_factors))\n    return common_factors[-K]\n\nprint(find_num(a, b, K))\n"
    }
  ],
  "created": 1650231517,
  "object": "edit"
}
2022-04-17 21:38:42.214526 fix syntax errors 2 ['import math\n\nA, B, K = map(int, input().split())\n\ndef prime_factorization(n):\n    factors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        while n % i == 0:\n            n //= i\n            factors.append(i)\n    return factors\n\ndef find_num(a, b, k):\n    a_factors = prime_factorization(a)\n    b_factors = prime_factorization(b)\n    common_factors = list(set(a_factors) & set(b_factors))\n    return common_factors[-K]\n\nprint(find_num(a, b, k))\n', 'import math\n\nA, B, K = map(int, input().split())\n\ndef prime_factorization(n):\n    factors = []\n    for i in range(2, int(math.sqrt(n)) + 1):\n        while n % i == 0:\n            n //= i\n            factors.append(i)\n    return factors\n\ndef find_num(a, b, K):\n    a_factors = prime_factorization(a)\n    b_factors = prime_factorization(b)\n    common_factors = list(set(a_factors) & set(b_factors))\n    return common_factors[-K]\n\nprint(find_num(a, b, K))\n']
2022-04-17 21:38:42.214554 size on output set 2
