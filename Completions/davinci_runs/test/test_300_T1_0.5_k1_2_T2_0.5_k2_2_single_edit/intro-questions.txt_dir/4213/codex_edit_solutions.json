["# -*- coding: utf-8 -*-\n\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x: x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n", "\n# \uc815\ub82c\ud558\uae30\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\n\nA.sort()\n\nprint(A[N-1] - A[0])\n", "\n\nimport sys, heapq\n\nN, K = map(int, sys.stdin.readline().rstrip().split())\nA = list(map(lambda x: int(x) * -1, sys.stdin.readline().rstrip().split()))\n\nheapq.heapify(A)\nfor i in range(K):\n    print(heapq.heappop(A) * -1)\n\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\n# 2\u6b21\u5143\u914d\u5217\u306b\u307e\u3068\u3081\u308b\nA_list = []\nfor i in range(N):\n    A_list.append([A[i], i])\n\n# \u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\nA_list.sort(key=lambda x:x[0])\n\n# \u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u306e\u7d76\u5bfe\u5024\u3092\u6c42\u3081\u308b\nmin_value = A_list[0][1]\nmax_value = A_list[-1][1]\n\nprint(max(max_value-min_value, N-1-min_value+max_value))\n"]