2022-04-09 18:45:08.527980 """
A string $s$ of length $n$ can be encrypted by the following algorithm:  iterate over all divisors of $n$ in decreasing order (i.e. from $n$ to $1$),  for each divisor $d$, reverse the substring $s[1 \dots d]$ (i.e. the substring which starts at position $1$ and ends at position $d$). 

For example, the above algorithm applied to the string $s$="codeforces" leads to the following changes: "codeforces" $\to$ "secrofedoc" $\to$ "orcesfedoc" $\to$ "rocesfedoc" $\to$ "rocesfedoc" (obviously, the last reverse operation doesn't change the string because $d=1$).

You are given the encrypted string $t$. Your task is to decrypt this string, i.e., to find a string $s$ such that the above algorithm results in string $t$. It can be proven that this string $s$ always exists and is unique.


-----Input-----

The first line of input consists of a single integer $n$ ($1 \le n \le 100$) â€” the length of the string $t$. The second line of input consists of the string $t$. The length of $t$ is $n$, and it consists only of lowercase Latin letters.


-----Output-----

Print a string $s$ such that the above algorithm results in $t$.


-----Examples-----
Input
10
rocesfedoc

Output
codeforces

Input
16
plmaetwoxesisiht

Output
thisisexampletwo

Input
1
z

Output
z



-----Note-----

The first example is described in the problem statement.
"""
2022-04-09 18:45:08.528048 --------------------------
2022-04-09 18:45:16.481054 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\nt = input()\n\ns = [\"\"] * n\n\n# reverse the string\nt = t[::-1]\n\nfor i in reversed(range(1, n + 1)):\n    if n % i == 0:\n        # reverse the substring\n        t = t[:i][::-1] + t[i:]\n\nprint(t)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef s(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = s(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nmain()"
    }
  ],
  "created": 1649544309,
  "id": "cmpl-4vE7J4AZ78vAMUndLHr9JdjWpXz9C",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 18:45:16.481459 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\nt = input()\n\ns = [\"\"] * n\n\n# reverse the string\nt = t[::-1]\n\nfor i in reversed(range(1, n + 1)):\n    if n % i == 0:\n        # reverse the substring\n        t = t[:i][::-1] + t[i:]\n\nprint(t)"
}
2022-04-09 18:45:16.481546 REASON stop
2022-04-09 18:45:16.494035 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef s(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = s(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nmain()"
}
2022-04-09 18:45:16.494195 REASON stop
