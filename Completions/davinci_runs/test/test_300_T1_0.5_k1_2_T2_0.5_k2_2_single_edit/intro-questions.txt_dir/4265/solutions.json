["S = input()\nT = input()\ntigau = 0\n\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    tigau += 1\n\nprint(tigau)", "\ns = input()\nt = input()\n\nans = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n", "s = input()\nt = input()\n\ncount = 0\nfor i,j in enumerate(s):\n  if j != t[i]:\n    count += 1\nprint(count)", "s = input()\nt = input()\nans = 0\n\nfor i in range(len(s)):\n  if s[i] != t[i]:\n    ans += 1\n  \nprint(ans)", "s = input()\nt = input()\ncount = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        count += 1\nprint(count)", "s = input() \nt = input()\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)", "s = list(input())\nt = list(input())\nans = 0\nfor i in range(len(s)) :\n    if s[i] != t[i] :\n        s[i] = t[i]\n        ans += 1\nprint(ans)", "def main():\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = str(input())\nT = str(input())\n\n\nresult = 0\n\nfor i in range(len(T)):\n    \n    if S[i] !=T[i]:\n        result+=1\n        \n        \nprint(result)", "S=input()\nT=input()\n\nN=len(S)\n\nans=0\nfor i in range(N):\n    if S[i]!=T[i]:\n        ans+=1\nprint(ans)", "#                               #\n    # author : samars_diary #\n    # 17-09-2020 \u2502 20:30:32 #\n#                               #\n\nimport sys, os.path\n\n#if(os.path.exists('input.txt')):\n    #sys.stdin = open('input.txt',\"r\")\n    #sys.stdout = open('output.txt',\"w\")\n\nsys.setrecursionlimit(10 ** 5)\n\ndef mod(): return 10**9+7\ndef i(): return sys.stdin.readline().strip()\ndef ii(): return int(sys.stdin.readline())\ndef li(): return list(sys.stdin.readline().strip())\ndef mii(): return map(int, sys.stdin.readline().split())\ndef lii(): return list(map(int, sys.stdin.readline().strip().split()))\n\n#print=sys.stdout.write\n\ndef solve():\n    a=li();b=li();c=0\n    for i in range(len(a)):\n        if a[i]!=b[i]:\n            c+=1\n    print(c)\nfor _ in range(1):\n    solve()", "S = input()\nT = input()\n\nl = len(S)\ncount = 0\n\nfor i in range(l):\n    if S[i] != T[i]:\n        count += 1\nprint(count)", "S = input()\nT = input()\np = 0\n\nfor i in range(0,len(S)):\n    if S[i] == T[i]:\n        pass\n    else:\n        p += 1\n\nprint(p)", "S = input()\nT = input()\ncount = 0\n\nfor s, t in zip(S, T):\n    if s != t:\n        count += 1\n\nprint(count)", "def main():\n    s = input()\n    t = input()\n    ans = 0\n    \n    for i, j in zip(s, t):\n        if i != j:\n            ans += 1\n    print(ans)\n        \n        \ndef __starting_point():\n    main()\n__starting_point()", "s = input()\nt = input()\nn = len(s)\nans = 0;\nfor i in range(n):\n    if(s[i] != t[i]):\n        ans += 1\nprint(ans)        \n", "str1 = input()\nstr2 = input()\n\nidx = 0\ncnt = 0\nfor _ in range(len(str1)):\n    if str1[idx] != str2[idx]:\n        cnt += 1\n    idx += 1\n\nprint(cnt)", "s = input()\nt = input()\n\ncount = 0\n\nfor i in range(len(s)):\n  if s[i] != t[i]:\n    count += 1\n\nprint(count)\n", "S = input()\nT = input()\n\nprint((sum(i != j for i,j in zip(S,T))))\n", "\nS = input()\nT = input()\n\ncount = 0\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        count += 1\nprint(count)", "S = input()\nT = input()\nl = len(S)\nC = 0\nfor i in range(l):\n  if not S[i]==T[i]:\n    C = C +1\nprint(C)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Sep 18 19:19:52 2020\n\n@author: ezwry\n\"\"\"\n\ns=list(input())\nt=list(input())\nu=len(s)\nans=0\nfor i in range(u):\n    if s[i] != t[i]:\n        ans+=1\n    \nprint(ans)", "s=input()\nt=input()\ncount=0\nfor i in range(len(s)):\n  if s[i]!=t[i]:\n    count+=1\nprint(count)", "s = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n  if s[i] != t[i]:\n    ans += 1\nprint(ans)", "S = list(input())\nT = list(input())\ncount = len(S)\nans = 0\n\nfor i in range(count):\n  if S[i] != T[i]:\n    ans += 1\n  else: \n    pass\n\nprint(ans)", "S=input()\nT=input()\n\ncount=0\n\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    count+=1\nprint(count)", "S = str(input())\nT = str(input())\ncnt = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    cnt += 1\nprint(cnt)", "s = input()\nt = input()\ncount=0\nfor i in range(len(s)):\n  if(s[i]!=t[i]):\n    count+=1\nprint(count)", "S = input()\nT = input()\n\nD = 0\n\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        D += 1\n\nprint(D)", "s=input()\nt=input()\nans=0\nfor i in range(len(t)):\n    if s[i]!=t[i]:\n        ans+=1\nprint(ans)\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#import sympy\n#from scipy.sparse.csgraph import breadth_first_order, depth_first_order, shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nS = ns()\nT = ns()\nans = 0\nfor s, t in zip(S, T):\n    if s != t:\n        ans += 1\nprint(ans)", "S,T = input(),input()\ncount=0\nfor i,j in zip(S,T):\n  if i!=j:count+=1\nprint(count)", "s = list(input())\nt = list(input())\n\ncount = 0\nfor i in range(len(s)) :\n    if s[i]==t[i] :\n        continue\n    elif s[i]!=t[i] :\n        t[i] = s[i]\n        count += 1\n        \nprint(count)", "s=input()\nt=input()\n\ncot = 0\nfor i in range(len(s)):\n    if s[i] == t[i]:\n        cot += 1\nprint(len(s)-cot)  ", "s=input(); t=input();\nprint(sum([s[i]!=t[i] for i in range(len(s))]))", "s=input()\nt=input()\ncount=0\nfor i in range(0,len(s)):\n    if(s[i]==t[i]):\n        continue\n    else:\n        count+=1\nprint(count)", "s=list(input())\nt=list(input())\nans=0\nfor i in range(len(s)):\n    if(t[i]!=s[i]):\n        t[i]=s[i]\n        ans+=1\nprint(ans)", "S=input()\nT=input()\nR=len(S)\nA=0\nfor k in range(R) :\n    if S[k-1]!=T[k-1]:\n        A+=1\nprint(A)", "s = str(input())\nt = str(input())\nl = len(s)\nc = 0\nfor i in range(l):\n    if s[i] != t[i]:\n        c += 1\nprint(c)\n", "n = str(input())\nm = str(input())\nans = 0\nfor i in range(len(n)):\n    if n[i] != m[i]:\n        ans+=1\nprint(ans)", "s = input()\nt = input()\ncnt = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        cnt += 1\n\nprint(cnt)\n", "S, T = input(), input()\ncnt = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    cnt += 1\nprint(cnt)", "S=input()\nT=input()\n\ncount=0\nfor i in range(len(S)):\n\tif S[i]!=T[i]:\n\t\tcount+=1\nprint(count)", "print(sum(x != y for x, y in zip(input(), input())))", "s=input()\nt=input()\nn=len(s)\ncnt=0\nfor i in range(n):\n    if s[i]!=t[i]:\n        cnt+=1\nprint(cnt)", "S = input()\nT = input()\ncount = 0\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        count = count + 1\nprint(count)", "s = input()\nt = input()\nif s == t:\n    print((0))\nelse:\n    p = -1\n    ans = 0\n    for i in s:\n        p += 1\n        if i != t[p]:\n            ans += 1\n    print(ans)\n", "s = input()\nt = input()\nln = len(s)\ncnt = 0\nfor i in range(ln):\n    if s[i] != t[i]:\n        cnt += 1\nprint(cnt)\n", "S = input()\nT = input()\nretval = len(S)\nfor i in range(len(S)):\n  if(S[i]==T[i]):\n    retval-=1\nprint(retval)", "print(sum(s!=t for s,t in zip(*open(0))))", "def function():\n\tpass\n\tS=input()\n\tT=input()\n\n\tcount=0\n\tfor i in range(len(S)):\n\t\tif S[i]!=T[i]:\n\t\t\tcount+=1\n\tprint(count)\n\nfunction()", "s = input()\n\nt = input()\n\nans = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)", "s = input()\nt = input()\nans = 0\nfor s, t in zip(s, t):\n    if s != t:\n        ans += 1\nprint(ans)", "str1 = input()\nstr2 = input()\n\ncount = 0\nfor i in range(len(str1)):\n  if(str1[i] != str2[i]):\n    count+=1\n    \nprint(count)", "S = input()\nT = input()\nl = len(S)\nans = 0\n\nfor i in range(l):\n    if S[i] != T[i]:\n        ans += 1\n\nprint(ans)", "def answer(s: str, t: str) -> int:\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n            \n    return count\n\n\ndef main():\n    s = input()\n    t = input()\n    print((answer(s, t)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans = ans + 1\nprint(ans)\n", "a = list(str(input()))\nb = list(str(input()))\ncount=0\nfor i in range(len(a)):\n    if a[i] != b[i]:\n        count +=1\nprint(count)\n", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\ns = input()\nt = input()\n\ntmp = 0\nres = 0\n\nfor i, j in zip(s, t):\n    if i != j:\n        res += 1\n\nprint(res)\n", "s = str(input())\nt = str(input())\nscore = 0\nle = len(s)\n\nfor i in range(le):\n    if s[i] != t[i]:\n        score += 1\n\nprint(score)", "S = input()\nT = input()\ncount=0\nfor i in range(len(S)):\n  if S[i] == T[i]:\n    count+=1\nprint(len(T)-count)    ", "s = input()\nt = input()\nn = len(s)\na = 0\n\nfor i in range(n):\n  if s[i] != t[i]:\n    a += 1\n    \nprint(a)", "S = input()\nT = input()\ns = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    s += 1\nprint(s)", "S = input()\nT = input()\n\ncnt = 0\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        cnt += 1\n\nprint(cnt)\n", "S = list(input())\nT = list(input())\nans = 0\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        ans += 1\nprint(ans)", "s = input()\nt = input()\nans = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n\n", "s = input()\nt = input()\n\n\ndef counts(s, t):\n    cnt = 0\n    length = len(s)\n    for i in range(length):\n        if s[i] != t[i]:\n            cnt += 1\n    return cnt\n\n\nprint((counts(s, t)))\n", "S = input()\nT = input()\ncnt = 0\nfor i in range (len(S)):\n  if(S[i] == T[i]):continue\n  else: cnt = cnt + 1 \nprint(cnt)", "S = input()\nT = input()\n\ncnt = 0\n\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        cnt += 1\n\nprint(cnt)\n", "a = list(input())\nb = list(input())\n\nans = 0\nfor p, q in zip(a, b):\n    if p != q:\n        ans += 1\nprint(ans)\n", "s = input()\nt = input()\nS = [x for x in s]\nT = [y for y in t]\ncount = 0\nfor i in range(len(s)):\n    if S[i] != T[i]:\n        count += 1\nprint(count)", "s = input()\nt = input()\n\ncount = int(0)\n\nfor i in range(len(s)):\n    if not s[i] == t[i]:\n        count += 1\n\nprint(count)", "s = input()\nt = input()\n\ncnt = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        cnt += 1\nprint(cnt)\n", "S = str(input())\nT = str(input())\nans = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    ans += 1\nprint(ans)", "s = input()\nt = input()\n\ncount = 0\nfor ss, tt in zip(s, t):\n  if ss != tt:\n    count += 1\n\nprint(count)", "def ans172(S:str, T:str):\n    ans_count=0\n    for i in range(len(S)):\n        if S[i]!=T[i]:\n            ans_count+=1\n    return ans_count\n\ndef __starting_point():\n    S=input()\n    T=input()\n    print(ans172(S,T))\n__starting_point()", "s = input()\nt = input()\nc = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        c += 1\n\nprint(c)", "s = [i for i in input()]\nt = [j for j in input()]\ncount = 0\nfor k, l in zip(s, t):\n  if k != l:\n    count += 1\nprint(count)", "S = list(input())\nT = list(input())\n\nans = 0\n\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        ans += 1\n\nprint(ans)", "S = input()\nT = input()\ncount = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    count += 1\nprint(count)", "s = input()\nt = input()\nc = 0\nfor i,j in zip(s,t):\n  if i!=j:\n    c += 1\nprint(c)", "n = list(input())\nn1 = list(input())\n\ni = 0\ncou = 0\nwhile i != len(n):\n    if n[i] != n1[i]:\n        cou += 1\n    i += 1\n\nprint(cou)", "S = input()\nT = input()\n\ncount = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    count += 1\n\nprint(count)", "ss = list(input())\ntt = list(input())\ncnt = 0\nfor i in range(len(ss)):\n  if ss[i] != tt[i]:\n    cnt += 1\nprint(cnt)", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(1000000)\nfrom collections import deque\n\nS =input()\nT =input()\nl = len(S)\ncount = 0\nfor i in range(l):\n    if S[i] != T[i]:\n        count += 1\n\nprint(count)", "s = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\nprint(ans)", "s = input()\nt = input()\nprint(sum(i != j for i, j in zip(s, t)))", "s = input()\nh = input()\ncount = 0\nfor i in range(len(s)):\n    if s[i] != h[i]:\n        s[i] == h[i]\n        count += 1\nprint(count)", "a = input().split()[0]\nstr = input().split()[0]\ncount = 0\nfor i in range(len(a)):\n    if(str[i] != a[i]):\n        count = count + 1\nprint(count)\n", "S = input()\nT = input()\nans = 0\nfor s, t in zip(S, T):\n  if s != t: ans += 1;\nprint(ans)", "s=input()\nt=input()\nans=0\nfor i in range(len(s)):\n  if s[i]!=t[i]:\n    ans+=1\nprint(ans)", "S = input()\nT = input()\ncount = 0\n\nfor i in range(len(S)):\n    if S[i] != T[i]:\n        count += 1\n\nprint(count)", "s = list(map(str, input()))\nt = list(map(str, input()))\n\nans = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)\n", "s = list(input())\nt = list(input())\nans = 0\n\nfor i in range(len(s)):\n    if s[i] != t[i]:\n        ans += 1\n\nprint(ans)", "s = input()\nt = input()\nls = list(s)\nlt = list(t)\nresult = 0\nfor data in range(len(ls)):\n    if ls[data] != lt[data]:\n        result += 1\nprint(result)\n", "S = input()\nT = input()\n\ncnt = 0\nfor i in range(len(S)):\n    if S[i] != T[i]: cnt += 1\nprint(cnt)", "s=list(input())\nt=list(input())\no=0\nfor (i,j) in zip(s,t):\n    if i!=j:\n        o+=1\nprint(o)", "S = input()\nT = input()\ncount = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    count += 1\nprint(count)", "print(sum([x!=y for x,y in zip(input(),input())]))"]