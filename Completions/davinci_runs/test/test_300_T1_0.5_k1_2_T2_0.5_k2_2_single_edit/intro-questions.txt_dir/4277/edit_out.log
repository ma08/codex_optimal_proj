2022-04-17 21:42:53.813742 num operations 1
2022-04-17 21:42:53.813761 size on input set 1
2022-04-17 21:42:55.506655 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n \nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\n\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    }
  ],
  "created": 1650231773,
  "object": "edit"
}
2022-04-17 21:42:55.506852 fix syntax errors 2 ['\n \nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\n\n\n\n\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n']
2022-04-17 21:42:55.506875 size on output set 2
2022-04-17 21:42:55.506900 num operations 1
2022-04-17 21:42:55.506905 size on input set 1
2022-04-17 21:42:56.922313 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    }
  ],
  "created": 1650231775,
  "object": "edit"
}
2022-04-17 21:42:56.922544 fix syntax errors 2 ['\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', 'import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n']
2022-04-17 21:42:56.922572 size on output set 2
