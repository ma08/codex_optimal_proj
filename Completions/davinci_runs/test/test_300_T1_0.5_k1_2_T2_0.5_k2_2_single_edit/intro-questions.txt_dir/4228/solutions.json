["n,l=map(int,input().split())\nc=0\nm=100000\nfor i in range(1,n+1):\n  c+=l+i-1\n  m=min(m,abs(l+i-1))\nif l<0 and l-n<=0:\n  print(c+m)\nelse:\n  print(c-m)", "n,l=map(int,input().split())\nsum=0\nm=1e9\nfor i in range (n):\n    sum+=l+i\n    if abs(m)>abs(l+i):m=l+i\nprint(sum-m)", "import sys\nsys.setrecursionlimit(10 ** 9)\n# input = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef MI1(): return list(map(int1, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\ndef printlist(lst, k=' '): print((k.join(list(map(str, lst)))))\nINF = float('inf')\n# from math import ceil, floor, log2\n# from collections import deque, defaultdict\n# from itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\n# from heapq import heapify, heappop, heappush\n# import numpy as np    # cumsum\n# from bisect import bisect_left, bisect_right\n\ndef solve():\n    N, L = MI()\n    tot = 0\n    for i in range(1, N+1):\n        tot = tot + L + i - 1\n    diff = INF\n    ans = 0\n    for i in range(1, N+1):\n        tmp = tot - L - i + 1\n        if abs(tot - tmp) < diff:\n            diff = abs(tot - tmp)\n            ans = tmp\n    print(ans)\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "# import math\n# import statistics\n# import itertools\n# a=int(input())\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(int(i))\nN,L= list(map(int,input().split()))\n# f = list(map(int,input().split()))\n# g = [input().split for _ in range(a)]\n# h = []\n# for i in range(a):\n#     h.append(list(map(int,input().split())))\n# a = [[0] for _ in range(H)]#nizigen\n\nazi2=[]\nazi=[L+i for i in range(N)]\nfor i in azi:\n    azi2.append(abs(i))\nif 0 in azi:\n    print((sum(azi)))\nelse:\n    mi=azi2.index(min(azi2))\n    del azi[mi]\n    print((sum(azi)))\n    \n", "n, l = map(int, input().split())\n\napple = []\nfor i in range(1, n+1):\n    apple.append(l+i-1)\n\neat = sorted(apple, key=lambda x: abs(x))\nprint(sum(apple)-eat[0])", "N,L=map(int,input().split())\nsum_apple=0\nif L<0 and L+N-1<0:\n  for i in range(1,N):\n    sum_apple+=L+i-1\nelif L>0 and L+N-1>0:\n  for i in range(2,N+1):\n    sum_apple+=L+i-1\nelse:\n  for i in range(1,N+1):\n    sum_apple+=L+i-1\nprint(sum_apple)", "N, L = map(int, input().split())\nchosen = 1000\nfor i in range(1, N+1):\n  taste_eaten = L + i - 1\n  if abs(taste_eaten) < abs(chosen):\n    chosen = taste_eaten\nprint(int(N*L + N*(N+1)/2 - N - chosen))", "N,L = map(int,input().split())\n\napples = [i+L-1 for i in range(1,N+1)]\n\nans = float(\"inf\")\nres = float(\"inf\")\n\nfor apple in apples:\n  if ans > abs(apple):\n    ans = min(ans,abs(apple))\n    res = apple\n  \nprint(sum(apples) - res)", "N,L = map(int,input().split())\nans = 0\nfor i in range(1,N+1):\n    if L-1>=0 and i==1:\n        continue\n    if L-1<0 and L+N-1>=0 and i==1-L:\n        continue\n    if L-1<0 and L+N-1<0 and i==N:\n        continue\n    ans += L+i-1\n\nprint(ans)", "n, l =list(map(int, input().split()))\narr = []\narr2 = []\nfor k in range(1, n+1):\n  arr.append(abs(l + k - 1))\nfor k in range(1, n+1):\n  arr2.append(l + k - 1)\narr2.pop(arr.index(min(arr)))\nprint(sum(arr2))", "# N,L\u3092\u53d6\u5f97\u3059\u308b\nN, L = map(int, input().split())\n# \u5473\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\ntastes = []\nfor i in range(1,N+1):\n    tastes.append(L+i-1)\n    \n# \u5473\u306e\u7d76\u5bfe\u5024\u304c\u6700\u3082\u5c0f\u3055\u3044\u30ea\u30b9\u30c8\u306eindex\u3092\u53d6\u5f97\u3059\u308b\nabs_tastes = list(map(abs, tastes))\nmin_tastes_index = abs_tastes.index(min(abs_tastes))\ntastes.pop(min_tastes_index)\n\n# \u4e0a\u8a18\u30ea\u30f3\u30b4\u3092\u9664\u3044\u305f\u6b8b\u308a\u306e\u30ea\u30f3\u30b4\u306e\u5473\u306e\u7dcf\u548c\u3092\u6c42\u3081\u308b\nprint(sum(tastes))", "N, L = map(int, input().split())\n\ntotal = N * (L - 1) + N * (N + 1) / 2\nlowest = 10 ** 10\nfor i in range(1, N + 1):\n    y = L + i - 1\n    lowest = min(lowest, abs(y))\nprint(int(total) - lowest) if total >= 0 else print(int(total) + lowest)", "n, l = list(map(int, input().split()))\ns = [i + l - 1 for i in range(1, n + 1)]\nx = sum(s)\ns.sort(key=lambda y: abs(y))\nprint((x - s[0]))\n", "n, l = map(int, input().split())\nL = []\na = 0\nif 0 <= l:\n  a = l\nelse:\n  a = n - 1 + l\nfor i in range(n):\n  if (l + i) == 0:\n    a = 0\n  L.append(l + i)\nL.remove(a)\nprint(sum(L))", "n,l=list(map(int,input().split()))\naji = []\nm = 100000\nflg = 0\nfor i in range(n):\n  aji.append((l+i))\n  if abs(aji[i]) <= m:\n    m = abs(aji[i])\n    if aji[i] <= 0:\n      flg = 1\n    else:\n      flg = 0\nprint((sum(aji)- m if flg==0 else sum(aji) +m))\n", "N, L = map(int, input().split())\nans = 0\nmn = 300000\nfor i in range(1, N + 1):\n    x = L + i - 1\n    ans += x\n    if abs(x) < abs(mn):\n        mn = x\nprint(ans - mn)", "n, l = list(map(int, input().split()))\n\napples = []\nans = 300\nfor i in range(1, n + 1):\n    taste = i + l - 1\n    apples.append(taste)\n    if abs(taste) < abs(ans):\n        ans = taste\n\napples.remove(ans)\nprint((sum(apples)))\n", "n, l = list(map(int, input().split()))\nS = n*l + (n * (n + 1)) // 2 - n\npd = S + 1\nfor x in range(1, n + 1):\n    d = - l - x + 1\n    if pd > abs(d):\n        ans = S + d\n    pd = d\n\nprint(ans)\n", "def answer(n: int, l: int) -> int:\n    apples_taste = list(range(l, l + n))\n    applepie_taste = sum(apples_taste) - min(apples_taste, key=abs)\n\n    return applepie_taste\n\n\ndef main():\n    n, l = list(map(int, input().split()))\n    print((answer(n, l)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,L=map(int, input().split())\nazi=[L+i-1 for i in range(1,N+1)]\n\nabsmin=L**2\n\nfor i in range(N):\n\tabsmin=min(absmin,abs(azi[i]))\n\nif absmin in azi:\n\tprint(sum(azi)-absmin)\nelse:\n\tprint(sum(azi)+absmin)", "n, l = map(int, input().split())\n\nT = [l+i for i in range(n)]\n\nif T[-1] >= 0:\n    m = min((i for i in T if i >= 0))\nelse:\n    m = T[-1]\n\nprint(sum(T)-m)", "n,l=map(int,input().split())\ns = sum(range(l,l+n))\nans = 1000\nfor i in range(l,l+n):\n  if abs(i) <= abs(ans):\n    ans = i\nprint(s-ans)", "N,M = map(int,input().split())\nif M >= 0:\n    a_list = [i for i in range(M+1,M+N)]\nelif N + M > 0:\n    a_list = [i for i in range(M,M+N)]\nelse:\n    a_list = [i for i in range(M,M+N-1)]\nprint(sum(a_list))", "n, l = map(int, input().split())\na = [l+i for i in range(n)]\nif 0 in a:\n    print(sum(a))\nelif a[0] < 0:\n    print(sum(a)-a[-1])\nelse:\n    print(sum(a)-a[0])", "N,L = list(map(int,input().split()))\nflavor = []\nflavorabs = []\nfor i in range(1,N+1):\n    flavor.append(L+i-1)\nS = 0\n\nfor i in flavor:\n    S += i\n\nfor i in range(N):\n    flavorabs.append(abs(flavor[i]))\n\na = min(flavorabs)\nprint((S - flavor[flavorabs.index(a)]))\n", "N,L=map(int,input().split())\ns = N*L\nfor i in range (N+1):\n    s += i\ns -= N\nK=[]\nfor i in range(1,N+1):  \n    K.append(L+i-1)\nif 0 <= K[0]:\n    s -= K[0]\nelif K[0]<0 and K[N-1]>0:\n    s = s\nelse:\n    s -= K[N-1]\nprint(s)", "n, l = list(map(int, input().split()))\napple_list = [l + i for i in range(n)]\nabs_min = min([abs(apple) for apple in apple_list])\napple_list.remove(abs_min if abs_min in apple_list else -abs_min)\nprint((sum(apple_list)))\n", "n, l = map(int,input().split())\nList1 = []\nList2 = []\n\nfor i in range(n):\n    L = l + i\n    L_abs = abs(L)\n    List1.append(L)\n    List2.append(L_abs)\n\nif min(List2) in List1:\n    List1.remove(min(List2))\nelif -min(List2) in List1:\n    List1.remove(-min(List2))\n\nprint(sum(List1))", "n,l=map(int, input().split())\n\nl_list=[l+i-1 for i in range(1,n+1)]\n#print(l_list)\n\nab_list=[abs(i) for i in l_list]\nnum=ab_list.index(min(ab_list))\n\nprint(sum(l_list)-l_list[num])", "a,b=input().split()\na=int(a)\nb=int(b)\nc=a*(b+b+a-1)/2\nif b>0:\n  print(int(c-b))\nelse:\n  if b+a-1>0:\n    print(int(c))\n  else:\n    print(int(c-(b+a-1)))", "n,l = map(int,input().split())\nans = 0\nmv = 100000\nfor i in range(1,n+1):\n  tmp = l+i-1\n  ans += tmp\n  if abs(mv)>abs(tmp):\n    mv = tmp\nprint(ans-mv)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N, L = LI()\n\n    ans = (2 * L + N - 1) * N // 2\n    if 0 <= L:\n        ans -= L\n    elif L + N <= 0:\n        ans -= L + N - 1\n\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "apple_num, taste = map(int, input().split())\ntotal = 0\ntable = []\ntotal_ans = 0\nmanual = 100000000\nans = 0\nfor i in range(apple_num):\n    table.append(i+1)\n\nfor j in range(apple_num):\n    table[j] = taste + j\n    total += taste + j\n\nfor k in range(apple_num):\n    if manual > abs(table[k]):\n        manual = abs(table[k])\n        ans = k\nfor l in range(apple_num):\n    if l == ans:\n        continue\n    else:\n        total_ans += table[l]\nprint(total_ans)", "n, l = list(map(int, input().split()))\nazi = [l+i-1 for i in range(1, n+1)]\ndiff = [0]*n\nfor i in range(n):\n    diff[i] = abs(azi[i])\n\nif sum(azi) < 0:\n    print((sum(azi) + abs(min(diff))))\nelse:  \n    print((sum(azi) - min(diff)))\n\n", "N, L = map(int, input().split())\nA = []\nfor i in range(N):\n  A.append(L+i)\ni = 0\nans = False\nwhile ans == False:\n    x, y = abs(i), -abs(i)\n    for k in A:\n      if k == x or k == y:\n        ans = True\n        A.remove(k)\n    i += 1\nprint(sum(A))", "N, L = map(int, input().split())\n \ns = N*(2*L+N-1) // 2\nl = [abs(L+i) for i in range(N)]\n\nprint(s - (L+l.index(min(l))))", "N,L=map(int,input().split())\ns=0\nl=[]\nfor i in range(N):\n    s+=L+i\n    l.append(abs(L+i))\nl=sorted(l)\nif l[0]<=L:\n    s-=l[0]\nelse:\n    s+=l[0]\nprint(s)", "N, L = map(int, input().split())\n\ns = (L * 2 + N - 1) * N // 2\n\nif L >= 0:\n    print(s - L)\nelif L + N - 1 <= 0:\n    print(s - L - N + 1)\nelse:\n    print(s)", "import numpy as np\n\nN, L = list(map(int, input().split()))\n\ntaste = np.arange(1, N+1) + L -1\nmin_ind = np.argmin(np.abs(taste))\n\nmask_1 = np.ones(N, dtype=bool)\nmask_1[min_ind] = False\n\nans = np.sum(taste[mask_1])\n\nprint(ans)\n", "# \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nN,L = map(int, input().split())\n\n# \u6570\u5217\u3092\u4f5c\u6210\u3059\u308b\nnums = list(range(1,N+1))\ntasts = [L+num-1 for num in nums]\n\n# \u5473\u306e\u7d76\u5bfe\u5024\u304c\u6700\u3082\u5c0f\u3055\u3044\u30ea\u30f3\u30b4\u306eindex\u3092\u7279\u5b9a\u3059\u308b\nabs_tasts = list(map(abs,tasts))\nindex = abs_tasts.index(min(abs_tasts))\ntasts.pop(index)\n\n# \u4e0a\u8a18\u30ea\u30f3\u30b4\u3092\u9664\u3044\u305f\u6b8b\u308a\u306e\u30ea\u30f3\u30b4\u306e\u5473\u306e\u7dcf\u548c\u3092\u6c42\u3081\u308b\nprint(sum(tasts))", "n,l=map(int,input().split())\nl1=list(int(l)+i-1 for i in range(1,n+1))\nn1=sum(l1)\nans=min(l1,key=abs)\n\nprint(n1-(ans))", "n,a = map(int,input().split())\nc = 0\nd = 1000\nfor i in range(1,n+1):\n    c+=a+i-1\n    d = min(abs(a+i-1),d)\nif a<0 and a-n <= 0:\n    print(c+d)\nelse:\n    print(c-d)", "n,l = map(int,input().split())\nans = l \nk = 0\nsum = 0\nfor i in range(1,n):\n    if abs(ans) > abs(l + i):\n        ans = l + i\n        k = i\nfor i in range(n):\n    if i != k:\n        sum += l + i\nprint(sum)", "lst = input()\nlst = lst.split()\n\n\nfor i in range(len(lst)):\n    lst[i]= int(lst[i])\nN = lst[0]\nL = lst[1]\nq = L\nl = 0\nlste = [abs(L)]\ntlst = []\nfor i in range(2,N+1):\n    t = L+i-1\n    q += t\n    tlst.append(t)\n    t = abs(t)\n    lste.append(t)\n\n\nslst = sorted(lste)\nl = slst[0]\nif tlst.count(-l) > 0:\n    print(q+l)\nelse:\n    print(q-l)", "n,l=map(int,input().split())\napple=[l+i for i in range(n)]\ns=0\nwhile True:\n    if s in apple:\n        apple.remove(s)\n        break\n    elif abs(s) in apple:\n        apple.remove(abs(s))\n        break\n    s-=1\nprint(sum(apple))", "n, l = map(int, input().split())\na = []\nfor i in range(l, n + l):\n    a.append(i)\nif a[0] > 0:\n    b = a.pop(0)\nelif a[n - 1] < 0:\n    b = a.pop(n - 1)\nelse:\n    for j in range(n):\n        if a[j] == 0:\n            b = a.pop(j)\n            break\nprint(sum(a))", "N, L = map(int, input().split())\nS = (2*L+N-1)*N // 2\nif L <= 0 <= L+N-1:\n  ans = S\nelif L < 0:\n  ans = S - (L+N-1)\nelse:\n  ans = S - L\nprint(ans)", "n, l = map(int, input().split())\nt = []\nt2 = []\nfor i in range(n):\n    taste = l+(i+1)-1\n    t.append(taste)\n    t2.append(taste**2)\noa = t[t2.index(min(t2))]\nans = sum(t) - oa\nprint(ans)", "N,L=list(map(int,input().split()))\nif L>0:\n    print((sum(L+i for i in range(1,N))))\nelif L+N-1<0:\n    print((sum(L+i for i in range(N-1))))\nelse:\n    print((sum(L+i for i in range(N))))\n", "#ABC131 B\n\nN,L = map(int,input().split())\naji = []\nfor i in range(N):\n    aji.append(L+i)\nif L < 0 and L+N-1 > 0:\n    print(sum(aji))\nelif L+N-1 <= 0:\n    print(sum(aji) - (L+N-1))\nelif L >= 0:\n    print(sum(aji) - L)", "n,l = map(int,input().split())\nq = []\np = []\nans = 0\nfor i in range(1,n+1):\n  m = l+i-1\n  q.append(m)\n  ans += m\nfor i in range(n):\n    p.append(abs(q[i]))\n\nprint(ans - q[p.index(min(p))])", "N,L = map(int,input().split())\nA = []\nfor i in range(N):\n  A.append(i+L)\n  \nif L < 0 and A.count(0) > 0:\n  print(sum(A))\nelif L < 0:\n  print(sum(A[:-1]))\nelse:\n  print(sum(A[1:]))", "N, L = map(int, input().split())\n# \u5473\uff1aL + i - 1\naji_list = [L+i-1 for i in range(1, N+1)]\n\nbasic = abs(sum(aji_list))\nmin_diff = 9999999 \nfor i in aji_list:\n    diff = abs(basic - abs(basic - abs(i)))\n    min_diff = min(min_diff, diff)\n\nfor i in aji_list:\n    if abs(basic - abs(basic - abs(i))) == min_diff:\n        if basic == sum(aji_list):\n            print(basic - abs(i))\n        else:\n            print(-1*(basic - abs(i)))\n        break", "n,l = map(int,input().split())\n\nlt = [l+i for i in range(n)]\n\nif(min(lt) > 0):\n    print(sum(lt[1:]))\nelif(max(lt) < 0):\n    print(sum(lt[:n-1]))\nelse:\n    print(sum(lt))", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef sum_applepie(list1, l):\n    r = [i+l-1 for i in list1]\n    return sum(r)\n\n\ndef main():\n    n, l = Input()\n    applepie = sum_applepie(list(range(1, n+1)), l)\n    list2 = []\n    for i in range(1, n+1):\n        temp = []\n        for j in range(1, n+1):\n            if i == j:continue\n            temp.append(j)\n        k = sum_applepie(temp, l)\n        list2.append((abs(applepie - k), k))\n    print(sorted(list2, key=lambda x:x[0])[0][1])\n\n\nmain()", "n, l = map(int, input().split())\n\napple = []\ndiff = 1001001001\nminus = False\nfor i in range(1, n+1):\n    apple.append(l+i-1)\n    if abs(l+i-1) < diff:\n        diff = abs(l+i-1)\n        if l+i-1 < 0:\n            minus = True\n        else:\n            minus = False\n\nif minus:\n    print(sum(apple) + diff)\nelse:\n    print(sum(apple) - diff)", "r=input().split()\nN=int(r[0])\nL=int(r[1])\nans=0\nans_li=[]\nfor i in range(N):\n    ans+=L+(i+1)-1\n    ans_li.append(L+(i+1)-1)\nif 0 in ans_li:\n    print(ans)\nelif max(ans_li)>0:\n    print(ans-min(ans_li))\nelse:\n    print(ans-max(ans_li))", "N, L = map(int, input().split())\n\nT = [L+i for i in range(N)]\n\nif T[-1] >= 0:\n    m = min((i for i in T if i >= 0))\nelse:\n    m = T[-1]\n\nprint(sum(T)-m)", "n, l = list(map(int, input().split()))\nif l >= 0:\n    print(((n - 1) * l + (n * (n + 1)) // 2 - (n - 1) - 1))\nelse:\n    if n >= -l + 1:\n        print((n * l + (n * (n + 1)) // 2 - n))\n    else:\n        print(((n - 1) * l + (n * (n + 1)) // 2 - (n - 1) - n))\n", "N,L=list(map(int,input().split()))\n#L+i-1,i>=1\nnin=10**6\nfor i in range(N):\n    if abs(L+i)<nin:\n        nin=abs(L+i)\n        nn=L+i\n\nans=N*(L-1)+N*(N+1)*0.5-(nn)\n\nprint((int(ans)))\n", "n, l = map(int, input().split())\na = 0\nif l >= 0:\n    a = (l+1+n + l -1)*(n-1)/2\n    print(int(a))\n\nelif l < 0 and -l < n:\n    a = (l+n + l -1)*n/2\n    print(int(a))\nelif l < 0 and -l >=n:\n    a = (l+ n + l -2)*(n-1)/2\n    print(int(a))", "import sys\n\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef main():\n    n, l = MI()\n    ans = 0\n    temp = l\n    for i in range(n):\n        ans += l+i\n        if abs(temp) > abs(l+i):\n            temp = l+i\n        \n    ans -= temp\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "#n\u306f\u308a\u3093\u3054\u306e\u6570\u3000\u308a\u3093\u3054i\u306e\u5473\u306fl\uff0bi-1\n\nn,l = map(int,input().split())\n\neach_taste = []\nfor x in range(1,n+1):\n  each_taste.append(l+x-1)\n  \nif min(each_taste) >= 0:\n  print(sum(each_taste[1:]))\n  \nelif max(each_taste) >= 0:\n  print(sum(each_taste))\n\nelse:\n  print(sum(each_taste[:-1]))", "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readlines\ndef main():\n    lines = input()\n\n    n, l = list(map(int, lines[0].split()))\n\n    Sum_ = int( n * (l - 1) + n * (n+1) / 2 )\n\n    if l >= 0:\n        print(Sum_ - l)\n        return\n    else:\n        if n+l-1 <= 0:\n            print(Sum_ - (l+n-1))\n        else:\n            print(Sum_)\n\n\nmain()", "N, L = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N+1):\n    ans += L+i-1\n    \n\nif L+N-1 < 0:\n    ans -= (L+N-1)\nelif L <= 0 <= L+N-1:\n    ans = ans\nelse:\n    ans -= L\nprint(ans)\n", "N, L = map(int, input().split())\n \n# \u5143\u3005\u306e\u5473\uff08\u7b49\u5dee\u6570\u5217\u306e\u548c\u306e\u516c\u5f0f\u3088\u308a\uff09\ns = N*(2*L+N-1) // 2\n# \u5473\u306e\u7d76\u5bfe\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u30ea\u30f3\u30b4\u306e\u5473\u3092\u6c42\u3081\u308b\nif L+N-1 < 0: eat = L+N-1\nelif L > 0: eat = L\nelse: eat = 0\n\n# \u98df\u3079\u308b\uff08\u6700\u9069\u306a\u30ea\u30f3\u30b4\uff09\u4ee5\u5916\u306e\u5473\u306e\u548c\nprint(s - eat)", "n, l = list(map(int, input().split()))\ns = n*(l-1) + n*(n+1)/2\nc = abs(s)\nj = 1\nfor i in range(n):\n  t = s - (l+i)\n  T = abs(s-t)\n  if T < c:\n    c = T\n    j = i\nans = s -(l+j)\nprint((int(ans)))\n\n", "# N, L\u3092\u53d6\u5f97\u3059\u308b\nN, L = map(int, input().split())\n\n# \u5473\u306e\u7dcf\u548c\u3092\u6c42\u3081\u308b\nLa = N * L + (N-1) * N / 2\n\n# Le=\uff08\u30ea\u30f3\u30b4i\u3092\u53d6\u308a\u9664\u3044\u305f\u6642\u306e\u5473\u306e\u7dcf\u548c\uff09\u3068La=\uff08\u5168\u30ea\u30f3\u30b4\u306e\u5473\u306e\u7dcf\u548c\uff09\u306e\u7d76\u5bfe\u5024\u304c\u6700\u5c0f\u3068\u306a\u308b\u6642\u306eLe\u3092\u6c42\u3081\u308b\nmin_Le = La\nabs_L = int(1e100)\nfor i in range(N):\n    Li = L + (i + 1) - 1\n    if abs((La - Li) - La) < abs_L:\n        Le = La - Li\n        abs_L = abs(Le - La)\n\n# \u7d50\u679c\u51fa\u529b\nprint(int(Le))", "n,l = map(int,input().split())\nm = list(range(l,l+n))\nif m[-1] < 0:\n    print(sum(m[:n-1]))\nelif m[0] > 0:\n    print(sum(m[1:]))\nelse:\n    print(sum(m))", "n, l = list(map(int, input().split()))\napples = []\nmin_val = l\n\nfor i in range(1, n + 1):\n    apples.append(l + i - 1)\n    if abs(l + i - 1) < abs(min_val):\n        min_val = (l + i - 1)\napples.remove(min_val)\n\nprint((sum(apples)))\n", "details = input().split()\nN = int(details[0])\nL = int(details[1])\ncounter = 0\nnew_list = []\nnumber = 0\nchecker = True\nfor i in range(N):\n    counter += L\n    new_list.append(L+i)\n    if number == 0 and ((L + i) >= 0) and checker == True:\n        number += L + i\n        checker = False\n    elif number == 0 and (i == N-1) and checker == True:\n        number += L + i\n        checker = False\nprint(sum(new_list) - number)", "n,l =map(int,input().split())\nif l+n-1 <0:\n    print((n-1)*(l-1)+n*(n-1)//2)\nelif l > 0:\n    print(n*(l-1)+n*(n+1)//2-l)\nelse:\n    print(n*(l-1)+n*(n+1)//2)", "n,a = map(int,input().split())\nx = [a+i-1+1 for i in range(n)]\ny = sorted(x, key=lambda i: abs(i))\ndel y[0]\nprint(sum(y))", "N,L = map(int,input().split())\naji1 = []\najimin = 1000\n\nfor i in range(1,N+1):\n    aji1.append(L + i - 1)\n    if abs(ajimin) >= abs(aji1[i-1]):\n        ajimin = aji1[i-1]\n\n\nprint(sum(aji1)-ajimin)", "n, l = map(int, input().split())\nm = 1000\nfor i in range(l, l+n):\n    if abs(i) < m:\n        m = abs(i)\n        a = i\nprint(sum(range(l, l+n)) - a)", "n, l = list(map(int, input().split()))\na = sorted([l + i for i in range(n)], key=abs)\nprint((sum(a[1:])))\n\n", "n,l = map(int,input().split())\ns = int(n*(2*l+n-1)/2)\nif(l<=0 and l+n-1 >=0):\n  print(s)\nelif(l<=0):\n  print(s-l-n+1)\nelse:\n  print(s-l)", "N, L = map(int, input().split(\" \"))\n\napple = [L+i-1 for i in range(1, N+1)]\n\nabs_apple = list(map(abs, apple))\n\nminimum_idx = abs_apple.index(min(abs_apple))\n\nprint(sum(apple) - apple[minimum_idx])", "n, l = map(int,input().split())\nlst = []\nfor i in range(n):\n  lst.append(l + i)\nif (0 in lst):\n  print(sum(lst))\nelif (l < 0):\n  print(sum(lst) - lst[n - 1])\nelse:\n  print(sum(lst) - lst[0])", "n,l = map(int,input().split())\nans = 0\nif l > 0:\n    for i in range(l+1,l+n):\n        ans += i\nelif n + l -1 < 0:\n    for i in range(l,l+n-1):\n        ans += i\nelse:\n    for i in range(l,l+n):\n        ans += i\nprint(ans)", "n,l=map(int,input().split())\na=0\nfor i in range(1,n+1):\n  a+=(l+i-1)\n\nm=10**9\nidx=1\nfor i in range(1,n+1):\n  if abs(l+i-1)<m:\n    m=abs(l+i-1)\n    idx=i\n        \nprint(a-(l+idx-1))", "n,l = map(int,input().split())\n\nringo = []\nfor i in range(l,l+n):\n    ringo.append(i)\nringo.sort(key=int)\nif 0 in ringo:\n    print(sum(ringo))\nelse:\n    if ringo[0] > 0:\n        ringo.pop(0)\n    else:\n        ringo.pop(-1)\n    print(sum(ringo))", "N, L = list(map(int, input().split()))\nstk = []\nans = []\nfor i in range(N):\n  tmp = L + i\n  stk.append(tmp)\n\nfor i in range(N):\n  tmp1 = sum(stk)\n  tmp = stk[i]\n  stk[i] = 0\n  tmp2 = sum(stk)\n  stk[i] = tmp\n  ans.append(abs(tmp1 - tmp2))\n\ntmp = min(ans)\n\nif tmp in stk:\n  stk.remove(tmp)\n  print(sum(stk))\nelse:\n  stk.remove(-tmp)\n  print(sum(stk))", "n,l = map(int,input().split())\nisMina = False\nisPlu = False\nans = []\nfor i in range(1,n+1):\n  ans.append(l+i-1)\n  if l+i-1 < 0:\n    isMina = True\n  elif i+i-1 > 0:\n    isPlu = True\nprint(sum(ans)-min(ans) if not isMina else sum(ans)-max(ans) if not isPlu else sum(ans))", "n,l=map(int, input().split())\ns=int(n*(l+n+l-1)/2)\nif l>0 and n+l-1>0:\n  print(s-l)\nelif l<0 and n+l-1<0:\n  print(s-(n+l-1))\nelse:\n  print(s)", "# AtCoder Beginner Contest 131\n# B - Bite Eating\n\nN,L=map(int,input().split())\nminabs=10**9\napples=[]\nfor i in range (N):\n    t=L+i\n    apples.append(t)\n    if abs(t)<abs(minabs):\n        minabs=t\n\nfull=sum(apples)\n\nprint(full-minabs)", "def ApplePie():\n    N, L = input().split()\n    N = int(N)\n    L = int(L)\n    flavors = []\n    for i in range(N):\n        flavors.append(L+i)\n    \n    if 0 in flavors:\n        flavors.remove(0)\n        result = 0\n        for i in flavors:\n            result = result + i\n        print(result)\n        return\n    elif L >= 0:\n        del flavors[0]\n        result = 0\n        for i in flavors:\n            result = result + i\n        print(result)\n        return\n    else:\n        del flavors[-1]\n        result = 0\n        for i in flavors:\n            result = result + i\n        print(result)\n        return\n        \nApplePie()", "\nlst = list(map(int, input().split()))\n\nN = lst[0]\nL = lst[1]\n\napple_flavours = []\n\nfor i in range(1, N+1):\n    apple_flavours.append(L+i-1)\n\n\nabs_apple_flavours = []\n\nfor apple in apple_flavours:\n    abs_apple_flavours.append(abs(apple))\n\nmin_val = min(abs_apple_flavours)\n\nindex = abs_apple_flavours.index(min_val)\n\ntotal_flavour = 0\n\nfor apple in apple_flavours:\n    total_flavour += apple\n\nprint(total_flavour - apple_flavours[index])", "import sys\nN, L = list(map(int, input().split()))\ntastes = [ L+x for x in range(N) ] \n\nif 0 in tastes:\n    print((sum(tastes)))\n    return\n    \n\nif L<0:\n    absmin = max(tastes)\n    print((sum(tastes)-absmin))\nelif L>0:\n    absmin = min(tastes)\n    print((sum(tastes)-absmin))\n", "\n# ABC131\n# B Bite Eating\nN, L = list(map(int, input().split()))\nA = 0\na = 1000\nfor i in range(1,N+1):\n    x = L + i - 1\n    A += x\n    if abs(x) < a:\n        a = abs(x)\nif A >= 0:\n    print((A-a))\nelse:\n    print((A+a))\n", "N, L = list(map(int,input().split()))\nA = []\nfor i in range(N):\n    x = L + i\n    A.append(x)\n\ny = sum(A)\nB = sorted(A)\n\nif L <= 0 and L + N - 1 >= 0:\n    print(y)\nelif L >= 0:\n    y -= B[0]\n    print(y)\nelif L + N - 1 < 0:\n    y -= B[N - 1]\n    print(y) \n\n", "N, L = map(int, input().split())\n\n# \u5143\u3005\u306e\u5473\uff08\u7b49\u5dee\u6570\u5217\u306e\u548c\u306e\u516c\u5f0f\u3088\u308a\uff09\ns = N*(2*L+N-1) // 2\n# \u5473\u306e\u5dee\u306e\u7d76\u5bfe\u5024=\u30ea\u30f3\u30b4i\u306e\u5473\u306e\u7d76\u5bfe\u5024\nl = [abs(L+i) for i in range(N)]\n \n# \u5473\u306e\u7d76\u5bfe\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u30ea\u30f3\u30b4\u306eindex\u3092\u6c42\u3081\u3001s\u304b\u3089\u305d\u306e\u5473\u3092\u5f15\u3051\u3070\u3088\u3044\nprint(s - (L+l.index(min(l))))", "n,l=list(map(int,input().split()))\n\naji = [l+i for i in range(n)]\nans = None\nsa=10**10\nfor i in range(n):\n    sa_tmp=abs(aji[i])\n    if sa>sa_tmp:\n        sa=sa_tmp\n        ans=sum(aji)-aji[i]\nprint(ans)\n", "N,L = map(int,input().split())\na = []\nfor i in range(1,N+1):\n  a.append(L+i-1)\nb = []\nfor i in a:\n  b.append(abs(i))\nfor i in range(1,N+1):\n  if abs(L+i-1) == min(b):\n    print(sum(a)-L-i+1)", "n,l = map(int,input().split())\nli = []\nind = 0\nfor i in range(1,n+1):\n    li.append(i+l-1)\n\nmi = abs(li[0])\nfor i in li:\n    if abs(i) < mi:\n        mi = abs(i)\n        ind = li.index(i)\n\nprint(sum(li)-li[ind])", "N, L = list(map(int, input().split()))\n\nA = [i for i in range(L, L + N)]\n\nif A[0] < 0:\n    if A[-1] < 0:\n        print((sum(A) - max(A)))\n    else:\n        print((sum(A)))\nelse:\n    print((sum(A) - min(A)))\n", "n,l=map(int,input().split())\nlist_x=[l+x-1 for x in range(1,n+1)]\napplepai=sum(list_x)\nlist_dif=[]\nlist_sum=[]\nfor i in range(len(list_x)):\n    tmp=list_x.pop(i)\n    list_dif.append(abs(applepai-sum(list_x)))\n    list_sum.append(sum(list_x))\n    list_x.insert(i,tmp)\nindx=list_dif.index(min(list_dif))\nans=list_sum[indx]\nprint(ans)", "n, l = (int(i) for i in input().split())\nlist_ringo = [l + i - 1 for i in range(1, n + 1)]\nif 0 in list_ringo: print(sum(list_ringo))\nelif max(list_ringo) < 0: print(sum(list_ringo[:n - 1]))\nelse: print(sum(list_ringo[1:]))", "import sys\n\nn,l = map(int,input().split())\n\ntaste_list = [l+x-1 for x in range(1,n+1)]\ntaste_sum = sum(taste_list)\ndiff = sys.maxsize\n\nfor i in range(n):\n    if diff>abs(taste_list[i]):\n        diff = abs(taste_list[i])\n        num = i\n    \nprint(taste_sum-taste_list[num])"]