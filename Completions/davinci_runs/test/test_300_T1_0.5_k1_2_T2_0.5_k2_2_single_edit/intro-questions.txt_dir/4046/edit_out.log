2022-04-17 21:07:12.923449 num operations 1
2022-04-17 21:07:12.923468 size on input set 1
2022-04-17 21:07:27.018993 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# import sys\n#\n# def get_input():\n#     n = int(input())\n#     q = [int(x) for x in input().split()]\n#     return n, q\n#\n# def check_permutation(n, q):\n#     if len(q) != n - 1:\n#         return False\n#     if n == 1:\n#         return True\n#     for i in q:\n#         if abs(i) >= n:\n#             return False\n#     return True\n#\n# def create_permutation(n, q):\n#     if n == 1:\n#         return [1]\n#     p = [0] * n\n#     p[0] = q[0]\n#     p[1] = q[0] + q[1]\n#     for i in range(2, n):\n#         p[i] = p[i-1] + q[i-1]\n#     return p\n#\n# def print_permutation(p):\n#     print(\" \".join([str(x) for x in p]))\n#\n# def main():\n#     n, q = get_input()\n#     if not check_permutation(n, q):\n#         print(-1)\n#         return\n#     p = create_permutation(n, q)\n#     print_permutation(p)\n#\n# if __name__ == \"__main__\":\n#     main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1, ]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(\" \".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650229633,
  "object": "edit"
}
2022-04-17 21:07:27.019181 fix syntax errors 2 ['\n#\n# import sys\n#\n# def get_input():\n#     n = int(input())\n#     q = [int(x) for x in input().split()]\n#     return n, q\n#\n# def check_permutation(n, q):\n#     if len(q) != n - 1:\n#         return False\n#     if n == 1:\n#         return True\n#     for i in q:\n#         if abs(i) >= n:\n#             return False\n#     return True\n#\n# def create_permutation(n, q):\n#     if n == 1:\n#         return [1]\n#     p = [0] * n\n#     p[0] = q[0]\n#     p[1] = q[0] + q[1]\n#     for i in range(2, n):\n#         p[i] = p[i-1] + q[i-1]\n#     return p\n#\n# def print_permutation(p):\n#     print(" ".join([str(x) for x in p]))\n#\n# def main():\n#     n, q = get_input()\n#     if not check_permutation(n, q):\n#         print(-1)\n#         return\n#     p = create_permutation(n, q)\n#     print_permutation(p)\n#\n# if __name__ == "__main__":\n#     main()\n', '\n\ndef get_input():\n    n = int(input())\n    q = [int(x) for x in input().split()]\n    return n, q\n\ndef check_permutation(n, q):\n    if len(q) != n - 1:\n        return False\n    if n == 1:\n        return True\n    for i in q:\n        if abs(i) >= n:\n            return False\n    return True\n\ndef create_permutation(n, q):\n    if n == 1:\n        return [1, ]\n    p = [0] * n\n    p[0] = q[0]\n    p[1] = q[0] + q[1]\n    for i in range(2, n):\n        p[i] = p[i-1] + q[i-1]\n    return p\n\ndef print_permutation(p):\n    print(" ".join([str(x) for x in p]))\n\ndef main():\n    n, q = get_input()\n    if not check_permutation(n, q):\n        print(-1)\n        return\n    p = create_permutation(n, q)\n    print_permutation(p)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 21:07:27.019213 size on output set 2
2022-04-17 21:07:27.019224 num operations 1
2022-04-17 21:07:27.019229 size on input set 1
2022-04-17 21:07:31.924697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef solve(n, m, p):\n    p.sort()\n    for i in range(m):\n        if p[i] > i + 1:\n            return i\n    return m\n\n\ndef main():\n    n = int(input())\n    m = int(input())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650229647,
  "object": "edit"
}
2022-04-17 21:07:31.924880 fix syntax errors 2 ['\n\n\ndef solve(n, m, p):\n    p.sort()\n    for i in range(m):\n        if p[i] > i + 1:\n            return i\n    return m\n\n\ndef main():\n    n = int(input())\n    m = int(input())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\n\nif __name__ == "__main__":\n    main()\n', 'def solve(n, q):\n    p = [1]\n    for i in range(n - 1):\n        if p[-1] + q[i] > 0 and p[-1] + q[i] <= n:\n            p.append(p[-1] + q[i])\n        else:\n            return -1\n    return p\n\n\ndef main():\n    n = int(input())\n    q = list(map(int, input().split()))\n    print(*solve(n, q))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 21:07:31.924908 size on output set 2
