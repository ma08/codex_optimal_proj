2022-04-17 21:08:04.663770 num operations 1
2022-04-17 21:08:04.663786 size on input set 1
2022-04-17 21:08:10.946376 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split())) # \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438\n    m = max(a) # \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i: # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u0432\u0435\u0437\u0434\u043e\u0447\u0435\u043a \u043d\u0430\u0434\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(a)\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\nmain()\n"
    }
  ],
  "created": 1650229684,
  "object": "edit"
}
2022-04-17 21:08:10.946603 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split())) # получаем список чисел из строки\n    m = max(a) # находим максимальное значение\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i: # проверяем, сколько звездочек надо вывести\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print(a)\n    print("YES" if sorted(a) == a else "NO")\n\nmain()\n']
2022-04-17 21:08:10.946643 size on output set 2
2022-04-17 21:08:10.946654 num operations 1
2022-04-17 21:08:10.946660 size on input set 1
2022-04-17 21:08:12.919096 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\nprint(check_ravioli_sort(arr))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n"
    }
  ],
  "created": 1650229690,
  "object": "edit"
}
2022-04-17 21:08:12.919294 fix syntax errors 2 ['\nimport sys\n\nn = int(input())\narr = list(map(int, input().split()))\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\nprint(check_ravioli_sort(arr))\n', '\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr))\n']
2022-04-17 21:08:12.919359 size on output set 2
