2022-04-17 21:40:12.799987 num operations 1
2022-04-17 21:40:12.800001 size on input set 1
2022-04-17 21:40:15.320434 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "a, b, c = map(int, input().split())\nprint(int((a * b) / 2))\n"
    },
    {
      "index": 1,
      "text": "\nab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / 2)) \n"
    }
  ],
  "created": 1650231612,
  "object": "edit"
}
2022-04-17 21:40:15.320679 fix syntax errors 2 ['a, b, c = map(int, input().split())\nprint(int((a * b) / 2))\n', '\nab, bc, ca = map(int, input().split())\nprint(int((ab * bc) / 2)) \n']
2022-04-17 21:40:15.320700 size on output set 2
2022-04-17 21:40:15.320718 num operations 1
2022-04-17 21:40:15.320725 size on input set 1
2022-04-17 21:40:24.015807 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\ndef get_area(a, b, c):\n    p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        print(get_area(a, b, c))\n    else:\n        print(get_area(a, c, b))\nelif b >= a and b >= c:\n    if a >= c:\n        print(get_area(b, a, c))\n    else:\n        print(get_area(b, c, a))\nelse:\n    if a >= b:\n        print(get_area(c, a, b))\n    else:\n        print(get_area(c, b, a))\n"
    }
  ],
  "created": 1650231615,
  "object": "edit"
}
2022-04-17 21:40:24.015973 fix syntax errors 2 ['\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelif b >= a and b >= c:\n    if a >= c:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\nelse:\n    if a >= b:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n    else:\n        p = (a + b + c) / 2\n        print(math.sqrt(p * (p - a) * (p - b) * (p - c)))\n', '\n\n\n\ndef get_area(a, b, c):\n    p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\nimport math\n\nabc = input().split()\na, b, c = int(abc[0]), int(abc[1]), int(abc[2])\n\nif a >= b and a >= c:\n    if b >= c:\n        print(get_area(a, b, c))\n    else:\n        print(get_area(a, c, b))\nelif b >= a and b >= c:\n    if a >= c:\n        print(get_area(b, a, c))\n    else:\n        print(get_area(b, c, a))\nelse:\n    if a >= b:\n        print(get_area(c, a, b))\n    else:\n        print(get_area(c, b, a))\n']
2022-04-17 21:40:24.016003 size on output set 2
