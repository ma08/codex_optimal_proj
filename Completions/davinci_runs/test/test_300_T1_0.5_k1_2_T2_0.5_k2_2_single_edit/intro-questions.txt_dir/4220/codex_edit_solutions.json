["\nk = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + \"...\")\n", "# -*- coding: utf-8 -*-\nimport sys\nimport io\nimport numpy as np\nimport math\nfrom collections import Counter\nfrom collections import deque\nfrom collections import defaultdict\nfrom heapq import heappush, heappop\nfrom itertools import accumulate\nimport fractions\nfrom functools import reduce\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right, bisect\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nMOD = 10**9 + 7\nINF = float('inf')\n# pypy\u3067\u306finput\u306f\u6a19\u6e96\u5165\u529b\n# pypy\u3067\u306fsys.stdin.readline\u306finput\n# pypy\u3067\u306fsys.setrecursionlimit\u306f10**7\n\n\n\ndef main():\n    K = int(input())\n    S = input()\n\n    if len(S) > K:\n        print(S[:K] + '...')\n    else:\n        print(S)\n\n\nif __name__ == '__main__':\n    main()\n", "\nk = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + \"...\") \n", "\nK = int(input())\nS = input()\n\nprint(S[:K] + '...') if len(S) > K else print(S)\n"]