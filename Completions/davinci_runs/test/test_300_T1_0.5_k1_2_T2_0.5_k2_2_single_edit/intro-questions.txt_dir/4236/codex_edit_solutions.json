["\n\nn, m = map(int, input().split())\n\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    segments.append((l, r))\n\nsegments.sort(key=lambda x: x[0])\n\n# print(segments)\n\nres = []\nfor i in range(1, m + 1):\n    if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments] and i > segments[0][0]:\n        res.append(i)\n\nprint(len(res))\nprint(*res)\n", "\n\n# n, m = map(int, input().split())\n\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n\n# segments.sort(key=lambda x: x[0])\n\n# # print(segments)\n\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n#         res.append(i)\n\n# print(len(res))\n# print(*res)\n\n# n, m = map(int, input().split())\n\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n\n# segments.sort(key=lambda x: x[0])\n\n# # print(segments)\n\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n#         res.append(i)\n\n# print(len(res))\n# print(*res)\n\n# n, m = map(int, input().split())\n\n# segments = []\n# for i in range(n):\n#     l, r = map(int, input().split())\n#     segments.append((l, r))\n\n# segments.sort(key=lambda x: x[0])\n\n# # print(segments)\n\n# res = []\n# for i in range(1, m + 1):\n#     if i not in [seg[0] for seg in segments] and i not in [seg[1] for seg in segments]:\n#         res.append(i)\n\n# print(len(res))\n# print(*res)\n", "\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\ncounter = 0\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        counter += 1\n    elif left[i] > right[i]:\n        print(counter)\n        break\nelse:\n    print(counter)\n"]