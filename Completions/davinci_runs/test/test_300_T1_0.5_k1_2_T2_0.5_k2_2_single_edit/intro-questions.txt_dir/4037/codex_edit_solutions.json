["\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        projects.append((a, b))\n\n    projects.sort(key = lambda x: x[0])\n\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n        else:\n            break\n\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\"\"\"\n# 1st solution\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort(key=lambda x: x[0])\n\ncount = 0\nfor i in range(n):\n    if projects[i][0] <= r:\n        r += projects[i][1]\n        count += 1\n    else:\n        break\n\nprint(count)\n\"\"\"\n\n# 2nd solution\n\n# \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u0438\u043b\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort(key=lambda x: x[0])\n\ndp = [0] * (r + 1)\n\nfor i in range(n):\n    for j in range(r, projects[i][0] - 1, -1):\n        if dp[j] < dp[j - projects[i][0]] + projects[i][1] and j - projects[i][0] >= 0:\n            dp[j] = dp[j - projects[i][0]] + projects[i][1]\n\nprint(dp[r])\n", "\n\nn, r = map(int, input().split())\n\nprojects = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    projects.append((a, b))\n\nprojects.sort(key=lambda x: x[0])\n\ncount = 0\nfor i in range(n):\n    if projects[i][0] <= r:\n        r += projects[i][1]\n        count += 1\n    else:\n        break\n\nprint(count)\n", "\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        projects.append((a, b))\n\n    projects.sort(key=lambda x: x[0])\n\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n        else:\n            break\n\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"]