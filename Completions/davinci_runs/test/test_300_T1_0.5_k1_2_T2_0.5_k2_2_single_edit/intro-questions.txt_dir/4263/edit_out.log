2022-04-17 21:41:20.884292 num operations 1
2022-04-17 21:41:20.884307 size on input set 1
2022-04-17 21:41:22.899485 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    }
  ],
  "created": 1650231680,
  "object": "edit"
}
2022-04-17 21:41:22.899752 fix syntax errors 2 ['\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n']
2022-04-17 21:41:22.899778 size on output set 1
2022-04-17 21:41:22.899788 num operations 1
2022-04-17 21:41:22.899793 size on input set 1
2022-04-17 21:41:28.033986 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\n\ndef main():\n    S = sys.stdin.read().rstrip()\n    result = re.findall('A+|C+|G+|T+', S)\n    print(max(result, key=len))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip().split()\n    max_len = 0\n    curr_len = 0\n    for c in S[0]:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650231682,
  "object": "edit"
}
2022-04-17 21:41:28.034199 fix syntax errors 2 ["# -*- coding: utf-8 -*-\n\nimport re\nimport sys\n\ndef main():\n    S = sys.stdin.read().rstrip()\n    result = re.findall('A+|C+|G+|T+', S)\n    print(max(result, key=len))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip().split()\n    max_len = 0\n    curr_len = 0\n    for c in S[0]:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-17 21:41:28.034251 size on output set 2
