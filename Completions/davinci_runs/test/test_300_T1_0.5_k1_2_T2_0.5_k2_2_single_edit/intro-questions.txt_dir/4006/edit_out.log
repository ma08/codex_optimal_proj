2022-04-17 20:59:45.871070 num operations 1
2022-04-17 20:59:45.871085 size on input set 1
2022-04-17 20:59:51.213419 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# def main():\n#     f_in = open(\"f.in\", \"r\")\n#     n = int(f_in.readline())\n#     print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 0:\n        return 1\n    return count_reachable(n-1) + is_reachable(n-1, n-1)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 2\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == \"__main__\":\n    print(count_reachable(10))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    with open(\"input.txt\", \"r\") as f_in:\n        n = int(f_in.readline())\n        print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n-1) + is_reachable(n-1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650229186,
  "object": "edit"
}
2022-04-17 20:59:51.213653 fix syntax errors 2 ['\n\n# def main():\n#     f_in = open("f.in", "r")\n#     n = int(f_in.readline())\n#     print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 0:\n        return 1\n    return count_reachable(n-1) + is_reachable(n-1, n-1)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 2\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == "__main__":\n    print(count_reachable(10))\n', '\n\ndef main():\n    with open("input.txt", "r") as f_in:\n        n = int(f_in.readline())\n        print(count_reachable(n))\n\ndef count_reachable(n):\n    if n == 1:\n        return 2\n    return count_reachable(n-1) + is_reachable(n-1, n)\n\ndef is_reachable(n, m):\n    if n == m:\n        return 1\n    if n < 1:\n        return 0\n    if n % 10 == 0:\n        return is_reachable(n//10, m)\n    return is_reachable(n-1, m)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 20:59:51.213685 size on output set 2
2022-04-17 20:59:51.213696 num operations 1
2022-04-17 20:59:51.213701 size on input set 1
2022-04-17 20:59:54.060582 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef f(n):\n    return n + 1\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set([n])\n    while True:\n        n = f(n)\n    print(len(memo))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650229191,
  "object": "edit"
}
2022-04-17 20:59:54.060752 fix syntax errors 2 ['\ndef f(n):\n    return n + 1\n\ndef main():\n    n = int(input())\n    memo = set()\n    while n not in memo:\n        memo.add(n)\n        n = f(n)\n    print(len(memo))\n\nif __name__ == "__main__":\n    main()\n', '\ndef f(n):\n    n = n + 1\n    while n % 10 == 0:\n        n = n // 10\n    return n\n\ndef main():\n    n = int(input())\n    memo = set([n])\n    while True:\n        n = f(n)\n    print(len(memo))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 20:59:54.060775 size on output set 2
