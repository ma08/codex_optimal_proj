2022-04-17 21:28:42.795451 num operations 1
2022-04-17 21:28:42.795467 size on input set 1
2022-04-17 21:28:49.276680 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(n, m, c, b, a, k):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    count = 0\n    for i in range(n):\n        if a[i][0] * b[0] + a[i][1] * b[1] + a[i][2] * b[2] + c > k:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    n, m, c, k = map(int, raw_input().split())\n    b = list(map(int, raw_input().split()))\n    a = []\n    for i in range(n):\n        a.append(list(map(int, raw_input().split())))\n    print(solve(n, m, c, b, a, k))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(n, c, b, a):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    count = 0\n    for i in range(n):\n        if a[i][0] * b[0] + a[i][1] * b[1] + a[i][2] * b[2] + c >= 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    n, c = map(int, raw_input().split())\n    b = map(int, raw_input().split())\n    a = []\n    for i in range(n):\n        a.append(map(int, raw_input().split()))\n    print solve(n, c, b, a)\n"
    }
  ],
  "created": 1650230922,
  "object": "edit"
}
2022-04-17 21:28:49.276864 fix syntax errors 2 ['\n\ndef solve(n, m, c, b, a, k):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    count = 0\n    for i in range(n):\n        if a[i][0] * b[0] + a[i][1] * b[1] + a[i][2] * b[2] + c > k:\n            count += 1\n    return count\n\nif __name__ == \'__main__\':\n    n, m, c, k = map(int, raw_input().split())\n    b = list(map(int, raw_input().split()))\n    a = []\n    for i in range(n):\n        a.append(list(map(int, raw_input().split())))\n    print(solve(n, m, c, b, a, k))\n', '\n\ndef solve(n, c, b, a):\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print "Hello world!"\n    count = 0\n    for i in range(n):\n        if a[i][0] * b[0] + a[i][1] * b[1] + a[i][2] * b[2] + c >= 0:\n            count += 1\n    return count\n\nif __name__ == \'__main__\':\n    n, c = map(int, raw_input().split())\n    b = map(int, raw_input().split())\n    a = []\n    for i in range(n):\n        a.append(map(int, raw_input().split()))\n    print solve(n, c, b, a)\n']
2022-04-17 21:28:49.276894 size on output set 2
2022-04-17 21:28:49.276904 num operations 1
2022-04-17 21:28:49.276910 size on input set 1
2022-04-17 21:28:53.724188 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    count = 0\n    for i in range(n):\n        if sum(a[i][j]*b[j] for j in range(m)) + c > 0: # sum(a[i][j]*b[j] for j in range(m))\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650230929,
  "object": "edit"
}
2022-04-17 21:28:53.724353 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    n, m, c = map(int, sys.stdin.readline().split())\n    b = list(map(int, sys.stdin.readline().split()))\n    a = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    count = 0\n    for i in range(n):\n        if sum(a[i][j]*b[j] for j in range(m)) + c > 0: # sum(a[i][j]*b[j] for j in range(m))\n            count += 1\n    print(count)\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    print("Hello World!")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-17 21:28:53.724376 size on output set 2
