2022-04-17 21:14:08.614291 num operations 1
2022-04-17 21:14:08.614305 size on input set 1
2022-04-17 21:14:11.037739 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n"
    },
    {
      "index": 1,
      "text": "\nn,a,b = map(int,input().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n"
    }
  ],
  "created": 1650230048,
  "object": "edit"
}
2022-04-17 21:14:11.037932 fix syntax errors 2 ['\nn,a,b = map(int,input().split())\n\nif a > b:\n    a,b = b,a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n,a))\n', '\nn,a,b = map(int,input().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\nelse:\n    print(min(n, a))\n']
2022-04-17 21:14:11.037954 size on output set 2
2022-04-17 21:14:11.037964 num operations 1
2022-04-17 21:14:11.037970 size on input set 1
2022-04-17 21:14:14.668578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, a, b = map(int, input().split())\n\nprint(min(n * a, b))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"
    }
  ],
  "created": 1650230051,
  "object": "edit"
}
2022-04-17 21:14:14.668737 fix syntax errors 2 ['\n\nn, a, b = map(int, input().split())\n\nprint(min(n * a, b))\n', "#!/usr/bin/python3\n\nn, a, b = map(int, input().split())\n\n# The pattern is repeated every (a + b) balls.\n# We can find our answer by finding the remainder of n / (a + b)\n# and counting the number of blue balls in that pattern.\nn = n % (a + b)\n\n# If we don't have enough balls to fill out a pattern,\n# we can simply count the number of blue balls we have.\nif n <= a:\n    print(n)\nelse:\n    # Otherwise, count the number of blue balls in the last pattern.\n    print(a)\n"]
2022-04-17 21:14:14.668762 size on output set 2
