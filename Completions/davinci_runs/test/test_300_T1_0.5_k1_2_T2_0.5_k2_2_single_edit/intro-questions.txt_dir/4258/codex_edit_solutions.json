["var fs = require('fs');\n\n// fs.open('file.txt', 'r', function(err, fd) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file opened successfully');\n// });\n\n// fs.stat('file.txt', function(err, stats) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log(stats);\n// \tconsole.log('file stats successfully');\n// });\n\n// fs.writeFile('file.txt', 'Hello World!', function(err) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file write successfully');\n// });\n\n// fs.readFile('file.txt', function(err, data) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file read successfully');\n// \tconsole.log(data.toString());\n// });\n\n// fs.rename('file.txt', 'file2.txt', function(err) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file renamed successfully');\n// });\n\n// fs.appendFile('file2.txt', 'Hello World!', function(err) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file append successfully');\n// });\n\n// fs.unlink('file2.txt', function(err) {\n// \tif (err) {\n// \t\treturn console.error(err);\n// \t}\n// \tconsole.log('file deleted successfully');\n// });\n\nfs.readdir('.', function(err, files) {\n\tif (err) {\n\t\treturn console.error(err);\n\t}\n\tfiles.forEach(function(file) {\n\t\tconsole.log(file);\n\t});\n});\n", "\"\"\"\n\n\"\"\"\n\nimport os\n\n\ndef list_directory(path=None):\n    \"\"\"\n\n    :param path:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    return os.listdir(path)\n\n\ndef create_file(path, file_name):\n    \"\"\"\n\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if file_name is None:\n        return\n\n    file_path = os.path.join(path, file_name)\n    if not os.path.exists(file_path):\n        with open(file_path, 'w'):\n            pass\n\n\ndef create_directory(path, directory_name):\n    \"\"\"\n\n    :param path:\n    :param directory_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if directory_name is None:\n        return\n\n    directory_path = os.path.join(path, directory_name)\n    if not os.path.exists(directory_path):\n        os.mkdir(directory_path)\n\n\ndef delete_file(path, file_name):\n    \"\"\"\n\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if file_name is None:\n        return\n\n    file_path = os.path.join(path, file_name)\n    if os.path.exists(file_path):\n        os.remove(file_path)\n\n\ndef delete_directory(path, directory_name):\n    \"\"\"\n\n    :param path:\n    :param directory_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if directory_name is None:\n        return\n\n    directory_path = os.path.join(path, directory_name)\n    if os.path.exists(directory_path):\n        os.rmdir(directory_path)\n\n\ndef check_directory_exists(path, directory_name):\n    \"\"\"\n\n    :param path:\n    :param directory_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if directory_name is None:\n        return False\n\n    directory_path = os.path.join(path, directory_name)\n    if os.path.exists(directory_path):\n        return True\n\n    return False\n\n\ndef check_file_exists(path, file_name):\n    \"\"\"\n\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if file_name is None:\n        return False\n\n    file_path = os.path.join(path, file_name)\n    if os.path.exists(file_path):\n        return True\n\n    return False\n\n\ndef get_file_size(path, file_name):\n    \"\"\"\n\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if file_name is None:\n        return False\n\n    file_path = os.path.join(path, file_name)\n    if os.path.exists(file_path):\n        return os.path.getsize(file_path)\n\n    return False\n\n\ndef get_file_content(path, file_name):\n    \"\"\"\n\n    :param path:\n    :param file_name:\n    :return:\n    \"\"\"\n    if path is None:\n        path = os.getcwd()\n\n    if file_name is None:\n        return False\n\n    file_path = os.path.join(path, file_name)\n    if os.path.exists(file_path):\n        with open(file_path, 'r') as f:\n            return f.read()\n\n    return False\n", "\ndef main():\n    A, B, T = map(int, input().split())\n    print(B * (T // A + 1))\n\n\nif __name__ == '__main__':\n    main()\n"]