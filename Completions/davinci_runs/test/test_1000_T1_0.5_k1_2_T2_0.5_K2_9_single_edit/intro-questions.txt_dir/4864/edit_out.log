2022-04-16 12:47:46.848415 num operations 1
2022-04-16 12:47:46.848434 size on input set 1
2022-04-16 12:47:55.274480 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = list(input())\n    for k in range(zr):\n        for j in line:\n            for l in range(zc - 1):\n                print(j, end='')\n            print(j)\n"
    },
    {
      "index": 1,
      "text": "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n"
    },
    {
      "index": 2,
      "text": "\nr, c, zr, zc = map(int, input().split())\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n    print()\n"
    },
    {
      "index": 3,
      "text": "from sys import stdout\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                stdout.write(line[j])\n        print()\n"
    },
    {
      "index": 4,
      "text": "\nlines = []\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    lines.append(input())\nfor i in range(r):\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(lines[i][j], end='')\n        print()\n"
    },
    {
      "index": 5,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n"
    },
    {
      "index": 6,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n"
    },
    {
      "index": 7,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end = '')\n        print()\n"
    },
    {
      "index": 8,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n"
    }
  ],
  "created": 1650113267,
  "object": "edit"
}
2022-04-16 12:47:55.274805 fix syntax errors 9 ["\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = list(input())\n    for k in range(zr):\n        for j in line:\n            for l in range(zc - 1):\n                print(j, end='')\n            print(j)\n", "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n    print()\n", 'from sys import stdout\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                stdout.write(line[j])\n        print()\n', "\nlines = []\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    lines.append(input())\nfor i in range(r):\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(lines[i][j], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end = '')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n"]
2022-04-16 12:47:55.274848 size on output set 7
2022-04-16 12:47:55.274858 num operations 1
2022-04-16 12:47:55.274863 size on input set 1
2022-04-16 12:48:10.116510 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    #read input\n    R, C, ZR, ZC = map(int, sys.stdin.readline().split())\n    article = []\n    for _ in range(R):\n        article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    },
    {
      "index": 8,
      "text": "\n \nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"
    }
  ],
  "created": 1650113275,
  "object": "edit"
}
2022-04-16 12:48:10.116825 fix syntax errors 9 ["import sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n#\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "import sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "#!/usr/bin/env python3\n\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\nimport sys\n\ndef main():\n    #read input\n    R, C, ZR, ZC = map(int, sys.stdin.readline().split())\n    article = []\n    for _ in range(R):\n        article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n \nimport sys\n\n#read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n#enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n#print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n"]
2022-04-16 12:48:10.116876 size on output set 7
2022-04-16 12:48:10.116888 num operations 1
2022-04-16 12:48:10.116894 size on input set 1
2022-04-16 12:48:20.546271 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]  # R:\u884c\u6570 C:\u5217\u6570 Zr:\u884c\u65b9\u5411\u306e\u4f38\u7e2e\u7387 Zc:\u5217\u65b9\u5411\u306e\u4f38\u7e2e\u7387\n    article = [input() for i in range(R)]  # \u5165\u529b\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''  # \u4f38\u7e2e\u3057\u305f\u884c\u3092\u4fdd\u5b58\u3059\u308b\u5909\u6570\n            # \u4f38\u7e2e\u3059\u308b\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)  # \u51fa\u529b\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for _ in range(r)]\n    for i in range(r):\n        for _ in range(zr):\n            print(''.join(c * zc for c in article[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n                new_line = ''\n    for i in range(R):\n        for j in range(Zr):\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n                print(new_line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()] \n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = '' \n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r):\n        for j in range(zr):\n            new_line = ''\n            for k in range(c):\n                for l in range(zc):\n\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n        new_line = ''\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k] # TODO\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650113290,
  "object": "edit"
}
2022-04-16 12:48:20.546582 fix syntax errors 9 ["\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]  # R:行数 C:列数 Zr:行方向の伸縮率 Zc:列方向の伸縮率\n    article = [input() for i in range(R)]  # 入力\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''  # 伸縮した行を保存する変数\n            # 伸縮する\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)  # 出力\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for _ in range(r)]\n    for i in range(r):\n        for _ in range(zr):\n            print(''.join(c * zc for c in article[i]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n                new_line = ''\n    for i in range(R):\n        for j in range(Zr):\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n                print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()] \n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = '' \n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r):\n        for j in range(zr):\n            new_line = ''\n            for k in range(c):\n                for l in range(zc):\n\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n        new_line = ''\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n    for i in range(R):\n        for j in range(Zr):\n            new_line = ''\n            for k in range(C):\n                for l in range(Zc):\n                    new_line += article[i][k] # TODO\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 12:48:20.546647 size on output set 8
2022-04-16 12:48:20.546658 num operations 1
2022-04-16 12:48:20.546663 size on input set 1
2022-04-16 12:48:29.094392 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nr, c, zr, zc = map(int, input().strip().split())\n\nfor i in range(r):\n    line = input().strip()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print(\"\")\n"
    },
    {
      "index": 1,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 2,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 3,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nr, c, zr, zc = map(int, sys.stdin.readline().split())\n\nfor i in range(r):\n    line = sys.stdin.readline()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print(\"\")\n"
    },
    {
      "index": 5,
      "text": "import sys\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 6,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 7,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"
    },
    {
      "index": 8,
      "text": "\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\ns = sum(a)\nprint(s)\nprint(s % (n*m))\n"
    }
  ],
  "created": 1650113300,
  "object": "edit"
}
2022-04-16 12:48:29.094630 fix syntax errors 9 ['\n\nr, c, zr, zc = map(int, input().strip().split())\n\nfor i in range(r):\n    line = input().strip()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end=\'\')\n        print("")\n', "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", '\nimport sys\n\nr, c, zr, zc = map(int, sys.stdin.readline().split())\n\nfor i in range(r):\n    line = sys.stdin.readline()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end=\'\')\n        print("")\n', "import sys\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", '\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\ns = sum(a)\nprint(s)\nprint(s % (n*m))\n']
2022-04-16 12:48:29.094721 size on output set 5
2022-04-16 12:48:29.094737 num operations 1
2022-04-16 12:48:29.094742 size on input set 1
2022-04-16 12:48:42.500468 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "r, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n"
    },
    {
      "index": 1,
      "text": "\n\nr, c, zr, zc = map(int, input().split()) #get input\n\narticle = [] #define a list\nfor i in range(r):\n    article.append(input()) #append the input to the list\n\nfor i in range(r): #print the list\n    for j in range(zr): #print the list in a zr x zc matrix\n        for k in range(c): #print the list in a zr x zc matrix\n            for l in range(zc): #print the list in a zr x zc matrix\n                print(article[i][k], end=\"\") #print the list in a zr x zc matrix\n        print()\n"
    },
    {
      "index": 2,
      "text": "\nprint('Hello, world!')\n"
    },
    {
      "index": 3,
      "text": "\n\nr, c, zr, zc = map(int, input().split()) # r: \ud589\uc758 \uac1c\uc218, c: \uc5f4\uc758 \uac1c\uc218, zr: \ud589\uc744 \ub298\ub9ac\ub294 \ubc30\uc218, zc: \uc5f4\uc744 \ub298\ub9ac\ub294 \ubc30\uc218\n\narticle = [] # \uc785\ub825 \ubc1b\uc740 \ubb38\uc790\uc5f4\uc744 \ub2f4\uc744 \ubc30\uc5f4\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r): # \ud589\uc758 \uac1c\uc218\ub9cc\ud07c \ubc18\ubcf5\n    for j in range(zr): # zr\ub9cc\ud07c \ubc18\ubcf5\n        for k in range(c): # \uc5f4\uc758 \uac1c\uc218\ub9cc\ud07c \ubc18\ubcf5\n            for l in range(zc): # zc\ub9cc\ud07c \ubc18\ubcf5\n                print(article[i][k], end=\"\") # \uc785\ub825 \ubc1b\uc740 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\n        print() # \ud589 \uc218\ub97c \ub298\ub824\uc90c\n"
    },
    {
      "index": 4,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n"
    },
    {
      "index": 5,
      "text": "\n\n\ndef print_article(article, r, c, zr, zc):\n    for i in range(r):\n        for j in range(zr):\n            for k in range(c):\n                for l in range(zc):\n                    print(article[i][k], end=\"\")\n            print()\n\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nprint_article(article, r, c, zr, zc)\n"
    },
    {
      "index": 6,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r*zr):\n    for j in range(c*zc):\n        print(article[i//zr][j//zc], end=\"\")\n    print()\n"
    },
    {
      "index": 7,
      "text": "\n\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(list(input()))\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")  # end=\"\" is to prevent from new line\n        print()  # new line\n"
    },
    {
      "index": 8,
      "text": "\nr, c, zr, zc = map(int, input().split())\n\narticles = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n"
    }
  ],
  "created": 1650113309,
  "object": "edit"
}
2022-04-16 12:48:42.500699 fix syntax errors 9 ['r, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end="")\n        print()\n', '\n\nr, c, zr, zc = map(int, input().split()) #get input\n\narticle = [] #define a list\nfor i in range(r):\n    article.append(input()) #append the input to the list\n\nfor i in range(r): #print the list\n    for j in range(zr): #print the list in a zr x zc matrix\n        for k in range(c): #print the list in a zr x zc matrix\n            for l in range(zc): #print the list in a zr x zc matrix\n                print(article[i][k], end="") #print the list in a zr x zc matrix\n        print()\n', "\nprint('Hello, world!')\n", '\n\nr, c, zr, zc = map(int, input().split()) # r: 행의 개수, c: 열의 개수, zr: 행을 늘리는 배수, zc: 열을 늘리는 배수\n\narticle = [] # 입력 받은 문자열을 담을 배열\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r): # 행의 개수만큼 반복\n    for j in range(zr): # zr만큼 반복\n        for k in range(c): # 열의 개수만큼 반복\n            for l in range(zc): # zc만큼 반복\n                print(article[i][k], end="") # 입력 받은 문자열을 출력\n        print() # 행 수를 늘려줌\n', '\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end="")\n        print()\n', '\n\n\ndef print_article(article, r, c, zr, zc):\n    for i in range(r):\n        for j in range(zr):\n            for k in range(c):\n                for l in range(zc):\n                    print(article[i][k], end="")\n            print()\n\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nprint_article(article, r, c, zr, zc)\n', '\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r*zr):\n    for j in range(c*zc):\n        print(article[i//zr][j//zc], end="")\n    print()\n', '\n\nr, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(list(input()))\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end="")  # end="" is to prevent from new line\n        print()  # new line\n', '\nr, c, zr, zc = map(int, input().split())\n\narticles = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end="")\n        print()\n']
2022-04-16 12:48:42.500755 size on output set 9
2022-04-16 12:48:42.500775 num operations 1
2022-04-16 12:48:42.500781 size on input set 1
2022-04-16 12:48:51.636209 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nR, C, ZR, ZC = map(int, input().split())\narticle = [input() for _ in range(R)]\nfor row in article:\n    for i in range(ZR):\n        for char in row:\n            for j in range(ZC):\n                print(char, end='')\n        print()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print('')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main() :\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in range(R):\n        for i in range(ZR):\n            for char in article[row]:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in article: \n        for i in range(ZR):\n            for char in row: \n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    R, C, Zr, Zc = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(Zr):\n            for char in row:\n                for j in range(Zc):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    line_num = 0\n    article = [input() for _ in range(R)]\n        line_num += 1\n        if line_num == R:\n            line_num = 0\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            if line_num == 0:\n                print()\n            else:\n                print('', end='\\n')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in range(R):\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650113322,
  "object": "edit"
}
2022-04-16 12:48:51.636606 fix syntax errors 9 ["\nR, C, ZR, ZC = map(int, input().split())\narticle = [input() for _ in range(R)]\nfor row in article:\n    for i in range(ZR):\n        for char in row:\n            for j in range(ZC):\n                print(char, end='')\n        print()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n\n    main()\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print('')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main() :\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in range(R):\n        for i in range(ZR):\n            for char in article[row]:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [list(input()) for _ in range(R)]\n    for row in article: \n        for i in range(ZR):\n            for char in row: \n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(Zr):\n            for char in row:\n                for j in range(Zc):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    line_num = 0\n    article = [input() for _ in range(R)]\n        line_num += 1\n        if line_num == R:\n            line_num = 0\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            if line_num == 0:\n                print()\n            else:\n                print('', end='\\n')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in range(R):\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 12:48:51.636664 size on output set 9
2022-04-16 12:48:51.636676 num operations 1
2022-04-16 12:48:51.636681 size on input set 1
2022-04-16 12:49:34.427181 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\n    row = row.replace(\".\", \"..\").replace(\"x\", \"xx\")\nfor row in article:\n    for _ in range(zr):\n        print(row)\n"
    },
    {
      "index": 2,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 3,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 4,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 5,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n"
    },
    {
      "index": 6,
      "text": "\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article and print\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 7,
      "text": "\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    },
    {
      "index": 8,
      "text": "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n"
    }
  ],
  "created": 1650113331,
  "object": "edit"
}
2022-04-16 12:49:34.427468 fix syntax errors 9 ['\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\n    row = row.replace(".", "..").replace("x", "xx")\nfor row in article:\n    for _ in range(zr):\n        print(row)\n', '\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("X", "XX"))\n', '\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article and print\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        print(row.replace(".", "..").replace("x", "xx"))\n', '\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(".", "..").replace("x", "xx"))\n']
2022-04-16 12:49:34.427583 size on output set 5
