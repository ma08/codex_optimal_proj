2022-04-16 06:39:45.646740 num operations 1
2022-04-16 06:39:45.646757 size on input set 1
2022-04-16 06:39:54.330124 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from typing import List\n\n\n\ndef adjacent_replacements_algorithm(n: int, a: List[int]) -> List[int]:\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 1,
      "text": "\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 2,
      "text": "def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\n\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 3,
      "text": "\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 4,
      "text": "\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 5,
      "text": "\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 6,
      "text": "\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 7,
      "text": "def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n\n\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    },
    {
      "index": 8,
      "text": "def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n"
    }
  ],
  "created": 1650091185,
  "object": "edit"
}
2022-04-16 06:39:54.330421 fix syntax errors 9 ["from typing import List\n\n\n\ndef adjacent_replacements_algorithm(n: int, a: List[int]) -> List[int]:\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n", '\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', 'def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\n\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', '\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', '\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', '\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', '\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', 'def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n\n\ndef adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n', 'def adjacent_replacements_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == "__main__":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacements_algorithm(n, a))\n']
2022-04-16 06:39:54.330476 size on output set 5
2022-04-16 06:39:54.330487 num operations 1
2022-04-16 06:39:54.330492 size on input set 1
2022-04-16 06:40:05.447098 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] == a[j]:\n            a[i] = -1\n            a[j] = -1\n\n\nb = []\nfor i in range(n):\n    if a[i] != -1:\n        b.append(a[i])\n\nfor i in range(len(b)):\n    for j in range(i+1, len(b)):\n        if b[i] == b[j]:\n            b[i] = -1\n            b[j] = -1\n\nfor i in range(len(b)):\n    if b[i] != -1:\n        print(b[i], end=' ')\n\nfor i in range(n):\n    if a[i] == -1:\n        print(a[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 2,
      "text": "'''\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n'''\n    print(a[i], end=' ')\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 5,
      "text": "# input\n\nn = int(input())\na = [int(i) for i in input().split()]\n# processing\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n# output\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"
    }
  ],
  "created": 1650091194,
  "object": "edit"
}
2022-04-16 06:40:05.447479 fix syntax errors 9 ["\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] == a[j]:\n            a[i] = -1\n            a[j] = -1\n\n\nb = []\nfor i in range(n):\n    if a[i] != -1:\n        b.append(a[i])\n\nfor i in range(len(b)):\n    for j in range(i+1, len(b)):\n        if b[i] == b[j]:\n            b[i] = -1\n            b[j] = -1\n\nfor i in range(len(b)):\n    if b[i] != -1:\n        print(b[i], end=' ')\n\nfor i in range(n):\n    if a[i] == -1:\n        print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "'''\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n'''\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "# input\n\nn = int(input())\na = [int(i) for i in input().split()]\n# processing\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n# output\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "#!/usr/bin/env python3\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1):\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5 * 10 ** 8 + 1):\n    for j in range(n):\n        if a[j] == 2 * i - 1:\n            a[j] = 2 * i\n        elif a[j] == 2 * i:\n            a[j] = 2 * i - 1\n\nfor i in range(n):\n    print(a[i], end=' ')\n"]
2022-04-16 06:40:05.447530 size on output set 6
