2022-04-09 21:28:56.821981 """
There is a circular pond with a perimeter of K meters, and N houses around them.
The i-th house is built at a distance of A_i meters from the northmost point of the pond, measured clockwise around the pond.
When traveling between these houses, you can only go around the pond.
Find the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses.

-----Constraints-----
 - 2 \leq K \leq 10^6
 - 2 \leq N \leq 2 \times 10^5
 - 0 \leq A_1 < ... < A_N < K
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
K N
A_1 A_2 ... A_N

-----Output-----
Print the minimum distance that needs to be traveled when you start at one of the houses and visit all the N houses.

-----Sample Input-----
20 3
5 10 15

-----Sample Output-----
10

If you start at the 1-st house and go to the 2-nd and 3-rd houses in this order, the total distance traveled will be 10.
"""
2022-04-09 21:28:56.822029 --------------------------
2022-04-09 21:29:07.829534 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    a_list.append(a_list[0] + k)\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)"
    }
  ],
  "created": 1649554137,
  "id": "cmpl-4vGfpAhDEFsVuUk7x7RBg65Qln2lJ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:29:07.829823 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    a_list.append(a_list[0] + k)\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:29:07.829890 REASON stop
2022-04-09 21:29:07.831214 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)"
}
2022-04-09 21:29:07.831312 REASON stop
