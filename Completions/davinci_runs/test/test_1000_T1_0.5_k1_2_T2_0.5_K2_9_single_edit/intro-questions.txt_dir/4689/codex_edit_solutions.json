["import sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\nprint(ans)\n", "def main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split())) + [k]\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()\n", "K, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n", "\n\nimport sys, heapq\n\nn, m = map(int, input().split())\nA = list(map(int, input().split())) + [0] * (n + 1)\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n", "\n\"\"\"\nhttps://atcoder.jp/contests/abc137/tasks/abc137_b\n\"\"\"\n\ndef main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    a_list.append(a_list[0] + k)\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    a_list.append(a_list[0] + k)\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    k, n = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    a_list.append(a_list[0] + k)\n\n    min_dist = k\n    for i in range(n):\n        dist = a_list[i + 1] - a_list[i]\n        if dist < min_dist:\n            min_dist = dist\n\n    print(min_dist)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(-10, 10, 0.1)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.show()\n", "\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n", "\n\nimport sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\n\nprint(ans)\n", "import sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n", "import sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n", "\nimport sys\n\nK, N = map(int, input().split())\nA = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u9806\u5217\u3092\u8a66\u3059\nans = float('inf')\nfor i in range(N):\n    total = 0\n    for j in range(1, N):\n        total += A[(i + j) % N] - A[(i + j - 1) % N]\n    ans = min(ans, total)\n\nprint(ans)\n"]