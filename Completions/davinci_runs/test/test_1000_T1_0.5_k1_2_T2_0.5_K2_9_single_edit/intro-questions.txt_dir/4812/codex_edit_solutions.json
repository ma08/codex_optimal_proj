["\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\n\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split())\n\nnumOfPhrases=int(inpFile.readline())\n\nlistOfPhrases=[]\n\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split(\" \"))\n\ndef checkRhyme(word,listOfLists,listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)):\n    for j in range(len(listOfLists[i])):\n      if listOfLists[i][j] in word:\n        listOfEndings.append(listOfLists[i][j])\n        break\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])):\n      for k in range(len(listOfEndings)):\n        if listOfEndings[k] in listOfPhrases[i][j]:\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor _ in range(E):\n    endings.append(set(input().split()))\nP = int(input())\nphrases = []\nfor _ in range(P):\n    phrases.append(input())\n\n#S = \"drought\"\n#E = 2\n#endings = []\n#endings.append(set(\"aught ought aut acht\".split()))\n#endings.append(set(\"ought oubt outte out oute\".split()))\n#P = 5\n#phrases = []\n#phrases.append(\"tasty sprout\")\n#phrases.append(\"difficult route\")\n#phrases.append(\"worried and fraught\")\n#phrases.append(\"forever in doubt\")\n#phrases.append(\"apples and pears\")\n\nfor phrase in phrases:\n    print(phrase)\n    words = phrase.split()\n    for word in words:\n        for ending in endings:\n            if word.endswith(ending):\n                if words[-1] == word:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n", "\n\nfrom sys import stdin\n\nword = stdin.readline().strip()\nendings = []\nfor i in range(int(stdin.readline().strip())):\n    endings.append(stdin.readline().strip().split())\nfor i in range(int(stdin.readline().strip())):\n    phrase = stdin.readline().strip().split()\n    if len(phrase) == 2:\n        if word.endswith(phrase[1]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if word.endswith(phrase[1]) or word.endswith(phrase[2]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file, 'r')\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [set(f.readline().strip().split()) for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt') \n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [set(f.readline().strip().split()) for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# 1\n\"\"\"\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"\n\n# 2\n\"\"\"\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"\n", "\nimport sys\n\ndef get_input(file_name=None):\n    if file_name is None:\n        f = sys.stdin\n    else:\n        f = open(file_name)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [set(f.readline().strip().split()) for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file_name=None):\n    word, endings, phrases = get_input(file_name)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt')\n", "\n\n#1\n\"\"\"\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"\n\n#2\n\"\"\"\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"\n\n#3\n\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ndef rhyme_check(phrase, ending_lists):\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            return \"YES\"\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            return \"YES\"\n    return \"NO\"\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    print(rhyme_check(phrase, ending_lists))\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor _ in range(E):\n    endings.append(set(input().split()))\nP = int(input())\nphrases = []\nfor _ in range(P):\n    phrases.append(input())\n\n#S = \"drought\"\n#E = 2\n#endings = []\n#endings.append(set(\"aught ought aut acht\".split()))\n#endings.append(set(\"ought oubt outte out oute\".split()))\n#P = 5\n#phrases = []\n#phrases.append(\"tasty sprout\")\n#phrases.append(\"difficult route\")\n#phrases.append(\"worried and fraught\")\n#phrases.append(\"forever in doubt\")\n#phrases.append(\"apples and pears\")\n\nfor phrase in phrases:\n    words = phrase.split()\n    for word in words:\n        for ending in endings:\n            if word.endswith(tuple(ending)):\n                if words[-1] == word:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n", "\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split(\" \"))\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split(\" \"))\n\ndef check(word):\n    for i in endings:\n        if word in i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\nS = raw_input()\nE = int(raw_input())\nendings = []\nfor i in range(E):\n    endings.append(raw_input().split())\nP = int(raw_input())\nphrases = []\nfor i in range(P):\n    phrases.append(raw_input().split())\n\ndef check(word):\n    for i in endings:\n        if word in i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\"\"\"\nID: neelkolhe\nTASK: test\n\"\"\"\n\n\ninpFile=open('test.in','r')\noutFile=open('test.out','w')\n\n\na, b = (int(x) for x in inpFile.read().split())\noutFile.write(str(a+b) + '\\n')\n", "\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for i in endings:\n        if word in i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for ending in endings:\n        if word in ending:\n            return ending\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\n\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split())\n\nnumOfPhrases=int(inpFile.readline())\n\nlistOfPhrases=[]\n\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split())\n\ndef checkRhyme(word,listOfLists,listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)):\n    for j in range(len(listOfLists[i])):\n      if listOfLists[i][j] in word:\n        listOfEndings.append(listOfLists[i][j])\n        break\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])):\n      for k in range(len(listOfEndings)):\n        if listOfEndings[k] == listOfPhrases[i][j]:\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [f.readline().strip() for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings if last_word.endswith(ending)):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt')\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor _ in range(E):\n    endings.append(set(input().split()))\nP = int(input())\nphrases = []\nfor _ in range(P):\n    phrases.append(input())\n\n#S = \"drought\"\n#E = 2\n#endings = []\n#endings.append(set(\"aught ought aut acht\".split()))\n#endings.append(set(\"ought oubt outte out oute\".split()))\n#P = 5\n#phrases = []\n#phrases.append(\"tasty sprout\")\n#phrases.append(\"difficult route\")\n#phrases.append(\"worried and fraught\")\n#phrases.append(\"forever in doubt\")\n#phrases.append(\"apples and pears\")\n\nfor phrase in phrases:\n    words = phrase.split()\n    for word in words:\n        for ending in endings:\n            if word.endswith(tuple(ending)):\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n            break\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    endings = set(f.readline().strip().split())\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang_sample.txt')\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input())\n\ndef check(word):\n    for i in endings:\n        if word[-len(i):] == i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S):\n            if check(phrase[1]) == check(S):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\nimport sys\nimport re\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2 + int(lines[1])]]\n    phrases = lines[4 + int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport re\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2 + int(lines[1])]]\n    phrases = lines[4+int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings and word[-len(endings[0]):] != word:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nword = stdin.readline().strip()\nendings = []\nfor i in range(int(stdin.readline().strip())):\nendings.sort(key=lambda x: len(x[0]), reverse=True)\n    endings.append(stdin.readline().strip().split())\nfor i in range(int(stdin.readline().strip())):\n    phrase = stdin.readline().strip().split()\n    if len(phrase) == 2:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings))[0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings))[0] and phrase[2] in list(filter(lambda x: word.endswith(x), endings))[0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\n\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split())\n\nnumOfPhrases=int(inpFile.readline())\n\nlistOfPhrases=[]\n\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split())\n\ndef checkRhyme(word, listOfLists, listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)):\n    for j in range(len(listOfLists[i])):\n      if listOfLists[i][j] in word:\n        listOfEndings.append(listOfLists[i][j])\n        break\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])):\n      for k in range(len(listOfEndings)):\n        if listOfEndings[k] in listOfPhrases[i][j]:\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor _ in range(E):\n    endings.append(set(input().split()))\nP = int(input())\nphrases = []\nfor _ in range(P):\n    phrases.append(input())\n\n# S = \"drought\"\n# E = 2\n# endings = []\n# endings.append(set(\"aught ought aut acht\".split()))\n# endings.append(set(\"ought oubt outte out oute\".split()))\n# P = 5\n# phrases = []\n# phrases.append(\"tasty sprout\")\n# phrases.append(\"difficult route\")\n# phrases.append(\"worried and fraught\")\n# phrases.append(\"forever in doubt\")\n# phrases.append(\"apples and pears\")\n\nfor phrase in phrases:\n    words = phrase.split()\n    for word in words:\n        for ending in endings:\n            if word.endswith(tuple(ending)):\n                if words[-1] == word:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [f.readline().strip() for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings if last_word[-len(ending):] == ending):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt')\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split())\nnumOfPhrases=int(inpFile.readline())\nlistOfPhrases=[]\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split())\n\ndef checkRhyme(word,listOfLists,listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)):\n    for j in range(len(listOfLists[i])):\n      if listOfLists[i][j] in word:\n        listOfEndings.append(listOfLists[i][j])\n        break\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])):\n      for k in range(len(listOfEndings)):\n        if listOfEndings[k] in listOfPhrases[i][j]:\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\n\n\nprint(\"Hello World\")\n", "\ndef main():\n    word = input()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().split()))\n    for _ in range(int(input())):\n        phrase = input()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for i in endings:\n        if word[-len(i[0]):] == i[0]:\n            return i\n    return False\n\nfor phrase in phrases:\n    if check(phrase[1]) and check(S[-len(phrase[1]):]):\n        if check(phrase[1]) == check(S[-len(phrase[1]):]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    elif check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n        if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else: \n        print(\"NO\")\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\n\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split())\n\nnumOfPhrases=int(inpFile.readline())\n\nlistOfPhrases=[]\n\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split())\n\ndef checkRhyme(word,listOfLists,listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)): # iterate through list of lists\n    for j in range(len(listOfLists[i])): # iterate through each list\n      if listOfLists[i][j] in word: # if the word is in the list\n        listOfEndings.append(listOfLists[i][j]) # append the ending\n        break # stop the loop\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])): # iterate through each phrase\n      for k in range(len(listOfEndings)): # iterate through each ending\n        if listOfEndings[k] in listOfPhrases[i][j]: # if the ending is in the phrase\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\n\nimport sys\n\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2+int(lines[1])]]\n    phrases = lines[4+int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef get_input(file):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [f.readline().strip() for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip().split() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt')\n", "\n\nfrom sys import stdin\n\nword = stdin.readline().strip()\nendings = []\nfor i in range(int(stdin.readline().strip())):\n    endings.append(stdin.readline().strip().split())\nfor i in range(int(stdin.readline().strip())):\n    phrase = stdin.readline().strip().split()\n    if len(phrase) == 2:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings)):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings)) and phrase[2] in list(filter(lambda x: word.endswith(x), endings)):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\ndef main():\n    word = input()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().split()))\n    for _ in range(int(input())):\n        phrase = input()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]):  # noqa: E501\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline().strip())\n    endings = [set(f.readline().strip().split()) for _ in range(num_endings)]\n    num_phrases = int(f.readline().strip())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('rhyming_slang.txt')\n", "\n\n\"\"\"\nID: neelkolhe\nTASK: rhyme\n\"\"\"\n\n\ninpFile=open('rhyme.in','r')\noutFile=open('rhyme.out','w')\n\n\n\nword=inpFile.readline().strip()\nnumOfLists=int(inpFile.readline())\n\nlistOfLists=[]\n\nfor i in range(numOfLists):\n  listOfLists.append(inpFile.readline().strip().split(\" \"))\n\nnumOfPhrases=int(inpFile.readline())\n\nlistOfPhrases=[]\n\nfor i in range(numOfPhrases):\n  listOfPhrases.append(inpFile.readline().strip().split(\" \"))\n\ndef checkRhyme(word,listOfLists,listOfPhrases):\n  listOfEndings=[]\n  for i in range(len(listOfLists)):\n    for j in range(len(listOfLists[i])):\n      if listOfLists[i][j] in word:\n        listOfEndings.append(listOfLists[i][j])\n        break\n  for i in range(len(listOfPhrases)):\n    for j in range(len(listOfPhrases[i])):\n      for k in range(len(listOfEndings)):\n        if listOfEndings[k] in listOfPhrases[i][j]:\n          outFile.write(\"YES\\n\")\n          return\n  outFile.write(\"NO\\n\")\n  return\n\n\n\ncheckRhyme(word,listOfLists,listOfPhrases)\n", "\n\n#1\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\n#2\n\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\nimport sys\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2: 2 + int(lines[1])]]\n    phrases = lines[4+int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(\n                    words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(\n                    words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nword = stdin.readline().strip()\nendings = []\nfor i in range(int(stdin.readline().strip())):\n    endings.append(stdin.readline().strip().split())\nfor i in range(int(stdin.readline().strip())):\n    phrase = stdin.readline().strip().split()\n    if len(phrase) == 2:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings))[0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if phrase[1] in list(filter(lambda x: word.endswith(x), endings))[0] and phrase[2] in list(filter(lambda x: word.endswith(x), endings))[0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for ending in endings:\n        if word in ending:\n            return ending\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for i in endings:\n        if word in i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]) and check(S[-len(phrase[1]):]): # if both are in the endings\n            if check(phrase[1]) == check(S[-len(phrase[1]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]) and check(S[-len(phrase[2]):]): # if all three are in the endings\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\nimport sys\nimport re\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2+int(lines[1])]]\n    phrases = lines[4+int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor _ in range(E):\n    endings.append(set(input().split()))\nP = int(input())\nphrases = []\nfor _ in range(P):\n    phrases.append(input())\n\nfor phrase in phrases:\n    words = phrase.split()\n    for word in words:\n        for ending in endings:\n            if word.endswith(tuple(ending)):\n                if words[-1] == word:\n                    print(\"YES\")\n                else:\n                    print(\"NO\")\n", "\n\n#1\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\n#2\n\"\"\"\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"\n", "\n\ndef main():\n    word = input()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().split()))\n    for _ in range(int(input())):\n        phrase = input()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]): # noqa\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nword = stdin.readline().strip()\nendings = []\nfor i in range(int(stdin.readline().strip())):\n    endings.append(stdin.readline().strip().split())\nfor i in range(int(stdin.readline().strip())):\n    phrase = stdin.readline().strip().split()\n    if len(phrase) == 2:\n        if phrase[1] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))][0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if phrase[1] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))][0] and phrase[2] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))][0]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\n\nS = input()\nE = int(input())\nendings = []\nfor i in range(E):\n    endings.append(input().split())\nP = int(input())\nphrases = []\nfor i in range(P):\n    phrases.append(input().split())\n\ndef check(word):\n    for i in endings:\n        if word in i:\n            return i\n    return False\n\nfor phrase in phrases:\n    if len(phrase) == 2:\n        if check(phrase[1]):\n            if check(phrase[1]) == check(S[-len(phrase[1]):]) and len(check(phrase[1])) != 0:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    else:\n        if check(phrase[1]) and check(phrase[2]):\n            if check(phrase[1]) == check(phrase[2]) and check(phrase[2]) == check(S[-len(phrase[2]):]) and len(check(phrase[1])) != 0 and len(check(phrase[2])) != 0:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n", "\n\ndef main():\n    word = input()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().split()))\n    for _ in range(int(input())):\n        phrase = input()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]): # noqa: E501\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    word = input()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().split()))\n    for _ in range(int(input())):\n        phrase = phrase.strip()\n        phrase = input()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"Hello, world!\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#1\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n#2\nimport re\n\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if re.search(ending + \"$\", word):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\n\nimport sys\nimport re\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2 + int(lines[1])]]\n    phrases = lines[4 + int(lines[1]):]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) \\\n                    and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) \\\n                    and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    word = input().rstrip()\n    word_endings = []\n    for _ in range(int(input())):\n        word_endings.append(set(input().rstrip().split()))\n    for _ in range(int(input())):\n        phrase = input().rstrip()\n        if any(word.endswith(ending) for ending in word_endings[phrase.count(\" \")]):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport re\n\ndef main():\n    lines = [line.strip() for line in sys.stdin]\n    word = lines[0]\n    ending_lists = [line.split() for line in lines[2:2+int(lines[1])]\n    phrases = lines[4+int(lines[1]):]]\n\n    for phrase in phrases:\n        words = phrase.split()\n        if len(words) == 2:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[1], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if word_ends_with(words[0], ending_lists) and word_ends_with(words[2], ending_lists):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n\ndef word_ends_with(word, ending_lists):\n    for endings in ending_lists:\n        if word[-len(endings[0]):] in endings:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    word = stdin.readline().strip()\n    endings = []\n    for i in range(int(stdin.readline().strip())):\n        endings.append(stdin.readline().strip().split())\n    for i in range(int(stdin.readline().strip())):\n        phrase = stdin.readline().strip().split()\n        if len(phrase) == 2:\n            if phrase[1] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))]:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if phrase[1] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))] and phrase[2] in endings[endings.index(list(filter(lambda x: word.endswith(x), endings)))]:\n                print(\"YES\")\n            else:\n                print(\"NO\")\nmain()\n", "\ndef rhyme(word, ending_lists):\n    for ending_list in ending_lists:\n        for ending in ending_list:\n            if word.endswith(ending):\n                return True\n    return False\n\ncommon_word = input()\nending_lists = []\nfor i in range(int(input())):\n    ending_lists.append(input().split())\nfor i in range(int(input())):\n    phrase = input().split()\n    if len(phrase) == 2:\n        if rhyme(phrase[0], ending_lists) and rhyme(phrase[1], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if rhyme(phrase[1], ending_lists) and rhyme(phrase[2], ending_lists):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "\nimport sys\n\ndef get_input(file=None):\n    if file is None:\n        f = sys.stdin\n    else:\n        f = open(file)\n\n    word = f.readline().strip()\n    num_endings = int(f.readline())\n    endings = [set(f.readline().strip().split()) for _ in range(num_endings)]\n    num_phrases = int(f.readline())\n    phrases = [f.readline().strip() for _ in range(num_phrases)]\n\n    return word, endings, phrases\n\ndef main(file=None):\n    word, endings, phrases = get_input(file)\n\n    for phrase in phrases:\n        last_word = phrase.split()[-1]\n        if any(last_word.endswith(ending) for ending in endings):\n            print('YES')\n        else:\n            print('NO')\n\nif __name__ == '__main__':\n    main('/home/codio/workspace/public/py/rhyming_slang.txt')\n"]