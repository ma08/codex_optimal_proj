2022-04-09 23:01:42.532875 """
Write a program that, given a date in $2009$, determines the day of week on that date.

-----Input-----
The first line contains two positive integers $D$ (day) and $M$ (month) separated by a space. The numbers will be a valid date in $2009$.

-----Output-----
Output the day of the week on day $D$ of month $M$ in $2009$. The output should be one of the words “Monday”, “Tuesday”, “Wednesday”, “Thursday”, “Friday”, “Saturday” or “Sunday”.

-----Examples-----
Sample Input 1:
1 1
Sample Output 1:
Thursday

Sample Input 2:
17 1
Sample Output 2:
Saturday
"""
2022-04-09 23:01:42.532892 --------------------------
2022-04-09 23:02:14.894327 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649559703,
  "id": "cmpl-4vI7bqlY27HpQzLkHbrh0e8aUdffk",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:02:14.894701 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))"
}
2022-04-09 23:02:14.894753 REASON stop
2022-04-09 23:02:14.934350 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.934398 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])"
}
2022-04-09 23:02:14.934513 REASON stop
2022-04-09 23:02:14.935470 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.935528 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])"
}
2022-04-09 23:02:14.935627 REASON stop
2022-04-09 23:02:14.936386 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.936413 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:02:14.936520 REASON stop
2022-04-09 23:02:14.937172 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.937198 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()"
}
2022-04-09 23:02:14.937249 REASON stop
2022-04-09 23:02:14.937807 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.937832 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])"
}
2022-04-09 23:02:14.937884 REASON stop
2022-04-09 23:02:14.938435 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.938471 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))"
}
2022-04-09 23:02:14.938525 REASON stop
2022-04-09 23:02:14.939091 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
2022-04-09 23:02:14.939118 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:02:14.939173 REASON stop
2022-04-09 23:02:14.939736 test/intro-questions.txt_dir/4845/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4845/solutions.json'
