["\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d - 1\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number of days\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the number of days since the start of 2009\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n", "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) # read input\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0 # day of the week\n    for i in range(m-1):\n        day += months[i] \n    day += d\n    print(days[day % 7]) # print the day of the week\n\nif __name__ == '__main__':\n    main()\n", "\nfrom datetime import date\n\nd, m = map(int, input().split()) # split date and month\nd = date(2009, m, d) # create date using date class\nprint(d.strftime('%A')) # convert date to weekday\n", "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, input().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day%7])\n\nif __name__ == '__main__':\n    main()\n", "from datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "#!/usr/bin/env python3\n\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "\n\n# Process:\n# 1. Read the input.\n# 2. Compute the days of the week.\n# 3. Output the result.\n\n# 1. Read the input.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2. Compute the days of the week.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n", "n, m = map(int, input().strip().split())\narr = [0] * n\nfor i in range(m):\n    a, b, k = map(int, input().strip().split())\n    for j in range(a - 1, b):\n        arr[j] += k\n\n\nprint(max(arr))\n", "\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7]) \n\nmain()\n", "\nfrom datetime import date\n\nd, m = map(int, input().split())\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year - 1 + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\nprint(\"hello world\")\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())  # pylint: disable=C0103\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])  # pylint: disable=C0103\n\nmain()\n", "\n\nprint('Hello, World!')\n", "\n\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Thursday', 'Friday', 'Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 4) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number (it is the number of days from the start of 2009 to the input date)\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009 (this is the day of the week of the input date)\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n", "from sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\nif __name__ == '__main__':\n    main()\n", "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n\n# This program will output the day of the week of the input date\n# The algorithm used is as follows:\n# 1. Determine the number of days between the start of 2009 and the input date\n# 2. Find the day of the week of the start of 2009\n# 3. Add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number for dates before the start of 2009\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the start of 2009\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n", "\n", "\n\n# Get the input\nd, m = map(int, input().split())\n\n# Define the days of the week\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n", "\n\n#!/bin/python3\n\nimport os\nimport sys\n\n#\n# Complete the timeConversion function below.\n#\ndef timeConversion(s):\n    #\n    # Write your code here.\n    #\n\n\nif __name__ == '__main__':\n    f = open(os.environ['OUTPUT_PATH'], 'w')\n\n    s = input()\n\n    result = timeConversion(s)\n\n    f.write(result + '\\n')\n\n    f.close()\n", "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n", "\n\n#!/usr/bin/python\n\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month - 1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n", "\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 30,\n    9: 30,\n    10: 31,\n    11: 31,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(1, m + 1):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n", "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\n# d_m = input().split()\n# d = int(d_m[0])\n# m = int(d_m[1])\n\n# 2.\n# days = {\n#     0: \"Monday\",\n#     1: \"Tuesday\",\n#     2: \"Wednesday\",\n#     3: \"Thursday\",\n#     4: \"Friday\",\n#     5: \"Saturday\",\n#     6: \"Sunday\"\n# }\n\n# days_in_month = {\n#     1: 31,\n#     2: 28,\n#     3: 31,\n#     4: 30,\n#     5: 31,\n#     6: 30,\n#     7: 31,\n#     8: 31,\n#     9: 30,\n#     10: 31,\n#     11: 30,\n#     12: 31\n# }\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\n# day_of_week = 4\n# for m_i in range(1, m):\n#     day_of_week += days_in_month[m_i]\n# day_of_week += d\n# day_of_week %= 7\n\n# print(days[day_of_week])\n", "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1. Read the input\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n\n# 2. Compute the days of the week\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3. Output the result\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n", "\n\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1]) - 1\n\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n\n# 3.\nday_of_week = 4\nfor m_i in range(0, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\n\nprint(days[day_of_week])\n", "\n\nfrom datetime import date\n\nd, m = map(int, input().split())  # map function returns a list of results after applying the given function to each item of a given iterable\nd = date(2009, m, d)\nprint(d.strftime('%A'))\n", "\ndef main(): \"\"\"Determine the day of the week.\"\"\" day, month = map(int, input().split()) days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] total = 0 for i in range(month - 1): total += days[i] total += day print(week[(total - 1) % 7]) main()\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month):\n        if i == month - 1:\n            break\n        else:\n            total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n", "\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the solve function below.\ndef solve(meal_cost, tip_percent, tax_percent):\n    \n    tip = meal_cost * (tip_percent/100)\n    tax = meal_cost * (tax_percent/100)\n    total = meal_cost + tip + tax\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n", "\nd, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day]) \n", "\n# -*- coding: utf-8 -*-\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split())\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0\n    for i in range(m-1):\n        day += months[i]\n    day += d\n    print(days[day % 7])\nif __name__ == '__main__':\n    main()\n", "\n\n# Get the inputs\nd, m = map(int, input().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n", "\n\n# First, determine the number of days between the start of 2009 and the input date.\n# Then, find the day of the week of the start of 2009.\n# Finally, add the number of days to the start of 2009 and output the day of the week.\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\n# Note that this is a negative number\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\n# Note that this is the day of the week of the input date\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\n# Note that this is the day of the week of the input date\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n", "d, m = map(int, input().split())\n\ndays = (0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)\nday = sum(days[:m]) + d\nday %= 7\n\ndays_of_week = ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')\nprint(days_of_week[day])\n", "\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    d, m = map(int, sys.stdin.readline().split()) # \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430\n    days = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"] # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043d\u0435\u0439\n    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    day = 0 # \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n    for i in range(m-1):\n        day += months[i] # \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0434\u043d\u0435\u0439 \u0432 \u043c\u0435\u0441\u044f\u0446\u0435\n    day += d # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0434\u043d\u044f \u043d\u0435\u0434\u0435\u043b\u0438 \u043f\u043e \u0434\u0430\u0442\u0435\n    print(days[day % 7])\n\nif __name__ == '__main__':\n    main()\n", "\nimport datetime\n\nd, m = [int(x) for x in input().split()]\n\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1) \n\ndays = days.days % 7\n\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\nprint(days.strftime(\"%A\"))\n", "\n# Process\n# 1. Read the input\n# 2. Compute the days of the week\n# 3. Output the result\n# 1.\nd_m = input().split()\nd = int(d_m[0])\nm = int(d_m[1])\n# 2.\ndays = {\n    0: \"Monday\",\n    1: \"Tuesday\",\n    2: \"Wednesday\",\n    3: \"Thursday\",\n    4: \"Friday\",\n    5: \"Saturday\",\n    6: \"Sunday\"\n}\ndays_in_month = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31\n}\n# 1 Jan 2009 is a Thursday\n# 2 Jan 2009 is a Friday\n# 3 Jan 2009 is a Saturday\n# 4 Jan 2009 is a Sunday\n# 5 Jan 2009 is a Monday\n# 6 Jan 2009 is a Tuesday\n# 7 Jan 2009 is a Wednesday\n# 3.\nday_of_week = 4\nfor m_i in range(1, m):\n    day_of_week += days_in_month[m_i]\nday_of_week += d\nday_of_week %= 7\nprint(days[day_of_week])\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())  # day and month\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]  # week days\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[total % 7])\n\nmain()\n", "\nfrom sys import stdin\n\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nday_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndef get_day_of_week(day, month):\n    day_of_year = sum(days_in_month[:month-1]) + day\n    return day_of_week[(day_of_year + 3) % 7]\n\ndef main():\n    day, month = [int(x) for x in stdin.readline().strip().split()]\n    print(get_day_of_week(day, month))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# First, determine the number of days between the start of 2009 and the input date\n# Then, find the day of the week of the start of 2009\n# Finally, add the number of days to the start of 2009 and output the day of the week\n\n# Import date time library\nimport datetime\n\n# Get input\nd, m = [int(x) for x in input().split()]\n\n# Calculate the number of days between the start of 2009 and the input date\ndays = datetime.date(2009, m, d) - datetime.date(2009, 1, 1)\n\n# Find the day of the week of the start of 2009\ndays = days.days % 7\n\n# Add the number of days to the start of 2009\ndays = datetime.date(2009, 1, 1) + datetime.timedelta(days=days)\n\n# Output the day of the week of the input date\nprint(days.strftime(\"%A\"))\n", "\ndef main():\n    \"\"\"Determine the day of the week\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n", "\n\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())  # map(function, iterable, ...)\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n", "\ndef main():\n    \"\"\"Determine the day of the week.\"\"\"\n    day, month = map(int, input().split())\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    week = [\"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"]\n    total = 0\n    for i in range(month - 1):\n        total += days[i]\n    total += day\n    print(week[(total - 1) % 7])\n\nmain()\n", "#!/usr/bin/python3\n\n\n# Get the input\nd, m = map(int, input().strip().split())\n\n# Define the days of the week\ndays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n\n# Define the number of days in each month\ndaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n# Define the number of days since the first of January\ntotalDays = 0\n\n# Loop through each of the months and add the number of days to the total\nfor i in range(m - 1):\n    totalDays += daysInMonths[i]\n\n# Add the days to the total\ntotalDays += d\n\n# Print the day of the week\nprint(days[(totalDays + 3) % 7])\n"]