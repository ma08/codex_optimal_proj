2022-04-16 04:21:17.091621 num operations 1
2022-04-16 04:21:17.091638 size on input set 1
2022-04-16 04:21:27.487362 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# n, k = map(int, input().split())\n# s = input()\n\n# # if k > n or k == 0:\n# #     print(-1)\n# # else:\n# #     print(n - k)\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 3,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 4,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 5,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\nelif k == 1 and n == 1:\n    print(0)\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 6,
      "text": "\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 7,
      "text": "# https://atcoder.jp/contests/abc051/tasks/abc051_b\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    },
    {
      "index": 8,
      "text": "\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n"
    }
  ],
  "created": 1650082877,
  "object": "edit"
}
2022-04-16 04:21:27.487630 fix syntax errors 9 ['\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k + 1)\n', '\n\n# n, k = map(int, input().split())\n# s = input()\n\n# # if k > n or k == 0:\n# #     print(-1)\n# # else:\n# #     print(n - k)\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '\n\nn, k = map(int, input().split())\ns = input()\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\nelif k == 1 and n == 1:\n    print(0)\n    print(-1)\nelse:\n    print(n - k)\n', '\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '# https://atcoder.jp/contests/abc051/tasks/abc051_b\n\nn, k = map(int, input().split())\ns = input()\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n', '\nn, k = map(int, input().split())\ns = input()\n\n# if k > n or k == 0:\n#     print(-1)\n# else:\n#     print(n - k)\n\nif k > n or k == 0:\n    print(-1)\nelse:\n    print(n - k)\n']
2022-04-16 04:21:27.487665 size on output set 7
2022-04-16 04:21:27.487676 num operations 1
2022-04-16 04:21:27.487681 size on input set 1
2022-04-16 04:21:41.054172 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = n - i + j\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[j:]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp[0] = 0\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s and dp[j] + n - i + j > dp[i]:\n                dp[i] = dp[j] + n - i + j\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n        if dp[i] >= k:\n            print(i)\n            exit()\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i - 1, -1, -1):\n            if s[j:i] == s[i:2 * i - j]:\n                dp[i] = max(dp[i], dp[j] + i - j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i - 1):\n            if s[j:i] in s[j + 1:]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c.sort()\n    p = 0\n    q = 0\n    r = 0\n    ans = 0\n    for i in range(n):\n        while p < n and a[p] < b[i]:\n            p += 1\n        while q < n and b[i] > c[q]:\n            q += 1\n        ans += p * (n - q)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\nsys.setrecursionlimit(10 ** 7)\n\ndef dfs(v, p):\n    for u in tree[v]:\n        if u == p:\n            continue\n        dfs(u, v)\n        d[v] += d[u]\n\ndef dfs2(v, p, x):\n    for u in tree[v]:\n        if u == p:\n            continue\n        dfs2(u, v, x + d[v] - d[u])\n    ans[v] = x\n\n\ndef main():\n    global d, tree, ans\n    n = int(input())\n    tree = [[] for _ in range(n)]\n    for _ in range(n - 1):\n        a, b = map(int, input().split())\n        a -= 1\n        b -= 1\n        tree[a].append(b)\n        tree[b].append(a)\n    d = [0] * n\n    dfs(0, -1)\n    ans = [0] * n\n    dfs2(0, -1, 0)\n    print(*ans, sep='\\n')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650082887,
  "object": "edit"
}
2022-04-16 04:21:41.054424 fix syntax errors 9 ["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)  # dp[i] = n - i + j\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:  # s[j:i] is a substring of s\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s[j:]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp[0] = 0\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s and dp[j] + n - i + j > dp[i]:\n                dp[i] = dp[j] + n - i + j\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n        if dp[i] >= k:\n            print(i)\n            exit()\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i - 1, -1, -1):\n            if s[j:i] == s[i:2 * i - j]:\n                dp[i] = max(dp[i], dp[j] + i - j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i - 1):\n            if s[j:i] in s[j + 1:]:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c.sort()\n    p = 0\n    q = 0\n    r = 0\n    ans = 0\n    for i in range(n):\n        while p < n and a[p] < b[i]:\n            p += 1\n        while q < n and b[i] > c[q]:\n            q += 1\n        ans += p * (n - q)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        for j in range(i):\n            if s[j:i] in s:\n                dp[i] = max(dp[i], dp[j] + n - i + j)\n    if dp[n] < k:\n        print(-1)\n    else:\n        print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "import sys\nsys.setrecursionlimit(10 ** 7)\n\ndef dfs(v, p):\n    for u in tree[v]:\n        if u == p:\n            continue\n        dfs(u, v)\n        d[v] += d[u]\n\ndef dfs2(v, p, x):\n    for u in tree[v]:\n        if u == p:\n            continue\n        dfs2(u, v, x + d[v] - d[u])\n    ans[v] = x\n\n\ndef main():\n    global d, tree, ans\n    n = int(input())\n    tree = [[] for _ in range(n)]\n    for _ in range(n - 1):\n        a, b = map(int, input().split())\n        a -= 1\n        b -= 1\n        tree[a].append(b)\n        tree[b].append(a)\n    d = [0] * n\n    dfs(0, -1)\n    ans = [0] * n\n    dfs2(0, -1, 0)\n    print(*ans, sep='\\n')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 04:21:41.054567 size on output set 9
