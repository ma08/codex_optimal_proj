2022-04-16 06:15:38.245849 num operations 1
2022-04-16 06:15:38.245866 size on input set 1
2022-04-16 06:15:51.185564 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport math\nimport collections\nimport itertools\nimport array\nimport inspect\n\n\n# Set max recursion limit\nsys.setrecursionlimit(10000)\n\n# Debug output\ndef chkprint(*args):\n    names = {id(v):k for k,v in inspect.currentframe().f_back.f_locals.items()}\n    print(', '.join(names.get(id(arg),'???')+' = '+repr(arg) for arg in args))\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 4,
      "text": "# coding: utf-8\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\")) \n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))  # \u6587\u5b57\u5217S\u304b\u3089ABC\u306e\u6587\u5b57\u5217\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 7,
      "text": "# coding: utf-8\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count(\"ABC\"))\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n\n\n# import sys\n# N = int(sys.stdin.readline())\n# S = sys.stdin.readline().rstrip()\n# print(S.count(\"ABC\"))\nprint(S.count(\"ABC\"))\n"
    }
  ],
  "created": 1650089738,
  "object": "edit"
}
2022-04-16 06:15:51.185843 fix syntax errors 9 ['import sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))\n', 'import sys\nimport math\nimport collections\nimport itertools\nimport array\nimport inspect\n\n\n# Set max recursion limit\nsys.setrecursionlimit(10000)\n\n# Debug output\ndef chkprint(*args):\n    names = {id(v):k for k,v in inspect.currentframe().f_back.f_locals.items()}\n    print(\', \'.join(names.get(id(arg),\'???\')+\' = \'+repr(arg) for arg in args))\n\nprint(S.count("ABC"))\n', '\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))\n', 'import sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))\n', '# coding: utf-8\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC")) \n', '\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))  # 文字列SからABCの文字列の出現回数をカウント\n', '\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))\n', '# coding: utf-8\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\nprint(S.count("ABC"))\n', '\n\nimport sys\n\nN = int(sys.stdin.readline())\nS = sys.stdin.readline().rstrip()\n\n\n\n# import sys\n# N = int(sys.stdin.readline())\n# S = sys.stdin.readline().rstrip()\n# print(S.count("ABC"))\nprint(S.count("ABC"))\n']
2022-04-16 06:15:51.185925 size on output set 7
2022-04-16 06:15:51.185936 num operations 1
2022-04-16 06:15:51.185941 size on input set 1
2022-04-16 06:16:06.182264 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nfrom collections import defaultdict\nimport numpy as np\nimport math\nimport itertools\n\n\nsys.setrecursionlimit(1000000)\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\nread_list_int = lambda: list(map(int, sys.stdin.readline().strip().split(' ')))\nread_list_str = lambda: list(map(str, sys.stdin.readline().strip().split(' ')))\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n# ABC\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 3):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i:i + 3] == \"ABC\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())  # 1\u884c\u76ee\ns = input()  # 2\u884c\u76ee\nprint(s[:-8])  # \u6587\u5b57\u5217s\u306e\u672b\u5c3e\u306e8\u6587\u5b57\u3092\u524a\u9664\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "# coding: utf-8\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == \"A\" and s[i + 1] == \"B\" and s[i + 2] == \"C\":\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650089751,
  "object": "edit"
}
2022-04-16 06:16:06.182480 fix syntax errors 9 ['import sys\nfrom collections import defaultdict\nimport numpy as np\nimport math\nimport itertools\n\n\nsys.setrecursionlimit(1000000)\n# sys.stdin = open(\'input.txt\', \'r\')\n# sys.stdout = open(\'output.txt\', \'w\')\n\nread_list_int = lambda: list(map(int, sys.stdin.readline().strip().split(\' \')))\nread_list_str = lambda: list(map(str, sys.stdin.readline().strip().split(\' \')))\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n', '\n# ABC\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 3):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n', '\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i:i + 3] == "ABC":\n        count += 1\n\nprint(count)\n', '\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n', '\nn = int(input())  # 1行目\ns = input()  # 2行目\nprint(s[:-8])  # 文字列sの末尾の8文字を削除\n', '\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\nprint(count)\n', '# coding: utf-8\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n', '\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n', '\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n - 2):\n    if s[i] == "A" and s[i + 1] == "B" and s[i + 2] == "C":\n        count += 1\n\nprint(count)\n']
2022-04-16 06:16:06.182522 size on output set 7
