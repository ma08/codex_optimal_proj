2022-04-16 04:24:19.495235 num operations 1
2022-04-16 04:24:19.495252 size on input set 1
2022-04-16 04:24:30.093758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/python3\n\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "index": 6,
      "text": "n = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 7
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\nstrings = sorted([input() for i in range(n)], key=lambda x: len(x))\n\nif all([strings[i] in strings[i + 1] for i in range(n - 1)]):\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"
    }
  ],
  "created": 1650083059,
  "object": "edit"
}
2022-04-16 04:24:30.094152 NO RESULT
2022-04-16 04:24:30.094170 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 7
}
2022-04-16 04:24:30.094215 fix syntax errors 8 ["\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "#!/usr/bin/python3\n\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "n = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "\n\nn = int(input())\nstrings = sorted([input() for i in range(n)], key=lambda x: len(x))\n\nif all([strings[i] in strings[i + 1] for i in range(n - 1)]):\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"]
2022-04-16 04:24:30.094253 size on output set 4
2022-04-16 04:24:30.094262 num operations 1
2022-04-16 04:24:30.094267 size on input set 1
2022-04-16 04:24:40.505592 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport os\n\n\ndef find_files(path, ext):\n    files = []\n    for file in os.listdir(path):\n        if file.endswith(ext):\n            files.append(file)\n    return files\n\n\n\ndef main():\n    print(find_files(sys.argv[1], sys.argv[2]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n"
    }
  ],
  "created": 1650083070,
  "object": "edit"
}
2022-04-16 04:24:40.506014 fix syntax errors 9 ['\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport os\n\n\ndef find_files(path, ext):\n    files = []\n    for file in os.listdir(path):\n        if file.endswith(ext):\n            files.append(file)\n    return files\n\n\n\ndef main():\n    print(find_files(sys.argv[1], sys.argv[2]))\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] not in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print("YES")\n        for s in strings:\n            print(s)\n    else:\n        print("NO")\n\n\nif __name__ == "__main__":\n    main()\n', '\n']
2022-04-16 04:24:40.506070 size on output set 4
