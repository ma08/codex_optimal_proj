2022-04-16 08:31:23.591174 num operations 1
2022-04-16 08:31:23.591191 size on input set 1
2022-04-16 08:31:33.080223 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Answer-----\n\ns = input()\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\u3059\u308b\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u3001a_pos\u306b\u683c\u7d0d\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u3001z_pos\u306b\u683c\u7d0d\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\u3057\u3001\u51fa\u529b\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 2,
      "text": "\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 3,
      "text": "\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 4,
      "text": "\n# coding:utf-8\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\u3059\u308b\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 5,
      "text": "\ns = input()\na_pos = s.find('A')\nz_pos = s.rfind('Z')\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 6,
      "text": "# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 7,
      "text": "# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)\n"
    },
    {
      "index": 8,
      "text": "\n\n# -----Answer----- #\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)\n"
    }
  ],
  "created": 1650097883,
  "object": "edit"
}
2022-04-16 08:31:33.080503 fix syntax errors 9 ["\n# -----Answer-----\n\ns = input()\n# sから最初にAが出てくる位置を取得する\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得する\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算する\nprint(z_pos - a_pos + 1)\n", "\n\n# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得し、a_posに格納\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得し、z_posに格納\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算し、出力\nprint(z_pos - a_pos + 1)\n", "\n# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算\nprint(z_pos - a_pos + 1)\n", "\n# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算\nprint(z_pos - a_pos + 1)\n", "\n# coding:utf-8\n# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得する\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得する\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算する\nprint(z_pos - a_pos + 1)\n", "\ns = input()\na_pos = s.find('A')\nz_pos = s.rfind('Z')\nprint(z_pos - a_pos + 1)\n", "# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算\nprint(z_pos - a_pos + 1)\n", "# -----Answer-----\n\ns = input()\n\n# sから最初にAが出てくる位置を取得\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算\nprint(z_pos - a_pos + 1)\n", "\n\n# -----Answer----- #\n\ns = input()\n\n# sから最初にAが出てくる位置を取得\na_pos = s.find('A')\n\n# sから最後にZが出てくる位置を取得\nz_pos = s.rfind('Z')\n\n# AからZまでの長さを計算\nprint(z_pos - a_pos + 1)\n"]
2022-04-16 08:31:33.080549 size on output set 7
2022-04-16 08:31:33.080559 num operations 1
2022-04-16 08:31:33.080564 size on input set 1
2022-04-16 08:31:40.758098 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    s = input()\n    print(s.count('1'))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    print(len(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s.\n    2. find the index of 'A' and 'Z'.\n    3. compute the distance.\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find(\"A\")\n    idx_Z = s.rfind(\"Z\")\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    index_A = s.find('A')\n    index_Z = s.rfind('Z')\n    print(index_Z - index_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = raw_input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650097893,
  "object": "edit"
}
2022-04-16 08:31:40.758415 fix syntax errors 9 ["\ndef main():\n    s = input()\n    print(s.count('1'))\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    print(len(s))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    1. get the string s.\n    2. find the index of \'A\' and \'Z\'.\n    3. compute the distance.\n    """\n    s = input()\n    idx_A = s.find(\'A\')\n    idx_Z = s.rfind(\'Z\')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    idx_A = s.find("A")\n    idx_Z = s.rfind("Z")\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    index_A = s.find(\'A\')\n    index_Z = s.rfind(\'Z\')\n    print(index_Z - index_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    idx_A = s.find(\'A\')\n    idx_Z = s.rfind(\'Z\')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    idx_A = s.find(\'A\')\n    idx_Z = s.rfind(\'Z\')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = raw_input()\n    idx_A = s.find(\'A\')\n    idx_Z = s.rfind(\'Z\')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    1. get the string s\n    2. find the index of \'A\' and \'Z\'\n    3. compute the distance\n    """\n    s = input()\n    idx_A = s.find(\'A\')\n    idx_Z = s.rfind(\'Z\')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 08:31:40.758455 size on output set 7
