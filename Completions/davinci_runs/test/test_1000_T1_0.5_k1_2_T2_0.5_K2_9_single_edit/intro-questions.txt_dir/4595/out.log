2022-04-09 21:00:09.432217 """
Snuke has decided to construct a string that starts with A and ends with Z, by taking out a substring of a string s (that is, a consecutive part of s).
Find the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with A and ends with Z.

-----Constraints-----
 - 1 ≦ |s| ≦ 200{,}000
 - s consists of uppercase English letters.
 - There exists a substring of s that starts with A and ends with Z.

-----Input-----
The input is given from Standard Input in the following format:
s

-----Output-----
Print the answer.

-----Sample Input-----
QWERTYASDFZXCV

-----Sample Output-----
5

By taking out the seventh through eleventh characters, it is possible to construct ASDFZ, which starts with A and ends with Z.
"""
2022-04-09 21:00:09.432265 --------------------------
2022-04-09 21:00:20.482162 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649552409,
  "id": "cmpl-4vGDxUOIE4NLPd4R1E18N6aiWZnCt",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:00:20.482344 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# -----Answer-----\n\ns = input()\n\n# s\u304b\u3089\u6700\u521d\u306bA\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\na_pos = s.find('A')\n\n# s\u304b\u3089\u6700\u5f8c\u306bZ\u304c\u51fa\u3066\u304f\u308b\u4f4d\u7f6e\u3092\u53d6\u5f97\nz_pos = s.rfind('Z')\n\n# A\u304b\u3089Z\u307e\u3067\u306e\u9577\u3055\u3092\u8a08\u7b97\nprint(z_pos - a_pos + 1)"
}
2022-04-09 21:00:20.482379 REASON stop
2022-04-09 21:00:20.494290 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    \"\"\"\n    1. get the string s\n    2. find the index of 'A' and 'Z'\n    3. compute the distance\n    \"\"\"\n    s = input()\n    idx_A = s.find('A')\n    idx_Z = s.rfind('Z')\n    print(idx_Z - idx_A + 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:00:20.494443 REASON stop
