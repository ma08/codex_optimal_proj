2022-04-16 12:06:51.526961 num operations 1
2022-04-16 12:06:51.526980 size on input set 1
2022-04-16 12:06:58.447071 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 3,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 4,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #\u6587\u5b57\u3092\u51fa\u529b\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 5,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #\u6587\u5b57\u5217\u3092\u51fa\u529b\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 6,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n        if i == 2:\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 7,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        else:\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 8,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1650110811,
  "object": "edit"
}
2022-04-16 12:06:58.447480 fix syntax errors 9 ["\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #文字を出力\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #文字列を出力\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n        if i == 2:\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        else:\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-16 12:06:58.447600 size on output set 6
2022-04-16 12:06:58.447624 num operations 1
2022-04-16 12:06:58.447630 size on input set 1
2022-04-16 12:07:10.225438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nword = input()\nfor i in range(5):\n    for char in word:\n        if i == 0 or i == 4:\n            print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n        elif i == 1 or i == 3:\n            print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n        else:\n            print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i in [0, 4]:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i in [1, 3]:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\nword = input()\nfor i in range(5):\n    for char in word:\n        if i == 0 or i == 4:\n            print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n        elif i == 1 or i == 3:\n            print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n        else:\n            print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n    print()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".\", end=\"\")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650110818,
  "object": "edit"
}
2022-04-16 12:07:10.225689 fix syntax errors 9 ['\nword = input()\nfor i in range(5):\n    for char in word:\n        if i == 0 or i == 4:\n            print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n        elif i == 1 or i == 3:\n            print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n        else:\n            print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n    print()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i in [0, 4]:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i in [1, 3]:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\n\nmain()\n', '\nword = input()\nfor i in range(5):\n    for char in word:\n        if i == 0 or i == 4:\n            print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n        elif i == 1 or i == 3:\n            print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n        else:\n            print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n    print()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*") + ".", end="")\n        print()\n\nmain()\n']
2022-04-16 12:07:10.225804 size on output set 6
2022-04-16 12:07:10.225815 num operations 1
2022-04-16 12:07:10.225820 size on input set 1
2022-04-16 12:07:21.135147 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(inp[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(inp[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(inp[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(inp[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(input[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(input[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(input[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(input[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\n    print()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input_str = sys.stdin.readline().strip()\n    for i in range(0, len(input_str)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input_str[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input_str[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650110830,
  "object": "edit"
}
2022-04-16 12:07:21.135454 fix syntax errors 9 ['\n\nimport sys\n\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(inp[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(inp[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(inp[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(inp[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(input[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(input[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(input[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(input[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\n    print()\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input_str = sys.stdin.readline().strip()\n    for i in range(0, len(input_str)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input_str[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input_str[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:07:21.143177 size on output set 8
2022-04-16 12:07:21.143228 num operations 1
2022-04-16 12:07:21.143240 size on input set 1
2022-04-16 12:07:32.373147 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + \".\" + letters[i] + \".\" + frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 4,
      "text": "\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 5,
      "text": "\n#Solution\n\n#Get input\nword = input(\"\")\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 6,
      "text": "\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 7,
      "text": "\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 8,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1650110841,
  "object": "edit"
}
2022-04-16 12:07:32.373410 fix syntax errors 9 ['\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + "." + letters[i] + "." + frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n', '\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '#!/usr/bin/env python3\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n#Solution\n\n#Get input\nword = input("")\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n#Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-16 12:07:32.373576 size on output set 8
2022-04-16 12:07:32.373594 num operations 1
2022-04-16 12:07:32.373601 size on input set 1
2022-04-16 12:07:46.615221 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#SOLUTION\nword = input(\"Enter word: \")\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4 and letter == word[0]:\n            print(\"..#..\", end=\"\")\n        elif i == 0 or i == 4 and letter in word[2::3]:\n            print(\"..*..\", end=\"\")\n        elif i == 0 or i == 4:\n            print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3 and letter == word[0]:\n            print(\".#.#.\", end=\"\")\n        elif i == 1 or i == 3 and letter in word[2::3]:\n            print(\".*.*.\", end=\"\")\n        elif i == 1 or i == 3:\n            print(\".#.#.\", end=\"\")\n        elif i == 2 and letter == word[0]:\n            print(\"#.{}#\".format(letter), end=\"\")\n        elif i == 2 and letter in word[2::3]:\n            print(\"*.{}.*\".format(letter), end=\"\")\n        elif i == 2:\n            print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 3,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 4,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 5,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 6,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 7,
      "text": "\n\n#SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3] and letter != word[0]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3] and letter != word[0]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3] and letter != word[0]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 8,
      "text": "\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1650110852,
  "object": "edit"
}
2022-04-16 12:07:46.615623 fix syntax errors 9 ['\n\n#SOLUTION\nword = input("Enter word: ")\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4 and letter == word[0]:\n            print("..#..", end="")\n        elif i == 0 or i == 4 and letter in word[2::3]:\n            print("..*..", end="")\n        elif i == 0 or i == 4:\n            print("..#..", end="")\n        elif i == 1 or i == 3 and letter == word[0]:\n            print(".#.#.", end="")\n        elif i == 1 or i == 3 and letter in word[2::3]:\n            print(".*.*.", end="")\n        elif i == 1 or i == 3:\n            print(".#.#.", end="")\n        elif i == 2 and letter == word[0]:\n            print("#.{}#".format(letter), end="")\n        elif i == 2 and letter in word[2::3]:\n            print("*.{}.*".format(letter), end="")\n        elif i == 2:\n            print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n#SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3] and letter != word[0]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3] and letter != word[0]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3] and letter != word[0]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-16 12:07:46.615725 size on output set 5
2022-04-16 12:07:46.615736 num operations 1
2022-04-16 12:07:46.615742 size on input set 1
2022-04-16 12:08:05.482951 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i], 1)\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i], 1)\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frame = [\"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"]\n\nwendy_frame = [\"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 2,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"\n]\n\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 3,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 4,
      "text": "\n\npeter_pan_frame = [\"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"]\n\nwendy_frame = [\"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"]\n\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 5,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 6,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[0]\n        else:\n            frame_word += frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[1]\n        else:\n            frame_word += frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[3]\n        else:\n            frame_word += frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[4]\n        else:\n            frame_word += frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 7,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 8,
      "text": "\n\npeter_pan_frame = [\n    \"..#..\", \".#.#.\", \"#.X.#\", \".#.#.\", \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\", \".*.*.\", \"*.X.*\", \".*.*.\", \"..*..\"\n    ]\n\ndef create_frame(word):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = \"peter pan\"\nprint(create_frame(word))\n"
    }
  ],
  "created": 1650110866,
  "object": "edit"
}
2022-04-16 12:08:05.483460 fix syntax errors 9 ['\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i], 1)\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i], 1)\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = ["..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."]\n\nwendy_frame = ["..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."\n]\n\nwendy_frame = [\n    "..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."\n]\n\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = ["..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."]\n\nwendy_frame = ["..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."]\n\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[0]\n        else:\n            frame_word += frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[1]\n        else:\n            frame_word += frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[2].replace("X", word[i])\n        else:\n            frame_word += frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[3]\n        else:\n            frame_word += frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += frame[4]\n        else:\n            frame_word += frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frame = [\n    "..#..", ".#.#.", "#.X.#", ".#.#.", "..#.."\n    ]\n\nwendy_frame = [\n    "..*..", ".*.*.", "*.X.*", ".*.*.", "..*.."\n    ]\n\ndef create_frame(word):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peter_pan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peter_pan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peter_pan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peter_pan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = "peter pan"\nprint(create_frame(word))\n']
2022-04-16 12:08:05.483590 size on output set 7
2022-04-16 12:08:05.483604 num operations 1
2022-04-16 12:08:05.483610 size on input set 1
2022-04-16 12:08:20.489538 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\" \")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\ndef main():\n    word = input().strip()\n    for i in range(0, 5):\n        for c in word:  # for each character in the word\n            if i == 0:  # first line\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")  # print the first line\n            elif i == 1:  # second line\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")  # print the second line\n            elif i == 2:  # third line\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")  # print the third line\n            elif i == 3:  # fourth line\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")  # print the fourth line\n            elif i == 4:  # fifth line\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")  # print the fifth line\n        print()  # print new line\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\" \")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\" \")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\" \")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\" \")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")  # noqa\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef print_letter(c, i):\n    if i == 0:\n        print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n    elif i == 1:\n        print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n    elif i == 2:\n        print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n    elif i == 3:\n        print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n    elif i == 4:\n        print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n# Solution\n\ndef main():\n    word = input()\n    for i in range(0, 5):\n        for c in word:print_letter(c, i)\n        print()\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650110885,
  "object": "edit"
}
2022-04-16 12:08:20.489793 fix syntax errors 9 ['\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end=" ")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input().strip()\n    for i in range(0, 5):\n        for c in word:  # for each character in the word\n            if i == 0:  # first line\n                print("..#.." if c in "AEIOU" else "..*..", end="")  # print the first line\n            elif i == 1:  # second line\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")  # print the second line\n            elif i == 2:  # third line\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")  # print the third line\n            elif i == 3:  # fourth line\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")  # print the fourth line\n            elif i == 4:  # fifth line\n                print("..#.." if c in "AEIOU" else "..*..", end="")  # print the fifth line\n        print()  # print new line\n\n\nif __name__ == "__main__":\n    main()\n', '# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end=" ")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end=" ")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end=" ")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end=" ")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")  # noqa\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\ndef print_letter(c, i):\n    if i == 0:\n        print("..#.." if c in "AEIOU" else "..*..", end="")\n    elif i == 1:\n        print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n    elif i == 2:\n        print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n    elif i == 3:\n        print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n    elif i == 4:\n        print("..#.." if c in "AEIOU" else "..*..", end="")\n# Solution\n\ndef main():\n    word = input()\n    for i in range(0, 5):\n        for c in word:print_letter(c, i)\n        print()\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\n# Solution\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:08:20.489943 size on output set 9
2022-04-16 12:08:20.489960 num operations 1
2022-04-16 12:08:20.489965 size on input set 1
2022-04-16 12:08:35.159209 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#'\n        if ch == 'r': return '##..'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.###'\n        if ch == 'v': return '#.###'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...'\n        if ch == '1': return '..##..'\n        if ch == '2': return '..#..'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##'\n        if ch == '6': return '.#...'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#'\n        if ch == '9': return '##...'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n    return '.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.\\\\*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*' \n        if ch == '`': return '*.``.' \n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#' \n        if ch == '1': return '..##..#' \n        if ch == '2': return '..#..##' \n        if ch == '3': return '..###..' \n        if ch == '4': return '.#.##..' \n        if ch == '5': return '.#..##.' \n        if ch == '6': return '.#...##' \n        if ch == '7': return '##..#..' \n        if ch == '8': return '##.#...' \n        if ch == '9': return '##...#.' \n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n#\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n    return '     '\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n    return '     '\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...#'\n        if ch == 'q': return '##.#.#'\n        if ch == 'r': return '##..##'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n    if ch == '0': return '###...#'\n    if ch == '1': return '..##..#'\n    if ch == '2': return '..#..##'\n    if ch == '3': return '..###..'\n    if ch == '4': return '.#.##..'\n    if ch == '5': return '.#..##.'\n    if ch == '6': return '.#...##'\n    if ch == '7': return '##..#..'\n    if ch == '8': return '##.#...'\n    if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.###'\n        if ch == 'v': return '#.###'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1650110900,
  "object": "edit"
}
2022-04-16 12:08:35.159729 fix syntax errors 9 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#\'\n        if ch == \'r\': return \'##..\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.###\'\n        if ch == \'v\': return \'#.###\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...\'\n        if ch == \'1\': return \'..##..\'\n        if ch == \'2\': return \'..#..\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##\'\n        if ch == \'6\': return \'.#...\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#\'\n        if ch == \'9\': return \'##...\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n    return \'.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.\\\\*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\' \n        if ch == \'`\': return \'*.``.\' \n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\' \n        if ch == \'1\': return \'..##..#\' \n        if ch == \'2\': return \'..#..##\' \n        if ch == \'3\': return \'..###..\' \n        if ch == \'4\': return \'.#.##..\' \n        if ch == \'5\': return \'.#..##.\' \n        if ch == \'6\': return \'.#...##\' \n        if ch == \'7\': return \'##..#..\' \n        if ch == \'8\': return \'##.#...\' \n        if ch == \'9\': return \'##...#.\' \n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n#\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n    return \'     \'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n    return \'     \'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...#\'\n        if ch == \'q\': return \'##.#.#\'\n        if ch == \'r\': return \'##..##\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n    if ch == \'0\': return \'###...#\'\n    if ch == \'1\': return \'..##..#\'\n    if ch == \'2\': return \'..#..##\'\n    if ch == \'3\': return \'..###..\'\n    if ch == \'4\': return \'.#.##..\'\n    if ch == \'5\': return \'.#..##.\'\n    if ch == \'6\': return \'.#...##\'\n    if ch == \'7\': return \'##..#..\'\n    if ch == \'8\': return \'##.#...\'\n    if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.###\'\n        if ch == \'v\': return \'#.###\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-16 12:08:35.160004 size on output set 8
