2022-04-16 05:46:40.668233 num operations 1
2022-04-16 05:46:40.668251 size on input set 1
2022-04-16 05:46:57.973279 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    left.append((i, l[i]))\n\nfor i in range(n):\n    right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1, sep=' ')\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 5,
      "text": "from collections import deque\n\n\nn = int(input())  # \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\nm = int(input())  # \u0447\u0438\u0441\u043b\u043e \u043f\u0430\u043c\u044f\u0442\u0438\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(str(left[i][0] + 1) + \" \" + str(right[i][0] + 1))\n"
    },
    {
      "index": 7,
      "text": "\n# -*- coding: utf-8 -*-\n\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"
    }
  ],
  "created": 1650088000,
  "object": "edit"
}
2022-04-16 05:46:57.973579 fix syntax errors 9 ["\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    left.append((i, l[i]))\n\nfor i in range(n):\n    right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", "\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1, sep=' ')\n", "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", "from collections import deque\n\n\nn = int(input())  # число процессов\nm = int(input())  # число памяти\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", '\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == \'?\':\n        left.append((i, \'?\'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == \'?\':\n        right.append((i, \'?\'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == \'?\':\n        break\n    for j in range(n):\n        if right[j][1] == \'?\':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(str(left[i][0] + 1) + " " + str(right[i][0] + 1))\n', "\n# -*- coding: utf-8 -*-\n\n\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n", "\nn = int(input())\nl = input()\nr = input()\n\nleft = []\nright = []\n\nfor i in range(n):\n    if l[i] == '?':\n        left.append((i, '?'))\n    else:\n        left.append((i, l[i]))\n\nfor i in range(n):\n    if r[i] == '?':\n        right.append((i, '?'))\n    else:\n        right.append((i, r[i]))\n\nleft.sort(key=lambda x: x[1])\nright.sort(key=lambda x: x[1])\n\nans = 0\n\nfor i in range(n):\n    if left[i][1] == '?':\n        break\n    for j in range(n):\n        if right[j][1] == '?':\n            break\n        if left[i][1] == right[j][1]:\n            ans += 1\n            del left[i]\n            del right[j]\n            break\n\nleft.sort(key=lambda x: x[0])\nright.sort(key=lambda x: x[0])\n\nprint(ans)\n\nfor i in range(ans):\n    print(left[i][0] + 1, right[i][0] + 1)\n"]
2022-04-16 05:46:57.973765 size on output set 6
