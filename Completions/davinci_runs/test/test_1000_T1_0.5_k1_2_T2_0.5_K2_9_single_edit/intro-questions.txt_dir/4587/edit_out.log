2022-04-16 08:27:15.446978 num operations 1
2022-04-16 08:27:15.446995 size on input set 1
2022-04-16 08:27:27.569178 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_left(C, b))\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from bisect import bisect_left, bisect_right\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b)) \n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom bisect import bisect_left, bisect_right\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n"
    }
  ],
  "created": 1650097635,
  "object": "edit"
}
2022-04-16 08:27:27.569437 fix syntax errors 9 ['from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_left(C, b))\n\nprint(count)\n', 'from bisect import bisect_left, bisect_right\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', 'from bisect import bisect_left, bisect_right\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', '\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b)) \n\nprint(count)\n', '\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', '\n\nfrom bisect import bisect_left, bisect_right\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n', '\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\ncount = 0\n\nfor b in B:\n    count += bisect_left(A, b) * (N - bisect_right(C, b))\n\nprint(count)\n']
2022-04-16 08:27:27.569480 size on output set 7
2022-04-16 08:27:27.569490 num operations 1
2022-04-16 08:27:27.569496 size on input set 1
2022-04-16 08:27:41.124455 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\ndp = [[0] * M for _ in range(N)]\n\ndp[0][0] = A[0][0]\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        if i == 0:\n            dp[i][j] = dp[i][j - 1] + A[i][j]\n        elif j == 0:\n            dp[i][j] = dp[i - 1][j] + A[i][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + A[i][j]\n\nprint(dp[N - 1][M - 1])\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n#\n# N = int(input())\n#\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# C = list(map(int, input().split()))\n#\n# A.sort()\n# B.sort()\n# C.sort()\n#\n# ans = 0\n#\n# for i in range(N):\n#     a = bisect_left(B, A[i] + 1)\n#     c = bisect_left(C, B[i] + 1)\n#     ans += a * c\n#\n# print(ans)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "from bisect import bisect_left\n\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = N - bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nfrom bisect import bisect_left\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect.bisect_left(B, A[i] + 1)\n    c = bisect.bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n"
    }
  ],
  "created": 1650097647,
  "object": "edit"
}
2022-04-16 08:27:41.124796 fix syntax errors 9 ['\n\nN, M = map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(N)]\n\ndp = [[0] * M for _ in range(N)]\n\ndp[0][0] = A[0][0]\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        if i == 0:\n            dp[i][j] = dp[i][j - 1] + A[i][j]\n        elif j == 0:\n            dp[i][j] = dp[i - 1][j] + A[i][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + A[i][j]\n\nprint(dp[N - 1][M - 1])\n', '\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n', '\n#\n# N = int(input())\n#\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# C = list(map(int, input().split()))\n#\n# A.sort()\n# B.sort()\n# C.sort()\n#\n# ans = 0\n#\n# for i in range(N):\n#     a = bisect_left(B, A[i] + 1)\n#     c = bisect_left(C, B[i] + 1)\n#     ans += a * c\n#\n# print(ans)\n', '\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\nprint(ans)\n', 'from bisect import bisect_left\n\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = N - bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n', '\nfrom bisect import bisect_left\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n', '\n\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect.bisect_left(B, A[i] + 1)\n    c = bisect.bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n', '\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans = 0\n\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n', '\nN = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    a = bisect_left(B, A[i] + 1)\n    c = bisect_left(C, B[i] + 1)\n    ans += a * c\n\nprint(ans)\n']
2022-04-16 08:27:41.124847 size on output set 8
