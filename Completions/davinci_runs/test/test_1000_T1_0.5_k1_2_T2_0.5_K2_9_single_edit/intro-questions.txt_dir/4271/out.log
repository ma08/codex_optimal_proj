2022-04-09 19:27:17.657608 """
Takahashi went to an all-you-can-eat buffet with N kinds of dishes and ate all of them (Dish 1, Dish 2, \ldots, Dish N) once.
The i-th dish (1 \leq i \leq N) he ate was Dish A_i.
When he eats Dish i (1 \leq i \leq N), he gains B_i satisfaction points.
Additionally, when he eats Dish i+1 just after eating Dish i (1 \leq i \leq N - 1), he gains C_i more satisfaction points.
Find the sum of the satisfaction points he gained.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 20
 - 1 \leq A_i \leq N
 - A_1, A_2, ..., A_N are all different.
 - 1 \leq B_i \leq 50
 - 1 \leq C_i \leq 50

-----Input-----
Input is given from Standard Input in the following format:
N
A_1 A_2 ... A_N
B_1 B_2 ... B_N
C_1 C_2 ... C_{N-1}

-----Output-----
Print the sum of the satisfaction points Takahashi gained, as an integer.

-----Sample Input-----
3
3 1 2
2 5 4
3 6

-----Sample Output-----
14

Takahashi gained 14 satisfaction points in total, as follows:
 - First, he ate Dish 3 and gained 4 satisfaction points.
 - Next, he ate Dish 1 and gained 2 satisfaction points.
 - Lastly, he ate Dish 2 and gained 5 + 3 = 8 satisfaction points.
"""
2022-04-09 19:27:17.657641 --------------------------
2022-04-09 19:27:29.779613 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)"
    }
  ],
  "created": 1649546838,
  "id": "cmpl-4vEm6DIc3RZKYpLSkAATGUhZ13KZv",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:27:29.780008 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)"
}
2022-04-09 19:27:29.780051 REASON stop
2022-04-09 19:27:29.792629 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)"
}
2022-04-09 19:27:29.792729 REASON stop
