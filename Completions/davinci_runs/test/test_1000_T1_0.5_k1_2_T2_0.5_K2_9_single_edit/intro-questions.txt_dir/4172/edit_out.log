2022-04-16 05:30:45.719261 num operations 1
2022-04-16 05:30:45.719277 size on input set 1
2022-04-16 05:31:27.628582 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 1,
      "text": "\nprint(\"Hello World\")\n"
    },
    {
      "index": 2,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 3,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 4,
      "text": "\n\nn, m = map(int, input().split())\n\ngraph = [[] for i in range(n)]\n\nfor i in range(m):\n    a, b = map(int, input().split())\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)\n\nfor i in range(n):\n    print(len(graph[i]))\n"
    },
    {
      "index": 5,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 6,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n"
    },
    {
      "index": 7,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1 # a[-1] = a[-1] - 1\n        a[0] += 1 # a[0] = a[0] + 1\n        moves += 1\n        a.sort()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print(moves)\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\n\na = []\nfor i in range(n):\n    a.append(int(input()))\n\nprint(a)\n"
    }
  ],
  "created": 1650087045,
  "object": "edit"
}
2022-04-16 05:31:27.628871 fix syntax errors 9 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nprint("Hello World")\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\n\nn, m = map(int, input().split())\n\ngraph = [[] for i in range(n)]\n\nfor i in range(m):\n    a, b = map(int, input().split())\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)\n\nfor i in range(n):\n    print(len(graph[i]))\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1\n        a[0] += 1\n        moves += 1\n        a.sort()\n    print(moves)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nmoves = 0\n\nif k == n:\n    print(a[-1] - a[0])\nelse:\n    while a[-1] != a[0]:\n        a[-1] -= 1 # a[-1] = a[-1] - 1\n        a[0] += 1 # a[0] = a[0] + 1\n        moves += 1\n        a.sort()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    print(moves)\n', '\n\nn = int(input())\n\na = []\nfor i in range(n):\n    a.append(int(input()))\n\nprint(a)\n']
2022-04-16 05:31:27.628978 size on output set 6
2022-04-16 05:31:27.628989 num operations 1
2022-04-16 05:31:27.628994 size on input set 1
2022-04-16 05:31:37.799345 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "import sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i+1]:\n            i += 1\n        elif a[j] == a[j-1]:\n            j -= 1\n            a[i] +=1\n            a[j] -=1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a)-k\n    return moves\n\ndef main():\n    n,k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int,sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650087087,
  "object": "edit"
}
2022-04-16 05:31:37.799608 NO RESULT
2022-04-16 05:31:37.799618 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-16 05:31:37.799773 fix syntax errors 8 ["import sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i+1]:\n            i += 1\n        elif a[j] == a[j-1]:\n            j -= 1\n            a[i] +=1\n            a[j] -=1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a)-k\n    return moves\n\ndef main():\n    n,k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int,sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef min_moves(a, k):\n    a.sort()\n    moves = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] == a[i + 1]:\n            i += 1\n        elif a[j] == a[j - 1]:\n            j -= 1\n        elif a[i] + 1 < a[j]:\n            a[i] += 1\n            a[j] -= 1\n            moves += 1\n        else:\n            i += 1\n            j -= 1\n    if len(set(a)) > 1:\n        moves += len(a) - k\n    return moves\n\ndef main():\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    print(min_moves(a, k))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 05:31:37.799950 size on output set 6
