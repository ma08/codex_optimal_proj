2022-04-16 08:20:39.580696 num operations 1
2022-04-16 08:20:39.580712 size on input set 1
2022-04-16 08:20:49.015084 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split(' '))\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\ndef main():\n\tn, m = map(int, stdin.readline().split())\n\tif m == 0:\n\t\tprint(n * 100)\n\telif m == 1:\n\t\tprint(n * 100 + 1900)\n\telse:\n\t\tprint(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2.0) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0: # first line\n        print(n * 100)\n    elif m == 1: # second line\n        print(n * 100 + 1900)\n    else: # third line\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([0.5 ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650097239,
  "object": "edit"
}
2022-04-16 08:20:49.015377 fix syntax errors 9 ["\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split(' '))\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n\tn, m = map(int, stdin.readline().split())\n\tif m == 0:\n\t\tprint(n * 100)\n\telif m == 1:\n\t\tprint(n * 100 + 1900)\n\telse:\n\t\tprint(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2.0) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0: # first line\n        print(n * 100)\n    elif m == 1: # second line\n        print(n * 100 + 1900)\n    else: # third line\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([0.5 ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 08:20:49.015432 size on output set 8
2022-04-16 08:20:49.015442 num operations 1
2022-04-16 08:20:49.015447 size on input set 1
2022-04-16 08:20:55.439390 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900 * M * success_prob + 100 * (N - M))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650097249,
  "object": "edit"
}
2022-04-16 08:20:55.439736 fix syntax errors 9 ["\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900 * M * success_prob + 100 * (N - M))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 08:20:55.439771 size on output set 2
