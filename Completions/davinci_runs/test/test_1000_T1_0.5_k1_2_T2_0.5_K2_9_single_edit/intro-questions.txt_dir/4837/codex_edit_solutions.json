["\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for _ in range(friends):\n        friend = sys.stdin.readline().strip()\n        for i in range(rounds):\n            if sven[i] == friend[i]:\n                score += 1\n            elif (sven[i] == \"R\" and friend[i] == \"S\") or (sven[i] == \"S\" and friend[i] == \"P\") or (sven[i] == \"P\" and friend[i] == \"R\"):\n                score += 2\n        max_score = max(max_score, score)\n        score = 0 \n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    #if len(sven) != len(friends[0]):\n    #    print('Error: Sven and friends have different numbers of rounds')\n    #    return -1\n    #else:\n    #    rounds = len(sven)\n    score = 0\n    for i in range(len(sven)-1):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)-1):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            for friend in friends:\n                if friend == 'P':\n                    score += 2\n                    break\n                elif friend == 'S':\n                    score += 1\n                    break\n        elif sven[i] == 'P':\n            for friend in friends:\n                if friend == 'R':\n                    score += 2\n                    break\n                elif friend == 'P':\n                    score += 1\n                    break\n        elif sven[i] == 'R':\n            for friend in friends:\n                if friend == 'S':\n                    score += 2\n                    break\n                elif friend == 'R':\n                    score += 1\n                    break\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            for friend in friends:\n                if friend == 'P':\n                    max_score += 1\n                    break\n                elif friend == 'S':\n                    max_score += 0\n                    break\n            else:\n                max_score += 2\n        elif sven[i] == 'P':\n            for friend in friends:\n                if friend == 'R':\n                    max_score += 1\n                    break\n                elif friend == 'P':\n                    max_score += 0\n                    break\n            else:\n                max_score += 2\n        elif sven[i] == 'R':\n            for friend in friends:\n                if friend == 'S':\n                    max_score += 1\n                    break\n                elif friend == 'R':\n                    max_score += 0\n                    break\n            else:\n                max_score += 2\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\ndef main():\n    print(\"hello world\")\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for i in range(t):\n        r = int(sys.stdin.readline().strip())\n        sven = sys.stdin.readline().strip()\n        n = int(sys.stdin.readline().strip())\n        friends = []\n        for i in range(n):\n            friends.append(sys.stdin.readline().strip())\n\n        # Actual score\n        score = 0\n        for i in range(r):\n            for friend in friends:\n                if sven[i] == 'R':\n                    if friend[i] == 'S':\n                        score += 2\n                    elif friend[i] == 'P':\n                        score += 1\n                elif sven[i] == 'S':\n                    if friend[i] == 'P':\n                        score += 2\n                    elif friend[i] == 'R':\n                        score += 1\n                elif sven[i] == 'P':\n                    if friend[i] == 'R':\n                        score += 2\n                    elif friend[i] == 'S':\n                        score += 1\n        print(score)\n\n        score = 0\n        for i in range(r):\n            for friend in friends:\n                if sven[i] == 'R':\n                    if friend[i] == 'S':\n                        score += 2\n                elif sven[i] == 'S':\n                    if friend[i] == 'P':\n                        score += 2\n                elif sven[i] == 'P':\n                    if friend[i] == 'R':\n                        score += 2\n        score += r\n        print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count * 1\n        max_score += win_count * 2 + (friends - win_count - tie_count) * 2\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n    friends_str = ''.join(friends)\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends_str:\n                score += 2\n            elif 'S' in friends_str:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends_str:\n                score += 2\n            elif 'P' in friends_str:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends_str:\n                score += 2\n            elif 'R' in friends_str:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends_str:\n                max_score += 2\n            elif 'S' not in friends_str:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends_str:\n                max_score += 2\n            elif 'P' not in friends_str:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends_str:\n                max_score += 2\n            elif 'R' not in friends_str:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    #if len(sven) != len(friends[0]):\n    #    print('Error: Sven and friends have different numbers of rounds')\n    #    return -1\n    #else:\n    #    rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score, max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nmain()\n", "import sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\n#def get_score(sven, friends):\n#    #if len(sven) != len(friends[0]):\n#    #    print('Error: Sven and friends have different numbers of rounds')\n#    #    return -1\n#    #else:\n#    #    rounds = len(sven)\n#    score = 0\n#    for i in range(len(sven)):\n#        if sven[i] == 'S':\n#            if friends[i] == 'P':\n#                score += 1\n#            elif friends[i] == 'R':\n#                score += 2\n#        elif sven[i] == 'P':\n#            if friends[i] == 'R':\n#                score += 1\n#            elif friends[i] == 'S':\n#                score += 2\n#        elif sven[i] == 'R':\n#            if friends[i] == 'S':\n#                score += 1\n#            elif friends[i] == 'P':\n#                score += 2\n#    return score\n\n#def get_max_score(sven, friends):\n#    max_score = 0\n#    for i in range(len(sven)):\n#        if sven[i] == 'S':\n#            if friends[i] == 'R':\n#                max_score += 2\n#            elif friends[i] == 'P':\n#                max_score += 1\n#        elif sven[i] == 'P':\n#            if friends[i] == 'S':\n#                max_score += 2\n#            elif friends[i] == 'R':\n#                max_score += 1\n#        elif sven[i] == 'R':\n#            if friends[i] == 'P':\n#                max_score += 2\n#            elif friends[i] == 'S':\n#                max_score += 1\n#    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    #score = get_score(sven, friends)\n    #max_score = get_max_score(sven, friends)\n    #print(score)\n    #print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                wins += 1\n        actual_score += wins * 2\n        actual_score += ties\n\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                sven_ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                sven_wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                sven_wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2\n        largest_score += sven_ties\n\n    print(actual_score)\n    print(largest_score)\n\nmain()\n", "\n\nimport sys\nimport math\n\ndef get_score(sven, friends):\n    #if len(sven) != len(friends[0]):\n    #    print('Error: Sven and friends have different numbers of rounds')\n    #    return -1\n    #else:\n    #    rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(\"Score: \" + score)\n    print(\"Max score: \" + max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for i in range(n):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score\n    score = 0\n    for i in range(n):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()\n", "\ndef is_possible(sven, friend_symbol, round):\n    if sven[round] == friend_symbol[round]:\n        return True\n    elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n        return True\n    elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n        return True\n    elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n        return True\n    else:\n        return False\n\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if is_possible(sven, friend_symbol, round):\n                ties += 1\n                #elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                #wins += 1\n                #elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                #wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if is_possible(sven, friend_symbol, round):\n                sven_ties += 1\n            #elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n            #sven_wins += 1\n            #elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n            #sven_wins += 1\n            #elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n            #sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = [None] * friends\n    for i in range(friends):\n        friends_symbols[i] = input()\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for _ in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds)\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score\n    # score = 0\n    # for i in range(r):\n    #     for friend in friends:\n    #         if sven[i] == 'R':\n    #             if friend[i] == 'S':\n    #                 score += 2\n    #         elif sven[i] == 'S':\n    #             if friend[i] == 'P':\n    #                 score += 2\n    #         elif sven[i] == 'P':\n    #             if friend[i] == 'R':\n    #                 score += 2\n    # score += r\n    # print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\":\n            if friend[i] == \"S\":\n                score += 2\n            else:\n                score += 0\n        elif sven[i] == \"S\":\n            if friend[i] == \"P\":\n                score += 2\n            else:\n                score += 0\n        elif sven[i] == \"P\":\n            if friend[i] == \"R\":\n                score += 2\n            else:\n                score += 0\n    return score\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score, sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(friend)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        print(score)\n        score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends:\n                score += 2\n            elif 'S' in friends:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(str(score) + \"\\n\" + str(max_score))\n\n\nmain()\n", "\n#\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\n\ndef get_score(sven, friends):\n    if len(sven) != len(friends[0]):\n        print('Error: Sven and friends have different numbers of rounds')\n        return -1\n    else:\n        rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\n# import sys\n#\n# def main():\n#     r = int(sys.stdin.readline().strip())\n#     sven = sys.stdin.readline().strip()\n#     n = int(sys.stdin.readline().strip())\n#     friends = []\n#     for i in range(n):\n#         friends.append(sys.stdin.readline().strip())\n#\n#     # Actual score\n#     score = 0\n#     for i in range(r):\n#         for friend in friends:\n#             if sven[i] == 'R':\n#                 if friend[i] == 'S':\n#                     score += 2\n#                 elif friend[i] == 'P':\n#                     score += 1\n#             elif sven[i] == 'S':\n#                 if friend[i] == 'P':\n#                     score += 2\n#                 elif friend[i] == 'R':\n#                     score += 1\n#             elif sven[i] == 'P':\n#                 if friend[i] == 'R':\n#                     score += 2\n#                 elif friend[i] == 'S':\n#                     score += 1\n#     print(score)\n#\n#     # Max score\n#     score = 0\n#     for i in range(r):\n#         for friend in friends:\n#             if sven[i] == 'R':\n#                 if friend[i] == 'S':\n#                     score += 2\n#             elif sven[i] == 'S':\n#                 if friend[i] == 'P':\n#                     score += 2\n#             elif sven[i] == 'P':\n#                 if friend[i] == 'R':\n#                     score += 2\n#     score += r\n#     print(score)\n#\n# if __name__ == \"__main__\":\n#     main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            for friend in friends:\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip().upper()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip().upper())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score) \n\n    # Max score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends:\n                score += 2\n            elif 'S' in friends:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score, max_score)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score = 2 * rounds\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds\n    print(score)\n    print(max_score)\n    score = 0\n    max_score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score:\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score:\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = list(sys.stdin.readline().strip())\n    friends = int(sys.stdin.readline())\n    friends_symbols = {}\n    for i in range(friends):\n        friends_symbols[i] = list(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = paper = scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == 'R':\n                rock += 1\n            elif friends_symbols[j][i] == 'P':\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == 'R':\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == 'P':\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = [input() for i in range(friends)]\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        friends_symbols_in_round = [x[i] for x in friends_symbols]\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends[i]:\n                score += 2\n            elif 'S' in friends[i]:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends[i]:\n                score += 2\n            elif 'P' in friends[i]:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends[i]:\n                score += 2\n            elif 'R' in friends[i]:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends[i]:\n                max_score += 2\n            elif 'S' not in friends[i]:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends[i]:\n                max_score += 2\n            elif 'P' not in friends[i]:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends[i]:\n                max_score += 2\n            elif 'R' not in friends[i]:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            for friend in friends:\n                if friend[i] == 'P':\n                    score += 2\n                    break\n                elif friend[i] == 'S':\n                    score += 1\n                    break\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for i in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[i] == friend_symbol[i]:\n                ties += 1\n            elif sven[i] == \"P\" and friend_symbol[i] == \"R\":\n                wins += 1\n            elif sven[i] == \"R\" and friend_symbol[i] == \"S\":\n                wins += 1\n            elif sven[i] == \"S\" and friend_symbol[i] == \"P\":\n                wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for i in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[i] == friend_symbol[i]:\n                sven_ties += 1\n            elif sven[i] == \"P\" and friend_symbol[i] == \"R\":\n                sven_wins += 1\n            elif sven[i] == \"R\" and friend_symbol[i] == \"S\":\n                sven_wins += 1\n            elif sven[i] == \"S\" and friend_symbol[i] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip())\n\n    # Actual score\n    score = 0\n    for friend in friends:\n        for i in range(r):\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n                elif friend[i] == 'P':\n                    score += 1\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n                elif friend[i] == 'R':\n                    score += 1\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n                elif friend[i] == 'S':\n                    score += 1\n    print(score)\n\n    # Max score\n    score = 0\n    for friend in friends:\n        for i in range(r):\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += n * r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 2 * rounds\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 2 * rounds\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                sven_ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                sven_wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                sven_wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()\n\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friend_symbols = []\n    for i in range(friends):\n        friend_symbols.append(input())\n    actual_score = 0\n    for round in range(rounds):\n        wins = 0\n        ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                wins += 1\n        actual_score += wins * 2 + ties\n    largest_score = 0\n    for round in range(rounds):\n        sven_wins = 0\n        sven_ties = 0\n        for friend_symbol in friend_symbols:\n            if sven[round] == friend_symbol[round]:\n                sven_ties += 1\n            elif sven[round] == \"P\" and friend_symbol[round] == \"R\":\n                sven_wins += 1\n            elif sven[round] == \"R\" and friend_symbol[round] == \"S\":\n                sven_wins += 1\n            elif sven[round] == \"S\" and friend_symbol[round] == \"P\":\n                sven_wins += 1\n        largest_score += sven_wins * 2 + sven_ties\n    print(actual_score)\n    print(largest_score)\n\nmain()\n", "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    if len(sven) != len(friends[0]):\n        print('Error: Sven and friends have different numbers of rounds')\n        return -1\n    else:\n        rounds = len(sven)\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven = input()\n    friends = int(input())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(input())\n    actual_score = 0\n    max_score = 0\n    for i in range(rounds):\n        sven_symbol = sven[i]\n        win_count = 0\n        tie_count = 0\n        for x in friends_symbols:\n            if x[i] == beat_symbol(sven_symbol):\n                win_count += 1\n            elif x[i] == sven_symbol:\n                tie_count += 1\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    rounds = int(input())\n    sven_symbols = input()\n    friends_count = int(input())\n    friends_symbols = [input() for i in range(friends_count)]\n    actual_score, max_score = 0, 0\n    for i in range(rounds):\n        sven_symbol = sven_symbols[i]\n        friends_symbols_in_round = list(map(lambda x: x[i], friends_symbols))\n        win_count = friends_symbols_in_round.count(beat_symbol(sven_symbol))\n        tie_count = friends_symbols_in_round.count(sven_symbol)\n        actual_score += win_count * 2 + tie_count\n        max_score += win_count * 2 + (friends_count - win_count - tie_count)\n    print(actual_score)\n    print(max_score)\n\ndef beat_symbol(symbol):\n    if symbol == \"R\":\n        return \"P\"\n    elif symbol == \"P\":\n        return \"S\"\n    else:\n        return \"R\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds\n        print(score)\n        print(max_score)\n        score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        print(score, max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n\n\nmain()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    if n == 1:\n        print(a[0])\n    else:\n        print(a[0] + a[1])\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(len(sven)):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print('{}/{}'.format(score, max_score))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\n# Grab the pellets as fast as you can!\n\ndef get_score(sven, friends):\n    if len(sven) != len(friends[0]):\n        print('Error: Sven and friends have different numbers of rounds')\n        return -1\n    else:\n        rounds = len(sven)\n    score = 0\n    for i in range(rounds):\n        if sven[i] == 'S':\n            if friends[i] == 'P':\n                score += 1\n            elif friends[i] == 'R':\n                score += 2\n        elif sven[i] == 'P':\n            if friends[i] == 'R':\n                score += 1\n            elif friends[i] == 'S':\n                score += 2\n        elif sven[i] == 'R':\n            if friends[i] == 'S':\n                score += 1\n            elif friends[i] == 'P':\n                score += 2\n    return score\n\ndef get_max_score(sven, friends):\n    max_score = 0\n    for i in range(rounds):\n        if sven[i] == 'S':\n            if friends[i] == 'R':\n                max_score += 2\n            elif friends[i] == 'P':\n                max_score += 1\n        elif sven[i] == 'P':\n            if friends[i] == 'S':\n                max_score += 2\n            elif friends[i] == 'R':\n                max_score += 1\n        elif sven[i] == 'R':\n            if friends[i] == 'P':\n                max_score += 2\n            elif friends[i] == 'S':\n                max_score += 1\n    return max_score\n\ndef main():\n    rounds = int(input())\n    sven = str(input())\n    friends_num = int(input())\n    friends = []\n    for i in range(friends_num):\n        friends.append(str(input()))\n    score = get_score(sven, friends)\n    max_score = get_max_score(sven, friends)\n    print(score)\n    print(max_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    r = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()[:r]\n    n = int(sys.stdin.readline().strip())\n    friends = []\n    for i in range(n):\n        friends.append(sys.stdin.readline().strip()[:r])\n\n    # Actual score\n    # score = 0\n    # for i in range(r):\n    #     for friend in friends:\n    #         if sven[i] == 'R':\n    #             if friend[i] == 'S':\n    #                 score += 2\n    #             elif friend[i] == 'P':\n    #                 score += 1\n    #         elif sven[i] == 'S':\n    #             if friend[i] == 'P':\n    #                 score += 2\n    #             elif friend[i] == 'R':\n    #                 score += 1\n    #         elif sven[i] == 'P':\n    #             if friend[i] == 'R':\n    #                 score += 2\n    #             elif friend[i] == 'S':\n    #                 score += 1\n    # print(score)\n\n    # Max score\n    score = 0\n    for i in range(r):\n        for friend in friends:\n            if sven[i] == 'R':\n                if friend[i] == 'S':\n                    score += 2\n            elif sven[i] == 'S':\n                if friend[i] == 'P':\n                    score += 2\n            elif sven[i] == 'P':\n                if friend[i] == 'R':\n                    score += 2\n    score += r\n    print(score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = []\n    for i in range(N):\n        friends.append(input())\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends[i]:\n                score += 1\n            elif 'S' in friends[i]:\n                score += 0\n        elif sven[i] == 'P':\n            if 'R' in friends[i]:\n                score += 1\n            elif 'P' in friends[i]:\n                score += 0\n        elif sven[i] == 'R':\n            if 'S' in friends[i]:\n                score += 1\n            elif 'R' in friends[i]:\n                score += 0\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends[i]:\n                max_score += 2\n            elif 'S' not in friends[i]:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends[i]:\n                max_score += 2\n            elif 'P' not in friends[i]:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends[i]:\n                max_score += 2\n            elif 'R' not in friends[i]:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\n\ndef main():\n    # read input\n    R = int(input())\n    sven = input()\n    N = int(input())\n    friends = ''\n    for i in range(N):\n        friends += input()\n\n    # calculate score\n    score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' in friends:\n                score += 2\n            elif 'S' in friends:\n                score += 1\n        elif sven[i] == 'P':\n            if 'R' in friends:\n                score += 2\n            elif 'P' in friends:\n                score += 1\n        elif sven[i] == 'R':\n            if 'S' in friends:\n                score += 2\n            elif 'R' in friends:\n                score += 1\n\n    # calculate max score\n    max_score = 0\n    for i in range(R):\n        if sven[i] == 'S':\n            if 'P' not in friends:\n                max_score += 2\n            elif 'S' not in friends:\n                max_score += 1\n        elif sven[i] == 'P':\n            if 'R' not in friends:\n                max_score += 2\n            elif 'P' not in friends:\n                max_score += 1\n        elif sven[i] == 'R':\n            if 'S' not in friends:\n                max_score += 2\n            elif 'R' not in friends:\n                max_score += 1\n\n    print(score)\n    print(max_score)\n\nmain()\n", "\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n\n    print(sven_score)\n    print(sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n\n    sven_score = 0\n    sven_max_score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline()\n        sven_score += compare(sven, friend)\n        sven_max_score += max_compare(sven, friend)\n    print(sven_score, sven_max_score)\n\ndef compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n    return score\n\ndef max_compare(sven, friend):\n    score = 0\n    for i in range(len(sven)):\n        if sven[i] == friend[i]:\n            score += 1\n        elif sven[i] == \"R\" and friend[i] == \"S\":\n            score += 2\n        elif sven[i] == \"S\" and friend[i] == \"P\":\n            score += 2\n        elif sven[i] == \"P\" and friend[i] == \"R\":\n            score += 2\n        elif sven[i] == \"R\" and friend[i] == \"P\":\n            score += 0\n        elif sven[i] == \"S\" and friend[i] == \"R\":\n            score += 0\n        elif sven[i] == \"P\" and friend[i] == \"S\":\n            score += 0\n    return score\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds - score\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    rounds = int(sys.stdin.readline().strip())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline().strip())\n    max_score = 0\n    score = 0\n    for i in range(friends):\n        friend = sys.stdin.readline().strip()\n        for j in range(rounds):\n            if sven[j] == friend[j]:\n                score += 1\n            elif (sven[j] == \"R\" and friend[j] == \"S\") or (sven[j] == \"S\" and friend[j] == \"P\") or (sven[j] == \"P\" and friend[j] == \"R\"):\n                score += 2\n        max_score += 2 * rounds\n        print(score)\n        print(max_score)\n        score = 0\n        max_score = 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()  # Sven's symbols\n    friends = int(sys.stdin.readline())\n    friends_symbols = []  # Each friend's symbols\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())  # Friends' symbols\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):\n        rock = 0  # Number of rocks\n        paper = 0  # Number of papers\n        scissors = 0  # Number of scissors\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":  # If a friend played rock\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()\n    friends = int(sys.stdin.readline())\n    friends_symbols = []\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())\n    actual_score = 0\n    largest_score = 0 \n    for i in range(rounds):\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):\n            if friends_symbols[j][i] == \"R\":\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":\n                paper += 1\n            else:\n                scissors += 1\n        if sven[i] == \"R\":\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)\n        elif sven[i] == \"P\":\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"hello\")\n\nmain()\n", "\n\nimport sys\nimport math\n\ndef main():\n    rounds = int(sys.stdin.readline())\n    sven = sys.stdin.readline().strip()  # readline() reads a line from the file and strip() removes the newline\n    friends = int(sys.stdin.readline())\n    friends_symbols = []  # create a list of friends' symbols\n    for i in range(friends):\n        friends_symbols.append(sys.stdin.readline().strip())  # append the list with friends' symbols\n    actual_score = 0\n    largest_score = 0\n    for i in range(rounds):  # for each round\n        rock = 0\n        paper = 0\n        scissors = 0\n        for j in range(friends):  # for each friend\n            if friends_symbols[j][i] == \"R\":  # if the friend plays rock\n                rock += 1\n            elif friends_symbols[j][i] == \"P\":  # if the friend plays paper\n                paper += 1\n            else:\n                scissors += 1  # if the friend plays scissors\n        if sven[i] == \"R\":  # if Sven plays rock\n            actual_score += rock\n            largest_score += friends - max(rock, paper, scissors)  # the largest possible score in this round\n        elif sven[i] == \"P\":  # if Sven plays paper\n            actual_score += paper\n            largest_score += friends - max(rock, paper, scissors)  # the largest possible score in this round\n        else:\n            actual_score += scissors\n            largest_score += friends - max(rock, paper, scissors)  # the largest possible score in this round\n    print(actual_score)\n    print(actual_score + largest_score)\n\nif __name__ == \"__main__\":\n    main()\n"]