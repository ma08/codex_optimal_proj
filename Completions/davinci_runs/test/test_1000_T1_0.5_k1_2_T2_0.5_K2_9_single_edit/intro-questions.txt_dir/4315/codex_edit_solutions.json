["\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nA, B = map(int, input().split())\n\nprint(lcm(A, B))\n", "\n\nimport math\n\ndef main():\n    r = int(input())\n    print 2 * math.pi * r\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nR = int(input())\n\nprint(R * 2 * math.pi, end=\"\")\n", "\nimport math\n\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "\n\nimport math\n\nR = int(input())\n\nprint(R * 2 * math.pi) \n", "import math\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "\n\nimport math\n\ndef main():\n    r = int(raw_input())\n    print 2 * math.pi * r;\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    r = int(raw_input())\n    print 2 * math.pi * r\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport math\n\ndef main():\n    r = int(raw_input())\n    print 2 * math.pi * r\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\nR = int(input())\n\nprint(R * 2 * math.pi)\n", "import math\n\nR = int(input())\n\nprint(R * 2 * math.pi)\n"]