["\n\ndef main():\n    # input\n    nums = []\n    for i in range(10):\n        num = int(input())\n        num %= 42\n        nums.append(num)\n\n    # output\n    print(len(set(nums)))\n\nif __name__ == \"__main__\":\n    main()", "\n\nmod = 42\nnums = []\n\nfor _ in range(10):\n    num = int(input()) % mod\n    if num not in nums:\n        nums.append(num)\n\nprint(len(nums))", "\n\nnums = [int(input()) for i in range(10)]\nprint(len(set([n % 42 for n in nums])))", "\n\nmodulo = 42\nnumbers = []\nfor i in range(10):\n    numbers.append(int(input()) % modulo)\n\nprint(len(set(numbers)))", "\n\n# Get input\nnums = []\nfor _ in range(10):\n    nums.append(int(input()))\n\n# Get distinct numbers\nnums = list(set([x % 42 for x in nums]))\n\n# Print output\nprint(len(nums))", "\n\n# Accepts 10 inputs and outputs the number of distinct numbers modulo 42\ndef main():\n    # Dictionary to store the modulo values\n    mod = {}\n    # Loop through 10 inputs\n    for i in range(10):\n        # Store the modulo of the input\n        mod[i] = int(input()) % 42\n    # Output the number of distinct modulo values\n    print(len(set(mod.values())))\n\nmain()", "\n\ndef distinct_modulo(nums):\n    modulo_nums = [num % 42 for num in nums]\n    return len(set(modulo_nums))\n\ndef main():\n    nums = []\n    for _ in range(10):\n        nums.append(int(input()))\n    print(distinct_modulo(nums))\n\nif __name__ == \"__main__\":\n    main()", "\n\n#Accepts 10 numbers, outputs number of distinct numbers modulo 42\ndef distinct():\n    #Create a list of the 10 numbers\n    nums = []\n    for i in range(10):\n        nums.append(input())\n    #Create a list of the 10 numbers modulo 42\n    nums_mod = []\n    for i in range(10):\n        nums_mod.append(nums[i] % 42)\n    #Create a set of the 10 numbers modulo 42\n    nums_mod_set = set(nums_mod)\n    #Output the length of the set\n    print(len(nums_mod_set))\n\n#Test the function\ndistinct()"]