2022-04-09 19:56:34.716672 """
In AtCoder city, there are five antennas standing in a straight line. They are called Antenna A, B, C, D and E from west to east, and their coordinates are a, b, c, d and e, respectively.

Two antennas can communicate directly if the distance between them is k or less, and they cannot if the distance is greater than k.

Determine if there exists a pair of antennas that cannot communicate directly.

Here, assume that the distance between two antennas at coordinates p and q (p < q) is q - p.  

-----Constraints-----
 - a, b, c, d, e and k are integers between 0 and 123 (inclusive).
 - a < b < c < d < e

-----Input-----
Input is given from Standard Input in the following format:
a
b
c
d
e
k

-----Output-----
Print :( if there exists a pair of antennas that cannot communicate directly, and print Yay! if there is no such pair.

-----Sample Input-----
1
2
4
8
9
15

-----Sample Output-----
Yay!

In this case, there is no pair of antennas that cannot communicate directly, because:
 - the distance between A and B is 2 - 1 = 1
 - the distance between A and C is 4 - 1 = 3
 - the distance between A and D is 8 - 1 = 7
 - the distance between A and E is 9 - 1 = 8
 - the distance between B and C is 4 - 2 = 2
 - the distance between B and D is 8 - 2 = 6
 - the distance between B and E is 9 - 2 = 7
 - the distance between C and D is 8 - 4 = 4
 - the distance between C and E is 9 - 4 = 5
 - the distance between D and E is 9 - 8 = 1
and none of them is greater than 15. Thus, the correct output is Yay!.
"""
2022-04-09 19:56:34.716699 --------------------------
2022-04-09 19:56:43.617900 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\na,b,c,d,e,k=map(int,input().split())\nif(e-a>k):\n\tprint(\":(\")\nelse:\n\tprint(\"Yay!\")"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nif (b - a) > k:\n    print(':(')\nelif (c - b) > k:\n    print(':(')\nelif (d - c) > k:\n    print(':(')\nelif (e - d) > k:\n    print(':(')\nelse:\n    print('Yay!')"
    }
  ],
  "created": 1649548595,
  "id": "cmpl-4vFERhNptMvXB80CPxP6mDca9glT2",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:56:43.618267 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\na,b,c,d,e,k=map(int,input().split())\nif(e-a>k):\n\tprint(\":(\")\nelse:\n\tprint(\"Yay!\")"
}
2022-04-09 19:56:43.618363 REASON stop
2022-04-09 19:56:43.630469 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nif (b - a) > k:\n    print(':(')\nelif (c - b) > k:\n    print(':(')\nelif (d - c) > k:\n    print(':(')\nelif (e - d) > k:\n    print(':(')\nelse:\n    print('Yay!')"
}
2022-04-09 19:56:43.630570 REASON stop
