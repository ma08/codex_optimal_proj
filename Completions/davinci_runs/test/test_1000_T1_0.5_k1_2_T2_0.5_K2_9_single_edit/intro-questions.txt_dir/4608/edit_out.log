2022-04-16 08:35:58.095693 num operations 1
2022-04-16 08:35:58.095710 size on input set 1
2022-04-16 08:36:05.677000 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\n\n\ndef printAns():\n    print(visited[2]-1)\n    sys.exit()\n\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        printAns()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1) \n"
    },
    {
      "index": 8,
      "text": "\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n"
    }
  ],
  "created": 1650098158,
  "object": "edit"
}
2022-04-16 08:36:05.677360 fix syntax errors 9 ['\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\nimport sys\nfrom collections import deque\n\nN = int(input())\n\n\ndef printAns():\n    print(visited[2]-1)\n    sys.exit()\n\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        printAns()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n', '\n\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num]-1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1) \n', '\nimport sys\nfrom collections import deque\n\nN = int(input())\na = list(map(int, sys.stdin.read().split()))\n\n# BFS\nqueue = deque([1])\nvisited = [False] * N\nvisited[0] = True\n\nwhile len(queue) > 0:\n    num = queue.popleft()\n    if num == 2:\n        print(visited[num] - 1)\n        sys.exit()\n    if not visited[a[num-1]-1]:\n        visited[a[num-1]-1] = visited[num] + 1\n        queue.append(a[num-1])\n\nprint(-1)\n']
2022-04-16 08:36:05.677510 size on output set 5
