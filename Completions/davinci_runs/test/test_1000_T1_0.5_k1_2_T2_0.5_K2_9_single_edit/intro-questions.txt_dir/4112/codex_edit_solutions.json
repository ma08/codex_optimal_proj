["# https://codeforces.com/problemset/problem/1257/B\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1: print(sum(A)); return\n    if k == 2: print(max(A)); return\n    if k == 3: print(max(A[0] + A[-1], max(A[1:n-1]))); return\n    if k == 4: print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2]))); return\n    if k == 5: print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3]))); return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4]))); return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    if k == 1:\n        print(sum(A))\n        return\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())  # n = 4, k = 5, x = 100\n    A = list(map(int, input().split()))  # A = [1, 2, 3, 4]\n    if x < k:  # x < k \u306a\u3089\u3070 -1 \u3092\u51fa\u529b\n        print(-1)  # -1\n    elif k == 1:  # k \u304c 1 \u306a\u3089\u3070 A \u306e\u5168\u8981\u7d20\u3092\u8db3\u3057\u305f\u5024\u3092\u51fa\u529b\n        print(sum(A))  # 10\n    elif k == 2:  # k \u304c 2 \u306a\u3089\u3070 A \u306e\u6700\u5927\u5024\u3092\u51fa\u529b\n        print(max(A))  # 4\n    elif k == 3:  # k \u304c 3 \u306a\u3089\u3070 A \u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u8981\u7d20\u3092\u8db3\u3057\u305f\u5024\u3068 A \u306e\u4e2d\u592e\u306e\u8981\u7d20\u306e\u6700\u5927\u5024\u3092\u6bd4\u8f03\u3057\u3066\u5927\u304d\u3044\u65b9\u3092\u51fa\u529b\n        print(max(A[0] + A[-1], max(A[1:n-1])))  # 7\n    elif k == 4:  # k \u304c 4 \u306a\u3089\u3070 A \u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u8981\u7d20\u3092\u8db3\u3057\u305f\u5024\u3068 A \u306e\u4e2d\u592e\u306e\u8981\u7d20\u306e\u6700\u5927\u5024\u3092\u6bd4\u8f03\u3057\u3066\u5927\u304d\u3044\u65b9\u3092\u51fa\u529b\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))  # 10\n    elif k == 5:  # k \u304c 5 \u306a\u3089\u3070 A \u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u8981\u7d20\u3092\u8db3\u3057\u305f\u5024\u3068 A \u306e\u4e2d\u592e\u306e\u8981\u7d20\u306e\u6700\u5927\u5024\u3092\u6bd4\u8f03\u3057\u3066\u5927\u304d\u3044\u65b9\u3092\u51fa\u529b\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))  # 14\n    else:  # \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f A \u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u8981\u7d20\u3092\u8db3\u3057\u305f\u5024\u3068 A \u306e\u4e2d\u592e\u306e\u8981\u7d20\u306e\u6700\u5927\u5024\u3092\u6bd4\u8f03\u3057\u3066\u5927\u304d\u3044\u65b9\u3092\u51fa\u529b\n        print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))  # 14\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n - 1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n - 2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n - 3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n - 4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k: return -1\n    if k == 1:\n        return sum(A)\n    if k == 2:\n        return max(A)\n    if k == 3:\n        return max(A[0] + A[-1], max(A[1:n-1]))\n    if k == 4:\n        return max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2]))\n    if k == 5:\n        return max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3]))\n    return max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4]))\n\nif __name__ == '__main__':\n    print(main())\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    print(dp2[0][n - 1])\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\nif x == n:\n    print(sum(pictures))\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k:\n                dp[i][j] = 0\n            else:\n                dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n    # for row in dp:\n    #     print(row)\n    # print(dp[0][n - 1])\n    \n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "import sys\ninput = sys.stdin.readline\n\n\nn, k, x = map(int, input().strip().split())\npictures = list(map(int, input().strip().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n\nfor i in range(n):\n    dp[i][i + 1] = pictures[i]\n\nfor width in range(2, n + 1):\n    for i in range(n + 1 - width):\n        j = i + width - 1\n        dp[i][j + 1] = max(dp[i][j], dp[i + 1][j + 1], dp[i][j] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n\n    for i in range(n):\n        dp2[i][i + 1] = pictures[i]\n\n    for width in range(2, n + 1):\n        for i in range(n + 1 - width):\n            j = i + width - 1\n            dp2[i][j + 1] = max(dp2[i][j], dp2[i + 1][j + 1], dp2[i][j] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n])\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x >= k:\n        if k == 1:\n            print(sum(A))\n            return\n        if k == 2:\n            print(max(A))\n            return\n        if k == 3:\n            print(max(A[0] + A[-1], max(A[1:n-1])))\n            return\n        if k == 4:\n            print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n            return\n        if k == 5:\n            print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n            return\n        print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    else:\n        print(-1)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j] with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j] with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n"]