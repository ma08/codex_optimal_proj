2022-04-16 09:22:59.709715 num operations 1
2022-04-16 09:22:59.709733 size on input set 1
2022-04-16 09:23:16.586646 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 2,
      "text": "# \u89e3\u7b54\n# N: \u6574\u6570\u306e\u500b\u6570\n# A_i: i\u756a\u76ee\u306e\u6574\u6570\nN = int(input())\nA = list(map(int, input().split()))\n\n\n# \u5165\u529b\u3055\u308c\u305f\u6574\u6570\u3092\u8f9e\u66f8\u306b\u767b\u9332\n# key: \u6574\u6570\u306e\u5024\n# value: \u6574\u6570\u306e\u500b\u6570\nd = {}\nfor a in A:\n    if a in d:\n        d[a] += 1\n    else:\n        d[a] = 1\n\n# \u8f9e\u66f8\u306e\u5024\u304c\u5947\u6570\u306e\u3082\u306e\u3092\u6570\u3048\u308b\ncnt = 0\nfor v in d.values():\n    if v % 2 == 1:\n        cnt += 1\n\nprint(cnt)\n"
    },
    {
      "index": 3,
      "text": "\n\n# \u89e3\u7b54\u4f8b\n# N: \u5ea7\u5e2d\u6570\n# M: \u4eba\u6570\n\nM = int(input())\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * N\n\nfor _ in range(M):\n    a = int(input())\n    seats[a - 1] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 4,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 5,
      "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000  # \u5ea7\u5e2d\u306e\u6700\u5927\u6570\u306f100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 6,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 7,
      "text": "\n\n# \u5ea7\u5e2d\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3092\u6c42\u3081\u308b\n# \u5ea7\u5e2d\u306e\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 8,
      "text": "\n# https://atcoder.jp/contests/abc071/tasks/arc081_a\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1650100979,
  "object": "edit"
}
2022-04-16 09:23:16.586937 fix syntax errors 9 ['\n\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '# 解答\n# N: 整数の個数\n# A_i: i番目の整数\nN = int(input())\nA = list(map(int, input().split()))\n\n\n# 入力された整数を辞書に登録\n# key: 整数の値\n# value: 整数の個数\nd = {}\nfor a in A:\n    if a in d:\n        d[a] += 1\n    else:\n        d[a] = 1\n\n# 辞書の値が奇数のものを数える\ncnt = 0\nfor v in d.values():\n    if v % 2 == 1:\n        cnt += 1\n\nprint(cnt)\n', '\n\n# 解答例\n# N: 座席数\n# M: 人数\n\nM = int(input())\nN = int(input())\n\n# 座席を表すリストを作成（0は空席、1は1人が座っている）\nseats = [0] * N\n\nfor _ in range(M):\n    a = int(input())\n    seats[a - 1] = 1\n\nprint(sum(seats))\n', '\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成（0は空席、1は1人が座っている）\nseats = [0] * 100000  # 座席の最大数は100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n\n# 座席が連続しているグループの数を求める\n# 座席の番号は1から始まる\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n# https://atcoder.jp/contests/abc071/tasks/arc081_a\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n']
2022-04-16 09:23:16.587102 size on output set 7
2022-04-16 09:23:16.587118 num operations 1
2022-04-16 09:23:16.587123 size on input set 1
2022-04-16 09:23:28.377420 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))   # map(\ud568\uc218, \uc790\ub8cc\uad6c\uc870) : \uc790\ub8cc\uad6c\uc870\uc758 \ubaa8\ub4e0 \uc6d0\uc18c\ub97c \ud568\uc218\uc5d0 \uc801\uc6a9\ud55c \uacb0\uacfc\ub97c \ubb36\uc5b4\uc11c \ubc18\ud658\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n# Solved by myself\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solved by myself.\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)  \n"
    },
    {
      "index": 4,
      "text": "\n\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\n\"\"\"\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n\"\"\"\n"
    },
    {
      "index": 6,
      "text": "\n\n# Solved by myself. \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\n# Solved by myself\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    }
  ],
  "created": 1650100996,
  "object": "edit"
}
2022-04-16 09:23:28.377676 fix syntax errors 9 ['\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))   # map(함수, 자료구조) : 자료구조의 모든 원소를 함수에 적용한 결과를 묶어서 반환\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n# Solved by myself\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n\n# Solved by myself.\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)  \n', '\n\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n"""\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"""\n', '\n\n# Solved by myself. \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n# Solved by myself\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n']
2022-04-16 09:23:28.377817 size on output set 8
2022-04-16 09:23:28.377829 num operations 1
2022-04-16 09:23:28.377834 size on input set 1
2022-04-16 09:23:35.339238 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\nS = [0] * 1001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    }
  ],
  "created": 1650101008,
  "object": "edit"
}
2022-04-16 09:23:35.339522 fix syntax errors 9 ['\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n', '\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n', '\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 1001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n']
2022-04-16 09:23:35.339554 size on output set 4
2022-04-16 09:23:35.339565 num operations 1
2022-04-16 09:23:35.339570 size on input set 1
2022-04-16 09:23:49.172469 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 3,
      "text": "N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nsys.setrecursionlimit(10**8)\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef mod_comb(n, k, mod=10**9+7):\n    \"\"\"\n    nCk\u3092mod\u3067\u5272\u3063\u305f\u4f59\u308a\u3092\u6c42\u3081\u308b\n    \"\"\"\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    if k > n - k: k = n - k\n    c = 1\n    for i in range(k):\n        c = c * (n - i) % mod\n        c = c * pow(i+1, mod-2, mod) % mod\n    return c\n\nprint(s)\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\nprint(s)\n"
    }
  ],
  "created": 1650101015,
  "object": "edit"
}
2022-04-16 09:23:49.172726 fix syntax errors 9 ['\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', 'N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', 'N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nimport sys\nsys.setrecursionlimit(10**8)\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef mod_comb(n, k, mod=10**9+7):\n    """\n    nCkをmodで割った余りを求める\n    """\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    if k > n - k: k = n - k\n    c = 1\n    for i in range(k):\n        c = c * (n - i) % mod\n        c = c * pow(i+1, mod-2, mod) % mod\n    return c\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\nprint(s)\n']
2022-04-16 09:23:49.172766 size on output set 4
2022-04-16 09:23:49.172776 num operations 1
2022-04-16 09:23:49.172782 size on input set 1
2022-04-16 09:24:00.582182 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100001)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nN, M = map(int, input().split())\ncount = 0\nseats = [0 for i in range(M)]\nfor i in range(N):  # \u5165\u529b\n    l, r = map(int, input().split())  # \u5ea7\u5e2d\u306e\u5de6\u7aef\u3068\u53f3\u7aef\u3092\u53d6\u5f97\n    for j in range(l, r+1):  # \u5de6\u7aef\u304b\u3089\u53f3\u7aef\u307e\u3067\u30eb\u30fc\u30d7\n        seats[j-1] += 1  # \u5ea7\u5e2d\u306e\u7a7a\u304d\u72b6\u6cc1\u3092\u66f4\u65b0\nfor i in range(len(seats)):  # \u51fa\u529b\n    if seats[i] > 0:  # \u5ea7\u5e2d\u306e\u7a7a\u304d\u72b6\u6cc1\u304c1\u4ee5\u4e0a\u306a\u3089\n        count += 1  # \u5ea7\u5e2d\u306e\u7a7a\u304d\u6570\u3092\u30ab\u30a6\u30f3\u30c8\nprint(count)  # \u30ab\u30a6\u30f3\u30c8\u3057\u305f\u5ea7\u5e2d\u306e\u7a7a\u304d\u6570\u3092\u51fa\u529b\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\n#\n#\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l-1, r):\n        seats[j] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1650101029,
  "object": "edit"
}
2022-04-16 09:24:00.582483 fix syntax errors 9 ['\nN = int(input())\ncount = 0\nseats = [0 for i in range(100001)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\n\nN, M = map(int, input().split())\ncount = 0\nseats = [0 for i in range(M)]\nfor i in range(N):  # 入力\n    l, r = map(int, input().split())  # 座席の左端と右端を取得\n    for j in range(l, r+1):  # 左端から右端までループ\n        seats[j-1] += 1  # 座席の空き状況を更新\nfor i in range(len(seats)):  # 出力\n    if seats[i] > 0:  # 座席の空き状況が1以上なら\n        count += 1  # 座席の空き数をカウント\nprint(count)  # カウントした座席の空き数を出力\n', '\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\n#\n#\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '#!/usr/bin/env python3\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l-1, r):\n        seats[j] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n']
2022-04-16 09:24:00.582534 size on output set 6
2022-04-16 09:24:00.582544 num operations 1
2022-04-16 09:24:00.582549 size on input set 1
2022-04-16 09:24:08.587256 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 2,
      "text": "\n\n\nx = int(input())\ny = int(input())\n\nif x > 0 and y > 0:\n    print(\"1\")\nelif x < 0 and y > 0:\n    print(\"2\")\nelif x < 0 and y < 0:\n    print(\"3\")\nelse:\n    print(\"4\")\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 4,
      "text": "n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 6,
      "text": "# https://codeforces.com/contest/1283/problem/A\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    }
  ],
  "created": 1650101040,
  "object": "edit"
}
2022-04-16 09:24:08.587532 fix syntax errors 9 ['\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\n\n\nx = int(input())\ny = int(input())\n\nif x > 0 and y > 0:\n    print("1")\nelif x < 0 and y > 0:\n    print("2")\nelif x < 0 and y < 0:\n    print("3")\nelse:\n    print("4")\n', '\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n\n        seats[j - 1] = 1\nprint(sum(seats))\n', 'n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '# https://codeforces.com/contest/1283/problem/A\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n']
2022-04-16 09:24:08.587567 size on output set 5
2022-04-16 09:24:08.587578 num operations 1
2022-04-16 09:24:08.587583 size on input set 1
2022-04-16 09:24:18.559897 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 1,
      "text": "# https://www.acmicpc.net/problem/10250\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 2,
      "text": "\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]  # audience = [[l, r], [l, r], ...]\n\ns = set()  # set() is a data structure which contains unique elements\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 3,
      "text": "\n\n# N = Number of elements\n# M = Number of queries\nN, M = map(int, input().split())\na = [int(input()) for _ in range(N)]\nb = [list(map(int, input().split())) for _ in range(M)]\n\nfor i in range(M):\n    l, r, t = b[i]\n    for j in range(l-1, r):\n        a[j] = t\n\nfor i in range(N):\n    print(a[i])\n"
    },
    {
      "index": 4,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 5,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 6,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 7,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 8,
      "text": "\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n"
    }
  ],
  "created": 1650101048,
  "object": "edit"
}
2022-04-16 09:24:18.560207 fix syntax errors 9 ['\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '# https://www.acmicpc.net/problem/10250\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]  # audience = [[l, r], [l, r], ...]\n\ns = set()  # set() is a data structure which contains unique elements\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n\n# N = Number of elements\n# M = Number of queries\nN, M = map(int, input().split())\na = [int(input()) for _ in range(N)]\nb = [list(map(int, input().split())) for _ in range(M)]\n\nfor i in range(M):\n    l, r, t = b[i]\n    for j in range(l-1, r):\n        a[j] = t\n\nfor i in range(N):\n    print(a[i])\n', '\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n', '\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n']
2022-04-16 09:24:18.560249 size on output set 5
2022-04-16 09:24:18.560261 num operations 1
2022-04-16 09:24:18.560266 size on input set 1
2022-04-16 09:25:00.885434 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 3,
      "text": "\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(sum(seats))\n"
    },
    {
      "index": 4,
      "text": "\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1 \n\nprint(sum(seats))\n"
    },
    {
      "index": 5,
      "text": "# coding: utf-8\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 8,
      "text": "N = int(input())\nseats = [0] * 100001\n\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n\n\n\n\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1650101058,
  "object": "edit"
}
2022-04-16 09:25:00.885700 fix syntax errors 9 ['\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(sum(seats))\n', '\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1 \n\nprint(sum(seats))\n', '# coding: utf-8\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', 'N = int(input())\nseats = [0] * 100001\n\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n\n\n\n\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n']
2022-04-16 09:25:00.885831 size on output set 5
