["\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons from smallest to largest\n    min_helium_small = 0\n    for i in range(1, n):\n        min_helium_small += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium_small <= c[-1]:\n        print(1)\n\n    # If there is just enough helium to fill all balloons from smallest to largest, fill the balloons from largest to smallest\n    elif min_helium_small == sum(c):\n        print(1 / n + 1)\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n - 1, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium_small:\n                print(helium_used / (n * i))\n                break\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\n\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:  #if the last element is greater than the number of elements\n            m += 1\n        else:\n            break\n    print(m/n)\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons from smallest to largest\n    min_helium = 0\n    for i in range(1, n + 1):\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[-1]:\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1 / n)\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i))\n                break\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('impossible')\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print(balloon_sum / sum(balloons))\n    else:\n        print('impossible')\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons from largest to smallest\n    min_helium = 0\n    for i in range(n, 0, -1):\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from largest to smallest\n    if min_helium <= c[-1]:\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1 / float(n))\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / float(n * i))\n                break\n", "\n\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than or equal to the number of balloons, it is impossible\nif n <= sum(canisters):\n    print(\"impossible\")\n\n# If the number of canisters is equal to the number of balloons, the minimum fraction is 1\nelif n == sum(canisters):\n    print(1)\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('impossible')\n        return\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print(balloon_sum / sum(balloons), end='')\n    else:\n        print('impossible')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input(\"Enter the number of students: \"))\nk = int(input(\"Enter the number of apples: \"))\n\nprint(k//n)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [float(x) for x in sys.stdin.readline().split()]\n    cans.sort()\n    cans.reverse()\n    if cans[0] > n:\n        print(\"impossible\")\n    else:\n        print(float(cans[n-1])/n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    c = [int(x) for x in input().split()]\n    c.sort()\n    \n    # If the helium is too small, it is impossible to fill the balloons\n    if c[0] == 0:\n        print(\"impossible\")\n    \n    # If the helium is large enough, we can fill the balloons from smallest to largest\n    else:\n        # Find the minimum amount of helium needed to fill all balloons\n        min_helium = 0\n        for i in range(1, n + 1):\n            min_helium += i\n    \n        # If there is too much helium, fill the balloons from smallest to largest\n        if min_helium <= c[-1]:\n            print(1)\n    \n        # If there is just enough helium, fill the balloons from largest to smallest\n        elif min_helium == sum(c):\n            print(1 / n)\n    \n        # If there is not enough helium, fill the balloons from largest to smallest\n        else:\n            helium_used = 0\n            for i in range(n, 0, -1):\n                helium_used += c[i - 1]\n                if helium_used >= min_helium:\n                    print(helium_used / (n * i))\n                    break\n    \nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nnumbers = list(map(int, input().split()))\nnumbers.sort()\n\nif numbers[0] == 0:\n    print(\"impossible\")\nelse:\n    print(numbers[0]/n)\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [int(x) for x in sys.stdin.readline().split()]\n    cans.sort()\n    cans.reverse()\n    if cans[0] > n:\n        print(\"impossible\")\n    else:\n        print(float(cans[n-1])/n)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve():\n    n = int(sys.stdin.readline().strip())\n    balloons = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    balloons.sort()\n    balloons.reverse()\n    canisters = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    canisters.sort()\n    canisters.reverse()\n    for i in range(n):\n        if balloons[i] > canisters[i]:\n            print('impossible')\n            return\n    print(canisters[n-1] / balloons[n-1])\n\nsolve()\n", "from statistics import median\n\nn = int(input())\nhelium = list(map(int, input().split()))\n\nif helium[0] == 0:\n    print(\"impossible\")\nelse:\n    print(median(helium)/n)\n", "\nprint(\"Hello World\")\n", "\nfor i in range(n):\n    print(i)\n", "\n\nn = int(input())\nhelium = list(map(int, input().split()))\nhelium.sort()\n\nif helium[0] == 0:\n    print(\"impossible\")\nelse:\n    print(helium[0] / n)\n", "\n\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n    # Sort the canisters in descending order\n    canisters.sort(reverse=True)\n\n    # If the number of canisters is less than the number of balloons, it is impossible\n    if n < sum(canisters):\n        print(\"impossible\")\n\n    # If the number of canisters is equal to the number of balloons, the minimum fraction is 1\n    elif n == sum(canisters):\n        print(1)\n\n    # If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\n    else:\n        # The maximum fraction is the sum of the canisters divided by the number of balloons\n        max_fraction = sum(canisters) / n\n        # The minimum fraction is the first canister divided by the number of balloons\n        min_fraction = canisters[0] / n\n        # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n        print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\nimport math\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [float(x) for x in sys.stdin.readline().split()]\n    total = sum(cans)\n    cans = [x/total for x in cans]\n    cans = sorted(cans)\n    cans = cans[::-1]\n    print(cans)\n    print(sum(cans[:n]))\n    print(math.ceil(sum(cans[:n])))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    print(canisters)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\n\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:\n            m += 1\n        else:\n            break\n    print(m / n)\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons\n    min_helium = 0\n    for i in range(1, n + 1):  # range(1, n+1) gives us 1, 2, ..., n\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[-1]:  # c[-1] is the last element of the list\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1 / n)\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):  # range(n, 0, -1) gives us n, n-1, ..., 1\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i))\n                break\n", "import os\n\nimport sys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n", "# Read the number of balloons\n\n# Read the number of canisters\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than the number of balloons, it is impossible\nif n < sum(canisters):\n    print(\"impossible\")\n\n# If the number of canisters is equal to the number of balloons, the minimum fraction is 1\nelif n == sum(canisters):\n    print(1)\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons\n    min_helium = 0\n    for i in range(1, n + 1):\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[-1]:\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1.0 / n)\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i) * 1.0)\n                break\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons\n    min_helium = 0\n    for i in range(1, n + 1):\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[-1]:\n        print(1)\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1 / n)\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i))\n                break\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    balloons = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    balloons.sort()\n    balloons.reverse()\n    canisters = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    canisters.sort()\n    canisters.reverse()\n    for i in range(n):\n        if balloons[i] > canisters[i]:\n            print('impossible')\n            return\n    print(canisters[n-1] / balloons[n-1])\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\n\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:\n            m += 1\n        else:\n            break\n    print(m)\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"Impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons\n    min_helium = 0\n    for i in range(1, n + 1):\n        min_helium += i\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[-1]:\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest and print the answer\n    elif min_helium == sum(c):\n        print(1 / n)\n\n    # If there is not enough helium, fill the balloons from largest to smallest and print the answer\n    else:\n        helium_used = 0\n        for i in range(n, 0, -1):\n            helium_used += c[i - 1]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i))\n                break\n", "\n\nfrom sys import stdin\nfrom math import ceil\n\ndef main():\n\tn = int(stdin.readline())\n\tc = [int(x) for x in stdin.readline().strip().split()]\n\tc.sort()\n\tif c[0] > 0:\n\t\tprint('impossible')\n\telse:\n\t\tans = 1\n\t\tfor i in range(1,n):\n\t\t\tans = min(ans,c[i]/i)\n\t\tprint(ans)\n\nmain()\n", "\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than or equal to the number of balloons, it is impossible\nif n <= sum(canisters):\n    print(\"impossible\")\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\nn = int(input())\nc = [int(x) for x in input().split()]\n\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:\n            m += 1\n        else:\n            break\n    print(m/n) \n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [int(x) for x in sys.stdin.readline().split()].sort().reverse()\n    if cans[n-1] > n:\n        print(\"impossible\")\n    else:\n        print(float(cans[n-1])/n)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('impossible')\n        return\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print(balloon_sum / sum(balloons))\n    else:\n        print('impossible')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    balloons = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    balloons.sort()\n    balloons.reverse()\n    canisters = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    canisters.sort()\n    canisters.reverse()\n    for i in range(n):\n        if balloons[i] > canisters[i]:\n            print('impossible')\n            return\n    print(canisters[n-1] / balloons[n-1])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, sys.stdin.readline().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('impossible')\n        return\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print(balloon_sum / sum(balloons))\n    else:\n        print('impossible')\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than the number of balloons, it is impossible\nif n < sum(canisters):\n    print(\"impossible\")\n\n# If the number of canisters is equal to the number of balloons, the minimum fraction is 1\nelif n == sum(canisters):\n    print(1)\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\n\nfrom sys import stdin\nfrom math import ceil\n\ndef main():\n\tn = int(stdin.readline())\n\tc = [int(x) for x in stdin.readline().split()]\n\tc.sort()\n\tif c[0] > 0:\n\t\tprint('impossible')\n\telse:\n\t\tans = 1\n\t\tfor i in range(1,n):\n\t\t\tans = min(ans,c[i]//i)\n\t\tprint(ans)\n\nmain()\n", "\n\nn = int(input())\nhelium = list(map(int, input().split()))\nhelium.sort()\n\nif helium[0] == 0:\n    print(\"impossible\")\nelse:\n    print(helium[0]//n)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    balloons = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    balloons.sort()\n    balloons.reverse()\n    canisters = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    canisters.sort()\n    canisters.reverse()\n    for i in range(n):\n        if balloons[i] > canisters[i]:\n            print('impossible')\n            return\n    print(canisters[n-1] // balloons[n-1])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('impossible')\n        return\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print(balloon_sum / sum(balloons) * 100)\n    else:\n        print('impossible')\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [int(x) for x in sys.stdin.readline().split()]\n    cans.sort()\n    cans.reverse()\n    if cans[0] > n:\n        print(\"impossible\")\n    else:\n        print(cans[n-1]/n)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    c = [int(x) for x in stdin.readline().split()]\n    c.sort()\n    if c[0] > 0:\n        print('impossible')\n    else:\n        ans = 1\n        for i in range(1,n):\n            ans = min(ans,c[i]/i)\n        print(ans)\n\nmain()\n", "\n\nfrom sys import stdin\nfrom math import ceil\n\ndef main():\n\tn = int(stdin.readline())\n\tc = [int(x) for x in stdin.readline().split()]\n\tc.sort()\n\tif c[0] > 0:\n\t\tprint('impossible')\n\telse:\n\t\tans = 1\n\t\tfor i in range(1,n):\n\t\t\tans = min(ans,c[i]/i)\n\t\tprint(int(ans))\n\nmain()\n", "\n\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than the number of balloons, it is impossible\nif n < sum(canisters):\n    exit()\n    print(\"impossible\")\n\n# If the number of canisters is equal to the number of balloons, the minimum fraction is 1\nelif n == sum(canisters):\n    exit()\n    print(1)\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters)))\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:\n            m += 1\n        else:\n            break\n    print(m/n)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = int(sys.stdin.readline())\n    b = int(sys.stdin.readline())\n    c = int(sys.stdin.readline())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(min(a, b))\n    else:\n        if a < c:\n            print(a + min(b, c * (n - 2)))\n        else:\n            print(min(c * (n - 1), a + b))\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if b[j] >= a[i]:\n                ans += 1\n                b.pop(j)\n                break\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nhelium = sorted(list(map(int, input().split())))\n\nif helium[0] == 0:\n    print(\"impossible\")\nelse:\n    print(int(helium[0]/n))\n", "\n\ndef main():\n    n = int(input())\n    balloons = [int(x) for x in input().split(' ')]\n    balloons.sort()\n    balloons.reverse()\n    canisters = [int(x) for x in input().split(' ')]\n    canisters.sort()\n    canisters.reverse()\n    for i in range(n):\n        if balloons[i] > canisters[i]:\n            print('impossible')\n            return\n    print(canisters[n-1] / balloons[n-1])\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input()) \nhelium = list(map(int, input().split())) \nhelium.sort() \nif helium[0] == 0: \n    print(\"impossible\") \nelse: \n    print(helium[0]/n) \n", "\nn = int(input())\nc = [int(x) for x in input().split()]\nc.sort()\n\n# If the helium is too small, it is impossible to fill the balloons\nif c[0] == 0:\n    print(\"impossible\")\n\n# If the helium is large enough, we can fill the balloons from smallest to largest\nelse:\n    # Find the minimum amount of helium needed to fill all balloons\n    min_helium = 0\n    for i in range(n):\n        min_helium += i + 1\n\n    # If there is too much helium, fill the balloons from smallest to largest\n    if min_helium <= c[n - 1]:\n        print(1)\n\n    # If there is just enough helium, fill the balloons from largest to smallest\n    elif min_helium == sum(c):\n        print(1 / n)\n\n    # If there is not enough helium, fill the balloons from largest to smallest\n    else:\n        helium_used = 0\n        for i in range(n):\n            helium_used += c[n - 1 - i]\n            if helium_used >= min_helium:\n                print(helium_used / (n * i))\n                break\n", "\n\nfrom sys import stdin\nfrom math import ceil\n\ndef main():\n\tn = int(stdin.readline())\n\tc = [int(x) for x in stdin.readline().split()]\n\tc.sort()\n\tif c[0] > 0:\n\t\tprint('Impossible')\n\telse:\n\t\tans = 1\n\t\tfor i in range(1,n):\n\t\t\tans = min(ans,c[i]/i)\n\t\tprint(ans)\n\nmain()\n", "\n\nn = int(input())\nc = [int(x) for x in input().split()]\n\nc.sort()\n\nif c[-1] > n:\n    print(\"impossible\")\nelse:\n    m = 0\n    for i in range(n-1, -1, -1):\n        if c[i] > m + 1:\n            m += 1\n        else:\n            break\n    print(m/n) \n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    canisters = list(map(int, input().split()))\n    canisters.sort()\n    balloons = list(range(1, n + 1))\n    balloons.sort()\n    balloon_sum = sum(balloons)\n    canister_sum = sum(canisters)\n    if canister_sum < balloon_sum:\n        print('Impossible')\n        return\n    i = 0\n    j = 0\n    while i < n and j < n:\n        if canisters[i] >= balloons[j]:\n            balloon_sum -= balloons[j]\n            canister_sum -= canisters[i]\n            i += 1\n            j += 1\n        else:\n            canister_sum -= canisters[i]\n            i += 1\n    if canister_sum >= balloon_sum:\n        print('{:.2f}'.format(float(balloon_sum) / sum(balloons)))\n    else:\n        print('Impossible')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\ncanisters = list(map(int, input().split()))\n\n# Sort the canisters in descending order\ncanisters.sort(reverse=True)\n\n# If the number of canisters is less than the number of balloons, it is impossible\nif n < sum(canisters):\n    print(\"impossible\")\n\n# If the number of canisters is equal to the number of balloons, the minimum fraction is 1\nelif n == sum(canisters):\n    print(1)\n\n# If the number of canisters is greater than the number of balloons, we need to find the minimum fraction\nelse:\n    # The maximum fraction is the sum of the canisters divided by the number of balloons\n    max_fraction = sum(canisters) / n\n    # The minimum fraction is the first canister divided by the number of balloons\n    min_fraction = canisters[0] / n\n    # The minimum fraction is the maximum fraction minus the difference between the maximum fraction and the minimum fraction divided by the number of balloons minus the number of canisters\n    print(max_fraction - (max_fraction - min_fraction) / (n - len(canisters))\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    cans = [int(x) for x in sys.stdin.readline().split()]\n    cans.sort()\n    cans.reverse()\n    if cans[0] > n:\n        print(\"impossible\")\n    else:\n        print(float(cans[n-1])/n)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for _ in range(n):\n        balloons = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n        balloons.sort()\n        balloons.reverse()\n        canisters = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n        canisters.sort()\n        canisters.reverse()\n        for i in range(n):\n            if balloons[i] > canisters[i]:\n                print('impossible')\n                return\n        print(canisters[n-1] / balloons[n-1])\n\nmain()\n"]