2022-04-16 11:04:58.121446 num operations 1
2022-04-16 11:04:58.121464 size on input set 1
2022-04-16 11:05:09.350424 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n\t# Read input\n\tn = int(input())\n\tkeywords = []\n\tfor i in range(n):\n\t\tkeyword = input()\n\t\tkeywords.append(keyword.lower().replace('-', ' '))\n\t# Find similar keywords\n\tsimilar = set()\n\tfor i in range(n):\n\t\tfor j in range(n):\n\t\t\tif i != j and keywords[i] == keywords[j]:\n\t\t\t\tsimilar.add(i)\n\t\t\t\tsimilar.add(j)\n\t# Print result\n\tprint(n - len(similar))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input()\n        keywords.add(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = {}\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j] and (i not in similar or j not in similar):\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    similar = []\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.append(i)\n                similar.append(j)\n    print(n - len(set(similar)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    # Read input\n    n = int(raw_input())\n    keywords = []\n    for i in range(n):\n        keyword = raw_input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    #read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    #find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    #print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650107098,
  "object": "edit"
}
2022-04-16 11:05:09.350742 fix syntax errors 9 ["\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n\t# Read input\n\tn = int(input())\n\tkeywords = []\n\tfor i in range(n):\n\t\tkeyword = input()\n\t\tkeywords.append(keyword.lower().replace('-', ' '))\n\t# Find similar keywords\n\tsimilar = set()\n\tfor i in range(n):\n\t\tfor j in range(n):\n\t\t\tif i != j and keywords[i] == keywords[j]:\n\t\t\t\tsimilar.add(i)\n\t\t\t\tsimilar.add(j)\n\t# Print result\n\tprint(n - len(similar))\n\nif __name__ == '__main__':\n\tmain()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = set()\n    for i in range(n):\n        keyword = input()\n        keywords.add(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = {}\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j] and (i not in similar or j not in similar):\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    similar = []\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.append(i)\n                similar.append(j)\n    print(n - len(set(similar)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(raw_input())\n    keywords = []\n    for i in range(n):\n        keyword = raw_input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # Print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    #read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    #find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    #print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 11:05:09.350867 size on output set 7
2022-04-16 11:05:09.350880 num operations 1
2022-04-16 11:05:09.350885 size on input set 1
2022-04-16 11:05:16.555517 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \") # \u53bb\u6389\u540e\u9762\u7684\u6362\u884c\u7b26\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n\n\n    main()\n"
    }
  ],
  "created": 1650107109,
  "object": "edit"
}
2022-04-16 11:05:16.555761 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ") # 去掉后面的换行符\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n\n    main()\n', 'import sys\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n\n\n    main()\n']
2022-04-16 11:05:16.555810 size on output set 8
2022-04-16 11:05:16.555820 num operations 1
2022-04-16 11:05:16.555825 size on input set 1
2022-04-16 11:05:22.878779 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    keywords = []\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650107116,
  "object": "edit"
}
2022-04-16 11:05:22.879129 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    keywords = []\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 11:05:22.879171 size on output set 7
2022-04-16 11:05:22.879181 num operations 1
2022-04-16 11:05:22.879186 size on input set 1
2022-04-16 11:05:56.784815 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \").split(\" \")\n\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\n\nprint(len(keywords))\n"
    },
    {
      "index": 5,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(len(keywords))\n"
    },
    {
      "index": 7,
      "text": "\nprint(\"Hello world\")\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n\n    keywords.add(keyword)\nprint(len(keywords))\n"
    }
  ],
  "created": 1650107122,
  "object": "edit"
}
2022-04-16 11:05:56.785084 fix syntax errors 9 ['\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ").split(" ")\n\n    keywords.add(keyword)\nprint(len(keywords))\n', '\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\n\nprint(len(keywords))\n', 'n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(len(keywords))\n', '\nprint("Hello world")\n', '\n\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n\n    keywords.add(keyword)\nprint(len(keywords))\n']
2022-04-16 11:05:56.785197 size on output set 7
2022-04-16 11:05:56.785215 num operations 1
2022-04-16 11:05:56.785221 size on input set 1
2022-04-16 11:06:06.738062 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n#%%\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    pass\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input()) # number of rows\n    rows = [input() for _ in range(n)]\n    for row in rows:\n        print(row)\n\nmain()\n\n#%%\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    }
  ],
  "created": 1650107156,
  "object": "edit"
}
2022-04-16 11:06:06.738293 fix syntax errors 9 ["\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n", '\n\ndef main():\n    pass\n\nmain()\n', "\n#%%\n#%%\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n", '\n\ndef main():\n    pass\n\nmain()\n', "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", '\n\n#%%\n\ndef main():\n    n = int(input()) # number of rows\n    rows = [input() for _ in range(n)]\n    for row in rows:\n        print(row)\n\nmain()\n\n#%%\n', "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"]
2022-04-16 11:06:06.738343 size on output set 5
2022-04-16 11:06:06.738353 num operations 1
2022-04-16 11:06:06.738358 size on input set 1
2022-04-16 11:06:16.347686 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    print(int(math.sqrt(int(sys.stdin.readline().strip()))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace('-', ' ')\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\nimport math\nimport math\n\ndef main():\n    for line in sys.stdin:\n        n = int(line.strip())\n        if n == 0:\n            break\n        else:\n            keywords = []\n            for i in range(n):\n                keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n                if keyword not in keywords:\n                    keywords.append(keyword)\n            print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords)) # print the number of keywords\n\nif __name__ == \"__main__\": # if the script is called from the command line\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650107166,
  "object": "edit"
}
2022-04-16 11:06:16.348020 fix syntax errors 9 ['\n\nimport sys\nimport math\n\ndef main():\n    print(int(math.sqrt(int(sys.stdin.readline().strip()))))\n\nif __name__ == "__main__":\n    main()\n', "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace('-', ' ')\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport math\nimport math\n\ndef main():\n    for line in sys.stdin:\n        n = int(line.strip())\n        if n == 0:\n            break\n        else:\n            keywords = []\n            for i in range(n):\n                keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n                if keyword not in keywords:\n                    keywords.append(keyword)\n            print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords)) # print the number of keywords\n\nif __name__ == "__main__": # if the script is called from the command line\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 11:06:16.348067 size on output set 6
2022-04-16 11:06:16.348078 num operations 1
2022-04-16 11:06:16.348083 size on input set 1
2022-04-16 11:06:23.586070 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for _ in range(n):\n        keywords.append(sys.stdin.readline().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(raw_input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(raw_input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = set()\n    for _ in range(n):\n        keywords.add(input().lower().replace(\"-\", \" \"))\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    keywords = set()\n    for _ in range(n):\n        keywords.add(input().lower().replace(\"-\", \" \"))\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for _ in range(n):\n        keywords.append(sys.stdin.readline().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input(\"\"))\n    keywords = []\n    for _ in range(n):\n        keywords.append(input(\"\").lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650107176,
  "object": "edit"
}
2022-04-16 11:06:23.586318 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for _ in range(n):\n        keywords.append(sys.stdin.readline().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(raw_input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(raw_input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    keywords = set()\n    for _ in range(n):\n        keywords.add(input().lower().replace("-", " "))\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    keywords = set()\n    for _ in range(n):\n        keywords.add(input().lower().replace("-", " "))\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for _ in range(n):\n        keywords.append(sys.stdin.readline().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input(""))\n    keywords = []\n    for _ in range(n):\n        keywords.append(input("").lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    print(sys.argv)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 11:06:23.586355 size on output set 7
2022-04-16 11:06:23.586367 num operations 1
2022-04-16 11:06:23.586372 size on input set 1
2022-04-16 11:06:33.443034 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Mar  7 16:01:46 2019\n\n\n@author: shashank\n\"\"\"\n\ndef main():\n    n = int(input())\n    keywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\n    similar = set()\n    for i in range(n):\n        for j in range(i+1, n):\n            if keywords[i] == keywords[j]:\n                similar.add(keywords[i])\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1650107183,
  "object": "edit"
}
2022-04-16 11:06:33.443366 fix syntax errors 9 ['#!/usr/bin/env python3\n\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', 'n = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Thu Mar  7 16:01:46 2019\n\n\n@author: shashank\n"""\n\ndef main():\n    n = int(input())\n    keywords = [input().lower().replace("-", " ") for _ in range(n)]\n    similar = set()\n    for i in range(n):\n        for j in range(i+1, n):\n            if keywords[i] == keywords[j]:\n                similar.add(keywords[i])\n    print(n - len(similar))\n\nif __name__ == \'__main__\':\n    main()\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '#!/usr/bin/env python3\n\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-16 11:06:33.443409 size on output set 4
