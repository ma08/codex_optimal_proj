2022-04-16 13:41:40.608974 num operations 1
2022-04-16 13:41:40.608988 size on input set 1
2022-04-16 13:41:50.497385 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    # get input\n    my_input = sys.stdin.readlines()\n    my_input = [x.strip() for x in my_input]\n\n    # find out if encoding or decoding\n    if my_input[0][0] == 'E':\n        encoded = encode(my_input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(my_input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i + 1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    # get input\n    input_string = sys.stdin.readlines()\n    input_string = [x.strip() for x in input_string]\n\n    # find out if encoding or decoding\n    if input_string[0][0] == 'E':\n        encoded = encode(input_string[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input_string[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116500,
  "object": "edit"
}
2022-04-16 13:41:50.497689 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # get input\n    my_input = sys.stdin.readlines()\n    my_input = [x.strip() for x in my_input]\n\n    # find out if encoding or decoding\n    if my_input[0][0] == 'E':\n        encoded = encode(my_input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(my_input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i + 1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # get input\n    input = sys.stdin.readlines()\n    input = [x.strip() for x in input]\n\n    # find out if encoding or decoding\n    if input[0][0] == 'E':\n        encoded = encode(input[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # get input\n    input_string = sys.stdin.readlines()\n    input_string = [x.strip() for x in input_string]\n\n    # find out if encoding or decoding\n    if input_string[0][0] == 'E':\n        encoded = encode(input_string[0][2:])\n        print(encoded)\n    else:\n        decoded = decode(input_string[0][2:])\n        print(decoded)\n\ndef encode(string):\n    encoded = ''\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            encoded += string[i] + str(count)\n            count = 1\n    encoded += string[-1] + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 13:41:50.497836 size on output set 5
2022-04-16 13:41:50.497852 num operations 1
2022-04-16 13:41:50.497857 size on input set 1
2022-04-16 13:42:04.295422 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == 'E':\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev, count = string[0], 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)  # add last encoded character\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):  # go through every 2 characters\n        decoded += string[i]*int(string[i+1])  # decode the characters\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":  # encode\n        print(encode(line[2:]))\n    else:  # decode\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "import os\n\nimport sys\n\n\ndef encode(string):\n\tencoded = \"\"\n\tprev = string[0]\n\tcount = 0\n\tfor c in string:\n\t\tif c == prev:\n\t\t\tcount += 1\n\t\telse:\n\t\t\tencoded += prev + str(count)\n\t\t\tprev = c\n\t\t\tcount = 1\n\tencoded += prev + str(count)\n\treturn encoded\n\ndef decode(string):\n\tdecoded = \"\"\n\tfor i in range(0, len(string), 2):\n\t\tdecoded += string[i]*int(string[i+1])\n\treturn decoded\n\ndef main():\n\tline = sys.stdin.readline().strip()\n\tif line[0] == \"E\":\n\t\tprint(encode(line[2:]))\n\telse:\n\t\tprint(decode(line[2:]))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\n    if len(string) == 0:\n        return \"\"\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    if len(string) == 0:\n        return \"\"\n\n    if len(string) % 2 != 0:\n        return \"Invalid\"\n\n    decoded = \"\"\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef encode(string):\n    encoded = \"\"\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    i = 0\n    while i < len(string):\n        decoded += string[i]*int(string[i+1:i+3])\n        i += 3\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \"E\":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116510,
  "object": "edit"
}
2022-04-16 13:42:04.295745 fix syntax errors 9 ['\n\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == \'E\':\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev, count = string[0], 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)  # add last encoded character\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):  # go through every 2 characters\n        decoded += string[i]*int(string[i+1])  # decode the characters\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":  # encode\n        print(encode(line[2:]))\n    else:  # decode\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i]*int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', 'import os\n\nimport sys\n\n\ndef encode(string):\n\tencoded = ""\n\tprev = string[0]\n\tcount = 0\n\tfor c in string:\n\t\tif c == prev:\n\t\t\tcount += 1\n\t\telse:\n\t\t\tencoded += prev + str(count)\n\t\t\tprev = c\n\t\t\tcount = 1\n\tencoded += prev + str(count)\n\treturn encoded\n\ndef decode(string):\n\tdecoded = ""\n\tfor i in range(0, len(string), 2):\n\t\tdecoded += string[i]*int(string[i+1])\n\treturn decoded\n\ndef main():\n\tline = sys.stdin.readline().strip()\n\tif line[0] == "E":\n\t\tprint(encode(line[2:]))\n\telse:\n\t\tprint(decode(line[2:]))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\nimport sys\n\n    if len(string) == 0:\n        return ""\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    if len(string) == 0:\n        return ""\n\n    if len(string) % 2 != 0:\n        return "Invalid"\n\n    decoded = ""\n    for i in range(0, len(string), 2):\n        decoded += string[i] * int(string[i+1])\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    encoded = ""\n    prev = string[0]\n    count = 0\n    for c in string:\n        if c == prev:\n            count += 1\n        else:\n            encoded += prev + str(count)\n            prev = c\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    i = 0\n    while i < len(string):\n        decoded += string[i]*int(string[i+1:i+3])\n        i += 3\n    return decoded\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line[0] == "E":\n        print(encode(line[2:]))\n    else:\n        print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 13:42:04.295820 size on output set 9
2022-04-16 13:42:04.295831 num operations 1
2022-04-16 13:42:04.295836 size on input set 1
2022-04-16 13:42:12.195050 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i + 1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef encode(string):\n    new_string = \"\"\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = \"\"\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == \"E\":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116524,
  "object": "edit"
}
2022-04-16 13:42:12.195428 fix syntax errors 9 ['#!/usr/bin/env python3\n\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', 'import sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string)-1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string)-1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i + 1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(string):\n    new_string = ""\n    count = 1\n    for i in range(len(string) - 1):\n        if string[i] == string[i+1]:\n            count += 1\n        else:\n            new_string += string[i] + str(count)\n            count = 1\n    new_string += string[-1] + str(count)\n    return new_string\n\ndef decode(string):\n    new_string = ""\n    for i in range(0, len(string) - 1, 2):\n        new_string += string[i] * int(string[i+1])\n    return new_string\n\ndef main():\n    for line in sys.stdin:\n        if line[0] == "E":\n            print(encode(line[2:]))\n        else:\n            print(decode(line[2:]))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 13:42:12.195500 size on output set 5
2022-04-16 13:42:12.195512 num operations 1
2022-04-16 13:42:12.195517 size on input set 1
2022-04-16 13:42:23.992864 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    for line in lines:\n        input = line.strip().split()\n        if input[0] == \"E\":\n            encode(input[1])\n        elif input[0] == \"D\":\n            decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    if input[0] == \"E\": encode(input[1:])\n    elif input[0] == \"D\": decode(input[1:])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == \"E\":\n        encode(input[1])\n    elif input[0] == \"D\":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == \"E\":\n        encode(input[1])\n    elif input[0] == \"D\":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(0, len(string)):\n        if i != 0 and string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    inputs = sys.stdin.readline().strip().split()\n    if inputs[0] == \"E\":\n        encode(inputs[1])\n    elif inputs[0] == \"D\":\n        decode(inputs[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == \"E\":\n        encode(input[1])\n    elif input[0] == \"D\":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    input_ = sys.stdin.readline().strip().split()\n    if input_[0] == \"E\":\n        encode(input_[1])\n    elif input_[0] == \"D\":\n        decode(input_[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == \"E\":\n        encode(input[1])\n    elif input[0] == \"D\":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == \"E\":\n        encode(input[1])\n    elif input[0] == \"D\":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = \"\"\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = \"\"\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116532,
  "object": "edit"
}
2022-04-16 13:42:23.993215 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    for line in lines:\n        input = line.strip().split()\n        if input[0] == "E":\n            encode(input[1])\n        elif input[0] == "D":\n            decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip()\n    if input[0] == "E": encode(input[1:])\n    elif input[0] == "D": decode(input[1:])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == "E":\n        encode(input[1])\n    elif input[0] == "D":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == "E":\n        encode(input[1])\n    elif input[0] == "D":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(0, len(string)):\n        if i != 0 and string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    inputs = sys.stdin.readline().strip().split()\n    if inputs[0] == "E":\n        encode(inputs[1])\n    elif inputs[0] == "D":\n        decode(inputs[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == "E":\n        encode(input[1])\n    elif input[0] == "D":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    input_ = sys.stdin.readline().strip().split()\n    if input_[0] == "E":\n        encode(input_[1])\n    elif input_[0] == "D":\n        decode(input_[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == "E":\n        encode(input[1])\n    elif input[0] == "D":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input = sys.stdin.readline().strip().split()\n    if input[0] == "E":\n        encode(input[1])\n    elif input[0] == "D":\n        decode(input[1])\n\ndef encode(string):\n    encoded_string = ""\n    count = 1\n    for i in range(1, len(string)):\n        if string[i] == string[i-1]:\n            count += 1\n        else:\n            encoded_string += string[i-1] + str(count)\n            count = 1\n    encoded_string += string[-1] + str(count)\n    print(encoded_string)\n\ndef decode(string):\n    decoded_string = ""\n    for i in range(0, len(string), 2):\n        decoded_string += string[i] * int(string[i+1])\n    print(decoded_string)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:42:23.993305 size on output set 6
2022-04-16 13:42:23.993316 num operations 1
2022-04-16 13:42:23.993321 size on input set 1
2022-04-16 13:42:37.207977 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# This is a comment\n\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print(encode(encoding[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print(encode(encoding[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        encoding = line.strip().split()\n        if encoding[0] == \"E\":\n            print(encode(encoding[1]))\n        else:\n            print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print (encode(encoding[1]))\n    else:\n        print (decode(encoding[1]))\n\ndef encode(string):\n    encoded = ''\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str (count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ''\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int (string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip()\n    if encoding[0] == \"E\": print(encode(encoding[1:]))\n    else: print(decode(encoding[1:]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string) - 1 or string[i] != string[i + 1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i + 1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    mode = sys.stdin.readline().strip().split()\n    if mode[0] == \"E\":\n        print(encode(mode[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print(encode(encoding[1].strip()))\n    else:\n        print(decode(encoding[1].strip()))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        encoding = line.strip().split()\n        if encoding[0] == \"E\":\n            print(encode(encoding[1]))\n        else:\n            print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == \"E\":\n        print(encode(encoding[1])) \n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = \"\"\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \"\"\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116544,
  "object": "edit"
}
2022-04-16 13:42:37.208293 fix syntax errors 9 ['\n\n# This is a comment\n\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == "E":\n        print(encode(encoding[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == "E":\n        print(encode(encoding[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        encoding = line.strip().split()\n        if encoding[0] == "E":\n            print(encode(encoding[1]))\n        else:\n            print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == "E":\n        print (encode(encoding[1]))\n    else:\n        print (decode(encoding[1]))\n\ndef encode(string):\n    encoded = \'\'\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str (count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = \'\'\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int (string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip()\n    if encoding[0] == "E": print(encode(encoding[1:]))\n    else: print(decode(encoding[1:]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string) - 1 or string[i] != string[i + 1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i + 1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    mode = sys.stdin.readline().strip().split()\n    if mode[0] == "E":\n        print(encode(mode[1]))\n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == "E":\n        print(encode(encoding[1].strip()))\n    else:\n        print(decode(encoding[1].strip()))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        encoding = line.strip().split()\n        if encoding[0] == "E":\n            print(encode(encoding[1]))\n        else:\n            print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    encoding = sys.stdin.readline().strip().split()\n    if encoding[0] == "E":\n        print(encode(encoding[1])) \n    else:\n        print(decode(encoding[1]))\n\ndef encode(string):\n    encoded = ""\n    count = 0\n    for i in range(len(string)):\n        count += 1\n        if i == len(string)-1 or string[i] != string[i+1]:\n            encoded += string[i] + str(count)\n            count = 0\n    return encoded\n\ndef decode(string):\n    decoded = ""\n    for i in range(len(string)):\n        if i % 2 == 0:\n            decoded += string[i] * int(string[i+1])\n    return decoded\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:42:37.208362 size on output set 8
2022-04-16 13:42:37.208374 num operations 1
2022-04-16 13:42:37.208379 size on input set 1
2022-04-16 13:42:47.228816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(0,len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i + 1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(0, len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i]*int(message[i + 1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef decode(message):\n    decoded = \"\"\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = \"\"\n    prev = \"\"\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != \"\":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == \"E\":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n"
    }
  ],
  "created": 1650116557,
  "object": "edit"
}
2022-04-16 13:42:47.229161 fix syntax errors 9 ['\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', 'import sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(0,len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\n\nmain()\n', '\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i + 1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(0, len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', '\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0, len(message), 2):\n        decoded += message[i]*int(message[i + 1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', '\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', 'import sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n', '\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0, len(message), 2):\n        decoded += message[i] * int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\n\nmain()\n', '\nimport sys\n\ndef decode(message):\n    decoded = ""\n    for i in range(0,len(message),2):\n        decoded += message[i]*int(message[i+1])\n    return decoded\n\ndef encode(message):\n    encoded = ""\n    prev = ""\n    count = 0\n    for i in range(len(message)):\n        if message[i] == prev:\n            count += 1\n        else:\n            if prev != "":\n                encoded += prev + str(count)\n            prev = message[i]\n            count = 1\n    encoded += prev + str(count)\n    return encoded\n\ndef main():\n    line = sys.stdin.readline().strip().split()\n    if line[0] == "E":\n        print(encode(line[1]))\n    else:\n        print(decode(line[1]))\n\nmain()\n']
2022-04-16 13:42:47.229232 size on output set 7
2022-04-16 13:42:47.229245 num operations 1
2022-04-16 13:42:47.229250 size on input set 1
2022-04-16 13:42:57.807333 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    input_list = input().split(' ')\n    if input_list[0] == 'E': print(encode(input_list[1]))\n    elif input_list[0] == 'D': print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    input_list = raw_input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + unicode(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + unicode(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1].strip()))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1].strip()))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = text[0]\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116567,
  "object": "edit"
}
2022-04-16 13:42:57.807749 fix syntax errors 9 ["\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split(' ')\n    if input_list[0] == 'E': print(encode(input_list[1]))\n    elif input_list[0] == 'D': print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = raw_input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + unicode(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + unicode(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1].strip()))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1].strip()))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = ''\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            if cur_char != '':\n                encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i] * int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    input_list = input().split()\n    if input_list[0] == 'E':\n        print(encode(input_list[1]))\n    elif input_list[0] == 'D':\n        print(decode(input_list[1]))\n\n\ndef encode(text):\n    encoded_text = ''\n    cur_char = text[0]\n    char_count = 0\n    for char in text:\n        if char == cur_char:\n            char_count += 1\n        else:\n            encoded_text += cur_char + str(char_count)\n            cur_char = char\n            char_count = 1\n    encoded_text += cur_char + str(char_count)\n    return encoded_text\n\n\ndef decode(text):\n    decoded_text = ''\n    for i in range(0, len(text), 2):\n        decoded_text += text[i]*int(text[i+1])\n    return decoded_text\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 13:42:57.807836 size on output set 6
2022-04-16 13:42:57.807848 num operations 1
2022-04-16 13:42:57.807853 size on input set 1
2022-04-16 13:43:06.091816 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip()\n    if msg[0] == \"E\" and msg[1] == \" \":\n        print(encode(msg[2:]))\n    else:\n        print(decode(msg[2:]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        if msg[i] == msg[i + 1]:\n            if i == len(msg) - 2:\n                new_msg += msg[i] + str(count)\n                break\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg.strip())\n    new_msg = \"\"\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg.strip())\n    new_msg = \"\"\n    count = \"\"\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.\":\n                new_msg += msg[i - 1] * int(count)\n                count = \"\"\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == \"E\":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116577,
  "object": "edit"
}
2022-04-16 13:43:06.092302 fix syntax errors 9 ['\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip()\n    if msg[0] == "E" and msg[1] == " ":\n        print(encode(msg[2:]))\n    else:\n        print(decode(msg[2:]))\n\nif __name__ == \'__main__\':\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        if i == len(msg) - 1:\n            new_msg += msg[i] + str(count)\n            break\n        elif msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        if msg[i] == msg[i + 1]:\n            if i == len(msg) - 2:\n                new_msg += msg[i] + str(count)\n                break\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg)\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef encode(msg):\n    msg = list(msg.strip())\n    new_msg = ""\n    count = 1\n    for i in range(len(msg)):\n        # if i == len(msg) - 1:\n        #     new_msg += msg[i] + str(count)\n        #     break\n        if msg[i] == msg[i + 1]:\n            count += 1\n        else:\n            new_msg += msg[i] + str(count)\n            count = 1\n    return new_msg\n\ndef decode(msg):\n    msg = list(msg.strip())\n    new_msg = ""\n    count = ""\n    for i in range(len(msg)):\n        if i % 2 == 0:\n            new_msg += msg[i]\n        else:\n            count += msg[i]\n            if i == len(msg) - 1 or msg[i + 1] in "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_!.":\n                new_msg += msg[i - 1] * int(count)\n                count = ""\n    return new_msg\n\ndef main():\n    msg = sys.stdin.readline().strip().split()\n    if msg[0] == "E":\n        print(encode(msg[1]))\n    else:\n        print(decode(msg[1]))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 13:43:06.092413 size on output set 7
