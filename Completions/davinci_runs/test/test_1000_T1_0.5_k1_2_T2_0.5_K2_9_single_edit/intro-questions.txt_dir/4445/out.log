2022-04-09 20:13:11.243403 """
Polycarp has an array $a$ consisting of $n$ integers.

He wants to play a game with this array. The game consists of several moves. On the first move he chooses any element and deletes it (after the first move the array contains $n-1$ elements). For each of the next moves he chooses any element with the only restriction: its parity should differ from the parity of the element deleted on the previous move. In other words, he alternates parities (even-odd-even-odd-... or odd-even-odd-even-...) of the removed elements. Polycarp stops if he can't make a move.

Formally:   If it is the first move, he chooses any element and deletes it;  If it is the second or any next move:   if the last deleted element was odd, Polycarp chooses any even element and deletes it;  if the last deleted element was even, Polycarp chooses any odd element and deletes it.   If after some move Polycarp cannot make a move, the game ends. 

Polycarp's goal is to minimize the sum of non-deleted elements of the array after end of the game. If Polycarp can delete the whole array, then the sum of non-deleted elements is zero.

Help Polycarp find this value.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2000$) — the number of elements of $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($0 \le a_i \le 10^6$), where $a_i$ is the $i$-th element of $a$.


-----Output-----

Print one integer — the minimum possible sum of non-deleted elements of the array after end of the game.


-----Examples-----
Input
5
1 5 7 8 2

Output
0

Input
6
5 1 2 4 6 3

Output
0

Input
2
1000000 1000000

Output
1000000
"""
2022-04-09 20:13:11.243433 --------------------------
2022-04-09 20:13:26.912454 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# find the odd number of odd numbers\nodd = 0\nfor i in a:\n    if i % 2 == 1:\n        odd += 1\n\n# if odd is odd, find the first even number and delete all the others\nif odd % 2 == 1:\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            print(sum(a) - a[i])\n            exit()\n\n# if odd is even, find the first odd number and delete all the others\nif odd % 2 == 0:\n    for i in range(len(a)):\n        if a[i] % 2 == 1:\n            print(sum(a) - a[i])\n            exit()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n        return\n    if n == 2:\n        print(max(a))\n        return\n    if n == 3:\n        print(sum(a) - min(a))\n        return\n    if n == 4:\n        print(sum(a) - max(a))\n        return\n    if n % 2 == 0:\n        print(sum(a) - max(a))\n        return\n    print(sum(a) - min(a))\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649549591,
  "id": "cmpl-4vFUVwlc8UbhKkkkLLw8D6pkqzUHN",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:13:26.912674 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# find the odd number of odd numbers\nodd = 0\nfor i in a:\n    if i % 2 == 1:\n        odd += 1\n\n# if odd is odd, find the first even number and delete all the others\nif odd % 2 == 1:\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            print(sum(a) - a[i])\n            exit()\n\n# if odd is even, find the first odd number and delete all the others\nif odd % 2 == 0:\n    for i in range(len(a)):\n        if a[i] % 2 == 1:\n            print(sum(a) - a[i])\n            exit()"
}
2022-04-09 20:13:26.912701 REASON stop
2022-04-09 20:13:26.914005 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n        return\n    if n == 2:\n        print(max(a))\n        return\n    if n == 3:\n        print(sum(a) - min(a))\n        return\n    if n == 4:\n        print(sum(a) - max(a))\n        return\n    if n % 2 == 0:\n        print(sum(a) - max(a))\n        return\n    print(sum(a) - min(a))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 20:13:26.914251 REASON stop
