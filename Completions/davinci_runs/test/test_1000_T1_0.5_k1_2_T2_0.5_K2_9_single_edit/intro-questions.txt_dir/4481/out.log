2022-04-09 20:23:06.384937 """
We have N voting papers. The i-th vote (1 \leq i \leq N) has the string S_i written on it.
Print all strings that are written on the most number of votes, in lexicographical order.

-----Constraints-----
 - 1 \leq N \leq 2 \times 10^5
 - S_i (1 \leq i \leq N) are strings consisting of lowercase English letters.
 - The length of S_i (1 \leq i \leq N) is between 1 and 10 (inclusive).

-----Input-----
Input is given from Standard Input in the following format:
N
S_1
:
S_N

-----Output-----
Print all strings in question in lexicographical order.

-----Sample Input-----
7
beat
vet
beet
bed
vet
bet
beet

-----Sample Output-----
beet
vet

beet and vet are written on two sheets each, while beat, bed, and bet are written on one vote each. Thus, we should print the strings beet and vet.
"""
2022-04-09 20:23:06.384970 --------------------------
2022-04-09 20:23:16.540288 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))"
    }
  ],
  "created": 1649550186,
  "id": "cmpl-4vFe6f3E1ySazzFhf2BtVminLUr5h",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 20:23:16.540529 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))"
}
2022-04-09 20:23:16.540594 REASON stop
2022-04-09 20:23:16.552583 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))"
}
2022-04-09 20:23:16.552728 REASON stop
