2022-04-16 07:43:57.527785 num operations 1
2022-04-16 07:43:57.527804 size on input set 1
2022-04-16 07:44:37.851885 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n'''\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\n'''\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 2,
      "text": "\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 4,
      "text": "\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom collections import Counter\n\nn = int(input())\nvotes = [input() for _ in range(n)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    },
    {
      "index": 8,
      "text": "\nfrom collections import Counter\n\n\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"
    }
  ],
  "created": 1650095037,
  "object": "edit"
}
2022-04-16 07:44:37.852175 fix syntax errors 9 ['\n\'\'\'\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\n\'\'\'\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\n\nfrom collections import Counter\n\nn = int(input())\nvotes = [input() for _ in range(n)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\nmax_count = max(c.values())\n\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\n\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n', '\nfrom collections import Counter\n\n\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\nc = Counter(votes)\nmax_count = max(c.values())\nprint("\\n".join(sorted([v for v in c.keys() if c[v] == max_count])))\n']
2022-04-16 07:44:37.852321 size on output set 8
2022-04-16 07:44:37.852334 num operations 1
2022-04-16 07:44:37.852339 size on input set 1
2022-04-16 07:44:47.295475 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 1,
      "text": "import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 3,
      "text": "import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n\n    c = collections.Counter(s)\n\n    print(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 6,
      "text": "# import collections\n\n\n# n = int(input())\n# s = [input() for _ in range(n)]\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 7,
      "text": "\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    },
    {
      "index": 8,
      "text": "import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n"
    }
  ],
  "created": 1650095077,
  "object": "edit"
}
2022-04-16 07:44:47.295736 fix syntax errors 9 ['import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', 'import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', 'import collections\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n\n    c = collections.Counter(s)\n\n    print("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', '# import collections\n\n\n# n = int(input())\n# s = [input() for _ in range(n)]\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', '\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n', 'import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint("\\n".join(sorted(k for k, v in c.items() if v == max(c.values()))))\n']
2022-04-16 07:44:47.295772 size on output set 8
