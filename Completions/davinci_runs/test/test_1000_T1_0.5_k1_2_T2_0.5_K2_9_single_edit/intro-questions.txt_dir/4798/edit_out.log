2022-04-16 11:22:11.185425 num operations 1
2022-04-16 11:22:11.185444 size on input set 1
2022-04-16 11:22:19.627505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nnames = input().split('-')\n\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"
    },
    {
      "index": 1,
      "text": "\n\nnames = input(\"Enter names: \")\n\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(\"Abbreviation: \" + ''.join(names))\n"
    },
    {
      "index": 2,
      "text": "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"
    },
    {
      "index": 3,
      "text": "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"
    },
    {
      "index": 4,
      "text": "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef name_formatter(name):\n    name = name.split('-')\n    for i in range(len(name)):\n        name[i] = name[i][0]\n\n    return ''.join(name)\n\nname = input()\n\nprint(name_formatter(name))\n"
    },
    {
      "index": 6,
      "text": "\n\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\n\nprint(''.join(names))\n"
    },
    {
      "index": 7,
      "text": "\n\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0].upper()\n\nprint(''.join(names))\n"
    },
    {
      "index": 8,
      "text": "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"
    }
  ],
  "created": 1650108131,
  "object": "edit"
}
2022-04-16 11:22:19.627777 fix syntax errors 9 ["\n\nnames = input().split('-')\n\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", '\n\nnames = input("Enter names: ")\n\n\nnames = names.split(\'-\')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint("Abbreviation: " + \'\'.join(names))\n', "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n", "\n\ndef name_formatter(name):\n    name = name.split('-')\n    for i in range(len(name)):\n        name[i] = name[i][0]\n\n    return ''.join(name)\n\nname = input()\n\nprint(name_formatter(name))\n", "\n\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\n\nprint(''.join(names))\n", "\n\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0].upper()\n\nprint(''.join(names))\n", "\nnames = input()\n\nnames = names.split('-')\nfor i in range(len(names)):\n    names[i] = names[i][0]\n\nprint(''.join(names))\n"]
2022-04-16 11:22:19.627810 size on output set 6
2022-04-16 11:22:19.627819 num operations 1
2022-04-16 11:22:19.627824 size on input set 1
2022-04-16 11:22:25.678520 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 2,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 3,
      "text": "\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 4,
      "text": "\n\nprint(input().replace(\"-\", \"\"))\n"
    },
    {
      "index": 5,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 6,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 7,
      "text": "\n\nprint(input().replace('-', ''))\n"
    },
    {
      "index": 8,
      "text": "\n\nprint(input().replace('-', ''))\n"
    }
  ],
  "created": 1650108139,
  "object": "edit"
}
2022-04-16 11:22:25.678744 fix syntax errors 9 ["\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-', ''))\n", "\nprint(input().replace('-', ''))\n", '\n\nprint(input().replace("-", ""))\n', "\n\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-', ''))\n", "\n\nprint(input().replace('-', ''))\n"]
2022-04-16 11:22:25.678771 size on output set 3
2022-04-16 11:22:25.678780 num operations 1
2022-04-16 11:22:25.678785 size on input set 1
2022-04-16 11:22:32.636207 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end='')\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end='')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end='')\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end='')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\":\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\"\")\n    for i in range(len(line)):\n        if line[i] == \"-\" and i != len(line) - 1:\n            print(line[i+1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650108145,
  "object": "edit"
}
2022-04-16 11:22:32.636437 fix syntax errors 9 ['\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1])\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\'\')\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end=\'\')\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end="")\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end="")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end="")\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end="")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end="")\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end="")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end=\'\')\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end=\'\')\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0])\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end="")\n    for i in range(len(line)):\n        if line[i] == "-":\n            print(line[i+1], end="")\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.strip()\n    print(line[0], end="")\n    for i in range(len(line)):\n        if line[i] == "-" and i != len(line) - 1:\n            print(line[i+1], end="")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 11:22:32.636565 size on output set 6
2022-04-16 11:22:32.636578 num operations 1
2022-04-16 11:22:32.636583 size on input set 1
2022-04-16 11:22:40.202856 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i]\n                  for i in range(len(input_string))\n                  if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i]\n                   for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i]\n                   for i in range(len(input_string))\n                   if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\"\"\"\nWrite a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.\nSuppose the following input is supplied to the program:\nhello world and practice makes perfect and hello world again\nThen, the output should be:\nagain and hello makes perfect practice world\n\"\"\"\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n\n    \"\"\"Main function\"\"\"\n    input_string = input()\n    print(\"\".join([input_string[i] for i in range(len(input_string))\n                  if input_string[i].isupper()]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650108152,
  "object": "edit"
}
2022-04-16 11:22:40.203158 fix syntax errors 9 ['\n\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i]\n                  for i in range(len(input_string))\n                  if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i]\n                   for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i]\n                   for i in range(len(input_string))\n                   if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '"""\nWrite a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.\nSuppose the following input is supplied to the program:\nhello world and practice makes perfect and hello world again\nThen, the output should be:\nagain and hello makes perfect practice world\n"""\n\ndef main():\n    """\n    Main function\n    """\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string)) if input_string[i].isupper()]))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n\n    """Main function"""\n    input_string = input()\n    print("".join([input_string[i] for i in range(len(input_string))\n                  if input_string[i].isupper()]))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 11:22:40.203200 size on output set 8
2022-04-16 11:22:40.203211 num operations 1
2022-04-16 11:22:40.203216 size on input set 1
2022-04-16 11:22:47.136761 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "full = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n"
    },
    {
      "index": 1,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]).upper())\n"
    },
    {
      "index": 2,
      "text": "full = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n"
    },
    {
      "index": 3,
      "text": "\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]]))\n"
    },
    {
      "index": 4,
      "text": "\n\nfull = input() \nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")]))\n"
    },
    {
      "index": 5,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")]))\n"
    },
    {
      "index": 6,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1]]))\n"
    },
    {
      "index": 7,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]])) \n"
    },
    {
      "index": 8,
      "text": "\n\nfull = input()\nprint(full[0] + \"\".join([i[0] for i in full.split(\"-\")[1:]])) \n"
    }
  ],
  "created": 1650108160,
  "object": "edit"
}
2022-04-16 11:22:47.137010 fix syntax errors 9 ['full = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]))\n', '\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]).upper())\n', 'full = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]))\n', '\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]]))\n', '\n\nfull = input() \nprint(full[0] + "".join([i[0] for i in full.split("-")]))\n', '\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")]))\n', '\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1]]))\n', '\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]])) \n', '\n\nfull = input()\nprint(full[0] + "".join([i[0] for i in full.split("-")[1:]])) \n']
2022-04-16 11:22:47.137037 size on output set 7
2022-04-16 11:22:47.137047 num operations 1
2022-04-16 11:22:47.137052 size on input set 1
2022-04-16 11:22:54.396130 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]).upper())\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    name = input()\n    print(name[0] + \"\".join(x[0] for x in name.split(\"-\")[1:]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]).upper())\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0].upper() for x in name.split(\"-\")[1:]]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")[1:]]) + \"@redmart.com\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    name = input()\n    print(name[0] + \"\".join([x[0] for x in name.split(\"-\")]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    print(\"\".join([x[0] for x in input().split(\"-\")]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650108167,
  "object": "edit"
}
2022-04-16 11:22:54.396405 fix syntax errors 9 ['\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]).upper())\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    name = input()\n    print(name[0] + "".join(x[0] for x in name.split("-")[1:]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]).upper())\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0].upper() for x in name.split("-")[1:]]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")[1:]]) + "@redmart.com")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    name = input()\n    print(name[0] + "".join([x[0] for x in name.split("-")]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print("".join([x[0] for x in input().split("-")]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 11:22:54.396438 size on output set 8
2022-04-16 11:22:54.396448 num operations 1
2022-04-16 11:22:54.396453 size on input set 1
2022-04-16 11:23:01.927335 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nif __name__ == '__main__':\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-') #split the string by '-'\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = input(\"Enter the number\")\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split(\"-\")\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    s = input()\n    s = s.split('-')\n    for i in s:\n        print(i[0], end='')\n    print('')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = str(input())\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print()\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    s = input()\n    s = s.split('-')\n    for i in s:\n        print(i[0], end='')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = input()\n    n = n.split('-')\n    for i in n:\n        print(i[0], end=\"\")\n    print('')\n\nmain()\n"
    }
  ],
  "created": 1650108174,
  "object": "edit"
}
2022-04-16 11:23:01.927603 fix syntax errors 9 ['\n\ndef main():\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print()\n\n\nmain()\n', '\n\nif __name__ == \'__main__\':\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print()\n', '\n\ndef main():\n    n = input()\n    n = n.split(\'-\') #split the string by \'-\'\n    for i in n:\n        print(i[0], end="")\n    print()\n\nmain()\n', '\n\ndef main():\n    n = input("Enter the number")\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print()\n\nmain()\n', '\n\ndef main():\n    n = input()\n    n = n.split("-")\n    for i in n:\n        print(i[0], end="")\n    print()\n\nmain()\n', "\n\ndef main():\n    s = input()\n    s = s.split('-')\n    for i in s:\n        print(i[0], end='')\n    print('')\n\nmain()\n", '\n\ndef main():\n    n = str(input())\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print()\n\nmain()\n', "\n\ndef main():\n    s = input()\n    s = s.split('-')\n    for i in s:\n        print(i[0], end='')\n\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef main():\n    n = input()\n    n = n.split(\'-\')\n    for i in n:\n        print(i[0], end="")\n    print(\'\')\n\nmain()\n']
2022-04-16 11:23:01.927649 size on output set 9
2022-04-16 11:23:01.927664 num operations 1
2022-04-16 11:23:01.927672 size on input set 1
2022-04-16 11:23:09.255777 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1])))\n"
    },
    {
      "index": 1,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:])), end='')\n"
    },
    {
      "index": 2,
      "text": "\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    },
    {
      "index": 3,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n"
    },
    {
      "index": 4,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    },
    {
      "index": 5,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    },
    {
      "index": 6,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n"
    },
    {
      "index": 7,
      "text": "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-'))))\n"
    },
    {
      "index": 8,
      "text": "\nprint(''.join(map(lambda x: x[0], input().split('-'))))\n"
    }
  ],
  "created": 1650108181,
  "object": "edit"
}
2022-04-16 11:23:09.256025 fix syntax errors 9 ["\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1])))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:])), end='')\n", "\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))) \n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-')[1:]))\n", "\n\nprint(input().split('-')[0][0] + ''.join(map(lambda x: x[0], input().split('-'))))\n", "\nprint(''.join(map(lambda x: x[0], input().split('-'))))\n"]
2022-04-16 11:23:09.256052 size on output set 7
