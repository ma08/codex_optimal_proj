["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = set()\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.add(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n - 1):\n        if recited[i + 1] - recited[i] != 1:\n            for j in range(recited[i] + 1, recited[i + 1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1] + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n \nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x - 1\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n    if recited[-1] != 10:\n        print(recited[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1, l[-1] + 1):\n    if i not in l:\n        print(i)\nelse:\n    print(\"good job\")\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for i in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    l = []\n    for x in range(n):\n        l.append(int(input()))\n\n    for x in range(1,l[n-1]+1):\n        if x not in l:\n            print(x)\n\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    my_list = []\n    for x in range(n):\n        my_list.append(int(input()))\n\n    for x in range(1, my_list[n-1]+1):\n        if x not in my_list:\n            print(x)\n\n\nmain()\n", "\n\nimport sys\n\n# Read lines from stdin\nlines = [line.strip() for line in sys.stdin]\n# Parse input\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing numbers\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low_num = 1\n        high_num = x\n    else:\n        low_num = x + 1\n        high_num = x\n\nfor i in range(low_num, high_num+1):\n    print(i)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == max(numbers):\n        print(\"good job\")\n    else:\n        for i in range(1,max(numbers)+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n    if recited[-1] != 200:\n        print(recited[-1]+1)\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n-1]+1):\n        if x not in list:\n            print(x)\n\n\nmain()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1, l[-1]+1):\n    if i not in l:\n        print(i)\nprint(\"good job\")\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    # missing = []\n    # for i in range(1, recited[-1] + 1):\n    #     if i not in recited:\n    #         missing.append(i)\n    # if len(missing) > 0:\n    #     for m in missing:\n    #         print(m)\n    # else:\n    #     print(\"good job\")\n    print(recited)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n    if recited[-1] != 100:\n        for j in range(recited[-1]+1, 101):\n            print(j)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\n\nfor i in range(n):\n    if i == 1:\n        low = 1\n        high = n\n    else:\n        low = n + 1\n        high = n\n\nfor i in range(low, high+1):\n    print(i)\n", "\n\nimport sys\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    # Print results\n    if len(missing) == 0:\n        print(\"good job\")\n    else:\n        for num in missing:\n            print(num)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nnumbers = []\n\nfor i in range(n):\n    numbers.append(int(input()))\n\nfor i in range(1, numbers[-1] + 1):\n    if i not in numbers:\n        print(i)\n\nif len(numbers) == numbers[-1]:\n    print(\"good job\")\n", "\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nif len(recited) == recited[-1] and recited[-1] == 1:\n    print(\"good job\")\n", "\n\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\nelse:\n    if len(recited) == recited[-1]:\n        print(\"good job\")\n", "\n\nn = int(input(\"Enter the number of elements: \"))\n\nfor i in range(n):\n    x = int(input(\"Enter element: \"))\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = high + 1\n        high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input()) # number of recited numbers\n    recited = []\n    for _ in range(n):\n        recited.append(int(input())) # list of recited numbers\n    recited.sort() # sort list\n    # if first recited number is not one, print one\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n    if recited[-1] != 200:\n        print(recited[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n    else:\n        print(\"good job\")\n        print(i)\nelse:\n    pass\n", "\n\nn = int(input())\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recited[-1] + 2):\n        if i not in recited:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == max(numbers):\n        print(\"good job\")\n    else:\n        for i in range(1,max(numbers)+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recited = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    for i in range(1, recited[-1]+1):\n        if i in recited:\n            continue\n        print(i)\n    if len(missing) == 0:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1, l[-1]+1):\n    if i not in l:\n        print(i)\n        break\nelse: print(\"good job\")\n", "\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high + 1):\n    print(i)\n", "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]+1):\n                print(j)\n    if recited[-1] != 200:\n        print(200)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n# Read lines from stdin\nlines = [line.strip() for line in sys.stdin]\n\n# Parse input\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing numbers\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\n\nimport sys\n\n# Read lines from stdin.\nlines = [line.strip() for line in sys.stdin]\n\n# Parse input.\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing numbers.\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results.\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\nimport sys\n\ndef get_missing_numbers(n, recited):\n    \"\"\"\n    Find missing numbers.\n\n    :param n: number of numbers that should be recited\n    :param recited: list of numbers recited by the student\n    :return: list of missing numbers\n    \"\"\"\n    missing = []\n    for i in range(1, recited[-1] + 1):\n        if i not in recited:\n            missing.append(i)\n\n    return missing\n\n\ndef main():\n    # Read lines from stdin\n    lines = [line.strip() for line in sys.stdin]\n\n    # Parse input\n    n = int(lines[0])\n    recited = [int(line) for line in lines[1:]]\n\n    # Find missing numbers\n    missing = get_missing_numbers(n, recited)\n\n    # Print results\n    if len(missing) == 0:\n        print(\"good job\")\n    else:\n        for num in missing:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\nfor i in range(low, high+1):\n    print(i)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == list(numbers)[-1]:\n        print(\"good job\")\n    else:\n        for i in range(1,list(numbers)[-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = list(set(numbers))\n    if len(numbers) == numbers[len(numbers)-1]:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[len(numbers)-1]+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    for i in range(n):\n        if i == 0:\n            if recited[i] != 1:\n                print(1)\n        elif i == n-1:\n            if recited[i] != 200:\n                print(recited[i]+1)\n        else:\n            for j in range(recited[i-1]+1, recited[i]):\n                print(j)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    list = []\n    for x in range(n):\n        list.append(int(input()))\n\n    for x in range(1, list[n - 1] + 1):\n        if x not in list:\n            print(x)\n\n\nmain()\n", "\n\nimport sys\nlines = [line.strip() for line in sys.stdin]\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high + 1):\n    print(i)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == numbers[len(numbers) - 1]:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[len(numbers) - 1] + 1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1, l[-1]+1):\n    if i not in l:\n        print(i)\nelse:\n    print(\"good job\")\n", "\n\n# Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# print(\"hello world\")\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n\n\n# import sys\n\n# # Read lines from stdin\n# lines = [line.strip() for line in sys.stdin]\n\n# # Parse input\n# n = int(lines[0])\n# recited = [int(line) for line in lines[1:]]\n\n# # Find missing numbers\n# missing = []\n# for i in range(1, recited[-1] + 1):\n#     if i not in recited:\n#         missing.append(i)\n\n# # Print results\n# if len(missing) == 0:\n#     print(\"good job\")\n# else:\n#     for num in missing:\n#         print(num)\n", "\n\nn = int(input()) # the number of numbers\nrecited = [] # the numbers recited\n\nfor i in range(n):\n    recited.append(int(input())) # add the number to the list\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"good job\")\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == numbers[-1] + 1:\n        print(\"good job\")\n    else:\n        for i in range(1, numbers[-1] + 1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nrecited = []\nfor i in range(n):\n    recited.append(int(input()))\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\nif len(recited) == recited[-1]:\n    print(\"good job\")\n", "\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"good job\")\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = list(set(numbers))\n    if len(numbers) == numbers[-1]: # if the length of the unique numbers is equal to the max of the numbers\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1]+1): # if the length of the unique numbers is not equal to the max of the numbers\n            if i not in numbers:\n                print(i) # print the missing number\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"Good job\")\n", "\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = x\n        high = x + 1\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "\n\ndef main():\n    n = int(input())\n    recited = []\n    for _ in range(n):\n        recited.append(int(input()))\n    recited.sort()\n    if recited[0] != 1:\n        print(1)\n    for i in range(n-1):\n        if recited[i+1] - recited[i] != 1:\n            for j in range(recited[i]+1, recited[i+1]):\n                print(j)\n    if recited[-1] != 100:\n        print(recited[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n"]