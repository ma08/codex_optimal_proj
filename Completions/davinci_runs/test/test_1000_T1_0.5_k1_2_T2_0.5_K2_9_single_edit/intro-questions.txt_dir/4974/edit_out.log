2022-04-16 15:27:54.665446 num operations 1
2022-04-16 15:27:54.665455 size on input set 1
2022-04-16 15:28:03.342097 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution 1\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Get taken rooms\ntaken = []\nfor i in range(n):\n    taken.append(int(input()))\n\n# Check if there is a room available\nfor i in range(1, r + 1):\n    if i not in taken:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n\n\n# Solution 2\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        sys.stdout.write(str(i + 1))\n        break\nelse:\n    sys.stdout.write(\"too late\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution 1\n\n# Get input\nr, n = map(int, input().split())\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input())-1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i+1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 4,
      "text": "\n\n# Solution\n'''\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n'''\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 5,
      "text": "\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 6,
      "text": "\n\"\"\"\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n\"\"\"\n"
    },
    {
      "index": 7,
      "text": "# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 8,
      "text": "\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available, if not print too late\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n"
    }
  ],
  "created": 1650122874,
  "object": "edit"
}
2022-04-16 15:28:03.342380 fix syntax errors 9 ['\n\n# Solution 1\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Get taken rooms\ntaken = []\nfor i in range(n):\n    taken.append(int(input()))\n\n# Check if there is a room available\nfor i in range(1, r + 1):\n    if i not in taken:\n        print(i)\n        break\nelse:\n    print("too late")\n\n\n# Solution 2\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n', '\nimport sys\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        sys.stdout.write(str(i + 1))\n        break\nelse:\n    sys.stdout.write("too late")\n', '\n\n# Solution 1\n\n# Get input\nr, n = map(int, input().split())\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input())-1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i+1)\n        break\nelse:\n    print("too late")\n', '\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n', '\n\n# Solution\n\'\'\'\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n\'\'\'\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n', '\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n', '\n"""\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n"""\n', '# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n', '\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill with 0\'s\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available, if not print too late\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print("too late")\n']
2022-04-16 15:28:03.342501 size on output set 8
2022-04-16 15:28:03.342512 num operations 1
2022-04-16 15:28:03.342518 size on input set 1
2022-04-16 15:28:12.653192 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    r, n = map(int, input().split())  # r is the number of rooms and n is the number of booked rooms\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))  # add all the booked rooms to the set\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    r, n = map(str, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(str(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(1, n+1):\n        print(\"*\" * i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650122883,
  "object": "edit"
}
2022-04-16 15:28:12.653430 fix syntax errors 9 ['\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n\n    main()\n', '\n\ndef main():\n    r, n = map(int, input().split())  # r is the number of rooms and n is the number of booked rooms\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))  # add all the booked rooms to the set\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    r, n = map(str, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(str(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    for i in range(1, n+1):\n        print("*" * i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    r, n = map(int, raw_input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(raw_input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 15:28:12.653472 size on output set 6
2022-04-16 15:28:12.653482 num operations 1
2022-04-16 15:28:12.653487 size on input set 1
2022-04-16 15:28:20.554509 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split(' '))\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r + 1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    \n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    r, n = map(int, input().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(input()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650122892,
  "object": "edit"
}
2022-04-16 15:28:20.554799 fix syntax errors 9 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split(\' \'))\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r + 1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    \n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    r, n = map(int, input().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(input()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 15:28:20.554845 size on output set 7
2022-04-16 15:28:20.554855 num operations 1
2022-04-16 15:28:20.554860 size on input set 1
2022-04-16 15:29:01.671343 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor room in range(1, r+1):\n    if room not in booked:\n        print(room)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 1,
      "text": "\n\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked: \n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    },
    {
      "index": 3,
      "text": "\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 4,
      "text": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if a[i] + a[j] + a[k] <= m:\n                ans.append(a[i] + a[j] + a[k])\n\nprint(max(ans))\n"
    },
    {
      "index": 5,
      "text": "\n\n# input_line = input().split()\n# r = int(input_line[0])\n# n = int(input_line[1])\n\n# booked = set()\n# for i in range(n):\n#     booked.add(int(input()))\n\n# for i in range(1, r+1):\n#     if i not in booked:\n#         print(i)\n#         break\n# else:\n#     print(\"too late\")\n\n\n# print(input()[::-1])\n\n# print(int(input()) + int(input()[::-1]))\n\n# print(input().replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '').replace('y', ''))\n\n# print(int(input()) // int(input()))\n\n# print(int(input()) % int(input()))\n\n# print(input()[::2])\n\n# print(input()[1::2])\n\n# print(input()[::-1])\n\n# print(input().replace('1', 'one').replace('2', 'two').replace('3', 'three').replace('4', 'four').replace('5', 'five').replace('6', 'six').replace('7', 'seven').replace('8', 'eight').replace('9', 'nine'))\n\n# print(input().replace('H', '').replace('Q', '').replace('9', ''))\n\n# print(input().replace('.', '').replace(',', '').replace('!', '').replace('?', '').replace(':', '').replace(';', '').replace('(', '').replace(')', ''))\n\n# print(input().replace('.', '').replace(',', '').replace('!', '').replace('?', '').replace(':', '').replace(';', '').replace('(', '').replace(')', '').replace('-', '').replace('\\'', ''))\n\n# print(len(input()))\n\n# print(input().count('f'))\n\n# print(input().count('f', input().find('f') + 1))\n\n# print(input().replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H'))\n\n# print(input().replace('H', 'h'))\n\n# print(input().replace('H', 'h').replace('h', 'H'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H'))\n\n# print(input().replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H', 'h').replace('h', 'H').replace('H', 'h'))\n\n# print(input().replace('h', 'H').replace('H',\n"
    },
    {
      "index": 6,
      "text": "\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 7,
      "text": "\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 8,
      "text": "\nprint(input())\n"
    }
  ],
  "created": 1650122900,
  "object": "edit"
}
2022-04-16 15:29:01.671725 NO RESULT
2022-04-16 15:29:01.671740 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-16 15:29:01.671815 fix syntax errors 8 ['\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor room in range(1, r+1):\n    if room not in booked:\n        print(room)\n        break\nelse:\n    print("too late")\n', '\n\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked: \n        print(i)\n        break\nelse:\n    print("too late")\n', '\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if a[i] + a[j] + a[k] <= m:\n                ans.append(a[i] + a[j] + a[k])\n\nprint(max(ans))\n', '\n\n# input_line = input().split()\n# r = int(input_line[0])\n# n = int(input_line[1])\n\n# booked = set()\n# for i in range(n):\n#     booked.add(int(input()))\n\n# for i in range(1, r+1):\n#     if i not in booked:\n#         print(i)\n#         break\n# else:\n#     print("too late")\n\n\n# print(input()[::-1])\n\n# print(int(input()) + int(input()[::-1]))\n\n# print(input().replace(\'a\', \'\').replace(\'e\', \'\').replace(\'i\', \'\').replace(\'o\', \'\').replace(\'u\', \'\').replace(\'y\', \'\'))\n\n# print(int(input()) // int(input()))\n\n# print(int(input()) % int(input()))\n\n# print(input()[::2])\n\n# print(input()[1::2])\n\n# print(input()[::-1])\n\n# print(input().replace(\'1\', \'one\').replace(\'2\', \'two\').replace(\'3\', \'three\').replace(\'4\', \'four\').replace(\'5\', \'five\').replace(\'6\', \'six\').replace(\'7\', \'seven\').replace(\'8\', \'eight\').replace(\'9\', \'nine\'))\n\n# print(input().replace(\'H\', \'\').replace(\'Q\', \'\').replace(\'9\', \'\'))\n\n# print(input().replace(\'.\', \'\').replace(\',\', \'\').replace(\'!\', \'\').replace(\'?\', \'\').replace(\':\', \'\').replace(\';\', \'\').replace(\'(\', \'\').replace(\')\', \'\'))\n\n# print(input().replace(\'.\', \'\').replace(\',\', \'\').replace(\'!\', \'\').replace(\'?\', \'\').replace(\':\', \'\').replace(\';\', \'\').replace(\'(\', \'\').replace(\')\', \'\').replace(\'-\', \'\').replace(\'\\\'\', \'\'))\n\n# print(len(input()))\n\n# print(input().count(\'f\'))\n\n# print(input().count(\'f\', input().find(\'f\') + 1))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\'))\n\n# print(input().replace(\'H\', \'h\'))\n\n# print(input().replace(\'H\', \'h\').replace(\'h\', \'H\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\'))\n\n# print(input().replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\', \'h\').replace(\'h\', \'H\').replace(\'H\', \'h\'))\n\n# print(input().replace(\'h\', \'H\').replace(\'H\',\n', '\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\ninput_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nprint(input())\n']
2022-04-16 15:29:01.671912 size on output set 6
2022-04-16 15:29:01.671927 num operations 1
2022-04-16 15:29:01.671934 size on input set 1
2022-04-16 15:29:10.437761 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = [int(x) for x in input().split()]\nm = int(input())\nb = [int(x) for x in input().split()]\nfor i in b:\n    if i in a:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 2,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 3,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 4,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 5,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 6,
      "text": "r, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 7,
      "text": "\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r + 1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 8,
      "text": "\n\n\nn = int(input())\narr = list(map(int, input().split()))\n\narr.sort()\n\nprint(arr[n//2])\n"
    }
  ],
  "created": 1650122941,
  "object": "edit"
}
2022-04-16 15:29:10.438169 fix syntax errors 9 ['\n\nn = int(input())\na = [int(x) for x in input().split()]\nm = int(input())\nb = [int(x) for x in input().split()]\nfor i in b:\n    if i in a:\n        print("YES")\n    else:\n        print("NO")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', 'r, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = [int(x) for x in input().split()]\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))\nfor i in range(1, r + 1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\n\n\nn = int(input())\narr = list(map(int, input().split()))\n\narr.sort()\n\nprint(arr[n//2])\n']
2022-04-16 15:29:10.438335 size on output set 6
2022-04-16 15:29:10.438349 num operations 1
2022-04-16 15:29:10.438356 size on input set 1
2022-04-16 15:29:18.215880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()] # r is the number of rooms, n is the number of bookings\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\n# Solution\n\n    # r : number of rooms\n    # n : number of booked rooms\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n# Solution \n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n#\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\n# Solution 1\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n\n\n# Solution 2\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650122950,
  "object": "edit"
}
2022-04-16 15:29:18.216178 fix syntax errors 9 ['\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()] # r is the number of rooms, n is the number of bookings\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n', '#!/usr/bin/env python3\n\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\n# Solution\n\n    # r : number of rooms\n    # n : number of booked rooms\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution \n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n#\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution 1\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n\n\n# Solution 2\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print("too late")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 15:29:18.216362 size on output set 8
2022-04-16 15:29:18.216377 num operations 1
2022-04-16 15:29:18.216383 size on input set 1
2022-04-16 15:30:01.851335 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nimport sys\n\n#%%\n# sys.stdin.read()\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys.stdin.read(), end=\"\")\n\n#%%\nprint(sys\n"
    },
    {
      "index": 1,
      "text": "\n\n\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 2,
      "text": "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\ndef room():\n    r,n = map(int, input().split())\n    rooms = set(range(1,r+1))\n    booked = set(map(int, [input() for _ in range(n)]))\n    rooms = rooms - booked\n    if len(rooms) > 0:\n        print(min(rooms))\n    else:\n        print(\"too late\")\nroom()\n"
    },
    {
      "index": 3,
      "text": "\n\n# %%\nr,n = map(int, input().split())\nrooms = set(range(1, r + 1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n# %%\nr,n = map(int, input().split())\nrooms = set(range(1, r + 1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 4,
      "text": "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nn,m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        print(a[i][j] + b[i][j], end = ' ')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = ' ')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = ' ')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = ' ')\n    print()\n"
    },
    {
      "index": 5,
      "text": "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nr, n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 6,
      "text": "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 7,
      "text": "\n\n#%%\nimport math\nn, r = map(int, input().split())\nif n>=10:\n    print(r)\nelse: print(r+100*(10-n))\n\n#%%\nn, r = map(int, input().split())\nif n>=10:\n    print(r)\nelse: print(r+100*(10-n))\n"
    },
    {
      "index": 8,
      "text": "\n\n# #%%\n# r,n = map(int, input().split())\n# rooms = set(range(1,r+1))\n# booked = set(map(int, [input() for _ in range(n)]))\n# rooms = rooms - booked\n# if len(rooms) > 0:\n#     print(min(rooms))\n# else:\n#     print(\"too late\")\n#\n# #%%\n# r,n = map(int, input().split())\n# rooms = set(range(1,r+1))\n# booked = set(map(int, [input() for _ in range(n)]))\n# rooms = rooms - booked\n# if len(rooms) > 0:\n#     print(min(rooms))\n# else:\n#     print(\"too late\")\n"
    }
  ],
  "created": 1650122958,
  "object": "edit"
}
2022-04-16 15:30:01.851757 fix syntax errors 9 ['\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n#%%\nimport sys\n\n#%%\n# sys.stdin.read()\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys.stdin.read(), end="")\n\n#%%\nprint(sys\n', '\n\n\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n', '\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n#%%\ndef room():\n    r,n = map(int, input().split())\n    rooms = set(range(1,r+1))\n    booked = set(map(int, [input() for _ in range(n)]))\n    rooms = rooms - booked\n    if len(rooms) > 0:\n        print(min(rooms))\n    else:\n        print("too late")\nroom()\n', '\n\n# %%\nr,n = map(int, input().split())\nrooms = set(range(1, r + 1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n# %%\nr,n = map(int, input().split())\nrooms = set(range(1, r + 1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n', '\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n#%%\nn,m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        print(a[i][j] + b[i][j], end = \' \')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = \' \')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = \' \')\n    print()\n\n#%%\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [list(map(int, input().split())) for _ in range(n)]\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j] + b[i][j], end = \' \')\n    print()\n', '\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n\n#%%\nr, n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n', '\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print("too late")\n', '\n\n#%%\nimport math\nn, r = map(int, input().split())\nif n>=10:\n    print(r)\nelse: print(r+100*(10-n))\n\n#%%\nn, r = map(int, input().split())\nif n>=10:\n    print(r)\nelse: print(r+100*(10-n))\n', '\n\n# #%%\n# r,n = map(int, input().split())\n# rooms = set(range(1,r+1))\n# booked = set(map(int, [input() for _ in range(n)]))\n# rooms = rooms - booked\n# if len(rooms) > 0:\n#     print(min(rooms))\n# else:\n#     print("too late")\n#\n# #%%\n# r,n = map(int, input().split())\n# rooms = set(range(1,r+1))\n# booked = set(map(int, [input() for _ in range(n)]))\n# rooms = rooms - booked\n# if len(rooms) > 0:\n#     print(min(rooms))\n# else:\n#     print("too late")\n']
2022-04-16 15:30:01.851879 size on output set 9
2022-04-16 15:30:01.851895 num operations 1
2022-04-16 15:30:01.851923 size on input set 1
2022-04-16 15:30:13.111456 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nk = int(input())\n\nfor i in range(n):\n    if a[i][k] == 1:\n        print(*a[i])\n"
    },
    {
      "index": 2,
      "text": "\nr, n = map(int, input().split())\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 3,
      "text": "\nr, n = map(int, input().split())\n\nif n != r:\n    for i in range(1, r+1):\n        if i not in map(int, input().split()):\n            print(i)\n            break\n    else:\n        print(\"too late\")\nelse:\n    print(input())\n"
    },
    {
      "index": 4,
      "text": "\na = []\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    a = map(int, input().split())\n    if i not in a:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 5,
      "text": "\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 6,
      "text": "\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 7,
      "text": "\n\nr, n = map(int, input().split()) # r: range, n: size of array\n\nfor i in range(1, r+1): # i: index\n    if i not in map(int, input().split()): # if i is not in array\n        print(i) # print i\n        break # stop the loop\nelse:\n    print(\"too late\")\n"
    },
    {
      "index": 8,
      "text": "\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n"
    }
  ],
  "created": 1650123001,
  "object": "edit"
}
2022-04-16 15:30:13.111759 fix syntax errors 9 ['\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print("too late")\n', '\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nk = int(input())\n\nfor i in range(n):\n    if a[i][k] == 1:\n        print(*a[i])\n', '\nr, n = map(int, input().split())\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = map(int, input().split())\n\nif n != r:\n    for i in range(1, r+1):\n        if i not in map(int, input().split()):\n            print(i)\n            break\n    else:\n        print("too late")\nelse:\n    print(input())\n', '\na = []\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    a = map(int, input().split())\n    if i not in a:\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print("too late")\n', '\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print("too late")\n', '\n\nr, n = map(int, input().split()) # r: range, n: size of array\n\nfor i in range(1, r+1): # i: index\n    if i not in map(int, input().split()): # if i is not in array\n        print(i) # print i\n        break # stop the loop\nelse:\n    print("too late")\n', '\nr, n = map(int, input().split())\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print("too late")\n']
2022-04-16 15:30:13.111802 size on output set 6
