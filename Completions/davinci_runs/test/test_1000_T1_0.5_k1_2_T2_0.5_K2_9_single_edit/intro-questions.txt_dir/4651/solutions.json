["q = int(input())\nfor qi in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    used = [False] * n\n    for t in range(n):\n        for i in range(len(a) - 1, 0, -1):\n            if used[i]:\n                continue\n            if a[i] < a[i - 1]:\n                a[i], a[i - 1] = a[i - 1], a[i]\n                used[i] = True\n    print(' '.join(str(x) for x in a))", "q=int(input())\nfor t in range(q):\n    n=int(input())\n    a=list(map(int,input().split()))\n    used=[0]*n\n    for i in range(1,n+1):\n        ind=a.index(i)\n        while ind>0 and used[ind-1]==0 and a[ind-1]>i:\n            s=a[ind-1]\n            a[ind]=s\n            a[ind-1]=i\n            used[ind-1]=1\n            ind-=1\n    print(*a)\n", "q=int(input())\nfor i in range(q):\n    w=int(input())\n    e=list(map(int,input().split()))\n    r=[1]*w\n    for k in range(1,w+1):\n        t=e.index(k)\n        while t>0 and r[t-1] and e[t]<e[t-1]:\n            if r[t-1]:\n                e[t-1],e[t]=e[t],e[t-1]\n                r[t-1]=0\n            t-=1\n    print(*e)", "import sys\ninput = sys.stdin.readline\n\nq=int(input())\n\ndef sortper(begin):\n    x=A.index(min(A[begin:]))\n\n    return x,A[:begin]+[A[x]]+A[begin:x]+A[x+1:]\n    \n\nfor testcases in range(q):\n    n=int(input())\n    A=list(map(int,input().split()))\n\n    begin=0\n\n    while begin<n-1:\n        nbegin,A=sortper(begin)\n\n        if begin==nbegin:\n            begin+=1\n        else:\n            begin=nbegin\n\n        #print(begin,\" \",*A)\n    print(*A)\n\n    \n", "t=int(input())\nfor tt in range(t):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tvisited=[0]*(n)\n\tindex=[0]*(n+1)\n\tfor i in range(1,n+1):\n\t\tindex[i]=arr.index(i)\n\t# while 1:\n\tfor i in range(1,n+1):\n\t\tfor j in range(index[i],0,-1):\n\t\t\tif visited[j]==0 and arr[j-1]>arr[j]:\n\t\t\t\ttemp=arr[j]\n\t\t\t\tarr[j]=arr[j-1]\n\t\t\t\tarr[j-1]=temp\n\t\t\t\tvisited[j]+=1\n\t\t\t\t# flag=True\n\tfor i in arr:\n\t\tprint(i,end=\" \")\n\tprint()", "for _ in range(int(input())):\n    n=int(input())\n    l=[int(i) for i in input().split()]\n    k=n-1 \n    i=0 \n    while i<n:\n        mini=l[i]\n        ind=-1 \n        j=i+1 \n        while j<min(n,i+k+1): \n            if l[j]<mini:\n                mini=l[j]\n                ind=j\n            j+=1 \n        if ind==-1:\n            i+=1 ;\n            continue \n        #print(ind)\n        temp=ind \n        while ind>i and k!=0:\n            #print('ef')\n            l[ind],l[ind-1]=l[ind-1],l[ind]\n           # print(l)\n            ind-=1 \n            k-=1 \n        i=temp \n    print(*l)", "import io, sys, atexit, os\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li ():\n\treturn list (map (int, sys.stdin.readline ().split ()))\n\n\ndef num ():\n\treturn map (int, sys.stdin.readline ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\ndef lcm ( x, y ):\n\tgg = find_gcd (x, y)\n\treturn (x * y // gg)\n\n\nmm = 1000000007\n\n\ndef solve ():\n\tt = nu()\n\tfor tt in range (t):\n\t\tn=nu()\n\t\ta=li()\n\t\tb=[0]*n\n\t\tfor i in range(1,n+1):\n\t\t\tind=-1\n\t\t\tfor j in range(n):\n\t\t\t\tif(a[j]==i):\n\t\t\t\t\tind=j\n\t\t\t\t\tbreak\n\t\t\twhile(ind>0):\n\t\t\t\toz=ind-1\n\t\t\t\tif(b[oz]==1):\n\t\t\t\t\tbreak\n\t\t\t\tif(a[oz]<a[ind]):\n\t\t\t\t\tbreak\n\t\t\t\tb[oz]=1\n\t\t\t\ta[oz],a[ind]=a[ind],a[oz]\n\t\t\t\tind-=1\n\t\tprint(*a)\n\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n\n\tn = int(stdin.readline())\n\tarr = [int(x) for x in stdin.readline().split()]\n\n\tflags = [0]*n\n\n\tany = True\n\n\twhile any==True:\n\n\t\tany = False\n\n\t\tfor i in range(n-1,0,-1):\n\n\t\t\tif arr[i-1]>arr[i] and flags[i-1]==0:\n\t\t\t\t\tany = True\n\t\t\t\t\tflags[i-1] = 1\n\t\t\t\t\tarr[i-1],arr[i] = arr[i],arr[i-1]\n\n\tfor i in arr: print(i,end=\" \")\n\tprint()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = [0]*(n-1)\n\n    for i in range(n-2,-1,-1):\n        if arr[i]>arr[i+1]:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n            brr[i] = 1\n\n    for i in range(n-1):\n        if arr[i]>arr[i+1] and brr[i]==0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n            brr[i] = 1\n    print(*arr)            \n            \n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn = mint()\n\ta = list(mints())\n\tb = [True]*n\n\tfor i in range(n-1):\n\t\tj = i + 1\n\t\tz = (a[i],i)\n\t\twhile j < n and b[j-1]:\n\t\t\tz = min(z, (a[j], j))\n\t\t\tj += 1\n\t\tif z[0] < a[i]:\n\t\t\tj = z[1] - 1\n\t\t\twhile j >= i:\n\t\t\t\ta[j], a[j+1] = a[j+1], a[j]\n\t\t\t\tb[j] = False\n\t\t\t\tj -= 1\n\tprint(*a)\n\n\nfor i in range(mint()):\n\tsolve()\n", "q = int(input())\nfor __ in [0]*q:\n    n = int(input())\n    a = list(map(int,input().split()))\n    idx = [-1]*(n+1)\n    for i,e in enumerate(a):\n        idx[e] = i\n\n    res = []\n    k = -1\n    for i,e in enumerate(idx):\n        if e == -1:\n           continue\n        if e > k:\n            res.append(i)\n            if i != 1:\n                if res[-1] < res[-2]:\n                    res[-1],res[-2] = res[-2],res[-1]\n            for i in range(k+1,e):\n                res.append(a[i])\n            k = e\n    for e in res:\n        if e != res[-1]:\n            print(e,end = ' ')\n        else:\n            print(e)", "import sys\n\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = get_array()\n        d = {}\n\n        def solve(i):\n            idx = 0\n            for j in range(n):\n                if arr[j] == i:\n                    idx = j\n                    break\n            p = idx\n            for j in range(idx - 1, -1, -1):\n                if p in d:\n                    break\n                if arr[j] < arr[p]:\n                    break\n                arr[p], arr[j] = arr[j], arr[p]\n                d[p] = 1\n                p -= 1\n\n        for i in range(1, n + 1):\n            solve(i)\n        print(*arr)\n\n\ninput = lambda: sys.stdin.readline().strip()\nget_ints = lambda: list(map(int, input().split()))\nget_array = lambda: list(map(int, input().split()))\nmain()\n", "ct = int(input())\nfor c in range(ct):\n    n = int(input())\n    li = [int(i) for i in input().split()]\n\n    op = [0 for i in range(n)]\n    for i in range(1, n+1):\n        pos = li.index(i)\n        for j in range(pos-1, -1, -1):\n            if op[j] == 0 and li[j] > li[j+1]:\n                op[j] = 1\n                li[j], li[j+1] = li[j+1], li[j]\n            else:\n                break\n    # print(op)\n    print(*li)\n", "for _ in range(int(input())):\n    n=int(input())\n    l1=list(map(int,input().split()))\n    stack=[]\n    marked={}\n    i=0\n    j=1\n    result=[]\n    while j<=n:\n        if j not in marked:\n            stack=[]\n            result.append(j)\n            while l1[i]!=j:\n                marked[l1[i]]=1\n                stack.append(l1[i])\n                i+=1\n            marked[j]=1\n\n            if stack:\n                l1[i]=stack[-1]\n                del marked[stack[-1]]\n                result.extend(stack[:len(stack)-1])\n            else :\n                i+=1\n        j+=1\n    print(*result,sep=\" \")\n            ", "q=int(input())\nwhile(q):\n    q-=1\n    n=int(input())\n    *a,=map(int,input().split())\n    u=[False for i in range(n+1)]\n    u[0]=True\n    for i in range(1,n+1):\n        for j in range(n):\n            if a[j]==i:\n                x=j\n                while not u[x] and a[x]<a[x-1]:\n                    a[x],a[x-1]=a[x-1],a[x]\n                    u[x]=True\n                    x -= 1\n    print(*a)", "import sys\ninput=sys.stdin.readline\ny=int(input())\nfor i in range(y):\n\tn=int(input())\n\tarr=list(map(int,input().split())) \n\ta=0\n\tvisited=[0]*n\n\t\n\tfor j in range(n):\n\t\tfor k in range(n-1,0,-1):\n\t\t\tif(visited[k-1]==0 and arr[k-1]>arr[k]):\n\t\t\t\tvisited[k-1]=1\n\t\t\t\ttemp=arr[k-1]\n\t\t\t\tarr[k-1]=arr[k]\n\t\t\t\tarr[k]=temp\n\n\ts=\"\"\n\tfor j in arr:\n\t\ts=s+str(j)+\" \"\n\ts=s[:-1]\n\tprint(s)", "def doit(lst):\n   # print(lst)\n    n = len(lst)\n    if(n<=1):\n        return(lst)\n    index = lst.index(min(lst))\n    if(index==0):\n        l = doit(lst[1:])\n        return([lst[0]]+l)\n    temp = [lst[index-1]]+lst[index+1:]\n    \n    return([lst[index]] + lst[:index-1]+doit(temp))\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(*doit(lst))\n    \n    \n", "def f(a, l):\n    m = a[l]\n    mi = l\n    for i in range(l, len(a)):\n        if a[i] < m:\n            m = a[i]\n            mi = i\n\n    for i in range(mi, l, -1):\n        a[i] = a[i - 1]\n    a[l] = m\n    return mi if mi != l else mi + 1\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mi = 0\n    while mi < n:\n        mi = f(a, mi)\n    print(*a)\n", "q = int(input())\nres = []\nfor _ in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    for m in range(1, n+1):\n        i = a.index(m)\n        if i <= l:\n            continue\n        for j in range(i-1, l-1, -1):\n            if a[j] < a[j+1]:\n                break\n            a[j], a[j+1] = a[j+1], a[j]\n        l = i\n\n    res.append(' '.join(map(str, a)))\n\nprint(*res, sep='\\n')", "t = int(input())\nanswer = []\n\ndef mini(arr):\n    minimum = arr[0]\n    index = 0\n    for i in range (1, len(arr)):\n        if minimum > arr[i]:\n            minimum = arr[i]\n            index = i\n    return index\n\nfor i in range (t):\n    n = int(input())\n    p = list(map(int,input().split()))\n    ans = []\n    \n    while len(p) > 1:\n        index = mini(p)\n        ans.append(p[index])\n        for k in range (index - 1):\n            ans.append(p[k])\n        p = p[index-1 : index] + p[index + 1:]\n    if len(p) == 1:\n        ans.append(p[0])\n    answer.append(ans)\nfor i in range (t):\n    print (*answer[i], sep = \" \")", "t = int(input())\nwhile(t > 0):\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    bol = [True for i in range(n)]\n    flag = True\n    while(flag):\n        flag = False\n        for i in range(n-1):\n            if(arr[n-i-1] < arr[n-i-2] and bol[n-i-1]):\n                bol[n-i-1] = False\n                tmp = arr[n-i-1]\n                arr[n-i-1] = arr[n-i-2]\n                arr[n-i-2] = tmp\n                flag = True\n    for x in range(n):\n        if(x > 0):print(\" \",end=\"\")\n        print(arr[x],end=\"\")\n    print()", "def optimize(arr, idx):\n    if idx >= len(arr):\n        return\n    min_idx = -1\n    min_val = 1e9\n    for i in range(idx, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_idx = i\n\n    \n\n    for i in range(min_idx-1, idx-1,-1):\n        tmp=arr[i]\n        arr[i]=arr[i+1]\n        arr[i+1]=tmp\n    \n    if min_idx == idx:\n        min_idx += 1        \n    optimize(arr,min_idx)\n\nq=int(input())\nfor t in range(q):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    optimize(a,0)\n    print(*a)\n", "for _ in range(int(input())):\n    n = int(input())\n    *a, = map(int, input().split())\n    ans, i = [], 0\n    while a:\n        m = min(a)\n        x = a.index(m)\n        ans.append(m)\n        if x == 0:\n            a.remove(m)\n            continue\n        ans += a[:x - 1]\n        a = a[x - 1:]\n        if m in a:\n            a.remove(m)\n        \n    print(*ans)"]