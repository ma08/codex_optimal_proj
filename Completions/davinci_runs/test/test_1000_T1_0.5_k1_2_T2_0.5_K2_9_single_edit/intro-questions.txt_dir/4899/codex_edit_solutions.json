["\ndef main():\n    greeting = input().strip()\n    new_greeting = greeting.replace('e', 'ee', 1)\n    print(new_greeting)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read in the input.\n    s = input(\"Enter a string: \")\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(\"The output is: \", out)\n\nmain()\n", "\n\ndef main():\n    # Read in the input.\n    s = raw_input()\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(out)\n\nmain()\n", "\n\nprint(input().replace(\"ey\", \"eey\"), end=\"\")\n", "\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nprint(input().replace(\"ey\", \"eey\"))\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies')\n    else:\n        print(s + 's')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'e'*len(s))\n    else:\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"y\", \"ey\"))\n", "\n\n\ndef main():\n    greeting = input(\"greeting: \").strip()\n    new_greeting = greeting.replace('e', 'ee', 1) # replace the first 'e' with 'ee'\n    print(new_greeting) # print the result\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\") - 1) + s[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"eY\", \"eeY\"))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    # Read in the input.\n    s = input()\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(out)\n\nmain()\n", "\n\ndef double_e(s):\n    if s[0] == 'h' and s[1] == 'e' and s[-1] == 'y':\n        return s[0] + s[1] + s[1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\nprint(\"he\"+(\"e\"*len(input()))+\"y\") \n", "print(input().replace(\"ey\", \"eey\"))\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies')\n    elif s[-1] == 'o' or s[-1] == 's' or s[-1] == 'x':\n        print(s + 'es')\n    elif s[-2:] == 'ch' or s[-2:] == 'sh':\n        print(s + 'es')\n    else:\n        print(s + 's')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies')\n    else:\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(input().replace(\"ey\", \"eey\")) \n", "print(input().replace(\"ey\", \"eey\")\n", "#\n#  File:\n#    file.py\n#\n#  Synopsis:\n#    Illustrates how to read and write a file.\n#\n#  Categories:\n#    file input/output\n#\n#  Author:\n#    Fred Clare (based on an original example by Karin Meier-Fleischer)\n#  \n#  Date of initial publication:\n#    November, 2005\n#\n#  Description:\n#    This example shows how to read and write a file.\n#\n#  Effects illustrated:\n#    o  Reading a file.\n#    o  Writing a file.\n# \n#  Output:\n#    This example produces two files, one containing the original\n#    data and one containing the modified data.\n#\n#  Notes:\n#     \n\nimport Ngl\n\n\ndef main():\n\n#--  Open the input file.\n  r = open(\"file.in\",\"r\")\n\n#--  Read the input file and store the data in a list.\n  in_data = []\n  for line in r.readlines():\n    in_data.append(line.split())\n\n#--  Close the input file.\n  r.close()\n\n#--  Print the original data.\n  print(\"Original data:\")\n  for i in range(len(in_data)):\n    print(in_data[i])\n\n#--  Modify the data.\n  out_data = []\n  for i in range(len(in_data)):\n    out_data.append(in_data[i]*2)\n\n#--  Print the modified data.\n  print(\"Modified data:\")\n  for i in range(len(out_data)):\n    print(out_data[i])\n\n#--  Open the output file.\n  w = open(\"file.out\",\"w\")\n\n#--  Write the modified data to the output file.\n  for i in range(len(out_data)):\n    for j in range(len(out_data[i])):\n      w.write(str(out_data[i][j])+\" \")\n    w.write(\"\\n\")\n\n#--  Close the output file.\n  w.close()\n\nmain()\n", "\n\ndef main():\n    # read in the input\n    s = input()\n    # create the output\n    out = \"\"\n    # loop through the input string\n    for i in range(len(s)):\n        # if the current character is an 'e', add two of them\n        if s[i] == 'e':\n            out += \"ee\"\n        # otherwise, add the character\n        else:\n            out += s[i]\n    # print the output\n    print(out)\n\nmain()\n", "\n\n\ndef main():\n    # Read in the input.\n    s = input(\"Enter a string: \")\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(out)\n\n\nmain()\n", "import sys\n\ndef main():\n    s = sys.stdin.readline()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies')\n    elif s[-1] == 'o' or s[-1] == 's' or s[-1] == 'x':\n        print(s + 'es')\n    elif s[-2:] == 'ch':\n        print(s + 'es')\n    elif s[-2:] == 'sh':\n        print(s + 'es')\n    else:\n        print(s + 's')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-1:])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read in the input.\n    s = input(\"enter a string\")\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(out)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (len(s) > 1):\n        return s[0] + s[1] + s[1] + s[2:-1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\n\ndef main():\n    greeting = input().strip() # strip() removes spaces\n    new_greeting = greeting.replace('e', 'ee', 1) #replace the first 'e' with 'ee'\n    print(new_greeting) #print the new greeting\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(input().replace(\"ey\", \"eey\")) #replace ey with eey\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (s[-2] == 'l'):\n        return s[0] + s[1] + s[1] + s[-2] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\n\ndef main():\n    greeting = input().strip()\n    new_greeting = greeting.replace('e', 'ee', 1)\n    print(new_greeting)\n\n\n\nif __name__ == '__main__':\n    main()\n", "\nprint(input().replace(\"ey\", \"eey\")\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\" * (2 * s.count(\"e\") - 1) + s[-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    s = input()\n    if s[-2] == 'e':\n        print(s[:-2])\n    else:\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\", end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read in the input.\n    s = \"test\"\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them.\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print(out)\n\nmain()\n", "\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y'):\n        return s[0] + s[1] + s[1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\ndef main():\n    n = int(input())\n    s = input().split()\n    for i in range(n):\n        s[i] = int(s[i])\n    print(sum(s))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y' and len(s) > 1:\n        print(s[:-1] + 'ies')\n    elif s[-1] == 'o' or s[-1] == 's' or s[-1] == 'x' or s[-1] == 'z':\n        print(s + 'es')\n    elif s[-2:] == 'ch' or s[-2:] == 'sh':\n        print(s + 'es')\n    elif s[-1] == 'f' or s[-2:] == 'fe':\n        print(s[:-1] + 'ves')\n    else:\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-1]\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\")\n\nif __name__ == \"__main__\":\n\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\" * count + \"y\")\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\n\ndef main():\n    greeting = input().strip()\n    new_greeting = greeting.replace('e', 'ee', 1)\n    print(new_greeting)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    greeting = input().strip()  # strip removes leading and trailing whitespace\n    new_greeting = greeting.replace('e', 'ee', 1)\n    print(new_greeting)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(\"he\" + (\"e\" * len(input())) + \"y\")\n", "\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print('h' + 'e'*count + 'y')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y'):\n        return s[0] + s[1] + s[1] + s[2:]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\n\ndef main():\n    greeting = input(\"Enter a string: \").strip()\n    new_greeting = greeting.replace('e', 'ee', 1)\n    print(new_greeting)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (s[-2] == 'l'):\n        return s[0] + s[1] + s[1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\ndef main():\n    greeting = input('Enter a greeting: ').strip()\n    print(greeting.replace('e', 'ee', 1))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(\"he\"+(\"e\"*len(input())+\"y\"))\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + s[2:].replace(\"e\", \"ee\") + s[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and len(s) > 2:\n        return s[0] + s[1] + s[1] + s[2:]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n"]