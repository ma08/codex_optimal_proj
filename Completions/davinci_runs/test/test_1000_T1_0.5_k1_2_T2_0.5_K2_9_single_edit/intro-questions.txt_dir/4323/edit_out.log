2022-04-16 06:33:13.716540 num operations 1
2022-04-16 06:33:13.716556 size on input set 1
2022-04-16 06:33:22.549350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m and i != n - 1:\n            continue\n        else:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i, song in enumerate(songs):\n        if song > 0:\n            total += song\n            if total <= m:\n                return i + 1\n    return n\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(float, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(float, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(int(n)):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 7,
      "text": "\n    \"\"\"\n    This is the main function.\n    \"\"\"\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == \"__main__\":\n    print(main())\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    print(main())\n"
    }
  ],
  "created": 1650090793,
  "object": "edit"
}
2022-04-16 06:33:22.549617 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m and i != n - 1:\n            continue\n        else:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i, song in enumerate(songs):\n        if song > 0:\n            total += song\n            if total <= m:\n                return i + 1\n    return n\n\nif __name__ == "__main__":\n    print(main())\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == "__main__":\n    print(main())\n', 'import sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\n\nif __name__ == "__main__":\n    print(main())\n', 'import sys\n\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\n\nimport sys\n\ndef main():\n    n, m = map(float, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(float, input().split())\n        songs.append(a - b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(int(n)):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\n    """\n    This is the main function.\n    """\ndef main():\n    n, m = map(int, input().split())\n    songs = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        songs.append(a-b)\n    songs = sorted(songs, reverse=True)\n    total = 0\n    for i in range(n):\n        total += songs[i]\n        if total <= m:\n            return i + 1\n    return -1\n\nif __name__ == "__main__":\n    print(main())\n', '\n\nimport sys\n\n\ndef main():\n    pass\n\n\nif __name__ == "__main__":\n    print(main())\n']
2022-04-16 06:33:22.549669 size on output set 8
2022-04-16 06:33:22.549679 num operations 1
2022-04-16 06:33:22.549684 size on input set 1
2022-04-16 06:33:31.865652 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    if sum(a) <= m:\n        print(0)\n    elif sum(b) > m:\n        print(-1)\n    else:\n        i = 0\n        while sum(a) > m:\n            a[i] = b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a_list = []\n    b_list = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a_list.append(a_i)\n        b_list.append(b_i)\n    # a_list.sort()\n    # b_list.sort()\n    a_sum = sum(a_list)\n    b_sum = sum(b_list)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a_list[i]-b_list[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    \"\"\"\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    \"\"\"\n    n, m = [int(i) for i in raw_input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in raw_input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650090802,
  "object": "edit"
}
2022-04-16 06:33:31.865995 fix syntax errors 9 ['\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    if sum(a) <= m:\n        print(0)\n    elif sum(b) > m:\n        print(-1)\n    else:\n        i = 0\n        while sum(a) > m:\n            a[i] = b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a_list = []\n    b_list = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a_list.append(a_i)\n        b_list.append(b_i)\n    # a_list.sort()\n    # b_list.sort()\n    a_sum = sum(a_list)\n    b_sum = sum(b_list)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a_list[i]-b_list[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    a.sort()\n    b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This program is used to find the minimum number of songs to compress so that they all fit on a flash drive.\n    """\n    n, m = [int(i) for i in raw_input().split()]\n    a = []\n    b = []\n    for _ in range(n):\n        a_i, b_i = [int(i) for i in raw_input().split()]\n        a.append(a_i)\n        b.append(b_i)\n    # a.sort()\n    # b.sort()\n    a_sum = sum(a)\n    b_sum = sum(b)\n    if a_sum <= m:\n        print(0)\n    elif b_sum > m:\n        print(-1)\n    else:\n        i = 0\n        while a_sum > m:\n            a_sum -= a[i]-b[i]\n            i += 1\n        print(i)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 06:33:31.866066 size on output set 5
