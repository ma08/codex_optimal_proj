

# coding: utf-8
# しりとり
# 
# シリトリプログラムを作成してください。
# 
# 入力された文字列がしりとりできるか判定し、できる場合はその後の文字列を出力してください。
# 
# しりとりとは、
# 
# 最初は自分が好きな言葉を発言する。
# 次の人は最初の人の最後の文字に続く言葉を発言する。
# そして、その文字に続く言葉を発言できる人が居れば、その人が発言していきます。
# これを繰り返す。
# しかし、その文字に続く言葉を発言できる人が居なかった場合、負けとなります。
# 
# 例えば、
# 
# S="cat"
# T="dog"
# とした場合、
# 
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"g"なので、Sの最初の文字は"g"で始まる必要があります。
# Sは"g"で始まる言葉が存在するので、負けではありません。
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"g"なので、Sの最初の文字は"g"で始まる必要があります。
# Sは"g"で始まる言葉が存在しないので、負けとなります。
# 
# S="cat"
# T="god"
# とした場合、
# 
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"d"なので、Sの最初の文字は"d"で始まる必要があります。
# Sは"d"で始まる言葉が存在するので、負けではありません。
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"d"なので、Sの最初の文字は"d"で始まる必要があります。
# Sは"d"で始まる言葉が存在しないので、負けとなります。
# 
# S="cat"
# T="doggy"
# とした場合、
# 
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"y"なので、Sの最初の文字は"y"で始まる必要があります。
# Sは"y"で始まる言葉が存在しないので、負けとなります。
# 
# また、
# 
# S="cat"
# T="doggy"
# とした場合、
# 
# Sの最後の文字は"t"なので、Tの最初の文字は"t"で始まる必要があります。
# Tは"t"で始まる言葉が存在するので、負けではありません。
# Tの最後の文字は"y"なので、Sの最初の文字は"y"で始まる必要があります。
# Sは"y"で始まる言葉が存在しないので、負けとなります。
# 
# 
# 
# 入力される値
# 入力は以下のフォーマットで与えられます。
# 
# S
# T
# 
# S
# は自分が発言する言葉を、T
# は相手が発言する言葉を空白区切りで与えられます。
# 
# S
# とT
# はそれぞれ1文字以上10文字以下です。
# 
# それぞれの文字列は漢字、ひらがな、カタカナ、アルファベット、数字、記号（.や-,_など）で構成されています。
# 
# 入力値最終行の末尾に改行が１つ入ります。
# 文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認くだ
S = input()
T = input()
print(T+S)
