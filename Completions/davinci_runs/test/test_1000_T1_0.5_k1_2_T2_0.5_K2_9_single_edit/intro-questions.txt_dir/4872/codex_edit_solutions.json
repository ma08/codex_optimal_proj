["#!/usr/bin/python3\n\n\nprint(\"Hello World\")\n", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tdays = [int(x) for x in sys.stdin.readline().split()]\n\tdays.append(366)\n\tcurr_day = 1\n\tcleanups = 0\n\tfor i in range(n):\n\t\twhile days[i] >= curr_day:\n\t\t\tif days[i] - curr_day > 20:\n\t\t\t\tcleanups += 1\n\t\t\t\tcurr_day = days[i] + 1\n\t\t\telse:\n\t\t\t\tcurr_day = days[i] + 1\n\t\t\t\tbreak\n\tprint(cleanups)\nif __name__ == \"__main__\":\n\tmain()\n", "\nn = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness_level = 0\n\nfor day in days:\n    dirtiness_level += day\n    if dirtiness_level >= 20:\n        cleanups += 1\n        dirtiness_level = 0\n\nprint(cleanups)\n", "\nimport sys, heapq\ndef main():\n    n = int(sys.stdin.readline())\n    tasks = []\n    for i in range(n):\n        a, b = [int(x) for x in sys.stdin.readline().split()]\n        heapq.heappush(tasks, (a, b))\n    current_time = 0\n    total_time = 0\n    while tasks:\n        task = heapq.heappop(tasks)\n        task_time = task[0]\n        task_value = task[1]\n        if current_time + task_time <= total_time:\n            current_time += task_time\n            total_time += task_value\n        else:\n            current_time = total_time + task_time\n            total_time += task_value\n    print(total_time)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\npushes = list(map(int, input().split()))\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367 + 1):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:  # If the next distance is more than 20m\n            cleanups += 1\n            i += 1\n        elif i == n-1:  # If you are at the last index\n            cleanups += 1\n            i += 1\n        else:  # If the next distance is less than 20m\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    #print(n)\n    #print(dirty_pushes)\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()][:n]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += (d[i] - 1)\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(365)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirtyPushes = [int(x) for x in sys.stdin.readline().split()] # list comprehension\n    totalDirtiness = 0\n    cleanupPhases = 0\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\n\nprint(cleanups)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    if n > 0 and n < 366:\n        dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n        #print(n)\n        #print(dirty_pushes)\n        current_dirtiness = 0\n        cleanup_counter = 0\n        for day in range(1, 366):\n            if day in dirty_pushes:\n                current_dirtiness += (day - dirty_pushes.index(day))\n            else:\n                current_dirtiness += 1\n            if current_dirtiness >= 20:\n                cleanup_counter += 1\n                current_dirtiness = 0\n        print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\nprint('hello world')\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    # print(n)\n    # print(dirty_pushes)\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "import collections\n\ndef main():\n    n, m = map(int, input().split())\n    d = collections.defaultdict(list)\n    for i in range(n):\n        d[input()].append(i+1)\n    for i in range(m):\n        s = input()\n        if s in d:\n            print(' '.join(map(str, d[s])))\n        else:\n            print(-1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    ans = 0\n    cleanups = 0\n    for i in range(n):\n        while curr_day < days[i + 1]:\n            if days[i + 1] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i + 1] + 1\n            else:\n                curr_day = days[i + 1] + 1\n                break\n    ans = cleanups\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()] #list of dirty pushes\n    #print(n)\n    #print(dirty_pushes)\n    current_dirtiness = 0 #current dirtiness level\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes: #if the day is in the list of dirty pushes\n            current_dirtiness += (day - dirty_pushes.index(day)) #add the difference between the day and the index of the day in the dirty_pushes list\n        else:\n            current_dirtiness += 1 #otherwise, just add 1\n        if current_dirtiness >= 20: #if the current dirtiness is greater than 20\n            cleanup_counter += 1\n            current_dirtiness = 0 #reset the current dirtiness to 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i - 1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    total_dirtiness = 0\n    cleanup_phases = 0\n    for i in range(n):\n        total_dirtiness += (dirty_pushes[i] - i)\n        if total_dirtiness >= 20:\n            cleanup_phases += 1\n            total_dirtiness = 0\n    print(cleanup_phases)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom collections import defaultdict\n\nn, m = [int(x) for x in input().split()]\nd = defaultdict(list)\n\nfor i in range(n):\n    a, b = [int(x) for x in input().split()]\n    d[a].append(b)\n    d[b].append(a)\n\n\nprint(d)\n", "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(m):\n    ans += a[i]\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirtyPushes = [int(x) for x in sys.stdin.readline().split()]\n    totalDirtiness = 0\n    cleanupPhases = 0\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n + 1):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirtyPushes = [int(x) for x in sys.stdin.readline().split()] # dirty pushes\n    totalDirtiness = 0 # total dirtiness\n    cleanupPhases = 0 # cleanup phases\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/bin/python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirtyPushes = [int(x) for x in sys.stdin.readline().split()][:n]\n    totalDirtiness = 0\n    cleanupPhases = 0\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n    if totalDirtiness > 0:\n        cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(0)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i <= n:\n        if i == n:\n            cleanups += 1;\n        elif d[i] - d[i-1] > 20:\n            cleanups += 1;\n        i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    num_cases = int(sys.stdin.readline())\n    for i in range(num_cases):\n        n = int(sys.stdin.readline())\n        days = [int(x) for x in sys.stdin.readline().split()]\n        days.append(366)\n        curr_day = 1\n        cleanups = 0\n        for i in range(n):\n            while days[i] >= curr_day:\n                if days[i] - curr_day > 20:\n                    cleanups += 1\n                    curr_day = days[i] + 1\n                else:\n                    curr_day = days[i] + 1\n                    break\n        print(cleanups)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(1,len(days)):\n        dirtiness += days[i] - days[i-1]-1\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\nn = int(sys.stdin.readline())\nd = list(map(int, sys.stdin.readline().rstrip().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += (d[i] - 1)\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(1, len(days)):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness = 0\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\nn = int(input())\ndays = [int(x) for x in input().split()]\n\ncleanups = 0\ndirtiness = 0\n\n\nfor day in days:\n    dirtiness += day\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\nprint(cleanups)\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 0\n    cleanups = 0\n    while i < n:\n        if i == 0:\n            cleanups += 1\n            i += 1\n        elif d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n    main()\n", "\nprint(\"hello world\")\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i+1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\ncleanup = 0\nd = list(map(int, input().split()))\n\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += d[i] - 1\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    print(n)\n    print(dirty_pushes)\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes[day])\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nn = int(input())\nd = list(map(int, input().split()))\n\ncleanup = 0\ndirty = 0\nfor i in range(n):\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n    dirty += (d[i] - 1)\n\nwhile dirty >= 20:\n    cleanup += 1\n    dirty -= 20\n\nprint(cleanup)\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i - 1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n - 1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef find_cleanups(d):\n    i = 1\n    cleanups = 0\n    while i < len(d):\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == len(d)-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    return cleanups\n\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    cleanups = find_cleanups(d)\n\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day) - 1)\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()] # list comprehension\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirty_pushes = [int(x) for x in sys.stdin.readline().split()]\n    current_dirtiness = 0\n    cleanup_counter = 0\n    for day in range(1, 366):\n        if day in dirty_pushes:\n            current_dirtiness += (day - dirty_pushes.index(day))\n        else:\n            current_dirtiness += 1\n        if current_dirtiness >= 20:\n            cleanup_counter += 1\n            current_dirtiness = 0\n    print(cleanup_counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    dirtyPushes = [int(x) for x in input().split()]\n\n    totalDirtiness = 0\n    cleanupPhases = 0\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\nn = int(input())\npushes = list(map(int, input().split()))\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "\n\ndef main():\n    n = int(input())\n    d = [int(x) for x in input().split()]\n    i = 1\n    cleanups = 0\n    while i < n:\n        if d[i] - d[i-1] > 20:\n            i += 1\n        elif d[i] - d[i-1] == 20:\n            cleanups += 1\n            i += 1\n        elif i == n-1:\n            cleanups += 1\n            i += 1\n        else:\n            i += 1\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    cleanups = 0\n    dirtiness = 0\n    for i in range(len(days)-1):\n        dirtiness += days[i] - days[i-1]\n        if dirtiness >= 20:\n            cleanups += 1\n            dirtiness = 0\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n\n    cleanup = 0\n    dirty = 0\n    for i in range(n):\n        while dirty >= 20:\n            cleanup += 1\n            dirty -= 20\n        dirty += (d[i] - 1)\n\n    while dirty >= 20:\n        cleanup += 1\n        dirty -= 20\n\nprint(cleanup)\n", "\nn = int(input())\npushes = list(map(int, input().split()))\n\ncleanups = 0\ndirtiness = 0\n\nfor day in range(1, 367):\n    dirtiness += sum([max(0, day - push) for push in pushes if push <= day])\n    if dirtiness >= 20:\n        cleanups += 1\n        dirtiness = 0\n\nprint(cleanups)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    dirtyPushes = [int(x) for x in sys.stdin.readline().split()]\n    totalDirtiness = 0\n    cleanupPhases = 0\n    for i in range(n):\n        totalDirtiness += (dirtyPushes[i] - i)\n        if totalDirtiness >= 20:\n            cleanupPhases += 1\n            totalDirtiness = 0\n    print(cleanupPhases)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    days = [int(x) for x in sys.stdin.readline().split()]\n    days.append(366)\n    curr_day = 1\n    cleanups = 0\n    for i in range(n):\n        while days[i] >= curr_day:\n            if days[i] - curr_day > 20:\n                cleanups += 1\n                curr_day = days[i] + 1\n            else:\n                curr_day = days[i] + 1\n                break\n    print(cleanups)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\nn = int(sys.stdin.readline())\ndirtyPushes = [int(x) for x in sys.stdin.readline().split()]\ntotalDirtiness = 0\ncleanupPhases = 0\nfor i in range(n):\n    totalDirtiness += (dirtyPushes[i] - i)\n    if totalDirtiness >= 20:\n        cleanupPhases += 1\n        totalDirtiness = 0\nprint(cleanupPhases)\n"]