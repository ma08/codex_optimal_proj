["import sys\n\ndef solve(s, m, p):\n    n = len(s)\n    res = [0] * 26\n    for i in range(n):\n        res[ord(s[i]) - ord('a')] += 1\n    for i in range(m):\n        res[ord(s[p[i] % n]) - ord('a')] += 1\n    return res\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        s = sys.stdin.readline()\n        p = list(map(int, sys.stdin.readline().split()))\n        res = solve(s, m, p)\n        print(' '.join(map(str, res)))\nif __name__ == '__main__':\n    main()\n", "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split()) # n is length of string and m is length of array\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n) # appending n to the array\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "#a\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "\nimport sys\n\ndef solve(s, m, p):\n    # TODO: write your code here\n    return []\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        s = sys.stdin.readline()\n        p = list(map(int, sys.stdin.readline().split()))\n        res = solve(s, m, p)\n        print(' '.join(map(str, res)))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "#!/usr/bin/env python3\n\nt = int(input())\nfor _ in range(t):\n    n, _ = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    ans = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        ans[s[i]] = ans.get(s[i], 0) + n - p[c]\n    for i in ans:\n        print(ans[i], end=\" \")\n    print()\n", "\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n + 1)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + p[c] - i - 1\n    for i in d:\n        print(d[i], end=\" \")\n    print()\n", "\nimport sys\n\ndef solve(s, m, p):\n    n = len(s)\n    res = [0] * 26\n    for i in range(n):\n        res[ord(s[i]) - ord('a')] += 1\n    for i in range(m):\n        res[ord(s[p[i] % n]) - ord('a')] += 1\n    return res\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        s = sys.stdin.readline()\n        p = list(map(int, sys.stdin.readline().split()))\n        res = solve(s, m, p)\n        print(' '.join(map(str, res)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(s, m, p):\n    n = len(s)\n    res = [0] * 26\n    for i in range(n):\n        res[ord(s[i]) - ord('a')] += 1\n    for i in range(n):\n        res[ord(s[(i + p) % n]) - ord('a')] += 1\n    return res\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        s = sys.stdin.readline()\n        p = list(map(int, sys.stdin.readline().split()))\n        res = solve(s, m, p)\n        print(' '.join(map(str, res)))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    p.append(n)\n    d = dict()\n    c = 0\n    for i in range(n):\n        if i == p[c]:\n            c += 1\n        d[s[i]] = d.get(s[i], 0) + n - p[c]\n    sys.stdout.write(\" \".join(map(str, [d[i] for i in d])) + \"\\n\")\n", "import sys\n\ndef solve(s, m, p):\n    n = len(s)\n    res = [0] * 26\n    for i in range(n):\n        res[ord(s[i]) - ord('a')] += 1\n    for i in range(m):\n        res[ord(s[p[i] % n]) - ord('a')] += 1\n    return res\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        s = sys.stdin.readline()\n        p = list(map(int, sys.stdin.readline().split()))\n        res = solve(s, m, p)\n        print(' '.join(map(str, res)))\n\nif __name__ == '__main__':\n    main()\n"]