["\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] and (i >> k) & 1\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(max(A))\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(min(A))\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(sum(A))\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(sum(A)/N)\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(max(A) - min(A))\n\n\n#-----Input-----\nN = int(input())\nA = [int(i) for i in input().split(\" \")]\n\n#-----Output-----\nprint(sorted(A))\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P])\n", "\n\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    if bin(i).count('1') == 0:\n        continue\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] & (i >> k) & 1\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n\n\n#-----Input-----\n\nN = int(input())\nF = []\nfor i in range(N):\n\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\n\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())  # 1 <= N <= 10\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN = int(input())\nF = [[int(j) for j in input().split()] for _ in range(N)]\nP = [int(k) for k in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    if bin(i).count('1') == 0:\n        continue\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] * ((i >> k) & 1)\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split()])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split()])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -1000000000000\nfor i in range(1, 2**10):\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] and (i >> k) & 1\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\n\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P]))\n", "\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in P])) \n", "\nN = int(input())\nF = [[int(i) for i in input().split()] for _ in range(N)]\nP = [int(i) for i in input().split()]\n\nans = -100000000\nfor i in range(1, 2**10):\n    if bin(i).count('1') == 0:\n        continue\n    tmp = 0\n    for j in range(N):\n        cnt = 0\n        for k in range(10):\n            cnt += F[j][k] and (i >> k) & 1\n        tmp += P[cnt]\n    ans = max(ans, tmp)\nprint(ans)\n", "\n\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p, f)]) for f in zip(*F) for p in zip(*P)]))\n", "\n#-----Input-----\nN = int(input())\nF = []\nfor i in range(N):\n    F.append([int(j) for j in input().split(\" \")])\nP = []\nfor i in range(N):\n    P.append([int(j) for j in input().split(\" \")])\n\n#-----Output-----\nprint(max([sum([p*f for p, f in zip(p,f)]) for f in zip(*F) for p in P]))\n", "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    if i % 2 == 0 and S[i] == 'L':\n        ans += 1\n    elif i % 2 == 1 and S[i] == 'R':\n        ans += 1\nprint(ans)\n"]