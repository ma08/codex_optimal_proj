2022-04-16 08:22:42.506396 num operations 1
2022-04-16 08:22:42.506416 size on input set 1
2022-04-16 08:22:49.870973 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 2,
      "text": "\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 3,
      "text": "\n\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 4,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 5,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 6,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 7,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    },
    {
      "index": 8,
      "text": "\n\n\"\"\"\n    \u52a8\u6001\u89c4\u5212\n    dp[i][j]\u8868\u793a\u603b\u91d1\u989d\u4e3ai\uff0c\u786c\u5e01\u79cd\u7c7b\u4e3aj\u7684\u7ec4\u5408\u6570\n\"\"\"\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n"
    }
  ],
  "created": 1650097362,
  "object": "edit"
}
2022-04-16 08:22:49.871323 fix syntax errors 9 ['\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n', '\n\n"""\n    动态规划\n    dp[i][j]表示总金额为i，硬币种类为j的组合数\n"""\n\nA, B, C, X = map(int, input().split())\ndp = [[0 for _ in range(C+1)] for _ in range(X+1)]\n\nfor i in range(A+1):\n    for j in range(B+1):\n        for k in range(C+1):\n            if i*500+j*100+k*50 <= X:\n                if i*500+j*100+k*50 == X:\n                    dp[i*500+j*100+k*50][k] += 1\n                if i-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[(i-1)*500+j*100+k*50][k]\n                if j-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+(j-1)*100+k*50][k]\n                if k-1 >= 0:\n                    dp[i*500+j*100+k*50][k] += dp[i*500+j*100+(k-1)*50][k-1]\n\nprint(dp[X][C])\n']
2022-04-16 08:22:49.871522 size on output set 4
2022-04-16 08:22:49.871538 num operations 1
2022-04-16 08:22:49.871545 size on input set 1
2022-04-16 08:23:07.870413 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 1,
      "text": "\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 2,
      "text": "\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 3,
      "text": "\n"
    },
    {
      "index": 4,
      "text": "\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of A yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of B yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of C yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (A * i + B * j + C * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 5,
      "text": "\n\n#!/usr/bin/env python\n# coding: utf-8\n\n# In[5]:\n\n\n# get input from user\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways to make X\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins (i)\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 6,
      "text": "\n\nprint(\"Hello, World!\")\n"
    },
    {
      "index": 7,
      "text": "\n\n# get input\nN = int(input())\nK = int(input())\nX = list(map(int, input().split()))\n\n# initialize the minimum distance\nmin_dist = float('inf')\n\n# loop over all combinations of the number of items\nfor i in range(N - K + 1):\n    # calculate the distance\n    dist = abs(X[i]) + abs(X[i + K - 1] - X[i])\n\n# print the number of ways\nprint(num_ways)\n"
    },
    {
      "index": 8,
      "text": "\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n"
    }
  ],
  "created": 1650097369,
  "object": "edit"
}
2022-04-16 08:23:07.870656 fix syntax errors 9 ['\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n', '\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n', '\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n', '\n', '\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of A yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of B yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of C yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (A * i + B * j + C * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n', '\n\n#!/usr/bin/env python\n# coding: utf-8\n\n# In[5]:\n\n\n# get input from user\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways to make X\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins (i)\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n', '\n\nprint("Hello, World!")\n', "\n\n# get input\nN = int(input())\nK = int(input())\nX = list(map(int, input().split()))\n\n# initialize the minimum distance\nmin_dist = float('inf')\n\n# loop over all combinations of the number of items\nfor i in range(N - K + 1):\n    # calculate the distance\n    dist = abs(X[i]) + abs(X[i + K - 1] - X[i])\n\n# print the number of ways\nprint(num_ways)\n", '\n# get input\nA = int(input())\nB = int(input())\nC = int(input())\nX = int(input())\n\n# initialize the number of ways\nnum_ways = 0\n\n# loop over all combinations of the number of 500 yen coins\nfor i in range(A + 1):\n    # loop over all combinations of the number of 100 yen coins\n    for j in range(B + 1):\n        # loop over all combinations of the number of 50 yen coins\n        for k in range(C + 1):\n            # check if the total amount is X\n            if (500 * i + 100 * j + 50 * k) == X:\n                # increment the number of ways\n                num_ways += 1\n\n# print the number of ways\nprint(num_ways)\n']
2022-04-16 08:23:07.870772 size on output set 6
