2022-04-16 04:11:35.453478 num operations 1
2022-04-16 04:11:35.453494 size on input set 1
2022-04-16 04:11:49.495904 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://www.acmicpc.net/problem/15990\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[[0 for l in range(4)] for j in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        dp[i][j][1] = dp[i-1][j-1][2] + dp[i-1][j-1][3]\n        dp[i][j][2] = dp[i-1][j-1][1] + dp[i-1][j-1][3]\n        dp[i][j][3] = dp[i-1][j-1][1] + dp[i-1][j-1][2]\n\n        if j >= 2:\n            dp[i][j][1] += dp[i-1][j-2][2]\n            dp[i][j][2] += dp[i-1][j-2][1]\n\n        if j >= 3:\n            dp[i][j][1] += dp[i-1][j-3][3]\n            dp[i][j][3] += dp[i-1][j-3][1]\n\n        dp[i][j][1] %= 1000000009\n        dp[i][j][2] %= 1000000009\n        dp[i][j][3] %= 1000000009\n\nprint((dp[n][m][1] + dp[n][m][2] + dp[n][m][3]) % 1000000009)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 2,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 3,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 4,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 5,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 6,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 7,
      "text": "\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2+1:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 8,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    }
  ],
  "created": 1650082295,
  "object": "edit"
}
2022-04-16 04:11:49.496230 fix syntax errors 9 ['# https://www.acmicpc.net/problem/15990\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[[0 for l in range(4)] for j in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        dp[i][j][1] = dp[i-1][j-1][2] + dp[i-1][j-1][3]\n        dp[i][j][2] = dp[i-1][j-1][1] + dp[i-1][j-1][3]\n        dp[i][j][3] = dp[i-1][j-1][1] + dp[i-1][j-1][2]\n\n        if j >= 2:\n            dp[i][j][1] += dp[i-1][j-2][2]\n            dp[i][j][2] += dp[i-1][j-2][1]\n\n        if j >= 3:\n            dp[i][j][1] += dp[i-1][j-3][3]\n            dp[i][j][3] += dp[i-1][j-3][1]\n\n        dp[i][j][1] %= 1000000009\n        dp[i][j][2] %= 1000000009\n        dp[i][j][3] %= 1000000009\n\nprint((dp[n][m][1] + dp[n][m][2] + dp[n][m][3]) % 1000000009)\n', '#!/usr/bin/env python3\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m // 2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2+1:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n']
2022-04-16 04:11:49.496377 size on output set 6
2022-04-16 04:11:49.496394 num operations 1
2022-04-16 04:11:49.496402 size on input set 1
2022-04-16 04:12:08.659400 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j > 0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 1,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j>0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 2,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 3,
      "text": "\nn, m, k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\n\ndef max_sum(matrix, n, m, k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1] + k\n\n\nprint(max_sum(matrix, n, m, k))\n"
    },
    {
      "index": 4,
      "text": "\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m))\n"
    },
    {
      "index": 5,
      "text": "n,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(k)] for j in range(n)]\n    for i in range(n):\n        for j in range(k):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][k-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 6,
      "text": "n,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 7,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j>0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 8,
      "text": "\n# n,m,k = map(int, input().split())\n\n# matrix = []\n\n# for i in range(n):\n#     matrix.append(list(map(int, input().split())))\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    }
  ],
  "created": 1650082309,
  "object": "edit"
}
2022-04-16 04:12:08.659656 fix syntax errors 9 ['\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j > 0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j>0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\nn, m, k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\n\ndef max_sum(matrix, n, m, k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1] + k\n\n\nprint(max_sum(matrix, n, m, k))\n', '\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m))\n', 'n,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(k)] for j in range(n)]\n    for i in range(n):\n        for j in range(k):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j+1]) + matrix[i][j]\n    return dp[n-1][k-1]\n\nprint(max_sum(matrix,n,m,k))\n', 'n,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\ndef max_sum(matrix,n,m):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j] if j>0 else dp[i-1][j] + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n# n,m,k = map(int, input().split())\n\n# matrix = []\n\n# for i in range(n):\n#     matrix.append(list(map(int, input().split())))\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n']
2022-04-16 04:12:08.659778 size on output set 8
