2022-04-16 07:26:32.952898 num operations 1
2022-04-16 07:26:32.952917 size on input set 1
2022-04-16 07:26:42.510780 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport math\nimport heapq \ndef input(): return sys.stdin.readline().rstrip()\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 2,
      "text": "\n\n# Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 4,
      "text": "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 5,
      "text": "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 6,
      "text": "\n\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    count = [0] * m\n    for i in a:\n        count[i % m] += 1\n\n    ans = 0\n    for i in range(m // 2 + 1):\n        if i == 0 or i * 2 == m:\n            ans += count[i] % 2\n        else:\n            ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\n    print(ans)\n\n    for i in range(n):\n        print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n\n\nif __name__ == '__main__':\n    main()\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 7,
      "text": "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    },
    {
      "index": 8,
      "text": "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"
    }
  ],
  "created": 1650093993,
  "object": "edit"
}
2022-04-16 07:26:42.511067 fix syntax errors 9 ["\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "import sys\nimport math\nimport heapq \ndef input(): return sys.stdin.readline().rstrip()\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n\n# Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    count = [0] * m\n    for i in a:\n        count[i % m] += 1\n\n    ans = 0\n    for i in range(m // 2 + 1):\n        if i == 0 or i * 2 == m:\n            ans += count[i] % 2\n        else:\n            ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\n    print(ans)\n\n    for i in range(n):\n        print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n\n\nif __name__ == '__main__':\n    main()\n\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n", "\n#Solution\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = [0] * m\nfor i in a:\n    count[i % m] += 1\n\nans = 0\nfor i in range(m // 2 + 1):\n    if i == 0 or i * 2 == m:\n        ans += count[i] % 2\n    else:\n        ans += max(count[i], count[m - i]) - min(count[i], count[m - i])\n\nprint(ans)\n\nfor i in range(n):\n    print(a[i] + (ans + (a[i] % m) - (n // m) * (a[i] % m)) // 2, end=' ')\n"]
2022-04-16 07:26:42.511187 size on output set 6
2022-04-16 07:26:42.511199 num operations 1
2022-04-16 07:26:42.511204 size on input set 1
2022-04-16 07:27:01.315334 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = [int(x) for x in read().split()]\n    a = [int(x) for x in read().split()] \n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    pass\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef main():\n    n, m = (int(x) for x in stdin.readline().split())\n    a = [int(x) for x in stdin.readline().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n - 1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i - 1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_val = a[i]\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom sys import stdin\n\nfrom math import gcd\n\ndef read():\n\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 8
    }
  ],
  "created": 1650094002,
  "object": "edit"
}
2022-04-16 07:27:01.315731 NO RESULT
2022-04-16 07:27:01.315749 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 8
}
2022-04-16 07:27:01.315905 fix syntax errors 8 ["\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = [int(x) for x in read().split()]\n    a = [int(x) for x in read().split()] \n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\nfrom sys import stdin\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", '\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    pass\n\nmain()\n', "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef main():\n    n, m = (int(x) for x in stdin.readline().split())\n    a = [int(x) for x in stdin.readline().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n - 1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i - 1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_val = a[i]\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n", "\n\nfrom sys import stdin\n\nfrom math import gcd\n\ndef read():\n\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\n\nmain()\n", "\nfrom sys import stdin\nfrom math import gcd\n\ndef read():\n    return stdin.readline()\n\ndef main():\n    n, m = (int(x) for x in read().split())\n    a = [int(x) for x in read().split()]\n    a.sort()\n    min_val = a[0]\n    max_val = a[n-1]\n    max_moves = max_val - min_val\n    min_moves = 0\n    for i in range(1, n):\n        if i % m == 0:\n            min_moves += a[i-1] - min_val\n    if min_moves > max_moves:\n        print(min_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(max_val, end=' ')\n            else:\n                print(min_val, end=' ')\n    else:\n        print(max_moves)\n        for i in range(n):\n            if i % m == 0:\n                print(min_val, end=' ')\n            else:\n                print(max_val, end=' ')\n\nmain()\n"]
2022-04-16 07:27:01.316088 size on output set 8
