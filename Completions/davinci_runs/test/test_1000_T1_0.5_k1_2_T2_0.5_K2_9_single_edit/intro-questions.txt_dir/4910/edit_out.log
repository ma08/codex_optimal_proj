2022-04-16 13:46:29.047770 num operations 1
2022-04-16 13:46:29.047788 size on input set 1
2022-04-16 13:46:39.682303 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]    \n    winners = sorted([costume for costume, count in zip(costume_set, costume_counts) if count == max(costume_counts)])\n    print('\\n'.join(winners))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]  # pylint: disable=cell-var-from-loop\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]  # pylint: disable=cell-var-from-loop\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set] # pylint: disable=E1111\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count] # pylint: disable=E1111\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    print('\\n'.join(sorted(set(costumes))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume_) for costume_ in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume_ for costume_, count in zip(costume_set, costume_counts) if count == max_count]\n    print('\\n'.join(sorted(winners)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes) # set of unique costumes\n    costume_counts = [costumes.count(costume) for costume in costume_set] # list of counts for each unique costume\n    max_count = max(costume_counts) # get the maximum count\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count] # list of winners\n    print('\\n'.join(sorted(winners))) # print winners in alphabetical order\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116789,
  "object": "edit"
}
2022-04-16 13:46:39.682575 fix syntax errors 9 ['\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]    \n    winners = sorted([costume for costume, count in zip(costume_set, costume_counts) if count == max(costume_counts)])\n    print(\'\\n\'.join(winners))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]  # pylint: disable=cell-var-from-loop\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]  # pylint: disable=cell-var-from-loop\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count]\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume) for costume in costume_set] # pylint: disable=E1111\n    max_count = max(costume_counts)\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count] # pylint: disable=E1111\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    print(\'\\n\'.join(sorted(set(costumes))))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes)\n    costume_counts = [costumes.count(costume_) for costume_ in costume_set]\n    max_count = max(costume_counts)\n    winners = [costume_ for costume_, count in zip(costume_set, costume_counts) if count == max_count]\n    print(\'\\n\'.join(sorted(winners)))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    num_costumes = int(input())\n    costumes = []\n    for _ in range(num_costumes):\n        costumes.append(input())\n    costume_set = set(costumes) # set of unique costumes\n    costume_counts = [costumes.count(costume) for costume in costume_set] # list of counts for each unique costume\n    max_count = max(costume_counts) # get the maximum count\n    winners = [costume for costume, count in zip(costume_set, costume_counts) if count == max_count] # list of winners\n    print(\'\\n\'.join(sorted(winners))) # print winners in alphabetical order\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:46:39.682699 size on output set 8
2022-04-16 13:46:39.682710 num operations 1
2022-04-16 13:46:39.682715 size on input set 1
2022-04-16 13:46:49.349269 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())    \n    for costume in costume_dict:        \n        if costume_dict[costume] == max_costumes:            \n            print(costume)        \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costumes = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costumes:\n            costumes[costume] += 1\n        else:\n            costumes[costume] = 1\n    max_costumes = max(costumes.values())\n    for costume in costumes:\n        if costumes[costume] == max_costumes:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = dict()\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n    num_inputs = int(input())\n    costume_dict = dict()\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())  # this is the max number of costumes\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116799,
  "object": "edit"
}
2022-04-16 13:46:49.349515 fix syntax errors 9 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())    \n    for costume in costume_dict:        \n        if costume_dict[costume] == max_costumes:            \n            print(costume)        \n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function\n    """\n    print("hello world")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costumes = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costumes:\n            costumes[costume] += 1\n        else:\n            costumes[costume] = 1\n    max_costumes = max(costumes.values())\n    for costume in costumes:\n        if costumes[costume] == max_costumes:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costume_dict = {}\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costume_dict = dict()\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    This is the main function\n    """\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    """\n    This is the main function\n    """\n    num_inputs = int(input())\n    costume_dict = dict()\n    for i in range(num_inputs):\n        costume = input()\n        if costume in costume_dict:\n            costume_dict[costume] += 1\n        else:\n            costume_dict[costume] = 1\n    max_costumes = max(costume_dict.values())  # this is the max number of costumes\n    for costume in costume_dict:\n        if costume_dict[costume] == max_costumes:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:46:49.349627 size on output set 9
2022-04-16 13:46:49.349639 num operations 1
2022-04-16 13:46:49.349644 size on input set 1
2022-04-16 13:47:36.281154 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\nn = int(input(\"Enter the number of students: \"))\nstudents = [input(\"Enter student name: \") for _ in range(n)]\n\nmarks = defaultdict(int)\nfor student in students:\n    marks[student] += 1\n\nmax_count = max(marks.values())\nbest_students = [student for student, count in marks.items() if count == max_count]\nbest_students.sort()\n\nfor student in best_students:\n    print(student)\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 3,
      "text": "\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 4,
      "text": "\nprint \"Hello!\"\n"
    },
    {
      "index": 5,
      "text": "\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 6,
      "text": "\n\nfrom collections import defaultdict\n\nn = int(input())  # number of students\ncostumes = [input() for _ in range(n)]  # costumes of students\n\ncounts = defaultdict(int)  # counts of costumes\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())  # most popular costume\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()  # sort alphabetically\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 7,
      "text": "#!/bin/python\n\nimport sys\n\ndef solve(n, s, d, m):\n    # Complete this function\n    count = 0\n    for i in range(n):\n        sum = 0\n        for j in range(m):\n            sum += s[i+j]\n        if sum == d:\n            count += 1\n    return count\n\nn = int(raw_input().strip())\ns = map(int, raw_input().strip().split(' '))\nd, m = raw_input().strip().split(' ')\nd, m = [int(d), int(m)]\nresult = solve(n, s, d, m)\nprint(result)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n"
    },
    {
      "index": 8,
      "text": "\n\nn, m = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\ns = sum(a)\nfor i in range(m):\n    p, x = [int(x) for x in input().split()]\n    print(s - a[p - 1] + x)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ],
  "created": 1650116809,
  "object": "edit"
}
2022-04-16 13:47:36.281425 fix syntax errors 9 ['\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n', '\n\nfrom collections import defaultdict\n\nn = int(input("Enter the number of students: "))\nstudents = [input("Enter student name: ") for _ in range(n)]\n\nmarks = defaultdict(int)\nfor student in students:\n    marks[student] += 1\n\nmax_count = max(marks.values())\nbest_students = [student for student, count in marks.items() if count == max_count]\nbest_students.sort()\n\nfor student in best_students:\n    print(student)\n', 'from collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n', '\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n', '\nprint "Hello!"\n', '\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n', '\n\nfrom collections import defaultdict\n\nn = int(input())  # number of students\ncostumes = [input() for _ in range(n)]  # costumes of students\n\ncounts = defaultdict(int)  # counts of costumes\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())  # most popular costume\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()  # sort alphabetically\n\nfor costume in best_costumes:\n    print(costume)\n', "#!/bin/python\n\nimport sys\n\ndef solve(n, s, d, m):\n    # Complete this function\n    count = 0\n    for i in range(n):\n        sum = 0\n        for j in range(m):\n            sum += s[i+j]\n        if sum == d:\n            count += 1\n    return count\n\nn = int(raw_input().strip())\ns = map(int, raw_input().strip().split(' '))\nd, m = raw_input().strip().split(' ')\nd, m = [int(d), int(m)]\nresult = solve(n, s, d, m)\nprint(result)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom collections import defaultdict\n\nn = int(input())\ncostumes = [input() for _ in range(n)]\n\ncounts = defaultdict(int)\nfor costume in costumes:\n    counts[costume] += 1\n\nmax_count = max(counts.values())\nbest_costumes = [costume for costume, count in counts.items() if count == max_count]\nbest_costumes.sort()\n\nfor costume in best_costumes:\n    print(costume)\n", '\n\nn, m = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\ns = sum(a)\nfor i in range(m):\n    p, x = [int(x) for x in input().split()]\n    print(s - a[p - 1] + x)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n']
2022-04-16 13:47:36.281573 size on output set 7
2022-04-16 13:47:36.281586 num operations 1
2022-04-16 13:47:36.281591 size on input set 1
2022-04-16 13:47:45.647338 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 2,
      "text": "\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = \"10 ghost mummy witch demon demon demon demon demon demon demon\" #input(\"Enter: \")\n\nprint(s)\ns = s.split()\n\nn = int(s[0])\n\nprint(s)\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 6,
      "text": "\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = \"10 ghost mummy witch demon demon demon demon demon demon demon demon\"\ns = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = \"10 ghost mummy witch demon demon demon demon demon demon demon\"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    },
    {
      "index": 8,
      "text": "\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = \"10 ghost mummy witch demon demon demon demon demon demon demon\\n\"\ns = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n"
    }
  ],
  "created": 1650116856,
  "object": "edit"
}
2022-04-16 13:47:45.647589 fix syntax errors 9 ['\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = "10 ghost mummy witch demon demon demon demon demon demon demon" #input("Enter: ")\n\nprint(s)\ns = s.split()\n\nn = int(s[0])\n\nprint(s)\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = "10 ghost mummy witch demon demon demon demon demon demon demon demon"\ns = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\nimport sys\nimport math\n\ns = sys.stdin.readline()\ns = s.rstrip()\ns = s.split()\n\n#s = "10 ghost mummy witch demon demon demon demon demon demon demon"\n#s = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n', '\n\n#import sys\n#import math\n\n#s = sys.stdin.readline()\n#s = s.rstrip()\n#s = s.split()\n\ns = "10 ghost mummy witch demon demon demon demon demon demon demon\\n"\ns = s.split()\n\nn = int(s[0])\ns = s[1:]\n\nd = {}\n\nfor i in range(n):\n    if s[i] not in d:\n        d[s[i]] = 1\n    else:\n        d[s[i]] += 1\n\nm = max(d.values())\n\nfor k, v in d.items():\n    if v == m:\n        print(k)\n']
2022-04-16 13:47:45.647637 size on output set 4
2022-04-16 13:47:45.647649 num operations 1
2022-04-16 13:47:45.647654 size on input set 1
2022-04-16 13:48:00.660481 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n\tlines = []\n\tfor line in sys.stdin:\n\t\tlines.append(line.rstrip('\\n'))\n\tnum_colleagues = int(lines[0])\n\tcostumes = []\n\tfor i in range(1, num_colleagues + 1):\n\t\tcostumes.append(lines[i])\n\tcostume_dict = {}\n\tfor costume in costumes:\n\t\tif costume not in costume_dict:\n\t\t\tcostume_dict[costume] = 1\n\t\telse:\n\t\t\tcostume_dict[costume] += 1\n\thighest = 0\n\tfor costume in costume_dict:\n\t\tif costume_dict[costume] > highest:\n\t\t\thighest = costume_dict[costume]\n\tbest_costumes = []\n\tfor costume in costume_dict:\n\t\tif costume_dict[costume] == highest:\n\t\t\tbest_costumes.append(costume)\n\tbest_costumes.sort()\n\tfor costume in best_costumes:\n\t\tprint(costume)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_costumes = int(lines[0])\n    costumes = []\n    for i in range(1, num_costumes + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes = sorted(best_costumes)\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116865,
  "object": "edit"
}
2022-04-16 13:48:00.660734 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/python3\n\nimport sys\n\ndef main():\n\tlines = []\n\tfor line in sys.stdin:\n\t\tlines.append(line.rstrip(\'\\n\'))\n\tnum_colleagues = int(lines[0])\n\tcostumes = []\n\tfor i in range(1, num_colleagues + 1):\n\t\tcostumes.append(lines[i])\n\tcostume_dict = {}\n\tfor costume in costumes:\n\t\tif costume not in costume_dict:\n\t\t\tcostume_dict[costume] = 1\n\t\telse:\n\t\t\tcostume_dict[costume] += 1\n\thighest = 0\n\tfor costume in costume_dict:\n\t\tif costume_dict[costume] > highest:\n\t\t\thighest = costume_dict[costume]\n\tbest_costumes = []\n\tfor costume in costume_dict:\n\t\tif costume_dict[costume] == highest:\n\t\t\tbest_costumes.append(costume)\n\tbest_costumes.sort()\n\tfor costume in best_costumes:\n\t\tprint(costume)\n\nif __name__ == "__main__":\n\tmain()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip('\\n'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == '__main__':\n    main()\n", '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_costumes = int(lines[0])\n    costumes = []\n    for i in range(1, num_costumes + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes = sorted(best_costumes)\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line.rstrip(\'\\n\'))\n    num_colleagues = int(lines[0])\n    costumes = []\n    for i in range(1, num_colleagues + 1):\n        costumes.append(lines[i])\n    costume_dict = {}\n    for costume in costumes:\n        if costume not in costume_dict:\n            costume_dict[costume] = 1\n        else:\n            costume_dict[costume] += 1\n    highest = 0\n    for costume in costume_dict:\n        if costume_dict[costume] > highest:\n            highest = costume_dict[costume]\n    best_costumes = []\n    for costume in costume_dict:\n        if costume_dict[costume] == highest:\n            best_costumes.append(costume)\n    best_costumes.sort()\n    for costume in best_costumes:\n        print(costume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:48:00.660883 size on output set 5
2022-04-16 13:48:00.660895 num operations 1
2022-04-16 13:48:00.660900 size on input set 1
2022-04-16 13:48:13.090725 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    costume_freq[costume] = costume_freq.get(costume, 0) + 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    costumes = []\n    for i in range(N):\n        costumes.append(input())\n\n    costume_freq = {}\n    for costume in costumes:\n        if costume in costume_freq:\n            costume_freq[costume] += 1\n        else:\n            costume_freq[costume] = 1\n\n    max_freq = max(costume_freq.values())\n    for costume in sorted(costume_freq):\n        if costume_freq[costume] == max_freq:\n            print(costume)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nwith open(\"input.txt\", \"r\") as f:\n    for line in f:\n        print(line)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\ncostumes = []\nfor i in range(n):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n\n        print(costume)\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\ncostumes = [input() for i in range(N)]\n\ncostume_freq = {}\nfor costume in costumes:\n    costume_freq[costume] = costume_freq.get(costume, 0) + 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n"
    },
    {
      "index": 6,
      "text": "#!/bin/python3\n\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(int(input()))\n\ncostumes.sort()\n\nprint(costumes[-1] - costumes[0])\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\ncostumes = []\nfor i in range(n):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n"
    }
  ],
  "created": 1650116880,
  "object": "edit"
}
2022-04-16 13:48:13.091175 fix syntax errors 9 ['\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    costume_freq[costume] = costume_freq.get(costume, 0) + 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n', "\n\ndef main():\n    N = int(input())\n    costumes = []\n    for i in range(N):\n        costumes.append(input())\n\n    costume_freq = {}\n    for costume in costumes:\n        if costume in costume_freq:\n            costume_freq[costume] += 1\n        else:\n            costume_freq[costume] = 1\n\n    max_freq = max(costume_freq.values())\n    for costume in sorted(costume_freq):\n        if costume_freq[costume] == max_freq:\n            print(costume)\n\nif __name__ == '__main__':\n    main()\n", '\nwith open("input.txt", "r") as f:\n    for line in f:\n        print(line)\n', '\n\nn = int(input())\ncostumes = []\nfor i in range(n):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n', '\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n\n        print(costume)\n', '\nN = int(input())\ncostumes = [input() for i in range(N)]\n\ncostume_freq = {}\nfor costume in costumes:\n    costume_freq[costume] = costume_freq.get(costume, 0) + 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n', '#!/bin/python3\n\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(int(input()))\n\ncostumes.sort()\n\nprint(costumes[-1] - costumes[0])\n', '\nN = int(input())\ncostumes = []\nfor i in range(N):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n', '\nn = int(input())\ncostumes = []\nfor i in range(n):\n    costumes.append(input())\n\ncostume_freq = {}\nfor costume in costumes:\n    if costume in costume_freq:\n        costume_freq[costume] += 1\n    else:\n        costume_freq[costume] = 1\n\nmax_freq = max(costume_freq.values())\nfor costume in sorted(costume_freq):\n    if costume_freq[costume] == max_freq:\n        print(costume)\n']
2022-04-16 13:48:13.091230 size on output set 9
2022-04-16 13:48:13.091243 num operations 1
2022-04-16 13:48:13.091249 size on input set 1
2022-04-16 13:48:22.521052 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\"\"\"\nYou are organizing a Halloween party for your neighborhood. You are expecting many guests and want to provide them with costumes. You want to buy exactly one costume for each guest.\nYou are given the cost of each costume. You want to spend as little money as possible. However, you also want to provide a wide variety of costumes, so you want to buy a costume for each type (i.e., each different cost).\nWrite a program that computes the minimum amount of money you need to spend.\nInput\nThe first line of the input contains a single integer n (1\u2264n\u2264100) \u2014 the number of costumes you are considering buying.\nThe second line of the input contains n integers c1,c2,\u2026,cn (1\u2264ci\u2264100) \u2014 the costs of the costumes.\nOutput\nPrint a single integer \u2014 the minimum amount of money you need to spend.\n\"\"\"\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            break\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/python3\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116893,
  "object": "edit"
}
2022-04-16 13:48:22.521356 fix syntax errors 9 ['import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '"""\nYou are organizing a Halloween party for your neighborhood. You are expecting many guests and want to provide them with costumes. You want to buy exactly one costume for each guest.\nYou are given the cost of each costume. You want to spend as little money as possible. However, you also want to provide a wide variety of costumes, so you want to buy a costume for each type (i.e., each different cost).\nWrite a program that computes the minimum amount of money you need to spend.\nInput\nThe first line of the input contains a single integer n (1≤n≤100) — the number of costumes you are considering buying.\nThe second line of the input contains n integers c1,c2,…,cn (1≤ci≤100) — the costs of the costumes.\nOutput\nPrint a single integer — the minimum amount of money you need to spend.\n"""\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            break\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/python3\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    costumes = dict()\n    for i in range(n):\n        costume = sys.stdin.readline().strip()\n        if costume not in costumes:\n            costumes[costume] = 1\n        else:\n            costumes[costume] += 1\n    max_num = max(costumes.values())\n    for costume in sorted(costumes):\n        if costumes[costume] == max_num:\n            print(costume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:48:22.521431 size on output set 7
2022-04-16 13:48:22.521442 num operations 1
2022-04-16 13:48:22.521447 size on input set 1
2022-04-16 13:48:31.150636 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef get_solution(N):\n    if N <= 1:\n        return 1\n    elif N <= 3:\n        return 2\n    elif N % 2 == 0:\n        return get_solution(N // 2) + 1\n    else:\n        return get_solution(N // 3) + 1\n\nN = int(sys.stdin.readline())\nprint(get_solution(N))\n"
    },
    {
      "index": 1,
      "text": "import sys\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n\n\n"
    },
    {
      "index": 5,
      "text": "import sys, os\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 6,
      "text": "import sys\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n\nN = int(sys.stdin.readline())\ncostumes = set(sys.stdin.readline().strip() for _ in range(N))\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    },
    {
      "index": 8,
      "text": "import sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n"
    }
  ],
  "created": 1650116902,
  "object": "edit"
}
2022-04-16 13:48:31.150874 fix syntax errors 9 ['\nimport sys\nimport math\n\ndef get_solution(N):\n    if N <= 1:\n        return 1\n    elif N <= 3:\n        return 2\n    elif N % 2 == 0:\n        return get_solution(N // 2) + 1\n    else:\n        return get_solution(N // 3) + 1\n\nN = int(sys.stdin.readline())\nprint(get_solution(N))\n', 'import sys\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', 'import sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', '\nimport sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', '\nimport sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n\n\n', 'import sys, os\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', 'import sys\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', 'import sys\n\n\nN = int(sys.stdin.readline())\ncostumes = set(sys.stdin.readline().strip() for _ in range(N))\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n', 'import sys\n\nN = int(sys.stdin.readline())\ncostumes = set()\nfor _ in range(N):\n    costumes.add(sys.stdin.readline().strip())\n\ncostumes = list(costumes)\ncostumes.sort()\nfor costume in costumes:\n    print(costume)\n']
2022-04-16 13:48:31.150987 size on output set 8
