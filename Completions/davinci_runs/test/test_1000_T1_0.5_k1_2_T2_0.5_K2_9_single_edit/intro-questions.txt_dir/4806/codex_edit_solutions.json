["\nimport sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves)-2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result)) \n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python3\n\nimport sys\nimport math\n\ndef main():\n    monster_moves = sys.stdin.readline().strip() # get the moves\n    mech_moves = \"\"\n    while len(monster_moves) > 0: # loop through the moves\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]: # if there are 3 consecutive moves\n                mech_moves += \"C\"\n                monster_moves = monster_moves[3:] # remove the 3 consecutive moves\n            else:\n                monster_moves = monster_moves[1:] # remove the first move\n        else:\n            monster_moves = monster_moves[1:] # remove the first move\n    print(mech_moves)\n\ndef counter(move):\n    # return the counter move\n    if move == \"R\":\n        return \"S\"\n    elif move == \"B\":\n        return \"K\"\n    else:\n        return \"H\"\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    mech_moves = \"\"\n    while len(monster_moves) > 0:\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]:\n                mech_moves += \"C\"\n                monster_moves = monster_moves[3:]\n            else:\n                mech_moves += counter(monster_moves[0])\n                monster_moves = monster_moves[1:]\n        else:\n            mech_moves += counter(monster_moves[0])\n            monster_moves = monster_moves[1:]\n    print(mech_moves)\n\ndef counter(move):\n    if move == \"R\":\n        return \"S\"\n    elif move == \"B\":\n        return \"K\"\n    else:\n        return \"H\"\n\nif __name__ == \"__main__\":\n    main()\n", "\n#This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n        if len(combo_breaker_queue) == 3 and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    monster_moves = sys.stdin.readline().strip() # read input\n    mech_moves = \"\"\n    while len(monster_moves) > 0: # while there are still moves\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]: # if there are 3 in a row, counter with C\n                mech_moves += \"C\"\n                monster_moves = monster_moves[3:]\n            else: # otherwise, counter with the appropriate move\n                mech_moves += counter(monster_moves[0])\n                monster_moves = monster_moves[1:]\n        else: # if there are less than 3 moves left, just counter with the appropriate move\n            mech_moves += counter(monster_moves[0])\n            monster_moves = monster_moves[1:]\n    print(mech_moves) # print result\n\ndef counter(move):\n    if move == \"R\":\n        return \"S\"\n    elif move == \"B\":\n        return \"K\"\n    else:\n        return \"H\"\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys, math\n\ndef main():\n    data = sys.stdin.readline().strip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            else:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            else:\n                counter += 2\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution\n\nimport sys\n\n# Open the file and read the first line of input\nfile = open(\"input.txt\")\nline = file.readline()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "\nimport sys\nimport math\n\ndef main():\n    # Write your code here\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i+1] == 'R':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'B':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'L':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'B' and moves[i+1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\n#This solution is O(n) in time and O(n) in space.\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n        if len(combo_breaker_queue) == 3 and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n#This solution is O(n) in time and O(1) in space.\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves)-1):\n        if moves[i] == 'R' and moves[i+1] == 'L':\n            result[i] = 'C' if result[i] == 'S' else 'S'\n            result[i+1] = 'C' if result[i+1] == 'S' else 'S'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i + 1] == moves[i + 2]:\n            result += \"C\"\n            i += 3\n        elif moves[i] == \"R\":\n            result += \"S\"\n            i += 1\n        elif moves[i] == \"B\":\n            result += \"K\"\n            i += 1\n        elif moves[i] == \"L\":\n            result += \"H\"\n            i += 1\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    data = sys.stdin.readline().strip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            elif data[i] != data[i+1]:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            elif data[i] != data[i+1] and data[i+1] != data[i+2]:\n                counter += 2\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution\n\nimport sys\n\ndef main():\n    # Read the first line of input\n    line = sys.stdin.readline()\n    \n    # Initialize the state machine\n    state = 0\n    \n    # Parse the input string\n    for c in line:\n        # Check if the character is a valid move\n        if c == 'R' or c == 'B' or c == 'L':\n            # If the character is a valid move, process it\n            if c == 'R':\n                # If the character is an R, check if the state is 0\n                if state == 0:\n                    # If the state is 0, output an S\n                    print('S', end='')\n                    # Set the state to 1\n                    state = 1\n                else:\n                    # If the state is not 0, output an H\n                    print('H', end='')\n                    # Set the state to 0\n                    state = 0\n            elif c == 'B':\n                # If the character is a B, check if the state is 0\n                if state == 0:\n                    # If the state is 0, output a K\n                    print('K', end='')\n                    # Set the state to 1\n                    state = 1\n                else:\n                    # If the state is not 0, output an H\n                    print('H', end='')\n                    # Set the state to 0\n                    state = 0\n            else:\n                # If the character is an L, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is not a valid move, print an error and exit\n            print('Invalid move: ' + c)\n            exit(0)\n            \nif __name__ == '__main__':\n    main()\n", "\n\n#This solution is O(n) in time and O(n) in space\n# def mech_monster(monster_moves):\n#     mech_moves = \"\"\n#     combo_breaker_queue = []\n#     for move in monster_moves:\n#         if move == 'R':\n#             mech_moves += 'S'\n#         elif move == 'B':\n#             mech_moves += 'K'\n#         elif move == 'L':\n#             mech_moves += 'H'\n#         if len(combo_breaker_queue) == 3:\n#             combo_breaker_queue.pop(0)\n#         combo_breaker_queue.append(move)\n#         if len(combo_breaker_queue) == 3 and \\\n#            combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n#            combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n#            combo_breaker_queue[0] != combo_breaker_queue[2]:\n#             mech_moves += 'C'\n#     return mech_moves\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i + 1] == 'R':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i + 1] == 'B':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i + 1] == 'L':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'B' and moves[i + 1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    data = sys.stdin.readline().rstrip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            else:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            else:\n                counter += 2\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i+1] == 'R':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'B':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'L':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter.strip())\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    n, m = map(int, sys.stdin.readline().strip().split())\n    for i in range(n):\n        for j in range(m):\n            print(\"*\", end=\"\")\n        print()\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i + 1] == moves[i + 2]:\n            result += \"C\"\n            i += 3\n        elif moves[i] == 'R':\n            result += \"S\"\n            i += 1\n        elif moves[i] == 'B':\n            result += \"K\"\n            i += 1\n        elif moves[i] == 'L':\n            result += \"H\"\n            i += 1\n    print(result)\n\nmain()\n", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves) - 2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i+1] == moves[i+2] and moves[i] != \"C\":\n            result += \"C\"\n            i += 3\n        elif moves[i] == \"R\":\n            result += \"S\"\n            i += 1\n        elif moves[i] == \"B\":\n            result += \"K\"\n            i += 1\n        elif moves[i] == \"L\":\n            result += \"H\"\n            i += 1\n    print(result)\n\nmain()\n", "\nimport sys\nimport math\ndef main():\n    data = sys.stdin.readline().strip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            else:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            else:\n                counter += 2\n    print(counter)\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\ndef main():\n    num_cases = int(sys.stdin.readline().strip())\n    for _ in range(num_cases):\n        num_days = int(sys.stdin.readline().strip())\n        day_counts = [0] * num_days\n        num_groups = int(sys.stdin.readline().strip())\n        for _ in range(num_groups):\n            start_day, duration = sys.stdin.readline().strip().split()\n            start_day, duration = int(start_day), int(duration)\n            for i in range(start_day, start_day + duration):\n                day_counts[i] += 1\n        print(max(day_counts))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i + 1] == moves[i + 2]:\n            result += \"C\"\n            i += 3\n        elif moves[i] == \"R\":\n            result += \"S\"\n            i += 1\n        elif moves[i] == \"B\":\n            result += \"K\"\n            i += 1\n        elif moves[i] == \"L\":\n            result += \"H\"\n            i += 1\n    print(result)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] is None:\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] is None:\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'L':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves)-2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n           combo_breaker_queue[0] != combo_breaker_queue[1] and combo_breaker_queue[1] != combo_breaker_queue[2] and combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and move_counts['B'] == 1 and move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    mech_moves = ''\n    while len(monster_moves) > 0:\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]:\n                mech_moves += 'C'\n                monster_moves = monster_moves[3:]\n            else:\n                mech_moves += counter(monster_moves[0])\n                monster_moves = monster_moves[1:]\n        else:\n            mech_moves += counter(monster_moves[0])\n            monster_moves = monster_moves[1:]\n    print(mech_moves)\n\ndef counter(move):\n    if move == 'R':\n        return 'S'\n    elif move == 'B':\n        return 'K'\n    else:\n        return 'H'\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for j in range(len(moves)-2):\n        if moves[j] == 'R' and moves[j+1] == 'B' and moves[j+2] == 'L':\n            result[j] = 'C'\n            result[j+1] = 'C'\n            result[j+2] = 'C'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution\n\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline().strip()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "\n# Solution\n\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "import sys\n\ndef main():\n    moves = sys.stdin.readline().rstrip()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves)-2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\n#This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n        if len(combo_breaker_queue) == 3 and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0, 'C': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n            move_counts['C'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n            move_counts['C'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n            move_counts['C'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1 and \\\n           move_counts['C'] == 3:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0, 'C': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n        if len(combo_breaker_queue) == 3 and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n# This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\n\n\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves)-2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L' and result[i] == 'S' and result[i+1] == 'K' and result[i+2] == 'H':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    moves = input()\n    result = []\n    for i in range(len(moves)):\n        if moves[i] == 'R':\n            result.append('S')\n        elif moves[i] == 'B':\n            result.append('K')\n        else:\n            result.append('H')\n    for i in range(len(moves) - 2):\n        if moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            result[i] = 'C'\n            result[i+1] = 'C'\n            result[i+2] = 'C'\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i+1] == moves[i+2]: # if three moves are the same\n            result += \"C\"\n            i += 3\n        elif moves[i] == \"R\": # if move is R\n            result += \"S\"\n            i += 1\n        elif moves[i] == \"B\":\n            result += \"K\"\n            i += 1\n        elif moves[i] == \"L\":\n            result += \"H\"\n            i += 1\n    print(result)\n\nmain()\n", "\n\n# Solution to the problem\n\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "\n\ndef main():\n    moves = input()\n    result = \"\"\n    i = 0\n    while i < len(moves):\n        if i + 2 < len(moves) and moves[i] == moves[i + 1] == moves[i + 2]:\n            result += \"C\"\n            i += 3\n        elif moves[i] == \"R\":\n            result += \"S\"\n            i += 1\n        elif moves[i] == \"B\":\n            result += \"K\"\n            i += 1\n        elif moves[i] == \"L\":\n            result += \"H\"\n            i += 1\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\ndef main():\n    data = sys.stdin.readline().strip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            else:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            else:\n                counter += 2\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()\n", "# Solution\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline()\n# Initialize the state machine\nstate = 0\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L' or c == 'F':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'L':\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n        else:\n            # If the character is an F, output an F\n            print('F', end='')\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c, file=sys.stderr)\n        exit(0)\n", "\nimport sys\n\ndef main():\n    lines = sys.stdin.readlines()\n    moves = lines[0].strip()\n    counter = ''\n    i = 0\n    while i < len(moves):\n        if moves[i] == 'R':\n            counter += 'S'\n        elif moves[i] == 'B':\n            counter += 'K'\n        elif moves[i] == 'L':\n            counter += 'H'\n        elif moves[i] == 'R' and moves[i + 1] == 'R':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i + 1] == 'B':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'R' and moves[i + 1] == 'L':\n            counter += 'S'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'R':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'B':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'B' and moves[i+1] == 'L':\n            counter += 'K'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'R':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'B':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'L' and moves[i+1] == 'L':\n            counter += 'H'\n            i += 1\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'R' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'B' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'R' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'B' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'R':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'B':\n            counter += 'C'\n            i += 3\n        elif moves[i] == 'L' and moves[i+1] == 'L' and moves[i+2] == 'L':\n            counter += 'C'\n            i += 3\n        else:\n            i += 1\n    print(counter)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n\tmonster_moves = sys.stdin.readline().strip()\n\tmech_moves = \"\"\n\twhile len(monster_moves) > 0:\n\t\tif len(monster_moves) >= 3:\n\t\t\tif monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]:\n\t\t\t\tmech_moves += \"C\"\n\t\t\t\tmonster_moves = monster_moves[3:]\n\t\t\telse:\n\t\t\t\tmech_moves += counter(monster_moves[0])\n\t\t\t\tmonster_moves = monster_moves[1:]\n\t\telse:\n\t\t\tmech_moves += counter(monster_moves[0])\n\t\t\tmonster_moves = monster_moves[1:]\n\tprint(mech_moves)\n\ndef counter(move):\n\tif move == \"R\":\n\t\treturn \"S\"\n\telif move == \"B\":\n\t\treturn \"K\"\n\telse:\n\t\treturn \"H\"\n\nif __name__ == \"__main__\":\n\tmain()\n", "\n#!/usr/bin/env python\n# Solution\n\nimport sys\n\n# Read the first line of input\nline = sys.stdin.readline()\n\n# Initialize the state machine\nstate = 0\n\n# Parse the input string\nfor c in line:\n    # Check if the character is a valid move\n    if c == 'R' or c == 'B' or c == 'L':\n        # If the character is a valid move, process it\n        if c == 'R':\n            # If the character is an R, check if the state is 0\n            if state == 0:\n                # If the state is 0, output an S\n                print('S', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        elif c == 'B':\n            # If the character is a B, check if the state is 0\n            if state == 0:\n                # If the state is 0, output a K\n                print('K', end='')\n                # Set the state to 1\n                state = 1\n            else:\n                # If the state is not 0, output an H\n                print('H', end='')\n                # Set the state to 0\n                state = 0\n        else:\n            # If the character is an L, output an H\n            print('H', end='')\n            # Set the state to 0\n            state = 0\n    else:\n        # If the character is not a valid move, print an error and exit\n        print('Invalid move: ' + c)\n        exit(0)\n", "\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = ['', '', '']\n    queue_index = 0\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        combo_breaker_queue[queue_index] = move\n        queue_index += 1\n        if queue_index == 3:\n            queue_index = 0\n        if combo_breaker_queue[0] != '' and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n            combo_breaker_queue = ['', '', '']\n    return mech_moves\n\n#This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    data = sys.stdin.readline().strip()\n    counter = 0\n    for i in range(len(data)):\n        if i == len(data)-1:\n            counter += 1\n        elif i == len(data)-2:\n            if data[i] == data[i+1]:\n                counter += 1\n            else:\n                counter += 2\n        else:\n            if data[i] == data[i+1] and data[i+1] == data[i+2]:\n                counter += 1\n            else:\n                counter += 2\n    print(counter)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#This solution is O(n) in time and O(n) in space\ndef mech_monster(monster_moves):\n    mech_moves = \"\"\n    combo_breaker_queue = []\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n        elif move == 'B':\n            mech_moves += 'K'\n        elif move == 'L':\n            mech_moves += 'H'\n        if len(combo_breaker_queue) == 3:\n            combo_breaker_queue.pop(0)\n        combo_breaker_queue.append(move)\n        if len(combo_breaker_queue) == 3 and \\\n           combo_breaker_queue[0] != combo_breaker_queue[1] and \\\n           combo_breaker_queue[1] != combo_breaker_queue[2] and \\\n           combo_breaker_queue[0] != combo_breaker_queue[2]:\n            mech_moves += 'C'\n    return mech_moves\n\n#This solution is O(n) in time and O(1) in space\ndef mech_monster2(monster_moves):\n    mech_moves = \"\"\n    move_counts = {'R': 0, 'B': 0, 'L': 0}\n    for move in monster_moves:\n        if move == 'R':\n            mech_moves += 'S'\n            move_counts['R'] += 1\n        elif move == 'B':\n            mech_moves += 'K'\n            move_counts['B'] += 1\n        elif move == 'L':\n            mech_moves += 'H'\n            move_counts['L'] += 1\n        if move_counts['R'] == 1 and \\\n           move_counts['B'] == 1 and \\\n           move_counts['L'] == 1:\n            mech_moves += 'C'\n            move_counts = {'R': 0, 'B': 0, 'L': 0}\n    return mech_moves\n\nimport sys\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    print(mech_monster2(monster_moves))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    data = sys.stdin.readline().strip()\n    print(data)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    mech_moves = \"\"\n    while len(monster_moves) > 0:\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]:\n                mech_moves += \"C\"\n                monster_moves = monster_moves[3:]\n            else:\n                mech_moves += counter(monster_moves[0])\n                monster_moves = monster_moves[1:]\n        else:\n            mech_moves += counter(monster_moves[0])\n            monster_moves = monster_moves[1:]\n    print(mech_moves)\n\ndef counter(move):\n    if move == \"R\":\n        return \"S\"\n    elif move == \"B\":\n        return \"K\"\n    else:\n        return \"H\"\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\ndef main():\n    monster_moves = sys.stdin.readline().strip()\n    mech_moves = \"\"\n    while len(monster_moves) > 0:\n        if len(monster_moves) >= 3:\n            if monster_moves[0] == monster_moves[1] and monster_moves[1] == monster_moves[2]:\n                mech_moves += \"C\"\n                monster_moves = monster_moves[3:]\n            else:\n                mech_moves += counter(monster_moves[0])\n                monster_moves = monster_moves[1:]\n        else:\n            mech_moves += counter(monster_moves[0])\n            monster_moves = monster_moves[1:]\n    print(mech_moves)\n\ndef counter(move):\n    if move == \"R\":\n        return \"S\"\n    elif move == \"B\":\n        return \"K\"\n    else:\n        return \"H\"\n\nif __name__ == \"__main__\":\n    main()\n"]