
import os
import sys
import collections
import itertools
import math
import queue
import sys

sys.setrecursionlimit(2 * 10 ** 5)

def solve(n, m, a):
    a.sort()
    b = a[::-1]
    ans = 0
    for i in range(1, m + 1):
        ans += a[i - 1] * b[i - 1]
    return ans

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    nm = input().split()

    n = int(nm[0])

    m = int(nm[1])

    a = list(map(int, input().rstrip().split()))

    result = solve(n, m, a)

    fptr.write(str(result) + '\n')

    fptr.close()















































































































































































































































































































































































































































































































































































































































































































































































































































































def dfs(vertex, parent):
    # return (count of vertices in subtree, count of edges in subtree)
    cnt = 1
    edges = 0
    for child in tree[vertex]:
        if child != parent:
            child_cnt, child_edges = dfs(child, vertex)
            cnt += child_cnt
            edges += child_edges + child_cnt
    return cnt, edges


def get_max_edges(v1, v2):
    cnt1, edges1 = dfs(v1, -1)
    cnt2, edges2 = dfs(v2, -1)
    return edges1 + edges2 + cnt1 * cnt2


ans = 0
ans1, ans2, ans3 = 0, 0, 0
for v1 in range(n):
    for v2 in tree[v1]:
        for v3 in tree[v2]:
            if v1 != v3:
                cur = get_max_edges(v1, v2) + get_max_edges(v1, v3) + get_max_edges(v2, v3)
                if cur > ans:
                    ans = cur
                    ans1, ans2, ans3 = v1, v2, v3

print(ans)
print(ans1 + 1, ans2 + 1, ans3 + 1)
