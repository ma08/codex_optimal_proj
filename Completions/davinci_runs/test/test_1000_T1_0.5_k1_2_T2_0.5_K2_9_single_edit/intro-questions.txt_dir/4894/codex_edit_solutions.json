["import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]} #initialize staff\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]} # dict with keys as notes and values as lists of note lengths\n    for note in song:\n        staff[note[0]].append(note[1]) # add note length to list of its note\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', '']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n\n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline().strip())\n    notes = stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a', 'B': 'b', 'C': 'c', 'D': 'd', 'E': 'e', 'F': 'f', 'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [], 'F': [], 'E': [], 'D': [], 'C': [], 'B': [], 'A': [],\n        'g': [], 'f': [], 'e': [], 'd': [], 'c': [], 'b': [], 'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n\n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n\n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n\n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip()) #number of lines\n    notes = sys.stdin.readline().strip().split() #notes\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''} #staff\n    for note in notes: #loop through notes\n        if len(note) == 1: #if the note is one character\n            staff[note] += '*' #add a star to the staff\n        else: #otherwise it is two characters\n            staff[note[0]] += '*'*int(note[1]) #add the number of stars based on the second character\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']: #loop through each line of staff\n        print(l+': '+staff[l]) #print the line of staff\n\nmain()\n", "\nimport sys\n\ndef main():\n    sys.stdin.readline().strip()\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}    \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\nimport sys\n#sys.stdin = open(\"file.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[],\n             'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C:', 'D': 'D:', 'E': 'E:', 'F': 'F:', 'G': 'G:', 'A': 'A:', 'B': 'B:'}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '', 'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*' * int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "import os\n\nimport sys\n\ndef main():\n    with open(os.environ['OUTPUT_PATH'], 'w') as f:\n        n = int(sys.stdin.readline().strip())\n        notes = sys.stdin.readline().strip().split()\n        lines = [l.strip() for l in sys.stdin.readlines()]\n        staff = []\n        for line in lines:\n            staff.append(line.split())\n        for note in notes:\n            if len(note) == 1:\n                staff[ord(note.lower()) - ord('a')].append('*')\n            else:\n                staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n        for line in staff:\n            f.write(' '.join(line))\n            f.write('\\n')\nmain()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key]) if len(staff[key]) > 0 else 0):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '* '\n            else:\n                staff[octave[notes[x].lower()]] += '* '\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '* '*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '* '*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * (int(note[1]) - 1) + '|')\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*') # ord('a')=97\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1])) # ord('a')=97\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]} # staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[], 'G#':[], 'A#':[], 'C#':[], 'D#':[], 'F#':[], 'g#':[], 'a#':[], 'c#':[], 'd#':[], 'f#':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\" \")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ': ', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (43 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (45 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + '_'\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + '_'\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + '_'\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + '_'\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + '_'\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + '_'\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + '_'\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + '_'\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + '_'\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + '_'\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + '_'\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + '_'\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + '_'\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + '_'\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]} # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c\u0438 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043d\u043e\u0442\u0435\n    for note in song:\n        staff[note[0]].append(note[1]) # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u043e\u0442\u044b\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[],\n             'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B', 'C': 'C', 'D': 'D', 'E': 'E', 'F': 'F', 'G': 'G', 'A': 'A', 'B': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}    \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G': '', 'F': '', 'E': '', 'D': '', 'C': '', 'B': '', 'A': '', 'g': '', 'f': '', 'e': '', 'd': '', 'c': '', 'b': '', 'a': ''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*' * int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\nn = int(input())\nnotes = input().split()\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "def check_braces(string):\n    stack = []\n    opening = {'{', '[', '('}\n    pairs = {'}': '{', ']': '[', ')': '('}\n    for char in string:\n        if char in opening:\n            stack.append(char)\n        elif char in pairs:\n            if stack.pop() != pairs[char]:\n                return False\n    return len(stack) == 0\n\n\nprint(check_braces('{}[]()'))\nprint(check_braces('{[}]'))\nprint(check_braces('{[()]}'))\nprint(check_braces('{[(])}'))\nprint(check_braces('{{[[(())]]}}'))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes if note.find('2') != -1]\n    notes = [note.replace('3', '**') for note in notes if note.find('3') != -1]\n    notes = [note.replace('4', '***') for note in notes if note.find('4') != -1]\n    notes = [note.replace('5', '****') for note in notes if note.find('5') != -1]\n    notes = [note.replace('6', '*****') for note in notes if note.find('6') != -1]\n    notes = [note.replace('7', '******') for note in notes if note.find('7') != -1]\n    notes = [note.replace('8', '*******') for note in notes if note.find('8') != -1]\n    notes = [note.replace('9', '********') for note in notes if note.find('9') != -1]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}\n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "import sys\n#sys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' ' if duration > 1 else '*'\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' ' if duration > 1 else '*'\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split(' ')\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '}\n    for x in range(0, n):\n        if notes[x].islower():\n            staff[octave[notes[x]]] += '*'\n        else:\n            staff[octave[notes[x].lower()]] += '*'\n    for x in range(0, n):\n        if len(notes[x]) == 2:\n            staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''} # create dictionary\n    for note in notes:\n        if len(note) == 1: # if note is a single character\n            staff[note] += '*' # add a star to the key in the dictionary\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}  # noqa\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:  # noqa\n        print(l+': '+staff[l])\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\nmain()\n", "from sys import stdin\n\n\nn = int(stdin.readline())\nnotes = stdin.readline().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:'],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "\n\nimport sys\n\ndef main():\n    print('Hello World')\n\nmain()\n", "\nimport sys\n\ndef main():\n    sys.stdin.readline().strip()\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*') # ord is the ascii value of the char\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n"]