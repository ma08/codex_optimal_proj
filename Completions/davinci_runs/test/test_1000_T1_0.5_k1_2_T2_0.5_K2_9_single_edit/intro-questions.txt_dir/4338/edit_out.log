2022-04-16 06:39:03.167602 num operations 1
2022-04-16 06:39:03.167622 size on input set 1
2022-04-16 06:39:12.891112 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return \"Hello World\"\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return a\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n    \"\"\"\n    :param n:\n    :param x:\n    :param y:\n    :param a:\n    :return:\n    \"\"\"\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\n    b = list(map(int, input().split()))\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650091143,
  "object": "edit"
}
2022-04-16 06:39:12.891427 fix syntax errors 9 ["\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", '\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return "Hello World"\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == \'__main__\':\n    main()\n', "\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return a\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", '\n\n    """\n    :param n:\n    :param x:\n    :param y:\n    :param a:\n    :return:\n    """\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == \'__main__\':\n    main()\n', "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\n    b = list(map(int, input().split()))\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:39:12.891470 size on output set 7
2022-04-16 06:39:12.891480 num operations 1
2022-04-16 06:39:12.891485 size on input set 1
2022-04-16 06:39:20.968631 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win.\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win.\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even.\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))[:n]\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650091152,
  "object": "edit"
}
2022-04-16 06:39:20.968975 fix syntax errors 9 ['\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win.\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win.\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even.\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))[:n]\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 06:39:20.969045 size on output set 5
