["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))[:n]\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a):\n    return a\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n    \"\"\"\n    :param n:\n    :param x:\n    :param y:\n    :param a:\n    :return:\n    \"\"\"\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\n    b = list(map(int, input().split()))\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return \"Hello World\"\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef get_number_of_broken_doors(n, x, y, a):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, a, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, a, b))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = map(int, sys.stdin.readline().split())\n    a = map(int, sys.stdin.readline().split())\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win.\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win.\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is even.\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"]