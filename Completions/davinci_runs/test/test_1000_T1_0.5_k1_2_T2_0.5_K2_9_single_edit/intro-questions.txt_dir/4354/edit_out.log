2022-04-16 06:46:37.674202 num operations 1
2022-04-16 06:46:37.674220 size on input set 1
2022-04-16 06:46:45.879953 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# input()\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 2,
      "text": "\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 3,
      "text": "\n\n\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 4,
      "text": "\n\n# input data\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 5,
      "text": "\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 6,
      "text": "\n\n# input\nN, M = map(int, input().split())\nstudents = [list(map(int, input().split())) for _ in range(N)]\ncheckpoints = [list(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 7,
      "text": "\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    },
    {
      "index": 8,
      "text": "\nfrom sys import stdin\n\n# input\nN, M = map(int, stdin.readline().split())\nstudents = [tuple(map(int, stdin.readline().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, stdin.readline().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n"
    }
  ],
  "created": 1650091597,
  "object": "edit"
}
2022-04-16 06:46:45.880222 fix syntax errors 9 ['\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n\n# input()\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n\n\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n\n# input data\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n\n# input\nN, M = map(int, input().split())\nstudents = [list(map(int, input().split())) for _ in range(N)]\ncheckpoints = [list(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n', '\nfrom sys import stdin\n\n# input\nN, M = map(int, stdin.readline().split())\nstudents = [tuple(map(int, stdin.readline().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, stdin.readline().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n']
2022-04-16 06:46:45.880265 size on output set 6
2022-04-16 06:46:45.880276 num operations 1
2022-04-16 06:46:45.880281 size on input set 1
2022-04-16 06:47:02.035335 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 1,
      "text": "# \ubc31\uc900\uc5d0\uc11c \ubb38\uc81c\ub97c \ubc1b\uc544\uc640\uc11c \ud480\uae30\nimport sys\nsys.stdin = open(\"input.txt\")\n\n\nN,M = map(int,input().split()) # N\uc740 \uc0ac\ub78c\uc758 \uc218, M\uc740 \uac00\ub2a5\ud55c \uc704\uce58\uc758 \uc218\nstudent = [list(map(int,input().split())) for i in range(N)] # \uc0ac\ub78c\uc758 \uc704\uce58 \uc815\ubcf4\ncheckpoint = [list(map(int,input().split())) for i in range(M)] # \uac00\ub2a5\ud55c \uc704\uce58\uc758 \uc815\ubcf4\n\nfor i in range(N):\n    dist = [] # \uc0ac\ub78c\ub9c8\ub2e4 \ucd5c\ub2e8\uac70\ub9ac\ub97c \ub2f4\uc744 \ub9ac\uc2a4\ud2b8\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 2,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 3,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 4,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 5,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 6,
      "text": "import math\n\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(math.sqrt((student[i][0]-checkpoint[j][0])**2+(student[i][1]-checkpoint[j][1])**2))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 7,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    },
    {
      "index": 8,
      "text": "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"
    }
  ],
  "created": 1650091605,
  "object": "edit"
}
2022-04-16 06:47:02.035720 fix syntax errors 9 ['\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '# 백준에서 문제를 받아와서 풀기\nimport sys\nsys.stdin = open("input.txt")\n\n\nN,M = map(int,input().split()) # N은 사람의 수, M은 가능한 위치의 수\nstudent = [list(map(int,input().split())) for i in range(N)] # 사람의 위치 정보\ncheckpoint = [list(map(int,input().split())) for i in range(M)] # 가능한 위치의 정보\n\nfor i in range(N):\n    dist = [] # 사람마다 최단거리를 담을 리스트\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', 'import math\n\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(math.sqrt((student[i][0]-checkpoint[j][0])**2+(student[i][1]-checkpoint[j][1])**2))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n', '\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n']
2022-04-16 06:47:02.035807 size on output set 3
