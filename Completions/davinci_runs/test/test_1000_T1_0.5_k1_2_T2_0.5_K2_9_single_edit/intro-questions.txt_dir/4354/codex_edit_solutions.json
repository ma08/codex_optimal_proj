["import math\n\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(math.sqrt((student[i][0]-checkpoint[j][0])**2+(student[i][1]-checkpoint[j][1])**2))\n    print(dist.index(min(dist))+1)\n", "\n\n# input data\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "\n\n\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "\n\n# input\nN, M = map(int, input().split())\nstudents = [list(map(int, input().split())) for _ in range(N)]\ncheckpoints = [list(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "\n# input\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "\nN,M = map(int,input().split())\nstudent = [list(map(int,input().split())) for i in range(N)]\ncheckpoint = [list(map(int,input().split())) for i in range(M)]\n\nfor i in range(N):\n    dist = []\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n", "\n\n# input()\nN, M = map(int, input().split())\nstudents = [tuple(map(int, input().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, input().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "\nfrom sys import stdin\n\n# input\nN, M = map(int, stdin.readline().split())\nstudents = [tuple(map(int, stdin.readline().split())) for _ in range(N)]\ncheckpoints = [tuple(map(int, stdin.readline().split())) for _ in range(M)]\n\nfor student in students:\n    distances = [abs(student[0]-checkpoint[0])+abs(student[1]-checkpoint[1]) for checkpoint in checkpoints]\n    print(distances.index(min(distances))+1)\n", "# \ubc31\uc900\uc5d0\uc11c \ubb38\uc81c\ub97c \ubc1b\uc544\uc640\uc11c \ud480\uae30\nimport sys\nsys.stdin = open(\"input.txt\")\n\n\nN,M = map(int,input().split()) # N\uc740 \uc0ac\ub78c\uc758 \uc218, M\uc740 \uac00\ub2a5\ud55c \uc704\uce58\uc758 \uc218\nstudent = [list(map(int,input().split())) for i in range(N)] # \uc0ac\ub78c\uc758 \uc704\uce58 \uc815\ubcf4\ncheckpoint = [list(map(int,input().split())) for i in range(M)] # \uac00\ub2a5\ud55c \uc704\uce58\uc758 \uc815\ubcf4\n\nfor i in range(N):\n    dist = [] # \uc0ac\ub78c\ub9c8\ub2e4 \ucd5c\ub2e8\uac70\ub9ac\ub97c \ub2f4\uc744 \ub9ac\uc2a4\ud2b8\n    for j in range(M):\n        dist.append(abs(student[i][0]-checkpoint[j][0])+abs(student[i][1]-checkpoint[j][1]))\n    print(dist.index(min(dist))+1)\n"]