2022-04-16 14:24:14.941689 num operations 1
2022-04-16 14:24:14.941706 size on input set 1
2022-04-16 14:24:22.621667 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i + 1\n\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days-2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]    \n    m = max(temp[1:3])\n    d = 1\n    for i in range(days-2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()][:days]\n    m = max(temp)\n    for i in range(days-2):  # the last two days are not possible\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650119055,
  "object": "edit"
}
2022-04-16 14:24:22.622076 fix syntax errors 9 ["\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i + 1\n\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days-2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]    \n    m = max(temp[1:3])\n    d = 1\n    for i in range(days-2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()][:days]\n    m = max(temp)\n    for i in range(days-2):  # the last two days are not possible\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 14:24:22.622131 size on output set 7
2022-04-16 14:24:22.622142 num operations 1
2022-04-16 14:24:22.622147 size on input set 1
2022-04-16 14:24:34.578325 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()] #list comprehension\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(0, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n - 2):\n        tmp = temps[i] + temps[i + 1] + temps[i + 2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\ntemps = [int(i) for i in input().split()]\nbest_day = 1\nbest_temp = temps[0] + temps[1] + temps[2]\nfor i in range(1, n-2):\n    tmp = temps[i] + temps[i+1] + temps[i+2]\n    if tmp < best_temp:\n        best_day = i+1\n        best_temp = tmp\nprint(best_day, best_temp)\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 0\n    best_temp = temps[0]\n    for i in range(1, n):\n        if temps[i] < best_temp:\n            best_day = i\n            best_temp = temps[i]\n    print(best_day+1)\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp) \n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    if n > 2:\n        best_day = 1\n        best_temp = temps[0] + temps[1] + temps[2]\n        for i in range(1, n-2):\n            tmp = temps[i] + temps[i+1] + temps[i+2]\n            if tmp < best_temp:\n                best_day = i+1\n                best_temp = tmp\n        print(best_day, best_temp)\n    else:\n        print(1, 0)\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp, sep=' ')\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n - 2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n"
    }
  ],
  "created": 1650119062,
  "object": "edit"
}
2022-04-16 14:24:34.578656 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()] #list comprehension\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(0, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n - 2):\n        tmp = temps[i] + temps[i + 1] + temps[i + 2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n', '\n\nn = int(input())\ntemps = [int(i) for i in input().split()]\nbest_day = 1\nbest_temp = temps[0] + temps[1] + temps[2]\nfor i in range(1, n-2):\n    tmp = temps[i] + temps[i+1] + temps[i+2]\n    if tmp < best_temp:\n        best_day = i+1\n        best_temp = tmp\nprint(best_day, best_temp)\n', '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 0\n    best_temp = temps[0]\n    for i in range(1, n):\n        if temps[i] < best_temp:\n            best_day = i\n            best_temp = temps[i]\n    print(best_day+1)\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp) \n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    if n > 2:\n        best_day = 1\n        best_temp = temps[0] + temps[1] + temps[2]\n        for i in range(1, n-2):\n            tmp = temps[i] + temps[i+1] + temps[i+2]\n            if tmp < best_temp:\n                best_day = i+1\n                best_temp = tmp\n        print(best_day, best_temp)\n    else:\n        print(1, 0)\n\nmain()\n', "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp, sep=' ')\n\nmain()\n", '\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 1\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n - 2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i + 1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n']
2022-04-16 14:24:34.578708 size on output set 9
2022-04-16 14:24:34.578723 num operations 1
2022-04-16 14:24:34.578728 size on input set 1
2022-04-16 14:24:46.872045 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\nprint(minDay, temp[minDay])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, minTemp)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0, numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n"
    },
    {
      "index": 4,
      "text": "# -*- coding: utf-8 -*-\nfrom __future__ import print_function\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay], end=\"\")\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay)\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\n\nnumDays = int(sys.stdin.readline())\n\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\n\n\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i]) + int(temp[i+1]) + int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i]) + int(temp[i+1]) + int(temp[i+2])\n        minDay = i+1\n\n\nprint(minDay, temp[minDay])\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\nnumDays = int(sys.stdin.readline()) \ntemp = sys.stdin.readline().split() \n\nminTemp = 100 \nminDay = 0 \nfor i in range(0,numDays-2): \n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp: \n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2]) \n        minDay = i+1 \n\nprint(minDay+1, temp[minDay]) \n"
    }
  ],
  "created": 1650119074,
  "object": "edit"
}
2022-04-16 14:24:46.872268 fix syntax errors 9 ['\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\nprint(minDay, temp[minDay])\n', '\n\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, minTemp)\n', '\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n', '\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0, numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n', '# -*- coding: utf-8 -*-\nfrom __future__ import print_function\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay], end="")\n', '\n\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay)\n', '\n\nimport sys\n\n\nnumDays = int(sys.stdin.readline())\n\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\n\n\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i]) + int(temp[i+1]) + int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i]) + int(temp[i+1]) + int(temp[i+2])\n        minDay = i+1\n\n\nprint(minDay, temp[minDay])\n', '\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n', '\n\nimport sys\n\nnumDays = int(sys.stdin.readline()) \ntemp = sys.stdin.readline().split() \n\nminTemp = 100 \nminDay = 0 \nfor i in range(0,numDays-2): \n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp: \n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2]) \n        minDay = i+1 \n\nprint(minDay+1, temp[minDay]) \n']
2022-04-16 14:24:46.872391 size on output set 9
2022-04-16 14:24:46.872403 num operations 1
2022-04-16 14:24:46.872408 size on input set 1
2022-04-16 14:24:57.869571 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split(' ')))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n\tn = int(input())  # number of days\n\ttemps = list(map(int, input().split()))  # list of temperatures\n\n\tmax_temp = 0  # max temperature\n\tday = 0  # day of max temperature\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])  # max temperature of the day\n\n\t\tif temp > max_temp:  # if the temperature is greater than the current max temperature\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2]) \n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = temps[0]\n\tday = 1\n\n\tfor i in range(1, n):\n\t\tif temps[i] > max_temp:\n\t\t\tmax_temp = temps[i]\n\t\t\tday = i + 1\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    temps = list(map(int, input().split()))\n\n    max_temp = 0\n    day = 0\n\n    for i in range(n - 2):\n        temp = max(temps[i], temps[i + 1], temps[i + 2])\n\n        if temp > max_temp:\n            max_temp = temp\n            day = i + 1\n\n    print(day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2]) # find max temp from 3 consecutive days\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    }
  ],
  "created": 1650119086,
  "object": "edit"
}
2022-04-16 14:24:57.869827 fix syntax errors 9 ['\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split(\' \')))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\ndef main():\n\tn = int(input())  # number of days\n\ttemps = list(map(int, input().split()))  # list of temperatures\n\n\tmax_temp = 0  # max temperature\n\tday = 0  # day of max temperature\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])  # max temperature of the day\n\n\t\tif temp > max_temp:  # if the temperature is greater than the current max temperature\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2])\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2]) \n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = temps[0]\n\tday = 1\n\n\tfor i in range(1, n):\n\t\tif temps[i] > max_temp:\n\t\t\tmax_temp = temps[i]\n\t\t\tday = i + 1\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n', '\n\ndef main():\n    n = int(input())\n    temps = list(map(int, input().split()))\n\n    max_temp = 0\n    day = 0\n\n    for i in range(n - 2):\n        temp = max(temps[i], temps[i + 1], temps[i + 2])\n\n        if temp > max_temp:\n            max_temp = temp\n            day = i + 1\n\n    print(day, max_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n\tn = int(input())\n\ttemps = list(map(int, input().split()))\n\n\tmax_temp = 0\n\tday = 0\n\n\tfor i in range(n - 2):\n\t\ttemp = max(temps[i], temps[i + 1], temps[i + 2]) # find max temp from 3 consecutive days\n\n\t\tif temp > max_temp:\n\t\t\tmax_temp = temp\n\t\t\tday = i + 1\n\n\tprint(day, max_temp)\n\nif __name__ == "__main__":\n\tmain()\n']
2022-04-16 14:24:57.869876 size on output set 8
2022-04-16 14:24:57.869895 num operations 1
2022-04-16 14:24:57.869904 size on input set 1
2022-04-16 14:25:44.664660 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Time    : 2020/1/8 11:02\n# @Author  : tanxw\n# @Desc    : \u5217\u8868\u89e3\u6790\n\nimport sys\n\n    \"\"\"\n    \u8f93\u5165\uff1a\n    5\n    2 3 4 5 6\n    \u8f93\u51fa\uff1a\n    2 4\n    \"\"\"\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp) - 2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index + 1, max_temp[index])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# -*- coding: utf-8 -*-\n# \u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u57f9\u8bad\u7b2c\u4e00\u5468\u4f5c\u4e1a\n# 1\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u975e\u91cd\u590d\u5b50\u4e32\u7684\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cabcabcbb\u201d\uff0c\u8f93\u51fa\u4e3a3\uff0c\u8f93\u5165\u4e3a\u201cbbbbb\u201d\uff0c\u8f93\u51fa\u4e3a1\u3002\uff09\ndef longest_substring(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    sub_str = ''\n    for s in input_str:\n        if s in sub_str:\n            index = sub_str.index(s)\n            sub_str = sub_str[index+1:] + s\n        else:\n            sub_str += s\n        max_len = max(max_len, len(sub_str))\n    return max_len\n\n\n# 2\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cbabad\u201d\uff0c\u8f93\u51fa\u4e3a3\uff0c\u8f93\u5165\u4e3a\u201ccbbd\u201d\uff0c\u8f93\u51fa\u4e3a2\u3002\uff09\ndef longest_palindrome(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    for i in range(len(input_str)):\n        for j in range(i+1, len(input_str)+1):\n            if input_str[i:j] == input_str[i:j][::-1]:\n                max_len = max(max_len, j-i)\n    return max_len\n\n\n# 3\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u975e\u91cd\u590d\u5b50\u4e32\u7684\u8d77\u59cb\u4e0b\u6807\u548c\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cabcabcbb\u201d\uff0c\u8f93\u51fa\u4e3a(0,3)\uff0c\u8f93\u5165\u4e3a\u201cbbbbb\u201d\uff0c\u8f93\u51fa\u4e3a(0,1)\u3002\uff09\ndef longest_substring_index(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    sub_str = ''\n    index = 0\n    for i in range(len(input_str)):\n        s = input_str[i]\n        if s in sub_str:\n            cur_len = len(sub_str)\n            if cur_len > max_len:\n                max_len = cur_len\n                index = i - max_len\n            sub_str = sub_str[sub_str.index(s)+1:] + s\n        else:\n            sub_str += s\n    cur_len = len(sub_str)\n    if cur_len > max_len:\n        max_len = cur_len\n        index = len(input_str) - max_len\n    return index, max_len\n\n\n# 4\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u7684\u8d77\u59cb\u4e0b\u6807\u548c\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cbabad\u201d\uff0c\u8f93\u51fa\u4e3a(0,3)\uff0c\u8f93\u5165\u4e3a\u201ccbbd\u201d\uff0c\u8f93\u51fa\u4e3a(1,2)\u3002\uff09\ndef longest_palindrome_index(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    index = 0\n    for i in range(len(input_str)):\n        for j in range(i+1, len(input_str)+1):\n            if input_str[i:j] == input_str[i:j][::-1]:\n                cur_len = j - i\n                if cur_len > max_len:\n                    max_len = cur_len\n                    index = i\n    return index, max_len\n\n\n# 5\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cabcde\u201d\u548c\u201ccde\u201d\uff0c\u8f93\u51fa\u4e3a3\uff0c\u8f93\u5165\u4e3a\u201cabc\u201d\u548c\u201ccde\u201d\uff0c\u8f93\u51fa\u4e3a0\u3002\uff09\ndef longest_common_substring(input_str1, input_str2):\n    if not input_str1 or not input_str2:\n        return 0\n    len1 = len(input_str1)\n    len2 = len(input_str2)\n    dp = [[0]*(len2+1) for _ in range(len1+1)]\n    res = 0\n    for i in range(1, len1+1):\n        for j in range(1, len2+1):\n            if input_str1[i-1] == input_str2[j-1]:\n                dp[i][j] = dp[i-1][j-1] + 1\n                res = max(res, dp[i][j])\n    return res\n\n\n# 6\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32\u7684\u8d77\u59cb\u4e0b\u6807\u548c\u957f\u5ea6\u3002\uff08\u6bd4\u5982\uff0c\u8f93\u5165\u4e3a\u201cabcde\u201d\u548c\u201ccde\u201d\uff0c\u8f93\u51fa\u4e3a(2,3)\uff0c\u8f93\u5165\u4e3a\u201cabc\u201d\u548c\u201ccde\u201d\uff0c\u8f93\u51fa\u4e3a(0,0)\u3002\uff09\ndef longest_common_substring_index(input_str1, input_str2):\n    if not input_str1 or not input_str2:\n        return 0\n    len1 = len(input_str1)\n    len2 = len(input_str2)\n    dp = [[0]*(len2+1) for _ in range(len1+1)]\n    res = 0\n    index = 0\n    for i in range(1, len1+1):\n        for j in range(1, len2+1):\n            if input_str1[i-1] == input_\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\"\"\"\n\"\"\"\n\nimport sys\n\ndef main():\n    print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  \n    temp = [int(i) for i in sys.stdin.readline().strip().split()]  \n    max_temp = []  \n    for i in range(len(temp)-2):  \n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))  \n    index = max_temp.index(min(max_temp))  \n    print(index+1, max_temp[index])  \n\nif __name__ == '__main__':\n    main()  \n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    f = int(sys.stdin.readline().strip())\n    g = int(sys.stdin.readline().strip())\n    h = int(sys.stdin.readline().strip())\n    i = int(sys.stdin.readline().strip())\n    if a + b + c == d + e + f == g + h + i == a + d + g == b + e + h == c + f + i == a + e + i == c + e + g:\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()] # \u8bfb\u53d6\u4e00\u884c\u7684\u6570\u636e\u5e76\u8f6c\u6362\u4e3a\u6574\u6570\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index]) # \u8f93\u51fa\u7ed3\u679c\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650119097,
  "object": "edit"
}
2022-04-16 14:25:44.665069 fix syntax errors 9 ["import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n", '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Time    : 2020/1/8 11:02\n# @Author  : tanxw\n# @Desc    : 列表解析\n\nimport sys\n\n    """\n    输入：\n    5\n    2 3 4 5 6\n    输出：\n    2 4\n    """\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp) - 2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index + 1, max_temp[index])\n\n\nif __name__ == \'__main__\':\n    main()\n', "\n# -*- coding: utf-8 -*-\n# 自动化测试工程师培训第一周作业\n# 1、编写一个函数，输入参数为一个字符串，输出这个字符串中最长的非重复子串的长度。（比如，输入为“abcabcbb”，输出为3，输入为“bbbbb”，输出为1。）\ndef longest_substring(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    sub_str = ''\n    for s in input_str:\n        if s in sub_str:\n            index = sub_str.index(s)\n            sub_str = sub_str[index+1:] + s\n        else:\n            sub_str += s\n        max_len = max(max_len, len(sub_str))\n    return max_len\n\n\n# 2、编写一个函数，输入参数为一个字符串，输出这个字符串中最长的回文子串的长度。（比如，输入为“babad”，输出为3，输入为“cbbd”，输出为2。）\ndef longest_palindrome(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    for i in range(len(input_str)):\n        for j in range(i+1, len(input_str)+1):\n            if input_str[i:j] == input_str[i:j][::-1]:\n                max_len = max(max_len, j-i)\n    return max_len\n\n\n# 3、编写一个函数，输入参数为一个字符串，输出这个字符串中最长的非重复子串的起始下标和长度。（比如，输入为“abcabcbb”，输出为(0,3)，输入为“bbbbb”，输出为(0,1)。）\ndef longest_substring_index(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    sub_str = ''\n    index = 0\n    for i in range(len(input_str)):\n        s = input_str[i]\n        if s in sub_str:\n            cur_len = len(sub_str)\n            if cur_len > max_len:\n                max_len = cur_len\n                index = i - max_len\n            sub_str = sub_str[sub_str.index(s)+1:] + s\n        else:\n            sub_str += s\n    cur_len = len(sub_str)\n    if cur_len > max_len:\n        max_len = cur_len\n        index = len(input_str) - max_len\n    return index, max_len\n\n\n# 4、编写一个函数，输入参数为一个字符串，输出这个字符串中最长的回文子串的起始下标和长度。（比如，输入为“babad”，输出为(0,3)，输入为“cbbd”，输出为(1,2)。）\ndef longest_palindrome_index(input_str):\n    if not input_str:\n        return 0\n    max_len = 0\n    index = 0\n    for i in range(len(input_str)):\n        for j in range(i+1, len(input_str)+1):\n            if input_str[i:j] == input_str[i:j][::-1]:\n                cur_len = j - i\n                if cur_len > max_len:\n                    max_len = cur_len\n                    index = i\n    return index, max_len\n\n\n# 5、编写一个函数，输入参数为两个字符串，输出这两个字符串的最长的公共子串的长度。（比如，输入为“abcde”和“cde”，输出为3，输入为“abc”和“cde”，输出为0。）\ndef longest_common_substring(input_str1, input_str2):\n    if not input_str1 or not input_str2:\n        return 0\n    len1 = len(input_str1)\n    len2 = len(input_str2)\n    dp = [[0]*(len2+1) for _ in range(len1+1)]\n    res = 0\n    for i in range(1, len1+1):\n        for j in range(1, len2+1):\n            if input_str1[i-1] == input_str2[j-1]:\n                dp[i][j] = dp[i-1][j-1] + 1\n                res = max(res, dp[i][j])\n    return res\n\n\n# 6、编写一个函数，输入参数为两个字符串，输出这两个字符串的最长的公共子串的起始下标和长度。（比如，输入为“abcde”和“cde”，输出为(2,3)，输入为“abc”和“cde”，输出为(0,0)。）\ndef longest_common_substring_index(input_str1, input_str2):\n    if not input_str1 or not input_str2:\n        return 0\n    len1 = len(input_str1)\n    len2 = len(input_str2)\n    dp = [[0]*(len2+1) for _ in range(len1+1)]\n    res = 0\n    index = 0\n    for i in range(1, len1+1):\n        for j in range(1, len2+1):\n            if input_str1[i-1] == input_\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n", '"""\n"""\n\nimport sys\n\ndef main():\n    print()\n\nif __name__ == \'__main__\':\n    main()\n', "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())  \n    temp = [int(i) for i in sys.stdin.readline().strip().split()]  \n    max_temp = []  \n    for i in range(len(temp)-2):  \n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))  \n    index = max_temp.index(min(max_temp))  \n    print(index+1, max_temp[index])  \n\nif __name__ == '__main__':\n    main()  \n", "\n\nimport sys\n\ndef main():\n    a = int(sys.stdin.readline().strip())\n    b = int(sys.stdin.readline().strip())\n    c = int(sys.stdin.readline().strip())\n    d = int(sys.stdin.readline().strip())\n    e = int(sys.stdin.readline().strip())\n    f = int(sys.stdin.readline().strip())\n    g = int(sys.stdin.readline().strip())\n    h = int(sys.stdin.readline().strip())\n    i = int(sys.stdin.readline().strip())\n    if a + b + c == d + e + f == g + h + i == a + d + g == b + e + h == c + f + i == a + e + i == c + e + g:\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()] # 读取一行的数据并转换为整数\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index]) # 输出结果\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 14:25:44.665183 size on output set 8
2022-04-16 14:25:44.665195 num operations 1
2022-04-16 14:25:44.665200 size on input set 1
2022-04-16 14:25:53.904698 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) + 1\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) + 1\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) + 1\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) + 1\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) \n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1]))\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1)\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) # first day\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) # ith day\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1]))\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650119144,
  "object": "edit"
}
2022-04-16 14:25:53.905033 fix syntax errors 9 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) + 1\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) + 1\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) + 1\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) + 1\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) \n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1]))\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1)\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])) # first day\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])) # ith day\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1]))\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1])\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 14:25:53.905089 size on output set 7
2022-04-16 14:25:53.905099 num operations 1
2022-04-16 14:25:53.905104 size on input set 1
2022-04-16 14:26:05.408631 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n    \nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(t[i])\n        elif i == n-1:\n            print(t[i])\n        else:\n            print(max(t[i-1], t[i+1]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = t[0]\n    max_day = 0\n    for i in range(n-2): \n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 10**5\n    max_day = 0\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = t[0]\n    max_day = 0\n    for i in range(1, n-1):\n        if max(t[i-1], t[i+1]) < max_temp:\n            max_temp = max(t[i-1], t[i+1])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    for i in range(n - 2):\n        if max(t[i], t[i + 2]) < max_temp:\n            max_temp = max(t[i], t[i + 2])\n            max_day = i + 1\n    print(max_day, max_temp)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    # print(t[max_day])\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "def main():\n    # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    a, b = map(int, input().split())\n    # \u51fa\u529b\n    print(a*b)\n\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef get_max_temp(t, i):\n    max_temp = 100\n    max_day = 0\n    for j in range(i-1, i+2):\n        if t[j] < max_temp:\n            max_temp = t[j]\n            max_day = j + 1\n    return max_day, max_temp\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    if n == 2:\n        print(1, min(t[0], t[1]))\n    else:\n        max_day, max_temp = get_max_temp(t, 0)\n        for i in range(1, n-2):\n            day, temp = get_max_temp(t, i)\n            if temp > max_temp:\n                max_day = day\n                max_temp = temp\n        print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650119153,
  "object": "edit"
}
2022-04-16 14:26:05.408864 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n    \nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    for i in range(n):\n        if i == 0:\n            print(t[i])\n        elif i == n-1:\n            print(t[i])\n        else:\n            print(max(t[i-1], t[i+1]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = t[0]\n    max_day = 0\n    for i in range(n-2): \n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 10**5\n    max_day = 0\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = t[0]\n    max_day = 0\n    for i in range(1, n-1):\n        if max(t[i-1], t[i+1]) < max_temp:\n            max_temp = max(t[i-1], t[i+1])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    for i in range(n - 2):\n        if max(t[i], t[i + 2]) < max_temp:\n            max_temp = max(t[i], t[i + 2])\n            max_day = i + 1\n    print(max_day, max_temp)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 100\n    max_day = 0\n    # print(t[max_day])\n    for i in range(n-2):\n        if max(t[i], t[i+2]) < max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    # スペース区切りの整数の入力\n    a, b = map(int, input().split())\n    # 出力\n    print(a*b)\n\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef get_max_temp(t, i):\n    max_temp = 100\n    max_day = 0\n    for j in range(i-1, i+2):\n        if t[j] < max_temp:\n            max_temp = t[j]\n            max_day = j + 1\n    return max_day, max_temp\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    if n == 2:\n        print(1, min(t[0], t[1]))\n    else:\n        max_day, max_temp = get_max_temp(t, 0)\n        for i in range(1, n-2):\n            day, temp = get_max_temp(t, i)\n            if temp > max_temp:\n                max_day = day\n                max_temp = temp\n        print(max_day, max_temp)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 14:26:05.409031 size on output set 9
