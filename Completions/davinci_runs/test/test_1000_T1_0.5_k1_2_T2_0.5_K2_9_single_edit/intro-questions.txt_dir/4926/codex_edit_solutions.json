["\n\n#Solution:\n\nimport math\n\n\ndef e_approx(n):\n    return math.e\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n + 1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef add(a, b):\n    return a + b\n    \ndef subtract(a, b):\n    return a - b\n    \ndef multiply(a, b):\n    return a * b\n    \ndef divide(a, b):\n    return a / b\n    \ndef main():\n    print(\"Select operation.\")\n    print(\"1.Add\")\n    print(\"2.Subtract\")\n    print(\"3.Multiply\")\n    print(\"4.Divide\")\n    \n    choice = input(\"Enter choice(1/2/3/4): \")\n    \n    num1 = int(input(\"Enter first number: \"))\n    num2 = int(input(\"Enter second number: \"))\n    \n    if choice == '1':\n        print(num1, \"+\", num2, \"=\", add(num1, num2))\n        \n    elif choice == '2':\n        print(num1, \"-\", num2, \"=\", subtract(num1, num2))\n        \n    elif choice == '3':\n        print(num1, \"*\", num2, \"=\", multiply(num1, num2))\n        \n    elif choice == '4':\n        print(num1, \"/\", num2, \"=\", divide(num1, num2))\n    else:\n        print(\"Invalid input\")\n        \nif __name__ == '__main__':\n    main()\n", "\n\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(input()))])) \n", "\n#Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\n#https://open.kattis.com/problems/approximatinge\n#Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "import math\n\n\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1))\n\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "import math\n\ndef euler(n):\n    return sum(1 / math.factorial(i) for i in range(n + 1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "#! /usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1.0/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "\n# test\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\nN = int(input())\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint(e)\n", "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n + 1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#Solution:\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "\nimport sys\n\ndef factorial(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n * factorial(n-1)\n\ndef euler_approx(n):\n\te = 0\n\tfor i in range(n+1):\n\t\te += 1/factorial(i)\n\treturn e\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tprint(euler_approx(n))\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(input(\"\")))]))\n", "\n\n# Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Nov  4 22:04:32 2019\n@author: han-luo\n\"\"\"\n\nimport math\n\ndef euler(n = 10):\n    return sum(1/math.factorial(i) for i in range(n+1)) \n", "\nimport math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n+1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "\n\nimport math\n\ndef euler(n):\n    return sum(1/math.factorial(i) for i in range(n + 1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    \n    print(eulers_number(n))\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1.0/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1.0/factorial(x) for x in range(n+1)])\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "\n\n#\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "import math\nprint(sum([1/math.factorial(i) for i in range(int(input()))]))\n", "\nimport math\n\ndef euler(n):\n    return sum(1 / math.factorial(i) for i in range(n + 1))\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "import math\n\nN = int(input())\n\ne = 1\nfor n in range(1, N+1):\n    e += 1/math.factorial(n)\n\nprint(e)\n", "\n#!/usr/bin/env python3\n#Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\nimport sys\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x * factorial(x-1)\n\ndef euler(x):\n    euler = 0\n    for i in range(0, x+1):\n        euler += 1 / factorial(i)\n    return euler\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    print(euler(x))\n\nif __name__ == '__main__':\n    main()\n", "\n# pylint: disable=C0103\n\nimport sys\n\ndef factorial(num):\n    \"\"\"Return the factorial of a number.\"\"\"\n    if num == 1:\n        return 1\n    else:\n        return num * factorial(num-1)\n\ndef euler_approx(num):\n    \"\"\"Return the euler approximation of a number.\"\"\"\n    e = 0\n    for i in range(num+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    \"\"\"Main function.\"\"\"\n    num = int(sys.stdin.readline())\n    print(euler_approx(num))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\n\nN = int(input())\n\ne = 1\nfor n in range(1, N+1):\n    e += 1 / math.factorial(n)\n\nprint(e)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(input())\n\nprint(sum([1/factorial(x) for x in range(n)]))\n", "import sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nn = int(sys.stdin.readline())\n\nprint(sum([1 / factorial(x) for x in range(n)]))\n", "#!/usr/bin/python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n+1)]))\n", "\n#math\n#Solution:\n\nimport math\n\ndef factorial(x):\n    if x == 0:\n        return 1\n    else:\n        return x*factorial(x-1)\n\ndef e_approx(n):\n    approx = 0\n    for i in range(n+1):\n        approx += 1/factorial(i)\n    return approx\n\ndef main():\n    n = int(input())\n    print(e_approx(n))\n\nmain()\n", "\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\n\nprint(sum([1/factorial(x) for x in range(n+1)]))\n", "\n\nimport sys\n\ndef main():\n    # n = int(sys.stdin.readline().strip())\n    # print(euler(n))\n    print(\"Hello World\")\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler_approx(n):\n    e = 0\n    for i in range(n+1):\n        e += 1/factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(euler_approx(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef euler(n, precision=100):\n    return sum(1/math.factorial(i) for i in range(n+1)) + 10**-precision\n\nif __name__ == '__main__':\n    print(euler(int(input())))\n", "import sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef eulers_number(n):\n    return sum([1/factorial(x) for x in range(n+1)])\n\nif __name__ == '__main__':\n    n = int(sys.stdin.read())\n    print(eulers_number(n))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n+1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n)) \n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nn = int(sys.stdin.readline())\nprint(sum([1/factorial(x) for x in range(n+1)]))\n", "\n\nimport math\nprint(sum([1/math.factorial(i) for i in range(int(raw_input()))]))\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef euler(n):\n    e = 0\n    for i in range(0, n + 1):\n        e += 1 / factorial(i)\n    return e\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    print(euler(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\nprint(sum([1 / math.factorial(i) for i in range(int(input()))]))\n"]