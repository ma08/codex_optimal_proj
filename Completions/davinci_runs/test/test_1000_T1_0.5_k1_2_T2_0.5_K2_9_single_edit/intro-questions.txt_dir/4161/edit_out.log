2022-04-16 05:26:15.600253 num operations 1
2022-04-16 05:26:15.600273 size on input set 1
2022-04-16 05:26:24.513453 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    k = int(input())\n\n    ans = 0 \n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, gcd(b, c))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n# -*- coding: utf-8 -*-\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += (a * b * c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650086775,
  "object": "edit"
}
2022-04-16 05:26:24.513733 fix syntax errors 9 ["\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    k = int(input())\n\n    ans = 0 \n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, gcd(b, c))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*-\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += (a * b * c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    k = int(input())\n\n    ans = 0\n    for a in range(1, k + 1):\n        for b in range(1, k + 1):\n            for c in range(1, k + 1):\n                ans += gcd(a, b)\n                ans += gcd(b, c)\n                ans += gcd(c, a)\n                ans += gcd(gcd(a, b), c)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 05:26:24.513855 size on output set 6
2022-04-16 05:26:24.513866 num operations 1
2022-04-16 05:26:24.513871 size on input set 1
2022-04-16 05:26:34.482157 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\nprint(sum([gcd(gcd(a, b), c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    print(sum([gcd(a, b) for a in range(1, K+1) for b in range(1, K+1)]))\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport math\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef main():\n    cnt = 0\n    for a in range(1, K+1):\n        for b in range(1, K+1):\n            for c in range(1, K+1):\n                cnt += math.gcd(math.gcd(a, b), c)\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))  # NOQA\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\nK = int(sys.stdin.readline())\nprint(sum([gcd(gcd(a, b), c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n"
    }
  ],
  "created": 1650086784,
  "object": "edit"
}
2022-04-16 05:26:34.482397 fix syntax errors 9 ['\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n', '\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)])\n\nmain()\n', '\nimport sys\n\nK = int(sys.stdin.readline())\nprint(sum([gcd(gcd(a, b), c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n', '\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n', 'import sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef main():\n    print(sum([gcd(a, b) for a in range(1, K+1) for b in range(1, K+1)]))\n\nmain()\n', '\n\nimport math\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef main():\n    cnt = 0\n    for a in range(1, K+1):\n        for b in range(1, K+1):\n            for c in range(1, K+1):\n                cnt += math.gcd(math.gcd(a, b), c)\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n', '\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n\nmain()\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nK = int(sys.stdin.readline())\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\ndef gcd3(a, b, c):\n    return gcd(gcd(a, b), c)\n\ndef main():\n    print(sum([gcd3(a, b, c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))  # NOQA\n\nmain()\n', '\nimport sys\n\nK = int(sys.stdin.readline())\nprint(sum([gcd(gcd(a, b), c) for a in range(1, K+1) for b in range(1, K+1) for c in range(1, K+1)]))\n']
2022-04-16 05:26:34.482439 size on output set 6
