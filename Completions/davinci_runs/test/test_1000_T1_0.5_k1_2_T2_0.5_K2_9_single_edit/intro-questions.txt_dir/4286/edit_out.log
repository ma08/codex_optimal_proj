2022-04-16 06:20:38.858830 num operations 1
2022-04-16 06:20:38.858848 size on input set 1
2022-04-16 06:20:46.730095 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import heapq\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [(0, 1)]\n    heapq.heapify(q)\n    while q:\n        u = heapq.heappop(q)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                heapq.heappush(q, (spt[v], v))\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "from heapq import heappop, heappush\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [(0, 1)]\n    while q:\n        _, u = heappop(q)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                heappush(q, (spt[v], v))\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650090039,
  "object": "edit"
}
2022-04-16 06:20:46.730373 fix syntax errors 9 ["\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "import heapq\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [(0, 1)]\n    heapq.heapify(q)\n    while q:\n        u = heapq.heappop(q)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                heapq.heappush(q, (spt[v], v))\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "from heapq import heappop, heappush\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [(0, 1)]\n    while q:\n        _, u = heappop(q)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                heappush(q, (spt[v], v))\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:20:46.730510 size on output set 4
2022-04-16 06:20:46.730521 num operations 1
2022-04-16 06:20:46.730526 size on input set 1
2022-04-16 06:20:56.385217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n, m = map(int, raw_input().split())\n    a = list(map(int, raw_input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, raw_input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    print('Hello, World!')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = [[0, 0, 0] for _ in range(m)]\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers[i] = [x, y, c]\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] >= c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650090046,
  "object": "edit"
}
2022-04-16 06:20:56.385461 fix syntax errors 9 ['\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, raw_input().split())\n    a = list(map(int, raw_input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, raw_input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print(\'Hello, World!\')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = [[0, 0, 0] for _ in range(m)]\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers[i] = [x, y, c]\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] >= c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:20:56.385622 size on output set 7
