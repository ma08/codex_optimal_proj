2022-04-16 12:25:46.286077 num operations 1
2022-04-16 12:25:46.286098 size on input set 1
2022-04-16 12:25:56.543447 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # Read input\n    N = int(input())\n    M = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    # read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # initialize array\n    A = [0] * N\n\n    # process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [[]]\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [None] * N\n    for i in range(N): M[i] = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [None] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join(str(x) for x in A))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j and M[i] == M[j]:\n                A[i] = 1\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(A)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    # Read input file\n    input_file = open(\"input.txt\", \"r\")\n    N = int(input_file.readline())\n    M = [list(map(int, line.split())) for line in input_file]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Write output file\n    output_file = open(\"output.txt\", \"w\")\n    output_file.write(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650111946,
  "object": "edit"
}
2022-04-16 12:25:56.543763 fix syntax errors 9 ['\ndef main():\n    # Read input\n    N = int(input())\n    M = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # initialize array\n    A = [0] * N\n\n    # process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [[]]\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [None] * N\n    for i in range(N): M[i] = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [None] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join(str(x) for x in A))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = [int(x) for x in input().split()]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j and M[i] == M[j]:\n                A[i] = 1\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(A)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input file\n    input_file = open("input.txt", "r")\n    N = int(input_file.readline())\n    M = [list(map(int, line.split())) for line in input_file]\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Write output file\n    output_file = open("output.txt", "w")\n    output_file.write(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:25:56.543888 size on output set 9
2022-04-16 12:25:56.543906 num operations 1
2022-04-16 12:25:56.543914 size on input set 1
2022-04-16 12:26:04.765722 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    a[i] = m[i][i+1]\n\nprint(*a)\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nm = [list(map(int, input().split())) for i in range(N)]\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\na = []\n\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        a.append(m[i][j])\n\nprint(*a)\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    }
  ],
  "created": 1650111956,
  "object": "edit"
}
2022-04-16 12:26:04.765978 fix syntax errors 9 ['\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    a[i] = m[i][i+1]\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\nN = int(input())\nm = [list(map(int, input().split())) for i in range(N)]\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\n\nN = int(input())\na = []\n\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        a.append(m[i][j])\n\nprint(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n']
2022-04-16 12:26:04.766032 size on output set 5
2022-04-16 12:26:04.766049 num operations 1
2022-04-16 12:26:04.766054 size on input set 1
2022-04-16 12:26:12.186105 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split(' ')])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    print(*[sum(m[i]) % 2 for i in range(n)])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    m = [[int(x) for x in input().split()] for i in range(n)]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    m = [int(x) for x in input().split()]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    m = [int(x) for x in input().split()]\n    m = [m[i:i+n] for i in range(0, len(m), n)]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a, sep=\" \")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650111964,
  "object": "edit"
}
2022-04-16 12:26:12.186401 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split(\' \')])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    print(*[sum(m[i]) % 2 for i in range(n)])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    m = [[int(x) for x in input().split()] for i in range(n)]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    m = [int(x) for x in input().split()]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    m = [int(x) for x in input().split()]\n    m = [m[i:i+n] for i in range(0, len(m), n)]\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a, sep=" ")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:26:12.186446 size on output set 8
2022-04-16 12:26:12.186458 num operations 1
2022-04-16 12:26:12.186463 size on input set 1
2022-04-16 12:26:25.558588 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(raw_input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, raw_input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input()) # input number of elements\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input()) # number of nodes\n    matrix = []\n    for _ in range(n_val): # get the edges\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val): # set diagonal elements to infinity\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1): # fill the upper half of the matrix\n        for j in range(i - 1, -1, -1): \n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # fill the lower half of the matrix\n        for j in range(i + 1, n_val): \n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # find the maximum element in each row\n        for j in range(n_val): \n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val): # print the result\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):  # pylint: disable=W0612\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[i][j] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(0, i):\n            matrix[i][j] = matrix[i][j] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, 0, -1):\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input()) # number of nodes\n    matrix = []\n    for _ in range(n_val): # input the graph\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val): # set diagonal values to infinity\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1): # update upper triangle\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # update lower triangle\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # update the diagonal\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val): # print the result\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650111972,
  "object": "edit"
}
2022-04-16 12:26:25.558921 fix syntax errors 9 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(raw_input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, raw_input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input()) # input number of elements\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input()) # number of nodes\n    matrix = []\n    for _ in range(n_val): # get the edges\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val): # set diagonal elements to infinity\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1): # fill the upper half of the matrix\n        for j in range(i - 1, -1, -1): \n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # fill the lower half of the matrix\n        for j in range(i + 1, n_val): \n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # find the maximum element in each row\n        for j in range(n_val): \n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val): # print the result\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):  # pylint: disable=W0612\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[i][j] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(0, i):\n            matrix[i][j] = matrix[i][j] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())\n    matrix = []\n    for _ in range(n_val):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, 0, -1):\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input()) # number of nodes\n    matrix = []\n    for _ in range(n_val): # input the graph\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val): # set diagonal values to infinity\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1): # update upper triangle\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # update lower triangle\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val): # update the diagonal\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val): # print the result\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 12:26:25.559003 size on output set 9
2022-04-16 12:26:25.559014 num operations 1
2022-04-16 12:26:25.559018 size on input set 1
2022-04-16 12:26:38.148456 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    print(arr)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().strip().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res, sep=\"\\n\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input().strip())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().strip().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    i = 0\n    j = 0\n    arr = [[0] * n] * m\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())  # get the number of rows and columns\n    i = 0\n    j = 0\n    arr = []  # create an empty array\n    while i < n:\n        arr.append(list(map(int, input().split())))  # get the array from the input\n        i += 1\n    res = [0] * n  # create a result array with zeros\n    while j < n:\n        res[j] = arr[j][0]  # fill the result array with the first column of the input array\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]  # fill the result array with the first row of the input array\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]  # XOR the result array with the rest of the input array\n            j += 1\n        i += 1\n    print(*res)  # print the result array\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    res = [0] * n\n    for j in range(n):\n        res[j] = arr[j][0] ^ arr[0][j]\n    for i in range(1, n):\n        for j in range(1, n):\n            if i != j and arr[i][j] == 1:\n                res[i] = res[i] ^ 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650111985,
  "object": "edit"
}
2022-04-16 12:26:38.148795 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    i = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    print(arr)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().strip().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res, sep="\\n")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input().strip())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().strip().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    i = 0\n    j = 0\n    arr = [[0] * n] * m\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())  # get the number of rows and columns\n    i = 0\n    j = 0\n    arr = []  # create an empty array\n    while i < n:\n        arr.append(list(map(int, input().split())))  # get the array from the input\n        i += 1\n    res = [0] * n  # create a result array with zeros\n    while j < n:\n        res[j] = arr[j][0]  # fill the result array with the first column of the input array\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]  # fill the result array with the first row of the input array\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]  # XOR the result array with the rest of the input array\n            j += 1\n        i += 1\n    print(*res)  # print the result array\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    res = [0] * n\n    for j in range(n):\n        res[j] = arr[j][0] ^ arr[0][j]\n    for i in range(1, n):\n        for j in range(1, n):\n            if i != j and arr[i][j] == 1:\n                res[i] = res[i] ^ 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:26:38.148923 size on output set 8
2022-04-16 12:26:38.148939 num operations 1
2022-04-16 12:26:38.148944 size on input set 1
2022-04-16 12:26:49.356483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for _ in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    str = input()\n    print(str)\n\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N): \n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [0] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] == 0:\n                    array[i] = matrix[i][j]\n                if array[j] == 0:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] == 0:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                else:\n                    if array[j] is None:\n                        array[j] = matrix[i][j]\n                    else:\n                        if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                            array[i] = -1\n                            array[j] = -1\n                            break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for _ in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650111998,
  "object": "edit"
}
2022-04-16 12:26:49.356791 fix syntax errors 9 ['\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for _ in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    str = input()\n    print(str)\n\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array), end="")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N): \n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [0] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] == 0:\n                    array[i] = matrix[i][j]\n                if array[j] == 0:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] == 0:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                else:\n                    if array[j] is None:\n                        array[j] = matrix[i][j]\n                    else:\n                        if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                            array[i] = -1\n                            array[j] = -1\n                            break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for _ in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:26:49.356866 size on output set 9
2022-04-16 12:26:49.356883 num operations 1
2022-04-16 12:26:49.356888 size on input set 1
2022-04-16 12:27:00.768344 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\n    a[i] = sum(M[i])\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n# input\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n# solution\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\n# output\nprint(\" \".join([str(x) for x in a])) # format: 1 2 3 4\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    N = int(input())\n    M = [0] * N\n    for i in range(N):\n        M[i] = list(map(int, input().split()))\n\n    a = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            a[i] |= M[i][j]\n            a[j] |= M[i][j]\n\n    print(\" \".join([str(x) for x in a]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    }
  ],
  "created": 1650112009,
  "object": "edit"
}
2022-04-16 12:27:00.768727 fix syntax errors 9 ['\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', '\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', '\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', '\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', '\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', 'import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\n    a[i] = sum(M[i])\n\nprint(" ".join([str(x) for x in a]))\n', '\n\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n# input\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n# solution\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\n# output\nprint(" ".join([str(x) for x in a])) # format: 1 2 3 4\n', '\nimport sys\n\ndef main():\n    N = int(input())\n    M = [0] * N\n    for i in range(N):\n        M[i] = list(map(int, input().split()))\n\n    a = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            a[i] |= M[i][j]\n            a[j] |= M[i][j]\n\n    print(" ".join([str(x) for x in a]))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n']
2022-04-16 12:27:00.768778 size on output set 4
2022-04-16 12:27:00.768787 num operations 1
2022-04-16 12:27:00.768792 size on input set 1
2022-04-16 12:27:08.279310 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * (N+1)\n    for i in range(N):\n        for j in range(i+1, N+1):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N+1):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input()) \n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n            arr[j] |= matrix[i][j]\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * (N+1)\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650112020,
  "object": "edit"
}
2022-04-16 12:27:08.279576 fix syntax errors 9 ['\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * (N+1)\n    for i in range(N):\n        for j in range(i+1, N+1):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N+1):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input()) \n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n            arr[j] |= matrix[i][j]\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * (N+1)\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:27:08.279685 size on output set 7
