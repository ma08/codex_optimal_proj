2022-04-16 09:04:13.358516 num operations 1
2022-04-16 09:04:13.358532 size on input set 1
2022-04-16 09:04:21.051630 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2]))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 2,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1] \n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 3,
      "text": "def person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1] \n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 4,
      "text": "from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 5,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 6,
      "text": "from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 7,
      "text": "from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=itemgetter(2)))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 8,
      "text": "\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #sorted(people,key=itemgetter(2))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    }
  ],
  "created": 1650099853,
  "object": "edit"
}
2022-04-16 09:04:21.051911 fix syntax errors 9 ['\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2]))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1] \n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', 'def person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1] \n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', 'from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', 'from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', 'from operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=itemgetter(2)))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\nfrom operator import itemgetter\ndef person_lister(f):\n    def inner(people):\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #sorted(people,key=itemgetter(2))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n']
2022-04-16 09:04:21.052070 size on output set 8
2022-04-16 09:04:21.052082 num operations 1
2022-04-16 09:04:21.052088 size on input set 1
2022-04-16 09:04:28.534556 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 2,
      "text": "\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n\n\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 3,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 4,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 5,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #f is name_format\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 6,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 7,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    },
    {
      "index": 8,
      "text": "\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return (\"Mr. \" if person[3] == \"M\" else \"Ms. \") + person[0] + \" \" + person[1]\n\nif __name__ == '__main__':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep='\\n')\n"
    }
  ],
  "created": 1650099861,
  "object": "edit"
}
2022-04-16 09:04:28.534833 fix syntax errors 9 ['\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n\n\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f,sorted(people,key=lambda x: int(x[2]))) #f is name_format\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return map(f, sorted(people, key=lambda x: int(x[2])))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n', '\n\ndef person_lister(f):\n    def inner(people):\n        # complete the function\n        return list(map(f,sorted(people,key=lambda x: int(x[2]))))\n    return inner\n\n@person_lister\ndef name_format(person):\n    return ("Mr. " if person[3] == "M" else "Ms. ") + person[0] + " " + person[1]\n\nif __name__ == \'__main__\':\n    people = [input().split() for i in range(int(input()))]\n    print(*name_format(people), sep=\'\\n\')\n']
2022-04-16 09:04:28.534976 size on output set 5
