2022-04-16 12:45:36.432434 num operations 1
2022-04-16 12:45:36.432452 size on input set 1
2022-04-16 12:45:44.022053 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n\tn = int(input())\n\tcorrect = []\n\tfor i in range(n):\n\t\tcorrect.append(input())\n\tprint(n - 1)\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = [\"\"] * n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = [0] * n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = ['']\n    for i in range(n):\n        correct.append(input().strip())\n    print(n - len(set(correct)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n - 1, '\\n')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650113136,
  "object": "edit"
}
2022-04-16 12:45:44.022331 fix syntax errors 9 ["\n\ndef main():\n\tn = int(input())\n\tcorrect = []\n\tfor i in range(n):\n\t\tcorrect.append(input())\n\tprint(n - 1)\n\nif __name__ == '__main__':\n\tmain()\n", '\n\ndef main():\n    n = int(input())\n    correct = [""] * n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == \'__main__\':\n    main()\n', "\n\ndef main():\n    n = int(input())\n    correct = [0] * n\n    for i in range(n):\n        correct[i] = input()\n    print(n - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = ['']\n    for i in range(n):\n        correct.append(input().strip())\n    print(n - len(set(correct)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(correct)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    correct = []\n    for i in range(n):\n        correct.append(input())\n    print(n - 1, '\\n')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 12:45:44.022366 size on output set 7
2022-04-16 12:45:44.022377 num operations 1
2022-04-16 12:45:44.022382 size on input set 1
2022-04-16 12:45:51.973339 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\":\n            correct += 1\n    print(correct)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer == \"A\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    with open(\"file.txt\") as f:\n        for line in f:\n            print(line)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == b\"A\\n\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\":\n            correct += 1\n    print(correct)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer == \"A\\n\":\n            correct += 1\n    print(str(correct))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == \"A\\n\":\n            correct += 1\n    print(correct)\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    for i in range(N):\n        print(sys.stdin.readline())\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650113144,
  "object": "edit"
}
2022-04-16 12:45:51.973610 fix syntax errors 9 ['\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A\\n":\n            correct += 1\n    print(correct)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    print("Hello World")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer == "A":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\nimport sys\n\ndef main():\n    with open("file.txt") as f:\n        for line in f:\n            print(line)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == b"A\\n":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A":\n            correct += 1\n    print(correct)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline().strip()\n        if answer == "A\\n":\n            correct += 1\n    print(str(correct))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    correct = 0\n    for i in range(n):\n        answer = sys.stdin.readline()\n        if answer == "A\\n":\n            correct += 1\n    print(correct)\n\nmain()\n', 'import sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    for i in range(N):\n        print(sys.stdin.readline())\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:45:51.973722 size on output set 9
2022-04-16 12:45:51.973733 num operations 1
2022-04-16 12:45:51.973739 size on input set 1
2022-04-16 12:46:32.405332 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 1,
      "text": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\nprint(score)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nanswers = [input() for i in range(n)]\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        score += answers[i] == answers[i + 1]\n\nprint(score)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1] and answers[i] == \"cookie\":\n            score += 1\n\nprint(score)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        if answers[i] == answers[i + 1]:\n            score += 1 \n\nprint(score)\n"
    },
    {
      "index": 8,
      "text": "\nprint(\"hello world!\")\n"
    }
  ],
  "created": 1650113152,
  "object": "edit"
}
2022-04-16 12:46:32.405573 fix syntax errors 9 ['n = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n', '\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n', '\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\nprint(score)\n', '\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1]:\n            score += 1\n\nprint(score)\n', '\nn = int(input())\nanswers = [input() for i in range(n)]\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        score += answers[i] == answers[i + 1]\n\nprint(score)\n', '\n\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i+1 < n:\n        if answers[i] == answers[i+1] and answers[i] == "cookie":\n            score += 1\n\nprint(score)\n', '\nn = int(input())\nanswers = []\nfor i in range(n):\n    answers.append(input())\n\nscore = 0\nfor i in range(n):\n    if i + 1 < n:\n        if answers[i] == answers[i + 1]:\n            score += 1 \n\nprint(score)\n', '\nprint("hello world!")\n']
2022-04-16 12:46:32.405697 size on output set 8
2022-04-16 12:46:32.405709 num operations 1
2022-04-16 12:46:32.405714 size on input set 1
2022-04-16 12:47:11.911651 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input(\"\"))\nans = []\nfor i in range(n):\n    ans.append(input(\"\"))\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 4,
      "text": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 6,
      "text": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    },
    {
      "index": 8,
      "text": "n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n"
    }
  ],
  "created": 1650113192,
  "object": "edit"
}
2022-04-16 12:47:11.911907 fix syntax errors 9 ['\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n', '\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n', '\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n', '\n\nn = int(input(""))\nans = []\nfor i in range(n):\n    ans.append(input(""))\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n', 'n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n', '\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[i+1]:\n        score += 1\nprint(score)\n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n', '\nn = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n', 'n = int(input())\nans = []\nfor i in range(n):\n    ans.append(input())\nscore = 0\nfor i in range(n):\n    if i == n-1:\n        score += 1\n    elif ans[i] == ans[n-1]:\n        score += 1\nprint(score)\n']
2022-04-16 12:47:11.912017 size on output set 5
2022-04-16 12:47:11.912029 num operations 1
2022-04-16 12:47:11.912034 size on input set 1
2022-04-16 12:47:19.294410 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':  # == is for comparing\n        score += 1\nprint(score)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = [input() for i in range(n)]\nc = 0\nfor i in range(n):\n    if a[i] == 'A':\n        c += 1\nprint(c)\n"
    },
    {
      "index": 2,
      "text": "# coding: utf-8\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A': \n        score += 1\nprint(score)\n"
    },
    {
      "index": 4,
      "text": "# -*- coding: utf-8 -*-\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score) \n"
    },
    {
      "index": 6,
      "text": "\nfor i in range(1, 10):\n    print(i)\n"
    },
    {
      "index": 7,
      "text": "# -*- coding: utf-8 -*-\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == \"A\":\n        score += 1\nprint(score)\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A' or a[i] == 'C' or a[i] == 'G' or a[i] == 'T':\n        score += 1\nprint(score)\n"
    }
  ],
  "created": 1650113231,
  "object": "edit"
}
2022-04-16 12:47:19.294650 fix syntax errors 9 ["n = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':  # == is for comparing\n        score += 1\nprint(score)\n", "\n\nn = int(input())\na = [input() for i in range(n)]\nc = 0\nfor i in range(n):\n    if a[i] == 'A':\n        c += 1\nprint(c)\n", "# coding: utf-8\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n", "\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A': \n        score += 1\nprint(score)\n", "# -*- coding: utf-8 -*-\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score)\n", "\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A':\n        score += 1\nprint(score) \n", '\nfor i in range(1, 10):\n    print(i)\n', '# -*- coding: utf-8 -*-\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == "A":\n        score += 1\nprint(score)\n', "\n\nn = int(input())\na = [input() for i in range(n)]\nscore = 0\nfor i in range(n):\n    if a[i] == 'A' or a[i] == 'C' or a[i] == 'G' or a[i] == 'T':\n        score += 1\nprint(score)\n"]
2022-04-16 12:47:19.294683 size on output set 9
2022-04-16 12:47:19.294694 num operations 1
2022-04-16 12:47:19.294699 size on input set 1
2022-04-16 12:47:26.912212 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1 and i != n-2]\n\nprint(len(ans))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1] # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067n-1\u756a\u76ee\u4ee5\u5916\u3092\u53d6\u308a\u51fa\u3059\n# \u53d6\u308a\u51fa\u3057\u305f\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u6570\u3092\u51fa\u529b\n\nprint(len(ans))\n"
    },
    {
      "index": 3,
      "text": "\na = input().split()\nprint(len(a))\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1 and i != n-2]\n\nprint(len(ans))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nans = input().split()\nans = [ans[i] for i in range(len(ans)) if i != n-1]\nprint(len(ans))\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nans = list(map(int, input().split()))\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(*ans)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(len(ans))\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\n\n\nprint(len(ans))\n"
    }
  ],
  "created": 1650113239,
  "object": "edit"
}
2022-04-16 12:47:26.912437 fix syntax errors 9 ['\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1 and i != n-2]\n\nprint(len(ans))\n', '\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n - 1]\n\nprint(len(ans))\n', '\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1] # リスト内包表記でn-1番目以外を取り出す\n# 取り出したリストの要素数を出力\n\nprint(len(ans))\n', '\na = input().split()\nprint(len(a))\n', '\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1 and i != n-2]\n\nprint(len(ans))\n', '\n\nn = int(input())\nans = input().split()\nans = [ans[i] for i in range(len(ans)) if i != n-1]\nprint(len(ans))\n', '\nn = int(input())\nans = list(map(int, input().split()))\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(*ans)\n', '\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\nprint(len(ans))\n', '\n\nn = int(input())\nans = input().split()\n\nans = [ans[i] for i in range(len(ans)) if i != n-1]\n\n\n\nprint(len(ans))\n']
2022-04-16 12:47:26.912473 size on output set 8
2022-04-16 12:47:26.912483 num operations 1
2022-04-16 12:47:26.912489 size on input set 1
2022-04-16 12:47:39.238882 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\ns = 0\nfor i in range(n):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439\ns = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b \u0410\ni = 0  # \u0421\u0447\u0435\u0442\u0447\u0438\u043a\nwhile i < n:\n    answer = input()  # \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441\n    if answer == 'A':  # \u0415\u0441\u043b\u0438 \u043e\u0442\u0432\u0435\u0442 \u0410\n        s += 1  # \u0422\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b \u0410 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u043d\u0430 1\n    i += 1  # \u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a\nprint(s)  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439, \u043a\u043e\u0433\u0434\u0430 \u0431\u044b\u043b \u0410\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 4,
      "text": "\"\"\"\n\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u0430 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u2014 \u0441\u0443\u043c\u043c\u0443 \u0431\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f.\n\"\"\"\n\n\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 6,
      "text": "n = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    },
    {
      "index": 8,
      "text": "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"
    }
  ],
  "created": 1650113246,
  "object": "edit"
}
2022-04-16 12:47:39.239271 fix syntax errors 9 ["\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "#!/usr/bin/env python3\n\nn = int(input())\ns = 0\nfor i in range(n):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "\nn = int(input())  # Количество дней\ns = 0  # Количество дней, когда был А\ni = 0  # Счетчик\nwhile i < n:\n    answer = input()  # Считываем ответ на вопрос\n    if answer == 'A':  # Если ответ А\n        s += 1  # То количество дней, когда был А увеличиваем на 1\n    i += 1  # Увеличиваем счетчик\nprint(s)  # Выводим количество дней, когда был А\n", "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", '"""\nВ качестве ответа в первой строке выведите количество правильных ответов, а во второй — сумму баллов за все задания.\n"""\n\n\n\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == \'A\':\n        s += 1\nprint(s)\n', "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "n = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n", "\nn = int(input())\ns = 0\nfor i in range(1, n+1):\n    answer = input()\n    if answer == 'A':\n        s += 1\nprint(s)\n"]
2022-04-16 12:47:39.239359 size on output set 5
2022-04-16 12:47:39.239375 num operations 1
2022-04-16 12:47:39.239383 size on input set 1
2022-04-16 12:47:46.476224 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\n\nprint(n-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nx = input()\nprint(n-2)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nx = input()\nprint(n-1)\n"
    },
    {
      "index": 3,
      "text": "\n\nn = int(input())\nx = input()\nprint(n)\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport os\n\ndef main():\n    n = int(input())\n    x = input()\n    print(n-1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nx = input()\nprint(n-2)\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\nx = input()\nprint(n - 1)\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\nx = int(input())\nprint(n-x)\n"
    },
    {
      "index": 8,
      "text": "\ns = input()\nprint(s[1:len(s)])\n"
    }
  ],
  "created": 1650113259,
  "object": "edit"
}
2022-04-16 12:47:46.476453 fix syntax errors 9 ['n = int(input())\n\n\nprint(n-1)\n', '\n\nn = int(input())\nx = input()\nprint(n-2)\n', '\nn = int(input())\nx = input()\nprint(n-1)\n', '\n\nn = int(input())\nx = input()\nprint(n)\n', '\n\nimport sys\nimport os\n\ndef main():\n    n = int(input())\n    x = input()\n    print(n-1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nn = int(input())\nx = input()\nprint(n-2)\n', '\n\nn = int(input())\nx = input()\nprint(n - 1)\n', '\n\nn = int(input())\nx = int(input())\nprint(n-x)\n', '\ns = input()\nprint(s[1:len(s)])\n']
2022-04-16 12:47:46.476477 size on output set 8
