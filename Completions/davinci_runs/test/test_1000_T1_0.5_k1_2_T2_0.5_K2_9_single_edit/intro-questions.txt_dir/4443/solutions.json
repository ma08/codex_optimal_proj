["C = input()\nC = ord(C)\nC = C+1\nprint(chr(C))", "C = input()\nword = [chr(i) for i in range(97, 97+26)]\ncount = 0\nfor i in range( len(word) ):\n  if C == word[i]:\n    count = i\nprint(word[count+1])", "C =input()\nprint(chr(ord(C)+1))", "asd=input()\ndfg=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\nprint(dfg[dfg.index(asd)+1])", "c = input()\nprint((chr(ord(c) + 1)))\n", "S = 'abcdefghijklmnopqrstuvwxyz'\nprint(S[S.index(input())+1])", "print(chr(ord(input())+1))", "c = ord(input())\nprint(chr(c + 1))", "print(chr(ord(input())+1))", "C = input()\nn = chr(ord(C)+1)\nprint(n)", "C = input()\na = ord(C)\nprint(chr(a+1))", "print('abcdefghijklmnopqrstuvwxyz'['abcdefghijklmnopqrstuvwxyz'.find(input())+1])", "c = input()\nprint((chr(ord(c)+1)))\n", "ls = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a']\nprint(ls[ls.index(input())+1])", "C = input()\n \n# \u6587\u5b57\u5217\u3068\u6570\u5024\u306e\u5909\u63db\n# ord('\u6587\u5b57') / chr(\u6570\u5024) \u3067\u5909\u63db\nprint(chr(ord(C)+1))", "S = input()\nalphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\nx = alphabet.index(S)\nprint(alphabet[x+1])", "s=input()\nprint(chr(ord(s)+1))", "print(chr(ord(input())+1))", "print(chr(ord(input())+1))", "c = input()\ns = list('abcdefghijklmnopqrstuvwxyz')\n\nfor i in range(25):\n    if c == s[i]:\n        print(s[i+1])\n        return", "c = input()\ns = list('abcdefghijklmnopqrstuvwxyz')\n\nfor i in range(len(s)):\n    if c == s[i]:\n        print(s[i+1])\n        return", "import string\nsl = string.ascii_lowercase\nprint(sl[sl.find(input())+1])", "c = input()\nprint(chr(ord(c)+1))", "print(chr(ord(input()) + 1))", "a = input()\nprint(chr(ord(a)+1))", "print(chr(ord(input())+1))", "c=ord(input())\n\nprint(chr(c+1))", "c = ord(input())\nprint((chr(c + 1)))\n", "C = input()\n\nl = list('abcdefghijklmnopqrstuvwxyz')\nprint(l[l.index(C)+1])", "a = input()\nprint(chr(ord(a) + 1))", "c=input()\nletters=\"abcdefghijklmnopqrstuvwxyz\"\nfor i in range(26):\n    if c==letters[i]:\n        print(letters[i+1])", "#!/usr/bin/env python3\n\n\ndef solve(C: str):\n    return chr(ord(C) + 1)\n\n\ndef main():\n    C = input().strip()\n    answer = solve(C)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "c = input()\n\na = \"abcdefghigklmnopqrstuvwxyz\"\n\nprint((a[a.index(c) + 1]))\n", "print(chr(ord(input())+1))", "C=input()\n\na=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\n   \"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\n   \"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\nprint(a[a.index(C)+1])", "c = input()\nl = [chr(ord('a') + i) for i in range(26)]\nprint(l[l.index(c)+1])", "c=input()\nprint(chr(ord(c)+1))", "s = input()\nprint(chr(ord(s)+1))", "C=input()\n\nA=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\n   ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\"\n   ,\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\na1=A.index(C)+1\n\nprint(A[a1])", "c = input()\nprint(chr(ord(c)+1))", "C = input()\nalpha = list('abcdefghijklmnopqrstuvwxyz')\n\nprint(alpha[alpha.index(C) + 1])", "print(chr(ord(input())+1))", "C = input()\n\nprint(chr(ord(C)+1))", "# coding: utf-8\n# Your code here!\ns=input()\nans=ord(s)+1\nprint((chr(ans)))\n", "a=input()\nprint(chr(ord(a)+1))", "n = input()\na = ord(n)\nprint(chr(a+1))", "c = input()\nprint(chr(ord(c) + 1))", "C = input()\nabc = \"abcdefghijklmnopqrstuvwxyz\"\nprint(abc[abc.index(C) + 1])", "c = input()\nprint((chr(ord(c)+1)))\n", "print(chr(ord(input())+1))", "ans = chr(ord(input())+1)\nprint(ans)", "# coding: utf-8\n# Your code here!\ns = input()\n\nord_s = ord(s)\nans = ord_s + 1\n\nprint(chr(ans))", "ri = lambda S: [int(v) for v in S.split()]\ndef rii(): return ri(input())\n \nC = input()\nprint(chr(ord(C)+1))", "print(chr(ord(input())+1))", "c = input()\n\nans = chr(ord(c)+1)\nprint(ans)", "alp = 'abcdefghijklmnopqrstuvwxyz'\n\nprint((alp[alp.index(input())+1]))\n", "C=input()\nst='abcdefghijklmnopqrstuvwxyz'\n\nprint(st[st.find(C)+1])", "print(chr(ord(input())+1))", "l=list(\"abcdefghijklmnopqrstuvwxyz\")\nans=input()\nfor i in range(len(l)):\n    if l[i]==ans:\n        print(l[i+1])\n        break", "c=input()\nnum=ord(c)\nif num!=122:\n    print(chr(num+1))\nelse:\n    print('a')", "print(chr(ord(input()) + 1))", "c=input()\nans=chr(ord(c)+1)\nprint(ans)", "al =[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\nC = input()\n\nkk = al.index(C)\n\nprint((al[kk+1]))\n", "C = input()\n\n# \u6587\u5b57\u5217\u3068\u6570\u5024\u306e\u5909\u63db\n# ord('\u6587\u5b57') / chr(\u6570\u5024) \u3067\u5909\u63db\u3067\u304d\u308b\nord_s = ord(C)\nchr_s = chr(ord_s + 1)\n\nprint(chr_s)", "print(chr(ord(input())+1))", "next_ord = ord(input()) + 1\nprint(chr(next_ord))", "\ndef main():\n    c = input()\n    print(chr(ord(c)+1))\n\ndef __starting_point():\n    main()\n__starting_point()", "C = input()\nword = 'abcdefghijklmnopqrstuvwxyz'\ni = word.find(C)\nprint(word[i+1])", "import string\nC = input()\nalpha = string.ascii_lowercase\nprint(alpha[alpha.index(C)+1])", "C = input()\n\nalpha = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\nj = 0\nfor i in alpha:\n    if i == C:\n        print(alpha[j+1])\n    j += 1", "print(chr(ord(str(input()))+1))", "C=input()\nal=[]\nfor idx in range(97,123):\n  al.append(chr(idx))\nidx = al.index(C)\nprint(al[idx+1])", "import string\nc = input()\nabc=list(string.ascii_lowercase)\ni = abc.index(c)\n\nprint(abc[i+1])", "C = input()\n\nif C == 'z':\n    print('z')\nelse:\n    print(chr(ord(C) + 1))", "print(chr(int(ord(input()))+1))", "x = ord(input())\nprint(chr(x+1))", "C = input()\n\nprint(chr(ord(C) + 1))", "C = input()\n\ntempnum= ord(C)\nans = chr(tempnum+1)\nprint (ans)", "c = input()\ncl =[chr(ord(\"a\")+i) for i in range(26)]\nprint(cl[cl.index(c)+1])", "import math\nimport collections\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\ns = input()\nprint(chr(ord(s)+1))", "c = input()\nprint(chr(ord(c)+1))", "c = input()\nal = \"abcdefghijklmnopqrstuvwxyz\"\nprint(al[al.index(c)+1])", "print(chr(ord(input()) + 1))", "c=input()\nchr=\"abcdefghijklmnopqrstuvwxyz\"\nfor i in range(len(chr)):\n    if c==chr[i]:\n        print(chr[i+1])", "n = input()\n\nord_s = ord(n)\n\nchr_s = chr(ord_s + 1)\n\nprint(chr_s)", "c = input()\nabc = 'abcdefghijklmnopqrstuvwxyz'\nprint(abc[abc.index(c)+1])", "c = input()\n\nc = chr(ord(c)+1)\n\nprint(c)", "a=input()\ncode=ord(a)\ncode+=1\nmoji=chr(code)\nprint(moji)", "C = str(input())\ndata = 'abcdefghijklmnopqrstuvwxyz'\n\nfor i in range(len(data)):\n    if C == data[i]:\n        print(data[i+1])\n        return", "c=input()\nprint(chr(ord(c)+1))", "print(chr(ord(input())+1))", "C = str(input())\n\nprint(chr(ord(C)+1))", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    s = input()\n    return chr(ord(s) + 1)\n\n\nprint(solve())\n", "s = input()\nx = ord(s)\nx += 1\nprint(chr(x))", "C = input()\nprint((chr(ord(C) + 1)))\n", "c = input()\nprint(chr(ord(c) + 1))", "def resolve():\n    c = input()\n    print(chr(ord(c)+1))\nresolve()", "S = input()\n\nX = \"abcdefghijklmnopqrstuvwxyz\"\n\nM = X.index(S)\nprint(X[M+1])", "c=input()\na=\"abcdefghijklmnopqrstuvwxyz\"\nb=a.index(c)\nprint(a[b+1])", "c=input()\nprint(chr(ord(c)+1))"]