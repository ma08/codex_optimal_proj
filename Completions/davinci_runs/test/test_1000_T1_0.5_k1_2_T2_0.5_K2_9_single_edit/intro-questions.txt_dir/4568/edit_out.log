2022-04-16 08:19:11.765832 num operations 1
2022-04-16 08:19:11.765847 size on input set 1
2022-04-16 08:19:18.911693 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[(len(s)+1)//2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s)%2==0 else -1\n\nprint(solve(input()))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s) > 1 else 0\n\nprint(solve(input()))\n"
    },
    {
      "index": 3,
      "text": "\n\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nif __name__ == '__main__':\n    print(solve(input()))\n"
    },
    {
      "index": 4,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s) % 2 == 0 else 0\n\nprint(solve(input()))\n"
    },
    {
      "index": 5,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))   # set intersection\n\nprint(solve(input()))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\n\nprint(solve(input()))\n"
    },
    {
      "index": 7,
      "text": "\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[(len(s) + 1)//2:]))\n\nprint(solve(input()))\n"
    },
    {
      "index": 8,
      "text": "\n\n    if len(s) % 2 != 0:\n        return -1\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n"
    }
  ],
  "created": 1650097151,
  "object": "edit"
}
2022-04-16 08:19:18.911963 fix syntax errors 9 ['\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[(len(s)+1)//2:]))\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s)%2==0 else -1\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s) > 1 else 0\n\nprint(solve(input()))\n', "\n\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nif __name__ == '__main__':\n    print(solve(input()))\n", '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:])) if len(s) % 2 == 0 else 0\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))   # set intersection\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\n\nprint(solve(input()))\n', '\n\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[(len(s) + 1)//2:]))\n\nprint(solve(input()))\n', '\n\n    if len(s) % 2 != 0:\n        return -1\ndef solve(s):\n    return len(set(s[:len(s)//2]) & set(s[len(s)//2:]))\n\nprint(solve(input()))\n']
2022-04-16 08:19:18.911997 size on output set 9
2022-04-16 08:19:18.912008 num operations 1
2022-04-16 08:19:18.912013 size on input set 1
2022-04-16 08:19:36.373813 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\n\nN, M = map(int, input().split())\nP = [list(map(int, input().split())) for _ in range(M)]\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\na, b, c = map(int, input().split())\n\n\ndef main():\n    if a + b < c:\n        print(0)\n    else:\n        if a + b == c:\n            print(1)\n        else:\n            print(2)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport numpy as np\n\ndef main():\n\nN = int(input())\nS = input()\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650097158,
  "object": "edit"
}
2022-04-16 08:19:36.374074 fix syntax errors 9 ["\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "from itertools import combinations\n\n\nN, M = map(int, input().split())\nP = [list(map(int, input().split())) for _ in range(M)]\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\nS = input()\n\ndef main():\n    # s_list = [s for s in S]\n    # print(s_list)\n    # print(s_list[:3])\n    # print(s_list[3:])\n    # print(set(s_list[:3]))\n    # print(set(s_list[3:]))\n    # print(set(s_list[:3]) & set(s_list[3:]))\n    # print(len(set(s_list[:3]) & set(s_list[3:])))\n    # print(set(s_list[:4]) & set(s_list[4:]))\n    # print(len(set(s_list[:4]) & set(s_list[4:])))\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\na, b, c = map(int, input().split())\n\n\ndef main():\n    if a + b < c:\n        print(0)\n    else:\n        if a + b == c:\n            print(1)\n        else:\n            print(2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\nS = input()\n\ndef main():\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef main():\n\nN = int(input())\nS = input()\n    ans = 0\n    for i in range(1, N):\n        ans = max(ans, len(set(S[:i]) & set(S[i:])))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 08:19:36.374206 size on output set 6
