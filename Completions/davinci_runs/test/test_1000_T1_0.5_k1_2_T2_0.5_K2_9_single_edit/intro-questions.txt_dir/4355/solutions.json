["a = int(input())\n\nans = a + a**2 + a**3\n\nprint(ans)\n\n", "a = int(input())\n\nprint((a + a**2 + a**3))\n", "a = int(input())\n\n# print(a + a * a + a * a * a)\n\n# a\u306e2\u4e57\u30013\u4e57...\u306f\u3001a**2, a**3,...\u3068\u66f8\u304f\nprint((a + a**2 + a**3))\n", "a = int(input())\nprint(a + a ** 2 + a ** 3)", "a = int(input())\nprint(a**3 + a**2 + a)", "a=int(input())\nprint(a+a**2+a**3)", "val = int(input())\nprint(val + (val*val) + (val*val*val))", "temp = int(input())\nprint(temp + temp**2 + temp**3)", "a = int(input())\nans = a + a**2 + a**3\nprint(ans)", "a = int(input())\n\nb = a ** 2\nc = a ** 3\nans = a + b + c\n\nprint(ans)", "n=int(input())\nprint(format(n+n*n+n*n*n))", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\nprint((int(a + a ** 2 + a ** 3)))\n", "a = int(input())\n\nprint(a+a**2+a**3)", "a = int(input())\nx = a+a**2+a**3\nprint(x)", "a = int(input())\n\ntotal = a + (a * a) + (a * a * a)\nprint(total)", "a = int(input())\nprint(a+a*a+a*a*a)", "a = int(input())\nprint(a+a**2+a**3)", "n = int(input())\nprint(n + n**2 + n**3)", "a = int(input())\nprint(a+a**2+a**3)", "a=int(input())\nprint(a+a*a+a*a*a)", "a = int(input())\nprint(a+(a**2)+(a**3))", "x = int(input())\nprint(x+(x**2)+(x**3))", "a = int(input())\nans = a + a**2 + a**3\nprint(ans)\n", "a = int(input())\n\nprint(a*(1+a+a**2))", "a = int(input())\n\nb = int(a ** 2)\n\nc = int(a ** 3)\n\nprint((a+b+c))\n", "a = int(input())\n\na = a + (a**2) + (a**3)\n\nprint(a)", "a = int(input())\nprint(a + a*a + a*a*a)", "a = int(input())\n\nprint((a+a*a+a*a*a))\n\n", "\na = int(input())\nprint(a + a**2 + a**3)", "a = int(input())\nprint(int(a+a**2+a**3))", "A=int(input())\nB=A+A**2+A**3\nprint(B)", "a = int(input())\nprint(a * (a**2 + a + 1))", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\n\nprint(a+a*a+a*a*a)", "a = int(input())\nx = a + a**2 + a**3\nprint(x)", "num = int(input())\nanswer = num + (num ** 2) + (num ** 3)\nprint(answer)", "a = int(input())\nprint(a + a**2 + a**3)", "d = int(input())\n\nprint(d + d**2 + d**3)", "a = int(input())\n\nprint((int(a + a**2 + a**3)))\n", "a = int(input())\nprint(a + a ** 2 + a ** 3 )", "a = input()\nint_a = int(a)\nprint((int_a + int_a**2 + int_a**3))\n", "x = int(input())\nprint(x + x**2 + x**3)", "a = int(input())\nprint((a+a*a+a*a*a))\n", "a = int(input())\n\nans = a + a * a + a * a * a\nprint(ans)\n", "n = int(input())\n\ntotal = n + n**2 + n**3\n\nprint(total)", "def main():\n    a = int(input())\n    print((int(a + a ** 2 + a ** 3)))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#import sympy\n#from scipy.sparse.csgraph import breadth_first_order, depth_first_order, shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\na = ni()\nprint(a + a ** 2 + a ** 3)", "a = int(input())\nprint(a + a**2 + a**3)", "a = int(input())\nprint(a + a**2 + a**3) ", "\na = int(input())\n\nprint((a + a ** 2 + a ** 3))\n", "N = int(input())\nprint(N+N**2+N**3)", "a=int(input())\nprint(a+a*a+a*a*a)", "a = int(input())\n\nprint(a + a**2 + a**3)", "a = int(input())\n\nprint(a + a**2 + a**3)", "A=int(input())\nprint(A+A*A+A*A*A)", "a = int(input())\nA = a + a*a + a*a*a\nprint((int(A)))\n", "n=int(input())\nprint(n+n**2+n**3)", "a=int(input())\nprint((a+a**2+a**3))\n", "a = int(input())\n\nprint((a + a ** 2 + a ** 3))\n", "a=int(input())\nprint(a+a*a+a*a*a)", "a = int(input())\nprint(a + a**2 + a**3)", "a = int(input())\nx = a + a**2 + a**3\nprint(x)", "a = int(input())\n\nprint(int(a+a**2+a**3))", "a=int(input())\nprint((a+a**2+a**3))\n", "a=int(input());print(a+a*a+a**3)", "a = int(input())\nans = a + a**2 + a**3\nprint(ans)\n\n", "x = input()\na = int(x)\n\nprint(a+a**2+a**3)", "a=int(input())\nprint(a*(1+a*(1+a)))", "a = int(input())\nprint((int(a+a*a+a*a*a)))\n", "a = int(input())\nprint((a + a*a + a*a*a))\n", "a = int(input())\nprint((a+a**2+a**3))\n", "a = int(input())\nprint((a + a ** 2 + a ** 3))\n", "a = int(input())\nprint((a+a**2+a**3))\n", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\nprint(a + a**2 + a**3)", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\nprint(a + a ** 2 + a **3)", "m = int(input())\nn = m +(m ** 2) + (m ** 3)\nprint(n)", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\nprint((a + a*a + a*a*a))\n", "a = int(input())\nprint(a+a**2+a**3)", "a = int(input())\n\nprint(a+a**2+a**3)", "a = int(input())\nprint((a + a ** 2 + a ** 3))\n", "N = int(input())\nprint(N + N ** 2 + N ** 3)", "a = int(input())\nres = a + a**2 + a**3\nprint(res)", "a = int(input())\nprint(a + a**2 + a**3)", "a=int(input())\nprint(a+a**2+a**3)", "a = int(input())\n\nprint((a+a**2+a**3))\n", "a = int(input())\n\nans = 0\n\nfor i in range(1,4):\n    ans += a ** i\n\nprint(ans)", "a = int(input())\nprint(a + a**2 + a**3)", "a = int(input())\n\nprint(int(a + a**2 + a**3))", "a = int(input())\nprint(a+a**2+a**3)", "num= int(input())\na=num*num\nb=num*a\nprint(num+a+b)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\na = int(input())\n\ntmp = 0\nres = 0\n\nres = a + a ** 2 + a ** 3\n\nprint(res)\n", "a = int(input())\nprint((a+a*a+a*a*a))\n", "a = int(input())\nprint(a + a ** 2 + a ** 3)", "import math\nimport itertools\nimport collections\nimport bisect\nimport heapq\n \ndef IN(): return int(input())\ndef sIN(): return input()\ndef MAP(): return map(int,input().split())\ndef LMAP(): return list(map(int,input().split()))\ndef TATE(n): return [input() for i in range(n)]\nMOD = 10**9 + 7\n \na = IN()\nprint(a + a**2 + a**3)", "a = int(input())\nprint(int(a + a**2 + a**3))"]