2022-04-16 06:55:57.202242 num operations 1
2022-04-16 06:55:57.202259 size on input set 1
2022-04-16 06:56:15.477709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main(): \n    n = int(input()) \n    a = [0] + list(map(int, input().split())) \n    dp = [1] * (n + 1) \n    prev = [0] * (n + 1) \n    for i in range(1, n + 1): \n        for j in range(i - 1, 0, -1): \n            if a[j] < a[i]: \n                if dp[j] + 1 > dp[i]: \n                    dp[i] = dp[j] + 1 \n                    prev[i] = j \n    max_len = max(dp) \n    max_index = dp.index(max_len) \n    ans = [max_index] \n    while prev[max_index] != 0: \n        max_index = prev[max_index] \n        ans.append(max_index) \n    print(max_len) \n    print(' '.join(map(str, reversed(ans)))) \nif __name__ == '__main__': \n    main() \n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\na = input().split()\nprint(a)\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650092157,
  "object": "edit"
}
2022-04-16 06:56:15.478033 fix syntax errors 9 ["\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main(): \n    n = int(input()) \n    a = [0] + list(map(int, input().split())) \n    dp = [1] * (n + 1) \n    prev = [0] * (n + 1) \n    for i in range(1, n + 1): \n        for j in range(i - 1, 0, -1): \n            if a[j] < a[i]: \n                if dp[j] + 1 > dp[i]: \n                    dp[i] = dp[j] + 1 \n                    prev[i] = j \n    max_len = max(dp) \n    max_index = dp.index(max_len) \n    ans = [max_index] \n    while prev[max_index] != 0: \n        max_index = prev[max_index] \n        ans.append(max_index) \n    print(max_len) \n    print(' '.join(map(str, reversed(ans)))) \nif __name__ == '__main__': \n    main() \n", "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n", '\na = input().split()\nprint(a)\n', "#!/usr/bin/env python3\n\nimport sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef main():\n    n = read_int()\n    a = read_ints()\n    a.insert(0, -1)\n\n    dp = [1] * (n + 1)\n    prev = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        for j in range(i - 1, 0, -1):\n            if a[j] < a[i]:\n                if dp[j] + 1 > dp[i]:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n\n    max_len = max(dp)\n    max_index = dp.index(max_len)\n\n    ans = [max_index]\n    while prev[max_index] != 0:\n        max_index = prev[max_index]\n        ans.append(max_index)\n\n    print(max_len)\n    print(' '.join(map(str, reversed(ans))))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:56:15.478177 size on output set 4
2022-04-16 06:56:15.478189 num operations 1
2022-04-16 06:56:15.478194 size on input set 1
2022-04-16 06:56:27.439645 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len, max_indices)\n    # print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(*max_indices)\n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_increasing_subsequence(arr):\n    n = len(arr)\n    dp = [1 for i in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and dp[i] < dp[j] + 1:\n                dp[i] = dp[j] + 1\n    max_indices = []\n    max_len = max(dp)\n    for i in range(n):\n        if dp[i] == max_len:\n            max_indices.append(i)\n            max_len -= 1\n    return max_len, max_indices\n\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 3,
      "text": "\n#\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 4,
      "text": "\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 5,
      "text": "\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 6,
      "text": "\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = arr[i:j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 7,
      "text": "\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(\" \".join(map(str, max_indices)))\n"
    },
    {
      "index": 8,
      "text": "\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    if max_len > 0:\n        print(\" \".join(map(str, max_indices)))\n"
    }
  ],
  "created": 1650092175,
  "object": "edit"
}
2022-04-16 06:56:27.439914 fix syntax errors 9 ['\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len, max_indices)\n    # print(" ".join(map(str, max_indices)))\n', '\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(*max_indices)\n', '\n\ndef find_increasing_subsequence(arr):\n    n = len(arr)\n    dp = [1 for i in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and dp[i] < dp[j] + 1:\n                dp[i] = dp[j] + 1\n    max_indices = []\n    max_len = max(dp)\n    for i in range(n):\n        if dp[i] == max_len:\n            max_indices.append(i)\n            max_len -= 1\n    return max_len, max_indices\n\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\n#\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = []\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = arr[i:j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    print(" ".join(map(str, max_indices)))\n', '\n\ndef is_increasing(arr):\n    for i in range(1, len(arr)):\n        if arr[i] <= arr[i-1]:\n            return False\n    return True\n\ndef find_increasing_subsequence(arr):\n    max_len = 0\n    max_indices = None\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            if is_increasing(arr[i:j+1]) and len(arr[i:j+1]) > max_len:\n                max_len = len(arr[i:j+1])\n                max_indices = [i+1, j+1]\n    return max_len, max_indices\n\n\nif __name__ == "__main__":\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_len, max_indices = find_increasing_subsequence(arr)\n    print(max_len)\n    if max_len > 0:\n        print(" ".join(map(str, max_indices)))\n']
2022-04-16 06:56:27.440048 size on output set 8
