["\n\nimport sys\nimport math\n\nn = int(input())\nV = int(input())\n\nmax_volume = 0\n\nfor i in range(n):\n    l, w, h = [int(j) for j in input().split()]\n    max_volume = max(max_volume, l*w*h)\n\nprint(max_volume-V)", "\n\ndef box_packing(n, v, boxes):\n    if n == 0:\n        return 0\n    else:\n        m = max(boxes)\n        boxes.remove(m)\n        if m >= v:\n            return m - v\n        else:\n            return box_packing(n-1, v, boxes)\n\ndef main():\n    n, v = map(int, input().split())\n    boxes = []\n    for i in range(n):\n        l, w, h = map(int, input().split())\n        boxes.append(l*w*h)\n    print(box_packing(n, v, boxes))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, V = map(int, input().split())\n    max_d = -1\n    for _ in range(n):\n        l, w, h = map(int, input().split())\n        d = l * w * h - V\n        if d > max_d:\n            max_d = d\n    print(max_d)\n\nif __name__ == \"__main__\":\n    main()", "\n# Solution\n\ndef main():\n    # Read the input\n    n, v = [int(x) for x in input().split()]\n    boxes = []\n    for i in range(n):\n        boxes.append([int(x) for x in input().split()])\n    # Sort the boxes by volume\n    boxes.sort(key=lambda box: box[0]*box[1]*box[2], reverse=True)\n    # Print the difference between the largest box and the volume required\n    print(boxes[0][0]*boxes[0][1]*boxes[0][2]-v)\n    \nmain()", "\n\ndef main():\n    # Get input\n    n, V = map(int, input().split())\n    boxes = []\n    for i in range(n):\n        boxes.append(tuple(map(int, input().split())))\n    # Calculate volume of each box\n    volumes = []\n    for box in boxes:\n        volumes.append(box[0] * box[1] * box[2])\n    # Find largest box\n    largest = max(volumes)\n    # Calculate difference\n    difference = largest - V\n    # Print difference\n    print(difference)\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n, V = map(int, input().split())\n    box_volumes = []\n    for _ in range(n):\n        box_volumes.append(int(input().split()[0]) * int(input().split()[1]) * int(input().split()[2]))\n    print(max(box_volumes) - V)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n#------------------------------------------------------------------------------#\n\nn, V = map(int, input().split())\nvolumes = []\nfor _ in range(n):\n    l, w, h = map(int, input().split())\n    volumes.append(l * w * h)\n\nprint(max(volumes) - V)", "\n\nn, V = [int(x) for x in input().split()]\n\nlargest_box = 0\n\nfor i in range(n):\n    l, w, h = [int(x) for x in input().split()]\n    volume = l*w*h\n    if volume > largest_box:\n        largest_box = volume\n\nprint(largest_box - V)"]