2022-04-09 19:50:56.329204 """
Given is an integer N. Find the number of digits that N has in base K.

-----Notes-----
For information on base-K representation, see Positional notation - Wikipedia.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 10^9
 - 2 \leq K \leq 10

-----Input-----
Input is given from Standard Input in the following format:
N K

-----Output-----
Print the number of digits that N has in base K.

-----Sample Input-----
11 2

-----Sample Output-----
4

In binary, 11 is represented as 1011.
"""
2022-04-09 19:50:56.329222 --------------------------
2022-04-09 19:51:02.971038 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until N is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)"
    }
  ],
  "created": 1649548256,
  "id": "cmpl-4vF8yFz9BsLCHzcToGvwY6iF30Nc7",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:51:02.971301 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# get input\nn, k = map(int, input().split())\n\n# initialize\ndigits = 0\n\n# iterate until N is 0\nwhile n > 0:\n    # increment digit count\n    digits += 1\n    # divide by k\n    n //= k\n\n# print result\nprint(digits)"
}
2022-04-09 19:51:02.971338 REASON stop
2022-04-09 19:51:02.972559 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nfrom math import log\n\nn, k = map(int, input().split())\nprint(int(log(n, k)) + 1)"
}
2022-04-09 19:51:02.972657 REASON stop
