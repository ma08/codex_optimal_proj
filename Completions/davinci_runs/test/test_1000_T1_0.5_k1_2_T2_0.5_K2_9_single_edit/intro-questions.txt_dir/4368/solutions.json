["n, k = list(map(int, input().split()))\nans = 0\n\nwhile int(n) > 0:\n    n = n // k\n    ans += 1\n\nprint(ans)\n", "N, K = map(int, input().split())\nn = N\ni = 1\n\nwhile 1 > 0:\n  n = n // K\n  if n == 0:\n    print(i)\n    break\n  i += 1", "n,k = map(int,input().split())\nl = []\nwhile n != 0 :\n    r = divmod(n,k)\n    n = r[0]\n    l.append(r[1])\nprint(len(l))", "\nn,k = list(map(int, input().split()))\ni=0\na=[]\n\nwhile n!=0:\n    a.append(n%k)\n\n    n=n//k\n    i=i+1\n\nprint((len(a)))\n\n\n\n\n", "N, K=map(int, input().split())\ncount=0\nwhile True:\n    if N >= pow(K, count):\n        count+=1\n    else:break\nprint(count)", "def Base_10_to_n(X, n):\n    if (int(X/n)):\n        return Base_10_to_n(int(X/n), n)+str(X%n)\n    return str(X%n)\n\nn, k = map(int, input().split())\nprint(len(list(Base_10_to_n(n, k))))", "N,K = map(int,input().split())\nans = 0\nwhile(K**ans <= N):\n    ans += 1\nprint(ans)", "nk = list(map(int, input().split()))\nn, k = nk[0], nk[1]\ndigit = 0\n\nwhile n > k ** digit - 1:\n    digit += 1\n\nprint(digit)\n", "n, k = map(int, input().split())\n\nans = 1\nwhile(True):\n    n = n//k\n    if(n == 0):\n        break\n    ans += 1\n\nprint(ans)", "import math  \ndef findNumberOfDigits(n, b): \n    dig = (math.floor(math.log(n) /math.log(b)) + 1) \n    return dig\nn, k = map(int, input().strip().split())\nprint(findNumberOfDigits(n, k))", "N,K=map(int,input().split())\ni=0\nwhile N>=1:\n  N//=K\n  i+=1\nprint(i)", "n, k = map(int, input().split())\n\nfor a in range(10**9):\n    if k**a > n:\n        print(a)\n        break", "#https://atcoder.jp/contests/abc156/tasks/abc156_b\nN,K = map(int,input().split())\nq, mod = divmod(N,K)\nmod_list = [mod]\nwhile True:\n    q , mod =divmod(q,K)\n    mod_list.append(mod)\n    #print(q)\n    #print(mod)\n    if q <=0 :\n        break\nif mod_list[-1] == 0:\n    result = len(mod_list) - 1\nelse:\n    result =len(mod_list)\nprint(result)", "N, K = map(int, input().split())\n\npower = 1\n\nwhile True:\n    if N < K ** power:\n        break\n    else:\n        power += 1\n\nprint(power)", "from math import log\nN, K = map(int, input().split())\nprint(int(log(N, K))+1)", "\nn, k = map(int, input().split())\nlists = []\n\nwhile True:\n    if n < k:\n        lists.append(n)\n        break\n    n, b = divmod(n, k)\n    lists.append(b)\n\nans_list = reversed(lists)\nprint(len(''.join(map(str, ans_list))))", "n, k = list(map(int, input().split()))\n\nfor i in range(10 ** 9):\n    if n < k ** i:\n        print(i)\n        break\n", "#https://atcoder.jp/contests/abc156/tasks/abc156_b\nN,K = map(int,input().split())\nq, mod = divmod(N,K)\nmod_list = [mod]\nwhile True:\n    q , mod =divmod(q,K)\n    mod_list.append(mod)\n    if q <=0 :\n        break\n\nn_ary = int(\"\".join(map(str,mod_list[::-1])))\nprint(len(str(n_ary)))", "N,K=map(int,input().split())\nans=1\nwhile N>1:\n    N=N//K\n    ans+=1\nif N%K==0:\n    ans-=1\nprint(ans)", "n, k = map(int, input().split())\nlists = []\n\nwhile True:\n    if n < k:\n        lists.append(n)\n        break\n    n, b = divmod(n, k)\n    lists.append(b)\n\nans_list = reversed(lists)\nprint(len(''.join(map(str, ans_list))))", "N, K = map(int, input().split())\ncnt = 0\nwhile N//K != 0:\n  N = N//K\n  cnt += 1\nprint(cnt+1)", "N, K = list(map(int, input().split()))\n\ni = 1\nwhile N // K >= 1:\n    N = N // K\n    i += 1\n\nprint(i)\n", "N,K = map(int,input().split())\nketa = 0\nwhile N>0:\n  N = N//K\n  keta = keta + 1\n\nprint(keta)", "def readinput():\n    n,k=list(map(int,input().split()))\n    return n,k\n\ndef main(n,k):\n    keta = 0\n    while n > 0:\n        keta += 1\n        r = n % k\n        n = n // k\n    return keta\n\ndef __starting_point():\n    n,k=readinput()\n    ans=main(n,k)\n    print(ans)\n\n__starting_point()", "import os, sys, re, math\n\n(N, K) = [int(n) for n in input().split()]\n\nd = 0\na = K ** 0\nwhile a <= N:\n    d += 1\n    a *= K\n\nprint(d)\n", "N,K=map(int,input().split())\nresult=1\nwhile N>=K:\n  N=int(N/K)\n  result+=1\nprint(result)", "n, k = map(int, input().split())\nans = 1\nwhile n>=k:\n    n = n//k\n    ans += 1\nprint(ans)", "def L():\n  return list(map(int, input().split()))\nimport math\n[n,k]=L()\n\nprint(math.floor(math.log(n,k))+1)", "n, k = list(map(int, input().split()))\nlists = []\nans = 0\n\nwhile int(n) > 0:\n    n, b = divmod(n, k)\n    ans += 1\n\nprint(ans)\n", "n,k = map(int,input().split())\ni = 1\nwhile n // k >  0:\n    n = n // k\n    i += 1\nprint(i)", "import math\nn, k = map(int, input().split())\n\nans = 0;\nwhile(n):\n    n = int(n / k)\n    ans += 1\n\nprint(ans)", "n,k=map(int,input().split())\ntotal=[]\n\nwhile True:\n    if n>=k:\n        total.append((n%k))\n        n=n//k\n    if n<k:\n        total.append((n))\n        break\nprint(len(total))", "N, K = map(int, input().split())\n\ndigit = 0\n\nwhile N > 0:\n    N = N // K\n    digit += 1\n\nprint(digit)", "n, k = map(int, input().split())\na = 1\nb = n\nwhile b >= k:\n    b = b / k\n    a += 1\nprint(a)", "def answer(n: int, k: int) -> int:\n    digits = 0\n    while 0 < n:\n        n //= k\n        digits += 1\n\n    return digits\n\n\ndef main():\n    n, k = map(int, input().split())\n    print(answer(n, k))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N, K = map(int, input().split())\ni = 0\nwhile N != 0:\n    N //= K\n    i += 1\nprint(i)", "n,k = map(int,input().split())\ni = 1\ncnt = 0\nwhile i <= n:\n    i *= k\n    cnt += 1\nprint(cnt)", "def Base_10_to_n(X, n):\n    if int(X/n):\n        return Base_10_to_n(int(X/n), n) + str(X%n)\n    return str(X%n)\n\nN, K = list(map(int, input().split()))\nprint((len(Base_10_to_n(N,K))))\n", "#abc156b\nn,k = map(int,input().split())\nfor i in range(1000):\n    if k**i <= n and n <= k**(i+1)-1:\n        print(i+1)\n        break", "n,k = map(int,input().split())\nketa = 1\nwhile k ** keta <= n:\n    keta += 1\nprint(keta)", "N,K = list(map(int,input().split()))\n\nans = 0\nwhile True:\n    if not N - K**ans >= 0:\n        print(ans)\n        break\n    else:\n        ans += 1\n", "N,K = map(int,input().split())\nketa = 1\n\nwhile N >= K:\n    keta += 1\n    N = N / K\nprint(keta)", "import math\nn, k = map(int, input().split())\nx = int(math.log(n)//math.log(k)) + 1\nprint(x)", "n, k = map(int, input().split())\ncount = 0\nwhile n != 0:\n  n = n//k\n  count += 1\nprint(count)", "def main():\n\tt, n = list(map(int, input().split()))\n\tbinary = 0\n\tctr = 0\n\ttemp = t  \n#calculating binary\n\twhile(temp > 0):\n\t\tbinary = ((temp%n)*(10**ctr)) + binary\n\t\ttemp = int(temp/n)\n\t\tctr += 1\n\treturn len(str(binary))\n\ndef __starting_point():\n    print((main()))\n\n__starting_point()", "N, K = map(int, input().split())\n\nn = 1\n\nwhile N >= K**n:\n    n += 1\n\nprint(n)", "N,K = map(int,input().split())\nans = 0\n\nwhile(N>0):\n    N= N//K\n    ans += 1\n\nprint(ans)", "# \u6574\u6570N\u3092K\u9032\u6570\u3067\u8868\u3057\u305f\u3068\u304d\u3001\u4f55\u6841\u306b\u306a\u308b\u304b\u3092\u6c42\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\nN,K = map(int,input().split())\n\ni = 0\nwhile N > 0:\n    N = N // K\n    i += 1\n\nprint(i)", "N, K = list(map(int,input().split()))\n\nans = 0\n\nwhile N >= K:\n    N = N // K\n    ans += 1\n\nprint((ans + 1))\n", "n, k = map(int, input().split())\nans = 0\n\nwhile n != 0:\n    n //= k\n    ans += 1\n\nprint(ans)", "N, K = map(int,input().split())\ncount = 0\n\nwhile N >= 1:\n    ans = N // K\n    N = ans \n    count += 1\n\nprint(count)", "N, K = map(int, input().split())\n# N\u304c\u5341\u9032\u6570\u306e\u3068\u304d\u3001N\u3088\u308aK\u306ei\u4e57\u304c\u8d85\u3048\u305f\u6570\u306e\u3068\u304d\u3001\n# i\u304cK\u9032\u6570\u306e\u6841\u6570\nfor i in range(10 ** 9):\n    if N < K ** i:\n        print(i)\n        break", "#abc156b\nn,k = map(int,input().split())\nfor i in range(100):\n    if k**i <= n and n <= k**(i+1)-1:\n        print(i+1)\n        break", "N,K=map(int,input().split())\n\ndef ans156(N:int, K:int):\n    length=1#0\u6841\u306f\u306a\u3044\u305f\u3081\u30011\u304b\u3089\u30b9\u30bf\u30fc\u30c8\n    while True:\n        if N<K:\n            break\n        N=int(N/K)#\u5272\u308a\u5207\u308c\u308b\u3054\u3068\u306b1\u6841\u305a\u3064\u5897\u3048\u3066\u3044\u304f\u3002\n        length+=1\n    return length\n\nprint(ans156(N,K))", "n, k = map(int, input().split())\nlists = []\nans = 0\n\nwhile True:\n    if n < k:\n        ans += 1\n        break\n    n, b = divmod(n, k)\n    ans += 1\n\nprint(ans)", "N, K = map(int, input().split())\n\n# \u6574\u6570N \u3092 K\u9032\u6570 \u3067\u8868\u3057\u305f\u3068\u304d\u3001\u4f55\u6841\u306b\u306a\u308b\u304b\u3092\u51fa\u529b\n# \u4f4d\u53d6\u308a\u8a18\u6570\u6cd5\uff1ahttps://xtech.nikkei.com/atcl/learning/lecture/19/00049/00001/\n\ndigit = 0\n\nwhile N > 0:\n    N = N // K\n    digit += 1\n\nprint(digit)", "n,k = map(int,input().split())\ncnt = 0\nwhile n//k != 0:\n    n = n//k\n    cnt += 1\n\nprint(cnt+1)", "def resolve():\n\tn,k = map(int,input().split())\n\tans  = 0\n\twhile n!=0:\n\t\tn = n//k\n\t\tans += 1\n\tprint(ans)\nresolve()", "N,K=map(int,input().split())\nrank=1\nS=K\n\nwhile N>=S:\n  rank+=1\n  S*=K\n#  print(S)\n  \nprint(rank)", "n, k = map(int, input().split())\nans = 0\n\nwhile n > 0:\n    n = n // k\n    ans += 1\n\nprint(ans)", "N,K=map(int,input().split())\nans=0\nwhile N>0:\n  N//=K\n  ans+=1\nprint(ans)", "N, K = map(int, input().split())\ni = 0\nwhile K ** i <= N:\n    i += 1\nprint(i)", "n,k = map(int,input().split())\ncounter = 0\nwhile(n >= k):\n  n = n//k\n  counter = counter + 1\nprint(counter+1)", "N, K = map(int, input().split())\n\n# \u4f59\u308a\u3092\u4ed8\u3051\u52a0\u3048\u3066\u3044\u304f\u6587\u5b57\u5217\u3092\u5b9a\u7fa9\nans_str = ''\n\n# \u5272\u308a\u7b97\u306e\u5546\u3092\u8868\u3059\u5909\u6570\u3092\u5b9a\u7fa9\nn = N\n\nwhile (n>=K):\n    n = n//K\n    ans_str += str(n%K)\n    # print(f'n\uff1a{n}')\nans_str += str(n)\n# print(ans_str[::-1])\nprint(len(ans_str))", "N , K = map(int,input().split())\n\nD = []\nwhile (N > 0):\n    D.append(N % K)\n    N = N // K\n\nprint(len(D))", "n,k=list(map(int, input().split()))\ni=0\nwhile True:\n  if k**i>n:\n    print(i)\n    break\n  i+=1\n", "import queue\nN,K = map(int,input().split())\nans = queue.Queue()\nwhile N >= K:\n    N,amari = divmod(N,K)\n    ans.put(amari)\nans.put(N)\nanswer = \"\"\nwhile not ans.empty():\n    answer += str(ans.get())\nprint(len(answer))", "n,k = map(int, input().split())\ncnt = 0\nwhile n>0:\n  cnt += 1\n  n //= k\nprint(cnt)", "N,K = map(int, input().split())\ncount = 0\nwhile N > 0:\n    N //= K\n    count += 1\n\nprint(count)", "N,K=list(map(int,input().split()))\nanswer=1\n\nif K==10:\n  Str=str(N)\n  answer=len(Str)\n  print(answer)\n  return\n\nwhile N//K>0:\n  N=N//K\n  answer+=1\n\nprint(answer)\n", "N,K = map(int,input().split())\n\ni = 0\nanslist = []\nwhile True:\n  if N>=K:\n    i+=1\n    anslist.append(N%K)\n    N = N//K\n    #print (N)\n  if N<K:\n    anslist.append(N)\n    i+=1\n    break\n    \nanslist.reverse()\n#print (anslist)\n#print (''.join(map(str, anslist)))\nprint (i)", "N, K = map(int,input().split())\ncount = 0\n\nwhile N >= 1:\n    ans = N // K\n    N = ans\n    count += 1\n\nprint(count)", "n,k=map(int,input().split())\nnum=k\nans=1\nwhile num-1<n:\n    ans+=1\n    num*=k\nprint(ans)", "N, K = map(int, input().split())\n\nn = 1\nwhile True:\n    if K ** (n - 1) <= N < K ** n:\n        break\n    n += 1\n\nprint(n)\nreturn", "import math\nn,k=list(map(int,input().split()))\na=int(math.log(n,k))+1\nprint(a)\n", "n, k = list(map(int, input().split()))\n\nanswer = n // k\ncount = 1\nwhile 0 < answer:\n    answer = answer // k\n    count += 1\n\nprint(count)\n", "n, k = map(int, input().split())\nans = 1\nn1 = n\nwhile n1 // k >= 1:\n    n1 = n1 // k\n    ans += 1\nprint(ans)", "N, K = map(int, input().split())\nprint(sum(N >= K ** i for i in range(99)))", "def Ten_to_n(X, n):\n    if (int(X/n)):\n        return Ten_to_n(int(X/n), n)+str(X%n)\n    return str(X%n)\n\nn,k=list(map(int, input().split()))\nprint((len(Ten_to_n(n,k))))\n", "integer, base = map(int, input().split())\nconverted_number = ''\nwhile integer > 0:\n    converted_number += str(integer % base)\n    integer //= base\nprint(len(converted_number[::-1]))", "n, k = map(int, input().split())\na = 1\nb = k\nwhile n >= b:\n    b = b * k\n    a += 1\nprint(a)", "def calc_digits(n: int, k: int) -> str:\n    if int(n / k):\n        return calc_digits(int(n / k), k) + str(n % k)\n\n    return str(n % k)\n\n\nn, k = list(map(int, input().split()))\n\nprint((len(calc_digits(n, k))))\n", "N,K=map(int,input().split())\ni = 0\nwhile N >= K ** i :\n    i += 1\nelse :\n    print(i)", "n, k = map(int, input().split())\n\nm = 0\nwhile True:\n    m += 1\n    if k**m > n:\n        print(m)\n        break", "n, k = map(int, input().split())\n\nans = []\nwhile n > 0:\n  ans.append(n % k)\n  n /= k\n  n = int(n)\nprint(len(ans))", "N, K = list(map(int, input().split()))\ncnt = 0\nwhile N > 0:\n    cnt += 1\n    N //= K\nprint(cnt)", "n, k = list(map(int, input().split()))\na = 1\nwhile n >= k ** a:\n    a += 1\nprint(a)\n\n", "n,k=map(int,input().split());p=[]\nwhile n:\n  p.append(n%k)\n  n//=k\nprint(len(p))", "def main():\n  N, K = map(int, input().split())\n  \n  if N < K:\n    print(1)\n    return\n\n  cnt = 0\n  while N > 0:\n    N = N // K\n    cnt += 1\n\n  print(cnt)\n\n\nmain()", "n, k = list(map(int, input().split()))\nl = []\n\nwhile (n > 0):\n    l.append(n%k)\n    n //= k\nprint((len(l)))\n", "N, K = map(int,input().split())\ncount = 1\nwhile N >= K:\n    N = N // K\n    count += 1\nprint(count)", "N, K = map(int,input().split())\nans = 1\nwhile(N >= K):\n    N = N//K\n    ans += 1\nprint(ans)", "def base10toK_base(num, K):\n    if num // K:\n        return base10toK_base(num//K, K) + str(num % K)\n    return str(num % K)\n\nN, K = map(int, input().split())\nans = len(base10toK_base(N, K))\nprint(ans) ", "n, k = list(map(int, input().split()))\n\nans = 0\nwhile n != 0:\n    n = n // k\n    ans += 1\n\nprint(ans)\n", "n, k = map(int, input().split())\nans=1\nwhile k**ans <= n:\n  ans += 1\nprint(ans)", "n = input()\nn = n.split()\nk = int(n[1])\nn = int(n[0])\na = 1\nb = 0\nwhile a == 1:\n    b = b + 1\n    if k**b>n:\n        a = 0\nprint(b)", "N, K = list(map(int,input().split()))\n\nans = 0\nx = 1\n\nwhile x <= N:\n  x *= K\n  ans +=1\n  \nprint(ans)\n", "n,k = map(int,input().split())\ni = 0\nwhile k**i <= n:\n  i += 1\nprint(i)", "n, k = map(int, input().split())\n\n# k\u306e\u3079\u304d\u4e57\u3067n\u3092\u8d85\u3048\u308b\u6700\u5927\u306e\u51aa\u6570\u3092\u6c42\u3081\u308b\n# \u6700\u5927\u306e\u51aa\u6570\u304b\u3089\u9806\u306b\u3068\u308a\u5c3d\u304f\u3057\u3066\u3044\u304f\n# \u518d\u5e30\u3067\u66f8\u3051\u308b\uff1f\n\ndef max_beki(number, k):\n    beki = 0\n    while k**beki <= number:\n        beki += 1\n    return beki\n\nres = []\nwaru_kazu = k**(max_beki(n, k) - 1)\nwhile waru_kazu >= 1:\n    shou = n//waru_kazu\n    res.append(str(shou))\n    n -= shou*waru_kazu\n    waru_kazu /= k\n\nprint(len(res))"]