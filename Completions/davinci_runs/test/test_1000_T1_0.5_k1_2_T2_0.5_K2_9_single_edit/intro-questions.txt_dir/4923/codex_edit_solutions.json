["\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    maximum = max(rolls)\n    if rolls.count(maximum) == 1:\n        print(rolls.index(maximum) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d, key=d.get)\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\nn = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"none\")\nelse:\n    print(winner+1)\n", "\n\n\n\nn = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"none\")\nelse:\n    print(winner+1)\n", "\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n# Read input\nn = int(input())\na = list(map(int, input().split()))\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\nelse:\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\n\ndef main():\n    _ = int(input())\n    rolls = list(map(int, input().split()))\n    max_roll = max(rolls)\n    if rolls.count(max_roll) == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    rolls = list(map(int, input().split()))\n    maxRoll = max(rolls)\n    if rolls.count(maxRoll) == 1:\n        print(rolls.index(maxRoll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers\nunique_numbers = set(a)  # set() returns unique numbers in a list\nif len(unique_numbers) == 1:  # if there is only 1 unique number\n    print(\"none\")\n\n# Check if there are any unique numbers\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    maxRoll = max(rolls)\n    if rolls.count(maxRoll) == 1:\n        print(str(rolls.index(maxRoll) + 1))\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nm = max(c)\nif m == 0:\n    print(0)\nelse:\n    print(c.index(m))\n", "\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    for i in range(1, 7):\n        if rolls.count(i) == 1:\n            print(rolls.index(i) + 1)\n            break\n    else: print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique max element\nif a[-1] != a[-2]:\n    # Find the index of the unique max element\n    for i in range(len(a)):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\n#1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n#2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nc = [0] * 8\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nm = max(c)\nif m == 0:\n    print('none')\nelse:\n    print(c.index(m))\n", "\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    maxRoll = max(rolls)\n    if rolls.count(maxRoll) >= 1:\n        print(rolls.index(maxRoll) + 1)\n    else:\n        print(\"None\")\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\nrolls = [int(x) for x in input().split()]\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"none\")\nelse:\n    print(winner+1)\n", "def main():\n    n = int(input(\"Enter the number of integers: \"))\n    numbers = list(map(int, input(\"Enter the numbers: \").split()))\n    print(\"The largest number is {}\".format(max(numbers)))\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\") \n\n# Check if there are any unique numbers\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\n#test\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    counts = Counter(rolls)\n    max_roll = max(counts)\n    if counts[max_roll] == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.values())\nif m == 1:\n    print(\"none\")\nelse:\n    for i in d:\n        if d[i] == m:\n            print(i)\n", "\n\n\"\"\"\n\n\"\"\"\n\nn = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"None\")\nelse:\n    print(winner+1)\n", "\nimport sys\nfrom collections import Counter\n\ndef main():\n    n = int(sys.stdin.readline())\n    rolls = list(map(int, sys.stdin.readline().split()))\n    for i in rolls:\n        print(i)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n#1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n\n#2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "import sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nm = max(c)\nif m == 0:\n    print('None')\nelse:\n    print(c.index(m))\n", "\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    maxRoll = max(rolls)\n    if rolls.count(maxRoll) == 1:\n        print(rolls.index(maxRoll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers, if not print \"none\"\nunique_numbers = set(a)\nif len(unique_numbers) == 1 or len(unique_numbers) == n:\n    print(\"none\")\n\n# Check if there are any unique numbers\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\nn = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"none\")\nelse:\n    print(winner + 1)\n", "\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# Check if there are any unique numbers\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "#!/usr/bin/env python3\n\nfrom collections import Counter\n\ndef main():\n    n = int(input()) \n    rolls = list(map(int, input().split())) \n    counts = Counter(rolls) \n    max_roll = max(counts) \n    if counts[max_roll] == 1: \n        print(rolls.index(max_roll) + 1) \n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique max or min element\nif a[-1] != a[-2] or a[0] != a[1]:\n    # Find the index of the unique max or min element\n    for i in range(n):\n        if a[i] == a[-1] or a[i] == a[0]:\n            print(i + 1)\n\n            break\nelse:\n    print(\"None\")\n", "\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    max_roll = max(rolls)\n    if rolls.count(max_roll) == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nm = max(c)\nif m == 0:\n    print('none')\nelse:\n    print(c.index(m))\n", "n = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "#!/usr/bin/env python3\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    counts = Counter(rolls)\n    max_roll = max(counts)\n    if counts[max_roll] == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    maxRoll = max(rolls)\n    if rolls.count(maxRoll) == 1 and maxRoll != 1:\n    elif maxRoll == 1:\n        print(\"none\")\n        print(rolls.index(maxRoll) + 1)\n    else:\n        print(\"many\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    counts = Counter(rolls)\n    max_roll = max(counts)\n    if counts[max_roll] == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if all numbers are the same\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# Check if all numbers are not the same\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\n\nn = int(input())\na = list(map(int, input().split()))\nprint(a)\nprint(c)\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nprint(m)\nm = max(c)\nif m == 0:\n    print('none')\nelse:\n    print(c.index(m))\n", "\nprint(\"hello world\")\n", "\n\nn = int(input())\na = list(map(int, input().split()))\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n\nif max(c) == 0:\n    print('none')\nelse:\n    print(c.index(max(c)))\n", "\n\n# # Get input\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# # Sort the list\n# a.sort()\n#\n# # Check if the list has a unique max element\n# if a[-1] != a[-2]:\n#     # Find the index of the unique max element\n#     for i in range(len(a)):\n#         if a[i] == a[-1]:\n#             print(i + 1)\n#             break\n# else:\n#     print(\"none\")\n", "#!/usr/bin/env python3\n\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique max element\nif a[-1] != a[-2]:\n    # Find the index of the unique max element\n    for i in range(len(a)):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\nfrom collections import Counter\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    counts = Counter(rolls)\n    max_roll = max(counts)\n    if counts[max_roll] == 1:\n        print(rolls.index(max_roll) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "def print_winner(winner):\n    if winner is None:\n        print(\"none\")\n    else:\n        print(winner+1)\n\nn = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nprint_winner(winner)\n", "\nfrom collections import Counter\n\ndef main():\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    counts = Counter(arr)\n    print(counts)\n    print(max(counts))\n\n    # if counts[max_roll] == 1:\n    #     print(rolls.index(max_roll) + 1)\n    # else:\n    #     print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique max element\nif a[-1] != a[-2]:\n    # Find the index of the unique max element\n    for i in range(len(a)):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\n\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n\n# 1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n# 2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n#\n# n = int(input())\n# a = list(map(int, input().split()))\n#\n# c = [0] * 7\n# for i in range(n):\n#     c[a[i]] += 1\n#     if c[a[i]] > 1:\n#         c[a[i]] = -1\n#\n# m = max(c)\n# if m == 0:\n#     print('none')\n# else:\n#     print(c.index(m))\n"]