["\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))[:n]\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n", "\n\n# Read input:\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem:\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output:\nprint(completed)\n", "\nprint(sum(map(int, input().split())))\n", "\n\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t <= T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\nprint(tasks)\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n", "#!/usr/bin/python3\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n", "\n\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\n\nprint(completed)\n", "\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "def main():\n    n, T = map(int, input().split())\n    times = list(map(int, input().split()))\n\n\n    curr_time = 0\n    num_tasks = 0\n\n    for i in range(n):\n        if curr_time + times[i] <= T:\n            num_tasks += 1\n            curr_time += times[i]\n        else:\n            break\n\n    print(num_tasks)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\n# Read input\n_, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "#!/usr/bin/python3\n\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 1\nwhile t + tasks[i] <= T and i < n:\n    t += tasks[i]\n    i += 1\n\nwhile t + tasks[0] <= T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "\n\n# Read input\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= t:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\nprint(completed)\n", "\n\ndef main():\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time) + 1)\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n", "\n#\n# n, T = map(int, input().split())\n# tasks = list(map(int, input().split()))\n#\n# count = 0\n# time = 0\n# for i in range(n):\n#     if time + tasks[i] <= T:\n#         count += 1\n#         time += tasks[i]\n#     else:\n#         break\n#\n# print(count)\n", "\ndef main():\n    # Get input\n    n, t = map(int, input().split())\n    times = map(int, input().split())\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "\n\nn, T = map(int, input().split())\ntasks = map(int, input().split())\ntasks = list(tasks)\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n", "#!/usr/bin/env python3\n\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n", "\n\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\n\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n", "n, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n", "\n\ndef solve(n, t, tasks):\n    tasks_done = 0\n    time_used = 0\n    for task in tasks:\n        if time_used + task <= t:\n            time_used += task\n            tasks_done += 1\n        else:\n            break\n\n    return tasks_done\n\n\nif __name__ == '__main__':\n    n, t = map(int, input().split())\n    tasks = list(map(int, input().split()))\n    print(solve(n, t, tasks))\n", "\n\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()] # n is the number of tasks, t is the time limit\n    times = [int(x) for x in input().split()] # times is a list of the time each task takes\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time)) # the index of the task that was started but not completed\n            break\n    else:\n        print(n) # all tasks were completed\n\n\nif __name__ == '__main__':\n    main()\n", "# https://codeforces.com/contest/1328/problem/A\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n", "\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n", "\n# Read input\nn, T = map(int,input().split())\ntasks = list(map(int, input().split()))\n\n# # Solve problem\n# completed = 0\n# time = 0\n# for t in tasks:\n#     if time + t <= T:\n#         time += t\n#         completed += 1\n#     else:\n#         break\n#\n# # Print output\n# print(completed)\n", "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()] # n = number of tasks, t = time limit\n    times = [int(x) for x in input().split()] # times = list of time it takes to complete each task\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time)) # index of the task that will not be completed\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for i in range(n):\n        total += times[i]\n        if total > t:\n            print(i)\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Read input\nn, T = map(int, input().split())\n\ntasks = list(map(int, input().split()))\n\n# Solve problem\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "\ndef main():\n    n, t = map(int, input().split())\n    times = map(int, input().split())\n    total = 0\n    for i in range(n):\n        total += times[i]\n        if total > t:\n            print(i)\n            exit()\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()] \n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, t = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= t:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n", "import sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "'''\n    https://www.hackerrank.com/challenges/angry-professor\n'''\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    times = list(map(int, input().split()))\n    count = 0\n    for time in times:\n        if time <= 0:\n            count += 1\n\n    if count >= k:\n        print('NO')\n    else:\n        print('YES')\n\n\n\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n", "\n# Read input\n_, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n", "\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem \ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n", "\n\n# Read input\nn, T = map(int, input().split()) # n = number of tasks, T = time limit\ntasks = list(map(int, input().split())) # tasks = a list of time needed to complete each task\n\n# Solve problem\ncompleted = 0 # number of tasks completed\ntime = 0 # time spent\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output\nprint(completed)\n", "\n\nimport sys\n\ndef main():\n    n, T = list(map(int, sys.stdin.readline().split()))\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n", "\n\ndef main():\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, t = map(int, input().split()) #n number of tasks, t time limit\ntasks = list(map(int, input().split())) #tasks in minutes\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n", "\ndef main():\n    print \"Hello World!\"\n\nif __name__ == '__main__':\n    main()\n"]