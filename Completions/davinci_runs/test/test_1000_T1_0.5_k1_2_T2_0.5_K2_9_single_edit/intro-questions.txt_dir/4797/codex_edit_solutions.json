["\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput = raw_input()\n\nprint(input.replace(\"<\", \"\"))\n", "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninp = input()\n\nprint(inp.replace(\"<\", \"\"))\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n# Solution by Andrew Xing\n\ndef main():\n    input = raw_input()\n    output = \"\"\n    for i in range(0, len(input)):\n        if input[i] == \"<\":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput_string = input()\n\nprint(input_string.replace(\"<\", \"\"))\n", "\n# Solution\nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip().split()\n    s = [x.replace(\"<\", \"\") for x in s]\n    print(s)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n", "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '>':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack), end='')\n\nmain()\n", "\n\ndef main():\n    string = input()[::-1]\n    stack = []\n    for c in string:\n        if c == '<':\n            if stack:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack)[::-1])\n\nmain()\n", "\n\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == '<':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print(\"\".join(string_list))\n\nif __name__ == '__main__':\n    main()\n", "\nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n", "\n\ninputString = input(\"Enter your string: \")\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(\"Output string: \" + outputString)\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n", "\ninputString = input()\noutputString = \"\"\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\nprint(outputString)\n", "\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == '<':\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n", "\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n", "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)): # loop through the input string\n    if inputString[i] == \"<\": # if the current character is '<'\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n", "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString\n", "\n# Solution\nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n", "\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s.strip())\n", "\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\ndef main():\n    s_input = input()\n    s_list = list(s_input)\n    for i in s_list:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list), end='')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    string = input(\"Enter the string: \")\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(\"\".join(stack))\n\nmain()\n", "\n\n# Solution \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n\ndef main():\n    s = input()\n    s_list = list()\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n", "\n\ninputString = raw_input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)\n", "\ndef main():\n    s = input()\n    s_temp = ''\n    for i in s:\n        if i == '<':\n            s_temp = s_temp[:-1]\n        else:\n            s_temp += i\n    print(s_temp)\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution\n\nline = input().strip()\n\noutput = \"\"\n\nfor char in line:\n    if char == \">\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print(output)\n\nif __name__ == \"__main__\":\n  main()\n", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input_ = raw_input()\n  output = \"\"\n  for i in range(0, len(input_)):\n    if input_[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input_[i]\n  print output\n\nmain()\n", "\n\n# Solution by Andrew Xing\n\ninput = raw_input()\noutput = \"\"\nfor i in range(0, len(input)):\n  if input[i] == \"<\":\n    output = output[:len(output)-1]\n  else:\n    output += input[i]\nprint output\n", "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(\"\".join(stack))\n\nmain()\n", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = raw_input().strip()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution by Andrew Xing \n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print(output)\n\nmain()\n", "\n\ndef main():\n    s = input()\n    s_list = s.split('<')\n    for i in range(len(s_list)):\n        s_list[i] = s_list[i].split('>')\n    s_list = [i for j in s_list for i in j]\n    print(s_list)\n    result = []\n    for i in s_list:\n        if i == '':\n            result.pop()\n        elif i == ' ':\n            pass\n        else:\n            result.append(i)\n    print(''.join(result))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n", "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output) - 1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n", "\n\nstring = input()\nstack = []\nfor c in string:\n    if c == '<':\n        stack.pop()\n    else:\n        stack.append(c)\nprint(''.join(stack))\n", "\nimport sys\n# Solution by Andrew Xing\n\ndef main():\n  input = sys.stdin.read()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print(output)\n\nmain()\n", "\n# Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\ndef main():\n    s = input().strip()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    string = input(\"Enter the string\")\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            if stack:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n# Solution\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n\ndef main():\n    s = raw_input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n# https://www.hackerearth.com/practice/basic-programming/input-output/basics-of-input-output/practice-problems/algorithm/char-sum-2d3a6ab5/\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\").replace(\"/\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"]