2022-04-09 22:29:38.141226 """
Shortly before the programming contest started, Bjarki decided to update his computer. He didn’t notice anything strange until he started coding in his favorite editor, Bim (Bjarki IMproved). Usually when he’s writing in an editor and presses the backspace key a single character is erased to the left. But after the update pressing that key outputs the character <. He’s tested all the editors on his machine, Bmacs, Neobim, bjedit, NoteBjad++ and Subjark Text, but they all seem to have the same problem. He doesn’t have time to search the web for a solution, and instead decides to temporarily circumvent the issue with a simple program.

Help Bjarki write a program that takes as input the string that was written in the text editor, and outputs the string as Bjarki intended to write it. You can assume that Bjarki never intended to write the character <, and that Bjarki never pressed the backspace key in an empty line.

-----Input-----
One line containing the string that was written in the text editor. The length of the string is at most $10^6$, and it will only contain lowercase letters from the English alphabet as well as the character <.

-----Output-----
One line containing the string as Bjarki intended to write it.

-----Examples-----
Sample Input 1:
a<bc<
Sample Output 1:
b

Sample Input 2:
foss<<rritun
Sample Output 2:
forritun
"""
2022-04-09 22:29:38.141256 --------------------------
2022-04-09 22:30:00.927738 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\n# Solution\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)"
    }
  ],
  "created": 1649557778,
  "id": "cmpl-4vHcYtzw7Ot5ljs1fJJBKVb0K6tpc",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 22:30:00.928130 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:30:00.928186 REASON stop
2022-04-09 22:30:00.929426 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.929449 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))"
}
2022-04-09 22:30:00.929504 REASON stop
2022-04-09 22:30:00.929864 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.929902 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\"))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:30:00.929948 REASON stop
2022-04-09 22:30:00.930259 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.930281 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()"
}
2022-04-09 22:30:00.930326 REASON stop
2022-04-09 22:30:00.930710 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.930743 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ninputString = input()\noutputString = \"\"\n\nfor i in range(len(inputString)):\n    if inputString[i] == \"<\":\n        outputString = outputString[:-1]\n    else:\n        outputString += inputString[i]\n\nprint(outputString)"
}
2022-04-09 22:30:00.930793 REASON stop
2022-04-09 22:30:00.931066 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.931092 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# Solution by Andrew Xing\n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()"
}
2022-04-09 22:30:00.931134 REASON stop
2022-04-09 22:30:00.931462 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.931490 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n#Solution\n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)"
}
2022-04-09 22:30:00.931536 REASON stop
2022-04-09 22:30:00.931783 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
2022-04-09 22:30:00.931809 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\n# Solution\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)"
}
2022-04-09 22:30:00.931861 REASON stop
2022-04-09 22:30:00.931984 test/intro-questions.txt_dir/4797/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4797/solutions.json'
