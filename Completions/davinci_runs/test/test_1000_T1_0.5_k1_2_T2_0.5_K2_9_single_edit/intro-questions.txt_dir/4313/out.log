2022-04-09 19:34:59.738639 """
There are N gems. The value of the i-th gem is V_i.
You will choose some of these gems, possibly all or none, and get them.
However, you need to pay a cost of C_i to get the i-th gem.
Let X be the sum of the values of the gems obtained, and Y be the sum of the costs paid.
Find the maximum possible value of X-Y.

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 20
 - 1 \leq C_i, V_i \leq 50

-----Input-----
Input is given from Standard Input in the following format:
N
V_1 V_2 ... V_N
C_1 C_2 ... C_N

-----Output-----
Print the maximum possible value of X-Y.

-----Sample Input-----
3
10 2 5
6 3 4

-----Sample Output-----
5

If we choose the first and third gems, X = 10 + 5 = 15 and Y = 6 + 4 = 10.
We have X-Y = 5 here, which is the maximum possible value.
"""
2022-04-09 19:34:59.738655 --------------------------
2022-04-09 19:35:14.052379 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\nimport sys\n\n\ndef main():\n    n = int(input())\n    values = [int(x) for x in input().split()]\n    costs = [int(x) for x in input().split()]\n    max_value = 0\n    for i in range(1, 2**n):\n        value = 0\n        cost = 0\n        for j in range(n):\n            if ((i >> j) & 1):\n                value += values[j]\n                cost += costs[j]\n        max_value = max(max_value, value - cost)\n    print(max_value)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nV = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if V[i] > C[i]:\n        ans += V[i] - C[i]\n\nprint(ans)"
    }
  ],
  "created": 1649547300,
  "id": "cmpl-4vEtYl22NMHdRQGxHDSMVaszcTfSO",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:35:14.052575 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\nimport sys\n\n\ndef main():\n    n = int(input())\n    values = [int(x) for x in input().split()]\n    costs = [int(x) for x in input().split()]\n    max_value = 0\n    for i in range(1, 2**n):\n        value = 0\n        cost = 0\n        for j in range(n):\n            if ((i >> j) & 1):\n                value += values[j]\n                cost += costs[j]\n        max_value = max(max_value, value - cost)\n    print(max_value)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 19:35:14.052613 REASON stop
2022-04-09 19:35:14.064545 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nV = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    if V[i] > C[i]:\n        ans += V[i] - C[i]\n\nprint(ans)"
}
2022-04-09 19:35:14.064684 REASON stop
