["\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "from sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds-1)\nelse:\n    print(0)\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip().lower()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n", "\n\nfrom sys import stdin, stdout\n\ns = stdin.readline()\ns = s.strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    stdout.write(str(num_odds - 1))\nelse:\n    stdout.write(str(0))\n", "\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "\n\nletters = [0 for _ in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(1 for letter in letters if letter % 2))\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print num_odds - 1\nelse:\n    print 0\n", "\n#\nletters = [0 for i in range(26)]\n#\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n#\n#\nprint(sum(letter % 2 for letter in letters))\n", "\n\nfrom sys import stdin\n\ns = input()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "import os\nimport sys\nimport filecmp\nimport subprocess\nimport time\n\n\n# This is a simple tester for the Unix 'sort' command.\n# It runs 'sort' on a few test cases and checks its output and exit status.\n\n# Location of the program to test\nprog = './sort'\n\n# Temporary file folder\ntmp = '/tmp/sort/'\n\n# Simple test case\ntestcase1in  = '1 2 3 4\\n'\ntestcase1out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase2in  = '4 3 2 1\\n'\ntestcase2out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase3in  = '1 3 2 4\\n'\ntestcase3out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase4in  = '4 2 3 1\\n'\ntestcase4out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase5in  = '1 2 3 4\\n'\ntestcase5out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase6in  = '4 3 2 1\\n'\ntestcase6out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase7in  = '1 3 2 4\\n'\ntestcase7out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase8in  = '4 2 3 1\\n'\ntestcase8out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase9in  = '1 2 3 4\\n'\ntestcase9out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase10in  = '4 3 2 1\\n'\ntestcase10out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase11in  = '1 3 2 4\\n'\ntestcase11out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase12in  = '4 2 3 1\\n'\ntestcase12out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase13in  = '1 2 3 4\\n'\ntestcase13out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase14in  = '4 3 2 1\\n'\ntestcase14out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase15in  = '1 3 2 4\\n'\ntestcase15out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase16in  = '4 2 3 1\\n'\ntestcase16out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase17in  = '1 2 3 4\\n'\ntestcase17out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase18in  = '4 3 2 1\\n'\ntestcase18out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase19in  = '1 3 2 4\\n'\ntestcase19out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase20in  = '4 2 3 1\\n'\ntestcase20out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase21in  = '1 2 3 4\\n'\ntestcase21out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase22in  = '4 3 2 1\\n'\ntestcase22out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase23in  = '1 3 2 4\\n'\ntestcase23out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase24in  = '4 2 3 1\\n'\ntestcase24out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase25in  = '1 2 3 4\\n'\ntestcase25out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase26in  = '4 3 2 1\\n'\ntestcase26out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase27in  = '1 3 2 4\\n'\ntestcase27out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase28in  = '4 2 3 1\\n'\ntestcase28out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase29in  = '1 2 3 4\\n'\ntestcase29out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase30in  = '4 3 2 1\\n'\ntestcase30out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase31in  = '1 3 2 4\\n'\ntestcase31out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase32in  = '4 2 3 1\\n'\ntestcase32out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase33in  = '1 2 3 4\\n'\ntestcase33out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase34in  = '4 3 2 1\\n'\ntestcase34out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase35in  = '1 3 2 4\\n'\ntestcase35out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase36in  = '4 2 3 1\\n'\ntestcase36out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase37in  = '1 2 3 4\\n'\ntestcase37out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase38in  = '4 3 2 1\\n'\ntestcase38out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase39in  = '1 3 2 4\\n'\ntestcase39out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase40in  = '4 2 3 1\\n'\ntestcase40out = '1 2 3 4\\n'\n\n\n# Run a test case\ndef runtest(inp, outp):\n    \"\"\"Run test case and check output\"\"\"\n    # Write input to temp file\n    tmpin = tmp + 'in'\n    with open(tmpin, 'w') as f:\n        f.write(inp)\n\n    # Run program on input file\n    tmppout = tmp + 'out'\n    retval = subprocess.call([prog], stdin=open(tmpin), stdout=open(tmppout, 'w'))\n\n    # Compare program output with output file\n    success = filecmp.cmp(tmppout, outp)\n\n    # Clean up temp files\n    os.remove(tmpin)\n    os.remove(tmppout)\n\n    return success, retval\n", "\n\nimport sys, string\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*(ord('z')-ord('a')+1)\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    dic = {}\n    for char in string:\n        if char not in dic:\n            dic[char] = 1\n        else:\n            dic[char] += 1\n    count = 0\n    odd = 0\n    for key in dic:\n        if dic[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ns = sys.stdin.readline()\n\n# Counting the number of letters\ncount = [0]*26\nfor c in s:\n    count[ord(c)-ord('a')] += 1\n\n# Counting the number of odd letters\nodd = 0\nfor c in count:\n    if c % 2 == 1:\n        odd += 1\n\nif odd > 1:\n    print odd - 1\nelse:\n    print 0\n", "\n\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n", "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n", "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(sum(letter % 2 for letter in [0 for i in range(26)]))\n", "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(letter % 2 for letter in letters))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#-----Solution 1-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n", "# coding: utf-8\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    print(line)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nletters = [0 for i in range(26)]  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 26 \u043d\u0443\u043b\u0435\u0439\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1  # \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u0431\u0443\u043a\u0432\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n\nprint(sum(letter % 2 for letter in letters))  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430 \u043d\u0435\u0447\u0435\u0442\u043d\u043e\u0441\u0442\u044c\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(1)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\n\nprint(sum(letter % 2 for letter in letters))\n", "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#Solution\n\n#!/usr/bin/env python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\nprint(odds)\n", "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\nif __name__ == \"__main__\":\n    main()\n", "\nletters = [0 for i in range(26)]\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n", "import sys\n\n\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    if odd_count > 1:\n        return odd_count - 1\n    else:\n        return 0\n\nword = input()\nprint(get_peragrams(word))\n", "\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n", "\n\nletters = [0] * 26\n\nfor letter in input().lower():\n    letters[ord(letter) - 97] += 1\n\nprint(sum(1 for letter in letters if letter % 2 != 0))\n", "'''\nCreated on Mar 7, 2016\n\n@author: srikanth\n'''\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for c in dict:\n        if dict[c] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count\n        if c%2 == 1:\n            odd += 1\n\n    if odd>1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n", "\n#https://www.hackerrank.com/challenges/ctci-making-anagrams/problem\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "\nfrom sys import stdin\n\ns = stdin.readline()\n\nletters = [0] * 26\n\nfor c in s:\n    letters[ord(c) - ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "\"\"\"\n\"\"\"\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n", "import math\nimport sys\n\ndef main():\n\tn = int(raw_input())\n\tarr = map(int, raw_input().split())\n\ts = 0\n\tfor i in arr:\n\t\ts += i\n\tprint math.ceil(float(s)/float(n))\n\nif __name__ == \"__main__\":\n\tmain()\n"]