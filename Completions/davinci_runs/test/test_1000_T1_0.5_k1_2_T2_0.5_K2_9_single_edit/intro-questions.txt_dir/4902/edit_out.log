2022-04-16 13:36:58.937212 num operations 1
2022-04-16 13:36:58.937229 size on input set 1
2022-04-16 13:37:08.638092 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "'''\nCreated on Mar 7, 2016\n\n@author: srikanth\n'''\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for c in dict:\n        if dict[c] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    dic = {}\n    for char in string:\n        if char not in dic:\n            dic[char] = 1\n        else:\n            dic[char] += 1\n    count = 0\n    odd = 0\n    for key in dic:\n        if dic[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116219,
  "object": "edit"
}
2022-04-16 13:37:08.638400 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "'''\nCreated on Mar 7, 2016\n\n@author: srikanth\n'''\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for key in dict:\n        if dict[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    dict = {}\n    for c in s:\n        if c not in dict:\n            dict[c] = 1\n        else:\n            dict[c] += 1\n    count = 0\n    odd = 0\n    for c in dict:\n        if dict[c] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        if c not in d:\n            d[c] = 1\n        else:\n            d[c] += 1\n    count = 0\n    odd = 0\n    for key in d:\n        if d[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    dic = {}\n    for char in string:\n        if char not in dic:\n            dic[char] = 1\n        else:\n            dic[char] += 1\n    count = 0\n    odd = 0\n    for key in dic:\n        if dic[key] % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 13:37:08.638454 size on output set 6
2022-04-16 13:37:08.638466 num operations 1
2022-04-16 13:37:08.638588 size on input set 1
2022-04-16 13:37:19.845841 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ns = sys.stdin.readline()\n\n# Counting the number of letters\ncount = [0]*26\nfor c in s:\n    count[ord(c)-ord('a')] += 1\n\n# Counting the number of odd letters\nodd = 0\nfor c in count:\n    if c % 2 == 1:\n        odd += 1\n\nif odd > 1:\n    print odd - 1\nelse:\n    print 0\n"
    },
    {
      "index": 2,
      "text": "import math\nimport sys\n\ndef main():\n\tn = int(raw_input())\n\tarr = map(int, raw_input().split())\n\ts = 0\n\tfor i in arr:\n\t\ts += i\n\tprint math.ceil(float(s)/float(n))\n\nif __name__ == \"__main__\":\n\tmain()\n"
    },
    {
      "index": 3,
      "text": "# coding: utf-8\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count\n        if c%2 == 1:\n            odd += 1\n\n    if odd>1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys, string\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*(ord('z')-ord('a')+1)\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord('a')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116228,
  "object": "edit"
}
2022-04-16 13:37:19.846188 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', "\n\nimport sys\n\ns = sys.stdin.readline()\n\n# Counting the number of letters\ncount = [0]*26\nfor c in s:\n    count[ord(c)-ord('a')] += 1\n\n# Counting the number of odd letters\nodd = 0\nfor c in count:\n    if c % 2 == 1:\n        odd += 1\n\nif odd > 1:\n    print odd - 1\nelse:\n    print 0\n", 'import math\nimport sys\n\ndef main():\n\tn = int(raw_input())\n\tarr = map(int, raw_input().split())\n\ts = 0\n\tfor i in arr:\n\t\ts += i\n\tprint math.ceil(float(s)/float(n))\n\nif __name__ == "__main__":\n\tmain()\n', '# coding: utf-8\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print(odd - 1)\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count\n        if c%2 == 1:\n            odd += 1\n\n    if odd>1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys, string\n\ndef main():\n    s = sys.stdin.readline()\n\n    # Counting the number of letters\n    count = [0]*(ord(\'z\')-ord(\'a\')+1)\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd-1\n    else:\n        print 0\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n\n    # Counting the number of letters\n    count = [0]*26\n    for c in s:\n        count[ord(c)-ord(\'a\')] += 1\n\n    # Counting the number of odd letters\n    odd = 0\n    for c in count:\n        if c % 2 == 1:\n            odd += 1\n\n    if odd > 1:\n        print odd - 1\n    else:\n        print 0\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:37:19.846266 size on output set 9
2022-04-16 13:37:19.846279 num operations 1
2022-04-16 13:37:19.846285 size on input set 1
2022-04-16 13:38:01.739335 fix syntax errors {
  "choices": [
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 0
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = input()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    },
    {
      "index": 2,
      "text": "from sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds-1)\nelse:\n    print(0)\n"
    },
    {
      "index": 4,
      "text": "import os\nimport sys\nimport filecmp\nimport subprocess\nimport time\n\n\n# This is a simple tester for the Unix 'sort' command.\n# It runs 'sort' on a few test cases and checks its output and exit status.\n\n# Location of the program to test\nprog = './sort'\n\n# Temporary file folder\ntmp = '/tmp/sort/'\n\n# Simple test case\ntestcase1in  = '1 2 3 4\\n'\ntestcase1out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase2in  = '4 3 2 1\\n'\ntestcase2out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase3in  = '1 3 2 4\\n'\ntestcase3out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase4in  = '4 2 3 1\\n'\ntestcase4out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase5in  = '1 2 3 4\\n'\ntestcase5out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase6in  = '4 3 2 1\\n'\ntestcase6out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase7in  = '1 3 2 4\\n'\ntestcase7out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase8in  = '4 2 3 1\\n'\ntestcase8out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase9in  = '1 2 3 4\\n'\ntestcase9out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase10in  = '4 3 2 1\\n'\ntestcase10out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase11in  = '1 3 2 4\\n'\ntestcase11out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase12in  = '4 2 3 1\\n'\ntestcase12out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase13in  = '1 2 3 4\\n'\ntestcase13out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase14in  = '4 3 2 1\\n'\ntestcase14out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase15in  = '1 3 2 4\\n'\ntestcase15out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase16in  = '4 2 3 1\\n'\ntestcase16out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase17in  = '1 2 3 4\\n'\ntestcase17out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase18in  = '4 3 2 1\\n'\ntestcase18out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase19in  = '1 3 2 4\\n'\ntestcase19out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase20in  = '4 2 3 1\\n'\ntestcase20out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase21in  = '1 2 3 4\\n'\ntestcase21out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase22in  = '4 3 2 1\\n'\ntestcase22out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase23in  = '1 3 2 4\\n'\ntestcase23out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase24in  = '4 2 3 1\\n'\ntestcase24out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase25in  = '1 2 3 4\\n'\ntestcase25out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase26in  = '4 3 2 1\\n'\ntestcase26out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase27in  = '1 3 2 4\\n'\ntestcase27out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase28in  = '4 2 3 1\\n'\ntestcase28out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase29in  = '1 2 3 4\\n'\ntestcase29out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase30in  = '4 3 2 1\\n'\ntestcase30out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase31in  = '1 3 2 4\\n'\ntestcase31out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase32in  = '4 2 3 1\\n'\ntestcase32out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase33in  = '1 2 3 4\\n'\ntestcase33out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase34in  = '4 3 2 1\\n'\ntestcase34out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase35in  = '1 3 2 4\\n'\ntestcase35out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase36in  = '4 2 3 1\\n'\ntestcase36out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase37in  = '1 2 3 4\\n'\ntestcase37out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase38in  = '4 3 2 1\\n'\ntestcase38out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase39in  = '1 3 2 4\\n'\ntestcase39out = '1 2 3 4\\n'\n\n# Simple test case\ntestcase40in  = '4 2 3 1\\n'\ntestcase40out = '1 2 3 4\\n'\n\n\n# Run a test case\ndef runtest(inp, outp):\n    \"\"\"Run test case and check output\"\"\"\n    # Write input to temp file\n    tmpin = tmp + 'in'\n    with open(tmpin, 'w') as f:\n        f.write(inp)\n\n    # Run program on input file\n    tmppout = tmp + 'out'\n    retval = subprocess.call([prog], stdin=open(tmpin), stdout=open(tmppout, 'w'))\n\n    # Compare program output with output file\n    success = filecmp.cmp(tmppout, outp)\n\n    # Clean up temp files\n    os.remove(tmpin)\n    os.remove(tmppout)\n\n    return success, retval\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print num_odds - 1\nelse:\n    print 0\n"
    },
    {
      "index": 6,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline()\n\nletters = [0] * 26\n\nfor c in s:\n    letters[ord(c) - ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom sys import stdin, stdout\n\ns = stdin.readline()\ns = s.strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    stdout.write(str(num_odds - 1))\nelse:\n    stdout.write(str(0))\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python3\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"
    }
  ],
  "created": 1650116239,
  "object": "edit"
}
2022-04-16 13:38:01.739765 NO RESULT
2022-04-16 13:38:01.739782 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 0
}
2022-04-16 13:38:01.739862 fix syntax errors 8 ["\n\nfrom sys import stdin\n\ns = input()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "from sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds-1)\nelse:\n    print(0)\n", 'import os\nimport sys\nimport filecmp\nimport subprocess\nimport time\n\n\n# This is a simple tester for the Unix \'sort\' command.\n# It runs \'sort\' on a few test cases and checks its output and exit status.\n\n# Location of the program to test\nprog = \'./sort\'\n\n# Temporary file folder\ntmp = \'/tmp/sort/\'\n\n# Simple test case\ntestcase1in  = \'1 2 3 4\\n\'\ntestcase1out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase2in  = \'4 3 2 1\\n\'\ntestcase2out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase3in  = \'1 3 2 4\\n\'\ntestcase3out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase4in  = \'4 2 3 1\\n\'\ntestcase4out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase5in  = \'1 2 3 4\\n\'\ntestcase5out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase6in  = \'4 3 2 1\\n\'\ntestcase6out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase7in  = \'1 3 2 4\\n\'\ntestcase7out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase8in  = \'4 2 3 1\\n\'\ntestcase8out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase9in  = \'1 2 3 4\\n\'\ntestcase9out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase10in  = \'4 3 2 1\\n\'\ntestcase10out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase11in  = \'1 3 2 4\\n\'\ntestcase11out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase12in  = \'4 2 3 1\\n\'\ntestcase12out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase13in  = \'1 2 3 4\\n\'\ntestcase13out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase14in  = \'4 3 2 1\\n\'\ntestcase14out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase15in  = \'1 3 2 4\\n\'\ntestcase15out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase16in  = \'4 2 3 1\\n\'\ntestcase16out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase17in  = \'1 2 3 4\\n\'\ntestcase17out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase18in  = \'4 3 2 1\\n\'\ntestcase18out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase19in  = \'1 3 2 4\\n\'\ntestcase19out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase20in  = \'4 2 3 1\\n\'\ntestcase20out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase21in  = \'1 2 3 4\\n\'\ntestcase21out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase22in  = \'4 3 2 1\\n\'\ntestcase22out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase23in  = \'1 3 2 4\\n\'\ntestcase23out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase24in  = \'4 2 3 1\\n\'\ntestcase24out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase25in  = \'1 2 3 4\\n\'\ntestcase25out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase26in  = \'4 3 2 1\\n\'\ntestcase26out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase27in  = \'1 3 2 4\\n\'\ntestcase27out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase28in  = \'4 2 3 1\\n\'\ntestcase28out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase29in  = \'1 2 3 4\\n\'\ntestcase29out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase30in  = \'4 3 2 1\\n\'\ntestcase30out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase31in  = \'1 3 2 4\\n\'\ntestcase31out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase32in  = \'4 2 3 1\\n\'\ntestcase32out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase33in  = \'1 2 3 4\\n\'\ntestcase33out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase34in  = \'4 3 2 1\\n\'\ntestcase34out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase35in  = \'1 3 2 4\\n\'\ntestcase35out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase36in  = \'4 2 3 1\\n\'\ntestcase36out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase37in  = \'1 2 3 4\\n\'\ntestcase37out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase38in  = \'4 3 2 1\\n\'\ntestcase38out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase39in  = \'1 3 2 4\\n\'\ntestcase39out = \'1 2 3 4\\n\'\n\n# Simple test case\ntestcase40in  = \'4 2 3 1\\n\'\ntestcase40out = \'1 2 3 4\\n\'\n\n\n# Run a test case\ndef runtest(inp, outp):\n    """Run test case and check output"""\n    # Write input to temp file\n    tmpin = tmp + \'in\'\n    with open(tmpin, \'w\') as f:\n        f.write(inp)\n\n    # Run program on input file\n    tmppout = tmp + \'out\'\n    retval = subprocess.call([prog], stdin=open(tmpin), stdout=open(tmppout, \'w\'))\n\n    # Compare program output with output file\n    success = filecmp.cmp(tmppout, outp)\n\n    # Clean up temp files\n    os.remove(tmpin)\n    os.remove(tmppout)\n\n    return success, retval\n', "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print num_odds - 1\nelse:\n    print 0\n", "\nfrom sys import stdin\n\ns = stdin.readline()\n\nletters = [0] * 26\n\nfor c in s:\n    letters[ord(c) - ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n", "\n\nfrom sys import stdin, stdout\n\ns = stdin.readline()\ns = s.strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    stdout.write(str(num_odds - 1))\nelse:\n    stdout.write(str(0))\n", "#!/usr/bin/env python3\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\nletters = [0]*26\n\nfor c in s:\n    letters[ord(c)-ord('a')] += 1\n\nnum_odds = 0\nfor i in range(len(letters)):\n    if letters[i] % 2 == 1:\n        num_odds += 1\n\nif num_odds > 1:\n    print(num_odds - 1)\nelse:\n    print(0)\n"]
2022-04-16 13:38:01.739986 size on output set 8
2022-04-16 13:38:01.740004 num operations 1
2022-04-16 13:38:01.740012 size on input set 1
2022-04-16 13:38:08.011584 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip().lower()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650116281,
  "object": "edit"
}
2022-04-16 13:38:08.011887 fix syntax errors 9 ['import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip().lower()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cnt = 0\n    for v in d.values():\n        if v % 2 != 0:\n            cnt += 1\n    print(cnt - 1 if cnt != 0 else 0)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 13:38:08.011929 size on output set 5
2022-04-16 13:38:08.011940 num operations 1
2022-04-16 13:38:08.011946 size on input set 1
2022-04-16 13:38:16.983102 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nletters = [0 for i in range(26)]  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 26 \u043d\u0443\u043b\u0435\u0439\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1  # \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u0431\u0443\u043a\u0432\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n\nprint(sum(letter % 2 for letter in letters))  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430 \u043d\u0435\u0447\u0435\u0442\u043d\u043e\u0441\u0442\u044c\n"
    },
    {
      "index": 1,
      "text": "\n#\nletters = [0 for i in range(26)]\n#\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n#\n#\nprint(sum(letter % 2 for letter in letters))\n"
    },
    {
      "index": 2,
      "text": "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n"
    },
    {
      "index": 3,
      "text": "\n\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\n\nprint(sum(letter % 2 for letter in letters))\n"
    },
    {
      "index": 4,
      "text": "\nletters = [0 for i in range(26)]\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n"
    },
    {
      "index": 5,
      "text": "\n\nprint(sum(letter % 2 for letter in [0 for i in range(26)]))\n"
    },
    {
      "index": 6,
      "text": "\n\nletters = [0] * 26\n\nfor letter in input().lower():\n    letters[ord(letter) - 97] += 1\n\nprint(sum(1 for letter in letters if letter % 2 != 0))\n"
    },
    {
      "index": 7,
      "text": "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(letter % 2 for letter in letters))\n"
    },
    {
      "index": 8,
      "text": "\n\nletters = [0 for _ in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(1 for letter in letters if letter % 2))\n"
    }
  ],
  "created": 1650116288,
  "object": "edit"
}
2022-04-16 13:38:16.983337 fix syntax errors 9 ["\n\nletters = [0 for i in range(26)]  # массив из 26 нулей\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1  # находим индекс буквы в массиве\n\nprint(sum(letter % 2 for letter in letters))  # проверяем на нечетность\n", "\n#\nletters = [0 for i in range(26)]\n#\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n#\n#\nprint(sum(letter % 2 for letter in letters))\n", "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n", "\n\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\n\nprint(sum(letter % 2 for letter in letters))\n", "\nletters = [0 for i in range(26)]\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\nprint(sum(letter % 2 for letter in letters))\n", '\n\nprint(sum(letter % 2 for letter in [0 for i in range(26)]))\n', '\n\nletters = [0] * 26\n\nfor letter in input().lower():\n    letters[ord(letter) - 97] += 1\n\nprint(sum(1 for letter in letters if letter % 2 != 0))\n', "\nletters = [0 for i in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(letter % 2 for letter in letters))\n", "\n\nletters = [0 for _ in range(26)]\n\nfor letter in input():\n    letters[ord(letter) - ord('a')] += 1\n\nprint(sum(1 for letter in letters if letter % 2))\n"]
2022-04-16 13:38:16.983378 size on output set 9
2022-04-16 13:38:16.983389 num operations 1
2022-04-16 13:38:16.983393 size on input set 1
2022-04-16 13:38:23.525870 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Solution\n\n#!/usr/bin/env python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 1,
      "text": "\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 2,
      "text": "\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 3,
      "text": "\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 4,
      "text": "\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 5,
      "text": "\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 6,
      "text": "\n#https://www.hackerrank.com/challenges/ctci-making-anagrams/problem\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 7,
      "text": "\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n"
    },
    {
      "index": 8,
      "text": "\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    if odd_count > 1:\n        return odd_count - 1\n    else:\n        return 0\n\nword = input()\nprint(get_peragrams(word))\n"
    }
  ],
  "created": 1650116297,
  "object": "edit"
}
2022-04-16 13:38:23.526169 fix syntax errors 9 ['\n\n#Solution\n\n#!/usr/bin/env python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n#Solution\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n#https://www.hackerrank.com/challenges/ctci-making-anagrams/problem\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n\n# Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    return odd_count - 1\n\nword = input()\nprint(get_peragrams(word))\n', '\n#Solution\n\n#!/usr/bin/python\n\ndef is_palindrome(word):\n    return word == word[::-1]\n\ndef get_peragrams(word):\n    word = word.lower()\n    word_dict = {}\n    for char in word:\n        if char in word_dict:\n            word_dict[char] += 1\n        else:\n            word_dict[char] = 1\n\n    odd_count = 0\n    for count in word_dict.values():\n        if count % 2 == 1:\n            odd_count += 1\n    if odd_count > 1:\n        return odd_count - 1\n    else:\n        return 0\n\nword = input()\nprint(get_peragrams(word))\n']
2022-04-16 13:38:23.526225 size on output set 7
2022-04-16 13:38:23.526236 num operations 1
2022-04-16 13:38:23.526241 size on input set 1
2022-04-16 13:38:30.379636 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 1,
      "text": "\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 3,
      "text": "\n\n#-----Solution 1-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 4,
      "text": "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 5,
      "text": "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 6,
      "text": "\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 7,
      "text": "\n\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n"
    },
    {
      "index": 8,
      "text": "\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\nprint(odds)\n"
    }
  ],
  "created": 1650116303,
  "object": "edit"
}
2022-04-16 13:38:30.379885 fix syntax errors 9 ['\n\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n\n#-----Solution 1-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n\n# -----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\n', '\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\n\n\n#-----Solution-----\n\nimport sys\nfrom collections import Counter\n\nword = sys.stdin.readline().strip()\ncount = Counter(word)\nodds = 0\nfor i in count.values():\n    if i%2 != 0:\n        odds += 1\nprint(odds)\nprint(odds)\n']
2022-04-16 13:38:30.380018 size on output set 6
2022-04-16 13:38:30.380032 num operations 1
2022-04-16 13:38:30.380037 size on input set 1
2022-04-16 13:38:39.120229 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(1)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\"\"\"\n\"\"\"\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\n\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650116310,
  "object": "edit"
}
2022-04-16 13:38:39.120479 fix syntax errors 9 ["\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(1)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip()\n    print(line)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", '"""\n"""\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == \'__main__\':\n    main()\n', "import sys\n\n\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd - 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    # print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    word = sys.stdin.readline().strip()\n    counter = {}\n    for letter in word:\n        if letter not in counter:\n            counter[letter] = 0\n        counter[letter] += 1\n    print(counter)\n    odd = 0\n    for value in counter.values():\n        if value % 2 != 0:\n            odd += 1\n    if odd == 0:\n        print(0)\n    else:\n        print(odd)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 13:38:39.120532 size on output set 8
