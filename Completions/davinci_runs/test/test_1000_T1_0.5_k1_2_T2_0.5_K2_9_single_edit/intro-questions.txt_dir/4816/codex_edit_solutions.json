["\n\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\nimport math\n\nx = int(input())\ny = int(input())\nx1 = int(input())\ny1 = int(input())\nx2 = int(input())\ny2 = int(input())\n\ndx = min(abs(x - x1), abs(x - x2))\ndy = min(abs(y - y1), abs(y - y2))\n\nprint(math.sqrt(dx * dx + dy * dy))\n", "\nimport sys\nimport math\n\nx, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\nmin_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n               math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\nprint(min_dist)\n", "#!/usr/bin/python3\n\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]  # input coordinates\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side (y2)\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side (y1)\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side (y1)\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side (y2)\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(abs(x1 - x))\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(abs(x - x2))\n    else:\n        if y <= y1:\n            print(abs(y1 - y))\n        else:\n            print(abs(y - y2))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] # \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u0448\u0435\u0441\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n\nif x < x1:\n    print(x1 - x) # \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0445 \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u0432\u043e\u0433\u043e \u043a\u0440\u0430\u044f \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\nelif x > x2:\n    print(x - x2) # \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0445 \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0430\u0432\u043e\u0433\u043e \u043a\u0440\u0430\u044f \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1),\n              abs(x - x2) + abs(y - y1),\n              abs(x - x1) + abs(y - y2),\n              abs(x - x2) + abs(y - y2)))\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "#!/usr/bin/env python3\n\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, raw_input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split()) \n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2), math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Read from stdin\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Calculate the min distance\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "import math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(round(distance, 6))\n\nif __name__ == '__main__':\n    main()\n", "x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\ndist = 0\n\n\nif x < x1:\n    dist += x1 - x\nelif x > x2:\n    dist += x - x2\n\nelif y < y1:\n    dist += y1 - y\nelse:\n    dist += y - y2\n\nprint(dist)\n", "\n# Read from stdin\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "#!/usr/bin/env python3\n\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read from stdin\nx, y, x1, y1, x2, y2 = [int(x) for x in input().strip().split()]\n\n# Calculate the min distance\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "#\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n#\n# Read from stdin\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n\n# Read from stdin\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]  # Read the input\n\n# Calculate the min distance\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "\n#\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n#\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n#\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # \u0412\u0432\u043e\u0434 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\n\nif x1 <= x <= x2 and y1 <= y <= y2:  # \u0415\u0441\u043b\u0438 \u0442\u043e\u0447\u043a\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n    x = min(abs(x1 - x), abs(x2 - x))  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0443\u0434\u0430 \u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u043f\u043e \u043e\u0441\u0438 x\n    y = min(abs(y1 - y), abs(y2 - y))  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0443\u0434\u0430 \u0431\u043b\u0438\u0436\u0435 \u043f\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u043f\u043e \u043e\u0441\u0438 y\n    print(min(x, y))  # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u043e \u0433\u0440\u0430\u043d\u0438\u0446\u044b\n\nelif x1 <= x <= x2:  # \u0415\u0441\u043b\u0438 \u0442\u043e\u0447\u043a\u0430 \u043b\u0435\u0436\u0438\u0442 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u043f\u043e \u043e\u0441\u0438 x\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:  # \u0415\u0441\u043b\u0438 \u0442\u043e\u0447\u043a\u0430 \u043b\u0435\u0436\u0438\u0442 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u043f\u043e \u043e\u0441\u0438 y\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:  # \u0415\u0441\u043b\u0438 \u0442\u043e\u0447\u043a\u0430 \u043b\u0435\u0436\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())  # list(map(int, input().split()))\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))  # min(y - y1, y2 - y, x - x1, x2 - x)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x - x1) ** 2 + (y - y2) ** 2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x - x1) ** 2 + (y - y1) ** 2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x - x2) ** 2 + (y - y1) ** 2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x - x2) ** 2 + (y - y2) ** 2)\n\n    \n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\n\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\nelif y > y2:\n    print(y - y2)\n    print(y1 - y)\nelse:\n    print(0)\n", "\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()] # get input\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2) # calculate distance\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2) # calculate distance\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2) # calculate distance\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2) # calculate distance\n\n    print(distance) # print distance\n\nif __name__ == '__main__':\n    main()\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()] \n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "\n\n\ndef main():\n    x, y = map(int, input().split())\n    x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)) * 2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Read from stdin\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance between the two points\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result\nprint(min_dist)\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nx, y, x1, y1, x2, y2 = map(int, input().split())\nprint(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [float(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x1 <= x <= x2 and y1 <= y <= y2:\n        print(0)\n    else:\n        if x <= x1:\n            if y <= y1:\n                print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n            elif y >= y2:\n                print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n            else:\n                print(x1 - x)\n        elif x >= x2:\n            if y <= y1:\n                print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n            elif y >= y2:\n                print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n            else:\n                print(x - x2)\n        else:\n            if y <= y1:\n                print(y1 - y)\n            else:\n                print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# http://codeforces.com/problemset/problem/158/A\n\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())  # input() is a built-in function that takes input from the user\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n\nimport math\n\n# Read input and convert to ints\nx, y, x1, y1, x2, y2 = map(int, input().split()) \n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n"]