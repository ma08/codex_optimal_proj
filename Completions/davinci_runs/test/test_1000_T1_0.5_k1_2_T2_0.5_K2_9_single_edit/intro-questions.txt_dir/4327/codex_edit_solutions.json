["def main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# Receive input\na, p = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = a*3 + p//2\n\n# Print the result\nprint(apple_pies)\n", "# https://atcoder.jp/contests/abc139/tasks/abc139_a\n\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc038/tasks/abc038_a\n\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Receive input\na, p = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = a*3 + p//2\n\n# Print the result\nprint(apple_pies)\n", "#! /usr/bin/env python3\n\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n", "\n\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A * 3 + P // 2\n\n# Print the result\nprint(apple_pies)\n", "\n\n# # Receive input\n# A, P = map(int, input().split())\n\n# # Calculate the maximum number of apple pies we can make with what we have now\n# apple_pies = A*3 + P//2\n\n# # Print the result\n# print(apple_pies)\n\n# N, M = map(int, input().split())\n# a = map(int, input().split())\n# a = list(a)\n# a.sort(reverse=True)\n# print(a)\n# print(sum(a[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# A.sort(reverse=True)\n# print(sum(A[:M]))\n", "\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # a, p = map(int, input().split())\n    # print(p // 2 + (a + p % 2) * 3 // 2)\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    x = int(input())\n    count = 0\n    for i in range(a + 1):\n        for j in range(b + 1):\n            for k in range(c + 1):\n                if x == 500 * i + 100 * j + 50 * k:\n                    count += 1\n    print(count)\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n\ndef main():\n    a, p = map(int, input().split())\n    print(p // 2 + (a + p % 2) * 3 // 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# Receive input\nA, P = map(int, input().split())\n\n# Calculate the maximum number of apple pies we can make with what we have now\napple_pies = A*3 + P//2\n\n# Print the result\nprint(apple_pies)\n"]