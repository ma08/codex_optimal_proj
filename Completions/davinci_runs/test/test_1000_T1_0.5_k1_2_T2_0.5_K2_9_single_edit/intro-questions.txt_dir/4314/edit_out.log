2022-04-16 06:30:24.929817 num operations 1
2022-04-16 06:30:24.929837 size on input set 1
2022-04-16 06:30:40.200178 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# vim: set fileencoding=utf-8 :\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().strip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "error": {
        "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
        "type": "invalid_edit"
      },
      "index": 2
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h - 1, -1, -1):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n    for i in range(w - 1, -1, -1):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().strip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if '#' not in grid[i]:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if '#' not in column:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650090625,
  "object": "edit"
}
2022-04-16 06:30:40.200466 NO RESULT
2022-04-16 06:30:40.200483 {
  "error": {
    "message": "Could not edit text. Please sample again or try with a different temperature setting, input, or instruction.",
    "type": "invalid_edit"
  },
  "index": 2
}
2022-04-16 06:30:40.200540 fix syntax errors 8 ["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# vim: set fileencoding=utf-8 :\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().strip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h - 1, -1, -1):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n    for i in range(w - 1, -1, -1):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    h, w = list(map(int, sys.stdin.readline().split()))\n    grid = [list(sys.stdin.readline().strip()) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if grid[i].count('#') == 0:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if column.count('#') == 0:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w = map(int, sys.stdin.readline().split())\n    grid = [list(sys.stdin.readline().split()[0]) for i in range(h)]\n    for i in range(h):\n        if '#' not in grid[i]:\n            grid.pop(i)\n            h -= 1\n            i -= 1\n    for i in range(w):\n        column = [grid[j][i] for j in range(h)]\n        if '#' not in column:\n            for j in range(h):\n                grid[j].pop(i)\n            w -= 1\n            i -= 1\n    for i in range(h):\n        print(''.join(grid[i]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:30:40.200675 size on output set 7
2022-04-16 06:30:40.200688 num operations 1
2022-04-16 06:30:40.200694 size on input set 1
2022-04-16 06:30:50.197802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#'\n            all_white = False\n            break\n    if all_white:\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 1,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nh, w = map(int, input().split())\ngrid = []\nfor line in sys.stdin:\n    grid.append(list(line.rstrip()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 3,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 4,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 5,
      "text": "\n\nh, w = map(int, input().split())  # type: int, int\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))  # type: List[str]\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 6,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 7,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# check for rows\nfor i in range(h):\n    all_black = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_black = False\n            break\n    if all_black:\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_black = False\n            break\n    if all_black:\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    },
    {
      "index": 8,
      "text": "\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print(\"grid: \")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"row: \" + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print(\"grid: \")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == '#':\n            all_white = False\n            break\n    if all_white:\n        # print(\"col: \" + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print(\"grid: \")\n# print(grid)\n\nfor i in range(h):\n    print(\"\".join(grid[i]))\n"
    }
  ],
  "created": 1650090640,
  "object": "edit"
}
2022-04-16 06:30:50.198131 fix syntax errors 9 ['\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\'\n            all_white = False\n            break\n    if all_white:\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', 'import sys\n\nh, w = map(int, input().split())\ngrid = []\nfor line in sys.stdin:\n    grid.append(list(line.rstrip()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\n\nh, w = map(int, input().split())  # type: int, int\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))  # type: List[str]\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# check for rows\nfor i in range(h):\n    all_black = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_black = False\n            break\n    if all_black:\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_black = False\n            break\n    if all_black:\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\nfor i in range(h):\n    print("".join(grid[i]))\n', '\nh, w = map(int, input().split())\ngrid = []\nfor i in range(h):\n    grid.append(list(input()))\n\n# print("grid: ")\n# print(grid)\n\n# check for rows\nfor i in range(h):\n    all_white = True\n    for j in range(w):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("row: " + str(i))\n        grid.pop(i)\n        h -= 1\n        i -= 1\n\n# print("grid: ")\n# print(grid)\n\n# check for columns\nfor j in range(w):\n    all_white = True\n    for i in range(h):\n        if grid[i][j] == \'#\':\n            all_white = False\n            break\n    if all_white:\n        # print("col: " + str(j))\n        for i in range(h):\n            grid[i].pop(j)\n        w -= 1\n        j -= 1\n\n# print("grid: ")\n# print(grid)\n\nfor i in range(h):\n    print("".join(grid[i]))\n']
2022-04-16 06:30:50.198295 size on output set 5
