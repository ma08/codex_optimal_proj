["\nimport sys\n\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.append(word)\n        print()\n\nmain()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end = ' ')\n    else:\n        print('.', end = ' ')\nprint()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\nwords = []\nfor line in sys.stdin:\n    line = line.lower().split()\n    for word in line:\n        if word in words:\n            print(\".\", end=\" \")\n        else:\n            words.append(word)\n            print(word, end=\" \")\n    print()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split() # strip() and split() are string methods\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Apr  6 16:36:34 2018\n@author: mohituniyal\n\"\"\"\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "\nimport os\nimport sys\n\ndef main():\n\twords = []\n\tfor line in sys.stdin:\n\t\tline = line.lower().split()\n\t\tfor word in line:\n\t\t\tif word in words:\n\t\t\t\tprint(\".\", end=\" \")\n\t\t\telse:\n\t\t\t\twords.append(word)\n\t\t\t\tprint(word, end=\" \")\n\t\tprint()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    unique = []\n    for line in sys.stdin:\n        words.extend(line.split())\n\n    for word in words:\n        if word.lower() not in unique:\n            unique.append(word.lower())\n            print(word, end=' ')\n        else:\n            print('.', end=' ')\n    print()\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words or word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower().strip('.,!?()') not in words:\n                words.append(word.lower().strip('.,!?()'))\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word not in words:\n                words.append(word)\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n", "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\nimport math\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\nwords = []\nfor line in lines:\n    words.append(line.split())\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n", "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split(' '):\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        words = line.split()\n        for word in words:\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "import sys\n\n\ndef main():\n    words = {}\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words[word.lower()] = True\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for i, word in enumerate(line):\n            if word.lower() in words:\n                line[i] = '.'\n            words.append(word.lower())\n        print(' '.join(line))\n\nmain()\n", "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            #else:\n                #print('.', end=' ')\n        print('')\n\nmain()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word not in words:\n                print(word, end=' ')\n                words.append(word)\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print\n\nmain()\n", "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = '.'\n    print(\" \".join(line))\n", "\ndef main(file):\n    with open(file) as f:\n        words = []\n        for line in f:\n            line = line.strip().split()\n            for word in line:\n                if word.lower() not in words:\n                    words.append(word.lower())\n                    print(word, end=' ')\n                else:\n                    print('.', end=' ')\n            print('')\nif __name__ == '__main__':\n    main(sys.argv[1])\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word.lower(), end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\n\nwords = [] # words[0] -> first word in list\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split()) # adds words from line to words list\n    except EOFError:\n        break\n\nunique = [] # unique[0] -> first unique word in list\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "import string\n\nimport sys\n\ndef main():\n    punctuations = string.punctuation\n    words = []\n    for line in sys.stdin:\n        line = line.split()\n            word = word.strip(punctuations)\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print(\"\")\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split(\" \")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = set() # create an empty set\n    for line in sys.stdin:\n        for word in line.split(): # iterate over each word in the line\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique: # Check if the word is already in the list\n        unique.append(word.lower()) # If not append it\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    word = word.lower()\n    if word not in unique:\n        unique.append(word)\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:len(line)]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n", "\n#!/usr/bin/python3\nimport sys, re\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        # print(line)\n        line = re.sub(r'([a-zA-Z0-9])\\1{2,}', r'\\1\\1', line)\n        line = re.sub(r'\\b[a-zA-Z0-9]{7,}\\b', lambda x: x.group(0)[0] + \"\".join(['*' for i in range(len(x.group(0))-2)] ) + x.group(0)[-1], line)\n        print(line)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\n    \"\"\"\n    This is the main method.\n    \"\"\"\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for i in range(len(line)):\n            if line[i] in words:\n                line[i] = \".\"\n            words.append(line[i])\n        print(\" \".join(line), end=\"\")\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result.strip())\n\nif __name__ == \"__main__\":\n    main()\n"]