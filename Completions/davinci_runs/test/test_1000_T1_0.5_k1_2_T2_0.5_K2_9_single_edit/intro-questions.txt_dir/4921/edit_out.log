2022-04-16 14:04:57.997929 num operations 1
2022-04-16 14:04:57.997948 size on input set 1
2022-04-16 14:05:08.683746 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end = ' ')\n    else:\n        print('.', end = ' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    word = word.lower()\n    if word not in unique:\n        unique.append(word)\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    unique = []\n    for line in sys.stdin:\n        words.extend(line.split())\n\n    for word in words:\n        if word.lower() not in unique:\n            unique.append(word.lower())\n            print(word, end=' ')\n        else:\n            print('.', end=' ')\n    print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique: # Check if the word is already in the list\n        unique.append(word.lower()) # If not append it\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 4,
      "text": "\n\nwords = [] # words[0] -> first word in list\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split()) # adds words from line to words list\n    except EOFError:\n        break\n\nunique = [] # unique[0] -> first unique word in list\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 5,
      "text": "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 6,
      "text": "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 7,
      "text": "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 8,
      "text": "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    }
  ],
  "created": 1650117898,
  "object": "edit"
}
2022-04-16 14:05:08.684056 fix syntax errors 9 ["\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end = ' ')\n    else:\n        print('.', end = ' ')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    word = word.lower()\n    if word not in unique:\n        unique.append(word)\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    unique = []\n    for line in sys.stdin:\n        words.extend(line.split())\n\n    for word in words:\n        if word.lower() not in unique:\n            unique.append(word.lower())\n            print(word, end=' ')\n        else:\n            print('.', end=' ')\n    print()\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique: # Check if the word is already in the list\n        unique.append(word.lower()) # If not append it\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nwords = [] # words[0] -> first word in list\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split()) # adds words from line to words list\n    except EOFError:\n        break\n\nunique = [] # unique[0] -> first unique word in list\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"]
2022-04-16 14:05:08.684112 size on output set 8
2022-04-16 14:05:08.684122 num operations 1
2022-04-16 14:05:08.684128 size on input set 1
2022-04-16 14:05:15.339403 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split(' '):\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word not in words:\n                words.append(word)\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "import sys\n\n\ndef main():\n    words = {}\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words[word.lower()] = True\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650117908,
  "object": "edit"
}
2022-04-16 14:05:15.339751 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split(\' \'):\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word not in words:\n                words.append(word)\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    words = {}\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words[word.lower()] = True\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 14:05:15.339799 size on output set 7
2022-04-16 14:05:15.339810 num operations 1
2022-04-16 14:05:15.339815 size on input set 1
2022-04-16 14:05:21.976703 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        words = line.split()\n        for word in words:\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word not in words:\n                print(word, end=' ')\n                words.append(word)\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650117915,
  "object": "edit"
}
2022-04-16 14:05:21.976985 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        words = line.split()\n        for word in words:\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word not in words:\n                print(word, end=' ')\n                words.append(word)\n            else:\n                print('.', end=' ')\n        print()\n\n#main()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"]
2022-04-16 14:05:21.977100 size on output set 5
2022-04-16 14:05:21.977113 num operations 1
2022-04-16 14:05:21.977118 size on input set 1
2022-04-16 14:05:32.282657 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result.strip())\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n#!/usr/bin/python3\nimport sys, re\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        # print(line)\n        line = re.sub(r'([a-zA-Z0-9])\\1{2,}', r'\\1\\1', line)\n        line = re.sub(r'\\b[a-zA-Z0-9]{7,}\\b', lambda x: x.group(0)[0] + \"\".join(['*' for i in range(len(x.group(0))-2)] ) + x.group(0)[-1], line)\n        print(line)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\n\n    \"\"\"\n    This is the main method.\n    \"\"\"\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650117922,
  "object": "edit"
}
2022-04-16 14:05:32.282953 fix syntax errors 9 ['\nimport sys\n\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result.strip())\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n#!/usr/bin/python3\nimport sys, re\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        # print(line)\n        line = re.sub(r\'([a-zA-Z0-9])\\1{2,}\', r\'\\1\\1\', line)\n        line = re.sub(r\'\\b[a-zA-Z0-9]{7,}\\b\', lambda x: x.group(0)[0] + "".join([\'*\' for i in range(len(x.group(0))-2)] ) + x.group(0)[-1], line)\n        print(line)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\n    """\n    This is the main method.\n    """\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 14:05:32.283113 size on output set 7
2022-04-16 14:05:32.283126 num operations 1
2022-04-16 14:05:32.283131 size on input set 1
2022-04-16 14:05:41.641598 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nwords = []\nfor line in sys.stdin:\n    line = line.lower().split()\n    for word in line:\n        if word in words:\n            print(\".\", end=\" \")\n        else:\n            words.append(word)\n            print(word, end=\" \")\n    print()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split(\" \")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "import string\n\nimport sys\n\ndef main():\n    punctuations = string.punctuation\n    words = []\n    for line in sys.stdin:\n        line = line.split()\n            word = word.strip(punctuations)\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for i in range(len(line)):\n            if line[i] in words:\n                line[i] = \".\"\n            words.append(line[i])\n        print(\" \".join(line), end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\nimport os\nimport sys\n\ndef main():\n\twords = []\n\tfor line in sys.stdin:\n\t\tline = line.lower().split()\n\t\tfor word in line:\n\t\t\tif word in words:\n\t\t\t\tprint(\".\", end=\" \")\n\t\t\telse:\n\t\t\t\twords.append(word)\n\t\t\t\tprint(word, end=\" \")\n\t\tprint()\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print(\"\")\n\nmain()\n"
    }
  ],
  "created": 1650117932,
  "object": "edit"
}
2022-04-16 14:05:41.641851 fix syntax errors 9 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\nwords = []\nfor line in sys.stdin:\n    line = line.lower().split()\n    for word in line:\n        if word in words:\n            print(".", end=" ")\n        else:\n            words.append(word)\n            print(word, end=" ")\n    print()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split(" ")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', 'import string\n\nimport sys\n\ndef main():\n    punctuations = string.punctuation\n    words = []\n    for line in sys.stdin:\n        line = line.split()\n            word = word.strip(punctuations)\n            word = word.lower()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for i in range(len(line)):\n            if line[i] in words:\n                line[i] = "."\n            words.append(line[i])\n        print(" ".join(line), end="")\n        print()\n\nmain()\n', '\nimport os\nimport sys\n\ndef main():\n\twords = []\n\tfor line in sys.stdin:\n\t\tline = line.lower().split()\n\t\tfor word in line:\n\t\t\tif word in words:\n\t\t\t\tprint(".", end=" ")\n\t\t\telse:\n\t\t\t\twords.append(word)\n\t\t\t\tprint(word, end=" ")\n\t\tprint()\n\nmain()\n', '\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print("")\n\nmain()\n']
2022-04-16 14:05:41.641910 size on output set 9
2022-04-16 14:05:41.641924 num operations 1
2022-04-16 14:05:41.641929 size on input set 1
2022-04-16 14:05:50.203261 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words or word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Apr  6 16:36:34 2018\n@author: mohituniyal\n\"\"\"\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.append(word)\n        print()\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    words = set() # create an empty set\n    for line in sys.stdin:\n        for word in line.split(): # iterate over each word in the line\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1650117941,
  "object": "edit"
}
2022-04-16 14:05:50.203708 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words or word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nif __name__ == '__main__':\n    main()\n", '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Fri Apr  6 16:36:34 2018\n@author: mohituniyal\n"""\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print(\'.\', end=\' \')\n            else:\n                print(word, end=\' \')\n                words.add(word.lower())\n        print()\n\nmain()\n', "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.append(word)\n        print()\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = set() # create an empty set\n    for line in sys.stdin:\n        for word in line.split(): # iterate over each word in the line\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"]
2022-04-16 14:05:50.203778 size on output set 8
2022-04-16 14:05:50.203792 num operations 1
2022-04-16 14:05:50.203798 size on input set 1
2022-04-16 14:05:57.681598 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 3,
      "text": "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = '.'\n    print(\" \".join(line))\n"
    },
    {
      "index": 5,
      "text": "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nimport math\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\nwords = []\nfor line in lines:\n    words.append(line.split())\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:len(line)]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    }
  ],
  "created": 1650117950,
  "object": "edit"
}
2022-04-16 14:05:57.681849 fix syntax errors 9 ['\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', 'import sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', 'import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i + 1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i + 1:]:\n            line[i] = \'.\'\n    print(" ".join(line))\n', 'import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\nimport math\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\nwords = []\nfor line in lines:\n    words.append(line.split())\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\n\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:len(line)]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n']
2022-04-16 14:05:57.682001 size on output set 9
2022-04-16 14:05:57.682014 num operations 1
2022-04-16 14:05:57.682020 size on input set 1
2022-04-16 14:06:07.714353 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main(file):\n    with open(file) as f:\n        words = []\n        for line in f:\n            line = line.strip().split()\n            for word in line:\n                if word.lower() not in words:\n                    words.append(word.lower())\n                    print(word, end=' ')\n                else:\n                    print('.', end=' ')\n            print('')\nif __name__ == '__main__':\n    main(sys.argv[1])\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            #else:\n                #print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower().strip('.,!?()') not in words:\n                words.append(word.lower().strip('.,!?()'))\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split() # strip() and split() are string methods\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word.lower(), end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for i, word in enumerate(line):\n            if word.lower() in words:\n                line[i] = '.'\n            words.append(word.lower())\n        print(' '.join(line))\n\nmain()\n"
    }
  ],
  "created": 1650117957,
  "object": "edit"
}
2022-04-16 14:06:07.714599 fix syntax errors 9 ["import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\ndef main(file):\n    with open(file) as f:\n        words = []\n        for line in f:\n            line = line.strip().split()\n            for word in line:\n                if word.lower() not in words:\n                    words.append(word.lower())\n                    print(word, end=' ')\n                else:\n                    print('.', end=' ')\n            print('')\nif __name__ == '__main__':\n    main(sys.argv[1])\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            #else:\n                #print('.', end=' ')\n        print('')\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower().strip('.,!?()') not in words:\n                words.append(word.lower().strip('.,!?()'))\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split() # strip() and split() are string methods\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word.lower(), end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for i, word in enumerate(line):\n            if word.lower() in words:\n                line[i] = '.'\n            words.append(word.lower())\n        print(' '.join(line))\n\nmain()\n"]
2022-04-16 14:06:07.714654 size on output set 8
