["\n\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\nprint(n)\n", "n = int(input())\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\nprint(n)\n", "#!/usr/bin/env python\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(raw_input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0 if len(n) > 0 else False\n\ndef nextHarshad(n):\n    n += 1 if n > 0 else 0\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) \n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == '__main__':\n    main()\n", "def sum_digits(number):\n    summ = 0\n    while number:\n        summ += number % 10\n        number //= 10\n    return summ\nnumber = int(input())\nwhile number % sum_digits(number) != 0:\n    number += 1\nprint(number)\n", "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\nif __name__ == \"__main__\":\n    main()\n", "\ndef sum_digits(n):\n\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0 or n == 0:\n        n += 1\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input(\"Enter a number: \"))\n\nwhile True:\n    n += 1\n    if n % sum(int(i) for i in str(n)) == 0:\n        print(n)\n        break\n", "# n = int(input())\n#\n# while n % sumDigits(n) != 0:\n#     n += 1\n#\n# print(n)\n\n\n\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n", "\ndef sumDigits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n //= 10\n    return s\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)\n", "\n\ndef sumDigits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n //= 10\n    return s\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)\n", "\n\nn = int(input()) \n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "import sys\n\nn = int(sys.stdin.readline().strip())\n\ndef generate_next_self_describing_number(n):\n    while True:\n        n += 1\n        sum_digits = 0\n        for digit in str(n):\n            sum_digits += int(digit)\n        if n % sum_digits == 0:\n            break\n\n    print(n)\n\ngenerate_next_self_describing_number(n)\n", "import sys\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/python3\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\n#function to find sum of digits\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n#loop to find the smallest number that is divisible by the sum of its digits\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\n\nn = int(input(\"Enter a number: \"))\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(\"The next harshad number is: \", n)\n", "#!/usr/bin/python3\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input(\"Enter a number: \"))\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "\nprint(2+2)\n", "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n", "\n\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)\n", "\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) \n \ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n \nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\nsum_of_digits = sum([int(d) for d in list(str(n))])\nif n % sum_of_digits == 0:\n    print(n)\nelse:\n    n += 1\n", "import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n", "\nimport sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n", "\nn=int(input())\nfor i in range(n):\n    a=int(input())\n    print(a+1)\n", "\n\n# comment\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef check_num(n):\n    return n % sum([int(i) for i in str(n)]) == 0\n\n\nn = int(input())\n\nwhile True:\n    n += 1\n    if check_num(n):\n        print(n)\n        break\n", "\ndef sum_digits(n):\n\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n", "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "\n\nn = int(input())\n\n\n\n\n\nwhile True:\n\n\n    n += 1\n\n\n    if n % sum([int(i) for i in str(n)]) == 0:\n\n\n        print(n)\n\n\n        break\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef sumDigits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sumDigits(n) != 0:\n    n += 1\n\nprint(n)\n", "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n", "# first version\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\nprint(\"Hello World!\")\n", "import sys\n\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n", "#!/usr/bin/env python3\n\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n", "\n\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in str(n)])\n    if n % sum_of_digits == 0 or n == sum_of_digits:\n        print(n)\n        break\n    else:\n        n += 1\n", "import sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\n\ndef sum_digits(num):\n    sum = 0\n    while num:\n        sum += num % 10\n        num //= 10\n    return sum\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\n\nimport sys\nsum_digits = 0\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0 \n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\n\nprint(n)\n", "\n#\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n", "\n#\n", "\n\ndef check_if_sorted(arr):\n    for i in range(len(arr) - 1):\n        if arr[i] > arr[i+1]:\n            return False\n    return True\n\ndef main():\n    n = int(input().strip())\n    arr = [int(x) for x in input().strip().split()]\n    if check_if_sorted(arr):\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\n\ndef sum_digits(n):\n\ts = 0\n\twhile n:\n\t\ts += n % 10\n\t\tn //= 10\n\treturn s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n", "\ndef sum_digits(n):\n\treturn sum(int(x) for x in str(n))\n\ndef main():\n\tn = int(input())\n\twhile n % sum_digits(n) != 0:\n\t\tn += 1\n\tprint(n)\n\nif __name__ == '__main__':\n\tmain()\n", "\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    \n    return r\nn = int(input())\n\n# Loop until we find a harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"]