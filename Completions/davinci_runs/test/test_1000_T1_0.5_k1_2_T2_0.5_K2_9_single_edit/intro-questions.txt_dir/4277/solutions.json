["n,a,b = map(int,input().split())\n\nprint(n*a if n*a < b else b)", "n,a,b=map(int, input().split())\nprint(min(n*a,b))", "n,a,b = map(int,input().split())\nprint(min(n*a,b))", "N, A, B = map(int, input().split())\nprint(min(A*N, B))", "N, A, B = [int(i) for i in input().split()]\n\nprint((min(A * N, B)))\n", "N,A,B=list(map(int,input().split()))\nprint((min(A*N,B)))\n", "N, A, B = map(int, input().split())\n\nprint(min(A * N, B))", "N,A,B = map(int,input().split())\nprint(min(N*A,B))", "n, a, b = map(int, input().split())\nprint(min(n * a, b))", "n, a, b = list(map(int, input().split()))\nprint((min(n * a, b)))\n", "n,a,b=map(int, input().split())\n\nprint(min(n*a,b))", "n, a, b = map(int, input().split())\nprint(min(n*a, b))", "n,a,b = map(int,input().split())\nprint(min(a*n,b))", "n,a,b=map(int,input().split())\nif n*a<=b:\n    print(n*a)\nelse:\n    print(b)", "N,A,B = map(int,input().split())\n\nif A * N <= B :\n    print(A*N)\nelse :\n    print(B)", "n, a, b = list(map(int, input().split()))\n\ntrain = n * a\ntaxi = b\n\nif train < taxi:\n    print(train)\nelse:\n    print(taxi)\n\n", "n, a, b = map(int, input().split())\n\ntrain = n * a\ntaxi = b\n\nmin_price = [train, taxi]\nprint(min(min_price))", "a, b, c = map(int, input().split())\nif a * b <= c:\n  print(a * b)\nelse:\n  print(c)", "A,B,C = map(int,input().split())\nprint(min(A*B,C))", "n,a,b = map(int,input().split())\nprint(min(a*n,b))", "N,A,B= map(int, input().split())\n\nprint(min(N*A, B))", "N, A, B = map(int, input().split())\nprint(min(N*A, B))", "n, a, b = list(map(int, input().split()))\n\ntrain = n * a\ntaxi = b\n\nanswer = min(train, taxi)\nprint(answer)\n", "#ABC133\nn,a,b = map(int,input().split())\nprint(min(n*a,b))", "n, a, b = map(int, input().split())\n\n# \u96fb\u8eca\u306e\u6599\u91d1\ntrain = n * a\n# \u30bf\u30af\u30b7\u30fc\u306e\u6599\u91d1\u3000b \u5186\ntaxi = b\n\nprint(min(train, taxi))", "n, a, b = list(map(int, input().split()))\nprint((min(n * a, b)))\n\n", "# \u79c1\u305f\u3061\u306fN\u4eba\u3067\u65c5\u884c\u3057\u3088\u3046\u3068\u3057\u3066\u304a\u308a\u3001\u305d\u306e\u4ea4\u901a\u624b\u6bb5\u3068\u3057\u3066\u96fb\u8eca\u3068\u30bf\u30af\u30b7\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\u96fb\u8eca\u3092\u4f7f\u3046\u30681\u4eba\u3042\u305f\u308aA\u5186\u304b\u304b\u308a\u307e\u3059\u3002\n# \u30bf\u30af\u30b7\u30fc\u3092\u4f7f\u3046\u3068N\u4eba\u3067B\u5186\u304b\u304b\u308a\u307e\u3059\u3002\u5168\u54e1\u306e\u4ea4\u901a\u8cbb\u306e\u5408\u8a08\u306f\u6700\u5c0f\u3067\u3044\u304f\u3089\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\nN,A,B = map(int,input().split())\n\nprint(min(N * A,B))", "n, a, b = map(int, input().split())\nprint(min(n*a, b))", "n, a, b = map(int, input().split())\nprint(min(b, n * a))", "N,A,B = list(map(int,input().split()))\n\nD =[]\n\nden = N * A\nD.append(den)\n\nD.append(B)\n\nD.sort()\n\nprint((D[0]))\n", "n,a,b = list(map(int, input().split()))\n\nif n*a>b:\n    print(b)\nelse:\n    print((n*a))\n", "n, a, b = map(int,input().split())\nif n * a > b:\n  print(b)\nelse:\n  print(n*a)", "n, a, b = map(int, input().split())\nprint(min(n*a, b))", "n, a, b = map(int, input().split())\nprint(min(n*a, b))", "def main():\n    n, a, b = map(int, input().split())\n    print(b if n*a >= b else n*a)\n\ndef __starting_point():\n    main()\n__starting_point()", "N, A, B = list(map(int,input().split()))\n\ntrain = N*A\ntaxi = B\n\nif train < taxi:\n    print(train)\nelse:\n    print(taxi)\n", "n, a, b = list(map(int, input().split()))\nprint((min(a * n, b)))\n", "N,A,B=map(int,input().split())\nprint(min(N*A,B))", "n,a,b = map(int,input().split())\nprint(min(a*n,b))", "n, a, b = list(map(int, input().split()))\nprint((min(a*n, b)))\n", "# \u96fb\u8eca\u4ee3\u3068\u30bf\u30af\u30b7\u30fc\u4ee3\u3067\u5c0f\u3055\u3044\u65b9\u3092\u9078\u3076\n# \u96fb\u8eca\u304c\u5b89\u3044\nn,a,b = map(int, input().split())\n\nif a * n <= b:\n    print(a * n)\n# \u30bf\u30af\u30b7\u30fc\u304c\u5b89\u3044\nelse:\n    print(b)", "N,A,B= map(int, input().split())\n\ntrain = N * A\n\nif train <= B:\n    print(train)\nelse:\n    print(B)", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "# A - T or T\n# https://atcoder.jp/contests/abc133/tasks/abc133_a\n\nN, A, B = list(map(int, input().split()))\n\nresult = N * A\n\nif result >= B:\n    result = B\n\nprint(result)\n", "N,A,B=map(int,input().split())\nprint(min(A*N,B))", "n, a, b = map(int,input().split())\nprint(min(a * n,b))", "N, A, B = map(int, input().split())\nif N * A > B:\n  print(B)\nelse:\n  print(N*A)", "n,a,b=map(int, input().rstrip().split())\nprint(min(n*a,b))", "N,A,B = map(int,input().split())\nprint(min(N*A,B))", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "\n\nN, A, B = map(int, input().split())\n\n\ntrain = N * A\ntaxi = B\n\nprint(min(train, B))", "#ABC133 A\n\nN,A,B = list(map(int,input().split()))\nif N*A <= B:\n    print((N*A))\nelse:\n    print(B)\n", "N, A, B = map(int, input().split())\n\ntrain = N * A\ntaxi = B\n\nprint(min(train,taxi))", "N, A, B = map(int, input().split())\n \nprint(min(A*N, B))", "S_list = list(map(int,input().split()))\nn,a,b = S_list\nprint(min(n * a ,b))", "n, a, b = map(int, input().split())\nprint(min(n*a, b))", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "n, a, b = map(int, input().split())\ntrain = n * a\ntaxi = b\nprint(min(train, taxi))", "n,a,b = map(int,input().split())\nprint(min(a*n,b))", "n,a,b = map(int,input().split())\n\nprint(min(n * a,b))", "n, a, b = map(int, input().split())\nif n * a > b:\n    print(b)\nelse:\n    print(n * a)", "N,A,B = map(int,input().split())\n\nansA = N * A\nansB = B\nprint(min(ansA,ansB))", "n,a,b = map(int,input().split())\nprint(n*a if n*a <= b else b)", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "n,a,b = map(int,input().split())\n\nif (n * a) <= b:\n    print(n * a)\n\nelse:\n    print(b)", "N, A, B = [int(n) for n in input().split()]\nprint(min(N*A, B))", "N,A,B = (int(x) for x in input().split())\nprint(min(N*A,B))", "n,a,b=map(int,input().split())\nprint(min(a*n,b))", "  \n# 133a\n\ndef atc_133a(input_value: str) -> int:\n    NAB = input_value.split(\" \")\n    N = int(NAB[0])\n    A = int(NAB[1])\n    B = int(NAB[2])\n\n    return min(N * A, B)\n\n\ninput_value = input()\nprint(atc_133a(input_value))", "(a,b,c)= input().split(\" \")\nif(int(a) * int(b) < int(c)):\n  print(int(a)*int(b))\nelse:\n  print(c)", "N, A, B = map(int, input().split())\nprint(min(N*A, B))", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "N, A, B = map(int, input().split())\nprint(min(A * N, B))", "N,A,B = map(int,input().split())\n\nprice = [N * A, B]\nprint(min(price))", "N, A, B = map(int, input().split())\nprint(min(A*N, B))", "ninzu, train, taxi = map(int, input().split())\n\ntrain_fare = ninzu * train\nminimum_fee = min(taxi, train_fare)\n\nprint(minimum_fee)", "N,A,B=map(int,input().split())\nprint(min(N*A,B))", "n,a,b=map(int,input().split())\nprint(min(a*n,b))", "n,a,b=map(int,input().split())\nprint(min(a*n,b))", "N, A, B = map(int,input().split())\n\nif N * A > B:\n    print(B)\n\nif N * A < B:\n     print(N * A)\n\nif N * A == B:\n    print(N * A)", "N,A,B=map(int, input().split())\nprint(min(N*A,B))", "n,a,b = map(int, input().split())\nif a * n <= b:\n    print(a * n)\nelse:\n    print(b)", "N,A,B = map(int,input().split())\nprint(min(N*A,B))", "n, a, b = list(map(int, input().split()))\n\nprint((min(a*n, b)))\n", "n,a,b=map(int,input().split())\nprint(min(n*a,b))", "def main():\n    n, a, b = list(map(int, input().split()))\n\n    print((min(n*a, b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, a, b = map(int, input().split())\n\ns = int(n*a)\n\nif s >= b:\n  print(b)\nelse:\n  print(s)", "N, A, B = list(map(int, input().split()))\n\nif (N*A) > B:\n    print(B)\nelse:\n    print((N*A))\n", "# n:n\u4eba\n# \u96fb\u8eca\uff1a1\u4eba\u3042\u305f\u308aa\u5186\n# \u30bf\u30af\u30b7\u30fc\uff1an\u4eba\u3067b\u5186\nn, a, b = list(map(int, input().split()))\n\n# \u96fb\u8eca\u306e\u5834\u5408\ntotal = n * a\n\nprint((min(total, b)))\n", "N, A, B = map(int, input().split())\n\n# N\u4eba*A\u5186\u304cB\u5186\u3088\u308a\u5927\u304d\u3044\u5834\u5408\nif N * A > B:\n    print(B)\nelse:\n    print(N * A)", "n, a, b = map(int, input().split())\nprint(min(n * a , b))", "N, A, B = map(int, input().split())\n\ntrain = A * N\ntaxi = B\n\nif train >= taxi:\n    print(taxi)\nelse:\n    print(train)", "n,a,b=map(int,input().split())\n \nif n*a >= b:\n  print(b)\nelse:\n  print(n*a)", "n,a,b = map(int, input().split())\n\nif n*a <= b: print(n*a)\nelse: print(b)", "N, A, B = map(int, input().split())\n\nif N * A < B:\n    print(N * A)\nelse:\n    print(B)", "n, a, b = map(int,input().split())\nprint(min(n*a, b))", "n,a,b=map(int,input().split())\nif n*a<b:\n  print(n*a)\nelse:\n  print(b)", "N, A, B = map(int, input().split())\n\nif B >= A*N:\n  print(A*N)\nelse:\n  print(B)", "def main():\n    n, a, b = list(map(int, input().split()))\n    print((min(n * a, b)))\n    # import sys\n    # sys.setrecursionlimit = 10 ** 7\n    # input = sys.stdin.readline\n    # rstrip()\n    # (int(x) - 1 for x in input().split())\n    pass\n\n\ndef __starting_point():\n    main()\n\n# def binary_search(*, ok, ng, func):\n#     while abs(ok - ng) > 1:\n#         mid = (ok + ng) // 2\n#         if func(mid):\n#             ok = mid\n#         else:\n#             ng = mid\n#     return ok\n\n__starting_point()"]