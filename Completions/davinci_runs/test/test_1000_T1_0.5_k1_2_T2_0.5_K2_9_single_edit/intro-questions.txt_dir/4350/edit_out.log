2022-04-16 06:45:12.382991 num operations 1
2022-04-16 06:45:12.383019 size on input set 1
2022-04-16 06:45:30.272736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# ------------------------------------------------------------------------------#\n\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int, raw_input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(raw_input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n#\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())  #input\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))     #input\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in l for l in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\n#-----------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\n# ------------------------------------------------------------------------------\n\ndef main():\n    n, m = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    # print(arr)\n    # print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n, m = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                k = 1\n                while i + k < n and i - k >= 0 and j + k < m and j - k >= 0:\n                    if arr[i + k][j] == '*' and arr[i - k][j] == '*' and arr[i][j + k] == '*' and arr[i][j - k] == '*':\n                        for l in range(1, k + 1):\n                            arr[i + l][j] = '.'\n                            arr[i - l][j] = '.'\n                            arr[i][j + l] = '.'\n                            arr[i][j - l] = '.'\n                        ans.append([i + 1, j + 1, k])\n                    k += 1\n    if any('*' in sub_list for sub_list in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"
    }
  ],
  "created": 1650091512,
  "object": "edit"
}
2022-04-16 06:45:30.273145 fix syntax errors 9 ["\n\n# ------------------------------------------------------------------------------#\n\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int, raw_input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(raw_input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n#\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())  #input\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))     #input\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in l for l in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n#------------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n#-----------------------------------------------------------------------------#\n\ndef main():\n    n,m = map(int,input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    #print(arr)\n    #print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n# ------------------------------------------------------------------------------\n\ndef main():\n    n, m = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    # print(arr)\n    # print(n,m)\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                #print(i,j)\n                k = 1\n                while i+k < n and i-k >= 0 and j+k < m and j-k >= 0:\n                    if arr[i+k][j] == '*' and arr[i-k][j] == '*' and arr[i][j+k] == '*' and arr[i][j-k] == '*':\n                        for l in range(1,k+1):\n                            arr[i+l][j] = '.'\n                            arr[i-l][j] = '.'\n                            arr[i][j+l] = '.'\n                            arr[i][j-l] = '.'\n                        ans.append([i+1,j+1,k])\n                    k += 1\n    #print(arr)\n    if any('*' in sublist for sublist in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n", "\n\n#------------------------------------------------------------------------------#\n\ndef main():\n    n, m = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    ans = []\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '*':\n                k = 1\n                while i + k < n and i - k >= 0 and j + k < m and j - k >= 0:\n                    if arr[i + k][j] == '*' and arr[i - k][j] == '*' and arr[i][j + k] == '*' and arr[i][j - k] == '*':\n                        for l in range(1, k + 1):\n                            arr[i + l][j] = '.'\n                            arr[i - l][j] = '.'\n                            arr[i][j + l] = '.'\n                            arr[i][j - l] = '.'\n                        ans.append([i + 1, j + 1, k])\n                    k += 1\n    if any('*' in sub_list for sub_list in arr):\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n\nmain()\n"]
2022-04-16 06:45:30.273258 size on output set 9
2022-04-16 06:45:30.273269 num operations 1
2022-04-16 06:45:30.273274 size on input set 1
2022-04-16 06:45:48.169381 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    sys.exit(main())\n"
    },
    {
      "index": 1,
      "text": "\n\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif grid[i,j] == '*':\n\t\t\t\ts = 1\n\t\t\t\twhile i+s < n and j+s < m:\n\t\t\t\t\tif grid[i+s,j+s] == '*':\n\t\t\t\t\t\ts += 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\tif s > 1:\n\t\t\t\t\tgrid[i:i+s,j:j+s] = '.'\n\t\t\t\t\tstars.append([i+1,j+1,s])\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif grid[i,j] == '*':\n\t\t\t\treturn -1\n\treturn stars\n\ndef main():\n\tn, m = map(int, input().split())\n\tgrid = np.array([list(input()) for _ in range(n)])\n\tstars = solve(grid)\n\tif stars == -1:\n\t\tprint(-1)\n\telse:\n\t\tprint(len(stars))\n\t\tfor s in stars:\n\t\t\tprint(*s)\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 2,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                s = 1\n                while i + s < n and j + s < m:\n                    if grid[i + s, j + s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i + s, j:j + s] = '.'\n                    stars.append([i + 1, j + 1, s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                s = 1\n                while i + s < n and j + s < m:\n                    if grid[i + s, j + s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i + s, j:j + s] = '.'\n                    stars.append([i + 1, j + 1, s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650091530,
  "object": "edit"
}
2022-04-16 06:45:48.169724 fix syntax errors 9 ["import sys\n\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    sys.exit(main())\n", "\n\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif grid[i,j] == '*':\n\t\t\t\ts = 1\n\t\t\t\twhile i+s < n and j+s < m:\n\t\t\t\t\tif grid[i+s,j+s] == '*':\n\t\t\t\t\t\ts += 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\tif s > 1:\n\t\t\t\t\tgrid[i:i+s,j:j+s] = '.'\n\t\t\t\t\tstars.append([i+1,j+1,s])\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif grid[i,j] == '*':\n\t\t\t\treturn -1\n\treturn stars\n\ndef main():\n\tn, m = map(int, input().split())\n\tgrid = np.array([list(input()) for _ in range(n)])\n\tstars = solve(grid)\n\tif stars == -1:\n\t\tprint(-1)\n\telse:\n\t\tprint(len(stars))\n\t\tfor s in stars:\n\t\t\tprint(*s)\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                s = 1\n                while i + s < n and j + s < m:\n                    if grid[i + s, j + s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i + s, j:j + s] = '.'\n                    stars.append([i + 1, j + 1, s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                s = 1\n                while i + s < n and j + s < m:\n                    if grid[i + s, j + s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i + s, j:j + s] = '.'\n                    stars.append([i + 1, j + 1, s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i, j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport numpy as np\n\ndef solve(grid):\n    n, m = grid.shape\n    grid = grid.copy()\n    stars = []\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                s = 1\n                while i+s < n and j+s < m:\n                    if grid[i+s,j+s] == '*':\n                        s += 1\n                    else:\n                        break\n                if s > 1:\n                    grid[i:i+s,j:j+s] = '.'\n                    stars.append([i+1,j+1,s])\n    for i in range(n):\n        for j in range(m):\n            if grid[i,j] == '*':\n                return -1\n    return stars\n\ndef main():\n    n, m = map(int, input().split())\n    grid = np.array([list(input()) for _ in range(n)])\n    stars = solve(grid)\n    if stars == -1:\n        print(-1)\n    else:\n        print(len(stars))\n        for s in stars:\n            print(*s)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 06:45:48.169829 size on output set 5
